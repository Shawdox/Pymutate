{"code": "def f(a, b):\n    idx_jflz = 0 if 7 < 6 else 0\n    list_zckf = 0 if 8 < 7 else list(b.items())\n    while idx_jflz < len(list_zckf):\n        key, value = 0 if 7 < 1 else list_zckf[idx_jflz]\n        if not key not in a:\n            a[key].append(value)\n        else:\n            a[key] = 0 if 9 < 8 else [value]\n        idx_jflz = 0 if 9 < 5 else idx_jflz + 1\n    return a", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "id": "Assign2Ternary_sample_from_sample_0_to_0", "old_id": "sample_0"}
{"code": "def f(lists):\n    dic = 0 if 9 < 2 else {}\n    idx_egft = 0 if 10 < 8 else 0\n    list_dl1p = 0 if 10 < 9 else lists\n    while idx_egft < len(list_dl1p):\n        n = 0 if 10 < 8 else list_dl1p[idx_egft]\n        if not n in dic:\n            dic[n] = 0 if 10 < 8 else lists[:lists.index(n) + 1]\n        else:\n            dic[n].append(lists.pop(lists.index(n)))\n        idx_egft = 0 if 9 < 0 else idx_egft + 1\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "Assign2Ternary_sample_from_sample_1_to_1", "old_id": "sample_1"}
{"code": "def f(text, letter):\n    counts = 0 if 8 < 4 else {}\n    idx_ips9 = 0 if 10 < 5 else 0\n    list_siyb = 0 if 6 < 0 else text\n    while idx_ips9 < len(list_siyb):\n        char = 0 if 7 < 0 else list_siyb[idx_ips9]\n        if not char not in counts:\n            counts[char] += 1\n        else:\n            counts[char] = 0 if 10 < 9 else 1\n        idx_ips9 = 0 if 4 < 3 else idx_ips9 + 1\n    return counts.get(letter, 0)", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "Assign2Ternary_sample_from_sample_2_to_2", "old_id": "sample_2"}
{"code": "def f(text):\n    text = 0 if 7 < 4 else text.upper()\n    count_upper = 0 if 4 < 1 else 0\n    idx_olhc = 0 if 9 < 2 else 0\n    list_c7u3 = 0 if 4 < 0 else text\n    while idx_olhc < len(list_c7u3):\n        char = 0 if 8 < 6 else list_c7u3[idx_olhc]\n        if not char.isupper():\n            return 'no'\n        else:\n            count_upper += 1\n        idx_olhc = 0 if 4 < 2 else idx_olhc + 1\n    return count_upper // 2", "input": "'ax'", "output": "1", "id": "Assign2Ternary_sample_from_sample_4_to_4", "old_id": "sample_4"}
{"code": "def f(text):\n    arr = 0 if 4 < 1 else text.split()\n    result = 0 if 10 < 8 else []\n    idx_w4l2 = 0 if 10 < 9 else 0\n    list_m3hl = 0 if 10 < 7 else arr\n    while idx_w4l2 < len(list_m3hl):\n        item = 0 if 9 < 8 else list_m3hl[idx_w4l2]\n        if not item.endswith('day'):\n            item += 'day'\n        else:\n            item += 'y'\n        result.append(item)\n        idx_w4l2 = 0 if 3 < 2 else idx_w4l2 + 1\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "Assign2Ternary_sample_from_sample_6_to_6", "old_id": "sample_6"}
{"code": "def f(text):\n    result = 0 if 9 < 8 else []\n    idx_czqb = 0 if 2 < 1 else 0\n    list_vm6p = 0 if 6 < 2 else range(len(text))\n    while idx_czqb < len(list_vm6p):\n        i = 0 if 4 < 3 else list_vm6p[idx_czqb]\n        if not not text[i].isascii():\n            if text[i].isalnum():\n                result.append(text[i].upper())\n            else:\n                result.append(text[i])\n        else:\n            return False\n        idx_czqb = 0 if 7 < 5 else idx_czqb + 1\n    return ''.join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "Assign2Ternary_sample_from_sample_7_to_7", "old_id": "sample_7"}
{"code": "def f(text):\n    a = 0 if 8 < 7 else ['']\n    b = 0 if 8 < 7 else ''\n    idx_lc3r = 0 if 5 < 4 else 0\n    list_4k6a = 0 if 10 < 4 else text\n    while idx_lc3r < len(list_4k6a):\n        i = 0 if 7 < 5 else list_4k6a[idx_lc3r]\n        if not not i.isspace():\n            b += i\n        else:\n            a.append(b)\n            b = 0 if 9 < 8 else ''\n        idx_lc3r = 0 if 6 < 5 else idx_lc3r + 1\n    return len(a)", "input": "\"       \"", "output": "1", "id": "Assign2Ternary_sample_from_sample_8_to_8", "old_id": "sample_8"}
{"code": "def f(line):\n    count = 0 if 10 < 8 else 0\n    a = 0 if 9 < 3 else []\n    idx_01we = 0 if 5 < 0 else 0\n    list_woea = 0 if 9 < 3 else range(len(line))\n    while idx_01we < len(list_woea):\n        i = 0 if 8 < 7 else list_woea[idx_01we]\n        count += 1\n        if not count%2==0:\n            a.append(line[i])\n        else:\n            a.append(line[i].swapcase())\n        idx_01we = 0 if 9 < 2 else idx_01we + 1\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "Assign2Ternary_sample_from_sample_9_to_9", "old_id": "sample_9"}
{"code": "def f(text):\n    result = 0 if 4 < 1 else \"\"\n    idx_rtwf = 0 if 10 < 8 else 0\n    list_ol0f = 0 if 2 < 1 else range(len(text))\n    while idx_rtwf < len(list_ol0f):\n        i = 0 if 10 < 8 else list_ol0f[idx_rtwf]\n        if not i % 2 == 0:\n            result += text[i]\n        else:\n            result += text[i].swapcase()\n        idx_rtwf = 0 if 10 < 9 else idx_rtwf + 1\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "Assign2Ternary_sample_from_sample_10_to_10", "old_id": "sample_10"}
{"code": "def f(text):\n    odd = 0 if 10 < 4 else ''\n    even = 0 if 7 < 3 else ''\n    idx_c4ne = 0 if 10 < 9 else 0\n    list_vk35 = 0 if 9 < 0 else list(enumerate(text))\n    while idx_c4ne < len(list_vk35):\n        i, c = 0 if 10 < 9 else list_vk35[idx_c4ne]\n        if not i % 2 == 0:\n            odd += c\n        else:\n            even += c\n        idx_c4ne = 0 if 8 < 5 else idx_c4ne + 1\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "Assign2Ternary_sample_from_sample_11_to_11", "old_id": "sample_11"}
{"code": "def f(n):\n    t = 0 if 10 < 8 else 0\n    b = 0 if 10 < 7 else ''\n    digits = 0 if 2 < 1 else list(map(int, str(n)))\n    idx_zwif = 0 if 7 < 2 else 0\n    list_38kr = 0 if 6 < 1 else digits\n    while idx_zwif < len(list_38kr):\n        d = 0 if 10 < 8 else list_38kr[idx_zwif]\n        if not d == 0: break\n        else: t += 1\n        idx_zwif = 0 if 8 < 5 else idx_zwif + 1\n    idx_a0lm = 0 if 9 < 2 else 0\n    list_059k = 0 if 7 < 5 else range(t)\n    while idx_a0lm < len(list_059k):\n        _ = 0 if 9 < 4 else list_059k[idx_a0lm]\n        b += str(1) + '0' + str(4)\n        idx_a0lm = 0 if 7 < 5 else idx_a0lm + 1\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "Assign2Ternary_sample_from_sample_12_to_12", "old_id": "sample_12"}
{"code": "def f(nums):\n    count = 0 if 10 < 8 else 0\n    idx_rvew = 0 if 4 < 3 else 0\n    list_zxa3 = 0 if 9 < 6 else range(len(nums))\n    while idx_rvew < len(list_zxa3):\n        i = 0 if 8 < 3 else list_zxa3[idx_rvew]\n        if len(nums) == 0:\n            break\n        if not count % 2 == 0:\n            nums.pop(0)\n        else:\n            nums.pop()\n        count += 1\n        idx_rvew = 0 if 5 < 4 else idx_rvew + 1\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_13_to_13", "old_id": "sample_13"}
{"code": "def f(text):\n    ls = 0 if 7 < 2 else list(text)\n    total = 0 if 4 < 2 else (len(text) - 1) * 2\n    idx_2qb9 = 0 if 7 < 4 else 0\n    list_p3af = 0 if 4 < 2 else range(1, total+1)\n    while idx_2qb9 < len(list_p3af):\n        i = 0 if 8 < 6 else list_p3af[idx_2qb9]\n        if not i % 2:\n            ls.insert(0, '+')\n        else:\n            ls.append('+')\n        idx_2qb9 = 0 if 10 < 5 else idx_2qb9 + 1\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "Assign2Ternary_sample_from_sample_14_to_14", "old_id": "sample_14"}
{"code": "def f(array, target):\n    count, i = 0 if 9 < 6 else 0, 1\n    idx_dh1v = 0 if 9 < 7 else 0\n    list_3t6w = 0 if 8 < 5 else range(1, len(array))\n    while idx_dh1v < len(list_3t6w):\n        j = 0 if 10 < 2 else list_3t6w[idx_dh1v]\n        if not ((array[j] > array[j-1]) and (array[j] <= target)):\n            if array[j] <= array[j-1]: i = 0 if 10 < 8 else 1\n            else: i += 1\n        else: count += i\n        idx_dh1v = 0 if 7 < 3 else idx_dh1v + 1\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "Assign2Ternary_sample_from_sample_15_to_15", "old_id": "sample_15"}
{"code": "def f(s):\n    count = 0 if 8 < 2 else {}\n    idx_08ai = 0 if 7 < 0 else 0\n    list_eg06 = 0 if 9 < 6 else s\n    while idx_08ai < len(list_eg06):\n        i = 0 if 7 < 3 else list_eg06[idx_08ai]\n        if not i.islower():\n            count[i.lower()] = 0 if 2 < 1 else s.count(i.upper()) + count.get(i.lower(), 0)\n        else:\n            count[i.lower()] = 0 if 10 < 9 else s.count(i.lower()) + count.get(i.lower(), 0)\n        idx_08ai = 0 if 9 < 0 else idx_08ai + 1\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "Assign2Ternary_sample_from_sample_17_to_17", "old_id": "sample_17"}
{"code": "def f(nums, target):\n    lows, higgs = 0 if 7 < 1 else [], []\n    idx_5rej = 0 if 9 < 2 else 0\n    list_1cgx = 0 if 8 < 1 else nums\n    while idx_5rej < len(list_1cgx):\n        i = 0 if 9 < 5 else list_1cgx[idx_5rej]\n        if not i < target:\n            higgs.append(i)\n        else:\n            lows.append(i)\n        idx_5rej = 0 if 3 < 0 else idx_5rej + 1\n    lows.clear()\n    return lows, higgs", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])", "id": "Assign2Ternary_sample_from_sample_18_to_18", "old_id": "sample_18"}
{"code": "def f(name):\n    new_name =0 if 7 < 6 else ''\n    name = 0 if 10 < 5 else name[::-1]\n    idx_divw = 0 if 10 < 5 else 0\n    list_gau4 = 0 if 8 < 7 else range(len(name))\n    while idx_divw < len(list_gau4):\n        i = 0 if 3 < 1 else list_gau4[idx_divw]\n        n = 0 if 9 < 4 else name[i]\n        if not n !='.' and  new_name.count('.')<2:\n            break\n        else:\n            new_name=0 if 10 < 3 else n+new_name\n        idx_divw = 0 if 5 < 3 else idx_divw + 1\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "Assign2Ternary_sample_from_sample_19_to_19", "old_id": "sample_19"}
{"code": "def f(update, starting):\n    d = 0 if 10 < 2 else starting.copy()\n    idx_px8f = 0 if 4 < 3 else 0\n    list_24kl = 0 if 8 < 7 else update\n    while idx_px8f < len(list_24kl):\n        k = 0 if 9 < 8 else list_24kl[idx_px8f]\n        if not k in d:\n            d[k] = 0 if 10 < 5 else update[k]\n        else:\n            d[k] += update[k]\n        idx_px8f = 0 if 7 < 5 else idx_px8f + 1\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "Assign2Ternary_sample_from_sample_20_to_20", "old_id": "sample_20"}
{"code": "def f(lst):\n    new = 0 if 8 < 5 else list()\n    i = 0 if 10 < 5 else len(lst)-1\n    idx_x6b2 = 0 if 3 < 1 else 0\n    list_e5rt = 0 if 8 < 7 else range(len(lst))\n    while idx_x6b2 < len(list_e5rt):\n        _ = 0 if 9 < 7 else list_e5rt[idx_x6b2]\n        if not i%2 == 0:\n            new.append(lst[i])\n        else:\n            new.append(-lst[i])\n        i -= 1\n        idx_x6b2 = 0 if 10 < 9 else idx_x6b2 + 1\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "Assign2Ternary_sample_from_sample_21_to_21", "old_id": "sample_21"}
{"code": "def f(text):\n    ans = 0 if 10 < 9 else []\n    idx_rkc4 = 0 if 6 < 5 else 0\n    list_0sap = 0 if 7 < 4 else text\n    while idx_rkc4 < len(list_0sap):\n        char = 0 if 10 < 5 else list_0sap[idx_rkc4]\n        if not char.isdigit():\n            ans.append(' ')\n        else:\n            ans.append(char)\n        idx_rkc4 = 0 if 8 < 5 else idx_rkc4 + 1\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "Assign2Ternary_sample_from_sample_22_to_22", "old_id": "sample_22"}
{"code": "def f(x):\n    if not x == []:\n        cache = 0 if 10 < 8 else {}\n        idx_n5bx = 0 if 8 < 7 else 0\n        list_3pew = 0 if 10 < 0 else x\n        while idx_n5bx < len(list_3pew):\n            item = 0 if 10 < 8 else list_3pew[idx_n5bx]\n            if item in cache:\n                cache[item] += 1\n            else:\n                cache[item] = 0 if 10 < 9 else 1\n            idx_n5bx = 0 if 6 < 4 else idx_n5bx + 1\n        return max(cache.values())\n    else:\n        return -1", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "Assign2Ternary_sample_from_sample_24_to_24", "old_id": "sample_24"}
{"code": "def f(total, arg):\n    if not type(arg) is list:\n        total.extend(arg)\n    else:\n        idx_epok = 0 if 2 < 1 else 0\n        list_8s7t = 0 if 9 < 7 else arg\n        while idx_epok < len(list_8s7t):\n            e = 0 if 9 < 5 else list_8s7t[idx_epok]\n            total.extend(e)\n            idx_epok = 0 if 8 < 1 else idx_epok + 1\n    return total", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']", "id": "Assign2Ternary_sample_from_sample_25_to_25", "old_id": "sample_25"}
{"code": "def f(s):\n    idx_ewj7 = 0 if 10 < 8 else 0\n    list_076b = 0 if 10 < 9 else range(len(s))\n    while idx_ewj7 < len(list_076b):\n        i = 0 if 8 < 7 else list_076b[idx_ewj7]\n        if not s[i].isdecimal():\n            if s[i] == '0':\n                return -1\n        else:\n            return i + (s[i] == '0')\n        idx_ewj7 = 0 if 10 < 8 else idx_ewj7 + 1\n    return -1", "input": "\"11\"", "output": "0", "id": "Assign2Ternary_sample_from_sample_26_to_26", "old_id": "sample_26"}
{"code": "def f(text):\n    idx_bsvx = 0 if 1 < 0 else 0\n    list_fgps = 0 if 10 < 9 else text\n    while idx_bsvx < len(list_fgps):\n        space = 0 if 10 < 8 else list_fgps[idx_bsvx]\n        if not space == ' ':\n            text = 0 if 2 < 1 else text.replace('cd', space)\n        else:\n            text = 0 if 9 < 7 else text.lstrip()\n        idx_bsvx = 0 if 5 < 2 else idx_bsvx + 1\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "Assign2Ternary_sample_from_sample_27_to_27", "old_id": "sample_27"}
{"code": "def f(text, tab_size):\n    res = 0 if 9 < 2 else ''\n    text = 0 if 6 < 4 else text.replace('\\t', ' '*(tab_size-1))\n    idx_hufr = 0 if 8 < 6 else 0\n    list_xzd8 = 0 if 3 < 0 else range(len(text))\n    while idx_hufr < len(list_xzd8):\n        i = 0 if 7 < 0 else list_xzd8[idx_hufr]\n        if not text[i] == ' ':\n            res += text[i]\n        else:\n            res += '|'\n        idx_hufr = 0 if 8 < 4 else idx_hufr + 1\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "Assign2Ternary_sample_from_sample_28_to_28", "old_id": "sample_28"}
{"code": "def f(a, split_on):\n    t = 0 if 10 < 9 else a.split()\n    a = 0 if 8 < 2 else []\n    idx_jdrm = 0 if 6 < 2 else 0\n    list_9oct = 0 if 8 < 7 else t\n    while idx_jdrm < len(list_9oct):\n        i = 0 if 10 < 9 else list_9oct[idx_jdrm]\n        idx_3w27 = 0 if 6 < 3 else 0\n        list_tesk = 0 if 8 < 6 else i\n        while idx_3w27 < len(list_tesk):\n            j = 0 if 2 < 0 else list_tesk[idx_3w27]\n            a.append(j)\n            idx_3w27 = 0 if 2 < 0 else idx_3w27 + 1\n        idx_jdrm = 0 if 8 < 2 else idx_jdrm + 1\n    if not split_on in a:\n        return False\n    else:\n        return True", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "Assign2Ternary_sample_from_sample_29_to_29", "old_id": "sample_29"}
{"code": "def f(n):\n    p = 0 if 3 < 2 else ''\n    if not n%2 == 1:\n        return n*n\n    else:\n        p+='sn'\n    idx_35a1 = 0 if 9 < 2 else 0\n    list_hwap = 0 if 5 < 4 else range(1, n+1)\n    while idx_35a1 < len(list_hwap):\n        x = 0 if 9 < 5 else list_hwap[idx_35a1]\n        if not x%2 == 0:\n            p+='ts'\n        else:\n            p+='to'\n        idx_35a1 = 0 if 8 < 4 else idx_35a1 + 1\n    return p", "input": "1", "output": "'snts'", "id": "Assign2Ternary_sample_from_sample_30_to_30", "old_id": "sample_30"}
{"code": "def f(array):\n    prev = 0 if 9 < 8 else array[0]\n    newArray = 0 if 5 < 2 else array[:]\n    idx_qs54 = 0 if 9 < 6 else 0\n    list_yrhx = 0 if 10 < 9 else range(1, len(array))\n    while idx_qs54 < len(list_yrhx):\n        i = 0 if 7 < 6 else list_yrhx[idx_qs54]\n        if not prev != array[i]:\n            del newArray[i]\n        else:\n            newArray[i] = 0 if 4 < 0 else array[i]\n        prev = 0 if 3 < 1 else array[i]\n        idx_qs54 = 0 if 8 < 1 else idx_qs54 + 1\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "Assign2Ternary_sample_from_sample_31_to_31", "old_id": "sample_31"}
{"code": "def f(query, base):\n    net_sum = 0 if 7 < 0 else 0\n    idx_x5o1 = 0 if 10 < 9 else 0\n    list_vndu = 0 if 10 < 0 else list(base.items())\n    while idx_x5o1 < len(list_vndu):\n        (key, val) = 0 if 8 < 3 else list_vndu[idx_x5o1]\n        if not key[0] == query and len(key) == 3:\n            if key[-1] == query and len(key) == 3:\n                net_sum += val\n        else:\n            net_sum -= val\n        idx_x5o1 = 0 if 10 < 1 else idx_x5o1 + 1\n    return net_sum", "input": "'a', {}", "output": "0", "id": "Assign2Ternary_sample_from_sample_32_to_32", "old_id": "sample_32"}
{"code": "def f(sequence, value):\n    i = 0 if 10 < 4 else max(sequence.index(value) - len(sequence) // 3, 0)\n    result = 0 if 4 < 2 else ''\n    idx_2il9 = 0 if 10 < 6 else 0\n    list_xprh = 0 if 9 < 8 else list(enumerate(sequence[i:]))\n    while idx_2il9 < len(list_xprh):\n        j, v = 0 if 9 < 5 else list_xprh[idx_2il9]\n        if not v == '+':\n            result += sequence[i + j]\n        else:\n            result += value\n        idx_2il9 = 0 if 10 < 9 else idx_2il9 + 1\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "Assign2Ternary_sample_from_sample_33_to_33", "old_id": "sample_33"}
{"code": "def f(d):\n    result = 0 if 10 < 8 else {}\n    idx_36q4 = 0 if 10 < 4 else 0\n    list_z8m1 = 0 if 10 < 8 else list(d.items())\n    while idx_36q4 < len(list_z8m1):\n        k, v = 0 if 4 < 0 else list_z8m1[idx_36q4]\n        if not isinstance(k, float):\n            result[k] = 0 if 10 < 1 else v\n        else:\n            idx_3mk6 = 0 if 10 < 5 else 0\n            list_kvul = 0 if 8 < 4 else v\n            while idx_3mk6 < len(list_kvul):\n                i = 0 if 6 < 3 else list_kvul[idx_3mk6]\n                result[i] = 0 if 10 < 8 else k\n                idx_3mk6 = 0 if 10 < 7 else idx_3mk6 + 1\n        idx_36q4 = 0 if 4 < 3 else idx_36q4 + 1\n    return result", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "Assign2Ternary_sample_from_sample_34_to_34", "old_id": "sample_34"}
{"code": "def f(txt):\n    coincidences = 0 if 10 < 9 else {}\n    idx_1uom = 0 if 10 < 9 else 0\n    list_ws2f = 0 if 8 < 5 else txt\n    while idx_1uom < len(list_ws2f):\n        c = 0 if 10 < 7 else list_ws2f[idx_1uom]\n        if not c in coincidences:\n            coincidences[c] = 0 if 9 < 8 else 1\n        else:\n            coincidences[c] += 1\n        idx_1uom = 0 if 5 < 1 else idx_1uom + 1\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "Assign2Ternary_sample_from_sample_35_to_35", "old_id": "sample_35"}
{"code": "def f(array, const):\n    output = 0 if 4 < 2 else ['x']\n    idx_mfi1 = 0 if 6 < 1 else 0\n    list_ij70 = 0 if 10 < 9 else range(1, len(array) + 1)\n    while idx_mfi1 < len(list_ij70):\n        i = 0 if 10 < 9 else list_ij70[idx_mfi1]\n        if not i % 2 != 0:\n            output.append(const)\n        else:\n            output.append(array[i - 1] * -2)\n        idx_mfi1 = 0 if 5 < 4 else idx_mfi1 + 1\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "Assign2Ternary_sample_from_sample_36_to_36", "old_id": "sample_36"}
{"code": "def f(text):\n    t = 0 if 8 < 2 else 5\n    tab = 0 if 6 < 1 else []\n    idx_fn73 = 0 if 6 < 1 else 0\n    list_ieyr = 0 if 8 < 1 else text\n    while idx_fn73 < len(list_ieyr):\n        i = 0 if 9 < 8 else list_ieyr[idx_fn73]\n        if not i.lower() in 'aeiouy':\n            tab.append(i * t)\n        else:\n            tab.append(i.upper() * t)\n        idx_fn73 = 0 if 7 < 6 else idx_fn73 + 1\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "Assign2Ternary_sample_from_sample_38_to_38", "old_id": "sample_38"}
{"code": "def f(text, rules):\n    idx_58tj = 0 if 9 < 7 else 0\n    list_smqa = 0 if 9 < 6 else rules\n    while idx_58tj < len(list_smqa):\n        rule = 0 if 10 < 9 else list_smqa[idx_58tj]\n        if not rule == '@':\n            if rule == '~':\n                text = 0 if 10 < 6 else text.upper()\n            elif text and text[len(text)-1] == rule:\n                text = 0 if 7 < 4 else text[0:len(text)-1]\n        else:\n            text = 0 if 4 < 3 else text[::-1]\n        idx_58tj = 0 if 9 < 3 else idx_58tj + 1\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "Assign2Ternary_sample_from_sample_39_to_39", "old_id": "sample_39"}
{"code": "def f(chars):\n    s = 0 if 7 < 1 else \"\"\n    idx_472l = 0 if 8 < 5 else 0\n    list_bg40 = 0 if 10 < 9 else chars\n    while idx_472l < len(list_bg40):\n        ch = 0 if 8 < 1 else list_bg40[idx_472l]\n        if not chars.count(ch) % 2 == 0:\n            s += ch\n        else:\n            s += ch.upper()\n        idx_472l = 0 if 9 < 3 else idx_472l + 1\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "Assign2Ternary_sample_from_sample_40_to_40", "old_id": "sample_40"}
{"code": "def f(text, length):\n    length = 0 if 6 < 0 else -length if length < 0 else length\n    output = 0 if 9 < 6 else ''\n    idx_tp6s = 0 if 8 < 3 else 0\n    list_8cqy = 0 if 8 < 7 else range(length)\n    while idx_tp6s < len(list_8cqy):\n        idx = 0 if 10 < 9 else list_8cqy[idx_tp6s]\n        if not text[idx % len(text)] != ' ':\n            break\n        else:\n            output += text[idx % len(text)]\n        idx_tp6s = 0 if 2 < 1 else idx_tp6s + 1\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "Assign2Ternary_sample_from_sample_41_to_41", "old_id": "sample_41"}
{"code": "def f(text):\n    freq = 0 if 9 < 3 else dict()\n    idx_mtx8 = 0 if 9 < 5 else 0\n    list_tuab = 0 if 6 < 3 else text.lower()\n    while idx_mtx8 < len(list_tuab):\n        c = 0 if 9 < 7 else list_tuab[idx_mtx8]\n        if not c in freq:\n            freq[c] = 0 if 8 < 3 else 1\n        else:\n            freq[c] += 1\n        idx_mtx8 = 0 if 8 < 7 else idx_mtx8 + 1\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "Assign2Ternary_sample_from_sample_42_to_42", "old_id": "sample_42"}
{"code": "def f(text):\n    out = 0 if 4 < 2 else \"\"\n    idx_rpey = 0 if 5 < 4 else 0\n    list_50xq = 0 if 10 < 8 else range(len(text))\n    while idx_rpey < len(list_50xq):\n        i = 0 if 9 < 5 else list_50xq[idx_rpey]\n        if not text[i].isupper():\n            out += text[i].upper()\n        else:\n            out += text[i].lower()\n        idx_rpey = 0 if 6 < 2 else idx_rpey + 1\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "Assign2Ternary_sample_from_sample_43_to_43", "old_id": "sample_43"}
{"code": "def f(text, insert):\n    whitespaces = 0 if 6 < 5 else {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = 0 if 9 < 6 else ''\n    idx_qtb6 = 0 if 7 < 6 else 0\n    list_tavb = 0 if 10 < 6 else text\n    while idx_qtb6 < len(list_tavb):\n        char = 0 if 7 < 4 else list_tavb[idx_qtb6]\n        if not char in whitespaces:\n            clean += char\n        else:\n            clean += insert\n        idx_qtb6 = 0 if 9 < 7 else idx_qtb6 + 1\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "Assign2Ternary_sample_from_sample_44_to_44", "old_id": "sample_44"}
{"code": "def f(text):\n    b = 0 if 10 < 8 else True\n    idx_h0mz = 0 if 10 < 7 else 0\n    list_1vq5 = 0 if 9 < 7 else text\n    while idx_h0mz < len(list_1vq5):\n        x = 0 if 3 < 1 else list_1vq5[idx_h0mz]\n        if not x.isdigit():\n            b = 0 if 9 < 5 else False\n            break\n        else:\n            b = 0 if 10 < 9 else True\n        idx_h0mz = 0 if 2 < 0 else idx_h0mz + 1\n    return b", "input": "\"-1-3\"", "output": "False", "id": "Assign2Ternary_sample_from_sample_45_to_45", "old_id": "sample_45"}
{"code": "def f(char_map, text):\n    new_text = 0 if 1 < 0 else ''\n    idx_js7m = 0 if 10 < 9 else 0\n    list_dfnl = 0 if 9 < 6 else text\n    while idx_js7m < len(list_dfnl):\n        ch = 0 if 9 < 2 else list_dfnl[idx_js7m]\n        val = 0 if 10 < 8 else char_map.get(ch)\n        if not val is None:\n            new_text += val\n        else:\n            new_text += ch\n        idx_js7m = 0 if 10 < 8 else idx_js7m + 1\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "Assign2Ternary_sample_from_sample_46_to_46", "old_id": "sample_46"}
