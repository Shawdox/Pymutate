{"code": "def f(lists):\n    dic = {}\n    idx_5uf0 = 0\n    list_5sx9 = lists\n    while idx_5uf0 < len(list_5sx9):\n        n = list_5sx9[idx_5uf0]\n        if not n in dic:\n            dic[n] = lists[:lists.index(n) + (49 + -48)]\n        else:\n            dic[n].append(lists.pop(lists.index(n)))\n        idx_5uf0 = idx_5uf0 + 1\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "For2While_sample_from_sample_2_to_0", "old_id": "sample_2"}
{"code": "def f(text, letter):\n    counts = {}\n    idx_vriq = 0\n    list_l42m = text\n    while idx_vriq < len(list_l42m):\n        char = list_l42m[idx_vriq]\n        if not char not in counts:\n            counts[char] += (35 + -34)\n        else:\n            counts[char] = (59 + -58)\n        idx_vriq = idx_vriq + 1\n    return counts.get(letter, (77 + -77))", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "For2While_sample_from_sample_3_to_1", "old_id": "sample_3"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = (95 + -95)\n    idx_39w6 = 0\n    list_yvaf = text\n    while idx_39w6 < len(list_yvaf):\n        char = list_yvaf[idx_39w6]\n        if not char.isupper():\n            return 'no'\n        else:\n            count_upper += (91 + -90)\n        idx_39w6 = idx_39w6 + 1\n    return count_upper // (96 + -94)", "input": "'ax'", "output": "1", "id": "For2While_sample_from_sample_6_to_2", "old_id": "sample_6"}
{"code": "def f(line):\n    count = (1 + -1)\n    a = []\n    idx_adbj = 0\n    list_syth = range(len(line))\n    while idx_adbj < len(list_syth):\n        i = list_syth[idx_adbj]\n        count += (62 + -61)\n        if not count%(89 + -87)==(86 + -86):\n            a.append(line[i])\n        else:\n            a.append(line[i].swapcase())\n        idx_adbj = idx_adbj + 1\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "For2While_sample_from_sample_9_to_3", "old_id": "sample_9"}
{"code": "def f(text):\n    result = \"\"\n    idx_621u = 0\n    list_bqkc = range(len(text))\n    while idx_621u < len(list_bqkc):\n        i = list_bqkc[idx_621u]\n        if not i % (37 + -35) == (18 + -18):\n            result += text[i]\n        else:\n            result += text[i].swapcase()\n        idx_621u = idx_621u + 1\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "For2While_sample_from_sample_10_to_4", "old_id": "sample_10"}
{"code": "def f(text):\n    odd = ''\n    even = ''\n    idx_b1v7 = 0\n    list_z7nj = list(enumerate(text))\n    while idx_b1v7 < len(list_z7nj):\n        i, c = list_z7nj[idx_b1v7]\n        if not i % (98 + -96) == (88 + -88):\n            odd += c\n        else:\n            even += c\n        idx_b1v7 = idx_b1v7 + 1\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "For2While_sample_from_sample_12_to_5", "old_id": "sample_12"}
{"code": "def f(n):\n    t = (44 + -44)\n    b = ''\n    digits = list(map(int, str(n)))\n    idx_i6mv = 0\n    list_zopn = digits\n    while idx_i6mv < len(list_zopn):\n        d = list_zopn[idx_i6mv]\n        if not d == (34 + -34): break\n        else: t += (95 + -94)\n        idx_i6mv = idx_i6mv + 1\n    idx_2tcn = 0\n    list_clfa = range(t)\n    while idx_2tcn < len(list_clfa):\n        _ = list_clfa[idx_2tcn]\n        b += str((7 + -6)) + '0' + str((4 + 0))\n        idx_2tcn = idx_2tcn + 1\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "For2While_sample_from_sample_14_to_6", "old_id": "sample_14"}
{"code": "def f(nums):\n    count = (65 + -65)\n    idx_8tog = 0\n    list_m6b7 = range(len(nums))\n    while idx_8tog < len(list_m6b7):\n        i = list_m6b7[idx_8tog]\n        if len(nums) == (10 + -10):\n            break\n        if not count % (31 + -29) == (52 + -52):\n            nums.pop((74 + -74))\n        else:\n            nums.pop()\n        count += (93 + -92)\n        idx_8tog = idx_8tog + 1\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "For2While_sample_from_sample_15_to_7", "old_id": "sample_15"}
{"code": "def f(text):\n    ls = list(text)\n    total = (len(text) - (67 + -66)) * (76 + -74)\n    idx_no4k = 0\n    list_va61 = range((72 + -71), total+(5 + -4))\n    while idx_no4k < len(list_va61):\n        i = list_va61[idx_no4k]\n        if not i % (68 + -66):\n            ls.insert((26 + -26), '+')\n        else:\n            ls.append('+')\n        idx_no4k = idx_no4k + 1\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "For2While_sample_from_sample_17_to_8", "old_id": "sample_17"}
{"code": "def f(array, target):\n    count, i = (84 + -84), (32 + -31)\n    idx_wgps = 0\n    list_kj94 = range((31 + -30), len(array))\n    while idx_wgps < len(list_kj94):\n        j = list_kj94[idx_wgps]\n        if not ((array[j] > array[j-(65 + -64)]) and (array[j] <= target)):\n            if array[j] <= array[j-(44 + -43)]: i = (56 + -55)\n            else: i += (42 + -41)\n        else: count += i\n        idx_wgps = idx_wgps + 1\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "For2While_sample_from_sample_18_to_9", "old_id": "sample_18"}
{"code": "def f(dic, value):\n    result = []\n    idx_j28q = 0\n    list_23az = dic\n    while idx_j28q < len(list_23az):\n        e = list_23az[idx_j28q]\n        result.append(e[(7 + -7)])\n        if not e[(89 + -88)] == value:\n            result.append(e[(83 + -82)])\n        else:\n            result.reverse()\n        idx_j28q = idx_j28q + 1\n    return result", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']", "id": "For2While_sample_from_sample_19_to_10", "old_id": "sample_19"}
{"code": "def f(s):\n    count = {}\n    idx_5gvk = 0\n    list_yxt2 = s\n    while idx_5gvk < len(list_yxt2):\n        i = list_yxt2[idx_5gvk]\n        if not i.islower():\n            count[i.lower()] = s.count(i.upper()) + count.get(i.lower(), (95 + -95))\n        else:\n            count[i.lower()] = s.count(i.lower()) + count.get(i.lower(), (29 + -29))\n        idx_5gvk = idx_5gvk + 1\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "For2While_sample_from_sample_21_to_11", "old_id": "sample_21"}
{"code": "def f(name):\n    new_name =''\n    name = name[::-(71 + -70)]\n    idx_f361 = 0\n    list_jt8l = range(len(name))\n    while idx_f361 < len(list_jt8l):\n        i = list_jt8l[idx_f361]\n        n = name[i]\n        if not n !='.' and  new_name.count('.')<(56 + -54):\n            break\n        else:\n            new_name=n+new_name\n        idx_f361 = idx_f361 + 1\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "For2While_sample_from_sample_23_to_12", "old_id": "sample_23"}
{"code": "def f(lst):\n    new = list()\n    i = len(lst)-(19 + -18)\n    idx_y0xt = 0\n    list_g895 = range(len(lst))\n    while idx_y0xt < len(list_g895):\n        _ = list_g895[idx_y0xt]\n        if not i%(26 + -24) == (92 + -92):\n            new.append(lst[i])\n        else:\n            new.append(-lst[i])\n        i -= (16 + -15)\n        idx_y0xt = idx_y0xt + 1\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "For2While_sample_from_sample_28_to_13", "old_id": "sample_28"}
{"code": "def f(x):\n    if not x == []:\n        cache = {}\n        idx_tq5p = 0\n        list_t354 = x\n        while idx_tq5p < len(list_t354):\n            item = list_t354[idx_tq5p]\n            if item in cache:\n                cache[item] += (46 + -45)\n            else:\n                cache[item] = (27 + -26)\n            idx_tq5p = idx_tq5p + 1\n        return max(cache.values())\n    else:\n        return -(10 + -9)", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "For2While_sample_from_sample_31_to_14", "old_id": "sample_31"}
{"code": "def f(s):\n    idx_02th = 0\n    list_vn89 = range(len(s))\n    while idx_02th < len(list_vn89):\n        i = list_vn89[idx_02th]\n        if not s[i].isdecimal():\n            if s[i] == '0':\n                return -(56 + -55)\n        else:\n            return i + (s[i] == '0')\n        idx_02th = idx_02th + 1\n    return -(59 + -58)", "input": "\"11\"", "output": "0", "id": "For2While_sample_from_sample_36_to_15", "old_id": "sample_36"}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-(31 + -30)))\n    idx_5geh = 0\n    list_0cvy = range(len(text))\n    while idx_5geh < len(list_0cvy):\n        i = list_0cvy[idx_5geh]\n        if not text[i] == ' ':\n            res += text[i]\n        else:\n            res += '|'\n        idx_5geh = idx_5geh + 1\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "For2While_sample_from_sample_38_to_16", "old_id": "sample_38"}
{"code": "def f(n):\n    p = ''\n    if not n%(90 + -88) == (17 + -16):\n        return n*n\n    else:\n        p+='sn'\n    idx_exm6 = 0\n    list_4vsy = range((63 + -62), n+(21 + -20))\n    while idx_exm6 < len(list_4vsy):\n        x = list_4vsy[idx_exm6]\n        if not x%(22 + -20) == (19 + -19):\n            p+='ts'\n        else:\n            p+='to'\n        idx_exm6 = idx_exm6 + 1\n    return p", "input": "1", "output": "'snts'", "id": "For2While_sample_from_sample_43_to_17", "old_id": "sample_43"}
{"code": "def f(array):\n    prev = array[(29 + -29)]\n    newArray = array[:]\n    idx_vthy = 0\n    list_ef3x = range((69 + -68), len(array))\n    while idx_vthy < len(list_ef3x):\n        i = list_ef3x[idx_vthy]\n        if not prev != array[i]:\n            del newArray[i]\n        else:\n            newArray[i] = array[i]\n        prev = array[i]\n        idx_vthy = idx_vthy + 1\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "For2While_sample_from_sample_45_to_18", "old_id": "sample_45"}
{"code": "def f(query, base):\n    net_sum = (49 + -49)\n    idx_hswp = 0\n    list_dn45 = list(base.items())\n    while idx_hswp < len(list_dn45):\n        (key, val) = list_dn45[idx_hswp]\n        if not key[(48 + -48)] == query and len(key) == (44 + -41):\n            if key[-(62 + -61)] == query and len(key) == (71 + -68):\n                net_sum += val\n        else:\n            net_sum -= val\n        idx_hswp = idx_hswp + 1\n    return net_sum", "input": "'a', {}", "output": "0", "id": "For2While_sample_from_sample_48_to_19", "old_id": "sample_48"}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // (48 + -45), (46 + -46))\n    result = ''\n    idx_dcbg = 0\n    list_h5j2 = list(enumerate(sequence[i:]))\n    while idx_dcbg < len(list_h5j2):\n        j, v = list_h5j2[idx_dcbg]\n        if not v == '+':\n            result += sequence[i + j]\n        else:\n            result += value\n        idx_dcbg = idx_dcbg + 1\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "For2While_sample_from_sample_49_to_20", "old_id": "sample_49"}
{"code": "def f(txt):\n    coincidences = {}\n    idx_b79f = 0\n    list_rgnq = txt\n    while idx_b79f < len(list_rgnq):\n        c = list_rgnq[idx_b79f]\n        if not c in coincidences:\n            coincidences[c] = (94 + -93)\n        else:\n            coincidences[c] += (95 + -94)\n        idx_b79f = idx_b79f + 1\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "For2While_sample_from_sample_50_to_21", "old_id": "sample_50"}
{"code": "def f(array, const):\n    output = ['x']\n    idx_lmz4 = 0\n    list_sk4i = range((30 + -29), len(array) + (61 + -60))\n    while idx_lmz4 < len(list_sk4i):\n        i = list_sk4i[idx_lmz4]\n        if not i % (53 + -51) != (60 + -60):\n            output.append(const)\n        else:\n            output.append(array[i - (31 + -30)] * -(67 + -65))\n        idx_lmz4 = idx_lmz4 + 1\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "For2While_sample_from_sample_51_to_22", "old_id": "sample_51"}
{"code": "def f(text, ch):\n    result = []\n    idx_wqcm = 0\n    list_fei5 = text.splitlines()\n    while idx_wqcm < len(list_fei5):\n        line = list_fei5[idx_wqcm]\n        if not len(line) > (26 + -26) and line[(20 + -20)] == ch:\n            result.append(line.upper())\n        else:\n            result.append(line.lower())\n        idx_wqcm = idx_wqcm + 1\n    return \"\\n\".join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "For2While_sample_from_sample_53_to_23", "old_id": "sample_53"}
{"code": "def f(text):\n    t = (78 + -73)\n    tab = []\n    idx_k402 = 0\n    list_8l07 = text\n    while idx_k402 < len(list_8l07):\n        i = list_8l07[idx_k402]\n        if not i.lower() in 'aeiouy':\n            tab.append(i * t)\n        else:\n            tab.append(i.upper() * t)\n        idx_k402 = idx_k402 + 1\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "For2While_sample_from_sample_54_to_24", "old_id": "sample_54"}
{"code": "def f(text, rules):\n    idx_scdl = 0\n    list_1jpa = rules\n    while idx_scdl < len(list_1jpa):\n        rule = list_1jpa[idx_scdl]\n        if not rule == '@':\n            if rule == '~':\n                text = text.upper()\n            elif text and text[len(text)-(53 + -52)] == rule:\n                text = text[(59 + -59):len(text)-(81 + -80)]\n        else:\n            text = text[::-(58 + -57)]\n        idx_scdl = idx_scdl + 1\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "For2While_sample_from_sample_56_to_25", "old_id": "sample_56"}
{"code": "def f(chars):\n    s = \"\"\n    idx_n04m = 0\n    list_z3j8 = chars\n    while idx_n04m < len(list_z3j8):\n        ch = list_z3j8[idx_n04m]\n        if not chars.count(ch) % (26 + -24) == (73 + -73):\n            s += ch\n        else:\n            s += ch.upper()\n        idx_n04m = idx_n04m + 1\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "For2While_sample_from_sample_60_to_26", "old_id": "sample_60"}
{"code": "def f(text, length):\n    length = -length if length < (78 + -78) else length\n    output = ''\n    idx_sb0w = 0\n    list_gi0q = range(length)\n    while idx_sb0w < len(list_gi0q):\n        idx = list_gi0q[idx_sb0w]\n        if not text[idx % len(text)] != ' ':\n            break\n        else:\n            output += text[idx % len(text)]\n        idx_sb0w = idx_sb0w + 1\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "For2While_sample_from_sample_61_to_27", "old_id": "sample_61"}
{"code": "def f(text):\n    freq = dict()\n    idx_ubay = 0\n    list_us8c = text.lower()\n    while idx_ubay < len(list_us8c):\n        c = list_us8c[idx_ubay]\n        if not c in freq:\n            freq[c] = (58 + -57)\n        else:\n            freq[c] += (81 + -80)\n        idx_ubay = idx_ubay + 1\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "For2While_sample_from_sample_62_to_28", "old_id": "sample_62"}
