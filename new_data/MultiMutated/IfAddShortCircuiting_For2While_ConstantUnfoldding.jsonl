{"code": "def f(text):\n    new_text = list(text)\n    idx_irg1 = (87 + -87)\n    list_8719 = '+'\n    while idx_irg1 < len(list_8719):\n        i = list_8719[idx_irg1]\n        if i in new_text and (((True or False) and (False or True)) and (((75 + -65) > (16 + -8)) or ((36 + -26) < (85 + -77)))):\n            new_text.remove(i)\n        idx_irg1 = idx_irg1 + (43 + -42)\n    return ''.join(new_text)", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'", "id": "ConstantUnfoldding_sample_from_sample_0_to_0", "old_id": "sample_0"}
{"code": "def f(text, lower, upper):\n    count = (60 + -60)\n    new_text = list()\n    idx_x1qw = (86 + -86)\n    list_1boy = text\n    while idx_x1qw < len(list_1boy):\n        char = list_1boy[idx_x1qw]\n        char = lower if char.isdecimal() else upper\n        if char in ['p', 'C'] and (((True or False) and (False or True)) and (((35 + -29) > (36 + -31)) or ((5 + 1) < (40 + -35)))):\n            count += (81 + -80)\n        new_text.append(char)\n        idx_x1qw = idx_x1qw + (51 + -50)\n    return count, ''.join(new_text)", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')", "id": "ConstantUnfoldding_sample_from_sample_1_to_1", "old_id": "sample_1"}
{"code": "def f(list):\n    original = list[:]\n    while len(list) > (91 + -90):\n        list.pop(len(list) - (33 + -32))\n        idx_bmtr = (22 + -22)\n        list_mp7i = range(len(list))\n        while idx_bmtr < len(list_mp7i):\n            i = list_mp7i[idx_bmtr]\n            list.pop(i)\n            idx_bmtr = idx_bmtr + (9 + -8)\n    list = original[:]\n    if list and (((True or False) and (False or True)) and (((2 + 5) > (51 + -46)) or ((51 + -44) < (55 + -50)))):\n        list.pop((65 + -65))\n    return list", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_2_to_2", "old_id": "sample_2"}
{"code": "def f(t):\n    idx_v43y = (68 + -68)\n    list_7rkc = t\n    while idx_v43y < len(list_7rkc):\n        c = list_7rkc[idx_v43y]\n        if not c.isnumeric() and (((True or False) and (False or True)) and (((15 + -12) > (70 + -68)) or ((84 + -81) < (49 + -47)))):\n            return False\n        idx_v43y = idx_v43y + (48 + -47)\n    return True", "input": "'#284376598'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_3_to_3", "old_id": "sample_3"}
{"code": "def f(text):\n    new_text = ''\n    idx_3hjq = (10 + -10)\n    list_yv4p = text.lower().strip()\n    while idx_3hjq < len(list_yv4p):\n        ch = list_yv4p[idx_3hjq]\n        if ch.isnumeric() or ch in '\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc' and (((True or False) and (False or True)) and (((13 + -10) > (15 + -15)) or ((63 + -60) < (85 + -85)))):\n            new_text += ch\n        idx_3hjq = idx_3hjq + (30 + -29)\n    return new_text", "input": "''", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_4_to_4", "old_id": "sample_4"}
{"code": "def f(a, b):\n    idx_axr8 = (93 + -93)\n    list_6z0q = list(b.items())\n    while idx_axr8 < len(list_6z0q):\n        key, value = list_6z0q[idx_axr8]\n        if key not in a and (((True or False) and (False or True)) and (((99 + -90) > (66 + -63)) or ((95 + -86) < (73 + -70)))):\n            a[key] = [value]\n        else:\n            a[key].append(value)\n        idx_axr8 = idx_axr8 + (8 + -7)\n    return a", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "id": "ConstantUnfoldding_sample_from_sample_5_to_5", "old_id": "sample_5"}
{"code": "def f(names):\n    count = len(names)\n    numberOfNames = (78 + -78)\n    idx_cje4 = (12 + -12)\n    list_bmin = names\n    while idx_cje4 < len(list_bmin):\n        i = list_bmin[idx_cje4]\n        if i.isalpha() and (((True or False) and (False or True)) and (((98 + -90) > (92 + -85)) or ((5 + 3) < (9 + -2)))):\n            numberOfNames += (26 + -25)\n        idx_cje4 = idx_cje4 + (95 + -94)\n    return numberOfNames", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_6_to_6", "old_id": "sample_6"}
{"code": "def f(array, elem):\n    k = (53 + -53)\n    l = array.copy()\n    idx_04yq = (45 + -45)\n    list_sxz7 = l\n    while idx_04yq < len(list_sxz7):\n        i = list_sxz7[idx_04yq]\n        if i > elem and (((True or False) and (False or True)) and (((4 + 6) > (6 + 3)) or ((76 + -66) < (76 + -67)))):\n            array.insert(k, elem)\n            break\n        k += (72 + -71)\n        idx_04yq = idx_04yq + (73 + -72)\n    return array", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]", "id": "ConstantUnfoldding_sample_from_sample_7_to_7", "old_id": "sample_7"}
{"code": "def f(items, target):\n    idx_pd94 = (24 + -24)\n    list_de1h = items.split()\n    while idx_pd94 < len(list_de1h):\n        i = list_de1h[idx_pd94]\n        if i in target and (((True or False) and (False or True)) and (((69 + -61) > (58 + -58)) or ((50 + -42) < (40 + -40)))):\n            return items.index(i)+(94 + -93)\n        if i.index('.') == len(i)-(74 + -73) or i.index('.') == (77 + -77) and (((True or False) and (False or True)) and (((31 + -27) > (31 + -31)) or ((72 + -68) < (59 + -59)))):\n            return 'error'\n        idx_pd94 = idx_pd94 + (13 + -12)\n    return '.'", "input": "\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"", "output": "'error'", "id": "ConstantUnfoldding_sample_from_sample_8_to_8", "old_id": "sample_8"}
{"code": "def f(array):\n    result = []\n    idx_wb3x = (21 + -21)\n    list_dhql = array\n    while idx_wb3x < len(list_dhql):\n        elem = list_dhql[idx_wb3x]\n        if elem.isascii() or (isinstance(elem, int) and not str(abs(elem)).isascii()) and (((True or False) and (False or True)) and (((34 + -26) > (99 + -95)) or ((94 + -86) < (70 + -66)))):\n            result.append(elem)\n        idx_wb3x = idx_wb3x + (61 + -60)\n    return result", "input": "[\"a\", \"b\", \"c\"]", "output": "['a', 'b', 'c']", "id": "ConstantUnfoldding_sample_from_sample_9_to_9", "old_id": "sample_9"}
{"code": "def f(string):\n    upper = (3 + -3)\n    idx_oqi0 = (99 + -99)\n    list_3h5v = string\n    while idx_oqi0 < len(list_3h5v):\n        c = list_3h5v[idx_oqi0]\n        if c.isupper() and (((True or False) and (False or True)) and (((9 + -3) > (64 + -59)) or ((88 + -82) < (40 + -35)))):\n            upper += (79 + -78)\n        idx_oqi0 = idx_oqi0 + (55 + -54)\n    return upper * ((56 + -54),(25 + -24))[upper % (70 + -68)]", "input": "'PoIOarTvpoead'", "output": "8", "id": "ConstantUnfoldding_sample_from_sample_10_to_10", "old_id": "sample_10"}
{"code": "def f(lists):\n    dic = {}\n    idx_3vaw = (7 + -7)\n    list_0m7q = lists\n    while idx_3vaw < len(list_0m7q):\n        n = list_0m7q[idx_3vaw]\n        if n in dic and (((True or False) and (False or True)) and (((57 + -51) > (73 + -73)) or ((17 + -11) < (30 + -30)))):\n            dic[n].append(lists.pop(lists.index(n)))\n        else:\n            dic[n] = lists[:lists.index(n) + (50 + -49)]\n        idx_3vaw = idx_3vaw + (30 + -29)\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "ConstantUnfoldding_sample_from_sample_11_to_11", "old_id": "sample_11"}
{"code": "def f(pattern, items):\n    result = []\n    idx_6r7y = (9 + -9)\n    list_vzwy = items\n    while idx_6r7y < len(list_vzwy):\n        text = list_vzwy[idx_6r7y]\n        pos = text.rfind(pattern)\n        if pos >= (75 + -75) and (((True or False) and (False or True)) and (((16 + -9) > (15 + -9)) or ((46 + -39) < (77 + -71)))):\n            result.append(pos)\n        idx_6r7y = idx_6r7y + (60 + -59)\n\n    return result", "input": "\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_12_to_12", "old_id": "sample_12"}
{"code": "def f(n):\n    idx_8mjh = (57 + -57)\n    list_x5rb = str(n)\n    while idx_8mjh < len(list_x5rb):\n        i = list_x5rb[idx_8mjh]\n        if not i.isdigit() and (((True or False) and (False or True)) and (((27 + -17) > (1 + 7)) or ((53 + -43) < (80 + -72)))):\n            n = -(81 + -80)\n            break\n        idx_8mjh = idx_8mjh + (3 + -2)\n    return n", "input": "\"6 ** 2\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_13_to_13", "old_id": "sample_13"}
{"code": "def f(text):\n    ls = list(text)\n    idx_enoq = (36 + -36)\n    list_of7r = range((80 + -80), len(ls))\n    while idx_enoq < len(list_of7r):\n        i = list_of7r[idx_enoq]\n        if ls[i]!='+' and (((True or False) and (False or True)) and (((90 + -86) > (79 + -76)) or ((57 + -53) < (77 + -74)))):\n            ls.insert(i, '+')\n            ls.insert(i, '*')\n            break\n        idx_enoq = idx_enoq + (10 + -9)\n    return '+'.join(ls)", "input": "'nzoh'", "output": "'*+++n+z+o+h'", "id": "ConstantUnfoldding_sample_from_sample_14_to_14", "old_id": "sample_14"}
{"code": "def f(text, letter):\n    counts = {}\n    idx_cxva = (57 + -57)\n    list_xui1 = text\n    while idx_cxva < len(list_xui1):\n        char = list_xui1[idx_cxva]\n        if char not in counts and (((True or False) and (False or True)) and (((73 + -69) > (91 + -90)) or ((53 + -49) < (45 + -44)))):\n            counts[char] = (35 + -34)\n        else:\n            counts[char] += (19 + -18)\n        idx_cxva = idx_cxva + (22 + -21)\n    return counts.get(letter, (63 + -63))", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_15_to_15", "old_id": "sample_15"}
{"code": "def f(names):\n    if names == [] and (((True or False) and (False or True)) and (((22 + -17) > (78 + -77)) or ((10 + -5) < (21 + -20)))):\n        return \"\"\n    smallest = names[(30 + -30)]\n    idx_atg6 = (56 + -56)\n    list_7dge = names[(3 + -2):]\n    while idx_atg6 < len(list_7dge):\n        name = list_7dge[idx_atg6]\n        if name < smallest and (((True or False) and (False or True)) and (((24 + -19) > (83 + -79)) or ((55 + -50) < (90 + -86)))):\n            smallest = name\n        idx_atg6 = idx_atg6 + (51 + -50)\n    names.remove(smallest)\n    return names.join(smallest)", "input": "[]", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_16_to_16", "old_id": "sample_16"}
{"code": "def f(text):\n    a = []\n    idx_8zfr = (60 + -60)\n    list_6oza = range(len(text))\n    while idx_8zfr < len(list_6oza):\n        i = list_6oza[idx_8zfr]\n        if not text[i].isdecimal() and (((True or False) and (False or True)) and (((39 + -31) > (37 + -37)) or ((23 + -15) < (85 + -85)))):\n            a.append(text[i])\n        idx_8zfr = idx_8zfr + (44 + -43)\n    return ''.join(a)", "input": "\"seiq7229 d27\"", "output": "'seiq d'", "id": "ConstantUnfoldding_sample_from_sample_17_to_17", "old_id": "sample_17"}
{"code": "def f(array):\n    array_2 = []\n    idx_kc76 = (70 + -70)\n    list_am7k = array\n    while idx_kc76 < len(list_am7k):\n        i = list_am7k[idx_kc76]\n        if i>(78 + -78) and (((True or False) and (False or True)) and (((55 + -51) > (41 + -40)) or ((3 + 1) < (2 + -1)))):\n            array_2 += [i]\n        idx_kc76 = idx_kc76 + (37 + -36)\n    array_2.sort(reverse=True)\n    return array_2", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]", "id": "ConstantUnfoldding_sample_from_sample_18_to_18", "old_id": "sample_18"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = (44 + -44)\n    idx_ady1 = (58 + -58)\n    list_es9m = text\n    while idx_ady1 < len(list_es9m):\n        char = list_es9m[idx_ady1]\n        if char.isupper() and (((True or False) and (False or True)) and (((7 + -1) > (82 + -81)) or ((83 + -77) < (30 + -29)))):\n            count_upper += (43 + -42)\n        else:\n            return 'no'\n        idx_ady1 = idx_ady1 + (27 + -26)\n    return count_upper // (37 + -35)", "input": "'ax'", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_20_to_20", "old_id": "sample_20"}
{"code": "def f(doc):\n    idx_0rzi = (70 + -70)\n    list_sbat = doc\n    while idx_0rzi < len(list_sbat):\n        x = list_sbat[idx_0rzi]\n        if x.isalpha() and (((True or False) and (False or True)) and (((25 + -23) > (15 + -14)) or ((25 + -23) < (49 + -48)))):\n            return x.capitalize()\n        idx_0rzi = idx_0rzi + (15 + -14)\n    return '-'", "input": "'raruwa'", "output": "'R'", "id": "ConstantUnfoldding_sample_from_sample_22_to_22", "old_id": "sample_22"}
{"code": "def f(text, size):\n    counter = len(text)\n    idx_9ihb = (45 + -45)\n    list_mzex = range(size-int(size%(96 + -94)))\n    while idx_9ihb < len(list_mzex):\n        i = list_mzex[idx_9ihb]\n        text = ' '+text+' '\n        counter += (85 + -83)\n        if counter >= size and (((True or False) and (False or True)) and (((76 + -67) > (89 + -86)) or ((95 + -86) < (78 + -75)))):\n            return text\n        idx_9ihb = idx_9ihb + (85 + -84)", "input": "\"7\", 10", "output": "'     7     '", "id": "ConstantUnfoldding_sample_from_sample_23_to_23", "old_id": "sample_23"}
{"code": "def f(text):\n    idx_ko2a = (56 + -56)\n    list_4hz5 = text\n    while idx_ko2a < len(list_4hz5):\n        c = list_4hz5[idx_ko2a]\n        if not c.isnumeric() and (((True or False) and (False or True)) and (((98 + -89) > (97 + -91)) or ((94 + -85) < (25 + -19)))):\n            return False\n        idx_ko2a = idx_ko2a + (40 + -39)\n    return bool(text)", "input": "'99'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_24_to_24", "old_id": "sample_24"}
{"code": "def f(text):\n    arr = text.split()\n    result = []\n    idx_0g78 = (98 + -98)\n    list_8una = arr\n    while idx_0g78 < len(list_8una):\n        item = list_8una[idx_0g78]\n        if item.endswith('day') and (((True or False) and (False or True)) and (((45 + -42) > (33 + -31)) or ((9 + -6) < (88 + -86)))):\n            item += 'y'\n        else:\n            item += 'day'\n        result.append(item)\n        idx_0g78 = idx_0g78 + (24 + -23)\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "ConstantUnfoldding_sample_from_sample_25_to_25", "old_id": "sample_25"}
{"code": "def f(n):\n    values = {(63 + -63): (21 + -18), (22 + -21): 4.5, (3 + -1): '-'}\n    res = {}\n    idx_tcu1 = (59 + -59)\n    list_chxl = list(values.items())\n    while idx_tcu1 < len(list_chxl):\n        i, j = list_chxl[idx_tcu1]\n        if i % n != (67 + -65) and (((True or False) and (False or True)) and (((1 + 8) > (6 + -2)) or ((19 + -10) < (89 + -85)))):\n            res[j] = n // (52 + -50)\n        idx_tcu1 = idx_tcu1 + (98 + -97)\n    return sorted(res)", "input": "12", "output": "[3, 4.5]", "id": "ConstantUnfoldding_sample_from_sample_26_to_26", "old_id": "sample_26"}
{"code": "def f(d, rm):\n    res = d.copy()\n    idx_wfcs = (2 + -2)\n    list_anj7 = rm\n    while idx_wfcs < len(list_anj7):\n        k = list_anj7[idx_wfcs]\n        if k in res and (((True or False) and (False or True)) and (((38 + -35) > (28 + -27)) or ((33 + -30) < (69 + -68)))):\n            del res[k]\n        idx_wfcs = idx_wfcs + (42 + -41)\n    return res", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}", "id": "ConstantUnfoldding_sample_from_sample_28_to_28", "old_id": "sample_28"}
{"code": "def f(text):\n    result = []\n    idx_qv2s = (4 + -4)\n    list_r20s = range(len(text))\n    while idx_qv2s < len(list_r20s):\n        i = list_r20s[idx_qv2s]\n        if not text[i].isascii() and (((True or False) and (False or True)) and (((68 + -59) > (83 + -80)) or ((1 + 8) < (73 + -70)))):\n            return False\n        elif text[i].isalnum():\n            result.append(text[i].upper())\n        else:\n            result.append(text[i])\n        idx_qv2s = idx_qv2s + (88 + -87)\n    return ''.join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "ConstantUnfoldding_sample_from_sample_30_to_30", "old_id": "sample_30"}
{"code": "def f(text):\n    a = ['']\n    b = ''\n    idx_jy2q = (11 + -11)\n    list_n9jl = text\n    while idx_jy2q < len(list_n9jl):\n        i = list_n9jl[idx_jy2q]\n        if not i.isspace() and (((True or False) and (False or True)) and (((15 + -12) > (71 + -69)) or ((54 + -51) < (69 + -67)))):\n            a.append(b)\n            b = ''\n        else:\n            b += i\n        idx_jy2q = idx_jy2q + (48 + -47)\n    return len(a)", "input": "\"       \"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_31_to_31", "old_id": "sample_31"}
{"code": "def f(sentence):\n    ls = list(sentence)\n    idx_7yah = (63 + -63)\n    list_p6zx = ls\n    while idx_7yah < len(list_p6zx):\n        letter = list_p6zx[idx_7yah]\n        if not letter.istitle() and (((True or False) and (False or True)) and (((6 + -3) > (11 + -11)) or ((81 + -78) < (80 + -80)))):\n            ls.remove(letter)\n        idx_7yah = idx_7yah + (70 + -69)\n    return ''.join(ls)", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'", "id": "ConstantUnfoldding_sample_from_sample_33_to_33", "old_id": "sample_33"}
{"code": "def f(line):\n    count = (3 + -3)\n    a = []\n    idx_jain = (7 + -7)\n    list_lsjp = range(len(line))\n    while idx_jain < len(list_lsjp):\n        i = list_lsjp[idx_jain]\n        count += (14 + -13)\n        if count%(54 + -52)==(48 + -48) and (((True or False) and (False or True)) and (((71 + -66) > (24 + -21)) or ((100 + -95) < (71 + -68)))):\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n        idx_jain = idx_jain + (76 + -75)\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "ConstantUnfoldding_sample_from_sample_34_to_34", "old_id": "sample_34"}
{"code": "def f(text):\n    res = []\n    idx_1q93 = (38 + -38)\n    list_a4j9 = text.encode('utf-8')\n    while idx_1q93 < len(list_a4j9):\n        ch = list_a4j9[idx_1q93]\n        if ch == (57 + 4) and (((True or False) and (False or True)) and (((9 + -7) > (96 + -95)) or ((83 + -81) < (23 + -22)))):\n            break\n        if ch == (70 + -70) and (((True or False) and (False or True)) and (((99 + -95) > (24 + -24)) or ((63 + -59) < (1 + -1)))):\n            pass\n        res.append(f'{ch}; '.encode('utf-8'))\n        idx_1q93 = idx_1q93 + (89 + -88)\n    return b''.join(res)", "input": "'os||agx5'", "output": "b'111; 115; 124; 124; 97; 103; 120; 53; '", "id": "ConstantUnfoldding_sample_from_sample_35_to_35", "old_id": "sample_35"}
{"code": "def f(d, count):\n    idx_6m51 = (72 + -72)\n    list_8qoe = range(count)\n    while idx_6m51 < len(list_8qoe):\n        i = list_8qoe[idx_6m51]\n        if d == {} and (((True or False) and (False or True)) and (((100 + -93) > (43 + -40)) or ((3 + 4) < (26 + -23)))):\n            break\n        d.popitem()\n        idx_6m51 = idx_6m51 + (98 + -97)\n    return d", "input": "{}, 200", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_36_to_36", "old_id": "sample_36"}
{"code": "def f(numbers):\n    idx_42w7 = (13 + -13)\n    list_c8wu = range(len(numbers))\n    while idx_42w7 < len(list_c8wu):\n        i = list_c8wu[idx_42w7]\n        if numbers.count('3') > (94 + -93) and (((True or False) and (False or True)) and (((98 + -95) > (64 + -64)) or ((63 + -60) < (73 + -73)))):\n            return i\n        idx_42w7 = idx_42w7 + (43 + -42)\n    return -(16 + -15)", "input": "\"23157\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_37_to_37", "old_id": "sample_37"}
{"code": "def f(text):\n    result = \"\"\n    idx_lby1 = (84 + -84)\n    list_17wm = range(len(text))\n    while idx_lby1 < len(list_17wm):\n        i = list_17wm[idx_lby1]\n        if i % (49 + -47) == (44 + -44) and (((True or False) and (False or True)) and (((68 + -58) > (37 + -37)) or ((3 + 7) < (69 + -69)))):\n            result += text[i].swapcase()\n        else:\n            result += text[i]\n        idx_lby1 = idx_lby1 + (92 + -91)\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "ConstantUnfoldding_sample_from_sample_38_to_38", "old_id": "sample_38"}
{"code": "def f(countries):\n    language_country = dict()\n    idx_bmo5 = (60 + -60)\n    list_nbgu = list(countries.items())\n    while idx_bmo5 < len(list_nbgu):\n        country, language = list_nbgu[idx_bmo5]\n        if language not in language_country and (((True or False) and (False or True)) and (((26 + -24) > (87 + -87)) or ((91 + -89) < (90 + -90)))):\n            language_country[language] = []\n        language_country[language].append(country)\n        idx_bmo5 = idx_bmo5 + (24 + -23)\n    return language_country", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_39_to_39", "old_id": "sample_39"}
{"code": "def f(array, elem):\n    idx_ja32 = (85 + -85)\n    list_e1zi = list(enumerate(array))\n    while idx_ja32 < len(list_e1zi):\n        idx, e = list_e1zi[idx_ja32]\n        if e > elem and array[idx - (10 + -9)] < elem and (((True or False) and (False or True)) and (((90 + -83) > (11 + -11)) or ((75 + -68) < (11 + -11)))):\n            array.insert(idx, elem)\n        idx_ja32 = idx_ja32 + (96 + -95)\n    return array", "input": "[1, 2, 3, 5, 8], 6", "output": "[1, 2, 3, 5, 6, 8]", "id": "ConstantUnfoldding_sample_from_sample_40_to_40", "old_id": "sample_40"}
{"code": "def f(text, res):\n    idx_lqpu = (62 + -62)\n    list_cyqe = '*\\n\"'\n    while idx_lqpu < len(list_cyqe):\n        c = list_cyqe[idx_lqpu]\n        text = text.replace(c, '!' + str(res))\n        idx_lqpu = idx_lqpu + (41 + -40)\n    if text.startswith('!') and (((True or False) and (False or True)) and (((50 + -42) > (93 + -89)) or ((54 + -46) < (86 + -82)))):\n        text = text[len(str(res)):]\n    return text", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'", "id": "ConstantUnfoldding_sample_from_sample_41_to_41", "old_id": "sample_41"}
{"code": "def f(text):\n    odd = ''\n    even = ''\n    idx_70v8 = (77 + -77)\n    list_mequ = list(enumerate(text))\n    while idx_70v8 < len(list_mequ):\n        i, c = list_mequ[idx_70v8]\n        if i % (26 + -24) == (37 + -37) and (((True or False) and (False or True)) and (((40 + -37) > (61 + -59)) or ((77 + -74) < (69 + -67)))):\n            even += c\n        else:\n            odd += c\n        idx_70v8 = idx_70v8 + (70 + -69)\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "ConstantUnfoldding_sample_from_sample_42_to_42", "old_id": "sample_42"}
{"code": "def f(n):\n    t = (97 + -97)\n    b = ''\n    digits = list(map(int, str(n)))\n    idx_epkt = (11 + -11)\n    list_vy9d = digits\n    while idx_epkt < len(list_vy9d):\n        d = list_vy9d[idx_epkt]\n        if d == (1 + -1) and (((True or False) and (False or True)) and (((23 + -20) > (56 + -56)) or ((38 + -35) < (16 + -16)))): t += (24 + -23)\n        else: break\n        idx_epkt = idx_epkt + (75 + -74)\n    idx_hjqa = (11 + -11)\n    list_vd1f = range(t)\n    while idx_hjqa < len(list_vd1f):\n        _ = list_vd1f[idx_hjqa]\n        b += str((52 + -51)) + '0' + str((67 + -63))\n        idx_hjqa = idx_hjqa + (44 + -43)\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "ConstantUnfoldding_sample_from_sample_43_to_43", "old_id": "sample_43"}
{"code": "def f(nums):\n    count = (60 + -60)\n    idx_v3g5 = (45 + -45)\n    list_ji6o = range(len(nums))\n    while idx_v3g5 < len(list_ji6o):\n        i = list_ji6o[idx_v3g5]\n        if len(nums) == (87 + -87) and (((True or False) and (False or True)) and (((85 + -80) > (24 + -21)) or ((24 + -19) < (100 + -97)))):\n            break\n        if count % (27 + -25) == (35 + -35) and (((True or False) and (False or True)) and (((15 + -7) > (6 + -1)) or ((64 + -56) < (60 + -55)))):\n            nums.pop()\n        else:\n            nums.pop((21 + -21))\n        count += (24 + -23)\n        idx_v3g5 = idx_v3g5 + (3 + -2)\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_44_to_44", "old_id": "sample_44"}
{"code": "def f(first, second):\n    if len(first) < (2 + 8) or len(second) < (90 + -80) and (((True or False) and (False or True)) and (((48 + -39) > (6 + 1)) or ((57 + -48) < (21 + -14)))):\n        return 'no'\n    idx_3sgy = (100 + -100)\n    list_aw0o = range((51 + -46))\n    while idx_3sgy < len(list_aw0o):\n        i = list_aw0o[idx_3sgy]\n        if first[i] != second[i] and (((True or False) and (False or True)) and (((89 + -85) > (10 + -9)) or ((44 + -40) < (68 + -67)))):\n            return 'no'\n        idx_3sgy = idx_3sgy + (70 + -69)\n    first.extend(second)\n    return first", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_45_to_45", "old_id": "sample_45"}
{"code": "def f(single_digit):\n    result = []\n    idx_1lds = (88 + -88)\n    list_wytm = range((21 + -20), (75 + -64))\n    while idx_1lds < len(list_wytm):\n        c = list_wytm[idx_1lds]\n        if c != single_digit and (((True or False) and (False or True)) and (((39 + -29) > (71 + -66)) or ((61 + -51) < (5 + 0)))):\n            result.append(c)\n        idx_1lds = idx_1lds + (83 + -82)\n    return result", "input": "5", "output": "[1, 2, 3, 4, 6, 7, 8, 9, 10]", "id": "ConstantUnfoldding_sample_from_sample_46_to_46", "old_id": "sample_46"}
{"code": "def f(text):\n    idx_jgqw = (32 + -32)\n    list_rwvp = text\n    while idx_jgqw < len(list_rwvp):\n        c = list_rwvp[idx_jgqw]\n        if c.isdigit() and (((True or False) and (False or True)) and (((92 + -89) > (40 + -39)) or ((95 + -92) < (27 + -26)))):\n            if c == '0':\n                c = '.'\n            else:\n                c = '0' if c != '1' else '.'\n        idx_jgqw = idx_jgqw + (95 + -94)\n    return ''.join(list(text)).replace('.', '0')", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'", "id": "ConstantUnfoldding_sample_from_sample_47_to_47", "old_id": "sample_47"}
{"code": "def f(text):\n    n = (28 + -28)\n    idx_m765 = (100 + -100)\n    list_w1tx = text\n    while idx_m765 < len(list_w1tx):\n        char = list_w1tx[idx_m765]\n        if char.isupper() and (((True or False) and (False or True)) and (((3 + -1) > (26 + -25)) or ((4 + -2) < (48 + -47)))):\n            n += (64 + -63)\n        idx_m765 = idx_m765 + (84 + -83)\n    return n", "input": "''.join(['A'] * 20)", "output": "20", "id": "ConstantUnfoldding_sample_from_sample_48_to_48", "old_id": "sample_48"}
{"code": "def f(ip, n):\n    i = (21 + -21)\n    out = ''\n    idx_qoky = (77 + -77)\n    list_epwg = ip\n    while idx_qoky < len(list_epwg):\n        c = list_epwg[idx_qoky]\n        if i == n and (((True or False) and (False or True)) and (((56 + -53) > (42 + -42)) or ((40 + -37) < (99 + -99)))):\n            out += '\\n'\n            i = (79 + -79)\n        i += (17 + -16)\n        out += c\n        idx_qoky = idx_qoky + (2 + -1)\n    return out", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'", "id": "ConstantUnfoldding_sample_from_sample_49_to_49", "old_id": "sample_49"}
{"code": "def f(phrase):\n    ans = (37 + -37)\n    idx_r0n6 = (39 + -39)\n    list_igth = phrase.split()\n    while idx_r0n6 < len(list_igth):\n        w = list_igth[idx_r0n6]\n        idx_7k6b = (95 + -95)\n        list_3spd = w\n        while idx_7k6b < len(list_3spd):\n            ch = list_3spd[idx_7k6b]\n            if ch == \"0\" and (((True or False) and (False or True)) and (((35 + -27) > (97 + -97)) or ((50 + -42) < (71 + -71)))):\n                ans += (52 + -51)\n            idx_7k6b = idx_7k6b + (53 + -52)\n        idx_r0n6 = idx_r0n6 + (10 + -9)\n    return ans", "input": "\"aboba 212 has 0 digits\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_50_to_50", "old_id": "sample_50"}
{"code": "def f(arr):\n    n = [item for item in arr if item%(65 + -63) == (33 + -33)]\n    m = n+arr\n    idx_ivz2 = (50 + -50)\n    list_z01f = m\n    while idx_ivz2 < len(list_z01f):\n        i = list_z01f[idx_ivz2]\n        if m.index(i) >= len(n) and (((True or False) and (False or True)) and (((57 + -54) > (1 + 1)) or ((42 + -39) < (24 + -22)))):\n            m.remove(i)\n        idx_ivz2 = idx_ivz2 + (15 + -14)\n    return m", "input": "[3, 6, 4, -2, 5]", "output": "[6, 4, -2, 6, 4, -2]", "id": "ConstantUnfoldding_sample_from_sample_51_to_51", "old_id": "sample_51"}
{"code": "def f(text):\n    result = ''\n    idx_1kun = (70 + -70)\n    list_987s = text\n    while idx_1kun < len(list_987s):\n        char = list_987s[idx_1kun]\n        if char.isalnum() and (((True or False) and (False or True)) and (((24 + -14) > (4 + 5)) or ((28 + -18) < (81 + -72)))):\n            result += char.upper()\n        idx_1kun = idx_1kun + (35 + -34)\n    return result", "input": "'\u0441 bishop.Swift'", "output": "'\u0421BISHOPSWIFT'", "id": "ConstantUnfoldding_sample_from_sample_52_to_52", "old_id": "sample_52"}
{"code": "def f(text):\n    ls = list(text)\n    total = (len(text) - (19 + -18)) * (94 + -92)\n    idx_uhjo = (71 + -71)\n    list_1avx = range((22 + -21), total+(18 + -17))\n    while idx_uhjo < len(list_1avx):\n        i = list_1avx[idx_uhjo]\n        if i % (83 + -81) and (((True or False) and (False or True)) and (((2 + 8) > (71 + -70)) or ((20 + -10) < (69 + -68)))):\n            ls.append('+')\n        else:\n            ls.insert((100 + -100), '+')\n        idx_uhjo = idx_uhjo + (52 + -51)\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "ConstantUnfoldding_sample_from_sample_53_to_53", "old_id": "sample_53"}
{"code": "def f(array):\n    idx_uf1t = (27 + -27)\n    list_0fpe = range(len(array))\n    while idx_uf1t < len(list_0fpe):\n        i = list_0fpe[idx_uf1t]\n        if array[i] < (82 + -82) and (((True or False) and (False or True)) and (((30 + -28) > (3 + -2)) or ((53 + -51) < (24 + -23)))):\n            array.pop(i)\n        idx_uf1t = idx_uf1t + (10 + -9)\n    return array", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_54_to_54", "old_id": "sample_54"}
{"code": "def f(text):\n    text = list(text)\n    idx_sa2k = (76 + -76)\n    list_ml31 = range(len(text))\n    while idx_sa2k < len(list_ml31):\n        i = list_ml31[idx_sa2k]\n        if i % (84 + -82) == (20 + -19) and (((True or False) and (False or True)) and (((21 + -11) > (18 + -15)) or ((56 + -46) < (7 + -4)))):\n            text[i] = text[i].swapcase()\n        idx_sa2k = idx_sa2k + (54 + -53)\n    return ''.join(text)", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'", "id": "ConstantUnfoldding_sample_from_sample_55_to_55", "old_id": "sample_55"}
{"code": "def f(s):\n    count = (26 + -26)\n    digits = \"\"\n    idx_vs5k = (22 + -22)\n    list_zkgd = s\n    while idx_vs5k < len(list_zkgd):\n        c = list_zkgd[idx_vs5k]\n        if c.isdigit() and (((True or False) and (False or True)) and (((20 + -12) > (77 + -73)) or ((50 + -42) < (57 + -53)))):\n            count += (100 + -99)\n            digits += c\n        idx_vs5k = idx_vs5k + (71 + -70)\n    return [digits, count]", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]", "id": "ConstantUnfoldding_sample_from_sample_56_to_56", "old_id": "sample_56"}
{"code": "def f(text):\n    ls = text.split()\n    lines = \" \".join(ls[::(94 + -91)]).splitlines()\n    res = []\n    idx_ihbk = (22 + -22)\n    list_uoch = range((46 + -44))\n    while idx_ihbk < len(list_uoch):\n        i = list_uoch[idx_ihbk]\n        ln = ls[(39 + -38)::(73 + -70)]\n        if (60 + -57) * i + (25 + -24) < len(ln) and (((True or False) and (False or True)) and (((59 + -53) > (66 + -64)) or ((3 + 3) < (97 + -95)))):\n            res.append(\" \".join(ln[(25 + -22) * i:(63 + -60) * (i + (73 + -72))]))\n        idx_ihbk = idx_ihbk + (7 + -6)\n    return lines + res", "input": "\"echo hello!!! nice!\"", "output": "['echo']", "id": "ConstantUnfoldding_sample_from_sample_57_to_57", "old_id": "sample_57"}
{"code": "def f(digits):\n    digits.reverse()\n    if len(digits) < (60 + -58) and (((True or False) and (False or True)) and (((24 + -22) > (77 + -77)) or ((85 + -83) < (66 + -66)))):\n        return digits\n    idx_fvt6 = (57 + -57)\n    list_m1n6 = range((20 + -20), len(digits), (29 + -27))\n    while idx_fvt6 < len(list_m1n6):\n        i = list_m1n6[idx_fvt6]\n        digits[i], digits[i+(30 + -29)] = digits[i+(37 + -36)], digits[i]\n        idx_fvt6 = idx_fvt6 + (46 + -45)\n    return digits", "input": "[1,2]", "output": "[1, 2]", "id": "ConstantUnfoldding_sample_from_sample_58_to_58", "old_id": "sample_58"}
{"code": "def f(strings):\n    new_strings = []\n    idx_q0aw = (68 + -68)\n    list_esq7 = strings\n    while idx_q0aw < len(list_esq7):\n        string = list_esq7[idx_q0aw]\n        first_two = string[:(7 + -5)]\n        if first_two.startswith('a') or first_two.startswith('p') and (((True or False) and (False or True)) and (((48 + -40) > (14 + -7)) or ((20 + -12) < (44 + -37)))):\n            new_strings.append(first_two)\n        idx_q0aw = idx_q0aw + (44 + -43)\n\n    return new_strings", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']", "id": "ConstantUnfoldding_sample_from_sample_59_to_59", "old_id": "sample_59"}
{"code": "def f(out, mapping):\n    idx_1kay = (74 + -74)\n    list_q2lu = mapping\n    while idx_1kay < len(list_q2lu):\n        key = list_q2lu[idx_1kay]\n        out.format_map(mapping)\n        if len(re.findall(r'{\\w}', out)) == (81 + -81) and (((True or False) and (False or True)) and (((94 + -85) > (67 + -63)) or ((51 + -42) < (89 + -85)))):\n            break\n        mapping[key][(70 + -69)] = mapping[key][(35 + -34)][::-(65 + -64)]\n        idx_1kay = idx_1kay + (95 + -94)\n    return out", "input": "\"{{{{}}}}\", {}", "output": "'{{{{}}}}'", "id": "ConstantUnfoldding_sample_from_sample_60_to_60", "old_id": "sample_60"}
{"code": "def f(text):\n    short = ''\n    idx_a3or = (27 + -27)\n    list_wg7q = text\n    while idx_a3or < len(list_wg7q):\n        c = list_wg7q[idx_a3or]\n        if (c.islower()) and (((True or False) and (False or True)) and (((88 + -82) > (33 + -33)) or ((42 + -36) < (14 + -14)))):\n            short += c\n        idx_a3or = idx_a3or + (52 + -51)\n    return short", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'", "id": "ConstantUnfoldding_sample_from_sample_61_to_61", "old_id": "sample_61"}
{"code": "def f(text):\n    chars = []\n    idx_9raj = (84 + -84)\n    list_wimb = text\n    while idx_9raj < len(list_wimb):\n        c = list_wimb[idx_9raj]\n        if c.isdigit() and (((True or False) and (False or True)) and (((52 + -46) > (15 + -11)) or ((77 + -71) < (95 + -91)))):\n            chars.append(c)\n        idx_9raj = idx_9raj + (92 + -91)\n    return ''.join(chars[::-(75 + -74)])", "input": "'--4yrw 251-//4 6p'", "output": "'641524'", "id": "ConstantUnfoldding_sample_from_sample_62_to_62", "old_id": "sample_62"}
{"code": "def f(a):\n    idx_c95g = (42 + -42)\n    list_il9d = range((85 + -75))\n    while idx_c95g < len(list_il9d):\n        _ = list_il9d[idx_c95g]\n        idx_bgei = (91 + -91)\n        list_8f2g = range(len(a))\n        while idx_bgei < len(list_8f2g):\n            j = list_8f2g[idx_bgei]\n            if a[j] != '#' and (((True or False) and (False or True)) and (((37 + -27) > (4 + 1)) or ((31 + -21) < (49 + -44)))):\n                a = a[j:]\n                break\n            idx_bgei = idx_bgei + (84 + -83)\n        idx_c95g = idx_c95g + (88 + -87)\n    while a[-(77 + -76)] == '#':\n        a = a[:-(32 + -31)]\n    return a", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'", "id": "ConstantUnfoldding_sample_from_sample_63_to_63", "old_id": "sample_63"}
{"code": "def f(items):\n    result = []\n    idx_l1gj = (93 + -93)\n    list_8yoa = items\n    while idx_l1gj < len(list_8yoa):\n        item = list_8yoa[idx_l1gj]\n        idx_739w = (44 + -44)\n        list_ovk6 = item\n        while idx_739w < len(list_ovk6):\n            d = list_ovk6[idx_739w]\n            if not d.isdigit() and (((True or False) and (False or True)) and (((24 + -18) > (56 + -51)) or ((31 + -25) < (47 + -42)))):\n                result.append(d)\n            idx_739w = idx_739w + (70 + -69)\n        idx_l1gj = idx_l1gj + (46 + -45)\n    return result", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']", "id": "ConstantUnfoldding_sample_from_sample_64_to_64", "old_id": "sample_64"}
{"code": "def f(s):\n    count = (66 + -66)\n    idx_q6ye = (47 + -47)\n    list_3i1u = s\n    while idx_q6ye < len(list_3i1u):\n        c = list_3i1u[idx_q6ye]\n        if s.rindex(c) != s.index(c) and (((True or False) and (False or True)) and (((56 + -50) > (34 + -33)) or ((40 + -34) < (12 + -11)))):\n            count+=(8 + -7)\n        idx_q6ye = idx_q6ye + (82 + -81)\n    return count", "input": "\"abca dea ead\"", "output": "10", "id": "ConstantUnfoldding_sample_from_sample_65_to_65", "old_id": "sample_65"}
{"code": "def f(letters):\n    count = (84 + -84)\n    idx_g4t3 = (70 + -70)\n    list_96dc = letters\n    while idx_g4t3 < len(list_96dc):\n        l = list_96dc[idx_g4t3]\n        if l.isdigit() and (((True or False) and (False or True)) and (((99 + -90) > (23 + -20)) or ((37 + -28) < (65 + -62)))):\n            count += (21 + -20)\n        idx_g4t3 = idx_g4t3 + (51 + -50)\n    return count", "input": "\"dp ef1 gh2\"", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_66_to_66", "old_id": "sample_66"}
{"code": "def f(s1, s2):\n    idx_tekf = (5 + -5)\n    list_a7cj = range((47 + -47), len(s2)+len(s1))\n    while idx_tekf < len(list_a7cj):\n        k = list_a7cj[idx_tekf]\n        s1 += s1[(80 + -80)]\n        if s1.find(s2) >= (33 + -33) and (((True or False) and (False or True)) and (((45 + -36) > (15 + -9)) or ((73 + -64) < (45 + -39)))):\n            return True\n        idx_tekf = idx_tekf + (11 + -10)\n    return False", "input": "\"Hello\", \")\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_67_to_67", "old_id": "sample_67"}
{"code": "def f(array, target):\n    count, i = (12 + -12), (73 + -72)\n    idx_xnhp = (85 + -85)\n    list_n0hy = range((2 + -1), len(array))\n    while idx_xnhp < len(list_n0hy):\n        j = list_n0hy[idx_xnhp]\n        if ((array[j] > array[j-(12 + -11)]) and (array[j] <= target)) and (((True or False) and (False or True)) and (((45 + -37) > (42 + -37)) or ((19 + -11) < (24 + -19)))): count += i\n        elif array[j] <= array[j-(84 + -83)]: i = (80 + -79)\n        else: i += (41 + -40)\n        idx_xnhp = idx_xnhp + (92 + -91)\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_68_to_68", "old_id": "sample_68"}
{"code": "def f(nums):\n    idx_kwc0 = (90 + -90)\n    list_kzi2 = range(len(nums))\n    while idx_kwc0 < len(list_kzi2):\n        i = list_kzi2[idx_kwc0]\n        if nums[i] % (18 + -15) == (59 + -59) and (((True or False) and (False or True)) and (((14 + -10) > (90 + -87)) or ((63 + -59) < (2 + 1)))):\n            nums.append(nums[i])\n        idx_kwc0 = idx_kwc0 + (73 + -72)\n    return nums", "input": "[1, 3]", "output": "[1, 3, 3]", "id": "ConstantUnfoldding_sample_from_sample_69_to_69", "old_id": "sample_69"}
{"code": "def f(array):\n    if len(array) == (99 + -98) and (((True or False) and (False or True)) and (((75 + -68) > (41 + -41)) or ((81 + -74) < (38 + -38)))):\n        return ''.join(array)\n    result = list(array)\n    i = (77 + -77)\n    while i < len(array)-(84 + -83):\n        idx_8xyn = (72 + -72)\n        list_y3w8 = range((67 + -65))\n        while idx_8xyn < len(list_y3w8):\n            j = list_y3w8[idx_8xyn]\n            result[i*(32 + -30)] = array[i]\n            i += (49 + -48)\n            idx_8xyn = idx_8xyn + (60 + -59)\n    return ''.join(result)", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'", "id": "ConstantUnfoldding_sample_from_sample_71_to_71", "old_id": "sample_71"}
{"code": "def f(ls, n):\n    answer = (81 + -81)\n    idx_chu4 = (67 + -67)\n    list_5spu = ls\n    while idx_chu4 < len(list_5spu):\n        i = list_5spu[idx_chu4]\n        if i[(14 + -14)] == n and (((True or False) and (False or True)) and (((39 + -37) > (69 + -69)) or ((29 + -27) < (27 + -27)))):\n            answer = i\n        idx_chu4 = idx_chu4 + (22 + -21)\n    return answer", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]", "id": "ConstantUnfoldding_sample_from_sample_72_to_72", "old_id": "sample_72"}
{"code": "def f(text, symbols):\n    count = (3 + -3)\n    if symbols and (((True or False) and (False or True)) and (((79 + -75) > (35 + -33)) or ((92 + -88) < (37 + -35)))):\n        idx_lzmd = (10 + -10)\n        list_nk17 = symbols\n        while idx_lzmd < len(list_nk17):\n            i = list_nk17[idx_lzmd]\n            count += (50 + -49)\n            idx_lzmd = idx_lzmd + (7 + -6)\n        text = text * count\n    return text.rjust(len(text) + count*(39 + -37))[:-(39 + -37)]", "input": "'', 'BC1ty'", "output": "'        '", "id": "ConstantUnfoldding_sample_from_sample_73_to_73", "old_id": "sample_73"}
{"code": "def f(haystack, needle):\n    idx_cirm = (44 + -44)\n    list_f8ng = range(haystack.find(needle), -(18 + -17), -(41 + -40))\n    while idx_cirm < len(list_f8ng):\n        i = list_f8ng[idx_cirm]\n        if haystack[i:] == needle and (((True or False) and (False or True)) and (((28 + -25) > (5 + -5)) or ((6 + -3) < (34 + -34)))):\n            return i\n        idx_cirm = idx_cirm + (7 + -6)\n    return -(22 + -21)", "input": "\"345gerghjehg\", \"345\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_74_to_74", "old_id": "sample_74"}
{"code": "def f(s):\n    count = {}\n    idx_zl7h = (53 + -53)\n    list_vepw = s\n    while idx_zl7h < len(list_vepw):\n        i = list_vepw[idx_zl7h]\n        if i.islower() and (((True or False) and (False or True)) and (((47 + -42) > (4 + -3)) or ((7 + -2) < (32 + -31)))):\n            count[i.lower()] = s.count(i.lower()) + count.get(i.lower(), (92 + -92))\n        else:\n            count[i.lower()] = s.count(i.upper()) + count.get(i.lower(), (9 + -9))\n        idx_zl7h = idx_zl7h + (84 + -83)\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "ConstantUnfoldding_sample_from_sample_75_to_75", "old_id": "sample_75"}
{"code": "def f(text):\n    new_text = []\n    idx_s21j = (8 + -8)\n    list_m3uv = text\n    while idx_s21j < len(list_m3uv):\n        character = list_m3uv[idx_s21j]\n        if character.isupper() and (((True or False) and (False or True)) and (((50 + -46) > (53 + -51)) or ((24 + -20) < (3 + -1)))):\n            new_text.insert(len(new_text) // (57 + -55), character)\n        idx_s21j = idx_s21j + (92 + -91)\n    if len(new_text) == (64 + -64) and (((True or False) and (False or True)) and (((91 + -84) > (2 + 4)) or ((65 + -58) < (38 + -32)))):\n        new_text = ['-']\n    return ''.join(new_text)", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'", "id": "ConstantUnfoldding_sample_from_sample_76_to_76", "old_id": "sample_76"}
{"code": "def f(nums, target):\n    lows, higgs = [], []\n    idx_ktu5 = (77 + -77)\n    list_sgpq = nums\n    while idx_ktu5 < len(list_sgpq):\n        i = list_sgpq[idx_ktu5]\n        if i < target and (((True or False) and (False or True)) and (((87 + -83) > (40 + -38)) or ((36 + -32) < (14 + -12)))):\n            lows.append(i)\n        else:\n            higgs.append(i)\n        idx_ktu5 = idx_ktu5 + (23 + -22)\n    lows.clear()\n    return lows, higgs", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])", "id": "ConstantUnfoldding_sample_from_sample_77_to_77", "old_id": "sample_77"}
{"code": "def f(base, delta):\n    idx_0gqo = (2 + -2)\n    list_e8jo = range(len(delta))\n    while idx_0gqo < len(list_e8jo):\n        j = list_e8jo[idx_0gqo]\n        idx_0nvk = (14 + -14)\n        list_ulns = range(len(base))\n        while idx_0nvk < len(list_ulns):\n            i = list_ulns[idx_0nvk]\n            if base[i] == delta[j][(40 + -40)] and (((True or False) and (False or True)) and (((7 + 0) > (37 + -34)) or ((46 + -39) < (44 + -41)))):\n                assert delta[j][(48 + -47)] != base[i]\n                base[i] = delta[j][(48 + -47)]\n            idx_0nvk = idx_0nvk + (78 + -77)\n        idx_0gqo = idx_0gqo + (46 + -45)\n    return base", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']", "id": "ConstantUnfoldding_sample_from_sample_78_to_78", "old_id": "sample_78"}
{"code": "def f(d, k):\n    new_d = {}\n    idx_pzkf = (78 + -78)\n    list_aov9 = list(d.items())\n    while idx_pzkf < len(list_aov9):\n        key, val = list_aov9[idx_pzkf]\n        if key < k and (((True or False) and (False or True)) and (((8 + 2) > (97 + -94)) or ((50 + -40) < (64 + -61)))):\n            new_d[key] = val\n        idx_pzkf = idx_pzkf + (22 + -21)\n    return new_d", "input": "{1: 2, 2: 4, 3: 3}, 3", "output": "{1: 2, 2: 4}", "id": "ConstantUnfoldding_sample_from_sample_79_to_79", "old_id": "sample_79"}
{"code": "def f(nums):\n    idx_76ek = (45 + -45)\n    list_pgfv = range(len(nums)-(23 + -22), -(27 + -26), -(76 + -75))\n    while idx_76ek < len(list_pgfv):\n        i = list_pgfv[idx_76ek]\n        if nums[i] % (28 + -26) == (88 + -87) and (((True or False) and (False or True)) and (((78 + -74) > (63 + -63)) or ((19 + -15) < (91 + -91)))):\n            nums.insert(i+(88 + -87), nums[i])\n        idx_76ek = idx_76ek + (40 + -39)\n    return nums", "input": "[2, 3, 4, 6, -2]", "output": "[2, 3, 3, 4, 6, -2]", "id": "ConstantUnfoldding_sample_from_sample_80_to_80", "old_id": "sample_80"}
{"code": "def f(s, separator):\n    idx_6g4a = (47 + -47)\n    list_wqb7 = range(len(s))\n    while idx_6g4a < len(list_wqb7):\n        i = list_wqb7[idx_6g4a]\n        if s[i] == separator and (((True or False) and (False or True)) and (((50 + -46) > (22 + -21)) or ((26 + -22) < (84 + -83)))):\n            new_s = list(s)\n            new_s[i] = '/'\n            return ' '.join(new_s)\n        idx_6g4a = idx_6g4a + (50 + -49)", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'", "id": "ConstantUnfoldding_sample_from_sample_81_to_81", "old_id": "sample_81"}
{"code": "def f(name):\n    new_name =''\n    name = name[::-(38 + -37)]\n    idx_76z8 = (55 + -55)\n    list_2btf = range(len(name))\n    while idx_76z8 < len(list_2btf):\n        i = list_2btf[idx_76z8]\n        n = name[i]\n        if n !='.' and  new_name.count('.')<(7 + -5) and (((True or False) and (False or True)) and (((65 + -55) > (29 + -26)) or ((97 + -87) < (3 + 0)))):\n            new_name=n+new_name\n        else:\n            break\n        idx_76z8 = idx_76z8 + (9 + -8)\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "ConstantUnfoldding_sample_from_sample_82_to_82", "old_id": "sample_82"}
{"code": "def f(text, prefix):\n    idx = (42 + -42)\n    idx_6vjy = (18 + -18)\n    list_tes2 = prefix\n    while idx_6vjy < len(list_tes2):\n        letter = list_tes2[idx_6vjy]\n        if text[idx] != letter and (((True or False) and (False or True)) and (((27 + -25) > (9 + -9)) or ((59 + -57) < (4 + -4)))):\n            return None\n        idx += (76 + -75)\n        idx_6vjy = idx_6vjy + (67 + -66)\n    return text[idx:]", "input": "'bestest', 'bestest'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_83_to_83", "old_id": "sample_83"}
{"code": "def f(text):\n    s = text.lower()\n    idx_ubop = (72 + -72)\n    list_x6r2 = range(len(s))\n    while idx_ubop < len(list_x6r2):\n        i = list_x6r2[idx_ubop]\n        if s[i] == 'x' and (((True or False) and (False or True)) and (((68 + -65) > (87 + -85)) or ((99 + -96) < (61 + -59)))):\n            return 'no'\n        idx_ubop = idx_ubop + (84 + -83)\n    return text.isupper()", "input": "'dEXE'", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_84_to_84", "old_id": "sample_84"}
{"code": "def f(text, char):\n    length = len(text)\n    index = -(60 + -59)\n    idx_v8lz = (66 + -66)\n    list_xwqh = range(length)\n    while idx_v8lz < len(list_xwqh):\n        i = list_xwqh[idx_v8lz]\n        if text[i] == char and (((True or False) and (False or True)) and (((41 + -34) > (16 + -12)) or ((76 + -69) < (100 + -96)))):\n            index = i\n        idx_v8lz = idx_v8lz + (93 + -92)\n    if index == -(96 + -95) and (((True or False) and (False or True)) and (((49 + -41) > (100 + -96)) or ((22 + -14) < (93 + -89)))):\n        index = length // (28 + -26)\n    new_text = list(text)\n    new_text.pop(index)\n    return ''.join(new_text)", "input": "'o horseto', 'r'", "output": "'o hoseto'", "id": "ConstantUnfoldding_sample_from_sample_85_to_85", "old_id": "sample_85"}
{"code": "def f(nums):\n    digits = []\n    idx_xjot = (49 + -49)\n    list_tf6u = nums\n    while idx_xjot < len(list_tf6u):\n        num = list_tf6u[idx_xjot]\n        if (isinstance(num, str) and num.isnumeric()) or isinstance(num, int) and (((True or False) and (False or True)) and (((11 + -3) > (14 + -13)) or ((19 + -11) < (100 + -99)))):\n            digits.append(num)\n        idx_xjot = idx_xjot + (96 + -95)\n    digits = list(map(int, digits))\n    return digits", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]", "id": "ConstantUnfoldding_sample_from_sample_86_to_86", "old_id": "sample_86"}
{"code": "def f(strings):\n    occurances = {}\n    idx_sn1j = (34 + -34)\n    list_2its = strings\n    while idx_sn1j < len(list_2its):\n        string = list_2its[idx_sn1j]\n        if string not in occurances and (((True or False) and (False or True)) and (((48 + -40) > (46 + -45)) or ((13 + -5) < (10 + -9)))):\n            occurances[string] = strings.count(string)\n        idx_sn1j = idx_sn1j + (15 + -14)\n    return occurances", "input": "[\"La\", \"Q\", \"9\", \"La\", \"La\"]", "output": "{'La': 3, 'Q': 1, '9': 1}", "id": "ConstantUnfoldding_sample_from_sample_87_to_87", "old_id": "sample_87"}
{"code": "def f(value, char):\n    total = (26 + -26)\n    idx_kbz7 = (73 + -73)\n    list_ealj = value\n    while idx_kbz7 < len(list_ealj):\n        c = list_ealj[idx_kbz7]\n        if c == char or c == char.lower() and (((True or False) and (False or True)) and (((65 + -58) > (17 + -11)) or ((46 + -39) < (34 + -28)))):\n            total += (16 + -15)\n        idx_kbz7 = idx_kbz7 + (20 + -19)\n    return total", "input": "'234rtccde', 'e'", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_88_to_88", "old_id": "sample_88"}
{"code": "def f(update, starting):\n    d = starting.copy()\n    idx_zwfe = (85 + -85)\n    list_1d6y = update\n    while idx_zwfe < len(list_1d6y):\n        k = list_1d6y[idx_zwfe]\n        if k in d and (((True or False) and (False or True)) and (((21 + -19) > (37 + -37)) or ((34 + -32) < (44 + -44)))):\n            d[k] += update[k]\n        else:\n            d[k] = update[k]\n        idx_zwfe = idx_zwfe + (96 + -95)\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "ConstantUnfoldding_sample_from_sample_89_to_89", "old_id": "sample_89"}
{"code": "def f(s):\n    l = list(s)\n    idx_uptm = (10 + -10)\n    list_pytl = range(len(l))\n    while idx_uptm < len(list_pytl):\n        i = list_pytl[idx_uptm]\n        l[i] = l[i].lower()\n        if not l[i].isdigit() and (((True or False) and (False or True)) and (((34 + -26) > (63 + -61)) or ((8 + 0) < (89 + -87)))):\n            return False\n        idx_uptm = idx_uptm + (9 + -8)\n    return True", "input": "\"\"", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_90_to_90", "old_id": "sample_90"}
{"code": "def f(text):\n    number = (22 + -22)\n    idx_ftr2 = (71 + -71)\n    list_v47j = text\n    while idx_ftr2 < len(list_v47j):\n        t = list_v47j[idx_ftr2]\n        if t.isnumeric() and (((True or False) and (False or True)) and (((1 + 8) > (35 + -29)) or ((46 + -37) < (47 + -41)))):\n            number += (60 + -59)\n        idx_ftr2 = idx_ftr2 + (82 + -81)\n    return number", "input": "'Thisisastring'", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_91_to_91", "old_id": "sample_91"}
{"code": "def f(lst):\n    new = list()\n    i = len(lst)-(40 + -39)\n    idx_1b70 = (36 + -36)\n    list_34qp = range(len(lst))\n    while idx_1b70 < len(list_34qp):\n        _ = list_34qp[idx_1b70]\n        if i%(16 + -14) == (88 + -88) and (((True or False) and (False or True)) and (((62 + -58) > (50 + -47)) or ((50 + -46) < (98 + -95)))):\n            new.append(-lst[i])\n        else:\n            new.append(lst[i])\n        i -= (8 + -7)\n        idx_1b70 = idx_1b70 + (64 + -63)\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "ConstantUnfoldding_sample_from_sample_92_to_92", "old_id": "sample_92"}
{"code": "def f(text):\n    idx_kqs7 = (17 + -17)\n    list_v5jq = range(len(text))\n    while idx_kqs7 < len(list_v5jq):\n        i = list_v5jq[idx_kqs7]\n        if text[i] == text[i].upper() and text[i-(30 + -29)].islower() and (((True or False) and (False or True)) and (((99 + -95) > (44 + -42)) or ((42 + -38) < (98 + -96)))):\n            return True\n        idx_kqs7 = idx_kqs7 + (94 + -93)\n    return False", "input": "'jh54kkk6'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_93_to_93", "old_id": "sample_93"}
{"code": "def f(text):\n    ans = []\n    idx_bf5h = (4 + -4)\n    list_ap0h = text\n    while idx_bf5h < len(list_ap0h):\n        char = list_ap0h[idx_bf5h]\n        if char.isdigit() and (((True or False) and (False or True)) and (((88 + -80) > (40 + -39)) or ((69 + -61) < (14 + -13)))):\n            ans.append(char)\n        else:\n            ans.append(' ')\n        idx_bf5h = idx_bf5h + (78 + -77)\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "ConstantUnfoldding_sample_from_sample_94_to_94", "old_id": "sample_94"}
{"code": "def f(places, lazy):\n    places.sort()\n    idx_80x7 = (52 + -52)\n    list_tqpv = lazy\n    while idx_80x7 < len(list_tqpv):\n        lazy = list_tqpv[idx_80x7]\n        places.remove(lazy)\n        idx_80x7 = idx_80x7 + (61 + -60)\n    if len(places) == (84 + -83) and (((True or False) and (False or True)) and (((72 + -65) > (89 + -89)) or ((77 + -70) < (68 + -68)))):\n        return (65 + -64)\n    idx_1yb0 = (34 + -34)\n    list_ei3u = list(enumerate(places))\n    while idx_1yb0 < len(list_ei3u):\n        i, place = list_ei3u[idx_1yb0]\n        if places.count(place+(82 + -81)) == (39 + -39) and (((True or False) and (False or True)) and (((13 + -6) > (97 + -94)) or ((22 + -15) < (57 + -54)))):\n            return i+(61 + -60)\n        idx_1yb0 = idx_1yb0 + (45 + -44)\n    return i+(17 + -16)", "input": "[375, 564, 857, 90, 728, 92], [728]", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_95_to_95", "old_id": "sample_95"}
{"code": "def f(array, elem):\n    elem = str(elem)\n    d = (95 + -95)\n    idx_lknb = (36 + -36)\n    list_wd45 = array\n    while idx_lknb < len(list_wd45):\n        i = list_wd45[idx_lknb]\n        if str(i) == elem and (((True or False) and (False or True)) and (((48 + -39) > (82 + -79)) or ((71 + -62) < (72 + -69)))):\n            d += (87 + -86)\n        idx_lknb = idx_lknb + (98 + -97)\n    return d", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_97_to_97", "old_id": "sample_97"}
{"code": "def f(d):\n    size = len(d)\n    v = [(19 + -19)] * size\n    if size == (44 + -44) and (((True or False) and (False or True)) and (((89 + -86) > (81 + -81)) or ((19 + -16) < (54 + -54)))):\n        return v\n    idx_tu2e = (32 + -32)\n    list_cs5x = list(enumerate(d.values()))\n    while idx_tu2e < len(list_cs5x):\n        i, e = list_cs5x[idx_tu2e]\n        v[i] = e\n        idx_tu2e = idx_tu2e + (77 + -76)\n    return v", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_98_to_98", "old_id": "sample_98"}
{"code": "def f(x):\n    if x == [] and (((True or False) and (False or True)) and (((77 + -75) > (85 + -84)) or ((25 + -23) < (98 + -97)))):\n        return -(90 + -89)\n    else:\n        cache = {}\n        idx_ir1x = (99 + -99)\n        list_gpw0 = x\n        while idx_ir1x < len(list_gpw0):\n            item = list_gpw0[idx_ir1x]\n            if item in cache:\n                cache[item] += (28 + -27)\n            else:\n                cache[item] = (20 + -19)\n            idx_ir1x = idx_ir1x + (40 + -39)\n        return max(cache.values())", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_99_to_99", "old_id": "sample_99"}
{"code": "def f(text, value):\n    indexes = []\n    idx_ny4f = (73 + -73)\n    list_8aqc = range(len(text))\n    while idx_ny4f < len(list_8aqc):\n        i = list_8aqc[idx_ny4f]\n        if text[i] == value and (i == (52 + -52) or text[i-(29 + -28)] != value) and (((True or False) and (False or True)) and (((5 + 4) > (98 + -91)) or ((93 + -84) < (40 + -33)))):\n            indexes.append(i) \n        idx_ny4f = idx_ny4f + (68 + -67)\n    if len(indexes) % (94 + -92) == (46 + -45) and (((True or False) and (False or True)) and (((84 + -78) > (82 + -82)) or ((87 + -81) < (64 + -64)))):\n        return text\n    return text[indexes[(88 + -88)]+(8 + -7):indexes[-(34 + -33)]]", "input": "'btrburger', 'b'", "output": "'tr'", "id": "ConstantUnfoldding_sample_from_sample_100_to_100", "old_id": "sample_100"}
{"code": "def f(text):\n    idx_p3g9 = (18 + -18)\n    list_vpjh = range(len(text)-(11 + -10))\n    while idx_p3g9 < len(list_vpjh):\n        i = list_vpjh[idx_p3g9]\n        if text[i:].islower() and (((True or False) and (False or True)) and (((9 + 1) > (35 + -29)) or ((47 + -37) < (62 + -56)))):\n            return text[i + (1 + 0):]\n        idx_p3g9 = idx_p3g9 + (79 + -78)\n    return ''", "input": "'wrazugizoernmgzu'", "output": "'razugizoernmgzu'", "id": "ConstantUnfoldding_sample_from_sample_101_to_101", "old_id": "sample_101"}
{"code": "def f(nums):\n    nums.sort()\n    n = len(nums)\n    new_nums = [nums[n//(32 + -30)]]\n    if n % (50 + -48) == (34 + -34) and (((True or False) and (False or True)) and (((31 + -25) > (51 + -48)) or ((91 + -85) < (74 + -71)))):\n        new_nums = [nums[n//(23 + -21) - (58 + -57)], nums[n//(2 + 0)]]\n    idx_x7u6 = (29 + -29)\n    list_9ozn = range((15 + -15), n//(41 + -39))\n    while idx_x7u6 < len(list_9ozn):\n        i = list_9ozn[idx_x7u6]\n        new_nums.insert((47 + -47), nums[n-i-(68 + -67)])\n        new_nums.append(nums[i])\n        idx_x7u6 = idx_x7u6 + (74 + -73)\n    return new_nums", "input": "[1]", "output": "[1]", "id": "ConstantUnfoldding_sample_from_sample_102_to_102", "old_id": "sample_102"}
{"code": "def f(string):\n    tmp = string.lower()\n    idx_vqkc = (25 + -25)\n    list_hg7s = string.lower()\n    while idx_vqkc < len(list_hg7s):\n        char = list_hg7s[idx_vqkc]\n        if char in tmp and (((True or False) and (False or True)) and (((39 + -37) > (91 + -91)) or ((41 + -39) < (72 + -72)))):\n            tmp = tmp.replace(char, '', (13 + -12))\n        idx_vqkc = idx_vqkc + (48 + -47)\n    return tmp", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_103_to_103", "old_id": "sample_103"}
{"code": "def f(text):\n    idx_cdw4 = (98 + -98)\n    list_cd7a = text\n    while idx_cdw4 < len(list_cd7a):\n        char = list_cd7a[idx_cdw4]\n        if not char.isspace() and (((True or False) and (False or True)) and (((16 + -7) > (43 + -36)) or ((10 + -1) < (9 + -2)))):\n            return False\n        idx_cdw4 = idx_cdw4 + (94 + -93)\n    return True", "input": "'     i'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_104_to_104", "old_id": "sample_104"}
{"code": "def f(nums):\n    idx_myan = (4 + -4)\n    list_tung = nums[:]\n    while idx_myan < len(list_tung):\n        odd = list_tung[idx_myan]\n        if odd % (10 + -8) != (100 + -100) and (((True or False) and (False or True)) and (((74 + -67) > (1 + 3)) or ((94 + -87) < (6 + -2)))):\n            nums.remove(odd)\n        idx_myan = idx_myan + (34 + -33)\n    sum_ = (12 + -12)\n    idx_qvc7 = (8 + -8)\n    list_pdm2 = nums\n    while idx_qvc7 < len(list_pdm2):\n        num = list_pdm2[idx_qvc7]\n        sum_ += num\n        idx_qvc7 = idx_qvc7 + (48 + -47)\n    return sum_", "input": "[11, 21, 0, 11]", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_105_to_105", "old_id": "sample_105"}
{"code": "def f(seq, v):\n    a = []\n    idx_4kvy = (81 + -81)\n    list_i5qm = seq\n    while idx_4kvy < len(list_i5qm):\n        i = list_i5qm[idx_4kvy]\n        if i.endswith(v) and (((True or False) and (False or True)) and (((68 + -62) > (76 + -72)) or ((78 + -72) < (44 + -40)))):\n            a.append(i*(18 + -16))\n        idx_4kvy = idx_4kvy + (13 + -12)\n    return a", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']", "id": "ConstantUnfoldding_sample_from_sample_106_to_106", "old_id": "sample_106"}
{"code": "def f(text):\n    idx_2wft = (62 + -62)\n    list_v90m = range(len(text))\n    while idx_2wft < len(list_v90m):\n        i = list_v90m[idx_2wft]\n        if text[(10 + -10):i].startswith(\"two\") and (((True or False) and (False or True)) and (((18 + -14) > (32 + -32)) or ((92 + -88) < (47 + -47)))):\n            return text[i:]\n        idx_2wft = idx_2wft + (7 + -6)\n    return 'no'", "input": "\"2two programmers\"", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_107_to_107", "old_id": "sample_107"}
{"code": "def f(nums):\n    idx_1873 = (89 + -89)\n    list_m2jr = range(len(nums) - (24 + -23), -(11 + -10), -(36 + -33))\n    while idx_1873 < len(list_m2jr):\n        i = list_m2jr[idx_1873]\n        if nums[i] == (71 + -71) and (((True or False) and (False or True)) and (((90 + -85) > (28 + -25)) or ((39 + -34) < (25 + -22)))):\n            nums.clear()\n            return False\n        idx_1873 = idx_1873 + (76 + -75)\n    return nums", "input": "[0, 0, 1, 2, 1]", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_108_to_108", "old_id": "sample_108"}
{"code": "def f(concat, di):\n    count = len(di)\n    idx_07b1 = (10 + -10)\n    list_xspm = range(count)\n    while idx_07b1 < len(list_xspm):\n        i = list_xspm[idx_07b1]\n        if di[str(i)] in concat and (((True or False) and (False or True)) and (((47 + -45) > (56 + -56)) or ((90 + -88) < (92 + -92)))):\n            di.pop(str(i))\n        idx_07b1 = idx_07b1 + (81 + -80)\n    return \"Done!\"", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'", "id": "ConstantUnfoldding_sample_from_sample_109_to_109", "old_id": "sample_109"}
{"code": "def f(total, arg):\n    if type(arg) is list and (((True or False) and (False or True)) and (((44 + -38) > (72 + -69)) or ((34 + -28) < (79 + -76)))):\n        idx_8ldt = (74 + -74)\n        list_tpvf = arg\n        while idx_8ldt < len(list_tpvf):\n            e = list_tpvf[idx_8ldt]\n            total.extend(e)\n            idx_8ldt = idx_8ldt + (92 + -91)\n    else:\n        total.extend(arg)\n    return total", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']", "id": "ConstantUnfoldding_sample_from_sample_110_to_110", "old_id": "sample_110"}
{"code": "def f(text):\n    k = text.splitlines()\n    i = (61 + -61)\n    idx_jfiu = (94 + -94)\n    list_cln8 = k\n    while idx_jfiu < len(list_cln8):\n        j = list_cln8[idx_jfiu]\n        if len(j) == (20 + -20) and (((True or False) and (False or True)) and (((100 + -90) > (98 + -89)) or ((100 + -90) < (74 + -65)))):\n            return i\n        i+=(71 + -70)\n        idx_jfiu = idx_jfiu + (3 + -2)\n    return -(73 + -72)", "input": "\"2 m2 \\n\\nbike\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_111_to_111", "old_id": "sample_111"}
{"code": "def f(s):\n    idx_jlib = (93 + -93)\n    list_f67p = range(len(s))\n    while idx_jlib < len(list_f67p):\n        i = list_f67p[idx_jlib]\n        if s[i].isdecimal() and (((True or False) and (False or True)) and (((18 + -16) > (87 + -87)) or ((99 + -97) < (16 + -16)))):\n            return i + (s[i] == '0')\n        elif s[i] == '0':\n            return -(39 + -38)\n        idx_jlib = idx_jlib + (73 + -72)\n    return -(90 + -89)", "input": "\"11\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_112_to_112", "old_id": "sample_112"}
{"code": "def f(counts):\n    dict = {}\n    idx_cty2 = (75 + -75)\n    list_d7py = list(counts.items())\n    while idx_cty2 < len(list_d7py):\n        k, v = list_d7py[idx_cty2]\n        count = counts[k]\n        if count not in dict and (((True or False) and (False or True)) and (((59 + -49) > (12 + -8)) or ((54 + -44) < (48 + -44)))):\n            dict[count] = []\n        dict[count].append(k)\n        idx_cty2 = idx_cty2 + (42 + -41)\n    counts.update(dict)\n    return counts", "input": "{'2': 2, '0': 1, '1': 2}", "output": "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}", "id": "ConstantUnfoldding_sample_from_sample_113_to_113", "old_id": "sample_113"}
{"code": "def f(array):\n    d = dict(array)\n    idx_stfk = (15 + -15)\n    list_n01q = list(d.items())\n    while idx_stfk < len(list_n01q):\n        key, value = list_n01q[idx_stfk]\n        if value < (7 + -7) or value > (34 + -25) and (((True or False) and (False or True)) and (((21 + -19) > (44 + -44)) or ((88 + -86) < (42 + -42)))):\n            return None\n        idx_stfk = idx_stfk + (87 + -86)\n    return d", "input": "((8, 5), (8, 2), (5, 3))", "output": "{8: 2, 5: 3}", "id": "ConstantUnfoldding_sample_from_sample_114_to_114", "old_id": "sample_114"}
{"code": "def f(selfie):\n    lo = len(selfie)\n    idx_ir46 = (65 + -65)\n    list_z4i9 = range(lo-(74 + -73), -(18 + -17), -(44 + -43))\n    while idx_ir46 < len(list_z4i9):\n        i = list_z4i9[idx_ir46]\n        if selfie[i] == selfie[(34 + -34)] and (((True or False) and (False or True)) and (((84 + -78) > (40 + -35)) or ((6 + 0) < (68 + -63)))):\n            selfie.remove(selfie[lo-(94 + -93)])\n        idx_ir46 = idx_ir46 + (90 + -89)\n    return selfie", "input": "[4, 2, 5, 1, 3, 2, 6]", "output": "[4, 2, 5, 1, 3, 2]", "id": "ConstantUnfoldding_sample_from_sample_115_to_115", "old_id": "sample_115"}
{"code": "def f(nums):\n    idx_swy2 = (1 + -1)\n    list_v0jd = range(len(nums))\n    while idx_swy2 < len(list_v0jd):\n        i = list_v0jd[idx_swy2]\n        if not i % (3 + -1) and (((True or False) and (False or True)) and (((68 + -60) > (85 + -81)) or ((63 + -55) < (1 + 3)))):\n            nums.append(nums[i] * nums[i + (12 + -11)])\n        idx_swy2 = idx_swy2 + (3 + -2)\n    return nums", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_116_to_116", "old_id": "sample_116"}
{"code": "def f(string):\n    bigTab = (12 + 88)\n    idx_vyag = (83 + -83)\n    list_5of3 = range((18 + -8), (75 + -45))\n    while idx_vyag < len(list_5of3):\n        i = list_5of3[idx_vyag]\n        if (35 + -35) < string.count('\\t') < (25 + -5) and (((True or False) and (False or True)) and (((60 + -58) > (10 + -9)) or ((90 + -88) < (13 + -12)))):\n            bigTab = i\n            break\n        idx_vyag = idx_vyag + (14 + -13)\n    return string.expandtabs(bigTab)", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'", "id": "ConstantUnfoldding_sample_from_sample_117_to_117", "old_id": "sample_117"}
{"code": "def f(lst):\n    res = []\n    idx_eoap = (8 + -8)\n    list_k4ne = range(len(lst))\n    while idx_eoap < len(list_k4ne):\n        i = list_k4ne[idx_eoap]\n        if lst[i] % (32 + -30) == (77 + -77) and (((True or False) and (False or True)) and (((35 + -33) > (71 + -70)) or ((57 + -55) < (96 + -95)))):\n            res.append(lst[i])\n        idx_eoap = idx_eoap + (31 + -30)\n\n    return lst.copy()", "input": "[1, 2, 3, 4]", "output": "[1, 2, 3, 4]", "id": "ConstantUnfoldding_sample_from_sample_118_to_118", "old_id": "sample_118"}
{"code": "def f(text):\n    idx_je9f = (54 + -54)\n    list_24jr = text\n    while idx_je9f < len(list_24jr):\n        space = list_24jr[idx_je9f]\n        if space == ' ' and (((True or False) and (False or True)) and (((21 + -16) > (59 + -55)) or ((36 + -31) < (3 + 1)))):\n            text = text.lstrip()\n        else:\n            text = text.replace('cd', space)\n        idx_je9f = idx_je9f + (12 + -11)\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "ConstantUnfoldding_sample_from_sample_119_to_119", "old_id": "sample_119"}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-(99 + -98)))\n    idx_5uqw = (1 + -1)\n    list_17zl = range(len(text))\n    while idx_5uqw < len(list_17zl):\n        i = list_17zl[idx_5uqw]\n        if text[i] == ' ' and (((True or False) and (False or True)) and (((5 + 0) > (64 + -64)) or ((10 + -5) < (95 + -95)))):\n            res += '|'\n        else:\n            res += text[i]\n        idx_5uqw = idx_5uqw + (56 + -55)\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "ConstantUnfoldding_sample_from_sample_120_to_120", "old_id": "sample_120"}
{"code": "def f(text, char):\n    text = list(text)\n    idx_bhvs = (44 + -44)\n    list_zpe1 = list(enumerate(text))\n    while idx_bhvs < len(list_zpe1):\n        count, item = list_zpe1[idx_bhvs]\n        if item == char and (((True or False) and (False or True)) and (((68 + -64) > (7 + -7)) or ((53 + -49) < (85 + -85)))):\n            text.remove(item)\n            return ''.join(text)\n        idx_bhvs = idx_bhvs + (35 + -34)\n    return text", "input": "'pn', 'p'", "output": "'n'", "id": "ConstantUnfoldding_sample_from_sample_121_to_121", "old_id": "sample_121"}
{"code": "def f(text):\n    uppers = (99 + -99)\n    idx_637a = (32 + -32)\n    list_zrk2 = text\n    while idx_637a < len(list_zrk2):\n        c = list_zrk2[idx_637a]\n        if c.isupper() and (((True or False) and (False or True)) and (((7 + 2) > (56 + -56)) or ((53 + -44) < (50 + -50)))):\n            uppers += (80 + -79)\n        idx_637a = idx_637a + (5 + -4)\n    return text.upper() if uppers >= (100 + -90) else text", "input": "'?XyZ'", "output": "'?XyZ'", "id": "ConstantUnfoldding_sample_from_sample_123_to_123", "old_id": "sample_123"}
{"code": "def f(nums):\n    count = list(range(len(nums)))\n    idx_huqd = (90 + -90)\n    list_x2kl = range(len(nums))\n    while idx_huqd < len(list_x2kl):\n        i = list_x2kl[idx_huqd]\n        nums.pop()\n        if len(count) > (67 + -67) and (((True or False) and (False or True)) and (((3 + 1) > (28 + -27)) or ((14 + -10) < (67 + -66)))):\n            count.pop((35 + -35))\n        idx_huqd = idx_huqd + (97 + -96)\n    return nums", "input": "[3, 1, 7, 5, 6]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_124_to_124", "old_id": "sample_124"}
{"code": "def f(dict):\n    result = dict.copy()\n    remove_keys = []\n    idx_t34c = (43 + -43)\n    list_qgwd = list(dict.items())\n    while idx_t34c < len(list_qgwd):\n        k, v = list_qgwd[idx_t34c]\n        if v in dict and (((True or False) and (False or True)) and (((20 + -16) > (84 + -83)) or ((25 + -21) < (59 + -58)))):\n            del result[k]\n        idx_t34c = idx_t34c + (21 + -20)\n    return result", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}", "id": "ConstantUnfoldding_sample_from_sample_125_to_125", "old_id": "sample_125"}
{"code": "def f(a, b, n):\n    result = m = b\n    idx_oq3d = (32 + -32)\n    list_kfm1 = range(n)\n    while idx_oq3d < len(list_kfm1):\n        _ = list_kfm1[idx_oq3d]\n        if m and (((True or False) and (False or True)) and (((79 + -74) > (75 + -72)) or ((13 + -8) < (20 + -17)))):\n            a, m = a.replace(m, '', (22 + -21)), None\n            result = m = b\n        idx_oq3d = idx_oq3d + (40 + -39)\n    return result.join(a.split(b))", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'", "id": "ConstantUnfoldding_sample_from_sample_126_to_126", "old_id": "sample_126"}
{"code": "def f(number):\n    transl = {'A': (29 + -28), 'B': (95 + -93), 'C': (49 + -46), 'D': (67 + -63), 'E': (12 + -7)}\n    result = []\n    idx_nb71 = (84 + -84)\n    list_h8qp = list(transl.items())\n    while idx_nb71 < len(list_h8qp):\n        key, value = list_h8qp[idx_nb71]\n        if value % number == (100 + -100) and (((True or False) and (False or True)) and (((94 + -88) > (92 + -88)) or ((8 + -2) < (16 + -12)))):\n            result.append(key)\n        idx_nb71 = idx_nb71 + (20 + -19)\n    return result", "input": "2", "output": "['B', 'D']", "id": "ConstantUnfoldding_sample_from_sample_127_to_127", "old_id": "sample_127"}
{"code": "def f(text, value):\n    indexes = list()\n    idx_ksza = (10 + -10)\n    list_tjwz = range(len(text))\n    while idx_ksza < len(list_tjwz):\n        i = list_tjwz[idx_ksza]\n        if text[i] == value and (((True or False) and (False or True)) and (((48 + -44) > (36 + -36)) or ((44 + -40) < (62 + -62)))):\n            indexes.append(i)\n        idx_ksza = idx_ksza + (20 + -19)\n    new_text = list(text)\n    idx_anfd = (83 + -83)\n    list_cxrz = indexes\n    while idx_anfd < len(list_cxrz):\n        i = list_cxrz[idx_anfd]\n        new_text.remove(value)\n        idx_anfd = idx_anfd + (38 + -37)\n    return ''.join(new_text)", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'", "id": "ConstantUnfoldding_sample_from_sample_128_to_128", "old_id": "sample_128"}
{"code": "def f(a, split_on):\n    t = a.split()\n    a = []\n    idx_m5h4 = (31 + -31)\n    list_e69y = t\n    while idx_m5h4 < len(list_e69y):\n        i = list_e69y[idx_m5h4]\n        idx_gy7x = (81 + -81)\n        list_37yd = i\n        while idx_gy7x < len(list_37yd):\n            j = list_37yd[idx_gy7x]\n            a.append(j)\n            idx_gy7x = idx_gy7x + (76 + -75)\n        idx_m5h4 = idx_m5h4 + (71 + -70)\n    if split_on in a and (((True or False) and (False or True)) and (((55 + -50) > (43 + -42)) or ((26 + -21) < (79 + -78)))):\n        return True\n    else:\n        return False", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_129_to_129", "old_id": "sample_129"}
{"code": "def f(s, c1, c2):\n    if s == '' and (((True or False) and (False or True)) and (((33 + -26) > (13 + -10)) or ((7 + 0) < (33 + -30)))):\n        return s\n    ls = s.split(c1)\n    idx_otbl = (63 + -63)\n    list_eb6r = list(enumerate(ls))\n    while idx_otbl < len(list_eb6r):\n        index, item = list_eb6r[idx_otbl]\n        if c1 in item and (((True or False) and (False or True)) and (((11 + -7) > (15 + -13)) or ((44 + -40) < (14 + -12)))):\n            ls[index] = item.replace(c1, c2, (40 + -39))\n        idx_otbl = idx_otbl + (87 + -86)\n    return c1.join(ls)", "input": "'', 'mi', 'siast'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_130_to_130", "old_id": "sample_130"}
{"code": "def f(arr):\n    result = []\n    idx_w7mt = (15 + -15)\n    list_wjp8 = arr\n    while idx_w7mt < len(list_wjp8):\n        item = list_wjp8[idx_w7mt]\n        try:\n            if item.isnumeric() and (((True or False) and (False or True)) and (((15 + -7) > (52 + -51)) or ((9 + -1) < (56 + -55)))):\n                result.append(int(item)*(59 + -57))\n        except ValueError:\n            result.append(item[::-(87 + -86)])\n        idx_w7mt = idx_w7mt + (26 + -25)\n    return result", "input": "['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']", "output": "[182, 32]", "id": "ConstantUnfoldding_sample_from_sample_131_to_131", "old_id": "sample_131"}
{"code": "def f(n):\n    p = ''\n    if n%(57 + -55) == (20 + -19) and (((True or False) and (False or True)) and (((64 + -58) > (28 + -24)) or ((18 + -12) < (82 + -78)))):\n        p+='sn'\n    else:\n        return n*n\n    idx_wqxz = (60 + -60)\n    list_vey0 = range((24 + -23), n+(13 + -12))\n    while idx_wqxz < len(list_vey0):\n        x = list_vey0[idx_wqxz]\n        if x%(47 + -45) == (61 + -61) and (((True or False) and (False or True)) and (((36 + -26) > (11 + -9)) or ((90 + -80) < (55 + -53)))):\n            p+='to'\n        else:\n            p+='ts'\n        idx_wqxz = idx_wqxz + (26 + -25)\n    return p", "input": "1", "output": "'snts'", "id": "ConstantUnfoldding_sample_from_sample_133_to_133", "old_id": "sample_133"}
{"code": "def f(text):\n    idx_w1cb = (75 + -75)\n    list_muvn = range(len(text)-(15 + -14), (56 + -56), -(28 + -27))\n    while idx_w1cb < len(list_muvn):\n        i = list_muvn[idx_w1cb]\n        if not text[i].isupper() and (((True or False) and (False or True)) and (((100 + -96) > (24 + -24)) or ((35 + -31) < (75 + -75)))):\n            return text[(44 + -44):i]\n        idx_w1cb = idx_w1cb + (96 + -95)\n    return ''", "input": "'SzHjifnzog'", "output": "'SzHjifnzo'", "id": "ConstantUnfoldding_sample_from_sample_134_to_134", "old_id": "sample_134"}
{"code": "def f(text):\n    text = list(text)\n    idx_2x3a = (3 + -3)\n    list_x6ci = range(len(text)-(60 + -59), -(25 + -24), -(61 + -60))\n    while idx_2x3a < len(list_x6ci):\n        i = list_x6ci[idx_2x3a]\n        if text[i].isspace() and (((True or False) and (False or True)) and (((55 + -48) > (60 + -59)) or ((46 + -39) < (75 + -74)))):\n            text[i] = '&nbsp;'\n        idx_2x3a = idx_2x3a + (35 + -34)\n    return ''.join(text)", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'", "id": "ConstantUnfoldding_sample_from_sample_135_to_135", "old_id": "sample_135"}
{"code": "def f(c, st, ed):\n    d = {}\n    a, b = (47 + -47), (34 + -34)\n    idx_0the = (64 + -64)\n    list_21cg = list(c.items())\n    while idx_0the < len(list_21cg):\n        x, y = list_21cg[idx_0the]\n        d[y] = x\n        if y == st and (((True or False) and (False or True)) and (((61 + -56) > (97 + -97)) or ((87 + -82) < (45 + -45)))):\n            a = x\n        if y == ed and (((True or False) and (False or True)) and (((40 + -32) > (73 + -73)) or ((22 + -14) < (27 + -27)))):\n            b = x\n        idx_0the = idx_0the + (81 + -80)\n    w = d[st]\n    return (w, b) if a > b else (b, w)", "input": "{'TEXT': 7, 'CODE': 3}, 7, 3", "output": "('TEXT', 'CODE')", "id": "ConstantUnfoldding_sample_from_sample_136_to_136", "old_id": "sample_136"}
{"code": "def f(s):\n    b = ''\n    c = ''\n    idx_kbj5 = (64 + -64)\n    list_jer8 = s\n    while idx_kbj5 < len(list_jer8):\n        i = list_jer8[idx_kbj5]\n        c = c + i\n        if s.rfind(c) > -(24 + -23) and (((True or False) and (False or True)) and (((24 + -18) > (97 + -94)) or ((10 + -4) < (62 + -59)))):\n            return s.rfind(c)\n        idx_kbj5 = idx_kbj5 + (27 + -26)\n    return (23 + -23)", "input": "'papeluchis'", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_137_to_137", "old_id": "sample_137"}
{"code": "def f(array):\n    prev = array[(24 + -24)]\n    newArray = array[:]\n    idx_l9i4 = (45 + -45)\n    list_meq1 = range((46 + -45), len(array))\n    while idx_l9i4 < len(list_meq1):\n        i = list_meq1[idx_l9i4]\n        if prev != array[i] and (((True or False) and (False or True)) and (((85 + -82) > (16 + -16)) or ((27 + -24) < (53 + -53)))):\n            newArray[i] = array[i]\n        else:\n            del newArray[i]\n        prev = array[i]\n        idx_l9i4 = idx_l9i4 + (50 + -49)\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_138_to_138", "old_id": "sample_138"}
{"code": "def f(query, base):\n    net_sum = (34 + -34)\n    idx_u5zr = (69 + -69)\n    list_dr1j = list(base.items())\n    while idx_u5zr < len(list_dr1j):\n        (key, val) = list_dr1j[idx_u5zr]\n        if key[(96 + -96)] == query and len(key) == (72 + -69) and (((True or False) and (False or True)) and (((100 + -91) > (89 + -81)) or ((96 + -87) < (76 + -68)))):\n            net_sum -= val\n        elif key[-(19 + -18)] == query and len(key) == (36 + -33):\n            net_sum += val\n        idx_u5zr = idx_u5zr + (66 + -65)\n    return net_sum", "input": "'a', {}", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_139_to_139", "old_id": "sample_139"}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // (23 + -20), (7 + -7))\n    result = ''\n    idx_7xrs = (10 + -10)\n    list_a352 = list(enumerate(sequence[i:]))\n    while idx_7xrs < len(list_a352):\n        j, v = list_a352[idx_7xrs]\n        if v == '+' and (((True or False) and (False or True)) and (((67 + -61) > (89 + -87)) or ((61 + -55) < (13 + -11)))):\n            result += value\n        else:\n            result += sequence[i + j]\n        idx_7xrs = idx_7xrs + (90 + -89)\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "ConstantUnfoldding_sample_from_sample_140_to_140", "old_id": "sample_140"}
{"code": "def f(n):\n    idx_z3o0 = (72 + -72)\n    list_jmp3 = str(n)\n    while idx_z3o0 < len(list_jmp3):\n        n = list_jmp3[idx_z3o0]\n        if n not in \"012\" and n not in list(range((12 + -7), (76 + -66))) and (((True or False) and (False or True)) and (((75 + -73) > (100 + -100)) or ((14 + -12) < (72 + -72)))):\n            return False\n        idx_z3o0 = idx_z3o0 + (100 + -99)\n    return True", "input": "1341240312", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_141_to_141", "old_id": "sample_141"}
{"code": "def f(cat):\n    digits = (51 + -51)\n    idx_8pfq = (83 + -83)\n    list_r5f6 = cat\n    while idx_8pfq < len(list_r5f6):\n        char = list_r5f6[idx_8pfq]\n        if char.isdigit() and (((True or False) and (False or True)) and (((53 + -44) > (7 + -7)) or ((38 + -29) < (92 + -92)))):\n            digits += (49 + -48)\n        idx_8pfq = idx_8pfq + (11 + -10)\n    return digits", "input": "'C24Bxxx982ab'", "output": "5", "id": "ConstantUnfoldding_sample_from_sample_142_to_142", "old_id": "sample_142"}
{"code": "def f(d):\n    result = {}\n    idx_7u65 = (38 + -38)\n    list_b0tg = list(d.items())\n    while idx_7u65 < len(list_b0tg):\n        k, v = list_b0tg[idx_7u65]\n        if isinstance(k, float) and (((True or False) and (False or True)) and (((81 + -74) > (13 + -11)) or ((80 + -73) < (28 + -26)))):\n            idx_sfmt = (55 + -55)\n            list_r5cf = v\n            while idx_sfmt < len(list_r5cf):\n                i = list_r5cf[idx_sfmt]\n                result[i] = k\n                idx_sfmt = idx_sfmt + (24 + -23)\n        else:\n            result[k] = v\n        idx_7u65 = idx_7u65 + (7 + -6)\n    return result", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "ConstantUnfoldding_sample_from_sample_144_to_144", "old_id": "sample_144"}
{"code": "def f(text):\n    idx_btmh = (99 + -99)\n    list_9cma = range(len(text))\n    while idx_btmh < len(list_9cma):\n        i = list_9cma[idx_btmh]\n        if text[i] == ' ' and (((True or False) and (False or True)) and (((3 + 3) > (76 + -71)) or ((4 + 2) < (31 + -26)))):\n            text = text.replace(' ', '\\t', (1 + 0))\n        idx_btmh = idx_btmh + (52 + -51)\n    return text.expandtabs((73 + -69))", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'", "id": "ConstantUnfoldding_sample_from_sample_145_to_145", "old_id": "sample_145"}
{"code": "def f(nums, mos):\n    idx_7rob = (48 + -48)\n    list_etv3 = mos\n    while idx_7rob < len(list_etv3):\n        num = list_etv3[idx_7rob]\n        nums.pop(nums.index(num))\n        idx_7rob = idx_7rob + (95 + -94)\n    nums.sort()\n    idx_zl4k = (67 + -67)\n    list_xg68 = mos\n    while idx_zl4k < len(list_xg68):\n        num = list_xg68[idx_zl4k]\n        nums += [num]\n        idx_zl4k = idx_zl4k + (44 + -43)\n    idx_uf3r = (50 + -50)\n    list_p05h = range(len(nums)-(52 + -51))\n    while idx_uf3r < len(list_p05h):\n        i = list_p05h[idx_uf3r]\n        if nums[i] > nums[i+(60 + -59)] and (((True or False) and (False or True)) and (((33 + -29) > (91 + -88)) or ((40 + -36) < (2 + 1)))):\n            return False\n        idx_uf3r = idx_uf3r + (75 + -74)\n    return True", "input": "[3, 1, 2, 1, 4, 1], [1]", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_146_to_146", "old_id": "sample_146"}
{"code": "def f(text):\n    x = (25 + -25)\n    if text.islower() and (((True or False) and (False or True)) and (((19 + -11) > (49 + -45)) or ((92 + -84) < (27 + -23)))):\n        idx_lq0u = (85 + -85)\n        list_trow = text\n        while idx_lq0u < len(list_trow):\n            c = list_trow[idx_lq0u]\n            if int(c) in list(range((87 + 3))):\n                x+=(31 + -30)\n            idx_lq0u = idx_lq0u + (58 + -57)\n    return x", "input": "\"591237865\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_147_to_147", "old_id": "sample_147"}
{"code": "def f(num):\n    letter = (72 + -71)\n    idx_1va8 = (65 + -65)\n    list_6rsm = '1234567890'\n    while idx_1va8 < len(list_6rsm):\n        i = list_6rsm[idx_1va8]\n        num = num.replace(i,'')\n        if len(num) == (54 + -54) and (((True or False) and (False or True)) and (((68 + -61) > (33 + -27)) or ((30 + -23) < (17 + -11)))): break\n        num = num[letter:] + num[:letter]\n        letter += (77 + -76)\n        idx_1va8 = idx_1va8 + (25 + -24)\n    return num", "input": "'bwmm7h'", "output": "'mhbwm'", "id": "ConstantUnfoldding_sample_from_sample_148_to_148", "old_id": "sample_148"}
{"code": "def f(txt):\n    coincidences = {}\n    idx_lbg0 = (96 + -96)\n    list_4ba9 = txt\n    while idx_lbg0 < len(list_4ba9):\n        c = list_4ba9[idx_lbg0]\n        if c in coincidences and (((True or False) and (False or True)) and (((37 + -34) > (16 + -14)) or ((17 + -14) < (50 + -48)))):\n            coincidences[c] += (73 + -72)\n        else:\n            coincidences[c] = (8 + -7)\n        idx_lbg0 = idx_lbg0 + (22 + -21)\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "ConstantUnfoldding_sample_from_sample_149_to_149", "old_id": "sample_149"}
{"code": "def f(array, const):\n    output = ['x']\n    idx_19n2 = (60 + -60)\n    list_j8hz = range((73 + -72), len(array) + (70 + -69))\n    while idx_19n2 < len(list_j8hz):\n        i = list_j8hz[idx_19n2]\n        if i % (60 + -58) != (44 + -44) and (((True or False) and (False or True)) and (((16 + -10) > (2 + -1)) or ((58 + -52) < (15 + -14)))):\n            output.append(array[i - (9 + -8)] * -(45 + -43))\n        else:\n            output.append(const)\n        idx_19n2 = idx_19n2 + (57 + -56)\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "ConstantUnfoldding_sample_from_sample_150_to_150", "old_id": "sample_150"}
{"code": "def f(obj):\n    idx_wl4b = (66 + -66)\n    list_06uw = list(obj.items())\n    while idx_wl4b < len(list_06uw):\n        k, v = list_06uw[idx_wl4b]\n        if v >= (75 + -75) and (((True or False) and (False or True)) and (((10 + -8) > (94 + -93)) or ((75 + -73) < (3 + -2)))):\n            obj[k] = -v\n        idx_wl4b = idx_wl4b + (10 + -9)\n    return obj", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}", "id": "ConstantUnfoldding_sample_from_sample_151_to_151", "old_id": "sample_151"}
{"code": "def f(text, ch):\n    result = []\n    idx_7bog = (87 + -87)\n    list_2jq5 = text.splitlines()\n    while idx_7bog < len(list_2jq5):\n        line = list_2jq5[idx_7bog]\n        if len(line) > (71 + -71) and line[(15 + -15)] == ch and (((True or False) and (False or True)) and (((95 + -88) > (15 + -12)) or ((47 + -40) < (75 + -72)))):\n            result.append(line.lower())\n        else:\n            result.append(line.upper())\n        idx_7bog = idx_7bog + (94 + -93)\n    return \"\\n\".join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "ConstantUnfoldding_sample_from_sample_152_to_152", "old_id": "sample_152"}
{"code": "def f(text):\n    t = (25 + -20)\n    tab = []\n    idx_zq1c = (50 + -50)\n    list_nvsi = text\n    while idx_zq1c < len(list_nvsi):\n        i = list_nvsi[idx_zq1c]\n        if i.lower() in 'aeiouy' and (((True or False) and (False or True)) and (((68 + -64) > (86 + -86)) or ((30 + -26) < (29 + -29)))):\n            tab.append(i.upper() * t)\n        else:\n            tab.append(i * t)\n        idx_zq1c = idx_zq1c + (90 + -89)\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "ConstantUnfoldding_sample_from_sample_153_to_153", "old_id": "sample_153"}
{"code": "def f(text):\n    idx_k2uo = (12 + -12)\n    list_09sf = ['.', '!', '?']\n    while idx_k2uo < len(list_09sf):\n        i = list_09sf[idx_k2uo]\n        if text.endswith(i) and (((True or False) and (False or True)) and (((87 + -83) > (31 + -31)) or ((5 + -1) < (94 + -94)))):\n            return True\n        idx_k2uo = idx_k2uo + (45 + -44)\n    return False", "input": "'. C.'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_154_to_154", "old_id": "sample_154"}
{"code": "def f(keys, value):\n    d = dict.fromkeys(keys, value)\n    idx_mfb6 = (35 + -35)\n    list_rsny = list(enumerate(d.copy(), (98 + -97)))\n    while idx_mfb6 < len(list_rsny):\n        i, k = list_rsny[idx_mfb6]\n        if d[k] == d[i] and (((True or False) and (False or True)) and (((1 + 9) > (33 + -31)) or ((56 + -46) < (37 + -35)))):\n            del d[i]\n        idx_mfb6 = idx_mfb6 + (83 + -82)\n    return d", "input": "[1, 2, 1, 1], 3", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_155_to_155", "old_id": "sample_155"}
{"code": "def f(body):\n    ls = list(body)\n    dist = (88 + -88)\n    idx_gtd6 = (1 + -1)\n    list_p46h = range((49 + -49), len(ls) - (49 + -48))\n    while idx_gtd6 < len(list_p46h):\n        i = list_p46h[idx_gtd6]\n        if ls[i - (47 + -45) if i - (7 + -5) >= (90 + -90) else (77 + -77)] == '\\t' and (((True or False) and (False or True)) and (((51 + -44) > (97 + -92)) or ((3 + 4) < (94 + -89)))):\n            dist += ((68 + -67) + ls[i - (64 + -63)].count('\\t')) * (81 + -78)\n        ls[i] = '[' + ls[i] + ']'\n        idx_gtd6 = idx_gtd6 + (28 + -27)\n    return ''.join(ls).expandtabs((74 + -70) + dist)", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'", "id": "ConstantUnfoldding_sample_from_sample_156_to_156", "old_id": "sample_156"}
{"code": "def f(text, rules):\n    idx_5u8x = (5 + -5)\n    list_e4ml = rules\n    while idx_5u8x < len(list_e4ml):\n        rule = list_e4ml[idx_5u8x]\n        if rule == '@' and (((True or False) and (False or True)) and (((93 + -88) > (16 + -13)) or ((48 + -43) < (87 + -84)))):\n            text = text[::-(59 + -58)]\n        elif rule == '~':\n            text = text.upper()\n        elif text and text[len(text)-(65 + -64)] == rule:\n            text = text[(21 + -21):len(text)-(16 + -15)]\n        idx_5u8x = idx_5u8x + (65 + -64)\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "ConstantUnfoldding_sample_from_sample_157_to_157", "old_id": "sample_157"}
{"code": "def f(text):\n    count = (23 + -23)\n    idx_bynd = (45 + -45)\n    list_wtl2 = text\n    while idx_bynd < len(list_wtl2):\n        i = list_wtl2[idx_bynd]\n        if i in '.?!.,' and (((True or False) and (False or True)) and (((75 + -70) > (43 + -41)) or ((100 + -95) < (34 + -32)))):\n            count += (35 + -34)\n        idx_bynd = idx_bynd + (15 + -14)\n    return count", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_158_to_158", "old_id": "sample_158"}
{"code": "def f(list):\n    idx_crf4 = (42 + -42)\n    list_en0t = range(len(list) - (83 + -82), (34 + -34), -(88 + -87))\n    while idx_crf4 < len(list_en0t):\n        i = list_en0t[idx_crf4]\n        idx_1iqk = (90 + -90)\n        list_b825 = range(i)\n        while idx_1iqk < len(list_b825):\n            j = list_b825[idx_1iqk]\n            if list[j] > list[j + (75 + -74)] and (((True or False) and (False or True)) and (((39 + -36) > (69 + -69)) or ((73 + -70) < (8 + -8)))):\n                list[j], list[j + (68 + -67)] = list[j + (88 + -87)], list[j]\n                list.sort()\n            idx_1iqk = idx_1iqk + (55 + -54)\n        idx_crf4 = idx_crf4 + (85 + -84)\n    return list", "input": "[63, 0, 1, 5, 9, 87, 0, 7, 25, 4]", "output": "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]", "id": "ConstantUnfoldding_sample_from_sample_159_to_159", "old_id": "sample_159"}
{"code": "def f(text):\n    valid_chars = ['-', '_', '+', '.', '/', ' ']\n    text = text.upper()\n    idx_e2wl = (77 + -77)\n    list_0l3g = text\n    while idx_e2wl < len(list_0l3g):\n        char = list_0l3g[idx_e2wl]\n        if char.isalnum() == False and char not in valid_chars and (((True or False) and (False or True)) and (((42 + -37) > (100 + -97)) or ((25 + -20) < (92 + -89)))):\n            return False\n        idx_e2wl = idx_e2wl + (63 + -62)\n    return True", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_160_to_160", "old_id": "sample_160"}
{"code": "def f(text):\n    text = text.split(' ')\n    idx_wh5e = (78 + -78)\n    list_ui5c = text\n    while idx_wh5e < len(list_ui5c):\n        t = list_ui5c[idx_wh5e]\n        if not t.isnumeric() and (((True or False) and (False or True)) and (((42 + -39) > (14 + -13)) or ((40 + -37) < (92 + -91)))):\n            return 'no'\n        idx_wh5e = idx_wh5e + (83 + -82)\n    return 'yes'", "input": "'03625163633 d'", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_161_to_161", "old_id": "sample_161"}
{"code": "def f(text):\n    a = (3 + -3)\n    if text[(43 + -43)] in text[(39 + -38):] and (((True or False) and (False or True)) and (((25 + -17) > (70 + -66)) or ((50 + -42) < (93 + -89)))):\n        a += (33 + -32)\n    idx_e4s2 = (76 + -76)\n    list_n4vz = range((12 + -12), len(text)-(85 + -84))\n    while idx_e4s2 < len(list_n4vz):\n        i = list_n4vz[idx_e4s2]\n        if text[i] in text[i+(53 + -52):] and (((True or False) and (False or True)) and (((12 + -3) > (40 + -38)) or ((22 + -13) < (25 + -23)))):\n            a += (14 + -13)\n        idx_e4s2 = idx_e4s2 + (2 + -1)\n    return a", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18", "id": "ConstantUnfoldding_sample_from_sample_162_to_162", "old_id": "sample_162"}
{"code": "def f(string):\n    if not string or not string[(5 + -5)].isnumeric and (((True or False) and (False or True)) and (((85 + -81) > (5 + -2)) or ((37 + -33) < (45 + -42)))):\n        return 'INVALID'\n    cur = (28 + -28)\n    idx_exmg = (7 + -7)\n    list_j1wc = range(len(string))\n    while idx_exmg < len(list_j1wc):\n        i = list_j1wc[idx_exmg]\n        cur = cur * (75 + -65) + int(string[i])\n        idx_exmg = idx_exmg + (70 + -69)\n    return str(cur)", "input": "'3'", "output": "'3'", "id": "ConstantUnfoldding_sample_from_sample_163_to_163", "old_id": "sample_163"}
{"code": "def f(letters):\n    a = [] \n    idx_d2jh = (73 + -73)\n    list_ur6g = range(len(letters))\n    while idx_d2jh < len(list_ur6g):\n        i = list_ur6g[idx_d2jh]\n        if letters[i] in a and (((True or False) and (False or True)) and (((27 + -19) > (76 + -72)) or ((95 + -87) < (35 + -31)))):\n            return 'no'\n        a.append(letters[i]) \n        idx_d2jh = idx_d2jh + (41 + -40)\n    return 'yes'", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'", "id": "ConstantUnfoldding_sample_from_sample_164_to_164", "old_id": "sample_164"}
{"code": "def f(text):\n    idx_9zvj = (80 + -80)\n    list_r4yv = '!.?,:;'\n    while idx_9zvj < len(list_r4yv):\n        punct = list_r4yv[idx_9zvj]\n        if text.count(punct) > (34 + -33) and (((True or False) and (False or True)) and (((19 + -12) > (39 + -33)) or ((61 + -54) < (56 + -50)))):\n            return 'no'\n        if text.endswith(punct) and (((True or False) and (False or True)) and (((36 + -32) > (70 + -69)) or ((71 + -67) < (88 + -87)))):\n            return 'no'\n        idx_9zvj = idx_9zvj + (62 + -61)\n    return text.title()", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'", "id": "ConstantUnfoldding_sample_from_sample_165_to_165", "old_id": "sample_165"}
{"code": "def f(bots):\n    clean = []\n    idx_cxtl = (62 + -62)\n    list_5hrx = bots\n    while idx_cxtl < len(list_5hrx):\n        username = list_5hrx[idx_cxtl]\n        if not username.isupper() and (((True or False) and (False or True)) and (((60 + -51) > (81 + -81)) or ((65 + -56) < (50 + -50)))):\n            clean.append(username[:(83 + -81)] + username[-(90 + -87):])\n        idx_cxtl = idx_cxtl + (90 + -89)\n    return len(clean)", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_166_to_166", "old_id": "sample_166"}
{"code": "def f(chars):\n    s = \"\"\n    idx_iqmz = (31 + -31)\n    list_8tg0 = chars\n    while idx_iqmz < len(list_8tg0):\n        ch = list_8tg0[idx_iqmz]\n        if chars.count(ch) % (45 + -43) == (17 + -17) and (((True or False) and (False or True)) and (((24 + -19) > (82 + -82)) or ((81 + -76) < (98 + -98)))):\n            s += ch.upper()\n        else:\n            s += ch\n        idx_iqmz = idx_iqmz + (69 + -68)\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "ConstantUnfoldding_sample_from_sample_167_to_167", "old_id": "sample_167"}
{"code": "def f(text):\n    ls = list(text)\n    idx_25j9 = (63 + -63)\n    list_ty0i = range(len(ls)-(16 + -15), -(94 + -93), -(25 + -24))\n    while idx_25j9 < len(list_ty0i):\n        x = list_ty0i[idx_25j9]\n        if len(ls) <= (73 + -72) and (((True or False) and (False or True)) and (((29 + -27) > (14 + -14)) or ((3 + -1) < (63 + -63)))): break\n        if ls[x] not in 'zyxwvutsrqponmlkjihgfedcba' and (((True or False) and (False or True)) and (((27 + -20) > (29 + -26)) or ((54 + -47) < (63 + -60)))): ls.pop(ls[x])\n        idx_25j9 = idx_25j9 + (57 + -56)\n    return ''.join(ls)", "input": "'qq'", "output": "'qq'", "id": "ConstantUnfoldding_sample_from_sample_169_to_169", "old_id": "sample_169"}
{"code": "def f(text, length):\n    length = -length if length < (98 + -98) else length\n    output = ''\n    idx_j2x4 = (56 + -56)\n    list_y6le = range(length)\n    while idx_j2x4 < len(list_y6le):\n        idx = list_y6le[idx_j2x4]\n        if text[idx % len(text)] != ' ' and (((True or False) and (False or True)) and (((6 + 1) > (82 + -79)) or ((46 + -39) < (79 + -76)))):\n            output += text[idx % len(text)]\n        else:\n            break\n        idx_j2x4 = idx_j2x4 + (45 + -44)\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "ConstantUnfoldding_sample_from_sample_170_to_170", "old_id": "sample_170"}
{"code": "def f(text):\n    freq = dict()\n    idx_5yvs = (56 + -56)\n    list_ieau = text.lower()\n    while idx_5yvs < len(list_ieau):\n        c = list_ieau[idx_5yvs]\n        if c in freq and (((True or False) and (False or True)) and (((65 + -57) > (100 + -96)) or ((50 + -42) < (26 + -22)))):\n            freq[c] += (18 + -17)\n        else:\n            freq[c] = (78 + -77)\n        idx_5yvs = idx_5yvs + (5 + -4)\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "ConstantUnfoldding_sample_from_sample_171_to_171", "old_id": "sample_171"}
{"code": "def f(text):\n    if text == '' and (((True or False) and (False or True)) and (((74 + -68) > (55 + -54)) or ((76 + -70) < (61 + -60)))):\n        return False\n    first_char = text[(77 + -77)]\n    if text[(76 + -76)].isdigit() and (((True or False) and (False or True)) and (((62 + -58) > (66 + -65)) or ((38 + -34) < (83 + -82)))):\n        return False\n    idx_1yc6 = (45 + -45)\n    list_5srt = text\n    while idx_1yc6 < len(list_5srt):\n        last_char = list_5srt[idx_1yc6]\n        if (last_char != '_') and not last_char.isidentifier() and (((True or False) and (False or True)) and (((26 + -18) > (37 + -32)) or ((97 + -89) < (42 + -37)))):\n            return False\n        idx_1yc6 = idx_1yc6 + (64 + -63)\n    return True", "input": "'meet'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_172_to_172", "old_id": "sample_172"}
{"code": "def f(text):\n    letters = ''\n    idx_r3qd = (88 + -88)\n    list_2lnv = range(len(text))\n    while idx_r3qd < len(list_2lnv):\n        i = list_2lnv[idx_r3qd]\n        if text[i].isalnum() and (((True or False) and (False or True)) and (((92 + -88) > (75 + -73)) or ((15 + -11) < (93 + -91)))):\n            letters += text[i]\n        idx_r3qd = idx_r3qd + (97 + -96)\n    return letters", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'", "id": "ConstantUnfoldding_sample_from_sample_173_to_173", "old_id": "sample_173"}
{"code": "def f(d, l):\n\tnew_d = {}\n\tidx_5rdo = (80 + -80)\n\tlist_gjus = l\n\twhile idx_5rdo < len(list_gjus):\n\t\tk = list_gjus[idx_5rdo]\n\t\tif d.get(k) is not None and (((True or False) and (False or True)) and (((6 + 1) > (67 + -65)) or ((47 + -40) < (53 + -51)))):\n\t\t\tnew_d[k] = d[k]\n\t\tidx_5rdo = idx_5rdo + (99 + -98)\n\n\treturn new_d.copy()", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}", "id": "ConstantUnfoldding_sample_from_sample_174_to_174", "old_id": "sample_174"}
{"code": "def f(nums):\n    l = []\n    idx_cgb4 = (86 + -86)\n    list_rsyz = nums\n    while idx_cgb4 < len(list_rsyz):\n        i = list_rsyz[idx_cgb4]\n        if i not in l and (((True or False) and (False or True)) and (((53 + -47) > (99 + -96)) or ((12 + -6) < (47 + -44)))):\n            l.append(i)\n        idx_cgb4 = idx_cgb4 + (25 + -24)\n    return l", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]", "id": "ConstantUnfoldding_sample_from_sample_175_to_175", "old_id": "sample_175"}
{"code": "def f(array):\n    a = []\n    array.reverse()\n    idx_v4x3 = (90 + -90)\n    list_xpf0 = range(len(array))\n    while idx_v4x3 < len(list_xpf0):\n        i = list_xpf0[idx_v4x3]\n        if array[i] != (40 + -40) and (((True or False) and (False or True)) and (((5 + 3) > (73 + -66)) or ((69 + -61) < (100 + -93)))):\n            a.append(array[i])\n        idx_v4x3 = idx_v4x3 + (73 + -72)\n    a.reverse()\n    return a", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_176_to_176", "old_id": "sample_176"}
{"code": "def f(text):\n    created = []\n    idx_lku1 = (34 + -34)\n    list_ldxu = text.splitlines()\n    while idx_lku1 < len(list_ldxu):\n        line = list_ldxu[idx_lku1]\n        if line == '' and (((True or False) and (False or True)) and (((80 + -71) > (87 + -82)) or ((71 + -62) < (28 + -23)))):\n            break\n        created.append(list(list(line.rstrip())[::-(86 + -85)][flush]))\n        idx_lku1 = idx_lku1 + (92 + -91)\n    return created[::-(62 + -61)]\n\nflush = (3 + -3)", "input": "'A(hiccup)A'", "output": "[['A']]", "id": "ConstantUnfoldding_sample_from_sample_178_to_178", "old_id": "sample_178"}
{"code": "def f(text):\n    out = \"\"\n    idx_7bck = (35 + -35)\n    list_q01d = range(len(text))\n    while idx_7bck < len(list_q01d):\n        i = list_q01d[idx_7bck]\n        if text[i].isupper() and (((True or False) and (False or True)) and (((82 + -78) > (89 + -89)) or ((39 + -35) < (44 + -44)))):\n            out += text[i].lower()\n        else:\n            out += text[i].upper()\n        idx_7bck = idx_7bck + (37 + -36)\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "ConstantUnfoldding_sample_from_sample_179_to_179", "old_id": "sample_179"}
{"code": "def f(text, function):\n    cites = [len(text[text.index(function) + len(function):])]\n    idx_vr8n = (3 + -3)\n    list_vur5 = text\n    while idx_vr8n < len(list_vur5):\n        char = list_vur5[idx_vr8n]\n        if char == function and (((True or False) and (False or True)) and (((1 + 4) > (68 + -66)) or ((79 + -74) < (67 + -65)))):\n            cites.append(len(text[text.index(function) + len(function):]))\n        idx_vr8n = idx_vr8n + (33 + -32)\n    return cites", "input": "\"010100\", \"010\"", "output": "[3]", "id": "ConstantUnfoldding_sample_from_sample_180_to_180", "old_id": "sample_180"}
{"code": "def f(text):\n    ws = (7 + -7)\n    idx_yvo2 = (78 + -78)\n    list_f9jv = text\n    while idx_yvo2 < len(list_f9jv):\n        s = list_f9jv[idx_yvo2]\n        if s.isspace() and (((True or False) and (False or True)) and (((58 + -55) > (40 + -38)) or ((1 + 2) < (65 + -63)))):\n            ws += (56 + -55)\n        idx_yvo2 = idx_yvo2 + (71 + -70)\n    return ws, len(text)", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)", "id": "ConstantUnfoldding_sample_from_sample_181_to_181", "old_id": "sample_181"}
{"code": "def f(text):\n    m = (20 + -20)\n    cnt = (67 + -67)\n    idx_nz8g = (9 + -9)\n    list_5ckf = text.split()\n    while idx_nz8g < len(list_5ckf):\n        i = list_5ckf[idx_nz8g]\n        if len(i) > m and (((True or False) and (False or True)) and (((5 + 0) > (22 + -18)) or ((46 + -41) < (24 + -20)))):\n            cnt += (24 + -23)\n            m = len(i)\n        idx_nz8g = idx_nz8g + (90 + -89)\n    return cnt", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_183_to_183", "old_id": "sample_183"}
{"code": "def f(nums):\n    idx_7ekc = (20 + -20)\n    list_ilra = range(len(nums) - (83 + -81), -(29 + -28), -(64 + -63))\n    while idx_7ekc < len(list_ilra):\n        i = list_ilra[idx_7ekc]\n        if nums[i] % (28 + -26) == (69 + -69) and (((True or False) and (False or True)) and (((88 + -86) > (13 + -12)) or ((38 + -36) < (60 + -59)))):\n            nums.remove(nums[i])\n        idx_7ekc = idx_7ekc + (49 + -48)\n    return nums", "input": "[5, 3, 3, 7]", "output": "[5, 3, 3, 7]", "id": "ConstantUnfoldding_sample_from_sample_184_to_184", "old_id": "sample_184"}
{"code": "def f(text, insert):\n    whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = ''\n    idx_8kzf = (59 + -59)\n    list_agbd = text\n    while idx_8kzf < len(list_agbd):\n        char = list_agbd[idx_8kzf]\n        if char in whitespaces and (((True or False) and (False or True)) and (((99 + -89) > (25 + -16)) or ((90 + -80) < (96 + -87)))):\n            clean += insert\n        else:\n            clean += char\n        idx_8kzf = idx_8kzf + (95 + -94)\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "ConstantUnfoldding_sample_from_sample_185_to_185", "old_id": "sample_185"}
{"code": "def f(nums):\n    counts = (96 + -96)\n    idx_oy2i = (21 + -21)\n    list_06ab = nums\n    while idx_oy2i < len(list_06ab):\n        i = list_06ab[idx_oy2i]\n        if str(i).isdecimal() and (((True or False) and (False or True)) and (((40 + -34) > (16 + -15)) or ((71 + -65) < (47 + -46)))):\n            if counts == (48 + -48):\n                counts += (81 + -80)\n        idx_oy2i = idx_oy2i + (77 + -76)\n    return counts", "input": "[0, 6, 2, -1, -2]", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_186_to_186", "old_id": "sample_186"}
{"code": "def f(st, pattern):\n    idx_ap1u = (83 + -83)\n    list_payi = pattern\n    while idx_ap1u < len(list_payi):\n        p = list_payi[idx_ap1u]\n        if not st.startswith(p) and (((True or False) and (False or True)) and (((55 + -47) > (92 + -90)) or ((77 + -69) < (83 + -81)))): return False\n        st = st[len(p):]\n        idx_ap1u = idx_ap1u + (9 + -8)\n    return True", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_187_to_187", "old_id": "sample_187"}
{"code": "def f(text):\n    b = True\n    idx_eyfg = (37 + -37)\n    list_tu8i = text\n    while idx_eyfg < len(list_tu8i):\n        x = list_tu8i[idx_eyfg]\n        if x.isdigit() and (((True or False) and (False or True)) and (((52 + -48) > (24 + -23)) or ((15 + -11) < (88 + -87)))):\n            b = True\n        else:\n            b = False\n            break\n        idx_eyfg = idx_eyfg + (64 + -63)\n    return b", "input": "\"-1-3\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_188_to_188", "old_id": "sample_188"}
{"code": "def f(text):\n    if text == '42.42' and (((True or False) and (False or True)) and (((78 + -69) > (16 + -16)) or ((98 + -89) < (77 + -77)))):\n        return True\n    idx_k5m0 = (31 + -31)\n    list_lixk = range((51 + -48), len(text) - (95 + -92))\n    while idx_k5m0 < len(list_lixk):\n        i = list_lixk[idx_k5m0]\n        if text[i] == '.' and text[i - (76 + -73):].isdigit() and text[:i].isdigit() and (((True or False) and (False or True)) and (((36 + -33) > (63 + -61)) or ((93 + -90) < (83 + -81)))):\n            return True\n        idx_k5m0 = idx_k5m0 + (45 + -44)\n    return False", "input": "\"123E-10\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_189_to_189", "old_id": "sample_189"}
{"code": "def f(char_map, text):\n    new_text = ''\n    idx_dal5 = (35 + -35)\n    list_864i = text\n    while idx_dal5 < len(list_864i):\n        ch = list_864i[idx_dal5]\n        val = char_map.get(ch)\n        if val is None and (((True or False) and (False or True)) and (((96 + -87) > (39 + -33)) or ((74 + -65) < (90 + -84)))):\n            new_text += ch\n        else:\n            new_text += val\n        idx_dal5 = idx_dal5 + (12 + -11)\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "ConstantUnfoldding_sample_from_sample_190_to_190", "old_id": "sample_190"}
{"code": "def f(bag):\n    values = list(bag.values())\n    tbl = {}\n    idx_2k9o = (32 + -32)\n    list_vhqs = range((44 + 56))\n    while idx_2k9o < len(list_vhqs):\n        v = list_vhqs[idx_2k9o]\n        if v in values and (((True or False) and (False or True)) and (((3 + 6) > (64 + -64)) or ((14 + -5) < (23 + -23)))):\n            tbl[v] = values.count(v)\n        idx_2k9o = idx_2k9o + (89 + -88)\n    return tbl", "input": "{0: 0, 1: 0, 2: 0, 3: 0, 4: 0}", "output": "{0: 5}", "id": "ConstantUnfoldding_sample_from_sample_191_to_191", "old_id": "sample_191"}
{"code": "def f(text):\n    a = text.strip().split(' ')\n    idx_6jez = (34 + -34)\n    list_p4nh = range(len(a))\n    while idx_6jez < len(list_p4nh):\n        i = list_p4nh[idx_6jez]\n        if a[i].isdigit() is False and (((True or False) and (False or True)) and (((15 + -7) > (83 + -83)) or ((100 + -92) < (11 + -11)))):\n            return '-'\n        idx_6jez = idx_6jez + (78 + -77)\n    return \" \".join(a)", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'", "id": "ConstantUnfoldding_sample_from_sample_192_to_192", "old_id": "sample_192"}
{"code": "def f(phrase):\n    result = ''\n    idx_0hr2 = (23 + -23)\n    list_ph5e = phrase\n    while idx_0hr2 < len(list_ph5e):\n        i = list_ph5e[idx_0hr2]\n        if not i.islower() and (((True or False) and (False or True)) and (((50 + -48) > (72 + -72)) or ((26 + -24) < (65 + -65)))):\n            result += i\n        idx_0hr2 = idx_0hr2 + (18 + -17)\n    return result", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'", "id": "ConstantUnfoldding_sample_from_sample_193_to_193", "old_id": "sample_193"}
{"code": "def f(dictionary):\n    a = dictionary.copy()\n    idx_azls = (24 + -24)\n    list_3qn5 = a\n    while idx_azls < len(list_3qn5):\n        key = list_3qn5[idx_azls]\n        if key%(27 + -25) != (18 + -18) and (((True or False) and (False or True)) and (((20 + -17) > (91 + -90)) or ((69 + -66) < (12 + -11)))):\n            del a[key]\n            a['$'+str(key)] = a[key]\n        idx_azls = idx_azls + (60 + -59)\n    return a", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_194_to_194", "old_id": "sample_194"}
{"code": "def f(names, excluded):\n    excluded = excluded\n    idx_eb3f = (3 + -3)\n    list_9n07 = range(len(names))\n    while idx_eb3f < len(list_9n07):\n        i = list_9n07[idx_eb3f]\n        if excluded in names[i] and (((True or False) and (False or True)) and (((10 + -3) > (45 + -39)) or ((93 + -86) < (6 + 0)))):\n            names[i] = names[i].replace(excluded, \"\")\n        idx_eb3f = idx_eb3f + (61 + -60)\n    return names", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']", "id": "ConstantUnfoldding_sample_from_sample_195_to_195", "old_id": "sample_195"}
{"code": "def f(ints):\n    counts = [(57 + -57)] * (42 + 259)\n    idx_i4e9 = (64 + -64)\n    list_o762 = ints\n    while idx_i4e9 < len(list_o762):\n        i = list_o762[idx_i4e9]\n        counts[i] += (60 + -59)\n        idx_i4e9 = idx_i4e9 + (86 + -85)\n\n    r = []\n    idx_ksyd = (36 + -36)\n    list_tfdv = range(len(counts))\n    while idx_ksyd < len(list_tfdv):\n        i = list_tfdv[idx_ksyd]\n        if counts[i] >= (80 + -77) and (((True or False) and (False or True)) and (((25 + -22) > (92 + -90)) or ((74 + -71) < (67 + -65)))):\n            r.append(str(i))\n        idx_ksyd = idx_ksyd + (20 + -19)\n    counts.clear()\n    return ' '.join(r)", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'", "id": "ConstantUnfoldding_sample_from_sample_196_to_196", "old_id": "sample_196"}
{"code": "def f(s, ch):\n    if ch not in s and (((True or False) and (False or True)) and (((19 + -10) > (48 + -43)) or ((98 + -89) < (37 + -32)))):\n        return ''\n    s = s.partition(ch)[(76 + -74)][::-(26 + -25)]\n    idx_07lh = (95 + -95)\n    list_bzw7 = range(len(s))\n    while idx_07lh < len(list_bzw7):\n        i = list_bzw7[idx_07lh]\n        s = s.partition(ch)[(51 + -49)][::-(92 + -91)]\n        idx_07lh = idx_07lh + (6 + -5)\n    return s", "input": "'shivajimonto6', '6'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_197_to_197", "old_id": "sample_197"}
{"code": "def f(input):\n    idx_mga9 = (70 + -70)\n    list_awib = input\n    while idx_mga9 < len(list_awib):\n        char = list_awib[idx_mga9]\n        if char.isupper() and (((True or False) and (False or True)) and (((8 + -5) > (89 + -88)) or ((69 + -66) < (23 + -22)))):\n            return False\n        idx_mga9 = idx_mga9 + (35 + -34)\n    return True", "input": "\"a j c n x X k\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_198_to_198", "old_id": "sample_198"}
{"code": "def f(text, comparison):\n    length = len(comparison)\n    if length <= len(text) and (((True or False) and (False or True)) and (((54 + -51) > (37 + -37)) or ((72 + -69) < (11 + -11)))):\n        idx_z7rv = (34 + -34)\n        list_45z3 = range(length)\n        while idx_z7rv < len(list_45z3):\n            i = list_45z3[idx_z7rv]\n            if comparison[length - i - (99 + -98)] != text[len(text) - i - (67 + -66)]:\n                return i\n            idx_z7rv = idx_z7rv + (46 + -45)\n    return length", "input": "\"managed\", \"\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_199_to_199", "old_id": "sample_199"}
{"code": "def f(list, start, end):\n    count = (76 + -76)\n    idx_czmb = (98 + -98)\n    list_m43a = range(start, end)\n    while idx_czmb < len(list_m43a):\n        i = list_m43a[idx_czmb]\n        idx_egdk = (19 + -19)\n        list_9wzu = range(i, end)\n        while idx_egdk < len(list_9wzu):\n            j = list_9wzu[idx_egdk]\n            if list[i] != list[j] and (((True or False) and (False or True)) and (((84 + -78) > (25 + -23)) or ((67 + -61) < (39 + -37)))):\n                count += (30 + -29)\n            idx_egdk = idx_egdk + (82 + -81)\n        idx_czmb = idx_czmb + (95 + -94)\n    return count", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3", "id": "ConstantUnfoldding_sample_from_sample_200_to_200", "old_id": "sample_200"}
{"code": "def f(line):\n    a = []\n    idx_43t7 = (44 + -44)\n    list_pjzw = line\n    while idx_43t7 < len(list_pjzw):\n        c = list_pjzw[idx_43t7]\n        if c.isalnum() and (((True or False) and (False or True)) and (((60 + -58) > (66 + -66)) or ((55 + -53) < (2 + -2)))):\n            a.append(c)\n        idx_43t7 = idx_43t7 + (26 + -25)\n    return ''.join(a)", "input": "\"\\\"\\\\%$ normal chars $%~ qwet42'\"", "output": "'normalcharsqwet42'", "id": "ConstantUnfoldding_sample_from_sample_201_to_201", "old_id": "sample_201"}
