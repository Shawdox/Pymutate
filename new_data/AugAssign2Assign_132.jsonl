{"code": "def f(array):\n    s = ' '\n    s = s + ''.join(array)\n    return s", "input": "[' ', '  ', '    ', '   ']", "output": "'           '", "id": "AugAssign2Assign_sample_from_4_to_0", "old_id": "sample_4"}
{"code": "def f(text, lower, upper):\n    count = 0\n    new_text = list()\n    for char in text:\n        char = lower if char.isdecimal() else upper\n        if char in ['p', 'C']:\n            count = count + 1\n        new_text.append(char)\n    return count, ''.join(new_text)", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')", "id": "AugAssign2Assign_sample_from_5_to_1", "old_id": "sample_5"}
{"code": "def f(text):\n    new_text = ''\n    for ch in text.lower().strip():\n        if ch.isnumeric() or ch in '\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc':\n            new_text = new_text + ch\n    return new_text", "input": "''", "output": "''", "id": "AugAssign2Assign_sample_from_10_to_2", "old_id": "sample_10"}
{"code": "def f(s, x):\n    count = 0\n    while s[:len(x)] == x and count < len(s)-len(x):\n        s = s[len(x):]\n        count = count + len(x)\n    return s", "input": "'If you want to live a happy life! Daniel', 'Daniel'", "output": "'If you want to live a happy life! Daniel'", "id": "AugAssign2Assign_sample_from_12_to_3", "old_id": "sample_12"}
{"code": "def f(names):\n    count = len(names)\n    numberOfNames = 0\n    for i in names:\n        if i.isalpha():\n            numberOfNames = numberOfNames + 1\n    return numberOfNames", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2", "id": "AugAssign2Assign_sample_from_13_to_4", "old_id": "sample_13"}
{"code": "def f(array, elem):\n    k = 0\n    l = array.copy()\n    for i in l:\n        if i > elem:\n            array.insert(k, elem)\n            break\n        k = k + 1\n    return array", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]", "id": "AugAssign2Assign_sample_from_18_to_5", "old_id": "sample_18"}
{"code": "def f(text):\n    result = ''\n    for i in range(len(text)-1, -1, -1):\n        result = result + text[i]\n    return result", "input": "'was,'", "output": "',saw'", "id": "AugAssign2Assign_sample_from_20_to_6", "old_id": "sample_20"}
{"code": "def f(w):\n    ls = list(w)\n    omw = ''\n    while len(ls) > 0:\n        omw = omw + ls.pop(0)\n        if len(ls) * 2 > len(w):\n            return w[len(ls):] == omw\n    return False", "input": "'flak'", "output": "False", "id": "AugAssign2Assign_sample_from_27_to_7", "old_id": "sample_27"}
{"code": "def f(string):\n    upper = 0\n    for c in string:\n        if c.isupper():\n            upper = upper + 1\n    return upper * (2,1)[upper % 2]", "input": "'PoIOarTvpoead'", "output": "8", "id": "AugAssign2Assign_sample_from_31_to_8", "old_id": "sample_31"}
{"code": "def f(text, letter):\n    counts = {}\n    for char in text:\n        if char not in counts:\n            counts[char] = 1\n        else:\n            counts[char] = counts[char] + 1\n    return counts.get(letter, 0)", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "AugAssign2Assign_sample_from_45_to_9", "old_id": "sample_45"}
{"code": "def f(lst):\n    lst.clear()\n    lst = lst + [1] * (len(lst) + 1)\n    return lst", "input": "['a', 'c', 'v']", "output": "[1]", "id": "AugAssign2Assign_sample_from_50_to_10", "old_id": "sample_50"}
{"code": "def f(array):\n    array_2 = []\n    for i in array:\n        if i>0:\n            array_2 = array_2 + [i]\n    array_2.sort(reverse=True)\n    return array_2", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]", "id": "AugAssign2Assign_sample_from_55_to_11", "old_id": "sample_55"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = 0\n    for char in text:\n        if char.isupper():\n            count_upper = count_upper + 1\n        else:\n            return 'no'\n    return count_upper // 2", "input": "'ax'", "output": "1", "id": "AugAssign2Assign_sample_from_57_to_12", "old_id": "sample_57"}
{"code": "def f(text, size):\n    counter = len(text)\n    for i in range(size-int(size%2)):\n        text = ' '+text+' '\n        counter = counter + 2\n        if counter >= size:\n            return text", "input": "\"7\", 10", "output": "'     7     '", "id": "AugAssign2Assign_sample_from_64_to_13", "old_id": "sample_64"}
{"code": "def f(x):\n    a = 0\n    for i in x.split(' '):\n        a = a + len(i.zfill(len(i)*2))\n    return a", "input": "'999893767522480'", "output": "30", "id": "AugAssign2Assign_sample_from_70_to_14", "old_id": "sample_70"}
{"code": "def f(text):\n    arr = text.split()\n    result = []\n    for item in arr:\n        if item.endswith('day'):\n            item = item + 'y'\n        else:\n            item = item + 'day'\n        result.append(item)\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "AugAssign2Assign_sample_from_84_to_15", "old_id": "sample_84"}
{"code": "def f(text):\n    a = ['']\n    b = ''\n    for i in text:\n        if not i.isspace():\n            a.append(b)\n            b = ''\n        else:\n            b = b + i\n    return len(a)", "input": "\"       \"", "output": "1", "id": "AugAssign2Assign_sample_from_110_to_16", "old_id": "sample_110"}
{"code": "def f(line):\n    count = 0\n    a = []\n    for i in range(len(line)):\n        count = count + 1\n        if count%2==0:\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "AugAssign2Assign_sample_from_113_to_17", "old_id": "sample_113"}
{"code": "def f(text, chars):\n    num_applies = 2\n    extra_chars = ''\n    for i in range(num_applies):\n        extra_chars = extra_chars + chars\n        text = text.replace(extra_chars, '')\n    return text", "input": "'zbzquiuqnmfkx', 'mk'", "output": "'zbzquiuqnmfkx'", "id": "AugAssign2Assign_sample_from_118_to_18", "old_id": "sample_118"}
{"code": "def f(text):\n    result = \"\"\n    for i in range(len(text)):\n        if i % 2 == 0:\n            result = result + text[i].swapcase()\n        else:\n            result = result + text[i]\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "AugAssign2Assign_sample_from_119_to_19", "old_id": "sample_119"}
{"code": "def f(txt, sep, sep_count):\n    o = ''\n    while sep_count > 0 and txt.count(sep) > 0:\n        o = o + txt.rsplit(sep, 1)[0] + sep\n        txt = txt.rsplit(sep, 1)[1]\n        sep_count = sep_count + 1\n    return o + txt", "input": "'i like you', ' ', -1", "output": "'i like you'", "id": "AugAssign2Assign_sample_from_124_to_20", "old_id": "sample_124"}
{"code": "def f(text):\n    odd = ''\n    even = ''\n    for i, c in enumerate(text):\n        if i % 2 == 0:\n            even = even + c\n        else:\n            odd = odd + c\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "AugAssign2Assign_sample_from_128_to_21", "old_id": "sample_128"}
{"code": "def f(text):\n    a = len(text)\n    count = 0\n    while text:\n        if text.startswith('a'):\n            count = count + text.find(' ')\n        else:\n            count = count + text.find('\\n')\n        text = text[text.find('\\n')+1:text.find('\\n')+a+1]\n    return count", "input": "\"a\\nkgf\\nasd\\n\"", "output": "1", "id": "AugAssign2Assign_sample_from_131_to_22", "old_id": "sample_131"}
{"code": "def f(n):\n    t = 0\n    b = ''\n    digits = list(map(int, str(n)))\n    for d in digits:\n        if d == 0: t = t + 1\n        else: break\n    for _ in range(t):\n        b = b + str(1) + '0' + str(4)\n    b = b + str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "AugAssign2Assign_sample_from_134_to_23", "old_id": "sample_134"}
{"code": "def f(nums):\n    count = 0\n    for i in range(len(nums)):\n        if len(nums) == 0:\n            break\n        if count % 2 == 0:\n            nums.pop()\n        else:\n            nums.pop(0)\n        count = count + 1\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "AugAssign2Assign_sample_from_137_to_24", "old_id": "sample_137"}
{"code": "def f(price, product):\n    inventory = ['olives', 'key', 'orange']\n    if product not in inventory:\n        return price\n    else:\n        price = price + .85\n        inventory.remove(product)\n    return price", "input": "8.50, 'grapes'", "output": "8.5", "id": "AugAssign2Assign_sample_from_145_to_25", "old_id": "sample_145"}
{"code": "def f(forest, animal):\n    index = forest.index(animal)\n    result = list(forest)\n    while index < len(forest)-1:\n        result[index] = forest[index+1]\n        index = index + 1\n    if index == len(forest)-1:\n        result[index] = '-'\n    return ''.join(result)", "input": "'2imo 12 tfiqr.', 'm'", "output": "'2io 12 tfiqr.-'", "id": "AugAssign2Assign_sample_from_148_to_26", "old_id": "sample_148"}
{"code": "def f(tuple_list, joint):\n    string = ''\n    for num in tuple_list:\n        string = string + dict.fromkeys(str(num), joint * len(str(num))).popitem()[0] + joint\n    return string", "input": "(32332, 23543, 132323, 33300), ','", "output": "'2,4,2,0,'", "id": "AugAssign2Assign_sample_from_149_to_27", "old_id": "sample_149"}
{"code": "def f(numbers, index):\n    for n in numbers[index:]:\n        numbers.insert(index, n)\n        index = index + 1\n    return numbers[:index]", "input": "[-2, 4, -4], 0", "output": "[-2, 4, -4]", "id": "AugAssign2Assign_sample_from_150_to_28", "old_id": "sample_150"}
{"code": "def f(text):\n    n = 0\n    for char in text:\n        if char.isupper():\n            n = n + 1\n    return n", "input": "''.join(['A'] * 20)", "output": "20", "id": "AugAssign2Assign_sample_from_152_to_29", "old_id": "sample_152"}
{"code": "def f(ip, n):\n    i = 0\n    out = ''\n    for c in ip:\n        if i == n:\n            out = out + '\\n'\n            i = 0\n        i = i + 1\n        out = out + c\n    return out", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'", "id": "AugAssign2Assign_sample_from_155_to_30", "old_id": "sample_155"}
{"code": "def f(phrase):\n    ans = 0\n    for w in phrase.split():\n        for ch in w:\n            if ch == \"0\":\n                ans = ans + 1\n    return ans", "input": "\"aboba 212 has 0 digits\"", "output": "1", "id": "AugAssign2Assign_sample_from_157_to_31", "old_id": "sample_157"}
{"code": "def f(st):\n    swapped = ''\n    for ch in reversed(st):\n        swapped = swapped + ch.swapcase()\n    return swapped", "input": "'RTiGM'", "output": "'mgItr'", "id": "AugAssign2Assign_sample_from_159_to_32", "old_id": "sample_159"}
{"code": "def f(text):\n    result = ''\n    for char in text:\n        if char.isalnum():\n            result = result + char.upper()\n    return result", "input": "'\u0441 bishop.Swift'", "output": "'\u0421BISHOPSWIFT'", "id": "AugAssign2Assign_sample_from_162_to_33", "old_id": "sample_162"}
{"code": "def f(XAAXX, s):\n    count = 0\n    idx = -1\n    while XAAXX.find('XXXX', idx+1) != -1:\n        idx = XAAXX.find('XXXX', idx+1) \n        count = count + 1 \n    compound = count * s.title()\n    return XAAXX.replace('XXXX', compound)", "input": "'aaXXXXbbXXXXccXXXXde', 'QW'", "output": "'aaQwQwQwbbQwQwQwccQwQwQwde'", "id": "AugAssign2Assign_sample_from_167_to_34", "old_id": "sample_167"}
{"code": "def f(s):\n    count = 0\n    digits = \"\"\n    for c in s:\n        if c.isdigit():\n            count = count + 1\n            digits = digits + c\n    return [digits, count]", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]", "id": "AugAssign2Assign_sample_from_181_to_35", "old_id": "sample_181"}
{"code": "def f(L):\n    N = len(L)\n    for k in range(1, N//2 + 1):\n        i = k - 1\n        j = N - k\n        while i < j:\n            # swap elements:\n            L[i], L[j] = L[j], L[i]\n            # update i, j:\n            i = i + 1\n            j = j + 1\n    return L", "input": "[16, 14, 12, 7, 9, 11]", "output": "[11, 14, 7, 12, 9, 16]", "id": "AugAssign2Assign_sample_from_185_to_36", "old_id": "sample_185"}
{"code": "def f(text):\n    short = ''\n    for c in text:\n        if(c.islower()):\n            short = short + c\n    return short", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'", "id": "AugAssign2Assign_sample_from_190_to_37", "old_id": "sample_190"}
{"code": "def f(text, value):\n    length = len(text)\n    index = 0\n    while length > 0:\n        value = text[index] + value\n        length = length + 1\n        index = index + 1\n    return value", "input": "'jao mt', 'house'", "output": "'tm oajhouse'", "id": "AugAssign2Assign_sample_from_200_to_38", "old_id": "sample_200"}
{"code": "def f(s):\n    count = 0\n    for c in s:\n        if s.rindex(c) != s.index(c):\n            count = count + 1\n    return count", "input": "\"abca dea ead\"", "output": "10", "id": "AugAssign2Assign_sample_from_211_to_39", "old_id": "sample_211"}
{"code": "def f(letters):\n    count = 0\n    for l in letters:\n        if l.isdigit():\n            count = count + 1\n    return count", "input": "\"dp ef1 gh2\"", "output": "2", "id": "AugAssign2Assign_sample_from_216_to_40", "old_id": "sample_216"}
{"code": "def f(s1, s2):\n    for k in range(0, len(s2)+len(s1)):\n        s1 = s1 + s1[0]\n        if s1.find(s2) >= 0:\n            return True\n    return False", "input": "\"Hello\", \")\"", "output": "False", "id": "AugAssign2Assign_sample_from_219_to_41", "old_id": "sample_219"}
{"code": "def f(array, target):\n    count, i = 0, 1\n    for j in range(1, len(array)):\n        if ((array[j] > array[j-1]) and (array[j] <= target)): count = count + i\n        elif array[j] <= array[j-1]: i = 1\n        else: i = i + 1\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "AugAssign2Assign_sample_from_223_to_42", "old_id": "sample_223"}
{"code": "def f(text):\n    result = ''\n    i = len(text)-1\n    while i >= 0:\n        c = text[i]\n        if c.isalpha():\n            result = result + c\n        i = i + 1\n    return result", "input": "'102x0zoq'", "output": "'qozx'", "id": "AugAssign2Assign_sample_from_230_to_43", "old_id": "sample_230"}
{"code": "def f(text, changes):\n    result = ''\n    count = 0\n    changes = list(changes)\n    for char in text:\n        result = result + char if char in 'e' else changes[count % len(changes)]\n        count = count + (1 if char not in 'e' else 0)\n    return result", "input": "'fssnvd', 'yes'", "output": "'yesyes'", "id": "AugAssign2Assign_sample_from_232_to_44", "old_id": "sample_232"}
{"code": "def f(array, arr):\n    result = []\n    for s in arr:\n        result = result + list(filter(lambda l: l != '', s.split(arr[array.index(s)])))\n    return result", "input": "[], []", "output": "[]", "id": "AugAssign2Assign_sample_from_235_to_45", "old_id": "sample_235"}
{"code": "def f(array):\n    if len(array) == 1:\n        return ''.join(array)\n    result = list(array)\n    i = 0\n    while i < len(array)-1:\n        for j in range(2):\n            result[i*2] = array[i]\n            i = i + 1\n    return ''.join(result)", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'", "id": "AugAssign2Assign_sample_from_236_to_46", "old_id": "sample_236"}
{"code": "def f(text, symbols):\n    count = 0\n    if symbols:\n        for i in symbols:\n            count = count + 1\n        text = text * count\n    return text.rjust(len(text) + count*2)[:-2]", "input": "'', 'BC1ty'", "output": "'        '", "id": "AugAssign2Assign_sample_from_244_to_47", "old_id": "sample_244"}
{"code": "thigh_o_one = [1, 2, 7, 8, 9]\nthigh_o_two = [1, 2, 7, 9]\ndef f(L, m, start, step):\n    L.insert(start, m)\n    for x in range(start-1, 0, -step):\n        start = start + 1\n        L.insert(start, L.pop(L.index(m)-1))\n    return L", "input": "thigh_o_two[:], 3, 3, 2", "output": "[1, 2, 7, 3, 9]", "id": "AugAssign2Assign_sample_from_258_to_48", "old_id": "sample_258"}
{"code": "def f(nums, target):\n    count = 0\n    for n1 in nums:\n        for n2 in nums:\n            count = count + (n1+n2==target)\n    return count", "input": "[1, 2, 3], 4", "output": "3", "id": "AugAssign2Assign_sample_from_274_to_49", "old_id": "sample_274"}
{"code": "def f(s1, s2):\n    position = 1\n    count = 0\n    while position > 0:\n        position = s1.find(s2, position)\n        count = count + 1\n        position = position + 1\n    return count", "input": "'xinyyexyxx', 'xx'", "output": "2", "id": "AugAssign2Assign_sample_from_282_to_50", "old_id": "sample_282"}
{"code": "def f(text, prefix):\n    idx = 0\n    for letter in prefix:\n        if text[idx] != letter:\n            return None\n        idx = idx + 1\n    return text[idx:]", "input": "'bestest', 'bestest'", "output": "''", "id": "AugAssign2Assign_sample_from_284_to_51", "old_id": "sample_284"}
{"code": "def f(nums):\n    count = 1\n    for i in range(count, len(nums) - 1, 2):\n        nums[i] = max(nums[i], nums[count-1])\n        count = count + 1\n    return nums", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "AugAssign2Assign_sample_from_300_to_52", "old_id": "sample_300"}
{"code": "def f(text):\n    i = (len(text) + 1) // 2\n    result = list(text)\n    while i < len(text):\n        t = result[i].lower()\n        if t == result[i]:\n            i = i + 1\n        else:\n            result[i] = t\n        i = i + 2\n    return ''.join(result)", "input": "'mJkLbn'", "output": "'mJklbn'", "id": "AugAssign2Assign_sample_from_303_to_53", "old_id": "sample_303"}
{"code": "def f(text, suffix):\n    text = text + suffix\n    while text[-len(suffix):] == suffix:\n        text = text[:-1]\n    return text", "input": "'faqo osax f', 'f'", "output": "'faqo osax '", "id": "AugAssign2Assign_sample_from_309_to_54", "old_id": "sample_309"}
{"code": "def f(value, char):\n    total = 0\n    for c in value:\n        if c == char or c == char.lower():\n            total = total + 1\n    return total", "input": "'234rtccde', 'e'", "output": "1", "id": "AugAssign2Assign_sample_from_318_to_55", "old_id": "sample_318"}
{"code": "def f(needle, haystack):\n    count = 0\n    while needle in haystack:\n        haystack = haystack.replace(needle, '', 1)\n        count = count + 1\n    return count", "input": "'a', 'xxxaaxaaxx'", "output": "4", "id": "AugAssign2Assign_sample_from_319_to_56", "old_id": "sample_319"}
{"code": "def f(text):\n    index = 1\n    while index < len(text):\n        if text[index] != text[index - 1]:\n            index = index + 1\n        else:\n            text1 = text[:index]\n            text2 = text[index:].swapcase()\n            return text1 + text2\n    return text.swapcase()", "input": "'USaR'", "output": "'usAr'", "id": "AugAssign2Assign_sample_from_320_to_57", "old_id": "sample_320"}
{"code": "def f(update, starting):\n    d = starting.copy()\n    for k in update:\n        if k in d:\n            d[k] = d[k] + update[k]\n        else:\n            d[k] = update[k]\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "AugAssign2Assign_sample_from_321_to_58", "old_id": "sample_321"}
{"code": "def f(text):\n    number = 0\n    for t in text:\n        if t.isnumeric():\n            number = number + 1\n    return number", "input": "'Thisisastring'", "output": "0", "id": "AugAssign2Assign_sample_from_326_to_59", "old_id": "sample_326"}
{"code": "def f(lst):\n    new = list()\n    i = len(lst)-1\n    for _ in range(len(lst)):\n        if i%2 == 0:\n            new.append(-lst[i])\n        else:\n            new.append(lst[i])\n        i = i + 1\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "AugAssign2Assign_sample_from_327_to_60", "old_id": "sample_327"}
{"code": "def f(s, sep):\n    s = s + sep\n    return s.rpartition(sep)[0]", "input": "'234dsfssdfs333324314', 's'", "output": "'234dsfssdfs333324314'", "id": "AugAssign2Assign_sample_from_336_to_61", "old_id": "sample_336"}
{"code": "def f(array, elem):\n    elem = str(elem)\n    d = 0\n    for i in array:\n        if str(i) == elem:\n            d = d + 1\n    return d", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2", "id": "AugAssign2Assign_sample_from_339_to_62", "old_id": "sample_339"}
{"code": "def f(x):\n    if x == []:\n        return -1\n    else:\n        cache = {}\n        for item in x:\n            if item in cache:\n                cache[item] = cache[item] + 1\n            else:\n                cache[item] = 1\n        return max(cache.values())", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "AugAssign2Assign_sample_from_353_to_63", "old_id": "sample_353"}
{"code": "def f(array, num):\n    reverse = False\n    if num < 0:\n        reverse = True\n        num = num + -1\n    array = array[::-1] * num\n    l = len(array)\n    \n    if reverse:\n        array = array[::-1]\n    return array", "input": "[1, 2], 1", "output": "[2, 1]", "id": "AugAssign2Assign_sample_from_356_to_64", "old_id": "sample_356"}
{"code": "def f(s):\n    r = []\n    for i in range(len(s) - 1, 0 - 1, -1):\n        r = r + s[i]\n    return ''.join(r)", "input": "'crew'", "output": "'werc'", "id": "AugAssign2Assign_sample_from_357_to_65", "old_id": "sample_357"}
{"code": "def f(nums):\n    for odd in nums[:]:\n        if odd % 2 != 0:\n            nums.remove(odd)\n    sum_ = 0\n    for num in nums:\n        sum_ = sum_ + num\n    return sum_", "input": "[11, 21, 0, 11]", "output": "0", "id": "AugAssign2Assign_sample_from_371_to_66", "old_id": "sample_371"}
{"code": "def f(lst):\n    i = 0\n    new_list = []\n    while i < len(lst):\n        if lst[i] in lst[i+1:]:\n            new_list.append(lst[i])\n            if len(new_list) == 3:\n                return new_list\n        i = i + 1\n    return new_list", "input": "[0, 2, 1, 2, 6, 2, 6, 3, 0]", "output": "[0, 2, 2]", "id": "AugAssign2Assign_sample_from_385_to_67", "old_id": "sample_385"}
{"code": "def f(text, characters):\n    character_list = list(characters) + [' ', '_']\n\n    i = 0\n    while i < len(text) and text[i] in character_list:\n        i = i + 1\n\n    return text[i:]", "input": "\"2nm_28in\", \"nm\"", "output": "'2nm_28in'", "id": "AugAssign2Assign_sample_from_388_to_68", "old_id": "sample_388"}
{"code": "def f(students):\n    seatlist = students\n    seatlist.reverse()\n    cnt = 0\n    for cnt in range(len(seatlist)):\n        cnt = cnt + 2\n        seatlist[cnt - 1:cnt] = ['+']\n    seatlist.append('+')\n    return seatlist", "input": "['r', '9']", "output": "['9', '+', '+', '+']", "id": "AugAssign2Assign_sample_from_391_to_69", "old_id": "sample_391"}
{"code": "def f(text):\n    ls = text[::-1]\n    text2 = ''\n    for i in range(len(ls) - 3, 0, -3):\n        text2 = text2 + '---'.join(ls[i:i + 3]) + '---'\n    return text2[:-3]", "input": "'scala'", "output": "'a---c---s'", "id": "AugAssign2Assign_sample_from_393_to_70", "old_id": "sample_393"}
{"code": "def f(text):\n    k = text.splitlines()\n    i = 0\n    for j in k:\n        if len(j) == 0:\n            return i\n        i = i + 1\n    return -1", "input": "\"2 m2 \\n\\nbike\"", "output": "1", "id": "AugAssign2Assign_sample_from_394_to_71", "old_id": "sample_394"}
{"code": "def f(full, part):\n    length = len(part)\n    index = full.find(part)\n    count = 0\n    while index >= 0:\n        full = full[index + length:]\n        index = full.find(part)\n        count = count + 1\n    return count", "input": "'hrsiajiajieihruejfhbrisvlmmy', 'hr'", "output": "2", "id": "AugAssign2Assign_sample_from_403_to_72", "old_id": "sample_403"}
{"code": "def f(xs):\n    new_x = xs[0] - 1\n    xs.pop(0)\n    while(new_x <= xs[0]):\n        xs.pop(0)\n        new_x = new_x + 1\n    xs.insert(0, new_x)\n    return xs", "input": "[6, 3, 4, 1, 2, 3, 5]", "output": "[5, 3, 4, 1, 2, 3, 5]", "id": "AugAssign2Assign_sample_from_405_to_73", "old_id": "sample_405"}
{"code": "def f(nums):\n    a = 0\n    for i in range(len(nums)):\n        nums.insert(i, nums[a])\n        a = a + 1\n    return nums", "input": "[1, 3, -1, 1, -2, 6]", "output": "[1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6]", "id": "AugAssign2Assign_sample_from_410_to_74", "old_id": "sample_410"}
{"code": "def f(s):\n    s = s.replace('\"', '')\n    lst = list(s)\n    col = 0\n    count = 1\n    while col < len(lst) and lst[col] in \".:,\":\n        if lst[col] == \".\":\n            count = ls[col] + 1\n        col = col + 1\n    return s[col+count:]", "input": "'\"Makers of a Statement\"'", "output": "'akers of a Statement'", "id": "AugAssign2Assign_sample_from_424_to_75", "old_id": "sample_424"}
{"code": "def f(s):\n    count = len(s) - 1\n    reverse_s = s[::-1]\n    while count > 0 and reverse_s[::2].rfind('sea') == -1:\n        count = count + 1\n        reverse_s = reverse_s[:count]\n    return reverse_s[count:]", "input": "'s a a b s d s a a s a a'", "output": "''", "id": "AugAssign2Assign_sample_from_427_to_76", "old_id": "sample_427"}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-1))\n    for i in range(len(text)):\n        if text[i] == ' ':\n            res = res + '|'\n        else:\n            res = res + text[i]\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "AugAssign2Assign_sample_from_447_to_77", "old_id": "sample_447"}
{"code": "def f(x):\n    n = len(x)\n    i = 0\n    while i < n and x[i].isdigit():\n        i = i + 1\n    return i == n", "input": "'1'", "output": "True", "id": "AugAssign2Assign_sample_from_449_to_78", "old_id": "sample_449"}
{"code": "def f(text):\n    counter = 0\n    for char in text:\n        if char.isalpha():\n            counter = counter + 1\n    return counter", "input": "'l000*',", "output": "1", "id": "AugAssign2Assign_sample_from_452_to_79", "old_id": "sample_452"}
{"code": "def f(text):\n    uppers = 0\n    for c in text:\n        if c.isupper():\n            uppers = uppers + 1\n    return text.upper() if uppers >= 10 else text", "input": "'?XyZ'", "output": "'?XyZ'", "id": "AugAssign2Assign_sample_from_455_to_80", "old_id": "sample_455"}
{"code": "def f(text, amount):\n    length = len(text)\n    pre_text = '|'\n    if amount >= length:\n        extra_space = amount - length\n        pre_text = pre_text + ' ' * (extra_space // 2)\n        return pre_text + text + pre_text\n    return text", "input": "'GENERAL NAGOOR', 5", "output": "'GENERAL NAGOOR'", "id": "AugAssign2Assign_sample_from_460_to_81", "old_id": "sample_460"}
{"code": "def f(ans):\n    if ans.isdecimal():\n        total = int(ans) * 4 - 50\n        total = total + len([c for c in list(ans) if c not in '02468']) * 100\n        return total\n    return 'NAN'", "input": "'0'", "output": "-50", "id": "AugAssign2Assign_sample_from_464_to_82", "old_id": "sample_464"}
{"code": "def f(text):\n    length = len(text)\n    index = 0\n    while index < length and text[index].isspace():\n        index = index + 1\n    return text[index:index+5]", "input": "'-----\\t\\n\\tth\\n-----'", "output": "'-----'", "id": "AugAssign2Assign_sample_from_466_to_83", "old_id": "sample_466"}
{"code": "def f(num, l):\n    t = \"\"\n    while l > len(num):\n        t = t + '0'\n        l = l + 1\n    return t + num", "input": "\"1\", 3", "output": "'001'", "id": "AugAssign2Assign_sample_from_494_to_84", "old_id": "sample_494"}
{"code": "def f(n):\n    b = list(str(n))\n    for i in range(2,len(b)): b[i] = b[i] + '+'\n    return b", "input": "44", "output": "['4', '4']", "id": "AugAssign2Assign_sample_from_497_to_85", "old_id": "sample_497"}
{"code": "def f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index = index + 2\n    return ''.join(result)", "input": "'qpfi jzm', 'j'", "output": "'jqjfj zm'", "id": "AugAssign2Assign_sample_from_501_to_86", "old_id": "sample_501"}
{"code": "def f(n):\n    p = ''\n    if n%2 == 1:\n        p = p + 'sn'\n    else:\n        return n*n\n    for x in range(1, n+1):\n        if x%2 == 0:\n            p = p + 'to'\n        else:\n            p = p + 'ts'\n    return p", "input": "1", "output": "'snts'", "id": "AugAssign2Assign_sample_from_506_to_87", "old_id": "sample_506"}
{"code": "def f(text, sep, maxsplit):\n    splitted = text.rsplit(sep, maxsplit)\n    length = len(splitted)\n    new_splitted = splitted[:length // 2]\n    new_splitted.reverse()\n    new_splitted = new_splitted + splitted[length // 2:]\n    return sep.join(new_splitted)", "input": "'ertubwi', 'p', 5", "output": "'ertubwi'", "id": "AugAssign2Assign_sample_from_508_to_88", "old_id": "sample_508"}
{"code": "def f(query, base):\n    net_sum = 0\n    for (key, val) in base.items():\n        if key[0] == query and len(key) == 3:\n            net_sum = net_sum + val\n        elif key[-1] == query and len(key) == 3:\n            net_sum = net_sum + val\n    return net_sum", "input": "'a', {}", "output": "0", "id": "AugAssign2Assign_sample_from_533_to_89", "old_id": "sample_533"}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // 3, 0)\n    result = ''\n    for j, v in enumerate(sequence[i:]):\n        if v == '+':\n            result = result + value\n        else:\n            result = result + sequence[i + j]\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "AugAssign2Assign_sample_from_534_to_90", "old_id": "sample_534"}
{"code": "def f(cat):\n    digits = 0\n    for char in cat:\n        if char.isdigit():\n            digits = digits + 1\n    return digits", "input": "'C24Bxxx982ab'", "output": "5", "id": "AugAssign2Assign_sample_from_536_to_91", "old_id": "sample_536"}
{"code": "def f(array):\n    result = []\n    index = 0\n    while index < len(array):\n        result.append(array.pop())\n        index = index + 2\n    return result", "input": "[8, 8, -4, -9, 2, 8, -1, 8]", "output": "[8, -1, 8]", "id": "AugAssign2Assign_sample_from_545_to_92", "old_id": "sample_545"}
{"code": "def f(nums, mos):\n    for num in mos:\n        nums.pop(nums.index(num))\n    nums.sort()\n    for num in mos:\n        nums = nums + [num]\n    for i in range(len(nums)-1):\n        if nums[i] > nums[i+1]:\n            return False\n    return True", "input": "[3, 1, 2, 1, 4, 1], [1]", "output": "False", "id": "AugAssign2Assign_sample_from_558_to_93", "old_id": "sample_558"}
{"code": "def f(text):\n    x = 0\n    if text.islower():\n        for c in text:\n            if int(c) in list(range(90)):\n                x = x + 1\n    return x", "input": "\"591237865\"", "output": "0", "id": "AugAssign2Assign_sample_from_560_to_94", "old_id": "sample_560"}
{"code": "def f(lists):\n    lists[1].clear()\n    lists[2] = lists[2] + lists[1]\n    return lists[0]", "input": "[[395, 666, 7, 4], [], [4223, 111]]", "output": "[395, 666, 7, 4]", "id": "AugAssign2Assign_sample_from_564_to_95", "old_id": "sample_564"}
{"code": "def f(s, n):\n    ls = s.rsplit()\n    out = []\n    while len(ls) >= n:\n        out = out + ls[-n:]\n        ls = ls[:-n]\n    return ls + ['_'.join(out)]", "input": "'one two three four five', 3", "output": "['one', 'two', 'three_four_five']", "id": "AugAssign2Assign_sample_from_567_to_96", "old_id": "sample_567"}
{"code": "def f(num):\n    letter = 1\n    for i in '1234567890':\n        num = num.replace(i,'')\n        if len(num) == 0: break\n        num = num[letter:] + num[:letter]\n        letter = letter + 1\n    return num", "input": "'bwmm7h'", "output": "'mhbwm'", "id": "AugAssign2Assign_sample_from_568_to_97", "old_id": "sample_568"}
{"code": "def f(txt):\n    coincidences = {}\n    for c in txt:\n        if c in coincidences:\n            coincidences[c] = coincidences[c] + 1\n        else:\n            coincidences[c] = 1\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "AugAssign2Assign_sample_from_569_to_98", "old_id": "sample_569"}
{"code": "def f(arr): \n    counts = [0] * 9 \n    ans = [] \n    for ele in arr: counts[ele - 1] = counts[ele - 1] + 1 \n    for i in range(len(counts)): \n        while counts[i] > 0: \n            counts[i] = counts[i] + 1 \n            ans.append(i + 1)\n    return counts, ans", "input": "[6, 3, 0, 7, 4, 8]", "output": "([0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 6, 7, 8, 9])", "id": "AugAssign2Assign_sample_from_591_to_99", "old_id": "sample_591"}
{"code": "def f(text):\n    result = ''\n    mid = (len(text) - 1) // 2\n    for i in range(mid):\n        result = result + text[i]\n    for i in range(mid, len(text)-1):\n        result = result + text[mid + len(text) - 1 - i]\n    return result.ljust(len(text), text[-1])", "input": "'eat!'", "output": "'e!t!'", "id": "AugAssign2Assign_sample_from_613_to_100", "old_id": "sample_613"}
{"code": "def f(text, substr, occ):\n    n = 0\n    while True:\n        i = text.rfind(substr)\n        if i == -1:\n            break\n        elif n == occ:\n            return i\n        else:\n            n = n + 1\n            text = text[:i]\n    return -1", "input": "'zjegiymjc', 'j', 2", "output": "-1", "id": "AugAssign2Assign_sample_from_614_to_101", "old_id": "sample_614"}
{"code": "def f(body):\n    ls = list(body)\n    dist = 0\n    for i in range(0, len(ls) - 1):\n        if ls[i - 2 if i - 2 >= 0 else 0] == '\\t':\n            dist = dist + (1 + ls[i - 1].count('\\t')) * 3\n        ls[i] = '[' + ls[i] + ']'\n    return ''.join(ls).expandtabs(4 + dist)", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'", "id": "AugAssign2Assign_sample_from_616_to_102", "old_id": "sample_616"}
{"code": "def f(text):\n    count = 0\n    for i in text:\n        if i in '.?!.,':\n            count = count + 1\n    return count", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4", "id": "AugAssign2Assign_sample_from_625_to_103", "old_id": "sample_625"}
{"code": "def f(perc, full):\n    reply = \"\"\n    i = 0\n    while perc[i] == full[i] and i < len(full) and i < len(perc):\n        if perc[i] == full[i]:\n            reply = reply + \"yes \"\n        else:\n            reply = reply + \"no \"\n        i = i + 1\n    return reply", "input": "\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"", "output": "'yes '", "id": "AugAssign2Assign_sample_from_639_to_104", "old_id": "sample_639"}
{"code": "def f(text):\n    a = 0\n    if text[0] in text[1:]:\n        a = a + 1\n    for i in range(0, len(text)-1):\n        if text[i] in text[i+1:]:\n            a = a + 1\n    return a", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18", "id": "AugAssign2Assign_sample_from_640_to_105", "old_id": "sample_640"}
{"code": "def f(text):\n    i = 0\n    while i < len(text) and text[i].isspace():\n        i = i + 1\n    if i == len(text):\n        return 'space'\n    return 'no'", "input": "\"     \"", "output": "'space'", "id": "AugAssign2Assign_sample_from_642_to_106", "old_id": "sample_642"}
{"code": "def f(tags):\n    resp = \"\"\n    for key in tags:\n        resp = resp + key + \" \"\n    return resp", "input": "{\"3\":\"3\",\"4\":\"5\"}", "output": "'3 4 '", "id": "AugAssign2Assign_sample_from_664_to_107", "old_id": "sample_664"}
{"code": "def f(chars):\n    s = \"\"\n    for ch in chars:\n        if chars.count(ch) % 2 == 0:\n            s = s + ch.upper()\n        else:\n            s = s + ch\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "AugAssign2Assign_sample_from_665_to_108", "old_id": "sample_665"}
{"code": "def f(text, length):\n    length = -length if length < 0 else length\n    output = ''\n    for idx in range(length):\n        if text[idx % len(text)] != ' ':\n            output = output + text[idx % len(text)]\n        else:\n            break\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "AugAssign2Assign_sample_from_677_to_109", "old_id": "sample_677"}
{"code": "def f(text):\n    freq = dict()\n    for c in text.lower():\n        if c in freq:\n            freq[c] = freq[c] + 1\n        else:\n            freq[c] = 1\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "AugAssign2Assign_sample_from_678_to_110", "old_id": "sample_678"}
{"code": "def f(text):\n    letters = ''\n    for i in range(len(text)):\n        if text[i].isalnum():\n            letters = letters + text[i]\n    return letters", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'", "id": "AugAssign2Assign_sample_from_680_to_111", "old_id": "sample_680"}
{"code": "def f(arr):\n    count = len(arr)\n    sub = arr.copy()\n    for i in range(0, count, 2):\n        sub[i] = sub[i] + 5\n    return sub", "input": "[-3, -6, 2, 7]", "output": "[-15, -6, 10, 7]", "id": "AugAssign2Assign_sample_from_689_to_112", "old_id": "sample_689"}
{"code": "def f(text):\n    s = 0\n    for i in range(1, len(text)):\n        s = s + len(text.rpartition(text[i])[0])\n    return s", "input": "'wdj'", "output": "3", "id": "AugAssign2Assign_sample_from_696_to_113", "old_id": "sample_696"}
{"code": "def f(text):\n    (k, l) = (0, len(text) - 1)\n    while not text[l].isalpha():\n        l = l + 1\n    while not text[k].isalpha():\n        k = k + 1\n    if k != 0 or l != len(text) - 1:\n        return text[k: l+1]\n    else:\n        return text[0]", "input": "\"timetable, 2mil\"", "output": "'t'", "id": "AugAssign2Assign_sample_from_717_to_114", "old_id": "sample_717"}
{"code": "def f(code):\n    lines = code.split(']')\n    result = []\n    level = 0\n    for line in lines:\n        result.append(line[0] + ' ' + '  ' * level + line[1:])\n        level = level + line.count('{') - line.count('}')\n    return '\\n'.join(result)", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'", "id": "AugAssign2Assign_sample_from_719_to_115", "old_id": "sample_719"}
{"code": "def f(text):\n    out = \"\"\n    for i in range(len(text)):\n        if text[i].isupper():\n            out = out + text[i].lower()\n        else:\n            out = out + text[i].upper()\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "AugAssign2Assign_sample_from_722_to_116", "old_id": "sample_722"}
{"code": "def f(text):\n    ws = 0\n    for s in text:\n        if s.isspace():\n            ws = ws + 1\n    return ws, len(text)", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)", "id": "AugAssign2Assign_sample_from_726_to_117", "old_id": "sample_726"}
{"code": "def f(text):\n    m = 0\n    cnt = 0\n    for i in text.split():\n        if len(i) > m:\n            cnt = cnt + 1\n            m = len(i)\n    return cnt", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2", "id": "AugAssign2Assign_sample_from_730_to_118", "old_id": "sample_730"}
{"code": "def f(text, insert):\n    whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = ''\n    for char in text:\n        if char in whitespaces:\n            clean = clean + insert\n        else:\n            clean = clean + char\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "AugAssign2Assign_sample_from_736_to_119", "old_id": "sample_736"}
{"code": "def f(nums):\n    counts = 0\n    for i in nums:\n        if str(i).isdecimal():\n            if counts == 0:\n                counts = counts + 1\n    return counts", "input": "[0, 6, 2, -1, -2]", "output": "1", "id": "AugAssign2Assign_sample_from_737_to_120", "old_id": "sample_737"}
{"code": "def f(text, width):\n    result = \"\"\n    lines = text.split('\\n')\n    for l in lines:\n        result = result + l.center(width)\n        result = result + '\\n'\n\n    # Remove the very last empty line\n    result = result[:-1]\n    return result", "input": "'l\\nl', 2", "output": "'l \\nl '", "id": "AugAssign2Assign_sample_from_749_to_121", "old_id": "sample_749"}
{"code": "def f(char_map, text):\n    new_text = ''\n    for ch in text:\n        val = char_map.get(ch)\n        if val is None:\n            new_text = new_text + ch\n        else:\n            new_text = new_text + val\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "AugAssign2Assign_sample_from_750_to_122", "old_id": "sample_750"}
{"code": "def f(replace, text, hide):\n    while hide in text:\n        replace = replace + 'ax'\n        text = text.replace(hide, replace, 1)\n    return text", "input": "'###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.'", "output": "'ph>t#A#BiEcDefW#ON#iiNCU'", "id": "AugAssign2Assign_sample_from_755_to_123", "old_id": "sample_755"}
{"code": "def f(text, sub):\n    index = []\n    starting = 0\n    while starting != -1:\n        starting = text.find(sub, starting)\n        if starting != -1:\n            index.append(starting)\n            starting = starting + len(sub)\n    return index", "input": "'egmdartoa', 'good'", "output": "[]", "id": "AugAssign2Assign_sample_from_759_to_124", "old_id": "sample_759"}
{"code": "def f(phrase):\n    result = ''\n    for i in phrase:\n        if not i.islower():\n            result = result + i\n    return result", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'", "id": "AugAssign2Assign_sample_from_772_to_125", "old_id": "sample_772"}
{"code": "def f(ints):\n    counts = [0] * 301\n\n    for i in ints:\n        counts[i] = counts[i] + 1\n\n    r = []\n    for i in range(len(counts)):\n        if counts[i] >= 3:\n            r.append(str(i))\n    counts.clear()\n    return ' '.join(r)", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'", "id": "AugAssign2Assign_sample_from_780_to_126", "old_id": "sample_780"}
{"code": "def f(n):\n    streak = ''\n    for c in str(n):\n        streak = streak + c.ljust(int(c) * 2)\n    return streak", "input": "1", "output": "'1 '", "id": "AugAssign2Assign_sample_from_785_to_127", "old_id": "sample_785"}
{"code": "def f(text, n):\n    if n < 0 or len(text) <= n:\n        return text\n    result = text[0 : n]\n    i = len(result) - 1\n    while i >= 0:\n        if result[i] != text[i]:\n            break\n        i = i + 1\n    return text[0 : i + 1]", "input": "'bR', -1", "output": "'bR'", "id": "AugAssign2Assign_sample_from_789_to_128", "old_id": "sample_789"}
{"code": "def f(integer, n):\n    i = 1\n    text = str(integer)\n    while (i+len(text) < n):\n        i = i + len(text)\n    return text.zfill(i+len(text))", "input": "8999,2", "output": "'08999'", "id": "AugAssign2Assign_sample_from_791_to_129", "old_id": "sample_791"}
{"code": "def f(list, start, end):\n    count = 0\n    for i in range(start, end):\n        for j in range(i, end):\n            if list[i] != list[j]:\n                count = count + 1\n    return count", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3", "id": "AugAssign2Assign_sample_from_793_to_130", "old_id": "sample_793"}
