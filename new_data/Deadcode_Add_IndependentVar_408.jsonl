{"code": "def f(nums):\n    output = []\n    for n in nums:\n        output.append((nums.count(n), n))\n    output.sort(reverse=True)\n    var_bgt = 48\n    return output", "input": "[1, 1, 3, 1, 3, 1]", "output": "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]", "id": "Deadcode_Add_IndependentVar_sample_from_0_to_0", "old_id": "sample_0"}
{"code": "def f(a, b, c):\n    result = {}\n    for d in a, b, c:\n        result.update(dict.fromkeys(d))\n    var_blq = 21\n    return result", "input": "(1, ), (1, ), (1, 2)", "output": "{1: None, 2: None}", "id": "Deadcode_Add_IndependentVar_sample_from_1_to_1", "old_id": "sample_1"}
{"code": "def f(text):\n    new_text = list(text)\n    var_2so = 76\n    for i in '+':\n        if i in new_text:\n            new_text.remove(i)\n    return ''.join(new_text)", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'", "id": "Deadcode_Add_IndependentVar_sample_from_2_to_2", "old_id": "sample_2"}
{"code": "def f(text, value):\n    text_list = list(text)\n    text_list.append(value)\n    return ''.join(text_list)\n    var_1sx = 97", "input": "'bcksrut', 'q'", "output": "'bcksrutq'", "id": "Deadcode_Add_IndependentVar_sample_from_3_to_3", "old_id": "sample_3"}
{"code": "def f(array):\n    s = ' '\n    s += ''.join(array)\n    return s\n    var_1bo = 11", "input": "[' ', '  ', '    ', '   ']", "output": "'           '", "id": "Deadcode_Add_IndependentVar_sample_from_4_to_4", "old_id": "sample_4"}
{"code": "def f(text):\n    new_text = ''\n    var_his = 95\n    for ch in text.lower().strip():\n        if ch.isnumeric() or ch in '\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc':\n            new_text += ch\n    return new_text", "input": "''", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_10_to_5", "old_id": "sample_10"}
{"code": "def f(s):\n    arr = list(s.strip())\n    arr.reverse()\n    return ''.join(arr)\n    var_sgi = 39", "input": "'   OOP   '", "output": "'POO'", "id": "Deadcode_Add_IndependentVar_sample_from_14_to_6", "old_id": "sample_14"}
{"code": "def f(text, wrong, right):\n    new_text = text.replace(wrong, right)\n    return new_text.upper()\n    var_2lq = 29", "input": "\"zn kgd jw lnt\", \"h\", \"u\"", "output": "'ZN KGD JW LNT'", "id": "Deadcode_Add_IndependentVar_sample_from_15_to_7", "old_id": "sample_15"}
{"code": "def f(text, suffix):\n    if text.endswith(suffix):\n        return text[:-len(suffix)]\n    var_afj = 88\n    return text", "input": "'zejrohaj', 'owc'", "output": "'zejrohaj'", "id": "Deadcode_Add_IndependentVar_sample_from_16_to_8", "old_id": "sample_16"}
{"code": "def f(array, elem):\n    k = 0\n    l = array.copy()\n    for i in l:\n        if i > elem:\n            array.insert(k, elem)\n            break\n        k += 1\n    return array\n    var_jrd = 1", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]", "id": "Deadcode_Add_IndependentVar_sample_from_18_to_9", "old_id": "sample_18"}
{"code": "def f(x, y):\n    tmp = ''.join(['0' if c == '9' else '9' for c in y[::-1]])\n    if (x.isnumeric() and tmp.isnumeric()):\n        return x + tmp\n    else:\n        return x\n    var_xga = 82", "input": "\"\", \"sdasdnakjsda80\"", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_19_to_10", "old_id": "sample_19"}
{"code": "def f(text):\n    result = ''\n    for i in range(len(text)-1, -1, -1):\n        result += text[i]\n    return result\n    var_y1p = 70", "input": "'was,'", "output": "',saw'", "id": "Deadcode_Add_IndependentVar_sample_from_20_to_11", "old_id": "sample_20"}
{"code": "def f(array):\n    n = array.pop()\n    array.extend([n, n])\n    var_my2 = 48\n    return array", "input": "[1, 1, 2, 2]", "output": "[1, 1, 2, 2, 2]", "id": "Deadcode_Add_IndependentVar_sample_from_21_to_12", "old_id": "sample_21"}
{"code": "def f(a):\n    if a == 0:\n        return [0]\n    result = []\n    while a > 0:\n        result.append(a%10)\n        a = a//10\n    var_ztu = 79\n    result.reverse()\n    return int(''.join(str(i) for i in result))", "input": "000", "output": "[0]", "id": "Deadcode_Add_IndependentVar_sample_from_22_to_13", "old_id": "sample_22"}
{"code": "def f(d):\n    d = d.copy()\n    d.popitem()\n    return d\n    var_v3n = 3", "input": "{\"l\": 1, \"t\": 2, \"x:\": 3}", "output": "{'l': 1, 't': 2}", "id": "Deadcode_Add_IndependentVar_sample_from_25_to_14", "old_id": "sample_25"}
{"code": "def f(w):\n    ls = list(w)\n    omw = ''\n    while len(ls) > 0:\n        omw += ls.pop(0)\n        if len(ls) * 2 > len(w):\n            return w[len(ls):] == omw\n    var_h8q = 87\n    return False", "input": "'flak'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_27_to_15", "old_id": "sample_27"}
{"code": "def f(s, sep):\n    reverse = ['*' + e for e in s.split(sep)]\n    return ';'.join(reversed(reverse))\n    var_mzb = 71", "input": "'volume', 'l'", "output": "'*ume;*vo'", "id": "Deadcode_Add_IndependentVar_sample_from_32_to_16", "old_id": "sample_32"}
{"code": "def f(lists):\n    dic = {}\n    for n in lists:\n        if n in dic:\n            dic[n].append(lists.pop(lists.index(n)))\n        else:\n            dic[n] = lists[:lists.index(n) + 1]\n    var_p6q = 16\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "Deadcode_Add_IndependentVar_sample_from_33_to_17", "old_id": "sample_33"}
{"code": "def f(text):\n    text_arr = []\n    for j in range(len(text)):\n        text_arr.append(text[j:])\n    return text_arr\n    var_ecw = 79", "input": "'123'", "output": "['123', '23', '3']", "id": "Deadcode_Add_IndependentVar_sample_from_37_to_18", "old_id": "sample_37"}
{"code": "def f(string):\n    return string.title().replace(' ', '')\n    var_ij3 = 67", "input": "'1oE-err bzz-bmm'", "output": "'1Oe-ErrBzz-Bmm'", "id": "Deadcode_Add_IndependentVar_sample_from_38_to_19", "old_id": "sample_38"}
{"code": "def f(array, values):\n    array.reverse()\n    var_cq4 = 63\n    for value in values:\n        array.insert(len(array) // 2, value)\n    array.reverse()\n    return array", "input": "[58], [21, 92]", "output": "[58, 92, 21]", "id": "Deadcode_Add_IndependentVar_sample_from_41_to_20", "old_id": "sample_41"}
{"code": "def f(nums):\n    nums.clear()\n    for num in nums:\n        nums.append(num*2)\n    var_ri6 = 31\n    return nums", "input": "[4, 3, 2, 1, 2, -1, 4, 2]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_42_to_21", "old_id": "sample_42"}
{"code": "def f(text):\n    ls = list(text)\n    for i in range(0, len(ls)):\n        if ls[i]!='+':\n            ls.insert(i, '+')\n            ls.insert(i, '*')\n            break\n    return '+'.join(ls)\n    var_1dv = 7", "input": "'nzoh'", "output": "'*+++n+z+o+h'", "id": "Deadcode_Add_IndependentVar_sample_from_44_to_22", "old_id": "sample_44"}
{"code": "def f(text, letter):\n    counts = {}\n    for char in text:\n        if char not in counts:\n            counts[char] = 1\n        else:\n            counts[char] += 1\n    return counts.get(letter, 0)\n    var_wot = 23", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "Deadcode_Add_IndependentVar_sample_from_45_to_23", "old_id": "sample_45"}
{"code": "def f(text):\n    length = len(text)\n    half = length // 2\n    var_937 = 22\n    encode = text[:half].encode('ascii')\n    if text[half:] == encode.decode():\n        return True\n    else:\n        return False", "input": "'bbbbr'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_47_to_24", "old_id": "sample_47"}
{"code": "def f(names):\n    if names == []:\n        return \"\"\n    smallest = names[0]\n    for name in names[1:]:\n        if name < smallest:\n            smallest = name\n    names.remove(smallest)\n    var_m1r = 0\n    return names.join(smallest)", "input": "[]", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_48_to_25", "old_id": "sample_48"}
{"code": "def f(text):\n    if text.isidentifier():\n        return ''.join(c for c in text if c.isdigit())\n    else:\n        return ''.join(text)\n    var_0e9 = 95", "input": "'816'", "output": "'816'", "id": "Deadcode_Add_IndependentVar_sample_from_49_to_26", "old_id": "sample_49"}
{"code": "def f(text):\n    a = []\n    var_whv = 69\n    for i in range(len(text)):\n        if not text[i].isdecimal():\n            a.append(text[i])\n    return ''.join(a)", "input": "\"seiq7229 d27\"", "output": "'seiq d'", "id": "Deadcode_Add_IndependentVar_sample_from_52_to_27", "old_id": "sample_52"}
{"code": "def f(text):\n    occ = {}\n    for ch in text:\n        name = {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}\n        name = name.get(ch, ch)\n        occ[name] = occ.get(name, 0) + 1\n    var_ya1 = 19\n    return [x for _, x in occ.items()]", "input": "\"URW rNB\"", "output": "[1, 1, 1, 1, 1, 1, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_53_to_28", "old_id": "sample_53"}
{"code": "def f(text, s, e):\n    sublist = text[s:e]\n    if not sublist:\n        return -1\n    var_ds1 = 16\n    return sublist.index(min(sublist))", "input": "'happy', 0, 3", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_54_to_29", "old_id": "sample_54"}
{"code": "def f(sentence):\n    for c in sentence:\n        if c.isascii() is False:\n            return False\n        else:\n            continue\n    return True\n    var_f25 = 69", "input": "'1z1z1'", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_56_to_30", "old_id": "sample_56"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = 0\n    for char in text:\n        if char.isupper():\n            count_upper += 1\n        else:\n            return 'no'\n    return count_upper // 2\n    var_g7p = 90", "input": "'ax'", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_57_to_31", "old_id": "sample_57"}
{"code": "def f(nums):\n    count = len(nums)\n    for i in [i % 2 for i in range(count)]:\n        nums.append(nums[i])\n    var_wc7 = 8\n    return nums", "input": "[-1, 0, 0, 1, 1]", "output": "[-1, 0, 0, 1, 1, -1, 0, -1, 0, -1]", "id": "Deadcode_Add_IndependentVar_sample_from_58_to_32", "old_id": "sample_58"}
{"code": "def f(text):\n    texts = text.split()\n    var_ds3 = 91\n    if texts:\n        xtexts = [t for t in texts if t.isascii() and t not in ('nada', '0')]\n        return max(xtexts, key=len) if xtexts else 'nada'\n    return 'nada'", "input": "\"\"", "output": "'nada'", "id": "Deadcode_Add_IndependentVar_sample_from_61_to_33", "old_id": "sample_61"}
{"code": "def f(user):\n    if len(list(user.keys())) > len(list(user.values())):\n        return tuple(user.keys())\n    return tuple(user.values())\n    var_6gv = 47", "input": "{\"eating\" : \"ja\", \"books\" : \"nee\", \"piano\" : \"coke\", \"excitement\" : \"zoo\"}", "output": "('ja', 'nee', 'coke', 'zoo')", "id": "Deadcode_Add_IndependentVar_sample_from_62_to_34", "old_id": "sample_62"}
{"code": "def f(text, prefix):\n    while text.startswith(prefix):\n        text = text[len(prefix):] or text\n    var_z9e = 6\n    return text", "input": "'ndbtdabdahesyehu', 'n'", "output": "'dbtdabdahesyehu'", "id": "Deadcode_Add_IndependentVar_sample_from_63_to_35", "old_id": "sample_63"}
{"code": "def f(nums, index):\n    return nums[index] % 42 + nums.pop(index) * 2\n    var_x8u = 65", "input": "[3, 2, 0, 3, 7], 3", "output": "9", "id": "Deadcode_Add_IndependentVar_sample_from_65_to_36", "old_id": "sample_65"}
{"code": "def f(text, prefix):\n    prefix_length = len(prefix)\n    var_9nl = 36\n    if text.startswith(prefix):\n        return text[(prefix_length - 1) // 2:\n                    (prefix_length + 1) // 2 * -1:-1]\n    else:\n        return text", "input": "'happy', 'ha'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_66_to_37", "old_id": "sample_66"}
{"code": "def f(num1, num2, num3):\n    nums = [num1, num2, num3]\n    nums.sort()    \n    return f'{nums[0]},{nums[1]},{nums[2]}'\n    var_v0i = 71", "input": "6,8,8", "output": "'6,8,8'", "id": "Deadcode_Add_IndependentVar_sample_from_67_to_38", "old_id": "sample_67"}
{"code": "def f(text, character):\n    subject = text[text.rfind(character):]\n    return subject*text.count(character)\n    var_c41 = 50", "input": "'h ,lpvvkohh,u', 'i'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_77_to_39", "old_id": "sample_77"}
{"code": "def f(arr):\n    arr = list(arr)\n    arr.clear()\n    arr.append('1')\n    arr.append('2')\n    arr.append('3')\n    arr.append('4')\n    return ','.join(arr)\n    var_piu = 52", "input": "[0, 1, 2, 3, 4]", "output": "'1,2,3,4'", "id": "Deadcode_Add_IndependentVar_sample_from_79_to_40", "old_id": "sample_79"}
{"code": "def f(s):\n    return ''.join(reversed(s.rstrip()))\n    var_791 = 92", "input": "'ab        '", "output": "'ba'", "id": "Deadcode_Add_IndependentVar_sample_from_80_to_41", "old_id": "sample_80"}
{"code": "def f(a, b, c, d):\n    return a and b or c and d\n    var_nv5 = 74", "input": "'CJU', 'BFS', 'WBYDZPVES', 'Y'", "output": "'BFS'", "id": "Deadcode_Add_IndependentVar_sample_from_82_to_42", "old_id": "sample_82"}
{"code": "def f(text):\n    l = text.rpartition('0')\n    if l[2] == '':\n        return '-1:-1'\n    return f'{len(l[0])}:{l[2].find(\"0\") + 1}'\n    var_fx5 = 60", "input": "'qq0tt'", "output": "'2:0'", "id": "Deadcode_Add_IndependentVar_sample_from_83_to_43", "old_id": "sample_83"}
{"code": "def f(n):\n    values = {0: 3, 1: 4.5, 2: '-'}\n    var_sqg = 24\n    res = {}\n    for i, j in values.items():\n        if i % n != 2:\n            res[j] = n // 2\n    return sorted(res)", "input": "12", "output": "[3, 4.5]", "id": "Deadcode_Add_IndependentVar_sample_from_85_to_44", "old_id": "sample_85"}
{"code": "def f(instagram, imgur, wins):\n    photos = [instagram, imgur]\n    if instagram == imgur:\n        return wins\n    var_vih = 6\n    if wins == 1:\n        return photos.pop()\n    else:\n        photos.reverse()\n        return photos.pop()", "input": "['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0", "output": "['sdfs', 'drcr', '2e']", "id": "Deadcode_Add_IndependentVar_sample_from_86_to_45", "old_id": "sample_86"}
{"code": "def f(s1, s2):\n    if s2.endswith(s1):\n        s2 = s2[:len(s1) * -1]\n    var_lk6 = 97\n    return s2", "input": "\"he\", \"hello\"", "output": "'hello'", "id": "Deadcode_Add_IndependentVar_sample_from_88_to_46", "old_id": "sample_88"}
{"code": "def f(text):\n    return text.isascii()\n    var_2r9 = 29", "input": "'wW\uc758IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_92_to_47", "old_id": "sample_92"}
{"code": "def f(a, b):\n    return {**a, **b}\n    var_hxp = 80", "input": "{'w': 5, 'wi': 10}, {'w': 3}", "output": "{'w': 3, 'wi': 10}", "id": "Deadcode_Add_IndependentVar_sample_from_94_to_48", "old_id": "sample_94"}
{"code": "def f(zoo):\n    return dict((v, k) for k, v in zoo.items())\n    var_rxk = 82", "input": "{'AAA': 'fr'}", "output": "{'fr': 'AAA'}", "id": "Deadcode_Add_IndependentVar_sample_from_95_to_49", "old_id": "sample_95"}
{"code": "def f(text):\n    return not any([c.isupper() for c in text])\n    var_3ni = 68", "input": "'lunabotics'", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_96_to_50", "old_id": "sample_96"}
{"code": "def f(lst):\n    lst.clear()\n    var_h4n = 99\n    for i in lst:\n        if i == 3:\n            return False\n    else:\n        return True", "input": "[2, 0]", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_97_to_51", "old_id": "sample_97"}
{"code": "def f(text, sep, num):\n    return '___'.join(text.rsplit(sep, num))\n    var_dsr = 86", "input": "'aa+++bb', '+', 1", "output": "'aa++___bb'", "id": "Deadcode_Add_IndependentVar_sample_from_99_to_52", "old_id": "sample_99"}
{"code": "def f(names, winners):\n    ls = [names.index(name) for name in names if name in winners]\n    ls.sort(reverse=True)\n    return ls\n    var_c48 = 0", "input": "['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_102_to_53", "old_id": "sample_102"}
{"code": "def f(s):\n    return ''.join((c.casefold() for c in s))\n    var_7ca = 41", "input": "'abcDEFGhIJ'", "output": "'abcdefghij'", "id": "Deadcode_Add_IndependentVar_sample_from_103_to_54", "old_id": "sample_103"}
{"code": "def f(text):\n    dic = dict()\n    var_2ht = 79\n    for char in text:\n        dic[char] = dic.get(char, 0) + 1\n    for key in dic:\n        if dic[key] > 1:\n            dic[key] = 1\n    return dic", "input": "\"a\"", "output": "{'a': 1}", "id": "Deadcode_Add_IndependentVar_sample_from_104_to_55", "old_id": "sample_104"}
{"code": "def f(nums):\n    count = len(nums)\n    var_rtu = 57\n    for i in range(0, count):\n        nums.insert(i, nums[i]*2)\n    return nums", "input": "[2, 8, -2, 9, 3, 3]", "output": "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_106_to_56", "old_id": "sample_106"}
{"code": "def f(var):\n    amount = len(var) if type(var) == list else 0\n    if type(var) == dict:\n        amount = len(var.keys())\n    nonzero = amount if amount > 0 else 0\n    var_eo8 = 93\n    return nonzero", "input": "1", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_108_to_57", "old_id": "sample_108"}
{"code": "def f(nums, spot, idx):\n    nums.insert(spot, idx)\n    return nums\n    var_wl1 = 19", "input": "[1, 0, 1, 1], 0, 9", "output": "[9, 1, 0, 1, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_109_to_58", "old_id": "sample_109"}
{"code": "def f(marks):\n    highest = 0\n    lowest = 100\n    for value in marks.values():\n        if value > highest:\n            highest = value\n        if value < lowest:\n            lowest = value\n    var_y5z = 24\n    return highest, lowest", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)", "id": "Deadcode_Add_IndependentVar_sample_from_111_to_59", "old_id": "sample_111"}
{"code": "def f(sentence):\n    ls = list(sentence)\n    for letter in ls:\n        if not letter.istitle():\n            ls.remove(letter)\n    var_it3 = 78\n    return ''.join(ls)", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'", "id": "Deadcode_Add_IndependentVar_sample_from_112_to_60", "old_id": "sample_112"}
{"code": "def f(line):\n    count = 0\n    a = []\n    for i in range(len(line)):\n        count += 1\n        if count%2==0:\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n    return ''.join(a)\n    var_n9u = 11", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "Deadcode_Add_IndependentVar_sample_from_113_to_61", "old_id": "sample_113"}
{"code": "def f(text, sep):\n    return text.rsplit(sep, maxsplit=2)\n    var_sjv = 24", "input": "\"a-.-.b\", \"-.\"", "output": "['a', '', 'b']", "id": "Deadcode_Add_IndependentVar_sample_from_114_to_62", "old_id": "sample_114"}
{"code": "def f(d, count):\n    for i in range(count):\n        if d == {}:\n            break\n        d.popitem()\n    var_h12 = 3\n    return d", "input": "{}, 200", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_116_to_63", "old_id": "sample_116"}
{"code": "def f(text):\n    result = \"\"\n    for i in range(len(text)):\n        if i % 2 == 0:\n            result += text[i].swapcase()\n        else:\n            result += text[i]\n    var_nio = 25\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "Deadcode_Add_IndependentVar_sample_from_119_to_64", "old_id": "sample_119"}
{"code": "def f(txt, sep, sep_count):\n    o = ''\n    while sep_count > 0 and txt.count(sep) > 0:\n        o += txt.rsplit(sep, 1)[0] + sep\n        txt = txt.rsplit(sep, 1)[1]\n        sep_count -= 1\n    var_2v4 = 29\n    return o + txt", "input": "'i like you', ' ', -1", "output": "'i like you'", "id": "Deadcode_Add_IndependentVar_sample_from_124_to_65", "old_id": "sample_124"}
{"code": "def f(text, res):\n    for c in '*\\n\"':\n        text = text.replace(c, '!' + str(res))\n    if text.startswith('!'):\n        text = text[len(str(res)):]\n    return text\n    var_8a9 = 91", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'", "id": "Deadcode_Add_IndependentVar_sample_from_125_to_66", "old_id": "sample_125"}
{"code": "def f(text):\n    s = text.splitlines()\n    var_861 = 1\n    return len(s)", "input": "\"145\\n\\n12fjkjg\"", "output": "3", "id": "Deadcode_Add_IndependentVar_sample_from_127_to_67", "old_id": "sample_127"}
{"code": "def f(text, search_string):\n    indexes = []\n    while search_string in text:\n        indexes.append(text.rindex(search_string))\n        text = text[:text.rindex(search_string)]\n    var_wyi = 79\n    return indexes", "input": "'ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ', 'J'", "output": "[28, 19, 12, 6]", "id": "Deadcode_Add_IndependentVar_sample_from_129_to_68", "old_id": "sample_129"}
{"code": "def f(nums, elements):\n    result = []\n    var_uhy = 41\n    for i in range(len(elements)):\n        result.append(nums.pop())\n    return nums", "input": "[7, 1, 2, 6, 0, 2], [9, 0, 3]", "output": "[7, 1, 2]", "id": "Deadcode_Add_IndependentVar_sample_from_133_to_69", "old_id": "sample_133"}
{"code": "def f(n):\n    t = 0\n    var_a1r = 61\n    b = ''\n    digits = list(map(int, str(n)))\n    for d in digits:\n        if d == 0: t += 1\n        else: break\n    for _ in range(t):\n        b += str(1) + '0' + str(4)\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "Deadcode_Add_IndependentVar_sample_from_134_to_70", "old_id": "sample_134"}
{"code": "def f(text, width):\n    lines = [line.center(width) for line in text.split('\\n')]\n    var_orf = 43\n    return '\\n'.join(lines)", "input": "\"a\\nbc\\n\\nd\\nef\", 5", "output": "'  a  \\n  bc \\n     \\n  d  \\n  ef '", "id": "Deadcode_Add_IndependentVar_sample_from_136_to_71", "old_id": "sample_136"}
{"code": "def f(nums):\n    count = 0\n    for i in range(len(nums)):\n        if len(nums) == 0:\n            break\n        if count % 2 == 0:\n            nums.pop()\n        else:\n            nums.pop(0)\n        count += 1\n    return nums\n    var_lx1 = 6", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_137_to_72", "old_id": "sample_137"}
{"code": "def f(text, chars):\n    listchars = list(chars)\n    first = listchars.pop()\n    for i in listchars:\n        text = text[0:text.find(i)]+i+text[text.find(i)+1:]\n    var_2a9 = 31\n    return text", "input": "'tflb omn rtt', 'm'", "output": "'tflb omn rtt'", "id": "Deadcode_Add_IndependentVar_sample_from_138_to_73", "old_id": "sample_138"}
{"code": "def f(first, second):\n    if len(first) < 10 or len(second) < 10:\n        return 'no'\n    for i in range(5):\n        if first[i] != second[i]:\n            return 'no'\n    var_361 = 88\n    first.extend(second)\n    return first", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'", "id": "Deadcode_Add_IndependentVar_sample_from_139_to_74", "old_id": "sample_139"}
{"code": "def f(st):\n    if st.lower().rindex('h', st.lower().rindex('i')) >= st.lower().rindex('i'):\n        return 'Hey'\n    else:\n        return 'Hi'\n    var_96o = 64", "input": "'Hi there'", "output": "'Hey'", "id": "Deadcode_Add_IndependentVar_sample_from_140_to_75", "old_id": "sample_140"}
{"code": "def f(li):\n    return [li.count(i) for i in li]\n    var_s3j = 83", "input": "['k', 'x', 'c', 'x', 'x', 'b', 'l', 'f', 'r', 'n', 'g']", "output": "[1, 3, 1, 3, 3, 1, 1, 1, 1, 1, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_141_to_76", "old_id": "sample_141"}
{"code": "def f(x):\n    if x.islower():\n        return x\n    else:\n        return x[::-1]\n    var_2z8 = 50", "input": "'ykdfhp'", "output": "'ykdfhp'", "id": "Deadcode_Add_IndependentVar_sample_from_142_to_77", "old_id": "sample_142"}
{"code": "def f(s, n):\n    return s.casefold() == n.casefold()\n    var_a7q = 78", "input": "\"daaX\", \"daaX\"", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_143_to_78", "old_id": "sample_143"}
{"code": "def f(vectors):\n    sorted_vecs = []\n    for vec in vectors:\n        vec.sort()\n        sorted_vecs.append(vec)\n    var_lez = 80\n    return sorted_vecs", "input": "[]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_144_to_79", "old_id": "sample_144"}
{"code": "def f(price, product):\n    inventory = ['olives', 'key', 'orange']\n    if product not in inventory:\n        return price\n    else:\n        price *=.85\n        inventory.remove(product)\n    return price\n    var_s7m = 61", "input": "8.50, 'grapes'", "output": "8.5", "id": "Deadcode_Add_IndependentVar_sample_from_145_to_80", "old_id": "sample_145"}
{"code": "def f(nums):\n    middle = len(nums)//2\n    return nums[middle:] + nums[0:middle]\n    var_ao0 = 88", "input": "[1, 1, 1]", "output": "[1, 1, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_147_to_81", "old_id": "sample_147"}
{"code": "def f(forest, animal):\n    index = forest.index(animal)\n    result = list(forest)\n    while index < len(forest)-1:\n        result[index] = forest[index+1]\n        index += 1\n    if index == len(forest)-1:\n        result[index] = '-'\n    var_nbe = 55\n    return ''.join(result)", "input": "'2imo 12 tfiqr.', 'm'", "output": "'2io 12 tfiqr.-'", "id": "Deadcode_Add_IndependentVar_sample_from_148_to_82", "old_id": "sample_148"}
{"code": "def f(text):\n    for c in text:\n        if c.isdigit():\n            if c == '0':\n                c = '.'\n            else:\n                c = '0' if c != '1' else '.'\n    return ''.join(list(text)).replace('.', '0')\n    var_zq6 = 88", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'", "id": "Deadcode_Add_IndependentVar_sample_from_151_to_83", "old_id": "sample_151"}
{"code": "def f(text):\n    n = 0\n    for char in text:\n        if char.isupper():\n            n += 1\n    return n\n    var_d2q = 70", "input": "''.join(['A'] * 20)", "output": "20", "id": "Deadcode_Add_IndependentVar_sample_from_152_to_84", "old_id": "sample_152"}
{"code": "def f(text, suffix, num):\n    str_num = str(num)\n    return text.endswith(suffix + str_num)\n    var_l9q = 54", "input": "'friends and love', 'and', 3", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_153_to_85", "old_id": "sample_153"}
{"code": "def f(s, c):\n    s = s.split(' ')\n    return ((c + \"  \") + (\"  \".join(s[::-1])))\n    var_evy = 100", "input": "'Hello There', '*'", "output": "'*  There  Hello'", "id": "Deadcode_Add_IndependentVar_sample_from_154_to_86", "old_id": "sample_154"}
{"code": "def f(text, limit, char):\n    if limit < len(text):\n        return text[0:limit]\n    return text.ljust(limit, char)\n    var_v9b = 41", "input": "'tqzym', 5, 'c'", "output": "'tqzym'", "id": "Deadcode_Add_IndependentVar_sample_from_156_to_87", "old_id": "sample_156"}
{"code": "def f(phrase):\n    ans = 0\n    for w in phrase.split():\n        for ch in w:\n            if ch == \"0\":\n                ans += 1\n    return ans\n    var_q8m = 37", "input": "\"aboba 212 has 0 digits\"", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_157_to_88", "old_id": "sample_157"}
{"code": "def f(st):\n    swapped = ''\n    for ch in reversed(st):\n        swapped += ch.swapcase()\n    var_2wc = 82\n    return swapped", "input": "'RTiGM'", "output": "'mgItr'", "id": "Deadcode_Add_IndependentVar_sample_from_159_to_89", "old_id": "sample_159"}
{"code": "def f(text):\n    result = ''\n    for char in text:\n        if char.isalnum():\n            result += char.upper()\n    return result\n    var_0yo = 87", "input": "'\u0441 bishop.Swift'", "output": "'\u0421BISHOPSWIFT'", "id": "Deadcode_Add_IndependentVar_sample_from_162_to_90", "old_id": "sample_162"}
{"code": "def f(lst):\n    lst.sort()\n    var_dmu = 13\n    return lst[0:3]", "input": "[5, 8, 1, 3, 0]", "output": "[0, 1, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_164_to_91", "old_id": "sample_164"}
{"code": "def f(text, lower, upper):\n    return text[lower:upper].isascii()\n    var_bgw = 92", "input": "'=xtanp|sugv?z', 3, 6", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_165_to_92", "old_id": "sample_165"}
{"code": "def f(graph):\n    new_graph = {}\n    for key, value in graph.items():\n        new_graph[key] = {}\n        for subkey in value:\n            new_graph[key][subkey] = ''\n    return new_graph\n    var_z4i = 24", "input": "{}", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_166_to_93", "old_id": "sample_166"}
{"code": "def f(text):\n    ls = list(text)\n    var_p93 = 55\n    total = (len(text) - 1) * 2\n    for i in range(1, total+1):\n        if i % 2:\n            ls.append('+')\n        else:\n            ls.insert(0, '+')\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "Deadcode_Add_IndependentVar_sample_from_169_to_94", "old_id": "sample_169"}
{"code": "def f(nums):\n    count = len(nums) // 2\n    for _ in range(count):\n        nums.pop(0)\n    return nums\n    var_3wu = 89", "input": "[3, 4, 1, 2, 3]", "output": "[1, 2, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_171_to_95", "old_id": "sample_171"}
{"code": "def f(array):\n    for i in range(len(array)):\n        if array[i] < 0:\n            array.pop(i)\n    var_qkl = 62\n    return array", "input": "[]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_172_to_96", "old_id": "sample_172"}
{"code": "def f(list_x):\n    item_count = len(list_x)\n    var_1m9 = 19\n    new_list = []\n    for i in range(item_count):\n        new_list.append(list_x.pop())\n    return new_list", "input": "[5, 8, 6, 8, 4]", "output": "[4, 8, 6, 8, 5]", "id": "Deadcode_Add_IndependentVar_sample_from_173_to_97", "old_id": "sample_173"}
{"code": "def f(text, to_place):\n    after_place = text[:text.find(to_place, 0) + 1]\n    before_place = text[text.find(to_place, 0) + 1:]\n    return after_place + before_place\n    var_chj = 69", "input": "'some text', 'some'", "output": "'some text'", "id": "Deadcode_Add_IndependentVar_sample_from_176_to_98", "old_id": "sample_176"}
{"code": "def f(text):\n    text = list(text)\n    for i in range(len(text)):\n        if i % 2 == 1:\n            text[i] = text[i].swapcase()\n    var_x4c = 71\n    return ''.join(text)", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'", "id": "Deadcode_Add_IndependentVar_sample_from_177_to_99", "old_id": "sample_177"}
{"code": "def f(array, n):\n    return array[n:]\n    var_7vp = 71", "input": "[0, 0, 1, 2, 2, 2, 2], 4", "output": "[2, 2, 2]", "id": "Deadcode_Add_IndependentVar_sample_from_178_to_100", "old_id": "sample_178"}
{"code": "def f(dic):\n    return sorted(dic.items(), key=lambda x: x[0])\n    var_4fi = 0", "input": "{'b': 1, 'a': 2}", "output": "[('a', 2), ('b', 1)]", "id": "Deadcode_Add_IndependentVar_sample_from_182_to_101", "old_id": "sample_182"}
{"code": "def f(text):\n    ls = text.split()\n    lines = \" \".join(ls[::3]).splitlines()\n    res = []\n    for i in range(2):\n        ln = ls[1::3]\n        if 3 * i + 1 < len(ln):\n            res.append(\" \".join(ln[3 * i:3 * (i + 1)]))\n    return lines + res\n    var_nfr = 85", "input": "\"echo hello!!! nice!\"", "output": "['echo']", "id": "Deadcode_Add_IndependentVar_sample_from_183_to_102", "old_id": "sample_183"}
{"code": "def f(L):\n    N = len(L)\n    for k in range(1, N//2 + 1):\n        i = k - 1\n        j = N - k\n        while i < j:\n            # swap elements:\n            L[i], L[j] = L[j], L[i]\n            # update i, j:\n            i += 1\n            j -= 1\n    var_yzq = 48\n    return L", "input": "[16, 14, 12, 7, 9, 11]", "output": "[11, 14, 7, 12, 9, 16]", "id": "Deadcode_Add_IndependentVar_sample_from_185_to_103", "old_id": "sample_185"}
{"code": "def f(d, index):\n    length = len(d.items())\n    idx = index % length\n    v = d.popitem()[1]\n    for _ in range(idx):\n        d.popitem()\n    var_lih = 87\n    return v", "input": "{27:39}, 1", "output": "39", "id": "Deadcode_Add_IndependentVar_sample_from_187_to_104", "old_id": "sample_187"}
{"code": "def f(out, mapping):\n    for key in mapping:\n        out.format_map(mapping)\n        if len(re.findall(r'{\\w}', out)) == 0:\n            break\n        mapping[key][1] = mapping[key][1][::-1]\n    return out\n    var_nx9 = 24", "input": "\"{{{{}}}}\", {}", "output": "'{{{{}}}}'", "id": "Deadcode_Add_IndependentVar_sample_from_189_to_105", "old_id": "sample_189"}
{"code": "def f(text):\n    short = ''\n    for c in text:\n        if(c.islower()):\n            short += c\n    return short\n    var_ted = 39", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'", "id": "Deadcode_Add_IndependentVar_sample_from_190_to_106", "old_id": "sample_190"}
{"code": "def f(string):\n    if string.isupper():\n        return True\n    else:\n        return False\n    var_i7y = 3", "input": "'Ohno'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_191_to_107", "old_id": "sample_191"}
{"code": "def f(temp, timeLimit):\n    s = timeLimit // temp\n    e = timeLimit % temp\n    return [f'{e} oC', f'{s} {e}'][s > 1]\n    var_zno = 4", "input": "1, 1234567890", "output": "'1234567890 0'", "id": "Deadcode_Add_IndependentVar_sample_from_197_to_108", "old_id": "sample_197"}
{"code": "def f(text, strip_chars):\n    return text[::-1].strip(strip_chars)[::-1]\n    var_qz3 = 92", "input": "'tcmfsmj', 'cfj'", "output": "'tcmfsm'", "id": "Deadcode_Add_IndependentVar_sample_from_198_to_109", "old_id": "sample_198"}
{"code": "def f(text, value):\n    length = len(text)\n    index = 0\n    var_u37 = 58\n    while length > 0:\n        value = text[index] + value\n        length -= 1\n        index += 1\n    return value", "input": "'jao mt', 'house'", "output": "'tm oajhouse'", "id": "Deadcode_Add_IndependentVar_sample_from_200_to_110", "old_id": "sample_200"}
{"code": "def f(text):\n    chars = []\n    for c in text:\n        if c.isdigit():\n            chars.append(c)\n    return ''.join(chars[::-1])\n    var_k2r = 39", "input": "'--4yrw 251-//4 6p'", "output": "'641524'", "id": "Deadcode_Add_IndependentVar_sample_from_201_to_111", "old_id": "sample_201"}
{"code": "def f(array, list):\n    array.extend(list)\n    [e for e in array if e % 2 == 0]\n    return [e for e in array if e >= 10]\n    var_a67 = 21", "input": "[2, 15], [15, 1]", "output": "[15, 15]", "id": "Deadcode_Add_IndependentVar_sample_from_202_to_112", "old_id": "sample_202"}
{"code": "def f(d):\n    d.clear()\n    return d\n    var_z7x = 43", "input": "{'a': 3, 'b': -1, 'c': 'Dum'}", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_203_to_113", "old_id": "sample_203"}
{"code": "def f(a):\n    return ' '.join(a.split())\n    var_uzl = 35", "input": "' h e l l o   w o r l d! '", "output": "'h e l l o w o r l d!'", "id": "Deadcode_Add_IndependentVar_sample_from_206_to_114", "old_id": "sample_206"}
{"code": "def f(items):\n    result = []\n    for item in items:\n        for d in item:\n            if not d.isdigit():\n                result.append(d)\n    var_p3m = 79\n    return result", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']", "id": "Deadcode_Add_IndependentVar_sample_from_208_to_115", "old_id": "sample_208"}
{"code": "def f(prefix, s):\n    return str.removeprefix(prefix, s)\n    var_3ht = 26", "input": "'hymi', 'hymifulhxhzpnyihyf'", "output": "'hymi'", "id": "Deadcode_Add_IndependentVar_sample_from_209_to_116", "old_id": "sample_209"}
{"code": "def f(n, m, num):\n    x_list = list(range(n, m+1))\n    var_spu = 46\n    j = 0\n    while True:\n        j = (j + num) % len(x_list)\n        if x_list[j] % 2 == 0:\n            return x_list[j]", "input": "46, 48, 21", "output": "46", "id": "Deadcode_Add_IndependentVar_sample_from_210_to_117", "old_id": "sample_210"}
{"code": "def f(s):\n    count = 0\n    for c in s:\n        if s.rindex(c) != s.index(c):\n            count+=1\n    return count\n    var_nep = 59", "input": "\"abca dea ead\"", "output": "10", "id": "Deadcode_Add_IndependentVar_sample_from_211_to_118", "old_id": "sample_211"}
{"code": "def f(nums):\n    for _ in range(len(nums) - 1):\n        nums.reverse()\n    return nums\n    var_fmy = 6", "input": "[1, -9, 7, 2, 6, -3, 3]", "output": "[1, -9, 7, 2, 6, -3, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_212_to_119", "old_id": "sample_212"}
{"code": "def f(s):\n    return s.replace('(', '[').replace(')', ']')\n    var_ht9 = 71", "input": "\"(ac)\"", "output": "'[ac]'", "id": "Deadcode_Add_IndependentVar_sample_from_213_to_120", "old_id": "sample_213"}
{"code": "def f(text, m, n):\n    text = \"{}{}{}\".format(text, text[:m], text[n:])\n    result = \"\"\n    for i in range(n, len(text)-m):\n        result = text[i] + result\n    return result\n    var_sxp = 75", "input": "\"abcdefgabc\", 1, 2", "output": "'bagfedcacbagfedc'", "id": "Deadcode_Add_IndependentVar_sample_from_220_to_121", "old_id": "sample_220"}
{"code": "def f(text, delim):\n    first, second = text.split(delim)\n    var_mv5 = 41\n    return second + delim + first", "input": "'bpxa24fc5.', '.'", "output": "'.bpxa24fc5'", "id": "Deadcode_Add_IndependentVar_sample_from_221_to_122", "old_id": "sample_221"}
{"code": "def f(text):\n    if text.islower():\n        return True\n    var_ihq = 66\n    return False", "input": "\"54882\"", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_225_to_123", "old_id": "sample_225"}
{"code": "def f(nums):\n    for i in range(len(nums)):\n        if nums[i] % 3 == 0:\n            nums.append(nums[i])\n    return nums\n    var_s9h = 72", "input": "[1, 3]", "output": "[1, 3, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_226_to_124", "old_id": "sample_226"}
{"code": "def f(text):\n    text = text.lower()\n    head, tail = text[0], text[1:]\n    var_1zm = 19\n    return head.upper() + tail", "input": "'Manolo'", "output": "'Manolo'", "id": "Deadcode_Add_IndependentVar_sample_from_227_to_125", "old_id": "sample_227"}
{"code": "def f(dic, value):\n    result = []\n    for e in dic:\n        result.append(e[0])\n        if e[1] == value:\n            result.reverse()\n        else:\n            result.append(e[1])\n    var_q2c = 66\n    return result", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']", "id": "Deadcode_Add_IndependentVar_sample_from_229_to_126", "old_id": "sample_229"}
{"code": "def f(text):\n    result = ''\n    var_0u2 = 39\n    i = len(text)-1\n    while i >= 0:\n        c = text[i]\n        if c.isalpha():\n            result += c\n        i -= 1\n    return result", "input": "'102x0zoq'", "output": "'qozx'", "id": "Deadcode_Add_IndependentVar_sample_from_230_to_127", "old_id": "sample_230"}
{"code": "def f(text, char):\n    position = len(text)\n    if char in text:\n        position = text.index(char)\n        if position > 1:\n            position = (position + 1) % len(text)\n    return position\n    var_dht = 3", "input": "'wduhzxlfk', 'w'", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_234_to_128", "old_id": "sample_234"}
{"code": "def f(array, arr):\n    result = []\n    for s in arr:\n        result += list(filter(lambda l: l != '', s.split(arr[array.index(s)])))\n    var_iyv = 29\n    return result", "input": "[], []", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_235_to_129", "old_id": "sample_235"}
{"code": "def f(ls, n):\n    answer = 0\n    for i in ls:\n        if i[0] == n:\n            answer = i\n    var_l4x = 68\n    return answer", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]", "id": "Deadcode_Add_IndependentVar_sample_from_238_to_130", "old_id": "sample_238"}
{"code": "def f(text, froms):\n    text = text.lstrip(froms)\n    text = text.rstrip(froms)\n    return text\n    var_kdq = 22", "input": "'0 t 1cos ', 'st ' + '0\\t\\n  '", "output": "'1co'", "id": "Deadcode_Add_IndependentVar_sample_from_239_to_131", "old_id": "sample_239"}
{"code": "def f(float_number):\n    number = str(float_number)\n    dot = number.find('.')\n    if dot != -1:\n        return number[:dot] + '.' + number[dot+1:].ljust(2, '0')\n    return number + '.00'\n    var_4ra = 80", "input": "3.121", "output": "'3.121'", "id": "Deadcode_Add_IndependentVar_sample_from_240_to_132", "old_id": "sample_240"}
{"code": "def f(book):\n    a = book.rsplit(':', 1)\n    var_8a4 = 100\n    if a[0].split(' ')[-1] == a[1].split(' ')[0]:\n        return f(' '.join(a[0].split(' ')[:-1]) + ' ' + a[1])\n    return book", "input": "\"udhv zcvi nhtnfyd :erwuyawa pun\"", "output": "'udhv zcvi nhtnfyd :erwuyawa pun'", "id": "Deadcode_Add_IndependentVar_sample_from_242_to_133", "old_id": "sample_242"}
{"code": "def f(text, char):\n    return char.islower() and text.islower()\n    var_p4g = 29", "input": "'abc', 'e'", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_243_to_134", "old_id": "sample_243"}
{"code": "def f(alphabet, s):\n    a = [x for x in alphabet if x.upper() in s]\n    if s.upper() == s:\n        a.append('all_uppercased')\n    return a\n    var_5rd = 17", "input": "'abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\"", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_245_to_135", "old_id": "sample_245"}
{"code": "def f(haystack, needle):\n    for i in range(haystack.find(needle), -1, -1):\n        if haystack[i:] == needle:\n            return i\n    return -1\n    var_z7m = 22", "input": "\"345gerghjehg\", \"345\"", "output": "-1", "id": "Deadcode_Add_IndependentVar_sample_from_246_to_136", "old_id": "sample_246"}
{"code": "def f(a, b):\n    a.sort()\n    b.sort(reverse=True)\n    var_1e4 = 7\n    return a + b", "input": "[666], []", "output": "[666]", "id": "Deadcode_Add_IndependentVar_sample_from_248_to_137", "old_id": "sample_248"}
{"code": "def f(messages):\n    phone_code = \"+353\"\n    var_5mk = 34\n    result = []\n    for message in messages:\n        message.extend(phone_code)\n        result.append(\";\".join(message))\n    return \". \".join(result)", "input": "[['Marie','Nelson','Oscar']]", "output": "'Marie;Nelson;Oscar;+;3;5;3'", "id": "Deadcode_Add_IndependentVar_sample_from_251_to_138", "old_id": "sample_251"}
{"code": "def f(text, char):\n    if char in text:\n        if not text.startswith(char):\n            text = text.replace(char,'')\n    var_mcp = 57\n    return text", "input": "'\\\\foo', '\\\\'", "output": "'\\\\foo'", "id": "Deadcode_Add_IndependentVar_sample_from_252_to_139", "old_id": "sample_252"}
{"code": "def f(text, pref):\n    length = len(pref)\n    var_ibf = 68\n    if pref == text[:length]:\n        return text[length:]\n    return text", "input": "'kumwwfv', 'k'", "output": "'umwwfv'", "id": "Deadcode_Add_IndependentVar_sample_from_253_to_140", "old_id": "sample_253"}
{"code": "def f(text, fill, size):\n    if size < 0:\n        size = -size\n    if len(text) > size:\n        return text[len(text) - size:]\n    return text.rjust(size, fill)\n    var_tah = 100", "input": "'no asw', 'j', 1", "output": "'w'", "id": "Deadcode_Add_IndependentVar_sample_from_255_to_141", "old_id": "sample_255"}
{"code": "def f(text, sub):\n    a = 0\n    b = len(text) - 1\n\n    while a <= b:\n        c = (a + b) // 2\n        if text.rfind(sub) >= c:\n            a = c + 1\n        else:\n            b = c - 1\n    var_9ip = 51\n\n    return a", "input": "'dorfunctions', '2'", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_256_to_142", "old_id": "sample_256"}
{"code": "thigh_o_one = [1, 2, 7, 8, 9]\nthigh_o_two = [1, 2, 7, 9]\ndef f(L, m, start, step):\n    L.insert(start, m)\n    for x in range(start-1, 0, -step):\n        start -= 1\n        L.insert(start, L.pop(L.index(m)-1))\n    var_hdz = 80\n    return L", "input": "thigh_o_two[:], 3, 3, 2", "output": "[1, 2, 7, 3, 9]", "id": "Deadcode_Add_IndependentVar_sample_from_258_to_143", "old_id": "sample_258"}
{"code": "def f(text):\n    new_text = []\n    for character in text:\n        if character.isupper():\n            new_text.insert(len(new_text) // 2, character)\n    if len(new_text) == 0:\n        new_text = ['-']\n    var_o3y = 78\n    return ''.join(new_text)", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'", "id": "Deadcode_Add_IndependentVar_sample_from_259_to_144", "old_id": "sample_259"}
{"code": "def f(nums):\n    count = len(nums)\n    score = {0: \"F\", 1: \"E\", 2: \"D\", 3: \"C\", 4: \"B\", 5: \"A\", 6: \"\"}\n    result = []\n    var_ijb = 44\n    for i in range(count):\n        result.append(score.get(nums[i]))\n    return ''.join(result)", "input": "[4, 5]", "output": "'BA'", "id": "Deadcode_Add_IndependentVar_sample_from_262_to_145", "old_id": "sample_262"}
{"code": "def f(base, delta):\n    for j in range(len(delta)):\n        for i in range(len(base)):\n            if base[i] == delta[j][0]:\n                assert delta[j][1] != base[i]\n                base[i] = delta[j][1]\n    return base\n    var_irp = 77", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']", "id": "Deadcode_Add_IndependentVar_sample_from_263_to_146", "old_id": "sample_263"}
{"code": "def f(text, space):\n    if space < 0:\n        return text\n    return text.ljust(len(text) // 2 + space)\n    var_3k7 = 21", "input": "'sowpf', -7", "output": "'sowpf'", "id": "Deadcode_Add_IndependentVar_sample_from_267_to_147", "old_id": "sample_267"}
{"code": "def f(s, separator):\n    for i in range(len(s)):\n        if s[i] == separator:\n            new_s = list(s)\n            new_s[i] = '/'\n            return ' '.join(new_s)\n    var_g7c = 18", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'", "id": "Deadcode_Add_IndependentVar_sample_from_268_to_148", "old_id": "sample_268"}
{"code": "def f(array):\n    zero_len = (len(array) - 1) % 3\n    for i in range(zero_len):\n        array[i] = '0'\n    var_23b = 92\n    for i in range(zero_len + 1, len(array), 3):\n        array[i - 1:i + 2] = ['0', '0', '0']\n    return array", "input": "[9, 2]", "output": "['0', 2]", "id": "Deadcode_Add_IndependentVar_sample_from_269_to_149", "old_id": "sample_269"}
{"code": "def f(dic):\n    d = {}\n    for key in dic:\n        d[key] = dic.popitem(last = False)[1]\n    return d\n    var_kru = 53", "input": "{}", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_270_to_150", "old_id": "sample_270"}
{"code": "def f(text, c):\n    ls = list(text)\n    if c not in text:\n        raise ValueError('Text has no {c}')\n    ls.pop(text.rindex(c))\n    var_5oj = 98\n    return ''.join(ls)", "input": "'uufhl', 'l'", "output": "'uufh'", "id": "Deadcode_Add_IndependentVar_sample_from_271_to_151", "old_id": "sample_271"}
{"code": "def f(nums, target):\n    count = 0\n    var_7n8 = 26\n    for n1 in nums:\n        for n2 in nums:\n            count += (n1+n2==target)\n    return count", "input": "[1, 2, 3], 4", "output": "3", "id": "Deadcode_Add_IndependentVar_sample_from_274_to_152", "old_id": "sample_274"}
{"code": "def f(lst, mode):\n    result = [el for el in lst]\n    if mode:\n        result.reverse()\n    return result\n    var_l0u = 40", "input": "[1, 2, 3, 4], 1", "output": "[4, 3, 2, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_277_to_153", "old_id": "sample_277"}
{"code": "def f(c, index, value):\n    c[index] = value\n    var_0t8 = 3\n    if value >= 3:\n        c.update({'message' : 'xcrWt'})\n    else: \n        del c['message']\n    return c", "input": "{1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2", "output": "{1: 2, 3: 4, 5: 6, 8: 2}", "id": "Deadcode_Add_IndependentVar_sample_from_281_to_154", "old_id": "sample_281"}
{"code": "def f(s1, s2):\n    position = 1\n    var_cwg = 85\n    count = 0\n    while position > 0:\n        position = s1.find(s2, position)\n        count += 1\n        position += 1\n    return count", "input": "'xinyyexyxx', 'xx'", "output": "2", "id": "Deadcode_Add_IndependentVar_sample_from_282_to_155", "old_id": "sample_282"}
{"code": "def f(text, prefix):\n    idx = 0\n    for letter in prefix:\n        if text[idx] != letter:\n            return None\n        idx += 1\n    return text[idx:]\n    var_wxp = 40", "input": "'bestest', 'bestest'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_284_to_156", "old_id": "sample_284"}
{"code": "def f(array, x, i):\n    if i < -len(array) or i > len(array) - 1:\n        return 'no'\n    temp = array[i]\n    array[i] = x\n    return array\n    var_0cy = 42", "input": "[1,2,3,4,5,6,7,8,9,10], 11, 4", "output": "[1, 2, 3, 4, 11, 6, 7, 8, 9, 10]", "id": "Deadcode_Add_IndependentVar_sample_from_286_to_157", "old_id": "sample_286"}
{"code": "def f(name):\n    if name.islower():\n        name = name.upper()\n    else:\n        name = name.lower()\n    var_v7d = 82\n    return name", "input": "'Pinneaple'", "output": "'pinneaple'", "id": "Deadcode_Add_IndependentVar_sample_from_287_to_158", "old_id": "sample_287"}
{"code": "def f(text, prefix):\n    if text.startswith(prefix):\n        return text.removeprefix(prefix)\n    if prefix in text:\n        return text.replace(prefix, '').strip()\n    return text.upper()\n    var_w2p = 77", "input": "'abixaaaily', 'al'", "output": "'ABIXAAAILY'", "id": "Deadcode_Add_IndependentVar_sample_from_290_to_159", "old_id": "sample_290"}
{"code": "def f(dictionary, arr):\n    dictionary.update({arr[0]: [arr[1]]})\n    if len(dictionary[arr[0]]) == arr[1]:\n        dictionary[arr[0]] = arr[0]\n    var_fnv = 5\n    return dictionary", "input": "{}, ['a', 2]", "output": "{'a': [2]}", "id": "Deadcode_Add_IndependentVar_sample_from_291_to_160", "old_id": "sample_291"}
{"code": "def f(text):\n    new_text = [c if c.isdigit() else '*' for c in text]\n    var_agu = 75\n    return ''.join(new_text)", "input": "'5f83u23saa'", "output": "'5*83*23***'", "id": "Deadcode_Add_IndependentVar_sample_from_292_to_161", "old_id": "sample_292"}
{"code": "def f(text, char):\n    if not text.endswith(char):\n        return f(char + text, char)\n    var_u1p = 94\n    return text", "input": "'staovk', 'k'", "output": "'staovk'", "id": "Deadcode_Add_IndependentVar_sample_from_299_to_162", "old_id": "sample_299"}
{"code": "def f(nums):\n    count = 1\n    var_meu = 16\n    for i in range(count, len(nums) - 1, 2):\n        nums[i] = max(nums[i], nums[count-1])\n        count += 1\n    return nums", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_300_to_163", "old_id": "sample_300"}
{"code": "def f(nums):\n    count = len(nums)\n    for i in range(-count+1, 0):\n        nums.extend([nums[i], nums[i]])\n    return nums\n    var_hs3 = 49", "input": "[0, 6, 2, -1, -2]", "output": "[0, 6, 2, -1, -2, 6, 6, -2, -2, -2, -2, -2, -2]", "id": "Deadcode_Add_IndependentVar_sample_from_301_to_164", "old_id": "sample_301"}
{"code": "def f(d):\n    key1 = sorted(d.items(), key=lambda x: x[0], reverse=True)[0][0]\n    val1 = d.pop(key1)\n    key2 = sorted(d.items(), key=lambda x: x[0], reverse=True)[0][0]\n    val2 = d.pop(key2)\n    return dict({key1: val1, key2: val2})\n    var_yd7 = 18", "input": "{2: 3, 17: 3, 16: 6, 18: 6, 87: 7}", "output": "{87: 7, 18: 6}", "id": "Deadcode_Add_IndependentVar_sample_from_304_to_165", "old_id": "sample_304"}
{"code": "def f(text, char):\n    length = len(text)\n    var_eah = 32\n    index = -1\n    for i in range(length):\n        if text[i] == char:\n            index = i\n    if index == -1:\n        index = length // 2\n    new_text = list(text)\n    new_text.pop(index)\n    return ''.join(new_text)", "input": "'o horseto', 'r'", "output": "'o hoseto'", "id": "Deadcode_Add_IndependentVar_sample_from_305_to_166", "old_id": "sample_305"}
{"code": "def f(nums):\n    digits = []\n    var_78s = 2\n    for num in nums:\n        if (isinstance(num, str) and num.isnumeric()) or isinstance(num, int):\n            digits.append(num)\n    digits = list(map(int, digits))\n    return digits", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]", "id": "Deadcode_Add_IndependentVar_sample_from_306_to_167", "old_id": "sample_306"}
{"code": "def f(str):\n    if str.isalnum():\n        return \"True\"\n    return \"False\"\n    var_qlp = 6", "input": "'777'", "output": "'True'", "id": "Deadcode_Add_IndependentVar_sample_from_312_to_168", "old_id": "sample_312"}
{"code": "def f(text):\n    if ',' in text:\n        before, _, after = text.partition(',')\n        return after + ' ' + before\n    var_we3 = 68\n    return ',' + text.partition(' ')[-1] + ' 0'", "input": "'244, 105, -90'", "output": "' 105, -90 244'", "id": "Deadcode_Add_IndependentVar_sample_from_314_to_169", "old_id": "sample_314"}
{"code": "def f(name):\n    return '| ' + ' '.join(name.split(' ')) + ' |'\n    var_uez = 84", "input": "'i am your father'", "output": "'| i am your father |'", "id": "Deadcode_Add_IndependentVar_sample_from_316_to_170", "old_id": "sample_316"}
{"code": "def f(text, a, b):\n    text = text.replace(a, b)\n    return text.replace(b, a)\n    var_t2o = 3", "input": "' vup a zwwo oihee amuwuuw! ', 'a', 'u'", "output": "' vap a zwwo oihee amawaaw! '", "id": "Deadcode_Add_IndependentVar_sample_from_317_to_171", "old_id": "sample_317"}
{"code": "def f(value, char):\n    total = 0\n    for c in value:\n        if c == char or c == char.lower():\n            total += 1\n    var_7tn = 91\n    return total", "input": "'234rtccde', 'e'", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_318_to_172", "old_id": "sample_318"}
{"code": "def f(needle, haystack):\n    count = 0\n    var_ly4 = 88\n    while needle in haystack:\n        haystack = haystack.replace(needle, '', 1)\n        count += 1\n    return count", "input": "'a', 'xxxaaxaaxx'", "output": "4", "id": "Deadcode_Add_IndependentVar_sample_from_319_to_173", "old_id": "sample_319"}
{"code": "def f(text):\n    index = 1\n    var_nqc = 59\n    while index < len(text):\n        if text[index] != text[index - 1]:\n            index += 1\n        else:\n            text1 = text[:index]\n            text2 = text[index:].swapcase()\n            return text1 + text2\n    return text.swapcase()", "input": "'USaR'", "output": "'usAr'", "id": "Deadcode_Add_IndependentVar_sample_from_320_to_174", "old_id": "sample_320"}
{"code": "def f(chemicals, num):\n    fish = chemicals[1:]\n    chemicals.reverse()\n    for i in range(num):\n        fish.append(chemicals.pop(1))\n    chemicals.reverse()\n    var_rgd = 56\n    return chemicals", "input": "['lsi', 's', 't', 't', 'd'], 0", "output": "['lsi', 's', 't', 't', 'd']", "id": "Deadcode_Add_IndependentVar_sample_from_322_to_175", "old_id": "sample_322"}
{"code": "def f(text):\n    return len(text.splitlines())\n    var_fip = 59", "input": "'ncdsdfdaaa0a1cdscsk*XFd'", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_323_to_176", "old_id": "sample_323"}
{"code": "def f(s):\n    l = list(s)\n    for i in range(len(l)):\n        l[i] = l[i].lower()\n        if not l[i].isdigit():\n            return False\n    var_45c = 87\n    return True", "input": "\"\"", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_325_to_177", "old_id": "sample_325"}
{"code": "def f(text):\n    ans = []\n    for char in text:\n        if char.isdigit():\n            ans.append(char)\n        else:\n            ans.append(' ')\n    var_n7q = 66\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "Deadcode_Add_IndependentVar_sample_from_330_to_178", "old_id": "sample_330"}
{"code": "def f(places, lazy):\n    places.sort()\n    for lazy in lazy:\n        places.remove(lazy)\n    if len(places) == 1:\n        return 1\n    for i, place in enumerate(places):\n        if places.count(place+1) == 0:\n            return i+1\n    return i+1\n    var_3cx = 15", "input": "[375, 564, 857, 90, 728, 92], [728]", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_333_to_179", "old_id": "sample_333"}
{"code": "def f(txt):\n    d = []\n    for c in txt:\n        if c.isdigit():\n            continue\n        if c.islower():\n            d.append(c.upper())\n        elif c.isupper():\n            d.append(c.lower())\n    var_h67 = 67\n    return ''.join(d)", "input": "\"5ll6\"", "output": "'LL'", "id": "Deadcode_Add_IndependentVar_sample_from_337_to_180", "old_id": "sample_337"}
{"code": "def f(text):\n    return text.count('-') == len(text)\n    var_jne = 10", "input": "\"---123-4\"", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_342_to_181", "old_id": "sample_342"}
{"code": "def f(list, operation):\n    new_list = list[:]\n    new_list.sort()\n    var_mtc = 4\n    operation(new_list)\n    return list", "input": "[6, 4, 2, 8, 15], (lambda x: x.reverse())", "output": "[6, 4, 2, 8, 15]", "id": "Deadcode_Add_IndependentVar_sample_from_344_to_182", "old_id": "sample_344"}
{"code": "def f(filename):\n    suffix = filename.split('.')[-1]\n    var_ur5 = 69\n    f2 = filename + suffix[::-1]\n    return f2.endswith(suffix)", "input": "'docs.doc'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_346_to_183", "old_id": "sample_346"}
{"code": "def f(dictionary):\n    dictionary[1049] = 55\n    key, value = dictionary.popitem()\n    dictionary[key] = value\n    var_qdt = 76\n    return dictionary", "input": "{'noeohqhk': 623}", "output": "{'noeohqhk': 623, 1049: 55}", "id": "Deadcode_Add_IndependentVar_sample_from_349_to_184", "old_id": "sample_349"}
{"code": "def f(d):\n    size = len(d)\n    v = [0] * size\n    if size == 0:\n        return v\n    var_ac3 = 69\n    for i, e in enumerate(d.values()):\n        v[i] = e\n    return v", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_350_to_185", "old_id": "sample_350"}
{"code": "def f(x):\n    if x == []:\n        return -1\n    else:\n        cache = {}\n        for item in x:\n            if item in cache:\n                cache[item] += 1\n            else:\n                cache[item] = 1\n        return max(cache.values())\n    var_iwy = 3", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "Deadcode_Add_IndependentVar_sample_from_353_to_186", "old_id": "sample_353"}
{"code": "def f(description, values):\n    if values[1] is None:\n        values = values[0:1]\n    else:\n        values = values[1:]\n    var_3bq = 7\n    return description.format(*values)", "input": "'{0}, {0}!!!', ['R', None]", "output": "'R, R!!!'", "id": "Deadcode_Add_IndependentVar_sample_from_354_to_187", "old_id": "sample_354"}
{"code": "def f(lines):\n    for i in range(len(lines)):\n        lines[i] = lines[i].center(len(lines[-1]))\n    var_r31 = 6\n    return lines", "input": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "output": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "id": "Deadcode_Add_IndependentVar_sample_from_359_to_188", "old_id": "sample_359"}
{"code": "def f(text, n):\n    if len(text) <= 2:\n        return text\n    leading_chars = text[0] * (n - len(text) + 1)\n    return leading_chars + text[1:-1] + text[-1]\n    var_dtx = 93", "input": "'g', 15", "output": "'g'", "id": "Deadcode_Add_IndependentVar_sample_from_360_to_189", "old_id": "sample_360"}
{"code": "def f(text):\n    return text.split(':')[0].count('#')\n    var_n7k = 95", "input": "\"#! : #!\"", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_361_to_190", "old_id": "sample_361"}
{"code": "def f(nums):\n    nums.sort()\n    n = len(nums)\n    new_nums = [nums[n//2]]\n    \n    if n % 2 == 0:\n        new_nums = [nums[n//2 - 1], nums[n//2]]\n    \n    for i in range(0, n//2):\n        new_nums.insert(0, nums[n-i-1])\n        new_nums.append(nums[i])\n    var_5uf = 52\n    return new_nums", "input": "[1]", "output": "[1]", "id": "Deadcode_Add_IndependentVar_sample_from_363_to_191", "old_id": "sample_363"}
{"code": "def f(nums, verdict):\n    res = [x for x in nums if x != 0]\n    result = [[x, verdict(x)] for x in res]\n    if result:\n        return result\n    var_56z = 50\n    return 'error - no numbers or all zeros!'", "input": "[0, 3, 0, 1], lambda x: x < 2", "output": "[[3, False], [1, True]]", "id": "Deadcode_Add_IndependentVar_sample_from_364_to_192", "old_id": "sample_364"}
{"code": "def f(n, s):\n    if s.startswith(n):\n        pre, _ = s.split(n, 1)\n        return pre + n + s[len(n):]\n    return s\n    var_809 = 88", "input": "'xqc', 'mRcwVqXsRDRb'", "output": "'mRcwVqXsRDRb'", "id": "Deadcode_Add_IndependentVar_sample_from_365_to_193", "old_id": "sample_365"}
{"code": "def f(string):\n    tmp = string.lower()\n    for char in string.lower():\n        if char in tmp:\n            tmp = tmp.replace(char, '', 1)\n    var_85p = 43\n    return tmp", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_366_to_194", "old_id": "sample_366"}
{"code": "def f(nums, rmvalue):\n    res = nums[:]\n    while rmvalue in res:\n        popped = res.pop(res.index(rmvalue))\n        if popped != rmvalue:\n            res.append(popped)\n    var_2wx = 25\n    return res", "input": "[6, 2, 1, 1, 4, 1], 5", "output": "[6, 2, 1, 1, 4, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_367_to_195", "old_id": "sample_367"}
{"code": "def f(string, numbers):\n    arr = []\n    for num in numbers:\n        arr.append(string.zfill(num))\n    var_uyg = 31\n    return ' '.join(arr)", "input": "'4327', [2, 8, 9, 2, 7, 1]", "output": "'4327 00004327 000004327 4327 0004327 4327'", "id": "Deadcode_Add_IndependentVar_sample_from_368_to_196", "old_id": "sample_368"}
{"code": "def f(text):\n    for char in text:\n        if not char.isspace():\n            return False\n    var_0mx = 28\n    return True", "input": "'     i'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_370_to_197", "old_id": "sample_370"}
{"code": "def f(nums):\n    for odd in nums[:]:\n        if odd % 2 != 0:\n            nums.remove(odd)\n    sum_ = 0\n    var_bfk = 19\n    for num in nums:\n        sum_ += num\n    return sum_", "input": "[11, 21, 0, 11]", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_371_to_198", "old_id": "sample_371"}
{"code": "def f(list_, num):\n    temp = []\n    var_bhr = 68\n    for i in list_:\n        i = num // 2 * ('%s,' % i)\n        temp.append(i)\n    return temp", "input": "['v'], 1", "output": "['']", "id": "Deadcode_Add_IndependentVar_sample_from_372_to_199", "old_id": "sample_372"}
{"code": "def f(orig):\n    copy = orig\n    copy.append(100)\n    var_5sf = 16\n    orig.pop()\n    return copy", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_373_to_200", "old_id": "sample_373"}
{"code": "def f(seq, v):\n    a = []\n    var_f6m = 91\n    for i in seq:\n        if i.endswith(v):\n            a.append(i*2)\n    return a", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']", "id": "Deadcode_Add_IndependentVar_sample_from_374_to_201", "old_id": "sample_374"}
{"code": "def f(text):\n    for i in range(len(text)):\n        if text[0:i].startswith(\"two\"):\n            return text[i:]\n    var_zun = 33\n    return 'no'", "input": "\"2two programmers\"", "output": "'no'", "id": "Deadcode_Add_IndependentVar_sample_from_376_to_202", "old_id": "sample_376"}
{"code": "def f(dic, key):\n    dic = dict(dic)\n    v = dic.pop(key, 0)\n    var_42b = 94\n    if v == 0:\n        return 'No such key!'\n    while len(dic) > 0:\n        dic[dic.popitem()[1]] = dic.popitem()[0]\n    return int(dic.popitem()[0])", "input": "dict(did=0), 'u'", "output": "'No such key!'", "id": "Deadcode_Add_IndependentVar_sample_from_378_to_203", "old_id": "sample_378"}
{"code": "def f(text, num_digits):\n    width = max(1, num_digits)\n    return text.zfill(width)\n    var_t5n = 22", "input": "'19', 5", "output": "'00019'", "id": "Deadcode_Add_IndependentVar_sample_from_381_to_204", "old_id": "sample_381"}
{"code": "def f(text, chars):\n    result = list(text)\n    var_rjl = 85\n    while chars in result[-3::-2]:\n        result.remove(result[-3])\n        result.remove(result[-3])\n    return ''.join(result).strip('.')", "input": "'ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y'", "output": "'ellod!p.nkyp.exa.bi.y.hain'", "id": "Deadcode_Add_IndependentVar_sample_from_383_to_205", "old_id": "sample_383"}
{"code": "def f(text, chars):\n    chars = list(chars)\n    var_2gr = 66\n    text = list(text)\n    new_text = text\n    while len(new_text) > 0 and text:\n        if new_text[0] in chars:\n            new_text = new_text[1:]\n        else:\n            break \n    return ''.join(new_text)", "input": "'asfdellos', 'Ta'", "output": "'sfdellos'", "id": "Deadcode_Add_IndependentVar_sample_from_384_to_206", "old_id": "sample_384"}
{"code": "def f(total, arg):\n    if type(arg) is list:\n        for e in arg:\n            total.extend(e)\n    else:\n        total.extend(arg)\n    var_3pw = 1\n    return total", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']", "id": "Deadcode_Add_IndependentVar_sample_from_389_to_207", "old_id": "sample_389"}
{"code": "def f(students):\n    seatlist = students\n    seatlist.reverse()\n    cnt = 0\n    for cnt in range(len(seatlist)):\n        cnt += 2\n        seatlist[cnt - 1:cnt] = ['+']\n    seatlist.append('+')\n    var_970 = 79\n    return seatlist", "input": "['r', '9']", "output": "['9', '+', '+', '+']", "id": "Deadcode_Add_IndependentVar_sample_from_391_to_208", "old_id": "sample_391"}
{"code": "def f(ets):\n    while ets:\n        k, v = ets.popitem()\n        ets[k] = v**2\n    var_t8n = 7\n    return ets", "input": "{}", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_396_to_209", "old_id": "sample_396"}
{"code": "def f(n, l):\n    archive = {}\n    var_ryh = 24\n    for _ in range(n):\n        archive.clear()\n        archive.update({x + 10: x * 10 for x in l})\n    return archive", "input": "0, ['aaa', 'bbb']", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_402_to_210", "old_id": "sample_402"}
{"code": "def f(no):\n    d = dict.fromkeys(no, False) \n    return sum([1 for i in d.keys()])\n    var_p9l = 89", "input": "['l', 'f', 'h', 'g', 's', 'b']", "output": "6", "id": "Deadcode_Add_IndependentVar_sample_from_404_to_211", "old_id": "sample_404"}
{"code": "def f(s):\n    while len(s) > 1:\n        s.clear()\n        s.append(len(s))\n    var_ib6 = 71\n    return s.pop()", "input": "[6, 1, 2, 3]", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_407_to_212", "old_id": "sample_407"}
{"code": "def f(text, pref):\n    if isinstance(pref, list):\n        return ', '.join(text.startswith(x) for x in pref)\n    else:\n        return text.startswith(pref)\n    var_t18 = 94", "input": "'Hello World', 'W'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_411_to_213", "old_id": "sample_411"}
{"code": "def f(lst):\n    lst.reverse()\n    lst.pop()\n    lst.reverse()\n    return lst\n    var_u7r = 31", "input": "[7, 8, 2, 8]", "output": "[8, 2, 8]", "id": "Deadcode_Add_IndependentVar_sample_from_417_to_214", "old_id": "sample_417"}
{"code": "def f(text, value):\n    if not value in text:\n        return ''\n    return text.rpartition(value)[0]\n    var_nua = 100", "input": "'mmfbifen', 'i'", "output": "'mmfb'", "id": "Deadcode_Add_IndependentVar_sample_from_419_to_215", "old_id": "sample_419"}
{"code": "def f(text):\n    try:\n        return text.isalpha()\n    except:\n        return False\n    var_y69 = 75", "input": "\"x\"", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_420_to_216", "old_id": "sample_420"}
{"code": "def f(str, n):\n    if len(str) < n:\n        return str\n    else:\n        return str.removeprefix(str[:n])\n    var_cr2 = 80", "input": "\"try.\", 5", "output": "'try.'", "id": "Deadcode_Add_IndependentVar_sample_from_421_to_217", "old_id": "sample_421"}
{"code": "def f(array):\n    new_array = array.copy()\n    var_ke3 = 83\n    new_array = reversed(new_array)\n    return [x*x for x in new_array]", "input": "[1, 2, 1]", "output": "[1, 4, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_422_to_218", "old_id": "sample_422"}
{"code": "def f(s):\n    s = s.replace('\"', '')\n    lst = list(s)\n    col = 0\n    count = 1\n    var_971 = 26\n    while col < len(lst) and lst[col] in \".:,\":\n        if lst[col] == \".\":\n            count = ls[col] + 1\n        col += 1\n    return s[col+count:]", "input": "'\"Makers of a Statement\"'", "output": "'akers of a Statement'", "id": "Deadcode_Add_IndependentVar_sample_from_424_to_219", "old_id": "sample_424"}
{"code": "def f(numbers, elem, idx):\n    numbers.insert(idx, elem)\n    var_lfe = 82\n    return numbers", "input": "[1, 2, 3], 8, 5", "output": "[1, 2, 3, 8]", "id": "Deadcode_Add_IndependentVar_sample_from_426_to_220", "old_id": "sample_426"}
{"code": "def f(length, text):\n    if len(text) == length:\n        return text[::-1]\n    var_ra1 = 11\n    return False", "input": "-5, 'G5ogb6f,c7e.EMm'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_432_to_221", "old_id": "sample_432"}
{"code": "def f(numbers, num, val):\n    while len(numbers) < num:\n        numbers.insert(len(numbers) // 2, val)\n    for _ in range(len(numbers) // (num - 1) - 4):\n        numbers.insert(len(numbers) // 2, val)\n    var_w0x = 6\n    return ' '.join(numbers)", "input": "[], 0, 1", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_435_to_222", "old_id": "sample_435"}
{"code": "def f(s, characters):\n    return [s[i:i+1] for i in characters]\n    var_urm = 41", "input": "'s7 6s 1ss', [1, 3, 6, 1, 2]", "output": "['7', '6', '1', '7', ' ']", "id": "Deadcode_Add_IndependentVar_sample_from_436_to_223", "old_id": "sample_436"}
{"code": "def f(tap_hierarchy):\n    hierarchy = {}\n    for gift in tap_hierarchy:\n        hierarchy = hierarchy.fromkeys(gift, None)\n    return hierarchy\n    var_q9o = 42", "input": "['john', 'doe', 'the', 'john', 'doe']", "output": "{'d': None, 'o': None, 'e': None}", "id": "Deadcode_Add_IndependentVar_sample_from_437_to_224", "old_id": "sample_437"}
{"code": "def f(string):\n    bigTab = 100\n    for i in range(10, 30):\n        if 0 < string.count('\\t') < 20:\n            bigTab = i\n            break\n    var_v2o = 27\n    return string.expandtabs(bigTab)", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'", "id": "Deadcode_Add_IndependentVar_sample_from_438_to_225", "old_id": "sample_438"}
{"code": "def f(base, k, v):\n    base[k] = v\n    var_mso = 45\n    return base", "input": "{37: 'forty-five'}, '23', 'what?'", "output": "{37: 'forty-five', '23': 'what?'}", "id": "Deadcode_Add_IndependentVar_sample_from_441_to_226", "old_id": "sample_441"}
{"code": "def f(text):\n    for space in text:\n        if space == ' ':\n            text = text.lstrip()\n        else:\n            text = text.replace('cd', space)\n    var_jmx = 54\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "Deadcode_Add_IndependentVar_sample_from_443_to_227", "old_id": "sample_443"}
{"code": "def f(nums):\n    count = len(nums)\n    var_910 = 32\n    for i in range(count-1, 0, -2):\n        nums.insert(i, nums.pop(0) + nums.pop(0))\n    return nums", "input": "[-5, 3, -2, -3, -1, 3, 5]", "output": "[5, -2, 2, -5]", "id": "Deadcode_Add_IndependentVar_sample_from_444_to_228", "old_id": "sample_444"}
{"code": "def f(names):\n    parts = names.split(',')\n    for i, part in enumerate(parts):\n        parts[i] = part.replace(' and', '+').title().replace('+', ' and')\n    var_f0v = 79\n    return ', '.join(parts)", "input": "\"carrot, banana, and strawberry\"", "output": "'Carrot,  Banana,  and Strawberry'", "id": "Deadcode_Add_IndependentVar_sample_from_445_to_229", "old_id": "sample_445"}
{"code": "def f(array):\n    l = len(array)\n    var_rpc = 12\n    if l % 2 == 0:\n        array.clear()\n    else:\n        array.reverse()\n    return array", "input": "[]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_446_to_230", "old_id": "sample_446"}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-1))\n    var_zew = 84\n    for i in range(len(text)):\n        if text[i] == ' ':\n            res += '|'\n        else:\n            res += text[i]\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "Deadcode_Add_IndependentVar_sample_from_447_to_231", "old_id": "sample_447"}
{"code": "def f(text):\n    counter = 0\n    for char in text:\n        if char.isalpha():\n            counter += 1\n    var_eds = 53\n    return counter", "input": "'l000*',", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_452_to_232", "old_id": "sample_452"}
{"code": "def f(string, c):\n    return string.endswith(c)\n    var_7zw = 19", "input": "'wrsch)xjmb8', 'c'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_453_to_233", "old_id": "sample_453"}
{"code": "def f(d, count):\n    new_dict = {}\n    var_wz2 = 55\n    for _ in range(count):\n        d = d.copy()\n        new_dict = {**d, **new_dict}\n    return new_dict", "input": "{'a': 2, 'b': [], 'c': {}}, 0", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_454_to_234", "old_id": "sample_454"}
{"code": "def f(nums):\n    count = list(range(len(nums)))\n    var_9on = 61\n    for i in range(len(nums)):\n        nums.pop()\n        if len(count) > 0:\n            count.pop(0)\n    return nums", "input": "[3, 1, 7, 5, 6]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_457_to_235", "old_id": "sample_457"}
{"code": "def f(arr, d):\n    for i in range(1, len(arr), 2):\n        d.update({arr[i]: arr[i-1]})\n    var_un0 = 83\n\n    return d", "input": "['b', 'vzjmc', 'f', 'ae', '0'], dict()", "output": "{'vzjmc': 'b', 'ae': 'f'}", "id": "Deadcode_Add_IndependentVar_sample_from_459_to_236", "old_id": "sample_459"}
{"code": "def f(text, amount):\n    length = len(text)\n    var_kdo = 58\n    pre_text = '|'\n    if amount >= length:\n        extra_space = amount - length\n        pre_text += ' ' * (extra_space // 2)\n        return pre_text + text + pre_text\n    return text", "input": "'GENERAL NAGOOR', 5", "output": "'GENERAL NAGOOR'", "id": "Deadcode_Add_IndependentVar_sample_from_460_to_237", "old_id": "sample_460"}
{"code": "def f(text, value):\n    length = len(text)\n    var_92a = 13\n    letters = list(text)\n    if value not in letters:\n        value = letters[0]\n    return value * length", "input": "'ldebgp o', 'o'", "output": "'oooooooo'", "id": "Deadcode_Add_IndependentVar_sample_from_462_to_238", "old_id": "sample_462"}
{"code": "def f(dict):\n    result = dict.copy()\n    remove_keys = []\n    for k, v in dict.items():\n        if v in dict:\n            del result[k]\n    var_yqk = 11\n    return result", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}", "id": "Deadcode_Add_IndependentVar_sample_from_463_to_239", "old_id": "sample_463"}
{"code": "def f(ans):\n    if ans.isdecimal():\n        total = int(ans) * 4 - 50\n        total -= len([c for c in list(ans) if c not in '02468']) * 100\n        return total\n    return 'NAN'\n    var_tkv = 67", "input": "'0'", "output": "-50", "id": "Deadcode_Add_IndependentVar_sample_from_464_to_240", "old_id": "sample_464"}
{"code": "def f(nums):\n    copy = nums.copy()\n    var_jev = 30\n    newDict = dict()\n    for k in copy:\n        newDict[k] = len(copy[k])\n    return newDict", "input": "{}", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_467_to_241", "old_id": "sample_467"}
{"code": "def f(text, position, value):\n   length = len(text)\n   index = position % (length)\n   if position < 0:\n       index = length // 2\n   new_text = list(text)\n   new_text.insert(index, value)\n   new_text.pop(length-1)\n   var_oa8 = 13\n   return ''.join(new_text)", "input": "'sduyai', 1, 'y'", "output": "'syduyi'", "id": "Deadcode_Add_IndependentVar_sample_from_469_to_242", "old_id": "sample_469"}
{"code": "def f(val, text):\n    indices = [index for index in range(len(text)) if text[index] == val]\n    if len(indices) == 0:\n        return -1\n    else:\n        return indices[0]\n    var_j8e = 97", "input": "'o', 'fnmart'", "output": "-1", "id": "Deadcode_Add_IndependentVar_sample_from_471_to_243", "old_id": "sample_471"}
{"code": "def f(text):\n    d = {}\n    for char in text.replace('-', '').lower():\n        d[char] = d[char] + 1 if char in d else 1\n    d = sorted(d.items(), key=lambda x: x[1])\n    return [val for i, val in d]\n    var_5vx = 3", "input": "\"x--y-z-5-C\"", "output": "[1, 1, 1, 1, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_472_to_244", "old_id": "sample_472"}
{"code": "def f(text, value):\n    indexes = list()\n    var_kg4 = 7\n    for i in range(len(text)):\n        if text[i] == value:\n            indexes.append(i)\n    new_text = list(text)\n    for i in indexes:\n        new_text.remove(value)\n    return ''.join(new_text)", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'", "id": "Deadcode_Add_IndependentVar_sample_from_473_to_245", "old_id": "sample_473"}
{"code": "def f(txt, marker):\n    a = []\n    var_8qj = 16\n    lines = txt.split('\\n')\n    for line in lines:\n        a.append(line.center(marker))\n    return '\\n'.join(a)", "input": "'#[)[]>[^e>\\n 8', -5", "output": "'#[)[]>[^e>\\n 8'", "id": "Deadcode_Add_IndependentVar_sample_from_474_to_246", "old_id": "sample_474"}
{"code": "def f(array, index):\n    if index < 0:\n        index = len(array) + index\n    return array[index]\n    var_7yj = 78", "input": "[1], 0", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_475_to_247", "old_id": "sample_475"}
{"code": "def f(a, split_on):\n    t = a.split()\n    a = []\n    for i in t:\n        for j in i:\n            a.append(j)\n    var_iu4 = 51\n    if split_on in a:\n        return True\n    else:\n        return False", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_476_to_248", "old_id": "sample_476"}
{"code": "def f(text):\n    topic, sep, problem = text.rpartition('|')\n    if problem == 'r':\n        problem = topic.replace('u', 'p')\n    var_sxk = 94\n    return topic, problem", "input": "'|xduaisf'", "output": "('', 'xduaisf')", "id": "Deadcode_Add_IndependentVar_sample_from_477_to_249", "old_id": "sample_477"}
{"code": "def f(nums, pop1, pop2):\n    nums.pop(pop1 - 1)\n    nums.pop(pop2 - 1)\n    return nums\n    var_xqm = 41", "input": "[1, 5, 2, 3, 6], 2, 4", "output": "[1, 2, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_479_to_250", "old_id": "sample_479"}
{"code": "def f(s, c1, c2):\n    if s == '':\n        return s\n    ls = s.split(c1)\n    var_qdu = 93\n    for index, item in enumerate(ls):\n        if c1 in item:\n            ls[index] = item.replace(c1, c2, 1)\n    return c1.join(ls)", "input": "'', 'mi', 'siast'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_480_to_251", "old_id": "sample_480"}
{"code": "def f(text, char):\n    count = text.count(char)\n    chars = list(text)\n    var_xrg = 95\n    if count > 0:\n        index = chars.index(char) + 1\n        chars[:index:index+1] = [c for c in chars[index:index+count:1]]\n    return ''.join(chars)", "input": "'tezmgvn 651h', '6'", "output": "'5ezmgvn 651h'", "id": "Deadcode_Add_IndependentVar_sample_from_488_to_252", "old_id": "sample_488"}
{"code": "def f(text, value):\n    return text.removeprefix(value.lower())\n    var_djn = 87", "input": "'coscifysu', 'cos'", "output": "'cifysu'", "id": "Deadcode_Add_IndependentVar_sample_from_489_to_253", "old_id": "sample_489"}
{"code": "def f(num, l):\n    t = \"\"\n    while l > len(num):\n        t += '0'\n        l -= 1\n    var_2g5 = 80\n    return t + num", "input": "\"1\", 3", "output": "'001'", "id": "Deadcode_Add_IndependentVar_sample_from_494_to_254", "old_id": "sample_494"}
{"code": "def f(s):\n    if str.isascii(s[-5:]):\n        return s[-5:], s[0:][:3]\n    elif str.isascii(s[:5]):\n        return s[:5], s[-5:][3:]\n    else:\n        return s\n    var_39v = 39", "input": "'a1234\u00e5r'", "output": "('a1234', '\u00e5r')", "id": "Deadcode_Add_IndependentVar_sample_from_495_to_255", "old_id": "sample_495"}
{"code": "def f(text, value):\n    if isinstance(value, str):\n        return text.count(value) + text.count(value.lower())\n    var_efg = 61\n    return text.count(value)", "input": "'eftw{\u044c\u0422\u0441k_1', '\\\\'", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_496_to_256", "old_id": "sample_496"}
{"code": "def f(n):\n    b = list(str(n))\n    for i in range(2,len(b)): b[i] += '+'\n    return b\n    var_ch1 = 51", "input": "44", "output": "['4', '4']", "id": "Deadcode_Add_IndependentVar_sample_from_497_to_257", "old_id": "sample_497"}
{"code": "def f(nums, idx, added):\n    nums[idx:idx] = (added,)\n    return nums\n    var_jt0 = 41", "input": "[2, 2, 2, 3, 3], 2, 3", "output": "[2, 2, 3, 2, 3, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_498_to_258", "old_id": "sample_498"}
{"code": "def f(text, length, fillchar):\n    size = len(text)\n    return text.center(length, fillchar)\n    var_0bc = 53", "input": "'magazine', 25, '.'", "output": "'.........magazine........'", "id": "Deadcode_Add_IndependentVar_sample_from_499_to_259", "old_id": "sample_499"}
{"code": "def f(text, delim):\n    return text[:text[::-1].find(delim)][::-1]\n    var_3pr = 100", "input": "'dsj osq wi w', ' '", "output": "'d'", "id": "Deadcode_Add_IndependentVar_sample_from_500_to_260", "old_id": "sample_500"}
{"code": "def f(text, char):\n    index = text.rindex(char)\n    var_8fc = 8\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ''.join(result)", "input": "'qpfi jzm', 'j'", "output": "'jqjfj zm'", "id": "Deadcode_Add_IndependentVar_sample_from_501_to_261", "old_id": "sample_501"}
{"code": "def f(values):\n    values.sort()\n    var_ne0 = 1\n    return values", "input": "[1, 1, 1, 1]", "output": "[1, 1, 1, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_504_to_262", "old_id": "sample_504"}
{"code": "def f(string):\n    while string:\n        if string[-1].isalpha():\n            return string\n        string = string[:-1]\n    return string\n    var_2ab = 19", "input": "'--4/0-209'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_505_to_263", "old_id": "sample_505"}
{"code": "def f(n):\n    p = ''\n    if n%2 == 1:\n        p+='sn'\n    else:\n        return n*n\n    for x in range(1, n+1):\n        if x%2 == 0:\n            p+='to'\n        else:\n            p+='ts'\n    var_v1s = 90\n    return p", "input": "1", "output": "'snts'", "id": "Deadcode_Add_IndependentVar_sample_from_506_to_264", "old_id": "sample_506"}
{"code": "def f(array):\n    result = array.copy()\n    result.reverse()\n    result[:] = [item * 2 for item in result]\n    return result\n    var_qlr = 61", "input": "[1, 2, 3, 4, 5]", "output": "[10, 8, 6, 4, 2]", "id": "Deadcode_Add_IndependentVar_sample_from_515_to_265", "old_id": "sample_515"}
{"code": "def f(nums):\n    m = max(nums)\n    for i in range(m):\n        nums.reverse()\n    var_a5x = 42\n    return nums", "input": "[43, 0, 4, 77, 5, 2, 0, 9, 77]", "output": "[77, 9, 0, 2, 5, 77, 4, 0, 43]", "id": "Deadcode_Add_IndependentVar_sample_from_521_to_266", "old_id": "sample_521"}
{"code": "def f(numbers):\n    floats = [n % 1 for n in numbers]\n    return floats if 1 in floats else []\n    var_n9j = 5", "input": "range(100, 120)", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_522_to_267", "old_id": "sample_522"}
{"code": "def f(dict0):\n    new = dict0.copy()\n    for i in range(len(new)-1):\n        dict0[sorted(new)[i]] = i\n    var_hnj = 96\n    return dict0", "input": "{2: 5, 4: 1, 3: 5, 1: 3, 5: 1}", "output": "{2: 1, 4: 3, 3: 2, 1: 0, 5: 1}", "id": "Deadcode_Add_IndependentVar_sample_from_524_to_268", "old_id": "sample_524"}
{"code": "def f(label1, char, label2, index):\n    m = label1.rindex(char)\n    if m >= index:\n        return label2[:m - index + 1]\n    var_e9r = 18\n    return label1 + label2[index - m - 1:]", "input": "'ekwies', 's', 'rpg', 1", "output": "'rpg'", "id": "Deadcode_Add_IndependentVar_sample_from_526_to_269", "old_id": "sample_526"}
{"code": "def f(s):\n    b = ''\n    c = ''\n    var_hvs = 8\n    for i in s:\n        c = c + i\n        if s.rfind(c) > -1:\n            return s.rfind(c)\n    return 0", "input": "'papeluchis'", "output": "2", "id": "Deadcode_Add_IndependentVar_sample_from_528_to_270", "old_id": "sample_528"}
{"code": "def f(array):\n    prev = array[0]\n    var_al0 = 74\n    newArray = array[:]\n    for i in range(1, len(array)):\n        if prev != array[i]:\n            newArray[i] = array[i]\n        else:\n            del newArray[i]\n        prev = array[i]\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_529_to_271", "old_id": "sample_529"}
{"code": "def f(s, ch):\n    sl = s\n    var_4m9 = 93\n    if ch in s:\n        sl = s.lstrip(ch)\n        if len(sl) == 0:\n            sl = sl + '!?'\n    else:\n        return 'no'\n    return sl", "input": "\"@@@ff\", '@'", "output": "'ff'", "id": "Deadcode_Add_IndependentVar_sample_from_530_to_272", "old_id": "sample_530"}
{"code": "def f(text, x):\n    if text.removeprefix(x) == text:\n        return f(text[1:], x)\n    else:\n        return text\n    var_me4 = 98", "input": "\"Ibaskdjgblw asdl \", \"djgblw\"", "output": "'djgblw asdl '", "id": "Deadcode_Add_IndependentVar_sample_from_531_to_273", "old_id": "sample_531"}
{"code": "def f(text):\n    return ''.join(list(text)).isspace()\n    var_l8j = 7", "input": "' \\t  \\u3000'", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_541_to_274", "old_id": "sample_541"}
{"code": "def f(test, sep, maxsplit):\n    try:\n        return test.rsplit(sep, maxsplit)\n    except:\n        return test.rsplit()\n    var_s19 = 95", "input": "'ab cd', 'x', 2", "output": "['ab cd']", "id": "Deadcode_Add_IndependentVar_sample_from_542_to_275", "old_id": "sample_542"}
{"code": "def f(item):\n    modified = item.replace('. ', ' , ').replace('&#33; ', '! ').replace('. ', '? ').replace('. ', '. ')\n    return modified[0].upper() + modified[1:]\n    var_ak2 = 92", "input": "'.,,,,,. \u0645\u0646\u0628\u062a'", "output": "'.,,,,, , \u0645\u0646\u0628\u062a'", "id": "Deadcode_Add_IndependentVar_sample_from_543_to_276", "old_id": "sample_543"}
{"code": "def f(array):\n    result = []\n    index = 0\n    var_8w3 = 82\n    while index < len(array):\n        result.append(array.pop())\n        index += 2\n    return result", "input": "[8, 8, -4, -9, 2, 8, -1, 8]", "output": "[8, -1, 8]", "id": "Deadcode_Add_IndependentVar_sample_from_545_to_277", "old_id": "sample_545"}
{"code": "def f(d):\n    result = {}\n    for k, v in d.items():\n        if isinstance(k, float):\n            for i in v:\n                result[i] = k\n        else:\n            result[k] = v\n    return result\n    var_wn6 = 69", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "Deadcode_Add_IndependentVar_sample_from_552_to_278", "old_id": "sample_552"}
{"code": "def f(text, count):\n    for i in range(count):\n        text = text[::-1]\n    var_7ho = 56\n    return text", "input": "'439m2670hlsw', 3", "output": "'wslh0762m934'", "id": "Deadcode_Add_IndependentVar_sample_from_553_to_279", "old_id": "sample_553"}
{"code": "def f(text):\n    x = 0\n    var_xo9 = 59\n    if text.islower():\n        for c in text:\n            if int(c) in list(range(90)):\n                x+=1\n    return x", "input": "\"591237865\"", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_560_to_280", "old_id": "sample_560"}
{"code": "def f(lists):\n    lists[1].clear()\n    lists[2] += lists[1]\n    return lists[0]\n    var_yj1 = 59", "input": "[[395, 666, 7, 4], [], [4223, 111]]", "output": "[395, 666, 7, 4]", "id": "Deadcode_Add_IndependentVar_sample_from_564_to_281", "old_id": "sample_564"}
{"code": "def f(text):\n    return max(text.find(ch) for ch in 'aeiou')\n    var_el1 = 27", "input": "\"qsqgijwmmhbchoj\"", "output": "13", "id": "Deadcode_Add_IndependentVar_sample_from_565_to_282", "old_id": "sample_565"}
{"code": "def f(string, code):\n    t = ''\n    try:\n        t = string.encode(code)\n        if t.endswith(b'\\n'):\n            t = t[:-1]\n        t = t.decode('UTF-8')\n        return t\n    except:\n        return t\n    var_d6u = 21", "input": "\"towaru\", \"UTF-8\"", "output": "'towaru'", "id": "Deadcode_Add_IndependentVar_sample_from_566_to_283", "old_id": "sample_566"}
{"code": "def f(s, n):\n    ls = s.rsplit()\n    out = []\n    while len(ls) >= n:\n        out += ls[-n:]\n        ls = ls[:-n]\n    var_4hr = 48\n    return ls + ['_'.join(out)]", "input": "'one two three four five', 3", "output": "['one', 'two', 'three_four_five']", "id": "Deadcode_Add_IndependentVar_sample_from_567_to_284", "old_id": "sample_567"}
{"code": "def f(txt):\n    coincidences = {}\n    for c in txt:\n        if c in coincidences:\n            coincidences[c] += 1\n        else:\n            coincidences[c] = 1\n    var_zrv = 36\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "Deadcode_Add_IndependentVar_sample_from_569_to_285", "old_id": "sample_569"}
{"code": "def f(input_string, spaces):\n    return input_string.expandtabs(spaces)\n    var_5z9 = 14", "input": "r'a\\tb', 4", "output": "'a\\\\tb'", "id": "Deadcode_Add_IndependentVar_sample_from_571_to_286", "old_id": "sample_571"}
{"code": "def f(simpons):\n    while simpons:\n        pop = simpons.pop()\n        if pop == pop.title():\n            return pop\n    return pop\n    var_u0w = 23", "input": "['George', 'Michael', 'George', 'Costanza']", "output": "'Costanza'", "id": "Deadcode_Add_IndependentVar_sample_from_574_to_287", "old_id": "sample_574"}
{"code": "def f(nums, val):\n    new_list = []\n    [new_list.extend([i] * val) for i in nums]\n    return sum(new_list)\n    var_a7g = 57", "input": "[10, 4], 3", "output": "42", "id": "Deadcode_Add_IndependentVar_sample_from_575_to_288", "old_id": "sample_575"}
{"code": "def f(obj):\n    for k, v in obj.items():\n        if v >= 0:\n            obj[k] = -v\n    var_7be = 9\n    return obj", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}", "id": "Deadcode_Add_IndependentVar_sample_from_578_to_289", "old_id": "sample_578"}
{"code": "def f(text):\n    if text.istitle():\n        if len(text) > 1 and text.lower() != text:\n            return text[0].lower() + text[1:]\n    elif text.isalpha():\n        return text.capitalize()\n    return text\n    var_wk4 = 11", "input": "''", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_579_to_290", "old_id": "sample_579"}
{"code": "def f(text, sign):\n    length = len(text)\n    new_text = list(text)\n    sign = list(sign)\n    var_592 = 95\n    for i in range(len(sign)):\n        new_text.insert((i * length - 1) // 2 + (i + 1) // 2, sign[i])\n    return ''.join(new_text)", "input": "'akoon', 'sXo'", "output": "'akoXoosn'", "id": "Deadcode_Add_IndependentVar_sample_from_581_to_291", "old_id": "sample_581"}
{"code": "def f(k, j):\n    arr = []\n    for i in range(k):\n        arr.append(j)\n    var_ydk = 64\n    return arr", "input": "7, 5", "output": "[5, 5, 5, 5, 5, 5, 5]", "id": "Deadcode_Add_IndependentVar_sample_from_582_to_292", "old_id": "sample_582"}
{"code": "def f(text, ch):\n    result = []\n    var_sha = 97\n    for line in text.splitlines():\n        if len(line) > 0 and line[0] == ch:\n            result.append(line.lower())\n        else:\n            result.append(line.upper())\n    return \"\\n\".join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "Deadcode_Add_IndependentVar_sample_from_583_to_293", "old_id": "sample_583"}
{"code": "def f(txt):\n    return txt.format(*('0'*20,))\n    var_p23 = 49", "input": "\"5123807309875480094949830\"", "output": "'5123807309875480094949830'", "id": "Deadcode_Add_IndependentVar_sample_from_584_to_294", "old_id": "sample_584"}
{"code": "def f(text):\n    count = text.count(text[0])\n    ls = list(text)\n    var_6sv = 9\n    for _ in range(count):\n        ls.remove(ls[0])\n    return ''.join(ls)", "input": "';,,,?'", "output": "',,,?'", "id": "Deadcode_Add_IndependentVar_sample_from_585_to_295", "old_id": "sample_585"}
{"code": "def f(text, char):\n    return text.rindex(char)\n    var_oh4 = 74", "input": "\"breakfast\", \"e\"", "output": "2", "id": "Deadcode_Add_IndependentVar_sample_from_586_to_296", "old_id": "sample_586"}
{"code": "def f(items, target):\n    if target in items:\n        return items.index(target)\n    var_dve = 10\n    return -1", "input": "['''1''', '+', '-', '**', '//', '*', '+'], '**'", "output": "3", "id": "Deadcode_Add_IndependentVar_sample_from_588_to_297", "old_id": "sample_588"}
{"code": "def f(numbers):\n    new_numbers = []\n    for i, _ in enumerate(numbers):\n        new_numbers.append(numbers[len(numbers)-1-i])\n    var_lnt = 52\n    return new_numbers", "input": "[11, 3]", "output": "[3, 11]", "id": "Deadcode_Add_IndependentVar_sample_from_592_to_298", "old_id": "sample_592"}
{"code": "def f(nums, n):\n    pos = len(nums) - 1\n    var_lmt = 81\n    for i in range(-len(nums), 0):\n        nums.insert(pos, nums[i])\n    return nums", "input": "[], 14", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_593_to_299", "old_id": "sample_593"}
{"code": "def f(file):\n    return file.index('\\n')\n    var_thk = 67", "input": "\"n wez szize lnson tilebi it 504n.\\n\"", "output": "33", "id": "Deadcode_Add_IndependentVar_sample_from_594_to_300", "old_id": "sample_594"}
{"code": "def f(txt, alpha):\n    txt = sorted(txt)\n    if txt.index(alpha) % 2 == 0:\n        return txt[::-1]\n    var_s9h = 59\n    return txt", "input": "['8', '9', '7', '4', '3', '2'], '9'", "output": "['2', '3', '4', '7', '8', '9']", "id": "Deadcode_Add_IndependentVar_sample_from_596_to_301", "old_id": "sample_596"}
{"code": "def f(array):\n    just_ns = list(map(lambda num: 'n'*num, array))\n    var_i45 = 25\n    final_output = []\n    for wipe in just_ns:\n        final_output.append(wipe)\n    return final_output", "input": "[]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_600_to_302", "old_id": "sample_600"}
{"code": "def f(nums, target):\n    cnt = nums.count(target)\n    var_43d = 9\n    return cnt * 2", "input": "[1, 1], 1", "output": "4", "id": "Deadcode_Add_IndependentVar_sample_from_602_to_303", "old_id": "sample_602"}
{"code": "def f(sentences):\n    if all([sentence.isdecimal() for sentence in sentences.split('.')]):\n        return 'oscillating' \n    else:\n        return 'not oscillating'\n    var_8lm = 77", "input": "'not numbers'", "output": "'not oscillating'", "id": "Deadcode_Add_IndependentVar_sample_from_603_to_304", "old_id": "sample_603"}
{"code": "def f(text, start):\n    return text.startswith(start)\n    var_87e = 12", "input": "\"Hello world\", \"Hello\"", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_604_to_305", "old_id": "sample_604"}
{"code": "def f(array, elem):\n    result = array.copy()\n    while result:\n        key, value = result.popitem()\n        if elem == key or elem == value:\n            result.update(array)\n        del result[key]\n    var_7al = 37\n    return result", "input": "{}, 1", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_609_to_306", "old_id": "sample_609"}
{"code": "def f(nums):\n    nums[:] = nums[::-1]\n    var_pj6 = 80\n    return nums", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[1, 0, -3, 1, -2, -6]", "id": "Deadcode_Add_IndependentVar_sample_from_611_to_307", "old_id": "sample_611"}
{"code": "def f(text):\n    if text.isascii():\n        return 'ascii'\n    else:\n        return 'non ascii'\n    var_yvo = 7", "input": "\"<<<<\"", "output": "'ascii'", "id": "Deadcode_Add_IndependentVar_sample_from_617_to_308", "old_id": "sample_617"}
{"code": "def f(match, fill, n):\n    return fill[:n] + match\n    var_whm = 73", "input": "'9', '8', 2", "output": "'89'", "id": "Deadcode_Add_IndependentVar_sample_from_618_to_309", "old_id": "sample_618"}
{"code": "def f(title):\n    return title.lower()\n    var_mid = 88", "input": "'   Rock   Paper   SCISSORS  '", "output": "'   rock   paper   scissors  '", "id": "Deadcode_Add_IndependentVar_sample_from_619_to_310", "old_id": "sample_619"}
{"code": "def f(x):\n    return \" \".join(list(x)[::-1])\n    var_tao = 82", "input": "\"lert dna ndqmxohi3\"", "output": "'3 i h o x m q d n   a n d   t r e l'", "id": "Deadcode_Add_IndependentVar_sample_from_620_to_311", "old_id": "sample_620"}
{"code": "def f(text, encoding):\n    try:\n        return text.encode(encoding)\n    except LookupError:\n        return str(LookupError)\n    var_1bo = 82", "input": "'13:45:56', 'shift_jis'", "output": "b'13:45:56'", "id": "Deadcode_Add_IndependentVar_sample_from_621_to_312", "old_id": "sample_621"}
{"code": "def f(s):\n    left, sep, right = s.rpartition('.')\n    new = sep.join([right, left])\n    _, sep, _ = new.rpartition('.')\n    return new.replace(sep, ', ')\n    var_0gm = 62", "input": "'galgu'", "output": "', g, a, l, g, u, '", "id": "Deadcode_Add_IndependentVar_sample_from_622_to_313", "old_id": "sample_622"}
{"code": "def f(parts):\n    return list(dict(parts).values())\n    var_was = 36", "input": "[('u', 1), ('s', 7), ('u', -5)]", "output": "[-5, 7]", "id": "Deadcode_Add_IndependentVar_sample_from_627_to_314", "old_id": "sample_627"}
{"code": "def f(nums, delete):\n    nums.remove(delete)\n    var_xc7 = 86\n    return nums", "input": "[4, 5, 3, 6, 1], 5", "output": "[4, 3, 6, 1]", "id": "Deadcode_Add_IndependentVar_sample_from_628_to_315", "old_id": "sample_628"}
{"code": "def f(text, num):\n    req = num - len(text)\n    text = text.center(num, '*')\n    return text[:req // 2: -req // 2]\n    var_8n9 = 94", "input": "'a', 19", "output": "'*'", "id": "Deadcode_Add_IndependentVar_sample_from_631_to_316", "old_id": "sample_631"}
{"code": "def f(array, elem):\n    array.reverse()\n    try:\n        found = array.index(elem)\n    finally:\n        array.reverse()\n    var_pnt = 90\n    return found", "input": "[5, -3, 3, 2], 2", "output": "0", "id": "Deadcode_Add_IndependentVar_sample_from_633_to_317", "old_id": "sample_633"}
{"code": "def f(input_string):\n    table = str.maketrans('aioe', 'ioua')\n    var_sy0 = 77\n    while 'a' in input_string or 'A' in input_string:\n        input_string = input_string.translate(table)\n    return input_string", "input": "'biec'", "output": "'biec'", "id": "Deadcode_Add_IndependentVar_sample_from_634_to_318", "old_id": "sample_634"}
{"code": "def f(text):\n    valid_chars = ['-', '_', '+', '.', '/', ' ']\n    text = text.upper()\n    var_5ct = 92\n    for char in text:\n        if char.isalnum() == False and char not in valid_chars:\n            return False\n    return True", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_635_to_319", "old_id": "sample_635"}
{"code": "def f(d):\n    r = {}\n    while len(d) > 0:\n        r = {**r, **d}\n        del d[max(d.keys())]\n    var_jug = 89\n    return r", "input": "{ 3: 'A3', 1: 'A1', 2: 'A2' }", "output": "{3: 'A3', 1: 'A1', 2: 'A2'}", "id": "Deadcode_Add_IndependentVar_sample_from_636_to_320", "old_id": "sample_636"}
{"code": "def f(text):\n    text = text.split(' ')\n    for t in text:\n        if not t.isnumeric():\n            return 'no'\n    return 'yes'\n    var_axy = 40", "input": "'03625163633 d'", "output": "'no'", "id": "Deadcode_Add_IndependentVar_sample_from_637_to_321", "old_id": "sample_637"}
{"code": "def f(s, suffix):\n    if not suffix:\n        return s\n    while s.endswith(suffix):\n        s = s[:-len(suffix)]\n    var_9m4 = 65\n    return s", "input": "'ababa', 'ab'", "output": "'ababa'", "id": "Deadcode_Add_IndependentVar_sample_from_638_to_322", "old_id": "sample_638"}
{"code": "def f(nums, target):\n    if nums.count(0):\n        return 0\n    elif nums.count(target) < 3:\n        return 1\n    else:\n        return nums.index(target)\n    var_nxu = 11", "input": "[1, 1, 1, 2], 3", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_645_to_323", "old_id": "sample_645"}
{"code": "def f(text, chunks):\n    return text.splitlines(chunks)\n    var_uim = 19", "input": "'/alcm@ an)t//eprw)/e!/d\\nujv', 0", "output": "['/alcm@ an)t//eprw)/e!/d', 'ujv']", "id": "Deadcode_Add_IndependentVar_sample_from_647_to_324", "old_id": "sample_647"}
{"code": "def f(text, tabsize):\n    return '\\n'.join([\n    \tt.expandtabs(tabsize)\n        for t in text.split('\\n')\n    ])\n    var_dmo = 76", "input": "\"\\tf9\\n\\tldf9\\n\\tadf9!\\n\\tf9?\", 1", "output": "' f9\\n ldf9\\n adf9!\\n f9?'", "id": "Deadcode_Add_IndependentVar_sample_from_649_to_325", "old_id": "sample_649"}
{"code": "def f(string, substring):\n    while string.startswith(substring):\n        string = string[len(substring):len(string)]\n    return string\n    var_nz1 = 86", "input": "'', 'A'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_650_to_326", "old_id": "sample_650"}
{"code": "def f(text, letter):\n    if letter.islower(): letter = letter.upper()\n    var_f1m = 41\n    text = ''.join([letter if char == letter.lower() else char for char in text])\n    return text.capitalize()", "input": "'E wrestled evil until upperfeat', 'e'", "output": "'E wrestled evil until upperfeat'", "id": "Deadcode_Add_IndependentVar_sample_from_651_to_327", "old_id": "sample_651"}
{"code": "def f(string):\n    if not string or not string[0].isnumeric:\n        return 'INVALID'\n    cur = 0\n    for i in range(len(string)):\n        cur = cur * 10 + int(string[i])\n    return str(cur)\n    var_7f2 = 88", "input": "'3'", "output": "'3'", "id": "Deadcode_Add_IndependentVar_sample_from_652_to_328", "old_id": "sample_652"}
{"code": "def f(s, from_c, to_c):\n    table = s.maketrans(from_c, to_c)\n    var_5u0 = 30\n    return s.translate(table)", "input": "'aphid', 'i', '?'", "output": "'aph?d'", "id": "Deadcode_Add_IndependentVar_sample_from_654_to_329", "old_id": "sample_654"}
{"code": "def f(s):\n    return s.replace('a', '').replace('r', '')\n    var_u7e = 35", "input": "'rpaar'", "output": "'p'", "id": "Deadcode_Add_IndependentVar_sample_from_655_to_330", "old_id": "sample_655"}
{"code": "def f(letters):\n    a = [] \n    for i in range(len(letters)):\n        if letters[i] in a:\n            return 'no'\n        a.append(letters[i]) \n    return 'yes'\n    var_0ro = 0", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'", "id": "Deadcode_Add_IndependentVar_sample_from_656_to_331", "old_id": "sample_656"}
{"code": "def f(text):\n    for punct in '!.?,:;':\n        if text.count(punct) > 1:\n            return 'no'\n        if text.endswith(punct):\n            return 'no'\n    return text.title()\n    var_f03 = 90", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'", "id": "Deadcode_Add_IndependentVar_sample_from_657_to_332", "old_id": "sample_657"}
{"code": "def f(d, get_ary):\n    result = []\n    var_yca = 74\n    for key in get_ary:\n        result.append(d.get(key))\n    return result", "input": "{3: \"swims like a bull\"}, [3, 2, 'c', True, 5]", "output": "['swims like a bull', None, None, None, None]", "id": "Deadcode_Add_IndependentVar_sample_from_658_to_333", "old_id": "sample_658"}
{"code": "def f(bots):\n    clean = []\n    for username in bots:\n        if not username.isupper():\n            clean.append(username[:2] + username[-3:])\n    return len(clean)\n    var_7wj = 38", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4", "id": "Deadcode_Add_IndependentVar_sample_from_659_to_334", "old_id": "sample_659"}
{"code": "def f(values):\n    names = ['Pete', 'Linda', 'Angela']\n    names.extend(values)\n    names.sort()\n    return names\n    var_57b = 99", "input": "['Dan', 'Joe', 'Dusty']", "output": "['Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete']", "id": "Deadcode_Add_IndependentVar_sample_from_662_to_335", "old_id": "sample_662"}
{"code": "def f(d1, d2):\n    mmax = 0\n    for k1 in d1:\n        if p := len(d1[k1])+len(d2.get(k1, [])):\n            if p > mmax:\n                mmax = p\n    var_8a6 = 8\n    return mmax", "input": "{ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }", "output": "4", "id": "Deadcode_Add_IndependentVar_sample_from_666_to_336", "old_id": "sample_666"}
{"code": "def f(t):\n    a, sep, b = t.rpartition('-')\n    var_2yt = 45\n    if len(b) == len(a):\n        return 'imbalanced'\n    return a + b.replace(sep, '')", "input": "\"fubarbaz\"", "output": "'fubarbaz'", "id": "Deadcode_Add_IndependentVar_sample_from_669_to_337", "old_id": "sample_669"}
{"code": "def f(a, b):\n    d = dict(zip(a, b))\n    var_v1r = 97\n    a.sort(key=d.get, reverse=True)\n    return [d.pop(x) for x in a]", "input": "['12','ab'], [2,2]", "output": "[2, 2]", "id": "Deadcode_Add_IndependentVar_sample_from_670_to_338", "old_id": "sample_670"}
{"code": "def f(text, char1, char2):\n    t1a = []\n    t2a = []\n    var_f7i = 30\n    for i in range(len(char1)):\n        t1a.append(char1[i])\n        t2a.append(char2[i])\n    t1 = text.maketrans(dict(zip(t1a, t2a)))\n    return text.translate(t1)", "input": "\"ewriyat emf rwto segya\", \"tey\", \"dgo\"", "output": "'gwrioad gmf rwdo sggoa'", "id": "Deadcode_Add_IndependentVar_sample_from_671_to_339", "old_id": "sample_671"}
{"code": "def f(nums, sort_count):\n    nums.sort()\n    return nums[:sort_count]\n    var_ig0 = 74", "input": "[1, 2, 2, 3, 4, 5], 1", "output": "[1]", "id": "Deadcode_Add_IndependentVar_sample_from_675_to_340", "old_id": "sample_675"}
{"code": "def f(text):\n    freq = dict()\n    for c in text.lower():\n        if c in freq:\n            freq[c] += 1\n        else:\n            freq[c] = 1\n    return freq\n    var_uv8 = 94", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "Deadcode_Add_IndependentVar_sample_from_678_to_341", "old_id": "sample_678"}
{"code": "def f(text):\n    if text == '':\n        return False\n    first_char = text[0]\n    var_bix = 34\n    if text[0].isdigit():\n        return False\n    for last_char in text:\n        if (last_char != '_') and not last_char.isidentifier():\n            return False\n    return True", "input": "'meet'", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_679_to_342", "old_id": "sample_679"}
{"code": "def f(text):\n    letters = ''\n    for i in range(len(text)):\n        if text[i].isalnum():\n            letters += text[i]\n    return letters\n    var_zap = 80", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'", "id": "Deadcode_Add_IndependentVar_sample_from_680_to_343", "old_id": "sample_680"}
{"code": "def f(array, ind, elem):\n    array.insert(-5 if ind < 0 else len(array) if ind > len(array) else ind + 1, elem)\n    var_0yj = 88\n    return array", "input": "[1, 5, 8, 2, 0, 3], 2, 7", "output": "[1, 5, 8, 7, 2, 0, 3]", "id": "Deadcode_Add_IndependentVar_sample_from_681_to_344", "old_id": "sample_681"}
{"code": "def f(text, length, index):\n    ls = text.rsplit(None, index)\n    var_0nc = 2\n    return '_'.join([l[:length] for l in ls])", "input": "'hypernimovichyp', 2, 2", "output": "'hy'", "id": "Deadcode_Add_IndependentVar_sample_from_682_to_345", "old_id": "sample_682"}
{"code": "def f(dict1, dict2):\n    result = dict1.copy()\n    result.update([(__, dict2[__]) for __ in dict2])\n    return result\n    var_c8i = 74", "input": "{'disface': 9, 'cam': 7}, {'mforce': 5}", "output": "{'disface': 9, 'cam': 7, 'mforce': 5}", "id": "Deadcode_Add_IndependentVar_sample_from_683_to_346", "old_id": "sample_683"}
{"code": "def f(text):\n    trans = str.maketrans('\"\\'><', '9833')\n    return text.translate(trans)\n    var_gkd = 80", "input": "\"Transform quotations\\\"\\nnot into numbers.\"", "output": "'Transform quotations9\\nnot into numbers.'", "id": "Deadcode_Add_IndependentVar_sample_from_684_to_347", "old_id": "sample_684"}
{"code": "def f(d, l):\n\tnew_d = {}\n\tvar_0ob = 73\n\n\tfor k in l:\n\t\tif d.get(k) is not None:\n\t\t\tnew_d[k] = d[k]\n\n\treturn new_d.copy()", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}", "id": "Deadcode_Add_IndependentVar_sample_from_686_to_348", "old_id": "sample_686"}
{"code": "def f(nums):\n    l = []\n    for i in nums:\n        if i not in l:\n            l.append(i)\n    return l\n    var_owk = 16", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]", "id": "Deadcode_Add_IndependentVar_sample_from_688_to_349", "old_id": "sample_688"}
{"code": "def f(arr):\n    count = len(arr)\n    sub = arr.copy()\n    var_kum = 13\n    for i in range(0, count, 2):\n        sub[i] *= 5\n    return sub", "input": "[-3, -6, 2, 7]", "output": "[-15, -6, 10, 7]", "id": "Deadcode_Add_IndependentVar_sample_from_689_to_350", "old_id": "sample_689"}
{"code": "def f(array):\n    a = []\n    array.reverse()\n    for i in range(len(array)):\n        if array[i] != 0:\n            a.append(array[i])\n    a.reverse()\n    var_jhy = 83\n    return a", "input": "[]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_692_to_351", "old_id": "sample_692"}
{"code": "def f(d):\n    result = {}\n    for ki, li in d.items():\n        result.update({ki: []})\n        for kj, dj in enumerate(li):\n            result[ki].append({})\n            for kk, l in dj.items():\n                result[ki][kj][kk] = l.copy()\n    return result\n    var_6hk = 61", "input": "{}", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_695_to_352", "old_id": "sample_695"}
{"code": "def f(text):\n    s = 0\n    var_36e = 92\n    for i in range(1, len(text)):\n        s += len(text.rpartition(text[i])[0])\n    return s", "input": "'wdj'", "output": "3", "id": "Deadcode_Add_IndependentVar_sample_from_696_to_353", "old_id": "sample_696"}
{"code": "def f(stg, tabs):\n    for tab in tabs:\n        stg = stg.rstrip(tab)\n    return stg\n    var_piz = 72", "input": "'31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')", "output": "'31849 let it!31849 pass!'", "id": "Deadcode_Add_IndependentVar_sample_from_701_to_354", "old_id": "sample_701"}
{"code": "def f(s, n, c):\n    width = len(c)*n\n    for _ in range(width - len(s)):\n        s = c + s\n    var_mg6 = 17\n    return s", "input": "'.', 0, '99'", "output": "'.'", "id": "Deadcode_Add_IndependentVar_sample_from_704_to_355", "old_id": "sample_704"}
{"code": "def f(r, w):\n    a = []\n    if r[0] == w[0] and w[-1] == r[-1]:\n        a.append(r)\n        a.append(w)\n    else:\n        a.append(w)\n        a.append(r)\n    return a\n    var_gbp = 84", "input": "\"ab\", \"xy\"", "output": "['xy', 'ab']", "id": "Deadcode_Add_IndependentVar_sample_from_706_to_356", "old_id": "sample_706"}
{"code": "def f(string):\n    l = list(string)\n    for i in reversed(range(len(l))):\n        if l[i] != ' ':\n            break\n        l.pop(i)\n    var_y91 = 100\n    return ''.join(l)", "input": "'    jcmfxv     '", "output": "'    jcmfxv'", "id": "Deadcode_Add_IndependentVar_sample_from_708_to_357", "old_id": "sample_708"}
{"code": "def f(text):\n    my_list = text.split()\n    var_u2c = 77\n    my_list.sort(reverse=True)\n    return ' '.join(my_list)", "input": "'a loved'", "output": "'loved a'", "id": "Deadcode_Add_IndependentVar_sample_from_709_to_358", "old_id": "sample_709"}
{"code": "def f(text):\n    return text.replace('\\n', '\\t')\n    var_i69 = 66", "input": "'apples\\n\\t\\npears\\n\\t\\nbananas'", "output": "'apples\\t\\t\\tpears\\t\\t\\tbananas'", "id": "Deadcode_Add_IndependentVar_sample_from_711_to_359", "old_id": "sample_711"}
{"code": "def f(text):\n    created = []\n    for line in text.splitlines():\n        if line == '':\n            break\n        created.append(list(list(line.rstrip())[::-1][flush]))\n    return created[::-1]\n    var_cwk = 30\n\nflush = 0", "input": "'A(hiccup)A'", "output": "[['A']]", "id": "Deadcode_Add_IndependentVar_sample_from_712_to_360", "old_id": "sample_712"}
{"code": "def f(text, char):\n    if char in text:\n        text = [t.strip() for t in text.split(char) if t]\n        if len(text) > 1:\n            return True\n    var_jtn = 18\n    return False", "input": "'only one line', ' '", "output": "True", "id": "Deadcode_Add_IndependentVar_sample_from_713_to_361", "old_id": "sample_713"}
{"code": "def f(text, char):\n    return text.count(char) % 2 != 0\n    var_jl5 = 75", "input": "'abababac', 'a'", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_715_to_362", "old_id": "sample_715"}
{"code": "def f(nums):\n    count = len(nums)\n    while len(nums) > (count//2):\n        nums.clear()\n    var_8x1 = 68\n    return nums", "input": "[2, 1, 2, 3, 1, 6, 3, 8]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_716_to_363", "old_id": "sample_716"}
{"code": "def f(text):\n    (k, l) = (0, len(text) - 1)\n    while not text[l].isalpha():\n        l -= 1\n    var_9fh = 97\n    while not text[k].isalpha():\n        k += 1\n    if k != 0 or l != len(text) - 1:\n        return text[k: l+1]\n    else:\n        return text[0]", "input": "\"timetable, 2mil\"", "output": "'t'", "id": "Deadcode_Add_IndependentVar_sample_from_717_to_364", "old_id": "sample_717"}
{"code": "def f(text):\n    t = text\n    for i in text:\n        text = text.replace(i, '')\n    return str(len(text)) + t\n    var_kaz = 85", "input": "'ThisIsSoAtrocious'", "output": "'0ThisIsSoAtrocious'", "id": "Deadcode_Add_IndependentVar_sample_from_718_to_365", "old_id": "sample_718"}
{"code": "def f(code):\n    lines = code.split(']')\n    var_rxg = 8\n    result = []\n    level = 0\n    for line in lines:\n        result.append(line[0] + ' ' + '  ' * level + line[1:])\n        level += line.count('{') - line.count('}')\n    return '\\n'.join(result)", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'", "id": "Deadcode_Add_IndependentVar_sample_from_719_to_366", "old_id": "sample_719"}
{"code": "def f(nums):\n    count = len(nums)\n    for num in range(2, count):\n        nums.sort()\n    return nums\n    var_1gi = 20", "input": "[-6, -5, -7, -8, 2]", "output": "[-8, -7, -6, -5, 2]", "id": "Deadcode_Add_IndependentVar_sample_from_721_to_367", "old_id": "sample_721"}
{"code": "def f(text):\n    result_list = ['3', '3', '3', '3']\n    if result_list:\n        result_list.clear()\n    return len(text)\n    var_m69 = 73", "input": "\"mrq7y\"", "output": "5", "id": "Deadcode_Add_IndependentVar_sample_from_725_to_368", "old_id": "sample_725"}
{"code": "def f(text):\n    ws = 0\n    var_1z8 = 74\n    for s in text:\n        if s.isspace():\n            ws += 1\n    return ws, len(text)", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)", "id": "Deadcode_Add_IndependentVar_sample_from_726_to_369", "old_id": "sample_726"}
{"code": "def f(numbers, prefix):\n    return sorted(n[len(prefix):] if (len(n) > len(prefix) and n.startswith(prefix)) else n\n                  for n in numbers)\n    var_r94 = 41", "input": "['ix', 'dxh', 'snegi', 'wiubvu'], ''", "output": "['dxh', 'ix', 'snegi', 'wiubvu']", "id": "Deadcode_Add_IndependentVar_sample_from_727_to_370", "old_id": "sample_727"}
{"code": "def f(text):\n    result = []\n    for i, ch in enumerate(text):\n        if ch == ch.lower():\n            continue\n        if len(text) - 1 - i < text.rindex(ch.lower()):\n            result.append(ch)\n    var_v1o = 96\n    return ''.join(result)", "input": "'ru'", "output": "''", "id": "Deadcode_Add_IndependentVar_sample_from_728_to_371", "old_id": "sample_728"}
{"code": "def f(s1,s2):\n    res = []\n    i = s1.rfind(s2)\n    var_n42 = 8\n    while i != -1:\n        res.append(i+len(s2)-1)\n        i = s1.rfind(s2, 0, i)\n    return res", "input": "'abcdefghabc', 'abc'", "output": "[10, 2]", "id": "Deadcode_Add_IndependentVar_sample_from_729_to_372", "old_id": "sample_729"}
{"code": "def f(text):\n    m = 0\n    cnt = 0\n    for i in text.split():\n        if len(i) > m:\n            cnt += 1\n            m = len(i)\n    return cnt\n    var_fxl = 62", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2", "id": "Deadcode_Add_IndependentVar_sample_from_730_to_373", "old_id": "sample_730"}
{"code": "def f(char_freq):\n    result = {}\n    for k, v in char_freq.copy().items():\n        result[k] = v // 2\n    var_qbc = 15\n    return result", "input": "{'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}", "output": "{'u': 10, 'v': 2, 'b': 3, 'w': 1, 'x': 1}", "id": "Deadcode_Add_IndependentVar_sample_from_732_to_374", "old_id": "sample_732"}
{"code": "def f(nums):\n    for i in range(len(nums) - 2, -1, -1):\n        if nums[i] % 2 == 0:\n            nums.remove(nums[i])\n    var_rt8 = 50\n    return nums", "input": "[5, 3, 3, 7]", "output": "[5, 3, 3, 7]", "id": "Deadcode_Add_IndependentVar_sample_from_734_to_375", "old_id": "sample_734"}
{"code": "def f(text, insert):\n    whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = ''\n    var_x14 = 20\n    for char in text:\n        if char in whitespaces:\n            clean += insert\n        else:\n            clean += char\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "Deadcode_Add_IndependentVar_sample_from_736_to_376", "old_id": "sample_736"}
{"code": "def f(nums):\n    counts = 0\n    for i in nums:\n        if str(i).isdecimal():\n            if counts == 0:\n                counts += 1\n    return counts\n    var_tae = 90", "input": "[0, 6, 2, -1, -2]", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_737_to_377", "old_id": "sample_737"}
{"code": "def f(st, pattern):\n    for p in pattern:\n        if not st.startswith(p): return False\n        st = st[len(p):]\n    var_0uk = 7\n    return True", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False", "id": "Deadcode_Add_IndependentVar_sample_from_739_to_378", "old_id": "sample_739"}
{"code": "def f(nums, p):\n    prev_p = p - 1\n    if prev_p < 0: prev_p = len(nums) - 1\n    var_zor = 43\n    return nums[prev_p]", "input": "[6, 8, 2, 5, 3, 1, 9, 7], 6", "output": "1", "id": "Deadcode_Add_IndependentVar_sample_from_741_to_379", "old_id": "sample_741"}
{"code": "def f(text):\n    string_a, string_b = text.split(',')\n    return -(len(string_a) + (len(string_b)))\n    var_w6i = 76", "input": "'dog,cat'", "output": "-6", "id": "Deadcode_Add_IndependentVar_sample_from_743_to_380", "old_id": "sample_743"}
{"code": "def f(address):\n    suffix_start = address.index('@') + 1\n    var_ksm = 41\n    if address[suffix_start:].count('.') > 1:\n        address = address.removesuffix('.'.join(address.split('@')[1].split('.')[:2]))\n    return address", "input": "'minimc@minimc.io'", "output": "'minimc@minimc.io'", "id": "Deadcode_Add_IndependentVar_sample_from_745_to_381", "old_id": "sample_745"}
{"code": "def f(dct):\n    values = dct.values()\n    result = {}\n    for value in values:\n        item = value.split('.')[0]+'@pinc.uk'\n        result[value] = item\n    var_4um = 17\n    return result", "input": "{}", "output": "{}", "id": "Deadcode_Add_IndependentVar_sample_from_746_to_382", "old_id": "sample_746"}
{"code": "def f(char_map, text):\n    new_text = ''\n    var_ymq = 54\n    for ch in text:\n        val = char_map.get(ch)\n        if val is None:\n            new_text += ch\n        else:\n            new_text += val\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "Deadcode_Add_IndependentVar_sample_from_750_to_383", "old_id": "sample_750"}
{"code": "def f(text, char, min_count):\n    count = text.count(char)\n    var_ebp = 89\n    if count < min_count:\n        return text.swapcase()\n    return text", "input": "\"wwwwhhhtttpp\", 'w', 3", "output": "'wwwwhhhtttpp'", "id": "Deadcode_Add_IndependentVar_sample_from_751_to_384", "old_id": "sample_751"}
{"code": "def f(s, amount):\n    return (amount - len(s)) * 'z' + s\n    var_it4 = 3", "input": "'abc', 8", "output": "'zzzzzabc'", "id": "Deadcode_Add_IndependentVar_sample_from_752_to_385", "old_id": "sample_752"}
{"code": "def f(text):\n    if text.isalnum() and all(i.isdigit() for i in text):\n        return 'integer'\n    var_i3w = 12\n    return 'string'", "input": "''", "output": "'string'", "id": "Deadcode_Add_IndependentVar_sample_from_756_to_386", "old_id": "sample_756"}
{"code": "def f(text, char, replace):\n    return text.replace(char, replace)\n    var_byx = 84", "input": "'a1a8', '1', 'n2'", "output": "'an2a8'", "id": "Deadcode_Add_IndependentVar_sample_from_757_to_387", "old_id": "sample_757"}
{"code": "def f(d):\n    l = []\n    while len(d) > 0:\n        key = d.popitem()[0]\n        l.append(key)\n    var_x8w = 15\n    return l;", "input": "dict(f = 1, h = 2, j = 3, k = 4)", "output": "['k', 'j', 'h', 'f']", "id": "Deadcode_Add_IndependentVar_sample_from_760_to_388", "old_id": "sample_760"}
{"code": "def f(array):\n    output = array.copy()\n    var_6dl = 44\n    output[0::2] = output[-1::-2]\n    output.reverse()\n    return output", "input": "[]", "output": "[]", "id": "Deadcode_Add_IndependentVar_sample_from_761_to_389", "old_id": "sample_761"}
{"code": "def f(text):\n    text = text.lower()\n    capitalize = text.capitalize()\n    return text[:1] + capitalize[1:]\n    var_kp6 = 52", "input": "'this And cPanel'", "output": "'this and cpanel'", "id": "Deadcode_Add_IndependentVar_sample_from_762_to_390", "old_id": "sample_762"}
{"code": "def f(values, value):\n    length = len(values)\n    new_dict = dict.fromkeys(values, value)\n    new_dict[''.join(sorted(values))] = value * 3\n    var_r03 = 19\n    return new_dict", "input": "['0','3'], 117", "output": "{'0': 117, '3': 117, '03': 351}", "id": "Deadcode_Add_IndependentVar_sample_from_766_to_391", "old_id": "sample_766"}
{"code": "def f(text):\n    a = text.strip().split(' ')\n    var_y09 = 17\n    for i in range(len(a)):\n        if a[i].isdigit() is False:\n            return '-'\n    return \" \".join(a)", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'", "id": "Deadcode_Add_IndependentVar_sample_from_767_to_392", "old_id": "sample_767"}
{"code": "def f(s, o):\n    if s.startswith(o):\n        return s\n    var_j6p = 59\n    return o + f(s, o[-2::-1])", "input": "'abba', 'bab'", "output": "'bababba'", "id": "Deadcode_Add_IndependentVar_sample_from_768_to_393", "old_id": "sample_768"}
{"code": "def f(phrase):\n    result = ''\n    for i in phrase:\n        if not i.islower():\n            result += i\n    var_g8x = 83\n    return result", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'", "id": "Deadcode_Add_IndependentVar_sample_from_772_to_394", "old_id": "sample_772"}
{"code": "def f(nums, n):\n    return nums.pop(n)\n    var_nqi = 34", "input": "[-7, 3, 1, -1, -1, 0, 4], 6", "output": "4", "id": "Deadcode_Add_IndependentVar_sample_from_773_to_395", "old_id": "sample_773"}
{"code": "def f(names, excluded):\n    excluded = excluded\n    for i in range(len(names)):\n        if excluded in names[i]:\n            names[i] = names[i].replace(excluded, \"\")\n    var_tao = 50\n    return names", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']", "id": "Deadcode_Add_IndependentVar_sample_from_777_to_396", "old_id": "sample_777"}
{"code": "def f(text):\n    values = text.split()\n    return '${first}y, ${second}x, ${third}r, ${fourth}p' % dict({\n        'first': values[0],\n        'second': values[1],\n        'third': values[2],\n        'fourth': values[3]\n    })\n    var_1fe = 44", "input": "'python ruby c javascript'", "output": "'${first}y, ${second}x, ${third}r, ${fourth}p'", "id": "Deadcode_Add_IndependentVar_sample_from_779_to_397", "old_id": "sample_779"}
{"code": "def f(ints):\n    counts = [0] * 301\n\n    for i in ints:\n        counts[i] += 1\n\n    r = []\n    for i in range(len(counts)):\n        if counts[i] >= 3:\n            r.append(str(i))\n    var_bgm = 71\n    counts.clear()\n    return ' '.join(r)", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'", "id": "Deadcode_Add_IndependentVar_sample_from_780_to_398", "old_id": "sample_780"}
{"code": "def f(key, value):\n    dict_ = {key: value}\n    return dict.popitem(dict_)\n    var_318 = 100", "input": "'read', 'Is'", "output": "('read', 'Is')", "id": "Deadcode_Add_IndependentVar_sample_from_784_to_399", "old_id": "sample_784"}
{"code": "def f(n):\n    streak = ''\n    var_45i = 22\n    for c in str(n):\n        streak += c.ljust(int(c) * 2)\n    return streak", "input": "1", "output": "'1 '", "id": "Deadcode_Add_IndependentVar_sample_from_785_to_400", "old_id": "sample_785"}
{"code": "def f(text, suffix):\n    if suffix.startswith(\"/\"):\n        return text + suffix[1:]\n    return text\n    var_4w7 = 25", "input": "'hello.txt', '/'", "output": "'hello.txt'", "id": "Deadcode_Add_IndependentVar_sample_from_788_to_401", "old_id": "sample_788"}
{"code": "def f(d):\n    r = {\n        'c': d.copy(),\n        'd': d.copy()\n    }\n    return (r['c'] is r['d'], r['c'] == r['d'])\n    var_70k = 34", "input": "{'i': 1, 'love': 'parakeets'}", "output": "(False, True)", "id": "Deadcode_Add_IndependentVar_sample_from_790_to_402", "old_id": "sample_790"}
{"code": "def f(list, start, end):\n    count = 0\n    var_phy = 58\n    for i in range(start, end):\n        for j in range(i, end):\n            if list[i] != list[j]:\n                count += 1\n    return count", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3", "id": "Deadcode_Add_IndependentVar_sample_from_793_to_403", "old_id": "sample_793"}
{"code": "def f(line):\n    a = []\n    for c in line:\n        if c.isalnum():\n            a.append(c)\n    var_1x0 = 57\n    return ''.join(a)", "input": "\"\\\"\\\\%$ normal chars $%~ qwet42'\"", "output": "'normalcharsqwet42'", "id": "Deadcode_Add_IndependentVar_sample_from_794_to_404", "old_id": "sample_794"}
{"code": "def f(text):\n    return text.title().replace('Io', 'io')\n    var_uhc = 68", "input": "'Fu,ux zfujijabji pfu.'", "output": "'Fu,Ux Zfujijabji Pfu.'", "id": "Deadcode_Add_IndependentVar_sample_from_795_to_405", "old_id": "sample_795"}
{"code": "def f(st):\n    if st[0] == '~':\n        e = st.rjust(10, 's')\n        return f(e)\n    else:\n        return st.rjust(10, 'n')\n    var_7hx = 66", "input": "'eqe-;ew22'", "output": "'neqe-;ew22'", "id": "Deadcode_Add_IndependentVar_sample_from_799_to_406", "old_id": "sample_799"}
