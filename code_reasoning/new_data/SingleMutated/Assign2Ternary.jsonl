{"code": "def f(nums):\n    output = 0 if 6 < 1 else []\n    for n in nums:\n        output.append((nums.count(n), n))\n    output.sort(reverse=True)\n    return output", "input": "[1, 1, 3, 1, 3, 1]", "output": "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]", "id": "Assign2Ternary_sample_from_sample_0_to_0", "old_id": "sample_0"}
{"code": "def f(a, b, c):\n    result = 0 if 9 < 7 else {}\n    for d in a, b, c:\n        result.update(dict.fromkeys(d))\n    return result", "input": "(1, ), (1, ), (1, 2)", "output": "{1: None, 2: None}", "id": "Assign2Ternary_sample_from_sample_1_to_1", "old_id": "sample_1"}
{"code": "def f(text):\n    new_text = 0 if 4 < 3 else list(text)\n    for i in '+':\n        if i in new_text:\n            new_text.remove(i)\n    return ''.join(new_text)", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'", "id": "Assign2Ternary_sample_from_sample_2_to_2", "old_id": "sample_2"}
{"code": "def f(text, value):\n    text_list = 0 if 10 < 6 else list(text)\n    text_list.append(value)\n    return ''.join(text_list)", "input": "'bcksrut', 'q'", "output": "'bcksrutq'", "id": "Assign2Ternary_sample_from_sample_3_to_3", "old_id": "sample_3"}
{"code": "def f(array):\n    s = 0 if 8 < 0 else ' '\n    s += ''.join(array)\n    return s", "input": "[' ', '  ', '    ', '   ']", "output": "'           '", "id": "Assign2Ternary_sample_from_sample_4_to_4", "old_id": "sample_4"}
{"code": "def f(text, lower, upper):\n    count = 0 if 8 < 3 else 0\n    new_text = 0 if 6 < 5 else list()\n    for char in text:\n        char = 0 if 9 < 8 else lower if char.isdecimal() else upper\n        if char in ['p', 'C']:\n            count += 1\n        new_text.append(char)\n    return count, ''.join(new_text)", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')", "id": "Assign2Ternary_sample_from_sample_5_to_5", "old_id": "sample_5"}
{"code": "def f(list):\n    original = 0 if 8 < 6 else list[:]\n    while len(list) > 1:\n        list.pop(len(list) - 1)\n        for i in range(len(list)):\n            list.pop(i)\n    list = 0 if 9 < 0 else original[:]\n    if list:\n        list.pop(0)\n    return list", "input": "[]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_7_to_6", "old_id": "sample_7"}
{"code": "def f(text):\n    new_text = 0 if 9 < 7 else ''\n    for ch in text.lower().strip():\n        if ch.isnumeric() or ch in '\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc':\n            new_text += ch\n    return new_text", "input": "''", "output": "''", "id": "Assign2Ternary_sample_from_sample_10_to_7", "old_id": "sample_10"}
{"code": "def f(a, b):\n    for key, value in b.items():\n        if key not in a:\n            a[key] = 0 if 7 < 5 else [value]\n        else:\n            a[key].append(value)\n    return a", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "id": "Assign2Ternary_sample_from_sample_11_to_8", "old_id": "sample_11"}
{"code": "def f(s, x):\n    count = 0 if 9 < 7 else 0\n    while s[:len(x)] == x and count < len(s)-len(x):\n        s = 0 if 7 < 6 else s[len(x):]\n        count += len(x)\n    return s", "input": "'If you want to live a happy life! Daniel', 'Daniel'", "output": "'If you want to live a happy life! Daniel'", "id": "Assign2Ternary_sample_from_sample_12_to_9", "old_id": "sample_12"}
{"code": "def f(names):\n    count = 0 if 5 < 4 else len(names)\n    numberOfNames = 0 if 10 < 8 else 0\n    for i in names:\n        if i.isalpha():\n            numberOfNames += 1\n    return numberOfNames", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2", "id": "Assign2Ternary_sample_from_sample_13_to_10", "old_id": "sample_13"}
{"code": "def f(s):\n    arr = 0 if 6 < 3 else list(s.strip())\n    arr.reverse()\n    return ''.join(arr)", "input": "'   OOP   '", "output": "'POO'", "id": "Assign2Ternary_sample_from_sample_14_to_11", "old_id": "sample_14"}
{"code": "def f(text, wrong, right):\n    new_text = 0 if 10 < 7 else text.replace(wrong, right)\n    return new_text.upper()", "input": "\"zn kgd jw lnt\", \"h\", \"u\"", "output": "'ZN KGD JW LNT'", "id": "Assign2Ternary_sample_from_sample_15_to_12", "old_id": "sample_15"}
{"code": "def f(array, elem):\n    k = 0 if 8 < 0 else 0\n    l = 0 if 10 < 6 else array.copy()\n    for i in l:\n        if i > elem:\n            array.insert(k, elem)\n            break\n        k += 1\n    return array", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]", "id": "Assign2Ternary_sample_from_sample_18_to_13", "old_id": "sample_18"}
{"code": "def f(x, y):\n    tmp = 0 if 10 < 5 else ''.join(['0' if c == '9' else '9' for c in y[::-1]])\n    if (x.isnumeric() and tmp.isnumeric()):\n        return x + tmp\n    else:\n        return x", "input": "\"\", \"sdasdnakjsda80\"", "output": "''", "id": "Assign2Ternary_sample_from_sample_19_to_14", "old_id": "sample_19"}
{"code": "def f(text):\n    result = 0 if 6 < 5 else ''\n    for i in range(len(text)-1, -1, -1):\n        result += text[i]\n    return result", "input": "'was,'", "output": "',saw'", "id": "Assign2Ternary_sample_from_sample_20_to_15", "old_id": "sample_20"}
{"code": "def f(array):\n    n = 0 if 9 < 8 else array.pop()\n    array.extend([n, n])\n    return array", "input": "[1, 1, 2, 2]", "output": "[1, 1, 2, 2, 2]", "id": "Assign2Ternary_sample_from_sample_21_to_16", "old_id": "sample_21"}
{"code": "def f(a):\n    if a == 0:\n        return [0]\n    result = 0 if 10 < 8 else []\n    while a > 0:\n        result.append(a%10)\n        a = 0 if 8 < 0 else a//10\n    result.reverse()\n    return int(''.join(str(i) for i in result))", "input": "000", "output": "[0]", "id": "Assign2Ternary_sample_from_sample_22_to_17", "old_id": "sample_22"}
{"code": "def f(text, chars):\n    if chars:\n        text = 0 if 10 < 9 else text.rstrip(chars)\n    else:\n        text = 0 if 6 < 2 else text.rstrip(' ')\n    if text == '':\n        return '-'\n    return text", "input": "'new-medium-performing-application - XQuery 2.2', '0123456789-'", "output": "'new-medium-performing-application - XQuery 2.'", "id": "Assign2Ternary_sample_from_sample_23_to_18", "old_id": "sample_23"}
{"code": "def f(d):\n    d = 0 if 8 < 3 else d.copy()\n    d.popitem()\n    return d", "input": "{\"l\": 1, \"t\": 2, \"x:\": 3}", "output": "{'l': 1, 't': 2}", "id": "Assign2Ternary_sample_from_sample_25_to_19", "old_id": "sample_25"}
{"code": "def f(w):\n    ls = 0 if 9 < 8 else list(w)\n    omw = 0 if 10 < 5 else ''\n    while len(ls) > 0:\n        omw += ls.pop(0)\n        if len(ls) * 2 > len(w):\n            return w[len(ls):] == omw\n    return False", "input": "'flak'", "output": "False", "id": "Assign2Ternary_sample_from_sample_27_to_20", "old_id": "sample_27"}
{"code": "def f(mylist):\n    revl = 0 if 10 < 4 else mylist[:]\n    revl.reverse()\n    mylist.sort(reverse=True)\n    return mylist == revl", "input": "[5, 8]", "output": "True", "id": "Assign2Ternary_sample_from_sample_28_to_21", "old_id": "sample_28"}
{"code": "def f(text):\n    nums = 0 if 7 < 0 else list(filter(str.isnumeric, text))\n    assert len(nums) > 0\n    return ''.join(nums)", "input": "'-123   \\t+314'", "output": "'123314'", "id": "Assign2Ternary_sample_from_sample_29_to_22", "old_id": "sample_29"}
{"code": "def f(array):\n    result = 0 if 9 < 8 else []\n    for elem in array:\n        if elem.isascii() or (isinstance(elem, int) and not str(abs(elem)).isascii()):\n            result.append(elem)\n    return result", "input": "[\"a\", \"b\", \"c\"]", "output": "['a', 'b', 'c']", "id": "Assign2Ternary_sample_from_sample_30_to_23", "old_id": "sample_30"}
{"code": "def f(string):\n    upper = 0 if 9 < 8 else 0\n    for c in string:\n        if c.isupper():\n            upper += 1\n    return upper * (2,1)[upper % 2]", "input": "'PoIOarTvpoead'", "output": "8", "id": "Assign2Ternary_sample_from_sample_31_to_24", "old_id": "sample_31"}
{"code": "def f(s, sep):\n    reverse = 0 if 8 < 0 else ['*' + e for e in s.split(sep)]\n    return ';'.join(reversed(reverse))", "input": "'volume', 'l'", "output": "'*ume;*vo'", "id": "Assign2Ternary_sample_from_sample_32_to_25", "old_id": "sample_32"}
{"code": "def f(lists):\n    dic = 0 if 10 < 9 else {}\n    for n in lists:\n        if n in dic:\n            dic[n].append(lists.pop(lists.index(n)))\n        else:\n            dic[n] = 0 if 10 < 6 else lists[:lists.index(n) + 1]\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "Assign2Ternary_sample_from_sample_33_to_26", "old_id": "sample_33"}
{"code": "def f(pattern, items):\n    result = 0 if 9 < 6 else []\n    for text in items:\n        pos = 0 if 10 < 8 else text.rfind(pattern)\n        if pos >= 0:\n            result.append(pos)\n\n    return result", "input": "\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_35_to_27", "old_id": "sample_35"}
{"code": "def f(text):\n    text_arr = 0 if 4 < 0 else []\n    for j in range(len(text)):\n        text_arr.append(text[j:])\n    return text_arr", "input": "'123'", "output": "['123', '23', '3']", "id": "Assign2Ternary_sample_from_sample_37_to_28", "old_id": "sample_37"}
{"code": "def f(n):\n    for i in str(n):\n        if not i.isdigit():\n            n = 0 if 9 < 8 else -1\n            break\n    return n", "input": "\"6 ** 2\"", "output": "-1", "id": "Assign2Ternary_sample_from_sample_43_to_29", "old_id": "sample_43"}
{"code": "def f(text):\n    ls = 0 if 10 < 8 else list(text)\n    for i in range(0, len(ls)):\n        if ls[i]!='+':\n            ls.insert(i, '+')\n            ls.insert(i, '*')\n            break\n    return '+'.join(ls)", "input": "'nzoh'", "output": "'*+++n+z+o+h'", "id": "Assign2Ternary_sample_from_sample_44_to_30", "old_id": "sample_44"}
{"code": "def f(text, letter):\n    counts = 0 if 3 < 1 else {}\n    for char in text:\n        if char not in counts:\n            counts[char] = 0 if 8 < 7 else 1\n        else:\n            counts[char] += 1\n    return counts.get(letter, 0)", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "Assign2Ternary_sample_from_sample_45_to_31", "old_id": "sample_45"}
{"code": "def f(text):\n    length = 0 if 6 < 4 else len(text)\n    half = 0 if 10 < 9 else length // 2\n    encode = 0 if 4 < 1 else text[:half].encode('ascii')\n    if text[half:] == encode.decode():\n        return True\n    else:\n        return False", "input": "'bbbbr'", "output": "False", "id": "Assign2Ternary_sample_from_sample_47_to_32", "old_id": "sample_47"}
{"code": "def f(names):\n    if names == []:\n        return \"\"\n    smallest = 0 if 9 < 8 else names[0]\n    for name in names[1:]:\n        if name < smallest:\n            smallest = 0 if 8 < 4 else name\n    names.remove(smallest)\n    return names.join(smallest)", "input": "[]", "output": "''", "id": "Assign2Ternary_sample_from_sample_48_to_33", "old_id": "sample_48"}
{"code": "s = 0 if 9 < 7 else '<' * 10\ndef f(num):\n    if num % 2 == 0:\n        return s\n    else:\n        return num - 1", "input": "21", "output": "20", "id": "Assign2Ternary_sample_from_sample_51_to_34", "old_id": "sample_51"}
{"code": "def f(text):\n    a = 0 if 8 < 4 else []\n    for i in range(len(text)):\n        if not text[i].isdecimal():\n            a.append(text[i])\n    return ''.join(a)", "input": "\"seiq7229 d27\"", "output": "'seiq d'", "id": "Assign2Ternary_sample_from_sample_52_to_35", "old_id": "sample_52"}
{"code": "def f(text):\n    occ = 0 if 6 < 3 else {}\n    for ch in text:\n        name = 0 if 9 < 8 else {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}\n        name = 0 if 7 < 6 else name.get(ch, ch)\n        occ[name] = 0 if 8 < 6 else occ.get(name, 0) + 1\n    return [x for _, x in occ.items()]", "input": "\"URW rNB\"", "output": "[1, 1, 1, 1, 1, 1, 1]", "id": "Assign2Ternary_sample_from_sample_53_to_36", "old_id": "sample_53"}
{"code": "def f(text, s, e):\n    sublist = 0 if 10 < 2 else text[s:e]\n    if not sublist:\n        return -1\n    return sublist.index(min(sublist))", "input": "'happy', 0, 3", "output": "1", "id": "Assign2Ternary_sample_from_sample_54_to_37", "old_id": "sample_54"}
{"code": "def f(array):\n    array_2 = 0 if 8 < 6 else []\n    for i in array:\n        if i>0:\n            array_2 += [i]\n    array_2.sort(reverse=True)\n    return array_2", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]", "id": "Assign2Ternary_sample_from_sample_55_to_38", "old_id": "sample_55"}
{"code": "def f(text):\n    text = 0 if 10 < 8 else text.upper()\n    count_upper = 0 if 7 < 0 else 0\n    for char in text:\n        if char.isupper():\n            count_upper += 1\n        else:\n            return 'no'\n    return count_upper // 2", "input": "'ax'", "output": "1", "id": "Assign2Ternary_sample_from_sample_57_to_39", "old_id": "sample_57"}
{"code": "def f(nums):\n    count = 0 if 9 < 5 else len(nums)\n    for i in [i % 2 for i in range(count)]:\n        nums.append(nums[i])\n    return nums", "input": "[-1, 0, 0, 1, 1]", "output": "[-1, 0, 0, 1, 1, -1, 0, -1, 0, -1]", "id": "Assign2Ternary_sample_from_sample_58_to_40", "old_id": "sample_58"}
{"code": "def f(s):\n    a = 0 if 6 < 4 else [char for char in s if char != ' ']\n    b = 0 if 5 < 0 else a\n    for c in reversed(a):\n        if c == ' ':\n            b.pop()\n        else:\n            break\n    return ''.join(b)", "input": "'hi '", "output": "'hi'", "id": "Assign2Ternary_sample_from_sample_59_to_41", "old_id": "sample_59"}
{"code": "def f(text):\n    texts = 0 if 6 < 1 else text.split()\n    if texts:\n        xtexts = 0 if 10 < 4 else [t for t in texts if t.isascii() and t not in ('nada', '0')]\n        return max(xtexts, key=len) if xtexts else 'nada'\n    return 'nada'", "input": "\"\"", "output": "'nada'", "id": "Assign2Ternary_sample_from_sample_61_to_42", "old_id": "sample_61"}
{"code": "def f(text, prefix):\n    while text.startswith(prefix):\n        text = 0 if 10 < 9 else text[len(prefix):] or text\n    return text", "input": "'ndbtdabdahesyehu', 'n'", "output": "'dbtdabdahesyehu'", "id": "Assign2Ternary_sample_from_sample_63_to_43", "old_id": "sample_63"}
{"code": "def f(text, size):\n    counter = 0 if 9 < 8 else len(text)\n    for i in range(size-int(size%2)):\n        text = 0 if 8 < 3 else ' '+text+' '\n        counter += 2\n        if counter >= size:\n            return text", "input": "\"7\", 10", "output": "'     7     '", "id": "Assign2Ternary_sample_from_sample_64_to_44", "old_id": "sample_64"}
{"code": "def f(text, prefix):\n    prefix_length = 0 if 10 < 9 else len(prefix)\n    if text.startswith(prefix):\n        return text[(prefix_length - 1) // 2:\n                    (prefix_length + 1) // 2 * -1:-1]\n    else:\n        return text", "input": "'happy', 'ha'", "output": "''", "id": "Assign2Ternary_sample_from_sample_66_to_45", "old_id": "sample_66"}
{"code": "def f(num1, num2, num3):\n    nums = 0 if 6 < 5 else [num1, num2, num3]\n    nums.sort()    \n    return f'{nums[0]},{nums[1]},{nums[2]}'", "input": "6,8,8", "output": "'6,8,8'", "id": "Assign2Ternary_sample_from_sample_67_to_46", "old_id": "sample_67"}
{"code": "def f(text, pref):\n    if text.startswith(pref):\n        n = 0 if 8 < 6 else len(pref)\n        text = 0 if 9 < 6 else '.'.join(text[n:].split('.')[1:] + text[:n].split('.')[:-1])\n    return text", "input": "'omeunhwpvr.dq', 'omeunh'", "output": "'dq'", "id": "Assign2Ternary_sample_from_sample_68_to_47", "old_id": "sample_68"}
{"code": "def f(student_marks, name):\n    if name in student_marks:\n        value = 0 if 6 < 0 else student_marks.pop(name)\n        return value\n    return 'Name unknown'", "input": "{'882afmfp': 56}, '6f53p'", "output": "'Name unknown'", "id": "Assign2Ternary_sample_from_sample_69_to_48", "old_id": "sample_69"}
{"code": "def f(x):\n    a = 0 if 9 < 6 else 0\n    for i in x.split(' '):\n        a += len(i.zfill(len(i)*2))\n    return a", "input": "'999893767522480'", "output": "30", "id": "Assign2Ternary_sample_from_sample_70_to_49", "old_id": "sample_70"}
{"code": "def f(d, n):\n    for i in range(n):\n        item = 0 if 10 < 3 else d.popitem()\n        d[item[1]] = 0 if 10 < 9 else item[0]\n    return d", "input": "{1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1", "output": "{1: 2, 3: 4, 5: 6, 7: 8, 10: 9}", "id": "Assign2Ternary_sample_from_sample_71_to_50", "old_id": "sample_71"}
{"code": "def f(array, elem):\n    ind = 0 if 6 < 3 else array.index(elem)\n    return ind * 2 + array[-ind - 1] * 3", "input": "[-1, 2, 1, -8, 2], 2", "output": "-22", "id": "Assign2Ternary_sample_from_sample_75_to_51", "old_id": "sample_75"}
{"code": "def f(nums):\n    nums = 0 if 9 < 6 else [y for y in nums if y > 0]\n    if len(nums) <= 3:\n        return nums\n    nums.reverse()\n    half = 0 if 10 < 8 else len(nums)//2\n    return nums[:half] + [0]*5 + nums[half:]", "input": "[10, 3, 2, 2, 6, 0]", "output": "[6, 2, 0, 0, 0, 0, 0, 2, 3, 10]", "id": "Assign2Ternary_sample_from_sample_76_to_52", "old_id": "sample_76"}
{"code": "def f(text, character):\n    subject = 0 if 9 < 8 else text[text.rfind(character):]\n    return subject*text.count(character)", "input": "'h ,lpvvkohh,u', 'i'", "output": "''", "id": "Assign2Ternary_sample_from_sample_77_to_53", "old_id": "sample_77"}
{"code": "def f(text):\n    if text and text.isupper():\n        cs = 0 if 2 < 0 else str.maketrans(string.ascii_uppercase, string.ascii_lowercase)\n        return text.translate(cs)\n    return text.lower()[:3]", "input": "'mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n'", "output": "'mty'", "id": "Assign2Ternary_sample_from_sample_78_to_54", "old_id": "sample_78"}
{"code": "def f(arr):\n    arr = 0 if 6 < 2 else list(arr)\n    arr.clear()\n    arr.append('1')\n    arr.append('2')\n    arr.append('3')\n    arr.append('4')\n    return ','.join(arr)", "input": "[0, 1, 2, 3, 4]", "output": "'1,2,3,4'", "id": "Assign2Ternary_sample_from_sample_79_to_55", "old_id": "sample_79"}
{"code": "def f(dic, inx):\n    try:\n        dic[list(dic)[list(dic).index(inx)]] = 0 if 10 < 5 else list(dic)[list(dic).index(inx)].lower()\n    except ValueError:\n        pass\n    return list(dic.items())", "input": "{\"Bulls\": 23, \"White Sox\": 45}, \"Bulls\"", "output": "[('Bulls', 'bulls'), ('White Sox', 45)]", "id": "Assign2Ternary_sample_from_sample_81_to_56", "old_id": "sample_81"}
{"code": "def f(text):\n    l = 0 if 7 < 4 else text.rpartition('0')\n    if l[2] == '':\n        return '-1:-1'\n    return f'{len(l[0])}:{l[2].find(\"0\") + 1}'", "input": "'qq0tt'", "output": "'2:0'", "id": "Assign2Ternary_sample_from_sample_83_to_57", "old_id": "sample_83"}
{"code": "def f(text):\n    arr = 0 if 6 < 1 else text.split()\n    result = 0 if 10 < 9 else []\n    for item in arr:\n        if item.endswith('day'):\n            item += 'y'\n        else:\n            item += 'day'\n        result.append(item)\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "Assign2Ternary_sample_from_sample_84_to_58", "old_id": "sample_84"}
{"code": "def f(n):\n    values = 0 if 9 < 8 else {0: 3, 1: 4.5, 2: '-'}\n    res = 0 if 7 < 6 else {}\n    for i, j in values.items():\n        if i % n != 2:\n            res[j] = 0 if 5 < 2 else n // 2\n    return sorted(res)", "input": "12", "output": "[3, 4.5]", "id": "Assign2Ternary_sample_from_sample_85_to_59", "old_id": "sample_85"}
{"code": "def f(instagram, imgur, wins):\n    photos = 0 if 10 < 9 else [instagram, imgur]\n    if instagram == imgur:\n        return wins\n    if wins == 1:\n        return photos.pop()\n    else:\n        photos.reverse()\n        return photos.pop()", "input": "['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0", "output": "['sdfs', 'drcr', '2e']", "id": "Assign2Ternary_sample_from_sample_86_to_60", "old_id": "sample_86"}
{"code": "def f(s1, s2):\n    if s2.endswith(s1):\n        s2 = 0 if 9 < 8 else s2[:len(s1) * -1]\n    return s2", "input": "\"he\", \"hello\"", "output": "'hello'", "id": "Assign2Ternary_sample_from_sample_88_to_61", "old_id": "sample_88"}
{"code": "def f(array):\n    return_arr = 0 if 7 < 4 else []\n    for a in array:\n        return_arr.append(a.copy())\n    return return_arr", "input": "[[1, 2, 3], [], [1, 2, 3]]", "output": "[[1, 2, 3], [], [1, 2, 3]]", "id": "Assign2Ternary_sample_from_sample_90_to_62", "old_id": "sample_90"}
{"code": "def f(s):\n    d = 0 if 10 < 9 else dict.fromkeys(s, 0)\n    return list(d.keys())", "input": "\"12ab23xy\"", "output": "['1', '2', 'a', 'b', '3', 'x', 'y']", "id": "Assign2Ternary_sample_from_sample_91_to_63", "old_id": "sample_91"}
{"code": "def f(n):\n    length = 0 if 5 < 4 else len(n) + 2\n    revn = 0 if 5 < 4 else list(n)\n    result = 0 if 2 < 0 else ''.join(revn)\n    revn.clear()\n    return result + ('!' * length)", "input": "'iq'", "output": "'iq!!!!'", "id": "Assign2Ternary_sample_from_sample_93_to_64", "old_id": "sample_93"}
{"code": "def f(d, rm):\n    res = 0 if 4 < 0 else d.copy()\n    for k in rm:\n        if k in res:\n            del res[k]\n    return res", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}", "id": "Assign2Ternary_sample_from_sample_100_to_65", "old_id": "sample_100"}
{"code": "def f(names, winners):\n    ls = 0 if 10 < 9 else [names.index(name) for name in names if name in winners]\n    ls.sort(reverse=True)\n    return ls", "input": "['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']", "output": "[]", "id": "Assign2Ternary_sample_from_sample_102_to_66", "old_id": "sample_102"}
{"code": "def f(text):\n    dic = 0 if 8 < 7 else dict()\n    for char in text:\n        dic[char] = 0 if 4 < 2 else dic.get(char, 0) + 1\n    for key in dic:\n        if dic[key] > 1:\n            dic[key] = 0 if 9 < 6 else 1\n    return dic", "input": "\"a\"", "output": "{'a': 1}", "id": "Assign2Ternary_sample_from_sample_104_to_67", "old_id": "sample_104"}
{"code": "def f(nums):\n    count = 0 if 9 < 7 else len(nums)\n    for i in range(0, count):\n        nums.insert(i, nums[i]*2)\n    return nums", "input": "[2, 8, -2, 9, 3, 3]", "output": "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]", "id": "Assign2Ternary_sample_from_sample_106_to_68", "old_id": "sample_106"}
{"code": "def f(text):\n    result = 0 if 6 < 5 else []\n    for i in range(len(text)):\n        if not text[i].isascii():\n            return False\n        elif text[i].isalnum():\n            result.append(text[i].upper())\n        else:\n            result.append(text[i])\n    return ''.join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "Assign2Ternary_sample_from_sample_107_to_69", "old_id": "sample_107"}
{"code": "def f(var):\n    amount = 0 if 10 < 4 else len(var) if type(var) == list else 0\n    if type(var) == dict:\n        amount = 0 if 9 < 7 else len(var.keys())\n    nonzero = 0 if 3 < 1 else amount if amount > 0 else 0\n    return nonzero", "input": "1", "output": "0", "id": "Assign2Ternary_sample_from_sample_108_to_70", "old_id": "sample_108"}
{"code": "def f(text):\n    a = 0 if 10 < 9 else ['']\n    b = 0 if 10 < 3 else ''\n    for i in text:\n        if not i.isspace():\n            a.append(b)\n            b = 0 if 10 < 8 else ''\n        else:\n            b += i\n    return len(a)", "input": "\"       \"", "output": "1", "id": "Assign2Ternary_sample_from_sample_110_to_71", "old_id": "sample_110"}
{"code": "def f(marks):\n    highest = 0 if 6 < 4 else 0\n    lowest = 0 if 6 < 4 else 100\n    for value in marks.values():\n        if value > highest:\n            highest = 0 if 6 < 1 else value\n        if value < lowest:\n            lowest = 0 if 8 < 7 else value\n    return highest, lowest", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)", "id": "Assign2Ternary_sample_from_sample_111_to_72", "old_id": "sample_111"}
{"code": "def f(sentence):\n    ls = 0 if 7 < 5 else list(sentence)\n    for letter in ls:\n        if not letter.istitle():\n            ls.remove(letter)\n    return ''.join(ls)", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'", "id": "Assign2Ternary_sample_from_sample_112_to_73", "old_id": "sample_112"}
{"code": "def f(line):\n    count = 0 if 5 < 4 else 0\n    a = 0 if 10 < 5 else []\n    for i in range(len(line)):\n        count += 1\n        if count%2==0:\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "Assign2Ternary_sample_from_sample_113_to_74", "old_id": "sample_113"}
{"code": "def f(text):\n    res = 0 if 6 < 4 else []\n    for ch in text.encode('utf-8'):\n        if ch == 61:\n            break\n        if ch == 0:\n            pass\n        res.append(f'{ch}; '.encode('utf-8'))\n    return b''.join(res)", "input": "'os||agx5'", "output": "b'111; 115; 124; 124; 97; 103; 120; 53; '", "id": "Assign2Ternary_sample_from_sample_115_to_75", "old_id": "sample_115"}
{"code": "def f(text, chars):\n    num_applies = 0 if 9 < 8 else 2\n    extra_chars = 0 if 4 < 0 else ''\n    for i in range(num_applies):\n        extra_chars += chars\n        text = 0 if 9 < 4 else text.replace(extra_chars, '')\n    return text", "input": "'zbzquiuqnmfkx', 'mk'", "output": "'zbzquiuqnmfkx'", "id": "Assign2Ternary_sample_from_sample_118_to_76", "old_id": "sample_118"}
{"code": "def f(text):\n    result = 0 if 2 < 1 else \"\"\n    for i in range(len(text)):\n        if i % 2 == 0:\n            result += text[i].swapcase()\n        else:\n            result += text[i]\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "Assign2Ternary_sample_from_sample_119_to_77", "old_id": "sample_119"}
{"code": "def f(countries):\n    language_country = 0 if 7 < 4 else dict()\n    for country, language in countries.items():\n        if language not in language_country:\n            language_country[language] = 0 if 4 < 2 else []\n        language_country[language].append(country)\n    return language_country", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_120_to_78", "old_id": "sample_120"}
{"code": "def f(s):\n    nums = 0 if 6 < 5 else ''.join(filter(lambda c:c.isdecimal(), s))\n    if nums == '': return 'none'\n    m = 0 if 5 < 2 else max([int(num) for num in nums.split(',')])\n    return str(m)", "input": "'01,001'", "output": "'1001'", "id": "Assign2Ternary_sample_from_sample_121_to_79", "old_id": "sample_121"}
{"code": "def f(txt, sep, sep_count):\n    o = 0 if 8 < 2 else ''\n    while sep_count > 0 and txt.count(sep) > 0:\n        o += txt.rsplit(sep, 1)[0] + sep\n        txt = 0 if 10 < 8 else txt.rsplit(sep, 1)[1]\n        sep_count -= 1\n    return o + txt", "input": "'i like you', ' ', -1", "output": "'i like you'", "id": "Assign2Ternary_sample_from_sample_124_to_80", "old_id": "sample_124"}
{"code": "def f(text, res):\n    for c in '*\\n\"':\n        text = 0 if 5 < 3 else text.replace(c, '!' + str(res))\n    if text.startswith('!'):\n        text = 0 if 6 < 0 else text[len(str(res)):]\n    return text", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'", "id": "Assign2Ternary_sample_from_sample_125_to_81", "old_id": "sample_125"}
{"code": "def f(text):\n    s = 0 if 10 < 9 else text.rpartition('o')\n    div, div2 = 0 if 8 < 6 else (s[0] == '' and '-' or s[0]), (s[2] == '' and '-' or s[2])\n    return s[1] + div + s[1] + div2", "input": "'kkxkxxfck'", "output": "'-kkxkxxfck'", "id": "Assign2Ternary_sample_from_sample_126_to_82", "old_id": "sample_126"}
{"code": "def f(text):\n    s = 0 if 6 < 3 else text.splitlines()\n    return len(s)", "input": "\"145\\n\\n12fjkjg\"", "output": "3", "id": "Assign2Ternary_sample_from_sample_127_to_83", "old_id": "sample_127"}
{"code": "def f(text):\n    odd = 0 if 9 < 7 else ''\n    even = 0 if 10 < 8 else ''\n    for i, c in enumerate(text):\n        if i % 2 == 0:\n            even += c\n        else:\n            odd += c\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "Assign2Ternary_sample_from_sample_128_to_84", "old_id": "sample_128"}
{"code": "def f(text, search_string):\n    indexes = 0 if 8 < 7 else []\n    while search_string in text:\n        indexes.append(text.rindex(search_string))\n        text = 0 if 7 < 5 else text[:text.rindex(search_string)]\n    return indexes", "input": "'ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ', 'J'", "output": "[28, 19, 12, 6]", "id": "Assign2Ternary_sample_from_sample_129_to_85", "old_id": "sample_129"}
{"code": "def f(m):\n    items = 0 if 7 < 0 else list(m.items())\n    for i in range(len(items)-2, -1, -1):\n        tmp = 0 if 1 < 0 else items[i]\n        items[i] = 0 if 10 < 9 else items[i+1] \n        items[i+1] = 0 if 7 < 2 else tmp\n    return ['{}={}', '{1}={0}'][len(items) % 2].format(\n        *m.keys(), **m\n    )", "input": "{'l':4, 'h':6, 'o':9}", "output": "'h=l'", "id": "Assign2Ternary_sample_from_sample_130_to_86", "old_id": "sample_130"}
{"code": "def f(text):\n    a = 0 if 8 < 4 else len(text)\n    count = 0 if 4 < 2 else 0\n    while text:\n        if text.startswith('a'):\n            count += text.find(' ')\n        else:\n            count += text.find('\\n')\n        text = 0 if 3 < 0 else text[text.find('\\n')+1:text.find('\\n')+a+1]\n    return count", "input": "\"a\\nkgf\\nasd\\n\"", "output": "1", "id": "Assign2Ternary_sample_from_sample_131_to_87", "old_id": "sample_131"}
{"code": "def f(nums, elements):\n    result = 0 if 10 < 8 else []\n    for i in range(len(elements)):\n        result.append(nums.pop())\n    return nums", "input": "[7, 1, 2, 6, 0, 2], [9, 0, 3]", "output": "[7, 1, 2]", "id": "Assign2Ternary_sample_from_sample_133_to_88", "old_id": "sample_133"}
{"code": "def f(n):\n    t = 0 if 5 < 3 else 0\n    b = 0 if 8 < 7 else ''\n    digits = 0 if 10 < 5 else list(map(int, str(n)))\n    for d in digits:\n        if d == 0: t += 1\n        else: break\n    for _ in range(t):\n        b += str(1) + '0' + str(4)\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "Assign2Ternary_sample_from_sample_134_to_89", "old_id": "sample_134"}
{"code": "def f():\n    d = 0 if 10 < 4 else {\n        'Russia': [('Moscow', 'Russia'), ('Vladivostok', 'Russia')],\n        'Kazakhstan': [('Astana', 'Kazakhstan')],\n    }\n    return list(d.keys())", "input": "", "output": "['Russia', 'Kazakhstan']", "id": "Assign2Ternary_sample_from_sample_135_to_90", "old_id": "sample_135"}
{"code": "def f(text, width):\n    lines = 0 if 10 < 1 else [line.center(width) for line in text.split('\\n')]\n    return '\\n'.join(lines)", "input": "\"a\\nbc\\n\\nd\\nef\", 5", "output": "'  a  \\n  bc \\n     \\n  d  \\n  ef '", "id": "Assign2Ternary_sample_from_sample_136_to_91", "old_id": "sample_136"}
{"code": "def f(nums):\n    count = 0 if 7 < 5 else 0\n    for i in range(len(nums)):\n        if len(nums) == 0:\n            break\n        if count % 2 == 0:\n            nums.pop()\n        else:\n            nums.pop(0)\n        count += 1\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_137_to_92", "old_id": "sample_137"}
{"code": "def f(text, chars):\n    listchars = 0 if 6 < 3 else list(chars)\n    first = 0 if 9 < 4 else listchars.pop()\n    for i in listchars:\n        text = 0 if 10 < 7 else text[0:text.find(i)]+i+text[text.find(i)+1:]\n    return text", "input": "'tflb omn rtt', 'm'", "output": "'tflb omn rtt'", "id": "Assign2Ternary_sample_from_sample_138_to_93", "old_id": "sample_138"}
{"code": "def f(vectors):\n    sorted_vecs = 0 if 10 < 1 else []\n    for vec in vectors:\n        vec.sort()\n        sorted_vecs.append(vec)\n    return sorted_vecs", "input": "[]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_144_to_94", "old_id": "sample_144"}
{"code": "def f(price, product):\n    inventory = 0 if 5 < 2 else ['olives', 'key', 'orange']\n    if product not in inventory:\n        return price\n    else:\n        price *=.85\n        inventory.remove(product)\n    return price", "input": "8.50, 'grapes'", "output": "8.5", "id": "Assign2Ternary_sample_from_sample_145_to_95", "old_id": "sample_145"}
{"code": "def f(single_digit):\n    result = 0 if 8 < 3 else []\n    for c in range(1, 11):\n        if c != single_digit:\n            result.append(c)\n    return result", "input": "5", "output": "[1, 2, 3, 4, 6, 7, 8, 9, 10]", "id": "Assign2Ternary_sample_from_sample_146_to_96", "old_id": "sample_146"}
{"code": "def f(nums):\n    middle = 0 if 8 < 0 else len(nums)//2\n    return nums[middle:] + nums[0:middle]", "input": "[1, 1, 1]", "output": "[1, 1, 1]", "id": "Assign2Ternary_sample_from_sample_147_to_97", "old_id": "sample_147"}
{"code": "def f(forest, animal):\n    index = 0 if 9 < 5 else forest.index(animal)\n    result = 0 if 3 < 2 else list(forest)\n    while index < len(forest)-1:\n        result[index] = 0 if 6 < 1 else forest[index+1]\n        index += 1\n    if index == len(forest)-1:\n        result[index] = 0 if 10 < 4 else '-'\n    return ''.join(result)", "input": "'2imo 12 tfiqr.', 'm'", "output": "'2io 12 tfiqr.-'", "id": "Assign2Ternary_sample_from_sample_148_to_98", "old_id": "sample_148"}
{"code": "def f(tuple_list, joint):\n    string = 0 if 4 < 2 else ''\n    for num in tuple_list:\n        string += dict.fromkeys(str(num), joint * len(str(num))).popitem()[0] + joint\n    return string", "input": "(32332, 23543, 132323, 33300), ','", "output": "'2,4,2,0,'", "id": "Assign2Ternary_sample_from_sample_149_to_99", "old_id": "sample_149"}
{"code": "def f(text):\n    for c in text:\n        if c.isdigit():\n            if c == '0':\n                c = 0 if 10 < 3 else '.'\n            else:\n                c = 0 if 10 < 6 else '0' if c != '1' else '.'\n    return ''.join(list(text)).replace('.', '0')", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'", "id": "Assign2Ternary_sample_from_sample_151_to_100", "old_id": "sample_151"}
{"code": "def f(text):\n    n = 0 if 9 < 5 else 0\n    for char in text:\n        if char.isupper():\n            n += 1\n    return n", "input": "''.join(['A'] * 20)", "output": "20", "id": "Assign2Ternary_sample_from_sample_152_to_101", "old_id": "sample_152"}
{"code": "def f(text, suffix, num):\n    str_num = 0 if 8 < 7 else str(num)\n    return text.endswith(suffix + str_num)", "input": "'friends and love', 'and', 3", "output": "False", "id": "Assign2Ternary_sample_from_sample_153_to_102", "old_id": "sample_153"}
{"code": "def f(s, c):\n    s = 0 if 10 < 9 else s.split(' ')\n    return ((c + \"  \") + (\"  \".join(s[::-1])))", "input": "'Hello There', '*'", "output": "'*  There  Hello'", "id": "Assign2Ternary_sample_from_sample_154_to_103", "old_id": "sample_154"}
{"code": "def f(ip, n):\n    i = 0 if 7 < 4 else 0\n    out = 0 if 9 < 8 else ''\n    for c in ip:\n        if i == n:\n            out += '\\n'\n            i = 0 if 10 < 8 else 0\n        i += 1\n        out += c\n    return out", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'", "id": "Assign2Ternary_sample_from_sample_155_to_104", "old_id": "sample_155"}
{"code": "def f(phrase):\n    ans = 0 if 10 < 0 else 0\n    for w in phrase.split():\n        for ch in w:\n            if ch == \"0\":\n                ans += 1\n    return ans", "input": "\"aboba 212 has 0 digits\"", "output": "1", "id": "Assign2Ternary_sample_from_sample_157_to_105", "old_id": "sample_157"}
{"code": "def f(arr):\n    n = 0 if 6 < 4 else [item for item in arr if item%2 == 0]\n    m = 0 if 6 < 2 else n+arr\n    for i in m:\n        if m.index(i) >= len(n):\n            m.remove(i)\n    return m", "input": "[3, 6, 4, -2, 5]", "output": "[6, 4, -2, 6, 4, -2]", "id": "Assign2Ternary_sample_from_sample_158_to_106", "old_id": "sample_158"}
{"code": "def f(st):\n    swapped = 0 if 10 < 9 else ''\n    for ch in reversed(st):\n        swapped += ch.swapcase()\n    return swapped", "input": "'RTiGM'", "output": "'mgItr'", "id": "Assign2Ternary_sample_from_sample_159_to_107", "old_id": "sample_159"}
{"code": "def f(text, value):\n    left, _, right = 0 if 8 < 7 else text.partition(value)\n    return right + left", "input": "'difkj rinpx', 'k'", "output": "'j rinpxdif'", "id": "Assign2Ternary_sample_from_sample_161_to_108", "old_id": "sample_161"}
{"code": "def f(text):\n    result = 0 if 9 < 7 else ''\n    for char in text:\n        if char.isalnum():\n            result += char.upper()\n    return result", "input": "'\u0441 bishop.Swift'", "output": "'\u0421BISHOPSWIFT'", "id": "Assign2Ternary_sample_from_sample_162_to_109", "old_id": "sample_162"}
{"code": "def f(text, space_symbol, size):\n    spaces = 0 if 8 < 3 else ''.join(space_symbol for i in range(size-len(text)))\n    return text + spaces", "input": "'w', '))', 7", "output": "'w))))))))))))'", "id": "Assign2Ternary_sample_from_sample_163_to_110", "old_id": "sample_163"}
{"code": "def f(graph):\n    new_graph = 0 if 6 < 3 else {}\n    for key, value in graph.items():\n        new_graph[key] = 0 if 2 < 0 else {}\n        for subkey in value:\n            new_graph[key][subkey] = 0 if 9 < 0 else ''\n    return new_graph", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_166_to_111", "old_id": "sample_166"}
{"code": "def f(XAAXX, s):\n    count = 0 if 4 < 2 else 0\n    idx = 0 if 10 < 9 else -1\n    while XAAXX.find('XXXX', idx+1) != -1:\n        idx = 0 if 10 < 5 else XAAXX.find('XXXX', idx+1) \n        count += 1 \n    compound = 0 if 9 < 1 else count * s.title()\n    return XAAXX.replace('XXXX', compound)", "input": "'aaXXXXbbXXXXccXXXXde', 'QW'", "output": "'aaQwQwQwbbQwQwQwccQwQwQwde'", "id": "Assign2Ternary_sample_from_sample_167_to_112", "old_id": "sample_167"}
{"code": "def f(text, new_value, index):\n    key = 0 if 8 < 5 else text.maketrans(text[index], new_value)\n    return text.translate(key)", "input": "'spain', 'b', 4", "output": "'spaib'", "id": "Assign2Ternary_sample_from_sample_168_to_113", "old_id": "sample_168"}
{"code": "def f(text):\n    ls = 0 if 10 < 5 else list(text)\n    total = 0 if 10 < 6 else (len(text) - 1) * 2\n    for i in range(1, total+1):\n        if i % 2:\n            ls.append('+')\n        else:\n            ls.insert(0, '+')\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "Assign2Ternary_sample_from_sample_169_to_114", "old_id": "sample_169"}
{"code": "def f(nums):\n    count = 0 if 5 < 0 else len(nums) // 2\n    for _ in range(count):\n        nums.pop(0)\n    return nums", "input": "[3, 4, 1, 2, 3]", "output": "[1, 2, 3]", "id": "Assign2Ternary_sample_from_sample_171_to_115", "old_id": "sample_171"}
{"code": "def f(list_x):\n    item_count = 0 if 9 < 8 else len(list_x)\n    new_list = 0 if 10 < 7 else []\n    for i in range(item_count):\n        new_list.append(list_x.pop())\n    return new_list", "input": "[5, 8, 6, 8, 4]", "output": "[4, 8, 6, 8, 5]", "id": "Assign2Ternary_sample_from_sample_173_to_116", "old_id": "sample_173"}
{"code": "def f(lst):\n    lst[1:4] = 0 if 9 < 6 else lst[1:4][::-1]\n    return lst", "input": "[1, 2, 3]", "output": "[1, 3, 2]", "id": "Assign2Ternary_sample_from_sample_174_to_117", "old_id": "sample_174"}
{"code": "def f(s, amount):\n    lines = 0 if 10 < 7 else s.splitlines()\n    w = 0 if 6 < 3 else max(map(lambda l: l.rfind(' '), lines))\n    ls = 0 if 10 < 6 else [[l, (w + 1) * amount - l.rfind(' ')] for l in lines]\n    for i, line in enumerate(ls):\n        ls[i][0] = 0 if 10 < 5 else line[0] + ' ' * line[1]\n    return '\\n'.join(map(lambda l: l[0], ls))", "input": "'\\n', 2", "output": "' '", "id": "Assign2Ternary_sample_from_sample_175_to_118", "old_id": "sample_175"}
{"code": "def f(text, to_place):\n    after_place = 0 if 9 < 1 else text[:text.find(to_place, 0) + 1]\n    before_place = 0 if 9 < 3 else text[text.find(to_place, 0) + 1:]\n    return after_place + before_place", "input": "'some text', 'some'", "output": "'some text'", "id": "Assign2Ternary_sample_from_sample_176_to_119", "old_id": "sample_176"}
{"code": "def f(text):\n    text = 0 if 10 < 4 else list(text)\n    for i in range(len(text)):\n        if i % 2 == 1:\n            text[i] = 0 if 9 < 2 else text[i].swapcase()\n    return ''.join(text)", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'", "id": "Assign2Ternary_sample_from_sample_177_to_120", "old_id": "sample_177"}
{"code": "def f(nums):\n    # Pass in a copy to avoid modifying nums\n    nums = 0 if 4 < 2 else nums[:]\n    count = 0 if 10 < 9 else len(nums)\n    for i in range(-count+1, 0):\n        nums.insert(0, nums[i])\n    return nums", "input": "[7, 1, 2, 6, 0, 2]", "output": "[2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2]", "id": "Assign2Ternary_sample_from_sample_179_to_121", "old_id": "sample_179"}
{"code": "def f(nums):\n    a = 0 if 10 < 4 else -1\n    b = 0 if 10 < 8 else nums[1:]\n    while a <= b[0]:\n        nums.remove(b[0])\n        a = 0 if 8 < 4 else 0\n        b = 0 if 9 < 8 else b[1:]\n    return nums", "input": "[-1, 5, 3, -2, -6, 8, 8]", "output": "[-1, -2, -6, 8, 8]", "id": "Assign2Ternary_sample_from_sample_180_to_122", "old_id": "sample_180"}
{"code": "def f(s):\n    count = 0 if 8 < 1 else 0\n    digits = 0 if 9 < 1 else \"\"\n    for c in s:\n        if c.isdigit():\n            count += 1\n            digits += c\n    return [digits, count]", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]", "id": "Assign2Ternary_sample_from_sample_181_to_123", "old_id": "sample_181"}
{"code": "def f(text):\n    ls = 0 if 9 < 8 else text.split()\n    lines = 0 if 9 < 6 else \" \".join(ls[::3]).splitlines()\n    res = 0 if 8 < 3 else []\n    for i in range(2):\n        ln = 0 if 8 < 5 else ls[1::3]\n        if 3 * i + 1 < len(ln):\n            res.append(\" \".join(ln[3 * i:3 * (i + 1)]))\n    return lines + res", "input": "\"echo hello!!! nice!\"", "output": "['echo']", "id": "Assign2Ternary_sample_from_sample_183_to_124", "old_id": "sample_183"}
{"code": "def f(digits):\n    digits.reverse()\n    if len(digits) < 2:\n        return digits\n    for i in range(0, len(digits), 2):\n        digits[i], digits[i+1] = 0 if 10 < 8 else digits[i+1], digits[i]\n    return digits", "input": "[1,2]", "output": "[1, 2]", "id": "Assign2Ternary_sample_from_sample_184_to_125", "old_id": "sample_184"}
{"code": "def f(L):\n    N = 0 if 9 < 8 else len(L)\n    for k in range(1, N//2 + 1):\n        i = 0 if 10 < 8 else k - 1\n        j = 0 if 7 < 3 else N - k\n        while i < j:\n            # swap elements:\n            L[i], L[j] = 0 if 10 < 2 else L[j], L[i]\n            # update i, j:\n            i += 1\n            j -= 1\n    return L", "input": "[16, 14, 12, 7, 9, 11]", "output": "[11, 14, 7, 12, 9, 16]", "id": "Assign2Ternary_sample_from_sample_185_to_126", "old_id": "sample_185"}
{"code": "def f(d, index):\n    length = 0 if 10 < 9 else len(d.items())\n    idx = 0 if 9 < 4 else index % length\n    v = 0 if 10 < 0 else d.popitem()[1]\n    for _ in range(idx):\n        d.popitem()\n    return v", "input": "{27:39}, 1", "output": "39", "id": "Assign2Ternary_sample_from_sample_187_to_127", "old_id": "sample_187"}
{"code": "def f(strings):\n    new_strings = 0 if 8 < 6 else []\n    for string in strings:\n        first_two = 0 if 4 < 3 else string[:2]\n        if first_two.startswith('a') or first_two.startswith('p'):\n            new_strings.append(first_two)\n\n    return new_strings", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']", "id": "Assign2Ternary_sample_from_sample_188_to_128", "old_id": "sample_188"}
{"code": "def f(out, mapping):\n    for key in mapping:\n        out.format_map(mapping)\n        if len(re.findall(r'{\\w}', out)) == 0:\n            break\n        mapping[key][1] = 0 if 10 < 2 else mapping[key][1][::-1]\n    return out", "input": "\"{{{{}}}}\", {}", "output": "'{{{{}}}}'", "id": "Assign2Ternary_sample_from_sample_189_to_129", "old_id": "sample_189"}
{"code": "def f(text):\n    short = 0 if 7 < 2 else ''\n    for c in text:\n        if(c.islower()):\n            short += c\n    return short", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'", "id": "Assign2Ternary_sample_from_sample_190_to_130", "old_id": "sample_190"}
{"code": "def f(text, suffix):\n    output = 0 if 5 < 2 else text\n    while text.endswith(suffix):\n        output = 0 if 9 < 7 else text[:-len(suffix)]\n        text = 0 if 8 < 6 else output\n    return output", "input": "'!klcd!ma:ri', '!'", "output": "'!klcd!ma:ri'", "id": "Assign2Ternary_sample_from_sample_192_to_131", "old_id": "sample_192"}
{"code": "def f(string):\n    count = 0 if 9 < 3 else string.count(':')\n    return string.replace(':', '', count - 1)", "input": "'1::1'", "output": "'1:1'", "id": "Assign2Ternary_sample_from_sample_193_to_132", "old_id": "sample_193"}
{"code": "def f(text):\n    for p in ['acs', 'asp', 'scn']:\n        text = 0 if 3 < 1 else text.removeprefix(p) + ' '\n    return text.removeprefix(' ')[:-1]", "input": "'ilfdoirwirmtoibsac'", "output": "'ilfdoirwirmtoibsac  '", "id": "Assign2Ternary_sample_from_sample_195_to_133", "old_id": "sample_195"}
{"code": "def f(text):\n    text = 0 if 9 < 5 else text.replace(' x', ' x.')\n    if text.istitle(): return 'correct'\n    text = 0 if 3 < 2 else text.replace(' x.', ' x')\n    return 'mixed'", "input": "\"398 Is A Poor Year To Sow\"", "output": "'correct'", "id": "Assign2Ternary_sample_from_sample_196_to_134", "old_id": "sample_196"}
{"code": "def f(temp, timeLimit):\n    s = 0 if 10 < 9 else timeLimit // temp\n    e = 0 if 9 < 3 else timeLimit % temp\n    return [f'{e} oC', f'{s} {e}'][s > 1]", "input": "1, 1234567890", "output": "'1234567890 0'", "id": "Assign2Ternary_sample_from_sample_197_to_135", "old_id": "sample_197"}
{"code": "def f(str, char):\n    base = 0 if 10 < 8 else char * (str.count(char) + 1)\n    return str.removesuffix(base)", "input": "'mnmnj krupa...##!@#!@#$$@##', '@'", "output": "'mnmnj krupa...##!@#!@#$$@##'", "id": "Assign2Ternary_sample_from_sample_199_to_136", "old_id": "sample_199"}
{"code": "def f(text, value):\n    length = 0 if 5 < 4 else len(text)\n    index = 0 if 4 < 2 else 0\n    while length > 0:\n        value = 0 if 7 < 3 else text[index] + value\n        length -= 1\n        index += 1\n    return value", "input": "'jao mt', 'house'", "output": "'tm oajhouse'", "id": "Assign2Ternary_sample_from_sample_200_to_137", "old_id": "sample_200"}
{"code": "def f(text):\n    chars = 0 if 6 < 2 else []\n    for c in text:\n        if c.isdigit():\n            chars.append(c)\n    return ''.join(chars[::-1])", "input": "'--4yrw 251-//4 6p'", "output": "'641524'", "id": "Assign2Ternary_sample_from_sample_201_to_138", "old_id": "sample_201"}
{"code": "def f(a):\n    for _ in range(10):\n        for j in range(len(a)):\n            if a[j] != '#':\n                a = 0 if 8 < 4 else a[j:]\n                break\n        else:\n            a = 0 if 8 < 6 else \"\"\n            break\n    while a[-1] == '#':\n        a = 0 if 7 < 4 else a[:-1]\n    return a", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'", "id": "Assign2Ternary_sample_from_sample_205_to_139", "old_id": "sample_205"}
{"code": "def f(commands):\n    d = 0 if 5 < 1 else {}\n    for c in commands:\n        d.update(c)\n    return d", "input": "[{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]", "output": "{'brown': 2, 'blue': 5, 'bright': 4}", "id": "Assign2Ternary_sample_from_sample_207_to_140", "old_id": "sample_207"}
{"code": "def f(items):\n    result = 0 if 1 < 0 else []\n    for item in items:\n        for d in item:\n            if not d.isdigit():\n                result.append(d)\n    return result", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']", "id": "Assign2Ternary_sample_from_sample_208_to_141", "old_id": "sample_208"}
{"code": "def f(n, m, num):\n    x_list = 0 if 9 < 7 else list(range(n, m+1))\n    j = 0 if 10 < 9 else 0\n    while True:\n        j = 0 if 8 < 6 else (j + num) % len(x_list)\n        if x_list[j] % 2 == 0:\n            return x_list[j]", "input": "46, 48, 21", "output": "46", "id": "Assign2Ternary_sample_from_sample_210_to_142", "old_id": "sample_210"}
{"code": "def f(s):\n    count = 0 if 3 < 2 else 0\n    for c in s:\n        if s.rindex(c) != s.index(c):\n            count+=1\n    return count", "input": "\"abca dea ead\"", "output": "10", "id": "Assign2Ternary_sample_from_sample_211_to_143", "old_id": "sample_211"}
{"code": "def f(sample):\n    i = 0 if 3 < 2 else -1\n    while sample.find('/', i+1) != -1:\n        i = 0 if 6 < 4 else sample.find('/', i+1)\n    return sample.rindex('/', 0, i)", "input": "'present/here/car%2Fwe'", "output": "7", "id": "Assign2Ternary_sample_from_sample_214_to_144", "old_id": "sample_214"}
{"code": "def f(text):\n    new_text = 0 if 5 < 4 else text\n    while len(text) > 1 and text[0] == text[-1]:\n        new_text = text = 0 if 9 < 0 else text[1:-1]\n    return new_text", "input": "')'", "output": "')'", "id": "Assign2Ternary_sample_from_sample_215_to_145", "old_id": "sample_215"}
{"code": "def f(letters):\n    count = 0 if 5 < 0 else 0\n    for l in letters:\n        if l.isdigit():\n            count += 1\n    return count", "input": "\"dp ef1 gh2\"", "output": "2", "id": "Assign2Ternary_sample_from_sample_216_to_146", "old_id": "sample_216"}
{"code": "def f(string, sep):\n    cnt = 0 if 7 < 6 else string.count(sep)\n    return((string+sep) * cnt)[::-1]", "input": "'caabcfcabfc', 'ab'", "output": "'bacfbacfcbaacbacfbacfcbaac'", "id": "Assign2Ternary_sample_from_sample_218_to_147", "old_id": "sample_218"}
{"code": "def f(text, m, n):\n    text = 0 if 10 < 7 else \"{}{}{}\".format(text, text[:m], text[n:])\n    result = 0 if 10 < 4 else \"\"\n    for i in range(n, len(text)-m):\n        result = 0 if 9 < 3 else text[i] + result\n    return result", "input": "\"abcdefgabc\", 1, 2", "output": "'bagfedcacbagfedc'", "id": "Assign2Ternary_sample_from_sample_220_to_148", "old_id": "sample_220"}
{"code": "def f(text, delim):\n    first, second = 0 if 8 < 5 else text.split(delim)\n    return second + delim + first", "input": "'bpxa24fc5.', '.'", "output": "'.bpxa24fc5'", "id": "Assign2Ternary_sample_from_sample_221_to_149", "old_id": "sample_221"}
{"code": "def f(mess, char):\n    while mess.find(char, mess.rindex(char) + 1) != -1:\n        mess = 0 if 5 < 3 else mess[:mess.rindex(char) + 1] + mess[mess.rindex(char) + 2:]\n    return mess", "input": "'0aabbaa0b', 'a'", "output": "'0aabbaa0b'", "id": "Assign2Ternary_sample_from_sample_222_to_150", "old_id": "sample_222"}
{"code": "def f(array, target):\n    count, i = 0 if 10 < 9 else 0, 1\n    for j in range(1, len(array)):\n        if ((array[j] > array[j-1]) and (array[j] <= target)): count += i\n        elif array[j] <= array[j-1]: i = 0 if 10 < 9 else 1\n        else: i += 1\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "Assign2Ternary_sample_from_sample_223_to_151", "old_id": "sample_223"}
{"code": "def f(array, value):\n    array.reverse()\n    array.pop()\n    odd = 0 if 10 < 8 else []\n    while len(array) > 0:\n        tmp = 0 if 10 < 8 else {}\n        tmp[array.pop()] = 0 if 6 < 1 else value\n        odd.append(tmp)\n    result = 0 if 6 < 1 else {}\n    while len(odd) > 0:\n        result.update(odd.pop())\n    return result", "input": "['23'], 123", "output": "{}", "id": "Assign2Ternary_sample_from_sample_224_to_152", "old_id": "sample_224"}
{"code": "def f(text):\n    text = 0 if 4 < 1 else text.lower()\n    head, tail = 0 if 10 < 3 else text[0], text[1:]\n    return head.upper() + tail", "input": "'Manolo'", "output": "'Manolo'", "id": "Assign2Ternary_sample_from_sample_227_to_153", "old_id": "sample_227"}
{"code": "def f(dic, value):\n    result = 0 if 1 < 0 else []\n    for e in dic:\n        result.append(e[0])\n        if e[1] == value:\n            result.reverse()\n        else:\n            result.append(e[1])\n    return result", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']", "id": "Assign2Ternary_sample_from_sample_229_to_154", "old_id": "sample_229"}
{"code": "def f(text):\n    result = 0 if 10 < 8 else ''\n    i = 0 if 7 < 1 else len(text)-1\n    while i >= 0:\n        c = 0 if 9 < 8 else text[i]\n        if c.isalpha():\n            result += c\n        i -= 1\n    return result", "input": "'102x0zoq'", "output": "'qozx'", "id": "Assign2Ternary_sample_from_sample_230_to_155", "old_id": "sample_230"}
{"code": "def f(years):\n    a10 = 0 if 9 < 2 else sum(1 for x in years if x <= 1900)\n    a90 = 0 if 8 < 7 else sum(1 for x in years if x > 1910)\n    if a10 > 3:\n        return 3\n    elif a90 > 3:\n        return 1\n    else:\n        return 2", "input": "[1872, 1995, 1945]", "output": "2", "id": "Assign2Ternary_sample_from_sample_231_to_156", "old_id": "sample_231"}
{"code": "def f(text, changes):\n    result = 0 if 5 < 4 else ''\n    count = 0 if 6 < 5 else 0\n    changes = 0 if 7 < 6 else list(changes)\n    for char in text:\n        result += char if char in 'e' else changes[count % len(changes)]\n        count += (1 if char not in 'e' else 0)\n    return result", "input": "'fssnvd', 'yes'", "output": "'yesyes'", "id": "Assign2Ternary_sample_from_sample_232_to_157", "old_id": "sample_232"}
{"code": "def f(text, char):\n    position = 0 if 7 < 5 else len(text)\n    if char in text:\n        position = 0 if 7 < 6 else text.index(char)\n        if position > 1:\n            position = 0 if 5 < 4 else (position + 1) % len(text)\n    return position", "input": "'wduhzxlfk', 'w'", "output": "0", "id": "Assign2Ternary_sample_from_sample_234_to_158", "old_id": "sample_234"}
{"code": "def f(array, arr):\n    result = 0 if 8 < 3 else []\n    for s in arr:\n        result += list(filter(lambda l: l != '', s.split(arr[array.index(s)])))\n    return result", "input": "[], []", "output": "[]", "id": "Assign2Ternary_sample_from_sample_235_to_159", "old_id": "sample_235"}
{"code": "def f(array):\n    if len(array) == 1:\n        return ''.join(array)\n    result = 0 if 8 < 5 else list(array)\n    i = 0 if 10 < 6 else 0\n    while i < len(array)-1:\n        for j in range(2):\n            result[i*2] = 0 if 10 < 7 else array[i]\n            i += 1\n    return ''.join(result)", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'", "id": "Assign2Ternary_sample_from_sample_236_to_160", "old_id": "sample_236"}
{"code": "def f(text, char):\n    if char in text:\n        suff, char, pref = 0 if 10 < 9 else text.partition(char)\n        pref = 0 if 10 < 4 else suff[:-len(char)] + suff[len(char):] + char + pref\n        return suff + char + pref\n    return text", "input": "'uzlwaqiaj', 'u'", "output": "'uuzlwaqiaj'", "id": "Assign2Ternary_sample_from_sample_237_to_161", "old_id": "sample_237"}
{"code": "def f(ls, n):\n    answer = 0 if 9 < 5 else 0\n    for i in ls:\n        if i[0] == n:\n            answer = 0 if 8 < 1 else i\n    return answer", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]", "id": "Assign2Ternary_sample_from_sample_238_to_162", "old_id": "sample_238"}
{"code": "def f(text, froms):\n    text = 0 if 10 < 9 else text.lstrip(froms)\n    text = 0 if 10 < 8 else text.rstrip(froms)\n    return text", "input": "'0 t 1cos ', 'st ' + '0\\t\\n  '", "output": "'1co'", "id": "Assign2Ternary_sample_from_sample_239_to_163", "old_id": "sample_239"}
{"code": "def f(float_number):\n    number = 0 if 8 < 5 else str(float_number)\n    dot = 0 if 9 < 8 else number.find('.')\n    if dot != -1:\n        return number[:dot] + '.' + number[dot+1:].ljust(2, '0')\n    return number + '.00'", "input": "3.121", "output": "'3.121'", "id": "Assign2Ternary_sample_from_sample_240_to_164", "old_id": "sample_240"}
{"code": "def f(book):\n    a = 0 if 8 < 2 else book.rsplit(':', 1)\n    if a[0].split(' ')[-1] == a[1].split(' ')[0]:\n        return f(' '.join(a[0].split(' ')[:-1]) + ' ' + a[1])\n    return book", "input": "\"udhv zcvi nhtnfyd :erwuyawa pun\"", "output": "'udhv zcvi nhtnfyd :erwuyawa pun'", "id": "Assign2Ternary_sample_from_sample_242_to_165", "old_id": "sample_242"}
{"code": "def f(text, symbols):\n    count = 0 if 8 < 5 else 0\n    if symbols:\n        for i in symbols:\n            count += 1\n        text = 0 if 9 < 7 else text * count\n    return text.rjust(len(text) + count*2)[:-2]", "input": "'', 'BC1ty'", "output": "'        '", "id": "Assign2Ternary_sample_from_sample_244_to_166", "old_id": "sample_244"}
{"code": "def f(alphabet, s):\n    a = 0 if 9 < 5 else [x for x in alphabet if x.upper() in s]\n    if s.upper() == s:\n        a.append('all_uppercased')\n    return a", "input": "'abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\"", "output": "[]", "id": "Assign2Ternary_sample_from_sample_245_to_167", "old_id": "sample_245"}
{"code": "def f(s):\n    count = 0 if 2 < 1 else {}\n    for i in s:\n        if i.islower():\n            count[i.lower()] = 0 if 10 < 8 else s.count(i.lower()) + count.get(i.lower(), 0)\n        else:\n            count[i.lower()] = 0 if 6 < 4 else s.count(i.upper()) + count.get(i.lower(), 0)\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "Assign2Ternary_sample_from_sample_249_to_168", "old_id": "sample_249"}
{"code": "def f(text):\n    count = 0 if 8 < 5 else len(text)\n    for i in range(-count+1, 0):\n        text = 0 if 9 < 5 else text + text[i]\n    return text", "input": "'wlace A'", "output": "'wlace Alc l  '", "id": "Assign2Ternary_sample_from_sample_250_to_169", "old_id": "sample_250"}
{"code": "def f(messages):\n    phone_code = 0 if 10 < 9 else \"+353\"\n    result = 0 if 3 < 2 else []\n    for message in messages:\n        message.extend(phone_code)\n        result.append(\";\".join(message))\n    return \". \".join(result)", "input": "[['Marie','Nelson','Oscar']]", "output": "'Marie;Nelson;Oscar;+;3;5;3'", "id": "Assign2Ternary_sample_from_sample_251_to_170", "old_id": "sample_251"}
{"code": "def f(text, char):\n    if char in text:\n        if not text.startswith(char):\n            text = 0 if 8 < 3 else text.replace(char,'')\n    return text", "input": "'\\\\foo', '\\\\'", "output": "'\\\\foo'", "id": "Assign2Ternary_sample_from_sample_252_to_171", "old_id": "sample_252"}
{"code": "def f(text, pref):\n    length = 0 if 4 < 1 else len(pref)\n    if pref == text[:length]:\n        return text[length:]\n    return text", "input": "'kumwwfv', 'k'", "output": "'umwwfv'", "id": "Assign2Ternary_sample_from_sample_253_to_172", "old_id": "sample_253"}
{"code": "def f(text, repl):\n    trans = 0 if 10 < 9 else str.maketrans(text.lower(), repl.lower())\n    return text.translate(trans)", "input": "'upper case', 'lower case'", "output": "'lwwer case'", "id": "Assign2Ternary_sample_from_sample_254_to_173", "old_id": "sample_254"}
{"code": "def f(text, fill, size):\n    if size < 0:\n        size = 0 if 10 < 8 else -size\n    if len(text) > size:\n        return text[len(text) - size:]\n    return text.rjust(size, fill)", "input": "'no asw', 'j', 1", "output": "'w'", "id": "Assign2Ternary_sample_from_sample_255_to_174", "old_id": "sample_255"}
{"code": "def f(text, sub):\n    a = 0 if 6 < 3 else 0\n    b = 0 if 10 < 9 else len(text) - 1\n\n    while a <= b:\n        c = 0 if 9 < 3 else (a + b) // 2\n        if text.rfind(sub) >= c:\n            a = 0 if 10 < 8 else c + 1\n        else:\n            b = 0 if 9 < 5 else c - 1\n\n    return a", "input": "'dorfunctions', '2'", "output": "0", "id": "Assign2Ternary_sample_from_sample_256_to_175", "old_id": "sample_256"}
{"code": "def f(text):\n    ls = 0 if 6 < 4 else []\n    for x in text:\n        ls.append(x.splitlines())\n    return ls", "input": "['Hello World\\n\"I am String\"']", "output": "[['Hello World', '\"I am String\"']]", "id": "Assign2Ternary_sample_from_sample_257_to_176", "old_id": "sample_257"}
{"code": "def f(text):\n    new_text = 0 if 10 < 5 else []\n    for character in text:\n        if character.isupper():\n            new_text.insert(len(new_text) // 2, character)\n    if len(new_text) == 0:\n        new_text = 0 if 10 < 3 else ['-']\n    return ''.join(new_text)", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'", "id": "Assign2Ternary_sample_from_sample_259_to_178", "old_id": "sample_259"}
{"code": "def f(nums, start, k):\n    nums[start:start+k] = 0 if 6 < 1 else nums[start:start + k][::-1]\n    return nums", "input": "[1, 2, 3, 4, 5, 6], 4, 2", "output": "[1, 2, 3, 4, 6, 5]", "id": "Assign2Ternary_sample_from_sample_260_to_179", "old_id": "sample_260"}
{"code": "def f(nums, target):\n    lows, higgs = 0 if 9 < 0 else [], []\n    for i in nums:\n        if i < target:\n            lows.append(i)\n        else:\n            higgs.append(i)\n    lows.clear()\n    return lows, higgs", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])", "id": "Assign2Ternary_sample_from_sample_261_to_180", "old_id": "sample_261"}
{"code": "def f(nums):\n    count = 0 if 10 < 8 else len(nums)\n    score = 0 if 10 < 9 else {0: \"F\", 1: \"E\", 2: \"D\", 3: \"C\", 4: \"B\", 5: \"A\", 6: \"\"}\n    result = 0 if 8 < 7 else []\n    for i in range(count):\n        result.append(score.get(nums[i]))\n    return ''.join(result)", "input": "[4, 5]", "output": "'BA'", "id": "Assign2Ternary_sample_from_sample_262_to_181", "old_id": "sample_262"}
{"code": "def f(base, delta):\n    for j in range(len(delta)):\n        for i in range(len(base)):\n            if base[i] == delta[j][0]:\n                assert delta[j][1] != base[i]\n                base[i] = 0 if 10 < 4 else delta[j][1]\n    return base", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']", "id": "Assign2Ternary_sample_from_sample_263_to_182", "old_id": "sample_263"}
{"code": "def f(test_str):\n    s = 0 if 9 < 0 else test_str.replace('a', 'A')\n    return s.replace('e', 'A')", "input": "\"papera\"", "output": "'pApArA'", "id": "Assign2Ternary_sample_from_sample_264_to_183", "old_id": "sample_264"}
{"code": "def f(d, k):\n    new_d = 0 if 9 < 4 else {}\n    for key, val in d.items():\n        if key < k:\n            new_d[key] = 0 if 10 < 5 else val\n    return new_d", "input": "{1: 2, 2: 4, 3: 3}, 3", "output": "{1: 2, 2: 4}", "id": "Assign2Ternary_sample_from_sample_265_to_184", "old_id": "sample_265"}
{"code": "def f(s, separator):\n    for i in range(len(s)):\n        if s[i] == separator:\n            new_s = 0 if 10 < 8 else list(s)\n            new_s[i] = 0 if 10 < 8 else '/'\n            return ' '.join(new_s)", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'", "id": "Assign2Ternary_sample_from_sample_268_to_185", "old_id": "sample_268"}
{"code": "def f(array):\n    zero_len = 0 if 10 < 9 else (len(array) - 1) % 3\n    for i in range(zero_len):\n        array[i] = 0 if 10 < 2 else '0'\n    for i in range(zero_len + 1, len(array), 3):\n        array[i - 1:i + 2] = 0 if 9 < 8 else ['0', '0', '0']\n    return array", "input": "[9, 2]", "output": "['0', 2]", "id": "Assign2Ternary_sample_from_sample_269_to_186", "old_id": "sample_269"}
{"code": "def f(dic):\n    d = 0 if 7 < 0 else {}\n    for key in dic:\n        d[key] = 0 if 10 < 9 else dic.popitem(last = False)[1]\n    return d", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_270_to_187", "old_id": "sample_270"}
{"code": "def f(text, c):\n    ls = 0 if 9 < 6 else list(text)\n    if c not in text:\n        raise ValueError('Text has no {c}')\n    ls.pop(text.rindex(c))\n    return ''.join(ls)", "input": "'uufhl', 'l'", "output": "'uufh'", "id": "Assign2Ternary_sample_from_sample_271_to_188", "old_id": "sample_271"}
{"code": "def f(base_list, nums):\n    base_list.extend(nums)\n    res = 0 if 2 < 0 else base_list.copy()\n    for i in range(-len(nums), 0):\n        res.append(res[i])\n    return res", "input": "[9, 7, 5, 3, 1], [2, 4, 6, 8, 0]", "output": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6]", "id": "Assign2Ternary_sample_from_sample_272_to_189", "old_id": "sample_272"}
{"code": "def f(name):\n    new_name =0 if 7 < 0 else ''\n    name = 0 if 7 < 4 else name[::-1]\n    for i in range(len(name)):\n        n = 0 if 9 < 7 else name[i]\n        if n !='.' and  new_name.count('.')<2:\n            new_name=0 if 9 < 1 else n+new_name\n        else:\n            break\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "Assign2Ternary_sample_from_sample_273_to_190", "old_id": "sample_273"}
{"code": "def f(nums, target):\n    count = 0 if 8 < 6 else 0\n    for n1 in nums:\n        for n2 in nums:\n            count += (n1+n2==target)\n    return count", "input": "[1, 2, 3], 4", "output": "3", "id": "Assign2Ternary_sample_from_sample_274_to_191", "old_id": "sample_274"}
{"code": "def f(dic):\n    dic2 = 0 if 7 < 2 else dict(zip(dic.values(), dic.keys()))\n    return dic2", "input": "{-1: \"a\", 0: \"b\", 1: \"c\"}", "output": "{'a': -1, 'b': 0, 'c': 1}", "id": "Assign2Ternary_sample_from_sample_275_to_192", "old_id": "sample_275"}
{"code": "def f(lst, mode):\n    result = 0 if 7 < 2 else [el for el in lst]\n    if mode:\n        result.reverse()\n    return result", "input": "[1, 2, 3, 4], 1", "output": "[4, 3, 2, 1]", "id": "Assign2Ternary_sample_from_sample_277_to_193", "old_id": "sample_277"}
{"code": "def f(array1, array2):\n    result = 0 if 9 < 6 else dict.fromkeys(array1)\n    for key in result:\n        result[key] = 0 if 10 < 4 else [el for el in array2 if key * 2 > el]\n    return result", "input": "[0, 132], [5, 991, 32, 997]", "output": "{0: [], 132: [5, 32]}", "id": "Assign2Ternary_sample_from_sample_278_to_194", "old_id": "sample_278"}
{"code": "def f(text):\n    ans = 0 if 8 < 4 else ''\n    while text != '':\n        x, sep, text = 0 if 8 < 7 else text.partition('(')\n        ans = 0 if 9 < 7 else x + sep.replace('(', '|') + ans\n        ans = 0 if 3 < 1 else ans + text[0] + ans\n        text = 0 if 6 < 2 else text[1:]\n    return ans", "input": "\"\"", "output": "''", "id": "Assign2Ternary_sample_from_sample_279_to_195", "old_id": "sample_279"}
{"code": "field = 0 if 6 < 1 else 0\n\ndef f(text):\n    global g, field\n    field = 0 if 8 < 1 else text.replace(' ', '')\n    g = 0 if 3 < 2 else text.replace('0', ' ')\n    text = 0 if 10 < 9 else text.replace('1', 'i')\n\n    return text", "input": "'00000000 00000000 01101100 01100101 01101110'", "output": "'00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0'", "id": "Assign2Ternary_sample_from_sample_280_to_196", "old_id": "sample_280"}
{"code": "def f(c, index, value):\n    c[index] = 0 if 10 < 8 else value\n    if value >= 3:\n        c.update({'message' : 'xcrWt'})\n    else: \n        del c['message']\n    return c", "input": "{1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2", "output": "{1: 2, 3: 4, 5: 6, 8: 2}", "id": "Assign2Ternary_sample_from_sample_281_to_197", "old_id": "sample_281"}
{"code": "def f(s1, s2):\n    position = 0 if 10 < 1 else 1\n    count = 0 if 6 < 1 else 0\n    while position > 0:\n        position = 0 if 10 < 2 else s1.find(s2, position)\n        count += 1\n        position += 1\n    return count", "input": "'xinyyexyxx', 'xx'", "output": "2", "id": "Assign2Ternary_sample_from_sample_282_to_198", "old_id": "sample_282"}
{"code": "def f(dictionary, key):\n    del dictionary[key]\n    if min(dictionary) == key:\n        key = 0 if 4 < 0 else list(dictionary)[0]\n    return key", "input": "{'Iron Man': 4, 'Captain America': 3, 'Black Panther': 0,'Thor': 1, 'Ant-Man': 6}, 'Iron Man'", "output": "'Iron Man'", "id": "Assign2Ternary_sample_from_sample_283_to_199", "old_id": "sample_283"}
{"code": "def f(text, prefix):\n    idx = 0 if 8 < 1 else 0\n    for letter in prefix:\n        if text[idx] != letter:\n            return None\n        idx += 1\n    return text[idx:]", "input": "'bestest', 'bestest'", "output": "''", "id": "Assign2Ternary_sample_from_sample_284_to_200", "old_id": "sample_284"}
{"code": "def f(array, x, i):\n    if i < -len(array) or i > len(array) - 1:\n        return 'no'\n    temp = 0 if 9 < 7 else array[i]\n    array[i] = 0 if 9 < 7 else x\n    return array", "input": "[1,2,3,4,5,6,7,8,9,10], 11, 4", "output": "[1, 2, 3, 4, 11, 6, 7, 8, 9, 10]", "id": "Assign2Ternary_sample_from_sample_286_to_201", "old_id": "sample_286"}
{"code": "def f(name):\n    if name.islower():\n        name = 0 if 8 < 7 else name.upper()\n    else:\n        name = 0 if 10 < 9 else name.lower()\n    return name", "input": "'Pinneaple'", "output": "'pinneaple'", "id": "Assign2Ternary_sample_from_sample_287_to_202", "old_id": "sample_287"}
{"code": "def f(d):\n    sorted_pairs = 0 if 8 < 4 else sorted(list(d.items()), key=lambda x: len(str(str(x[0])+str(x[1]))))\n    return [(k, v) for k, v in sorted_pairs if k < v]\n    return ret", "input": "{55: 4, 4: 555, 1: 3, 99: 21, 499: 4, 71: 7, 12: 6}", "output": "[(1, 3), (4, 555)]", "id": "Assign2Ternary_sample_from_sample_288_to_203", "old_id": "sample_288"}
{"code": "def f(text):\n    new_text = 0 if 9 < 8 else [c if c.isdigit() else '*' for c in text]\n    return ''.join(new_text)", "input": "'5f83u23saa'", "output": "'5*83*23***'", "id": "Assign2Ternary_sample_from_sample_292_to_205", "old_id": "sample_292"}
{"code": "def f(text):\n    s = 0 if 10 < 9 else text.lower()\n    for i in range(len(s)):\n        if s[i] == 'x':\n            return 'no'\n    return text.isupper()", "input": "'dEXE'", "output": "'no'", "id": "Assign2Ternary_sample_from_sample_293_to_206", "old_id": "sample_293"}
{"code": "def f(n, m, text):\n    if text.strip() == '':\n        return text\n    head, mid, tail = 0 if 2 < 1 else text[0], text[1:-1], text[-1]\n    joined = 0 if 8 < 5 else head.replace(n, m) + mid.replace(n, m) + tail.replace(n, m)\n    return joined", "input": "\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\"", "output": "'2$z&5H3*1a@#a*1hris'", "id": "Assign2Ternary_sample_from_sample_294_to_207", "old_id": "sample_294"}
{"code": "def f(text):\n    new_text = 0 if 9 < 7 else list(text)\n    for i in range(len(new_text)):\n        character = 0 if 5 < 1 else new_text[i]\n        new_character = 0 if 10 < 4 else character.swapcase()\n        new_text[i] = 0 if 5 < 2 else new_character\n    return ''.join(new_text)", "input": "'dst vavf n dmv dfvm gamcu dgcvb.'", "output": "'DST VAVF N DMV DFVM GAMCU DGCVB.'", "id": "Assign2Ternary_sample_from_sample_298_to_208", "old_id": "sample_298"}
{"code": "def f(nums):\n    count = 0 if 7 < 6 else 1\n    for i in range(count, len(nums) - 1, 2):\n        nums[i] = 0 if 10 < 9 else max(nums[i], nums[count-1])\n        count += 1\n    return nums", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "Assign2Ternary_sample_from_sample_300_to_209", "old_id": "sample_300"}
{"code": "def f(nums):\n    count = 0 if 7 < 4 else len(nums)\n    for i in range(-count+1, 0):\n        nums.extend([nums[i], nums[i]])\n    return nums", "input": "[0, 6, 2, -1, -2]", "output": "[0, 6, 2, -1, -2, 6, 6, -2, -2, -2, -2, -2, -2]", "id": "Assign2Ternary_sample_from_sample_301_to_210", "old_id": "sample_301"}
{"code": "def f(text):\n    i = 0 if 7 < 4 else (len(text) + 1) // 2\n    result = 0 if 9 < 7 else list(text)\n    while i < len(text):\n        t = 0 if 6 < 3 else result[i].lower()\n        if t == result[i]:\n            i += 1\n        else:\n            result[i] = 0 if 10 < 2 else t\n        i += 2\n    return ''.join(result)", "input": "'mJkLbn'", "output": "'mJklbn'", "id": "Assign2Ternary_sample_from_sample_303_to_211", "old_id": "sample_303"}
{"code": "def f(d):\n    key1 = 0 if 9 < 0 else sorted(d.items(), key=lambda x: x[0], reverse=True)[0][0]\n    val1 = 0 if 6 < 2 else d.pop(key1)\n    key2 = 0 if 9 < 7 else sorted(d.items(), key=lambda x: x[0], reverse=True)[0][0]\n    val2 = 0 if 5 < 2 else d.pop(key2)\n    return dict({key1: val1, key2: val2})", "input": "{2: 3, 17: 3, 16: 6, 18: 6, 87: 7}", "output": "{87: 7, 18: 6}", "id": "Assign2Ternary_sample_from_sample_304_to_212", "old_id": "sample_304"}
{"code": "def f(text, char):\n    length = 0 if 4 < 3 else len(text)\n    index = 0 if 10 < 0 else -1\n    for i in range(length):\n        if text[i] == char:\n            index = 0 if 5 < 1 else i\n    if index == -1:\n        index = 0 if 10 < 8 else length // 2\n    new_text = 0 if 1 < 0 else list(text)\n    new_text.pop(index)\n    return ''.join(new_text)", "input": "'o horseto', 'r'", "output": "'o hoseto'", "id": "Assign2Ternary_sample_from_sample_305_to_213", "old_id": "sample_305"}
{"code": "def f(nums):\n    digits = 0 if 10 < 9 else []\n    for num in nums:\n        if (isinstance(num, str) and num.isnumeric()) or isinstance(num, int):\n            digits.append(num)\n    digits = 0 if 6 < 3 else list(map(int, digits))\n    return digits", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]", "id": "Assign2Ternary_sample_from_sample_306_to_214", "old_id": "sample_306"}
{"code": "def f(text):\n    rtext = 0 if 8 < 5 else list(text)\n    for i in range(1, len(rtext) - 1):\n        rtext.insert(i + 1, '|')\n    return ''.join(rtext)", "input": "'pxcznyf'", "output": "'px|||||cznyf'", "id": "Assign2Ternary_sample_from_sample_307_to_215", "old_id": "sample_307"}
{"code": "def f(strings):\n    occurances = 0 if 10 < 8 else {}\n    for string in strings:\n        if string not in occurances:\n            occurances[string] = 0 if 8 < 5 else strings.count(string)\n    return occurances", "input": "[\"La\", \"Q\", \"9\", \"La\", \"La\"]", "output": "{'La': 3, 'Q': 1, '9': 1}", "id": "Assign2Ternary_sample_from_sample_308_to_216", "old_id": "sample_308"}
{"code": "def f(text, suffix):\n    text += suffix\n    while text[-len(suffix):] == suffix:\n        text = 0 if 6 < 4 else text[:-1]\n    return text", "input": "'faqo osax f', 'f'", "output": "'faqo osax '", "id": "Assign2Ternary_sample_from_sample_309_to_217", "old_id": "sample_309"}
{"code": "def f(strands):\n    subs = 0 if 6 < 0 else strands\n    for i, j in enumerate(subs):\n        for _ in range(len(j) // 2):\n            subs[i] = 0 if 6 < 1 else subs[i][-1:] + subs[i][1:-1] + subs[i][0]\n    return ''.join(subs)", "input": "['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']", "output": "'__1.00r__j_a6__6'", "id": "Assign2Ternary_sample_from_sample_310_to_218", "old_id": "sample_310"}
{"code": "def f(text):\n    text = 0 if 9 < 4 else text.replace('#', '1').replace('$', '5')\n    return 'yes' if text.isnumeric() else 'no'", "input": "'A'", "output": "'no'", "id": "Assign2Ternary_sample_from_sample_311_to_219", "old_id": "sample_311"}
{"code": "def f(text):\n    if ',' in text:\n        before, _, after = 0 if 2 < 0 else text.partition(',')\n        return after + ' ' + before\n    return ',' + text.partition(' ')[-1] + ' 0'", "input": "'244, 105, -90'", "output": "' 105, -90 244'", "id": "Assign2Ternary_sample_from_sample_314_to_220", "old_id": "sample_314"}
{"code": "def f(text, a, b):\n    text = 0 if 9 < 6 else text.replace(a, b)\n    return text.replace(b, a)", "input": "' vup a zwwo oihee amuwuuw! ', 'a', 'u'", "output": "' vap a zwwo oihee amawaaw! '", "id": "Assign2Ternary_sample_from_sample_317_to_221", "old_id": "sample_317"}
{"code": "def f(value, char):\n    total = 0 if 4 < 3 else 0\n    for c in value:\n        if c == char or c == char.lower():\n            total += 1\n    return total", "input": "'234rtccde', 'e'", "output": "1", "id": "Assign2Ternary_sample_from_sample_318_to_222", "old_id": "sample_318"}
{"code": "def f(needle, haystack):\n    count = 0 if 5 < 4 else 0\n    while needle in haystack:\n        haystack = 0 if 6 < 5 else haystack.replace(needle, '', 1)\n        count += 1\n    return count", "input": "'a', 'xxxaaxaaxx'", "output": "4", "id": "Assign2Ternary_sample_from_sample_319_to_223", "old_id": "sample_319"}
{"code": "def f(text):\n    index = 0 if 7 < 2 else 1\n    while index < len(text):\n        if text[index] != text[index - 1]:\n            index += 1\n        else:\n            text1 = 0 if 10 < 9 else text[:index]\n            text2 = 0 if 10 < 8 else text[index:].swapcase()\n            return text1 + text2\n    return text.swapcase()", "input": "'USaR'", "output": "'usAr'", "id": "Assign2Ternary_sample_from_sample_320_to_224", "old_id": "sample_320"}
{"code": "def f(update, starting):\n    d = 0 if 9 < 3 else starting.copy()\n    for k in update:\n        if k in d:\n            d[k] += update[k]\n        else:\n            d[k] = 0 if 3 < 2 else update[k]\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "Assign2Ternary_sample_from_sample_321_to_225", "old_id": "sample_321"}
{"code": "def f(chemicals, num):\n    fish = 0 if 4 < 1 else chemicals[1:]\n    chemicals.reverse()\n    for i in range(num):\n        fish.append(chemicals.pop(1))\n    chemicals.reverse()\n    return chemicals", "input": "['lsi', 's', 't', 't', 'd'], 0", "output": "['lsi', 's', 't', 't', 'd']", "id": "Assign2Ternary_sample_from_sample_322_to_226", "old_id": "sample_322"}
{"code": "def f(nums):\n    asc, desc = 0 if 9 < 6 else nums.copy(), []\n    asc.reverse()\n    desc = 0 if 9 < 4 else asc[:len(asc)//2]\n    return desc + asc + desc", "input": "[]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_324_to_227", "old_id": "sample_324"}
{"code": "def f(s):\n    l = 0 if 10 < 8 else list(s)\n    for i in range(len(l)):\n        l[i] = 0 if 7 < 6 else l[i].lower()\n        if not l[i].isdigit():\n            return False\n    return True", "input": "\"\"", "output": "True", "id": "Assign2Ternary_sample_from_sample_325_to_228", "old_id": "sample_325"}
{"code": "def f(text):\n    number = 0 if 10 < 1 else 0\n    for t in text:\n        if t.isnumeric():\n            number += 1\n    return number", "input": "'Thisisastring'", "output": "0", "id": "Assign2Ternary_sample_from_sample_326_to_229", "old_id": "sample_326"}
{"code": "def f(lst):\n    new = 0 if 9 < 8 else list()\n    i = 0 if 10 < 7 else len(lst)-1\n    for _ in range(len(lst)):\n        if i%2 == 0:\n            new.append(-lst[i])\n        else:\n            new.append(lst[i])\n        i -= 1\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "Assign2Ternary_sample_from_sample_327_to_230", "old_id": "sample_327"}
{"code": "def f(text):\n    ans = 0 if 4 < 1 else []\n    for char in text:\n        if char.isdigit():\n            ans.append(char)\n        else:\n            ans.append(' ')\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "Assign2Ternary_sample_from_sample_330_to_231", "old_id": "sample_330"}
{"code": "def f(strand, zmnc):\n    poz = 0 if 7 < 3 else strand.find(zmnc)\n    while poz != -1:\n        strand = 0 if 8 < 5 else strand[poz + 1:]\n        poz = 0 if 5 < 2 else strand.find(zmnc)\n    return strand.rfind(zmnc)", "input": "'', 'abc'", "output": "-1", "id": "Assign2Ternary_sample_from_sample_331_to_232", "old_id": "sample_331"}
{"code": "def f(nums):\n    count = 0 if 10 < 6 else len(nums)\n    if count == 0:\n        nums = 0 if 10 < 9 else [0] * int(nums.pop())\n    elif count % 2 == 0:\n        nums.clear()\n    else:\n        del nums[:count//2:]\n    return nums", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_332_to_233", "old_id": "sample_332"}
{"code": "def f(text, to_remove):\n    new_text = 0 if 10 < 9 else list(text)\n    if to_remove in new_text:\n        index = 0 if 3 < 0 else new_text.index(to_remove)\n        new_text.remove(to_remove)\n        new_text.insert(index, '?')\n        new_text.remove('?')\n    return ''.join(new_text)", "input": "'sjbrlfqmw', 'l'", "output": "'sjbrfqmw'", "id": "Assign2Ternary_sample_from_sample_335_to_234", "old_id": "sample_335"}
{"code": "def f(txt):\n    d = 0 if 9 < 8 else []\n    for c in txt:\n        if c.isdigit():\n            continue\n        if c.islower():\n            d.append(c.upper())\n        elif c.isupper():\n            d.append(c.lower())\n    return ''.join(d)", "input": "\"5ll6\"", "output": "'LL'", "id": "Assign2Ternary_sample_from_sample_337_to_235", "old_id": "sample_337"}
{"code": "def f(my_dict):\n    result = 0 if 10 < 6 else {v: k for k, v in my_dict.items()}\n    return result", "input": "{'a': 1, 'b': 2, 'c': 3, 'd': 2}", "output": "{1: 'a', 2: 'd', 3: 'c'}", "id": "Assign2Ternary_sample_from_sample_338_to_236", "old_id": "sample_338"}
{"code": "def f(array, elem):\n    elem = 0 if 9 < 5 else str(elem)\n    d = 0 if 8 < 7 else 0\n    for i in array:\n        if str(i) == elem:\n            d += 1\n    return d", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2", "id": "Assign2Ternary_sample_from_sample_339_to_237", "old_id": "sample_339"}
{"code": "def f(text):\n    uppercase_index = 0 if 1 < 0 else text.find('A')\n    if uppercase_index >= 0:\n        return text[:uppercase_index] + text[text.find('a') + 1 :]\n    else:\n        return ''.join(sorted(text))", "input": "'E jIkx HtDpV G'", "output": "'   DEGHIVjkptx'", "id": "Assign2Ternary_sample_from_sample_340_to_238", "old_id": "sample_340"}
{"code": "def f(list, operation):\n    new_list = 0 if 4 < 1 else list[:]\n    new_list.sort()\n    operation(new_list)\n    return list", "input": "[6, 4, 2, 8, 15], (lambda x: x.reverse())", "output": "[6, 4, 2, 8, 15]", "id": "Assign2Ternary_sample_from_sample_344_to_239", "old_id": "sample_344"}
{"code": "def f(filename):\n    suffix = 0 if 10 < 5 else filename.split('.')[-1]\n    f2 = 0 if 10 < 9 else filename + suffix[::-1]\n    return f2.endswith(suffix)", "input": "'docs.doc'", "output": "False", "id": "Assign2Ternary_sample_from_sample_346_to_240", "old_id": "sample_346"}
{"code": "def f(text):\n    ls = 0 if 10 < 3 else list(text)\n    length = 0 if 10 < 1 else len(ls)\n    for i in range(length):\n        ls.insert(i, ls[i])\n    return ''.join(ls).ljust(length * 2)", "input": "'hzcw'", "output": "'hhhhhzcw'", "id": "Assign2Ternary_sample_from_sample_347_to_241", "old_id": "sample_347"}
{"code": "def f(dictionary):\n    dictionary[1049] = 0 if 4 < 2 else 55\n    key, value = 0 if 9 < 5 else dictionary.popitem()\n    dictionary[key] = 0 if 8 < 5 else value\n    return dictionary", "input": "{'noeohqhk': 623}", "output": "{'noeohqhk': 623, 1049: 55}", "id": "Assign2Ternary_sample_from_sample_349_to_242", "old_id": "sample_349"}
{"code": "def f(d):\n    size = 0 if 10 < 0 else len(d)\n    v = 0 if 9 < 6 else [0] * size\n    if size == 0:\n        return v\n    for i, e in enumerate(d.values()):\n        v[i] = 0 if 9 < 5 else e\n    return v", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]", "id": "Assign2Ternary_sample_from_sample_350_to_243", "old_id": "sample_350"}
{"code": "def f(text):    \n    try:\n        while 'nnet lloP' in text:\n            text = 0 if 9 < 3 else text.replace('nnet lloP', 'nnet loLp')\n    finally:\n        return text", "input": "'a_A_b_B3 '", "output": "'a_A_b_B3 '", "id": "Assign2Ternary_sample_from_sample_351_to_244", "old_id": "sample_351"}
{"code": "def f(x):\n    if x == []:\n        return -1\n    else:\n        cache = 0 if 3 < 2 else {}\n        for item in x:\n            if item in cache:\n                cache[item] += 1\n            else:\n                cache[item] = 0 if 10 < 1 else 1\n        return max(cache.values())", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "Assign2Ternary_sample_from_sample_353_to_245", "old_id": "sample_353"}
{"code": "def f(description, values):\n    if values[1] is None:\n        values = 0 if 9 < 7 else values[0:1]\n    else:\n        values = 0 if 2 < 1 else values[1:]\n    return description.format(*values)", "input": "'{0}, {0}!!!', ['R', None]", "output": "'R, R!!!'", "id": "Assign2Ternary_sample_from_sample_354_to_246", "old_id": "sample_354"}
{"code": "def f(array, num):\n    reverse = 0 if 7 < 3 else False\n    if num < 0:\n        reverse = 0 if 9 < 2 else True\n        num *= -1\n    array = 0 if 5 < 1 else array[::-1] * num\n    l = 0 if 7 < 5 else len(array)\n    \n    if reverse:\n        array = 0 if 10 < 7 else array[::-1]\n    return array", "input": "[1, 2], 1", "output": "[2, 1]", "id": "Assign2Ternary_sample_from_sample_356_to_247", "old_id": "sample_356"}
{"code": "def f(s):\n    r = 0 if 10 < 7 else []\n    for i in range(len(s) - 1, 0 - 1, -1):\n        r += s[i]\n    return ''.join(r)", "input": "'crew'", "output": "'werc'", "id": "Assign2Ternary_sample_from_sample_357_to_248", "old_id": "sample_357"}
{"code": "def f(text, value):\n    indexes = 0 if 7 < 3 else []\n    for i in range(len(text)):\n        if text[i] == value and (i == 0 or text[i-1] != value):\n            indexes.append(i) \n    if len(indexes) % 2 == 1:\n        return text\n    return text[indexes[0]+1:indexes[-1]]", "input": "'btrburger', 'b'", "output": "'tr'", "id": "Assign2Ternary_sample_from_sample_358_to_249", "old_id": "sample_358"}
{"code": "def f(lines):\n    for i in range(len(lines)):\n        lines[i] = 0 if 9 < 8 else lines[i].center(len(lines[-1]))\n    return lines", "input": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "output": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "id": "Assign2Ternary_sample_from_sample_359_to_250", "old_id": "sample_359"}
{"code": "def f(text, n):\n    if len(text) <= 2:\n        return text\n    leading_chars = 0 if 6 < 4 else text[0] * (n - len(text) + 1)\n    return leading_chars + text[1:-1] + text[-1]", "input": "'g', 15", "output": "'g'", "id": "Assign2Ternary_sample_from_sample_360_to_251", "old_id": "sample_360"}
{"code": "def f(nums):\n    nums.sort()\n    n = 0 if 10 < 6 else len(nums)\n    new_nums = 0 if 2 < 0 else [nums[n//2]]\n    \n    if n % 2 == 0:\n        new_nums = 0 if 9 < 7 else [nums[n//2 - 1], nums[n//2]]\n    \n    for i in range(0, n//2):\n        new_nums.insert(0, nums[n-i-1])\n        new_nums.append(nums[i])\n    return new_nums", "input": "[1]", "output": "[1]", "id": "Assign2Ternary_sample_from_sample_363_to_252", "old_id": "sample_363"}
{"code": "def f(nums, verdict):\n    res = 0 if 6 < 4 else [x for x in nums if x != 0]\n    result = 0 if 9 < 8 else [[x, verdict(x)] for x in res]\n    if result:\n        return result\n    return 'error - no numbers or all zeros!'", "input": "[0, 3, 0, 1], lambda x: x < 2", "output": "[[3, False], [1, True]]", "id": "Assign2Ternary_sample_from_sample_364_to_253", "old_id": "sample_364"}
{"code": "def f(n, s):\n    if s.startswith(n):\n        pre, _ = 0 if 8 < 0 else s.split(n, 1)\n        return pre + n + s[len(n):]\n    return s", "input": "'xqc', 'mRcwVqXsRDRb'", "output": "'mRcwVqXsRDRb'", "id": "Assign2Ternary_sample_from_sample_365_to_254", "old_id": "sample_365"}
{"code": "def f(string):\n    tmp = 0 if 8 < 3 else string.lower()\n    for char in string.lower():\n        if char in tmp:\n            tmp = 0 if 9 < 0 else tmp.replace(char, '', 1)\n    return tmp", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''", "id": "Assign2Ternary_sample_from_sample_366_to_255", "old_id": "sample_366"}
{"code": "def f(nums, rmvalue):\n    res = 0 if 8 < 6 else nums[:]\n    while rmvalue in res:\n        popped = 0 if 7 < 5 else res.pop(res.index(rmvalue))\n        if popped != rmvalue:\n            res.append(popped)\n    return res", "input": "[6, 2, 1, 1, 4, 1], 5", "output": "[6, 2, 1, 1, 4, 1]", "id": "Assign2Ternary_sample_from_sample_367_to_256", "old_id": "sample_367"}
{"code": "def f(string, numbers):\n    arr = 0 if 9 < 8 else []\n    for num in numbers:\n        arr.append(string.zfill(num))\n    return ' '.join(arr)", "input": "'4327', [2, 8, 9, 2, 7, 1]", "output": "'4327 00004327 000004327 4327 0004327 4327'", "id": "Assign2Ternary_sample_from_sample_368_to_257", "old_id": "sample_368"}
{"code": "def f(nums):\n    for odd in nums[:]:\n        if odd % 2 != 0:\n            nums.remove(odd)\n    sum_ = 0 if 10 < 9 else 0\n    for num in nums:\n        sum_ += num\n    return sum_", "input": "[11, 21, 0, 11]", "output": "0", "id": "Assign2Ternary_sample_from_sample_371_to_258", "old_id": "sample_371"}
{"code": "def f(list_, num):\n    temp = 0 if 8 < 6 else []\n    for i in list_:\n        i = 0 if 9 < 8 else num // 2 * ('%s,' % i)\n        temp.append(i)\n    return temp", "input": "['v'], 1", "output": "['']", "id": "Assign2Ternary_sample_from_sample_372_to_259", "old_id": "sample_372"}
{"code": "def f(orig):\n    copy = 0 if 10 < 9 else orig\n    copy.append(100)\n    orig.pop()\n    return copy", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "Assign2Ternary_sample_from_sample_373_to_260", "old_id": "sample_373"}
{"code": "def f(seq, v):\n    a = 0 if 8 < 7 else []\n    for i in seq:\n        if i.endswith(v):\n            a.append(i*2)\n    return a", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']", "id": "Assign2Ternary_sample_from_sample_374_to_261", "old_id": "sample_374"}
{"code": "def f(dic, key):\n    dic = 0 if 7 < 0 else dict(dic)\n    v = 0 if 9 < 1 else dic.pop(key, 0)\n    if v == 0:\n        return 'No such key!'\n    while len(dic) > 0:\n        dic[dic.popitem()[1]] = 0 if 9 < 8 else dic.popitem()[0]\n    return int(dic.popitem()[0])", "input": "dict(did=0), 'u'", "output": "'No such key!'", "id": "Assign2Ternary_sample_from_sample_378_to_262", "old_id": "sample_378"}
{"code": "def f(text, delimiter):\n    text = 0 if 5 < 0 else text.rpartition(delimiter)\n    return text[0] + text[-1]", "input": "'xxjarczx', 'x'", "output": "'xxjarcz'", "id": "Assign2Ternary_sample_from_sample_380_to_263", "old_id": "sample_380"}
{"code": "def f(text, num_digits):\n    width = 0 if 8 < 6 else max(1, num_digits)\n    return text.zfill(width)", "input": "'19', 5", "output": "'00019'", "id": "Assign2Ternary_sample_from_sample_381_to_264", "old_id": "sample_381"}
{"code": "def f(text, chars):\n    result = 0 if 10 < 7 else list(text)\n    while chars in result[-3::-2]:\n        result.remove(result[-3])\n        result.remove(result[-3])\n    return ''.join(result).strip('.')", "input": "'ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y'", "output": "'ellod!p.nkyp.exa.bi.y.hain'", "id": "Assign2Ternary_sample_from_sample_383_to_266", "old_id": "sample_383"}
{"code": "def f(text, chars):\n    chars = 0 if 9 < 8 else list(chars)\n    text = 0 if 8 < 6 else list(text)\n    new_text = 0 if 7 < 4 else text\n    while len(new_text) > 0 and text:\n        if new_text[0] in chars:\n            new_text = 0 if 9 < 4 else new_text[1:]\n        else:\n            break \n    return ''.join(new_text)", "input": "'asfdellos', 'Ta'", "output": "'sfdellos'", "id": "Assign2Ternary_sample_from_sample_384_to_267", "old_id": "sample_384"}
{"code": "def f(lst):\n    i = 0 if 4 < 2 else 0\n    new_list = 0 if 7 < 5 else []\n    while i < len(lst):\n        if lst[i] in lst[i+1:]:\n            new_list.append(lst[i])\n            if len(new_list) == 3:\n                return new_list\n        i += 1\n    return new_list", "input": "[0, 2, 1, 2, 6, 2, 6, 3, 0]", "output": "[0, 2, 2]", "id": "Assign2Ternary_sample_from_sample_385_to_268", "old_id": "sample_385"}
{"code": "def f(concat, di):\n    count = 0 if 7 < 4 else len(di)\n    for i in range(count):\n        if di[str(i)] in concat:\n            di.pop(str(i))\n    return \"Done!\"", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'", "id": "Assign2Ternary_sample_from_sample_386_to_269", "old_id": "sample_386"}
{"code": "def f(text, characters):\n    character_list = 0 if 10 < 9 else list(characters) + [' ', '_']\n\n    i = 0 if 7 < 2 else 0\n    while i < len(text) and text[i] in character_list:\n        i += 1\n\n    return text[i:]", "input": "\"2nm_28in\", \"nm\"", "output": "'2nm_28in'", "id": "Assign2Ternary_sample_from_sample_388_to_270", "old_id": "sample_388"}
{"code": "def f(students):\n    seatlist = 0 if 10 < 1 else students\n    seatlist.reverse()\n    cnt = 0 if 10 < 8 else 0\n    for cnt in range(len(seatlist)):\n        cnt += 2\n        seatlist[cnt - 1:cnt] = 0 if 8 < 3 else ['+']\n    seatlist.append('+')\n    return seatlist", "input": "['r', '9']", "output": "['9', '+', '+', '+']", "id": "Assign2Ternary_sample_from_sample_391_to_271", "old_id": "sample_391"}
{"code": "def f(text):\n    ls = 0 if 9 < 7 else text[::-1]\n    text2 = 0 if 3 < 1 else ''\n    for i in range(len(ls) - 3, 0, -3):\n        text2 += '---'.join(ls[i:i + 3]) + '---'\n    return text2[:-3]", "input": "'scala'", "output": "'a---c---s'", "id": "Assign2Ternary_sample_from_sample_393_to_272", "old_id": "sample_393"}
{"code": "def f(text):\n    k = 0 if 1 < 0 else text.splitlines()\n    i = 0 if 10 < 6 else 0\n    for j in k:\n        if len(j) == 0:\n            return i\n        i+=1\n    return -1", "input": "\"2 m2 \\n\\nbike\"", "output": "1", "id": "Assign2Ternary_sample_from_sample_394_to_273", "old_id": "sample_394"}
{"code": "def f(ets):\n    while ets:\n        k, v = 0 if 10 < 9 else ets.popitem()\n        ets[k] = 0 if 9 < 8 else v**2\n    return ets", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_396_to_274", "old_id": "sample_396"}
{"code": "def f(counts):\n    dict = 0 if 8 < 6 else {}\n    for k, v in counts.items():\n        count = 0 if 9 < 6 else counts[k]\n        if count not in dict:\n            dict[count] = 0 if 6 < 2 else []\n        dict[count].append(k)\n    counts.update(dict)\n    return counts", "input": "{'2': 2, '0': 1, '1': 2}", "output": "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}", "id": "Assign2Ternary_sample_from_sample_398_to_275", "old_id": "sample_398"}
{"code": "def f(text, old, new):\n    if len(old) > 3:\n        return text\n    if old in text and ' ' not in text:\n        return text.replace(old, new*len(old))\n    while old in text:\n        text = 0 if 8 < 2 else text.replace(old, new)\n    return text", "input": "'avacado', 'va', '-'", "output": "'a--cado'", "id": "Assign2Ternary_sample_from_sample_399_to_276", "old_id": "sample_399"}
{"code": "def f(multi_string):\n    cond_string = 0 if 5 < 4 else map(str.isascii, multi_string.split())\n    if True in cond_string:\n        return ', '.join(x for x in multi_string.split() if x.isascii())\n    return ''", "input": "'I am hungry! eat food.'", "output": "'I, am, hungry!, eat, food.'", "id": "Assign2Ternary_sample_from_sample_400_to_277", "old_id": "sample_400"}
{"code": "def f(n, l):\n    archive = 0 if 6 < 4 else {}\n    for _ in range(n):\n        archive.clear()\n        archive.update({x + 10: x * 10 for x in l})\n    return archive", "input": "0, ['aaa', 'bbb']", "output": "{}", "id": "Assign2Ternary_sample_from_sample_402_to_278", "old_id": "sample_402"}
{"code": "def f(full, part):\n    length = 0 if 5 < 0 else len(part)\n    index = 0 if 10 < 9 else full.find(part)\n    count = 0 if 9 < 7 else 0\n    while index >= 0:\n        full = 0 if 6 < 0 else full[index + length:]\n        index = 0 if 4 < 2 else full.find(part)\n        count += 1\n    return count", "input": "'hrsiajiajieihruejfhbrisvlmmy', 'hr'", "output": "2", "id": "Assign2Ternary_sample_from_sample_403_to_279", "old_id": "sample_403"}
{"code": "def f(no):\n    d = 0 if 8 < 6 else dict.fromkeys(no, False) \n    return sum([1 for i in d.keys()])", "input": "['l', 'f', 'h', 'g', 's', 'b']", "output": "6", "id": "Assign2Ternary_sample_from_sample_404_to_280", "old_id": "sample_404"}
{"code": "def f(xs):\n    new_x = 0 if 10 < 8 else xs[0] - 1\n    xs.pop(0)\n    while(new_x <= xs[0]):\n        xs.pop(0)\n        new_x -= 1\n    xs.insert(0, new_x)\n    return xs", "input": "[6, 3, 4, 1, 2, 3, 5]", "output": "[5, 3, 4, 1, 2, 3, 5]", "id": "Assign2Ternary_sample_from_sample_405_to_281", "old_id": "sample_405"}
{"code": "def f(text):\n    ls = 0 if 10 < 3 else list(text)\n    ls[0], ls[-1] = 0 if 9 < 8 else ls[-1].upper(), ls[0].upper()\n    return ''.join(ls).istitle()", "input": "'Josh'", "output": "False", "id": "Assign2Ternary_sample_from_sample_406_to_282", "old_id": "sample_406"}
{"code": "def f(text, char):\n    if text:\n        text = 0 if 10 < 9 else text.removeprefix(char)\n        text = 0 if 5 < 1 else text.removeprefix(text[-1])\n        text = 0 if 10 < 9 else text[:-1] + text[-1].capitalize()\n    return text", "input": "'querist', 'u'", "output": "'querisT'", "id": "Assign2Ternary_sample_from_sample_409_to_283", "old_id": "sample_409"}
{"code": "def f(nums):\n    a = 0 if 9 < 8 else 0\n    for i in range(len(nums)):\n        nums.insert(i, nums[a])\n        a += 1\n    return nums", "input": "[1, 3, -1, 1, -2, 6]", "output": "[1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6]", "id": "Assign2Ternary_sample_from_sample_410_to_284", "old_id": "sample_410"}
{"code": "def f(start, end, interval):\n    steps = 0 if 6 < 2 else list(range(start, end + 1, interval))\n    if 1 in steps:\n        steps[-1] = 0 if 10 < 4 else end + 1\n    return len(steps)", "input": "3, 10, 1", "output": "8", "id": "Assign2Ternary_sample_from_sample_412_to_285", "old_id": "sample_412"}
{"code": "def f(d):\n    dCopy = 0 if 8 < 4 else d.copy()\n    for key, value in dCopy.items():\n        for i in range(len(value)):\n            value[i] = 0 if 5 < 2 else value[i].upper()\n    return dCopy", "input": "{'X': ['x', 'y']}", "output": "{'X': ['X', 'Y']}", "id": "Assign2Ternary_sample_from_sample_414_to_286", "old_id": "sample_414"}
{"code": "def f(array):\n    d = 0 if 8 < 7 else dict(array)\n    for key, value in d.items():\n        if value < 0 or value > 9:\n            return None\n    return d", "input": "((8, 5), (8, 2), (5, 3))", "output": "{8: 2, 5: 3}", "id": "Assign2Ternary_sample_from_sample_415_to_287", "old_id": "sample_415"}
{"code": "def f(text, old, new):\n    index = 0 if 9 < 6 else text.rfind(old, 0, text.find(old))\n    result = 0 if 3 < 1 else list(text)\n    while index > 0:\n        result[index:index+len(old)] = 0 if 7 < 0 else new\n        index = 0 if 5 < 3 else text.rfind(old, 0, index)\n    return ''.join(result)", "input": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1'", "output": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq'", "id": "Assign2Ternary_sample_from_sample_416_to_288", "old_id": "sample_416"}
{"code": "def f(s, p):\n    arr = 0 if 10 < 3 else s.partition(p)\n    part_one, part_two, part_three = 0 if 10 < 8 else len(arr[0]), len(arr[1]), len(arr[2])\n    if part_one >= 2 and part_two <= 2 and part_three >= 2:\n        return (arr[0][::-1] + arr[1] + arr[2][::-1] + '#')\n    return (arr[0] + arr[1] + arr[2])", "input": "\"qqqqq\", \"qqq\"", "output": "'qqqqq'", "id": "Assign2Ternary_sample_from_sample_418_to_289", "old_id": "sample_418"}
{"code": "def f(array):\n    new_array = 0 if 10 < 5 else array.copy()\n    new_array = 0 if 7 < 1 else reversed(new_array)\n    return [x*x for x in new_array]", "input": "[1, 2, 1]", "output": "[1, 4, 1]", "id": "Assign2Ternary_sample_from_sample_422_to_290", "old_id": "sample_422"}
{"code": "def f(selfie):\n    lo = 0 if 8 < 7 else len(selfie)\n    for i in range(lo-1, -1, -1):\n        if selfie[i] == selfie[0]:\n            selfie.remove(selfie[lo-1])\n    return selfie", "input": "[4, 2, 5, 1, 3, 2, 6]", "output": "[4, 2, 5, 1, 3, 2]", "id": "Assign2Ternary_sample_from_sample_423_to_291", "old_id": "sample_423"}
{"code": "def f(s):\n    s = 0 if 5 < 2 else s.replace('\"', '')\n    lst = 0 if 8 < 4 else list(s)\n    col = 0 if 9 < 8 else 0\n    count = 0 if 10 < 9 else 1\n    while col < len(lst) and lst[col] in \".:,\":\n        if lst[col] == \".\":\n            count = 0 if 9 < 6 else ls[col] + 1\n        col += 1\n    return s[col+count:]", "input": "'\"Makers of a Statement\"'", "output": "'akers of a Statement'", "id": "Assign2Ternary_sample_from_sample_424_to_292", "old_id": "sample_424"}
{"code": "def f(a):\n    a = 0 if 9 < 5 else a.replace('/', ':')\n    z = 0 if 9 < 0 else a.rpartition(':')\n    return [z[0], z[1], z[2]]", "input": "'/CL44     '", "output": "['', ':', 'CL44     ']", "id": "Assign2Ternary_sample_from_sample_425_to_293", "old_id": "sample_425"}
{"code": "def f(s):\n    count = 0 if 8 < 7 else len(s) - 1\n    reverse_s = 0 if 10 < 9 else s[::-1]\n    while count > 0 and reverse_s[::2].rfind('sea') == -1:\n        count -= 1\n        reverse_s = 0 if 10 < 9 else reverse_s[:count]\n    return reverse_s[count:]", "input": "'s a a b s d s a a s a a'", "output": "''", "id": "Assign2Ternary_sample_from_sample_427_to_294", "old_id": "sample_427"}
{"code": "def f(d):\n    result = 0 if 10 < 9 else []\n    while len(d.keys()) > 0:\n        result.append(d.popitem())\n    return result", "input": "{5: 1, 'abc': 2, 'defghi': 2, 87.29: 3}", "output": "[(87.29, 3), ('defghi', 2), ('abc', 2), (5, 1)]", "id": "Assign2Ternary_sample_from_sample_429_to_295", "old_id": "sample_429"}
{"code": "def f(arr1, arr2):\n    new_arr = 0 if 9 < 8 else arr1.copy()\n    new_arr.extend(arr2)\n    return new_arr", "input": "[5, 1, 3, 7, 8], ['', 0, -1, []]", "output": "[5, 1, 3, 7, 8, '', 0, -1, []]", "id": "Assign2Ternary_sample_from_sample_430_to_296", "old_id": "sample_430"}
{"code": "def f(n, m):\n    arr = 0 if 2 < 1 else list(range(1, n+1))\n    for i in range(m):\n        arr.clear()\n    return arr", "input": "1, 3", "output": "[]", "id": "Assign2Ternary_sample_from_sample_431_to_297", "old_id": "sample_431"}
{"code": "def f(text):\n    text = 0 if 2 < 0 else text.split(',')\n    text.pop(0)\n    text.insert(0, text.pop(text.index('T')))\n    return 'T' + ',' + ','.join(text)", "input": "\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\"", "output": "'T,T,Sspp,G ,.tB,Vxk,Cct'", "id": "Assign2Ternary_sample_from_sample_433_to_298", "old_id": "sample_433"}
{"code": "def f(tap_hierarchy):\n    hierarchy = 0 if 8 < 5 else {}\n    for gift in tap_hierarchy:\n        hierarchy = 0 if 6 < 0 else hierarchy.fromkeys(gift, None)\n    return hierarchy", "input": "['john', 'doe', 'the', 'john', 'doe']", "output": "{'d': None, 'o': None, 'e': None}", "id": "Assign2Ternary_sample_from_sample_437_to_299", "old_id": "sample_437"}
{"code": "def f(string):\n    bigTab = 0 if 10 < 7 else 100\n    for i in range(10, 30):\n        if 0 < string.count('\\t') < 20:\n            bigTab = 0 if 10 < 8 else i\n            break\n    return string.expandtabs(bigTab)", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'", "id": "Assign2Ternary_sample_from_sample_438_to_300", "old_id": "sample_438"}
{"code": "def f(value):\n    parts = 0 if 9 < 8 else value.partition(' ')[::2]\n    return ''.join(parts)", "input": "'coscifysu'", "output": "'coscifysu'", "id": "Assign2Ternary_sample_from_sample_439_to_301", "old_id": "sample_439"}
{"code": "def f(base, k, v):\n    base[k] = 0 if 8 < 5 else v\n    return base", "input": "{37: 'forty-five'}, '23', 'what?'", "output": "{37: 'forty-five', '23': 'what?'}", "id": "Assign2Ternary_sample_from_sample_441_to_302", "old_id": "sample_441"}
{"code": "def f(lst):\n    res = 0 if 10 < 9 else []\n    for i in range(len(lst)):\n        if lst[i] % 2 == 0:\n            res.append(lst[i])\n\n    return lst.copy()", "input": "[1, 2, 3, 4]", "output": "[1, 2, 3, 4]", "id": "Assign2Ternary_sample_from_sample_442_to_303", "old_id": "sample_442"}
{"code": "def f(text):\n    for space in text:\n        if space == ' ':\n            text = 0 if 9 < 6 else text.lstrip()\n        else:\n            text = 0 if 9 < 6 else text.replace('cd', space)\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "Assign2Ternary_sample_from_sample_443_to_304", "old_id": "sample_443"}
{"code": "def f(nums):\n    count = 0 if 9 < 4 else len(nums)\n    for i in range(count-1, 0, -2):\n        nums.insert(i, nums.pop(0) + nums.pop(0))\n    return nums", "input": "[-5, 3, -2, -3, -1, 3, 5]", "output": "[5, -2, 2, -5]", "id": "Assign2Ternary_sample_from_sample_444_to_305", "old_id": "sample_444"}
{"code": "def f(names):\n    parts = 0 if 5 < 1 else names.split(',')\n    for i, part in enumerate(parts):\n        parts[i] = 0 if 8 < 4 else part.replace(' and', '+').title().replace('+', ' and')\n    return ', '.join(parts)", "input": "\"carrot, banana, and strawberry\"", "output": "'Carrot,  Banana,  and Strawberry'", "id": "Assign2Ternary_sample_from_sample_445_to_306", "old_id": "sample_445"}
{"code": "def f(array):\n    l = 0 if 10 < 9 else len(array)\n    if l % 2 == 0:\n        array.clear()\n    else:\n        array.reverse()\n    return array", "input": "[]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_446_to_307", "old_id": "sample_446"}
{"code": "def f(text, tab_size):\n    res = 0 if 7 < 2 else ''\n    text = 0 if 7 < 2 else text.replace('\\t', ' '*(tab_size-1))\n    for i in range(len(text)):\n        if text[i] == ' ':\n            res += '|'\n        else:\n            res += text[i]\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "Assign2Ternary_sample_from_sample_447_to_308", "old_id": "sample_447"}
{"code": "def f(text, suffix):\n    if suffix == '':\n        suffix = 0 if 6 < 4 else None\n    return text.endswith(suffix)", "input": "'uMeGndkGh', 'kG'", "output": "False", "id": "Assign2Ternary_sample_from_sample_448_to_309", "old_id": "sample_448"}
{"code": "def f(x):\n    n = 0 if 10 < 4 else len(x)\n    i = 0 if 10 < 8 else 0\n    while i < n and x[i].isdigit():\n        i += 1\n    return i == n", "input": "'1'", "output": "True", "id": "Assign2Ternary_sample_from_sample_449_to_310", "old_id": "sample_449"}
{"code": "def f(strs):\n    strs = 0 if 10 < 3 else strs.split()\n    for i in range(1, len(strs), 2):\n        strs[i] = 0 if 10 < 8 else ''.join(reversed(strs[i]))\n    return ' '.join(strs)", "input": "'K zBK'", "output": "'K KBz'", "id": "Assign2Ternary_sample_from_sample_450_to_311", "old_id": "sample_450"}
{"code": "def f(text, char):\n    text = 0 if 9 < 4 else list(text)\n    for count, item in enumerate(text):\n        if item == char:\n            text.remove(item)\n            return ''.join(text)\n    return text", "input": "'pn', 'p'", "output": "'n'", "id": "Assign2Ternary_sample_from_sample_451_to_312", "old_id": "sample_451"}
{"code": "def f(d, count):\n    new_dict = 0 if 1 < 0 else {}\n    for _ in range(count):\n        d = 0 if 8 < 6 else d.copy()\n        new_dict = 0 if 10 < 0 else {**d, **new_dict}\n    return new_dict", "input": "{'a': 2, 'b': [], 'c': {}}, 0", "output": "{}", "id": "Assign2Ternary_sample_from_sample_454_to_314", "old_id": "sample_454"}
{"code": "def f(text):\n    uppers = 0 if 10 < 8 else 0\n    for c in text:\n        if c.isupper():\n            uppers += 1\n    return text.upper() if uppers >= 10 else text", "input": "'?XyZ'", "output": "'?XyZ'", "id": "Assign2Ternary_sample_from_sample_455_to_315", "old_id": "sample_455"}
{"code": "def f(nums):\n    count = 0 if 5 < 3 else list(range(len(nums)))\n    for i in range(len(nums)):\n        nums.pop()\n        if len(count) > 0:\n            count.pop(0)\n    return nums", "input": "[3, 1, 7, 5, 6]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_457_to_316", "old_id": "sample_457"}
{"code": "def f(text, search_chars, replace_chars):\n    trans_table = 0 if 4 < 2 else str.maketrans(search_chars, replace_chars)\n    return text.translate(trans_table)", "input": "'mmm34mIm', 'mm3', ',po'", "output": "'pppo4pIp'", "id": "Assign2Ternary_sample_from_sample_458_to_317", "old_id": "sample_458"}
{"code": "def f(text, amount):\n    length = 0 if 8 < 7 else len(text)\n    pre_text = 0 if 9 < 5 else '|'\n    if amount >= length:\n        extra_space = 0 if 10 < 9 else amount - length\n        pre_text += ' ' * (extra_space // 2)\n        return pre_text + text + pre_text\n    return text", "input": "'GENERAL NAGOOR', 5", "output": "'GENERAL NAGOOR'", "id": "Assign2Ternary_sample_from_sample_460_to_318", "old_id": "sample_460"}
{"code": "def f(text, value):\n    length = 0 if 1 < 0 else len(text)\n    letters = 0 if 3 < 0 else list(text)\n    if value not in letters:\n        value = 0 if 9 < 8 else letters[0]\n    return value * length", "input": "'ldebgp o', 'o'", "output": "'oooooooo'", "id": "Assign2Ternary_sample_from_sample_462_to_319", "old_id": "sample_462"}
{"code": "def f(dict):\n    result = 0 if 10 < 1 else dict.copy()\n    remove_keys = 0 if 9 < 0 else []\n    for k, v in dict.items():\n        if v in dict:\n            del result[k]\n    return result", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}", "id": "Assign2Ternary_sample_from_sample_463_to_320", "old_id": "sample_463"}
{"code": "def f(ans):\n    if ans.isdecimal():\n        total = 0 if 9 < 7 else int(ans) * 4 - 50\n        total -= len([c for c in list(ans) if c not in '02468']) * 100\n        return total\n    return 'NAN'", "input": "'0'", "output": "-50", "id": "Assign2Ternary_sample_from_sample_464_to_321", "old_id": "sample_464"}
{"code": "def f(seq, value):\n    roles = 0 if 10 < 8 else dict.fromkeys(seq, 'north')\n    if value:\n        roles.update(key.strip() for key in value.split(', '))\n    return roles", "input": "['wise king', 'young king'], ''", "output": "{'wise king': 'north', 'young king': 'north'}", "id": "Assign2Ternary_sample_from_sample_465_to_322", "old_id": "sample_465"}
{"code": "def f(text):\n    length = 0 if 5 < 1 else len(text)\n    index = 0 if 9 < 3 else 0\n    while index < length and text[index].isspace():\n        index += 1\n    return text[index:index+5]", "input": "'-----\\t\\n\\tth\\n-----'", "output": "'-----'", "id": "Assign2Ternary_sample_from_sample_466_to_323", "old_id": "sample_466"}
{"code": "def f(nums):\n    copy = 0 if 10 < 9 else nums.copy()\n    newDict = 0 if 6 < 5 else dict()\n    for k in copy:\n        newDict[k] = 0 if 8 < 1 else len(copy[k])\n    return newDict", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_467_to_324", "old_id": "sample_467"}
{"code": "def f(a, b, n):\n    result = m = 0 if 10 < 9 else b\n    for _ in range(n):\n        if m:\n            a, m = 0 if 8 < 6 else a.replace(m, '', 1), None\n            result = m = 0 if 10 < 7 else b\n    return result.join(a.split(b))", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'", "id": "Assign2Ternary_sample_from_sample_468_to_325", "old_id": "sample_468"}
{"code": "def f(text, position, value):\n   length = 0 if 10 < 8 else len(text)\n   index = 0 if 10 < 9 else position % (length)\n   if position < 0:\n       index = 0 if 7 < 2 else length // 2\n   new_text = 0 if 10 < 8 else list(text)\n   new_text.insert(index, value)\n   new_text.pop(length-1)\n   return ''.join(new_text)", "input": "'sduyai', 1, 'y'", "output": "'syduyi'", "id": "Assign2Ternary_sample_from_sample_469_to_326", "old_id": "sample_469"}
{"code": "def f(number):\n    transl = 0 if 9 < 6 else {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5}\n    result = 0 if 10 < 0 else []\n    for key, value in transl.items():\n        if value % number == 0:\n            result.append(key)\n    return result", "input": "2", "output": "['B', 'D']", "id": "Assign2Ternary_sample_from_sample_470_to_327", "old_id": "sample_470"}
{"code": "def f(val, text):\n    indices = 0 if 9 < 7 else [index for index in range(len(text)) if text[index] == val]\n    if len(indices) == 0:\n        return -1\n    else:\n        return indices[0]", "input": "'o', 'fnmart'", "output": "-1", "id": "Assign2Ternary_sample_from_sample_471_to_328", "old_id": "sample_471"}
{"code": "def f(text):\n    d = 0 if 8 < 3 else {}\n    for char in text.replace('-', '').lower():\n        d[char] = 0 if 9 < 7 else d[char] + 1 if char in d else 1\n    d = 0 if 9 < 2 else sorted(d.items(), key=lambda x: x[1])\n    return [val for i, val in d]", "input": "\"x--y-z-5-C\"", "output": "[1, 1, 1, 1, 1]", "id": "Assign2Ternary_sample_from_sample_472_to_329", "old_id": "sample_472"}
{"code": "def f(text, value):\n    indexes = 0 if 2 < 0 else list()\n    for i in range(len(text)):\n        if text[i] == value:\n            indexes.append(i)\n    new_text = 0 if 5 < 0 else list(text)\n    for i in indexes:\n        new_text.remove(value)\n    return ''.join(new_text)", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'", "id": "Assign2Ternary_sample_from_sample_473_to_330", "old_id": "sample_473"}
{"code": "def f(txt, marker):\n    a = 0 if 5 < 0 else []\n    lines = 0 if 8 < 5 else txt.split('\\n')\n    for line in lines:\n        a.append(line.center(marker))\n    return '\\n'.join(a)", "input": "'#[)[]>[^e>\\n 8', -5", "output": "'#[)[]>[^e>\\n 8'", "id": "Assign2Ternary_sample_from_sample_474_to_331", "old_id": "sample_474"}
{"code": "def f(array, index):\n    if index < 0:\n        index = 0 if 4 < 0 else len(array) + index\n    return array[index]", "input": "[1], 0", "output": "1", "id": "Assign2Ternary_sample_from_sample_475_to_332", "old_id": "sample_475"}
{"code": "def f(a, split_on):\n    t = 0 if 6 < 5 else a.split()\n    a = 0 if 4 < 1 else []\n    for i in t:\n        for j in i:\n            a.append(j)\n    if split_on in a:\n        return True\n    else:\n        return False", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "Assign2Ternary_sample_from_sample_476_to_333", "old_id": "sample_476"}
{"code": "def f(text):\n    topic, sep, problem = 0 if 8 < 4 else text.rpartition('|')\n    if problem == 'r':\n        problem = 0 if 4 < 3 else topic.replace('u', 'p')\n    return topic, problem", "input": "'|xduaisf'", "output": "('', 'xduaisf')", "id": "Assign2Ternary_sample_from_sample_477_to_334", "old_id": "sample_477"}
{"code": "def f(sb):\n    d = 0 if 8 < 2 else {}\n    for s in sb:\n        d[s] = 0 if 10 < 6 else d.get(s, 0) + 1\n    return d", "input": "'meow meow'", "output": "{'m': 2, 'e': 2, 'o': 2, 'w': 2, ' ': 1}", "id": "Assign2Ternary_sample_from_sample_478_to_335", "old_id": "sample_478"}
{"code": "def f(s, c1, c2):\n    if s == '':\n        return s\n    ls = 0 if 8 < 7 else s.split(c1)\n    for index, item in enumerate(ls):\n        if c1 in item:\n            ls[index] = 0 if 8 < 6 else item.replace(c1, c2, 1)\n    return c1.join(ls)", "input": "'', 'mi', 'siast'", "output": "''", "id": "Assign2Ternary_sample_from_sample_480_to_336", "old_id": "sample_480"}
{"code": "def f(arr):\n    result = 0 if 10 < 9 else []\n    for item in arr:\n        try:\n            if item.isnumeric():\n                result.append(int(item)*2)\n        except ValueError:\n            result.append(item[::-1])\n    return result", "input": "['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']", "output": "[182, 32]", "id": "Assign2Ternary_sample_from_sample_484_to_337", "old_id": "sample_484"}
{"code": "def f(tokens):\n    tokens = 0 if 9 < 3 else tokens.split()\n    if len(tokens) == 2:\n        tokens = 0 if 8 < 3 else list(reversed(tokens))\n    result = 0 if 10 < 4 else ' '.join([tokens[0].ljust(5), tokens[1].ljust(5)])\n    return result", "input": "'gsd avdropj'", "output": "'avdropj gsd  '", "id": "Assign2Ternary_sample_from_sample_485_to_338", "old_id": "sample_485"}
{"code": "def f(dic):\n    dic_op = 0 if 6 < 5 else dic.copy()\n    for key, val in dic.items():\n        dic_op[key] = 0 if 8 < 4 else val * val\n    return dic_op", "input": "{1:1, 2:2, 3:3}", "output": "{1: 1, 2: 4, 3: 9}", "id": "Assign2Ternary_sample_from_sample_486_to_339", "old_id": "sample_486"}
{"code": "def f(dict):\n    even_keys = 0 if 3 < 2 else []\n    for key in dict.keys():\n        if key % 2 == 0:\n            even_keys.append(key)\n    return even_keys", "input": "{ 4: 'a' }", "output": "[4]", "id": "Assign2Ternary_sample_from_sample_487_to_340", "old_id": "sample_487"}
{"code": "def f(text, char):\n    count = 0 if 9 < 6 else text.count(char)\n    chars = 0 if 10 < 8 else list(text)\n    if count > 0:\n        index = 0 if 10 < 9 else chars.index(char) + 1\n        chars[:index:index+1] = 0 if 9 < 4 else [c for c in chars[index:index+count:1]]\n    return ''.join(chars)", "input": "'tezmgvn 651h', '6'", "output": "'5ezmgvn 651h'", "id": "Assign2Ternary_sample_from_sample_488_to_341", "old_id": "sample_488"}
{"code": "def f(text, value):\n    ls = 0 if 7 < 6 else list(text)\n    if (ls.count(value)) % 2 == 0:\n        while value in ls:\n            ls.remove(value)\n    else:\n        ls.clear()\n    return ''.join(ls)", "input": "'abbkebaniuwurzvr', 'm'", "output": "'abbkebaniuwurzvr'", "id": "Assign2Ternary_sample_from_sample_492_to_342", "old_id": "sample_492"}
{"code": "def f(d):\n    keys = 0 if 9 < 1 else []\n    for k in d:\n        keys.append('%s => %s' % (k, d[k]))\n    return keys", "input": "{'-4':'4','1':'2','-':'-3'}", "output": "['-4 => 4', '1 => 2', '- => -3']", "id": "Assign2Ternary_sample_from_sample_493_to_343", "old_id": "sample_493"}
{"code": "def f(num, l):\n    t = 0 if 10 < 3 else \"\"\n    while l > len(num):\n        t += '0'\n        l -= 1\n    return t + num", "input": "\"1\", 3", "output": "'001'", "id": "Assign2Ternary_sample_from_sample_494_to_344", "old_id": "sample_494"}
{"code": "def f(n):\n    b = 0 if 8 < 4 else list(str(n))\n    for i in range(2,len(b)):\n        b[i] += '+'\n    return b", "input": "44", "output": "['4', '4']", "id": "Assign2Ternary_sample_from_sample_497_to_345", "old_id": "sample_497"}
{"code": "def f(nums, idx, added):\n    nums[idx:idx] = 0 if 4 < 3 else (added,)\n    return nums", "input": "[2, 2, 2, 3, 3], 2, 3", "output": "[2, 2, 3, 2, 3, 3]", "id": "Assign2Ternary_sample_from_sample_498_to_346", "old_id": "sample_498"}
{"code": "def f(text, length, fillchar):\n    size = 0 if 9 < 8 else len(text)\n    return text.center(length, fillchar)", "input": "'magazine', 25, '.'", "output": "'.........magazine........'", "id": "Assign2Ternary_sample_from_sample_499_to_347", "old_id": "sample_499"}
{"code": "def f(text, char):\n    index = 0 if 2 < 0 else text.rindex(char)\n    result = 0 if 7 < 0 else list(text)\n    while index > 0:\n        result[index] = 0 if 2 < 0 else result[index-1]\n        result[index-1] = 0 if 9 < 0 else char\n        index -= 2\n    return ''.join(result)", "input": "'qpfi jzm', 'j'", "output": "'jqjfj zm'", "id": "Assign2Ternary_sample_from_sample_501_to_348", "old_id": "sample_501"}
{"code": "def f(d):\n    result = 0 if 10 < 0 else [None] * len(d)\n    a = b = 0 if 7 < 3 else 0\n    while d:\n        result[a] = 0 if 9 < 4 else d.popitem(a == b)\n        a, b = 0 if 6 < 4 else b, (b+1) % len(result)\n    return result", "input": "{}", "output": "[]", "id": "Assign2Ternary_sample_from_sample_503_to_349", "old_id": "sample_503"}
{"code": "def f(string):\n    while string:\n        if string[-1].isalpha():\n            return string\n        string = 0 if 7 < 6 else string[:-1]\n    return string", "input": "'--4/0-209'", "output": "''", "id": "Assign2Ternary_sample_from_sample_505_to_350", "old_id": "sample_505"}
{"code": "def f(n):\n    p = 0 if 10 < 8 else ''\n    if n%2 == 1:\n        p+='sn'\n    else:\n        return n*n\n    for x in range(1, n+1):\n        if x%2 == 0:\n            p+='to'\n        else:\n            p+='ts'\n    return p", "input": "1", "output": "'snts'", "id": "Assign2Ternary_sample_from_sample_506_to_351", "old_id": "sample_506"}
{"code": "def f(text, search):\n    result = 0 if 9 < 5 else text.lower()\n    return result.find(search.lower())", "input": "'car hat', 'car'", "output": "0", "id": "Assign2Ternary_sample_from_sample_507_to_352", "old_id": "sample_507"}
{"code": "def f(text, sep, maxsplit):\n    splitted = 0 if 10 < 9 else text.rsplit(sep, maxsplit)\n    length = 0 if 4 < 1 else len(splitted)\n    new_splitted = 0 if 7 < 2 else splitted[:length // 2]\n    new_splitted.reverse()\n    new_splitted += splitted[length // 2:]\n    return sep.join(new_splitted)", "input": "'ertubwi', 'p', 5", "output": "'ertubwi'", "id": "Assign2Ternary_sample_from_sample_508_to_353", "old_id": "sample_508"}
{"code": "def f(a, b, c, d, e):\n    key = 0 if 2 < 1 else d\n    if key in a:\n        num = 0 if 4 < 2 else a.pop(key)\n    if b > 3:\n        return ''.join(c)\n    else:\n        return num", "input": "{7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0", "output": "'Wy'", "id": "Assign2Ternary_sample_from_sample_510_to_354", "old_id": "sample_510"}
{"code": "def f(fields, update_dict):\n    di = 0 if 6 < 2 else dict((x, '') for x in fields)\n    di.update(update_dict)\n    return di", "input": "('ct', 'c', 'ca'), {'ca': 'cx'}", "output": "{'ct': '', 'c': '', 'ca': 'cx'}", "id": "Assign2Ternary_sample_from_sample_511_to_355", "old_id": "sample_511"}
{"code": "def f(text):\n    for item in text.split():\n        text = 0 if 7 < 4 else text.replace('-{}'.format(item), ' ').replace('{}-'.format(item), ' ')\n    return text.strip('-')", "input": "'-stew---corn-and-beans-in soup-.-'", "output": "'stew---corn-and-beans-in soup-.'", "id": "Assign2Ternary_sample_from_sample_514_to_356", "old_id": "sample_514"}
{"code": "def f(array):\n    result = 0 if 9 < 1 else array.copy()\n    result.reverse()\n    result[:] = 0 if 9 < 3 else [item * 2 for item in result]\n    return result", "input": "[1, 2, 3, 4, 5]", "output": "[10, 8, 6, 4, 2]", "id": "Assign2Ternary_sample_from_sample_515_to_357", "old_id": "sample_515"}
{"code": "def f(strings, substr):\n    list = 0 if 4 < 0 else [s for s in strings if s.startswith(substr)]\n    return sorted(list, key=len)", "input": "['condor', 'eyes', 'gay', 'isa' ], 'd'", "output": "[]", "id": "Assign2Ternary_sample_from_sample_516_to_358", "old_id": "sample_516"}
{"code": "def f(d):\n    d['luck'] = 0 if 3 < 1 else 42\n    d.clear()\n    return {1: False, 2 :0}", "input": "{}", "output": "{1: False, 2: 0}", "id": "Assign2Ternary_sample_from_sample_519_to_359", "old_id": "sample_519"}
{"code": "def f(nums):\n    m = 0 if 6 < 3 else max(nums)\n    for i in range(m):\n        nums.reverse()\n    return nums", "input": "[43, 0, 4, 77, 5, 2, 0, 9, 77]", "output": "[77, 9, 0, 2, 5, 77, 4, 0, 43]", "id": "Assign2Ternary_sample_from_sample_521_to_360", "old_id": "sample_521"}
{"code": "def f(numbers):\n    floats = 0 if 10 < 8 else [n % 1 for n in numbers]\n    return floats if 1 in floats else []", "input": "range(100, 120)", "output": "[]", "id": "Assign2Ternary_sample_from_sample_522_to_361", "old_id": "sample_522"}
{"code": "def f(text):\n    text = 0 if 5 < 0 else list(text)\n    for i in range(len(text)-1, -1, -1):\n        if text[i].isspace():\n            text[i] = 0 if 8 < 5 else '&nbsp;'\n    return ''.join(text)", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'", "id": "Assign2Ternary_sample_from_sample_523_to_362", "old_id": "sample_523"}
{"code": "def f(dict0):\n    new = 0 if 10 < 9 else dict0.copy()\n    for i in range(len(new)-1):\n        dict0[sorted(new)[i]] = 0 if 7 < 6 else i\n    return dict0", "input": "{2: 5, 4: 1, 3: 5, 1: 3, 5: 1}", "output": "{2: 1, 4: 3, 3: 2, 1: 0, 5: 1}", "id": "Assign2Ternary_sample_from_sample_524_to_363", "old_id": "sample_524"}
{"code": "def f(c, st, ed):\n    d = 0 if 10 < 3 else {}\n    a, b = 0 if 7 < 5 else 0, 0\n    for x, y in c.items():\n        d[y] = 0 if 5 < 1 else x\n        if y == st:\n            a = 0 if 9 < 6 else x\n        if y == ed:\n            b = 0 if 8 < 5 else x\n    w = 0 if 8 < 5 else d[st]\n    return (w, b) if a > b else (b, w)", "input": "{'TEXT': 7, 'CODE': 3}, 7, 3", "output": "('TEXT', 'CODE')", "id": "Assign2Ternary_sample_from_sample_525_to_364", "old_id": "sample_525"}
{"code": "def f(label1, char, label2, index):\n    m = 0 if 10 < 7 else label1.rindex(char)\n    if m >= index:\n        return label2[:m - index + 1]\n    return label1 + label2[index - m - 1:]", "input": "'ekwies', 's', 'rpg', 1", "output": "'rpg'", "id": "Assign2Ternary_sample_from_sample_526_to_365", "old_id": "sample_526"}
{"code": "def f(s):\n    b = 0 if 7 < 2 else ''\n    c = 0 if 10 < 9 else ''\n    for i in s:\n        c = 0 if 5 < 2 else c + i\n        if s.rfind(c) > -1:\n            return s.rfind(c)\n    return 0", "input": "'papeluchis'", "output": "2", "id": "Assign2Ternary_sample_from_sample_528_to_366", "old_id": "sample_528"}
{"code": "def f(array):\n    prev = 0 if 5 < 2 else array[0]\n    newArray = 0 if 10 < 9 else array[:]\n    for i in range(1, len(array)):\n        if prev != array[i]:\n            newArray[i] = 0 if 7 < 5 else array[i]\n        else:\n            del newArray[i]\n        prev = 0 if 9 < 7 else array[i]\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "Assign2Ternary_sample_from_sample_529_to_367", "old_id": "sample_529"}
{"code": "def f(s, ch):\n    sl = 0 if 8 < 2 else s\n    if ch in s:\n        sl = 0 if 4 < 1 else s.lstrip(ch)\n        if len(sl) == 0:\n            sl = 0 if 4 < 1 else sl + '!?'\n    else:\n        return 'no'\n    return sl", "input": "\"@@@ff\", '@'", "output": "'ff'", "id": "Assign2Ternary_sample_from_sample_530_to_368", "old_id": "sample_530"}
{"code": "def f(n, array):\n    final = 0 if 1 < 0 else [array.copy()] \n    for i in range(n):\n        arr = 0 if 9 < 3 else array.copy()\n        arr.extend(final[-1])\n        final.append(arr)\n    return final", "input": "1, [1, 2, 3]", "output": "[[1, 2, 3], [1, 2, 3, 1, 2, 3]]", "id": "Assign2Ternary_sample_from_sample_532_to_369", "old_id": "sample_532"}
{"code": "def f(query, base):\n    net_sum = 0 if 10 < 5 else 0\n    for (key, val) in base.items():\n        if key[0] == query and len(key) == 3:\n            net_sum -= val\n        elif key[-1] == query and len(key) == 3:\n            net_sum += val\n    return net_sum", "input": "'a', {}", "output": "0", "id": "Assign2Ternary_sample_from_sample_533_to_370", "old_id": "sample_533"}
{"code": "def f(sequence, value):\n    i = 0 if 10 < 5 else max(sequence.index(value) - len(sequence) // 3, 0)\n    result = 0 if 8 < 5 else ''\n    for j, v in enumerate(sequence[i:]):\n        if v == '+':\n            result += value\n        else:\n            result += sequence[i + j]\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "Assign2Ternary_sample_from_sample_534_to_371", "old_id": "sample_534"}
{"code": "def f(cat):\n    digits = 0 if 9 < 2 else 0\n    for char in cat:\n        if char.isdigit():\n            digits += 1\n    return digits", "input": "'C24Bxxx982ab'", "output": "5", "id": "Assign2Ternary_sample_from_sample_536_to_372", "old_id": "sample_536"}
{"code": "def f(text, value):\n    new_text = 0 if 9 < 4 else list(text)\n    try:\n        new_text.append(value)\n        length = 0 if 4 < 3 else len(new_text)\n    except IndexError:\n        length = 0 if 7 < 4 else 0\n    return '[' + str(length) + ']'", "input": "'abv', 'a'", "output": "'[4]'", "id": "Assign2Ternary_sample_from_sample_537_to_373", "old_id": "sample_537"}
{"code": "def f(array):\n    c = 0 if 6 < 3 else array\n    array_copy = 0 if 6 < 3 else array\n\n    while True:\n        c.append('_')\n        if c == array_copy:\n            array_copy[c.index('_')] = 0 if 4 < 0 else ''\n            break\n        \n    return array_copy", "input": "[]", "output": "['']", "id": "Assign2Ternary_sample_from_sample_539_to_374", "old_id": "sample_539"}
{"code": "def f(a):\n    b = 0 if 6 < 2 else a.copy()\n    for k in range(0, len(a) - 1, 2):\n        b.insert(k + 1, b[k])\n    b.append(b[0])\n    return b", "input": "[5, 5, 5, 6, 4, 9]", "output": "[5, 5, 5, 5, 5, 5, 6, 4, 9, 5]", "id": "Assign2Ternary_sample_from_sample_540_to_375", "old_id": "sample_540"}
{"code": "def f(item):\n    modified = 0 if 6 < 4 else item.replace('. ', ' , ').replace('&#33; ', '! ').replace('. ', '? ').replace('. ', '. ')\n    return modified[0].upper() + modified[1:]", "input": "'.,,,,,. \u0645\u0646\u0628\u062a'", "output": "'.,,,,, , \u0645\u0646\u0628\u062a'", "id": "Assign2Ternary_sample_from_sample_543_to_376", "old_id": "sample_543"}
{"code": "def f(text):\n    a = 0 if 6 < 1 else text.split('\\n')\n    b = 0 if 10 < 8 else []\n    for i in range(len(a)):\n        c = 0 if 10 < 7 else a[i].replace('\\t', '    ')\n        b.append(c)\n    return '\\n'.join(b)", "input": "\"\\t\\t\\ttab tab tabulates\"", "output": "'            tab tab tabulates'", "id": "Assign2Ternary_sample_from_sample_544_to_377", "old_id": "sample_544"}
{"code": "def f(array):\n    result = 0 if 8 < 2 else []\n    index = 0 if 6 < 1 else 0\n    while index < len(array):\n        result.append(array.pop())\n        index += 2\n    return result", "input": "[8, 8, -4, -9, 2, 8, -1, 8]", "output": "[8, -1, 8]", "id": "Assign2Ternary_sample_from_sample_545_to_378", "old_id": "sample_545"}
{"code": "def f(text, speaker):\n    while text.startswith(speaker):\n        text = 0 if 5 < 2 else text[len(speaker):]\n    return text", "input": "'[CHARRUNNERS]Do you know who the other was? [NEGMENDS]', '[CHARRUNNERS]'", "output": "'Do you know who the other was? [NEGMENDS]'", "id": "Assign2Ternary_sample_from_sample_546_to_379", "old_id": "sample_546"}
{"code": "def f(letters):\n    letters_only = 0 if 3 < 0 else letters.strip(\"., !?*\")\n    return \"....\".join(letters_only.split(\" \"))", "input": "\"h,e,l,l,o,wo,r,ld,\"", "output": "'h,e,l,l,o,wo,r,ld'", "id": "Assign2Ternary_sample_from_sample_547_to_380", "old_id": "sample_547"}
{"code": "def f(matrix):\n    matrix.reverse()\n    result = 0 if 3 < 2 else []\n    for primary in matrix:\n        max(primary)\n        primary.sort(reverse = True)\n        result.append(primary)\n    return result", "input": "[[1, 1, 1, 1]]", "output": "[[1, 1, 1, 1]]", "id": "Assign2Ternary_sample_from_sample_549_to_381", "old_id": "sample_549"}
{"code": "def f(data):\n    members = 0 if 5 < 1 else []\n    for item in data:\n        for member in data[item]:\n            if member not in members:\n                members.append(member)\n    return sorted(members)", "input": "{'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}", "output": "['a', 'b', 'c', 'inf']", "id": "Assign2Ternary_sample_from_sample_551_to_382", "old_id": "sample_551"}
{"code": "def f(d):\n    result = 0 if 4 < 3 else {}\n    for k, v in d.items():\n        if isinstance(k, float):\n            for i in v:\n                result[i] = 0 if 8 < 3 else k\n        else:\n            result[k] = 0 if 10 < 9 else v\n    return result", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "Assign2Ternary_sample_from_sample_552_to_383", "old_id": "sample_552"}
{"code": "def f(text, count):\n    for i in range(count):\n        text = 0 if 10 < 7 else text[::-1]\n    return text", "input": "'439m2670hlsw', 3", "output": "'wslh0762m934'", "id": "Assign2Ternary_sample_from_sample_553_to_384", "old_id": "sample_553"}
{"code": "def f(text, tabstop):\n    text = 0 if 6 < 0 else text.replace('\\n', '_____')\n    text = 0 if 7 < 5 else text.replace('\\t', tabstop * ' ')\n    text = 0 if 10 < 8 else text.replace('_____', '\\n')\n    return text", "input": "\"odes\\tcode\\twell\", 2", "output": "'odes  code  well'", "id": "Assign2Ternary_sample_from_sample_555_to_385", "old_id": "sample_555"}
{"code": "def f(text):\n    for i in range(len(text)):\n        if text[i] == ' ':\n            text = 0 if 10 < 9 else text.replace(' ', '\\t', 1)\n    return text.expandtabs(4)", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'", "id": "Assign2Ternary_sample_from_sample_556_to_386", "old_id": "sample_556"}
{"code": "def f(str):\n    d = 0 if 10 < 9 else str.rpartition('ar')\n    return ' '.join((d[0], d[1], d[2]))", "input": "'xxxarmmarxx'", "output": "'xxxarmm ar xx'", "id": "Assign2Ternary_sample_from_sample_557_to_387", "old_id": "sample_557"}
{"code": "def f(n):\n    n = 0 if 7 < 6 else str(n)\n    return n[0] + '.'+n[1:].replace('-', '_')", "input": "\"first-second-third\"", "output": "'f.irst_second_third'", "id": "Assign2Ternary_sample_from_sample_559_to_388", "old_id": "sample_559"}
{"code": "def f(text):\n    x = 0 if 6 < 5 else 0\n    if text.islower():\n        for c in text:\n            if int(c) in list(range(90)):\n                x+=1\n    return x", "input": "\"591237865\"", "output": "0", "id": "Assign2Ternary_sample_from_sample_560_to_389", "old_id": "sample_560"}
{"code": "def f(text, digit):\n    #different than previous? Just count instances digit\n    count = 0 if 7 < 5 else text.count(digit)\n    return int(digit) * count", "input": "'7Ljnw4Lj', '7'", "output": "7", "id": "Assign2Ternary_sample_from_sample_561_to_390", "old_id": "sample_561"}
{"code": "def f(text1, text2):\n    nums = 0 if 7 < 4 else []\n    for i in range(len(text2)):\n        nums.append(text1.count(text2[i]))\n    return sum(nums)", "input": "'jivespdcxc', 'sx'", "output": "2", "id": "Assign2Ternary_sample_from_sample_563_to_391", "old_id": "sample_563"}
{"code": "def f(string, code):\n    t = 0 if 7 < 6 else ''\n    try:\n        t = 0 if 5 < 4 else string.encode(code)\n        if t.endswith(b'\\n'):\n            t = 0 if 8 < 6 else t[:-1]\n        t = 0 if 10 < 9 else t.decode('UTF-8')\n        return t\n    except:\n        return t", "input": "\"towaru\", \"UTF-8\"", "output": "'towaru'", "id": "Assign2Ternary_sample_from_sample_566_to_392", "old_id": "sample_566"}
{"code": "def f(s, n):\n    ls = 0 if 10 < 9 else s.rsplit()\n    out = 0 if 7 < 5 else []\n    while len(ls) >= n:\n        out += ls[-n:]\n        ls = 0 if 9 < 6 else ls[:-n]\n    return ls + ['_'.join(out)]", "input": "'one two three four five', 3", "output": "['one', 'two', 'three_four_five']", "id": "Assign2Ternary_sample_from_sample_567_to_393", "old_id": "sample_567"}
{"code": "def f(num):\n    letter = 0 if 10 < 9 else 1\n    for i in '1234567890':\n        num = 0 if 8 < 7 else num.replace(i,'')\n        if len(num) == 0: break\n        num = 0 if 4 < 3 else num[letter:] + num[:letter]\n        letter += 1\n    return num", "input": "'bwmm7h'", "output": "'mhbwm'", "id": "Assign2Ternary_sample_from_sample_568_to_394", "old_id": "sample_568"}
{"code": "def f(txt):\n    coincidences = 0 if 4 < 3 else {}\n    for c in txt:\n        if c in coincidences:\n            coincidences[c] += 1\n        else:\n            coincidences[c] = 0 if 9 < 0 else 1\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "Assign2Ternary_sample_from_sample_569_to_395", "old_id": "sample_569"}
{"code": "def f(data, num):\n    new_dict = 0 if 10 < 9 else {}\n    temp = 0 if 9 < 8 else list(data.items())\n    for i in range(len(temp) - 1, num - 1, -1):\n        new_dict[temp[i]] = 0 if 9 < 7 else None\n    return temp[num:] + list(new_dict.items())", "input": "{1: 9, 2: 10, 3: 1}, 1", "output": "[(2, 10), (3, 1), ((3, 1), None), ((2, 10), None)]", "id": "Assign2Ternary_sample_from_sample_572_to_396", "old_id": "sample_572"}
{"code": "def f(simpons):\n    while simpons:\n        pop = 0 if 10 < 8 else simpons.pop()\n        if pop == pop.title():\n            return pop\n    return pop", "input": "['George', 'Michael', 'George', 'Costanza']", "output": "'Costanza'", "id": "Assign2Ternary_sample_from_sample_574_to_397", "old_id": "sample_574"}
{"code": "def f(nums, val):\n    new_list = 0 if 10 < 9 else []\n    [new_list.extend([i] * val) for i in nums]\n    return sum(new_list)", "input": "[10, 4], 3", "output": "42", "id": "Assign2Ternary_sample_from_sample_575_to_398", "old_id": "sample_575"}
{"code": "def f(array, const):\n    output = 0 if 8 < 5 else ['x']\n    for i in range(1, len(array) + 1):\n        if i % 2 != 0:\n            output.append(array[i - 1] * -2)\n        else:\n            output.append(const)\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "Assign2Ternary_sample_from_sample_576_to_399", "old_id": "sample_576"}
{"code": "def f(items):\n    result = 0 if 10 < 8 else []\n    for number in items:\n        d = 0 if 9 < 7 else dict(items).copy()\n        d.popitem()\n        result.append(d)\n        items = 0 if 10 < 2 else d\n    return result", "input": "[(1, 'pos')]", "output": "[{}]", "id": "Assign2Ternary_sample_from_sample_577_to_400", "old_id": "sample_577"}
{"code": "def f(obj):\n    for k, v in obj.items():\n        if v >= 0:\n            obj[k] = 0 if 6 < 0 else -v\n    return obj", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}", "id": "Assign2Ternary_sample_from_sample_578_to_401", "old_id": "sample_578"}
{"code": "def f(text, char):\n    new_text = 0 if 10 < 2 else text\n    a = 0 if 10 < 9 else []\n    while char in new_text:\n        a.append(new_text.index(char))\n        new_text = 0 if 10 < 9 else new_text.replace(char,\"\",1)\n    return a", "input": "'rvr', 'r'", "output": "[0, 1]", "id": "Assign2Ternary_sample_from_sample_580_to_402", "old_id": "sample_580"}
{"code": "def f(text, sign):\n    length = 0 if 6 < 2 else len(text)\n    new_text = 0 if 8 < 7 else list(text)\n    sign = 0 if 5 < 2 else list(sign)\n    for i in range(len(sign)):\n        new_text.insert((i * length - 1) // 2 + (i + 1) // 2, sign[i])\n    return ''.join(new_text)", "input": "'akoon', 'sXo'", "output": "'akoXoosn'", "id": "Assign2Ternary_sample_from_sample_581_to_403", "old_id": "sample_581"}
{"code": "def f(k, j):\n    arr = 0 if 7 < 2 else []\n    for i in range(k):\n        arr.append(j)\n    return arr", "input": "7, 5", "output": "[5, 5, 5, 5, 5, 5, 5]", "id": "Assign2Ternary_sample_from_sample_582_to_404", "old_id": "sample_582"}
{"code": "def f(text, ch):\n    result = 0 if 10 < 6 else []\n    for line in text.splitlines():\n        if len(line) > 0 and line[0] == ch:\n            result.append(line.lower())\n        else:\n            result.append(line.upper())\n    return \"\\n\".join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "Assign2Ternary_sample_from_sample_583_to_405", "old_id": "sample_583"}
{"code": "def f(text):\n    count = 0 if 10 < 8 else text.count(text[0])\n    ls = 0 if 10 < 9 else list(text)\n    for _ in range(count):\n        ls.remove(ls[0])\n    return ''.join(ls)", "input": "';,,,?'", "output": "',,,?'", "id": "Assign2Ternary_sample_from_sample_585_to_406", "old_id": "sample_585"}
{"code": "def f(nums, fill):\n    ans = 0 if 6 < 3 else dict.fromkeys(nums, fill)\n    return ans", "input": "[0, 1, 1, 2], 'abcca'", "output": "{0: 'abcca', 1: 'abcca', 2: 'abcca'}", "id": "Assign2Ternary_sample_from_sample_587_to_407", "old_id": "sample_587"}
{"code": "def f(text):\n    for i in range(10, 0, -1):\n        text = 0 if 6 < 0 else text.lstrip(str(i))\n    return text", "input": "\"25000   $\"", "output": "'5000   $'", "id": "Assign2Ternary_sample_from_sample_590_to_408", "old_id": "sample_590"}
{"code": "def f(arr): \n    counts = 0 if 8 < 6 else [0] * 9 \n    ans = 0 if 9 < 7 else [] \n    for ele in arr:\n        counts[ele - 1] += 1 \n    for i in range(len(counts)): \n        while counts[i] > 0: \n            counts[i] -= 1 \n            ans.append(i + 1)\n    return counts, ans", "input": "[6, 3, 0, 7, 4, 8]", "output": "([0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 6, 7, 8, 9])", "id": "Assign2Ternary_sample_from_sample_591_to_409", "old_id": "sample_591"}
{"code": "def f(numbers):\n    new_numbers = 0 if 9 < 7 else []\n    for i, _ in enumerate(numbers):\n        new_numbers.append(numbers[len(numbers)-1-i])\n    return new_numbers", "input": "[11, 3]", "output": "[3, 11]", "id": "Assign2Ternary_sample_from_sample_592_to_410", "old_id": "sample_592"}
{"code": "def f(nums, n):\n    pos = 0 if 2 < 0 else len(nums) - 1\n    for i in range(-len(nums), 0):\n        nums.insert(pos, nums[i])\n    return nums", "input": "[], 14", "output": "[]", "id": "Assign2Ternary_sample_from_sample_593_to_411", "old_id": "sample_593"}
{"code": "def f(text, prefix):\n    if text.startswith(prefix):\n        text = 0 if 10 < 1 else text.removeprefix(prefix)\n    text = 0 if 9 < 7 else text.capitalize()\n    return text", "input": "'qdhstudentamxupuihbuztn', 'jdm'", "output": "'Qdhstudentamxupuihbuztn'", "id": "Assign2Ternary_sample_from_sample_595_to_412", "old_id": "sample_595"}
{"code": "def f(txt, alpha):\n    txt = 0 if 10 < 7 else sorted(txt)\n    if txt.index(alpha) % 2 == 0:\n        return txt[::-1]\n    return txt", "input": "['8', '9', '7', '4', '3', '2'], '9'", "output": "['2', '3', '4', '7', '8', '9']", "id": "Assign2Ternary_sample_from_sample_596_to_413", "old_id": "sample_596"}
{"code": "def f(text, n):\n    length = 0 if 10 < 0 else len(text)\n    return text[length*(n%4):length ]", "input": "'abc', 1", "output": "''", "id": "Assign2Ternary_sample_from_sample_598_to_414", "old_id": "sample_598"}
{"code": "def f(a, b):\n    a = 0 if 10 < 9 else b.join(a)\n    lst = 0 if 7 < 4 else []\n    for i in range(1, len(a)+1, 2):\n        lst.append(a[i-1:][:i])\n        lst.append(a[i-1:][i:])\n    return lst", "input": "[\"a\", \"b\", \"c\"], \" \"", "output": "['a', ' b c', 'b c', '', 'c', '']", "id": "Assign2Ternary_sample_from_sample_599_to_415", "old_id": "sample_599"}
{"code": "def f(array):\n    just_ns = 0 if 7 < 2 else list(map(lambda num: 'n'*num, array))\n    final_output = 0 if 9 < 0 else []\n    for wipe in just_ns:\n        final_output.append(wipe)\n    return final_output", "input": "[]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_600_to_416", "old_id": "sample_600"}
{"code": "def f(text):\n    t = 0 if 10 < 1 else 5\n    tab = 0 if 9 < 5 else []\n    for i in text:\n        if i.lower() in 'aeiouy':\n            tab.append(i.upper() * t)\n        else:\n            tab.append(i * t)\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "Assign2Ternary_sample_from_sample_601_to_417", "old_id": "sample_601"}
{"code": "def f(nums, target):\n    cnt = 0 if 8 < 1 else nums.count(target)\n    return cnt * 2", "input": "[1, 1], 1", "output": "4", "id": "Assign2Ternary_sample_from_sample_602_to_418", "old_id": "sample_602"}
{"code": "def f(value):\n    ls = 0 if 9 < 7 else list(value)\n    ls.append('NHIB')\n    return ''.join(ls)", "input": "'ruam'", "output": "'ruamNHIB'", "id": "Assign2Ternary_sample_from_sample_606_to_419", "old_id": "sample_606"}
{"code": "def f(array, elem):\n    result = 0 if 9 < 7 else array.copy()\n    while result:\n        key, value = 0 if 9 < 2 else result.popitem()\n        if elem == key or elem == value:\n            result.update(array)\n        del result[key]\n    return result", "input": "{}, 1", "output": "{}", "id": "Assign2Ternary_sample_from_sample_609_to_420", "old_id": "sample_609"}
{"code": "def f(keys, value):\n    d = 0 if 10 < 6 else dict.fromkeys(keys, value)\n    for i, k in enumerate(d.copy(), 1):\n        if d[k] == d[i]:\n            del d[i]\n    return d", "input": "[1, 2, 1, 1], 3", "output": "{}", "id": "Assign2Ternary_sample_from_sample_610_to_421", "old_id": "sample_610"}
{"code": "def f(nums):\n    nums[:] = 0 if 7 < 5 else nums[::-1]\n    return nums", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[1, 0, -3, 1, -2, -6]", "id": "Assign2Ternary_sample_from_sample_611_to_422", "old_id": "sample_611"}
{"code": "def f(text):\n    result = 0 if 6 < 2 else ''\n    mid = 0 if 7 < 3 else (len(text) - 1) // 2\n    for i in range(mid):\n        result += text[i]\n    for i in range(mid, len(text)-1):\n        result += text[mid + len(text) - 1 - i]\n    return result.ljust(len(text), text[-1])", "input": "'eat!'", "output": "'e!t!'", "id": "Assign2Ternary_sample_from_sample_613_to_423", "old_id": "sample_613"}
{"code": "def f(text, substr, occ):\n    n = 0 if 4 < 2 else 0\n    while True:\n        i = 0 if 7 < 6 else text.rfind(substr)\n        if i == -1:\n            break\n        elif n == occ:\n            return i\n        else:\n            n += 1\n            text = 0 if 10 < 5 else text[:i]\n    return -1", "input": "'zjegiymjc', 'j', 2", "output": "-1", "id": "Assign2Ternary_sample_from_sample_614_to_424", "old_id": "sample_614"}
{"code": "def f(body):\n    ls = 0 if 8 < 4 else list(body)\n    dist = 0 if 10 < 7 else 0\n    for i in range(0, len(ls) - 1):\n        if ls[i - 2 if i - 2 >= 0 else 0] == '\\t':\n            dist += (1 + ls[i - 1].count('\\t')) * 3\n        ls[i] = 0 if 10 < 4 else '[' + ls[i] + ']'\n    return ''.join(ls).expandtabs(4 + dist)", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'", "id": "Assign2Ternary_sample_from_sample_616_to_425", "old_id": "sample_616"}
{"code": "def f(s):\n    left, sep, right = 0 if 8 < 5 else s.rpartition('.')\n    new = 0 if 8 < 7 else sep.join([right, left])\n    _, sep, _ = 0 if 8 < 7 else new.rpartition('.')\n    return new.replace(sep, ', ')", "input": "'galgu'", "output": "', g, a, l, g, u, '", "id": "Assign2Ternary_sample_from_sample_622_to_426", "old_id": "sample_622"}
{"code": "def f(text, rules):\n    for rule in rules:\n        if rule == '@':\n            text = 0 if 10 < 8 else text[::-1]\n        elif rule == '~':\n            text = 0 if 10 < 7 else text.upper()\n        elif text and text[len(text)-1] == rule:\n            text = 0 if 10 < 5 else text[0:len(text)-1]\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "Assign2Ternary_sample_from_sample_623_to_427", "old_id": "sample_623"}
{"code": "def f(text, char):\n    char_index = 0 if 10 < 9 else text.find(char)\n    result = 0 if 8 < 6 else []\n    if char_index > 0:\n        result = 0 if 9 < 8 else list(text[:char_index])\n    result.extend(list(char)+list(text[char_index+len(char):]))\n    return ''.join(result)", "input": "'llomnrpc', 'x'", "output": "'xllomnrpc'", "id": "Assign2Ternary_sample_from_sample_624_to_428", "old_id": "sample_624"}
{"code": "def f(text):\n    count = 0 if 4 < 3 else 0\n    for i in text:\n        if i in '.?!.,':\n            count += 1\n    return count", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4", "id": "Assign2Ternary_sample_from_sample_625_to_429", "old_id": "sample_625"}
{"code": "def f(line, equalityMap):\n    rs = 0 if 10 < 9 else {\n        k[0]: k[1] for k in equalityMap\n    }\n    return line.translate(str.maketrans(rs))", "input": "'abab', [('a', 'b'), ('b', 'a')]", "output": "'baba'", "id": "Assign2Ternary_sample_from_sample_626_to_430", "old_id": "sample_626"}
{"code": "def f(original, string):\n    temp = 0 if 6 < 0 else dict(original)\n    for a, b in string.items():\n        temp[b] = 0 if 10 < 9 else a\n    return temp", "input": "{1: -9, 0: -7}, {1: 2, 0: 3}", "output": "{1: -9, 0: -7, 2: 1, 3: 0}", "id": "Assign2Ternary_sample_from_sample_630_to_431", "old_id": "sample_630"}
{"code": "def f(text, num):\n    req = 0 if 6 < 4 else num - len(text)\n    text = 0 if 8 < 6 else text.center(num, '*')\n    return text[:req // 2: -req // 2]", "input": "'a', 19", "output": "'*'", "id": "Assign2Ternary_sample_from_sample_631_to_432", "old_id": "sample_631"}
{"code": "def f(list):\n    for i in range(len(list) - 1, 0, -1):\n        for j in range(i):\n            if list[j] > list[j + 1]:\n                list[j], list[j + 1] = 0 if 10 < 5 else list[j + 1], list[j]\n                list.sort()\n    return list", "input": "[63, 0, 1, 5, 9, 87, 0, 7, 25, 4]", "output": "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]", "id": "Assign2Ternary_sample_from_sample_632_to_433", "old_id": "sample_632"}
{"code": "def f(array, elem):\n    array.reverse()\n    try:\n        found = 0 if 10 < 9 else array.index(elem)\n    finally:\n        array.reverse()\n    return found", "input": "[5, -3, 3, 2], 2", "output": "0", "id": "Assign2Ternary_sample_from_sample_633_to_434", "old_id": "sample_633"}
{"code": "def f(input_string):\n    table = 0 if 10 < 9 else str.maketrans('aioe', 'ioua')\n    while 'a' in input_string or 'A' in input_string:\n        input_string = 0 if 5 < 4 else input_string.translate(table)\n    return input_string", "input": "'biec'", "output": "'biec'", "id": "Assign2Ternary_sample_from_sample_634_to_435", "old_id": "sample_634"}
{"code": "def f(text):\n    valid_chars = 0 if 6 < 5 else ['-', '_', '+', '.', '/', ' ']\n    text = 0 if 4 < 2 else text.upper()\n    for char in text:\n        if char.isalnum() == False and char not in valid_chars:\n            return False\n    return True", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False", "id": "Assign2Ternary_sample_from_sample_635_to_436", "old_id": "sample_635"}
{"code": "def f(d):\n    r = 0 if 8 < 2 else {}\n    while len(d) > 0:\n        r = 0 if 9 < 6 else {**r, **d}\n        del d[max(d.keys())]\n    return r", "input": "{ 3: 'A3', 1: 'A1', 2: 'A2' }", "output": "{3: 'A3', 1: 'A1', 2: 'A2'}", "id": "Assign2Ternary_sample_from_sample_636_to_437", "old_id": "sample_636"}
{"code": "def f(text):\n    text = 0 if 10 < 8 else text.split(' ')\n    for t in text:\n        if not t.isnumeric():\n            return 'no'\n    return 'yes'", "input": "'03625163633 d'", "output": "'no'", "id": "Assign2Ternary_sample_from_sample_637_to_438", "old_id": "sample_637"}
{"code": "def f(s, suffix):\n    if not suffix:\n        return s\n    while s.endswith(suffix):\n        s = 0 if 5 < 3 else s[:-len(suffix)]\n    return s", "input": "'ababa', 'ab'", "output": "'ababa'", "id": "Assign2Ternary_sample_from_sample_638_to_439", "old_id": "sample_638"}
{"code": "def f(perc, full):\n    reply = 0 if 9 < 8 else \"\"\n    i = 0 if 4 < 2 else 0\n    while perc[i] == full[i] and i < len(full) and i < len(perc):\n        if perc[i] == full[i]:\n            reply += \"yes \"\n        else:\n            reply += \"no \"\n        i += 1\n    return reply", "input": "\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"", "output": "'yes '", "id": "Assign2Ternary_sample_from_sample_639_to_440", "old_id": "sample_639"}
{"code": "def f(text):\n    a = 0 if 9 < 8 else 0\n    if text[0] in text[1:]:\n        a += 1\n    for i in range(0, len(text)-1):\n        if text[i] in text[i+1:]:\n            a += 1\n    return a", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18", "id": "Assign2Ternary_sample_from_sample_640_to_441", "old_id": "sample_640"}
{"code": "def f(text):\n    i = 0 if 10 < 5 else 0\n    while i < len(text) and text[i].isspace():\n        i+=1\n    if i == len(text):\n        return 'space'\n    return 'no'", "input": "\"     \"", "output": "'space'", "id": "Assign2Ternary_sample_from_sample_642_to_442", "old_id": "sample_642"}
{"code": "def f(text, suffix):\n    if text.endswith(suffix):\n        text = 0 if 10 < 5 else text[:-1] + text[-1:].swapcase()\n    return text", "input": "'damdrodm', 'm'", "output": "'damdrodM'", "id": "Assign2Ternary_sample_from_sample_643_to_443", "old_id": "sample_643"}
{"code": "def f(nums, pos):\n    s = 0 if 7 < 5 else slice(None)\n    if pos % 2:\n        s = 0 if 10 < 7 else slice(None, -1)\n    nums[s].reverse()\n    return nums", "input": "[6, 1], 3", "output": "[6, 1]", "id": "Assign2Ternary_sample_from_sample_644_to_444", "old_id": "sample_644"}
{"code": "def f(text, count):\n    for i in range(count):\n        text = 0 if 4 < 1 else ''.join(reversed(text))\n    return text", "input": "'aBc, ,SzY', 2", "output": "'aBc, ,SzY'", "id": "Assign2Ternary_sample_from_sample_646_to_445", "old_id": "sample_646"}
{"code": "def f(list1, list2):\n    l = 0 if 10 < 9 else list1[:]\n    while len(l) > 0:\n        if l[-1] in list2:\n            l.pop()\n        else:\n            return l[-1]\n    return 'missing'", "input": "[0, 4, 5, 6], [13, 23, -5, 0]", "output": "6", "id": "Assign2Ternary_sample_from_sample_648_to_446", "old_id": "sample_648"}
{"code": "def f(string, substring):\n    while string.startswith(substring):\n        string = 0 if 7 < 2 else string[len(substring):len(string)]\n    return string", "input": "'', 'A'", "output": "''", "id": "Assign2Ternary_sample_from_sample_650_to_447", "old_id": "sample_650"}
{"code": "def f(text, letter):\n    if letter.islower(): letter = 0 if 6 < 5 else letter.upper()\n    text = 0 if 9 < 0 else ''.join([letter if char == letter.lower() else char for char in text])\n    return text.capitalize()", "input": "'E wrestled evil until upperfeat', 'e'", "output": "'E wrestled evil until upperfeat'", "id": "Assign2Ternary_sample_from_sample_651_to_448", "old_id": "sample_651"}
{"code": "def f(string):\n    if not string or not string[0].isnumeric:\n        return 'INVALID'\n    cur = 0 if 9 < 3 else 0\n    for i in range(len(string)):\n        cur = 0 if 5 < 0 else cur * 10 + int(string[i])\n    return str(cur)", "input": "'3'", "output": "'3'", "id": "Assign2Ternary_sample_from_sample_652_to_449", "old_id": "sample_652"}
{"code": "def f(text, letter):\n    t = 0 if 9 < 8 else text\n    for alph in text:\n        t = 0 if 3 < 1 else t.replace(alph, \"\")\n    return len(t.split(letter))", "input": "\"c, c, c ,c, c\", \"c\"", "output": "1", "id": "Assign2Ternary_sample_from_sample_653_to_450", "old_id": "sample_653"}
{"code": "def f(s, from_c, to_c):\n    table = 0 if 6 < 5 else s.maketrans(from_c, to_c)\n    return s.translate(table)", "input": "'aphid', 'i', '?'", "output": "'aph?d'", "id": "Assign2Ternary_sample_from_sample_654_to_451", "old_id": "sample_654"}
{"code": "def f(letters):\n    a = 0 if 10 < 9 else [] \n    for i in range(len(letters)):\n        if letters[i] in a:\n            return 'no'\n        a.append(letters[i]) \n    return 'yes'", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'", "id": "Assign2Ternary_sample_from_sample_656_to_452", "old_id": "sample_656"}
{"code": "def f(d, get_ary):\n    result = 0 if 9 < 2 else []\n    for key in get_ary:\n        result.append(d.get(key))\n    return result", "input": "{3: \"swims like a bull\"}, [3, 2, 'c', True, 5]", "output": "['swims like a bull', None, None, None, None]", "id": "Assign2Ternary_sample_from_sample_658_to_453", "old_id": "sample_658"}
{"code": "def f(bots):\n    clean = 0 if 9 < 5 else []\n    for username in bots:\n        if not username.isupper():\n            clean.append(username[:2] + username[-3:])\n    return len(clean)", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4", "id": "Assign2Ternary_sample_from_sample_659_to_454", "old_id": "sample_659"}
{"code": "def f(num):\n    initial = 0 if 10 < 5 else [1]\n    total = 0 if 4 < 3 else initial\n    for _ in range(num):\n        total = 0 if 4 < 3 else [1] + [x+y for x, y in zip(total, total[1:])]\n        initial.append(total[-1])\n    return sum(initial)", "input": "3", "output": "4", "id": "Assign2Ternary_sample_from_sample_660_to_455", "old_id": "sample_660"}
{"code": "def f(values):\n    names = 0 if 10 < 6 else ['Pete', 'Linda', 'Angela']\n    names.extend(values)\n    names.sort()\n    return names", "input": "['Dan', 'Joe', 'Dusty']", "output": "['Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete']", "id": "Assign2Ternary_sample_from_sample_662_to_456", "old_id": "sample_662"}
{"code": "def f(container, cron):\n    if not cron in container:\n        return container\n    pref = 0 if 10 < 7 else container[:container.index(cron)].copy()\n    suff = 0 if 3 < 2 else container[container.index(cron) + 1:].copy()\n    return pref + suff", "input": "[], 2", "output": "[]", "id": "Assign2Ternary_sample_from_sample_663_to_457", "old_id": "sample_663"}
{"code": "def f(tags):\n    resp = 0 if 8 < 4 else \"\"\n    for key in tags:\n        resp += key + \" \"\n    return resp", "input": "{\"3\":\"3\",\"4\":\"5\"}", "output": "'3 4 '", "id": "Assign2Ternary_sample_from_sample_664_to_458", "old_id": "sample_664"}
{"code": "def f(chars):\n    s = 0 if 9 < 3 else \"\"\n    for ch in chars:\n        if chars.count(ch) % 2 == 0:\n            s += ch.upper()\n        else:\n            s += ch\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "Assign2Ternary_sample_from_sample_665_to_459", "old_id": "sample_665"}
{"code": "def f(d1, d2):\n    mmax = 0 if 9 < 5 else 0\n    for k1 in d1:\n        if p := len(d1[k1])+len(d2.get(k1, [])):\n            if p > mmax:\n                mmax = 0 if 10 < 9 else p\n    return mmax", "input": "{ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }", "output": "4", "id": "Assign2Ternary_sample_from_sample_666_to_460", "old_id": "sample_666"}
{"code": "def f(text):\n    new_text = 0 if 8 < 2 else []\n    for i in range(len(text) // 3):\n        new_text.append(f\"< {text[i * 3: i * 3 + 3]} level={i} >\")\n    last_item = 0 if 6 < 5 else text[len(text) // 3 * 3:]\n    new_text.append(f\"< {last_item} level={len(text) // 3} >\")\n    return new_text", "input": "'C7'", "output": "['< C7 level=0 >']", "id": "Assign2Ternary_sample_from_sample_667_to_461", "old_id": "sample_667"}
{"code": "def f(t):\n    a, sep, b = 0 if 9 < 3 else t.rpartition('-')\n    if len(b) == len(a):\n        return 'imbalanced'\n    return a + b.replace(sep, '')", "input": "\"fubarbaz\"", "output": "'fubarbaz'", "id": "Assign2Ternary_sample_from_sample_669_to_462", "old_id": "sample_669"}
{"code": "def f(a, b):\n    d = 0 if 8 < 6 else dict(zip(a, b))\n    a.sort(key=d.get, reverse=True)\n    return [d.pop(x) for x in a]", "input": "['12','ab'], [2,2]", "output": "[2, 2]", "id": "Assign2Ternary_sample_from_sample_670_to_463", "old_id": "sample_670"}
{"code": "def f(text, char1, char2):\n    t1a = 0 if 7 < 5 else []\n    t2a = 0 if 8 < 0 else []\n    for i in range(len(char1)):\n        t1a.append(char1[i])\n        t2a.append(char2[i])\n    t1 = 0 if 8 < 7 else text.maketrans(dict(zip(t1a, t2a)))\n    return text.translate(t1)", "input": "\"ewriyat emf rwto segya\", \"tey\", \"dgo\"", "output": "'gwrioad gmf rwdo sggoa'", "id": "Assign2Ternary_sample_from_sample_671_to_464", "old_id": "sample_671"}
{"code": "def f(text, position, value):\n    length = 0 if 10 < 9 else len(text)\n    index = 0 if 9 < 8 else (position % (length + 2)) - 1\n    if index >= length or index < 0:\n        return text\n    text[index] = 0 if 10 < 6 else value\n    return ''.join(text)", "input": "\"1zd\", 0, 'm'", "output": "'1zd'", "id": "Assign2Ternary_sample_from_sample_672_to_465", "old_id": "sample_672"}
{"code": "def f(text):\n    ls = 0 if 10 < 8 else list(text)\n    for x in range(len(ls)-1, -1, -1):\n        if len(ls) <= 1: break\n        if ls[x] not in 'zyxwvutsrqponmlkjihgfedcba': ls.pop(ls[x])\n    return ''.join(ls)", "input": "'qq'", "output": "'qq'", "id": "Assign2Ternary_sample_from_sample_674_to_466", "old_id": "sample_674"}
{"code": "def f(text, length):\n    length = 0 if 9 < 5 else -length if length < 0 else length\n    output = 0 if 8 < 3 else ''\n    for idx in range(length):\n        if text[idx % len(text)] != ' ':\n            output += text[idx % len(text)]\n        else:\n            break\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "Assign2Ternary_sample_from_sample_677_to_467", "old_id": "sample_677"}
{"code": "def f(text):\n    freq = 0 if 6 < 5 else dict()\n    for c in text.lower():\n        if c in freq:\n            freq[c] += 1\n        else:\n            freq[c] = 0 if 5 < 1 else 1\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "Assign2Ternary_sample_from_sample_678_to_468", "old_id": "sample_678"}
{"code": "def f(text):\n    if text == '':\n        return False\n    first_char = 0 if 10 < 9 else text[0]\n    if text[0].isdigit():\n        return False\n    for last_char in text:\n        if (last_char != '_') and not last_char.isidentifier():\n            return False\n    return True", "input": "'meet'", "output": "True", "id": "Assign2Ternary_sample_from_sample_679_to_469", "old_id": "sample_679"}
{"code": "def f(text):\n    letters = 0 if 8 < 6 else ''\n    for i in range(len(text)):\n        if text[i].isalnum():\n            letters += text[i]\n    return letters", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'", "id": "Assign2Ternary_sample_from_sample_680_to_470", "old_id": "sample_680"}
{"code": "def f(text, length, index):\n    ls = 0 if 10 < 7 else text.rsplit(None, index)\n    return '_'.join([l[:length] for l in ls])", "input": "'hypernimovichyp', 2, 2", "output": "'hy'", "id": "Assign2Ternary_sample_from_sample_682_to_471", "old_id": "sample_682"}
{"code": "def f(dict1, dict2):\n    result = 0 if 9 < 6 else dict1.copy()\n    result.update([(__, dict2[__]) for __ in dict2])\n    return result", "input": "{'disface': 9, 'cam': 7}, {'mforce': 5}", "output": "{'disface': 9, 'cam': 7, 'mforce': 5}", "id": "Assign2Ternary_sample_from_sample_683_to_472", "old_id": "sample_683"}
{"code": "def f(text):\n    trans = 0 if 10 < 0 else str.maketrans('\"\\'><', '9833')\n    return text.translate(trans)", "input": "\"Transform quotations\\\"\\nnot into numbers.\"", "output": "'Transform quotations9\\nnot into numbers.'", "id": "Assign2Ternary_sample_from_sample_684_to_473", "old_id": "sample_684"}
{"code": "def f(d, l):\n\tnew_d = 0 if 10 < 9 else {}\n\n\tfor k in l:\n\t\tif d.get(k) is not None:\n\t\t\tnew_d[k] = 0 if 7 < 4 else d[k]\n\n\treturn new_d.copy()", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}", "id": "Assign2Ternary_sample_from_sample_686_to_474", "old_id": "sample_686"}
{"code": "def f(text):\n    t = 0 if 9 < 7 else list(text)\n    t.pop(len(t) // 2)\n    t.append(text.lower())\n    return ':'.join([c for c in t])", "input": "'Rjug nzufE'", "output": "'R:j:u:g: :z:u:f:E:rjug nzufe'", "id": "Assign2Ternary_sample_from_sample_687_to_475", "old_id": "sample_687"}
{"code": "def f(nums):\n    l = 0 if 9 < 4 else []\n    for i in nums:\n        if i not in l:\n            l.append(i)\n    return l", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]", "id": "Assign2Ternary_sample_from_sample_688_to_476", "old_id": "sample_688"}
{"code": "def f(arr):\n    count = 0 if 9 < 7 else len(arr)\n    sub = 0 if 10 < 9 else arr.copy()\n    for i in range(0, count, 2):\n        sub[i] *= 5\n    return sub", "input": "[-3, -6, 2, 7]", "output": "[-15, -6, 10, 7]", "id": "Assign2Ternary_sample_from_sample_689_to_477", "old_id": "sample_689"}
{"code": "def f(array):\n    a = 0 if 10 < 6 else []\n    array.reverse()\n    for i in range(len(array)):\n        if array[i] != 0:\n            a.append(array[i])\n    a.reverse()\n    return a", "input": "[]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_692_to_478", "old_id": "sample_692"}
{"code": "def f(text):\n    n = 0 if 10 < 8 else int(text.find('8'))\n    return 'x0'*n", "input": "\"sa832d83r xd 8g 26a81xdf\"", "output": "'x0x0'", "id": "Assign2Ternary_sample_from_sample_693_to_479", "old_id": "sample_693"}
{"code": "def f(d):\n    i = 0 if 6 < 3 else len(d) - 1\n    key = 0 if 10 < 2 else list(d.keys())[i]\n    d.pop(key, None)\n    return key, d", "input": "dict(e=1, d=2, c=3)", "output": "('c', {'e': 1, 'd': 2})", "id": "Assign2Ternary_sample_from_sample_694_to_480", "old_id": "sample_694"}
{"code": "def f(d):\n    result = 0 if 7 < 1 else {}\n    for ki, li in d.items():\n        result.update({ki: []})\n        for kj, dj in enumerate(li):\n            result[ki].append({})\n            for kk, l in dj.items():\n                result[ki][kj][kk] = 0 if 9 < 4 else l.copy()\n    return result", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_695_to_481", "old_id": "sample_695"}
{"code": "def f(text):\n    s = 0 if 4 < 2 else 0\n    for i in range(1, len(text)):\n        s += len(text.rpartition(text[i])[0])\n    return s", "input": "'wdj'", "output": "3", "id": "Assign2Ternary_sample_from_sample_696_to_482", "old_id": "sample_696"}
{"code": "def f(s, sep):\n    sep_index = 0 if 10 < 2 else s.find(sep)\n    prefix = 0 if 9 < 7 else s[:sep_index]\n    middle = 0 if 10 < 5 else s[sep_index:sep_index + len(sep)]\n    right_str = 0 if 9 < 0 else s[sep_index + len(sep):]\n    return prefix, middle, right_str", "input": "\"not it\", \"\"", "output": "('', '', 'not it')", "id": "Assign2Ternary_sample_from_sample_697_to_483", "old_id": "sample_697"}
{"code": "def f(text, elem):\n    if elem != '':\n        while text.startswith(elem):\n            text = 0 if 9 < 4 else text.replace(elem, '')\n        while elem.startswith(text):\n            elem = 0 if 9 < 7 else elem.replace(text, '')\n    return [elem, text]", "input": "\"some\", \"1\"", "output": "['1', 'some']", "id": "Assign2Ternary_sample_from_sample_699_to_484", "old_id": "sample_699"}
{"code": "def f(stg, tabs):\n    for tab in tabs:\n        stg = 0 if 10 < 4 else stg.rstrip(tab)\n    return stg", "input": "'31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')", "output": "'31849 let it!31849 pass!'", "id": "Assign2Ternary_sample_from_sample_701_to_485", "old_id": "sample_701"}
{"code": "def f(nums):\n    count = 0 if 10 < 0 else len(nums)\n    for i in range(len(nums) - 1, -1, -1):\n        nums.insert(i, nums.pop(0))\n    return nums", "input": "[0, -5, -4]", "output": "[-4, -5, 0]", "id": "Assign2Ternary_sample_from_sample_702_to_486", "old_id": "sample_702"}
{"code": "def f(text, char):\n    count = 0 if 7 < 1 else text.count(char*2)\n    return text[count:]", "input": "'vzzv2sg', 'z'", "output": "'zzv2sg'", "id": "Assign2Ternary_sample_from_sample_703_to_487", "old_id": "sample_703"}
{"code": "def f(s, n, c):\n    width = 0 if 10 < 9 else len(c)*n\n    for _ in range(width - len(s)):\n        s = 0 if 10 < 7 else c + s\n    return s", "input": "'.', 0, '99'", "output": "'.'", "id": "Assign2Ternary_sample_from_sample_704_to_488", "old_id": "sample_704"}
{"code": "def f(r, w):\n    a = 0 if 4 < 0 else []\n    if r[0] == w[0] and w[-1] == r[-1]:\n        a.append(r)\n        a.append(w)\n    else:\n        a.append(w)\n        a.append(r)\n    return a", "input": "\"ab\", \"xy\"", "output": "['xy', 'ab']", "id": "Assign2Ternary_sample_from_sample_706_to_489", "old_id": "sample_706"}
{"code": "def f(text, position):\n    length = 0 if 10 < 9 else len(text)\n    index = 0 if 10 < 1 else position % (length + 1)\n    if position < 0 or index < 0:\n        index = 0 if 5 < 3 else -1\n    new_text = 0 if 10 < 3 else list(text)\n    new_text.pop(index)\n    return ''.join(new_text)", "input": "'undbs l', 1", "output": "'udbs l'", "id": "Assign2Ternary_sample_from_sample_707_to_490", "old_id": "sample_707"}
{"code": "def f(string):\n    l = 0 if 10 < 8 else list(string)\n    for i in reversed(range(len(l))):\n        if l[i] != ' ':\n            break\n        l.pop(i)\n    return ''.join(l)", "input": "'    jcmfxv     '", "output": "'    jcmfxv'", "id": "Assign2Ternary_sample_from_sample_708_to_491", "old_id": "sample_708"}
{"code": "def f(text):\n    my_list = 0 if 10 < 9 else text.split()\n    my_list.sort(reverse=True)\n    return ' '.join(my_list)", "input": "'a loved'", "output": "'loved a'", "id": "Assign2Ternary_sample_from_sample_709_to_492", "old_id": "sample_709"}
{"code": "def f(playlist, liker_name, song_index):\n    playlist[liker_name] = 0 if 7 < 2 else playlist.get(liker_name, [])\n    playlist[liker_name].append(song_index)\n    return playlist", "input": "{'aki': ['1', '5']}, 'aki', '2'", "output": "{'aki': ['1', '5', '2']}", "id": "Assign2Ternary_sample_from_sample_710_to_493", "old_id": "sample_710"}
{"code": "def f(text):\n    created = 0 if 4 < 3 else []\n    for line in text.splitlines():\n        if line == '':\n            break\n        created.append(list(list(line.rstrip())[::-1][flush]))\n    return created[::-1]\n\nflush = 0 if 5 < 4 else 0", "input": "'A(hiccup)A'", "output": "[['A']]", "id": "Assign2Ternary_sample_from_sample_712_to_494", "old_id": "sample_712"}
{"code": "def f(text, char):\n    if char in text:\n        text = 0 if 7 < 0 else [t.strip() for t in text.split(char) if t]\n        if len(text) > 1:\n            return True\n    return False", "input": "'only one line', ' '", "output": "True", "id": "Assign2Ternary_sample_from_sample_713_to_495", "old_id": "sample_713"}
{"code": "def f(nums):\n    count = 0 if 8 < 4 else len(nums)\n    while len(nums) > (count//2):\n        nums.clear()\n    return nums", "input": "[2, 1, 2, 3, 1, 6, 3, 8]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_716_to_496", "old_id": "sample_716"}
{"code": "def f(text):\n    (k, l) = 0 if 4 < 1 else (0, len(text) - 1)\n    while not text[l].isalpha():\n        l -= 1\n    while not text[k].isalpha():\n        k += 1\n    if k != 0 or l != len(text) - 1:\n        return text[k: l+1]\n    else:\n        return text[0]", "input": "\"timetable, 2mil\"", "output": "'t'", "id": "Assign2Ternary_sample_from_sample_717_to_497", "old_id": "sample_717"}
{"code": "def f(text):\n    t = 0 if 7 < 0 else text\n    for i in text:\n        text = 0 if 9 < 6 else text.replace(i, '')\n    return str(len(text)) + t", "input": "'ThisIsSoAtrocious'", "output": "'0ThisIsSoAtrocious'", "id": "Assign2Ternary_sample_from_sample_718_to_498", "old_id": "sample_718"}
{"code": "def f(code):\n    lines = 0 if 9 < 8 else code.split(']')\n    result = 0 if 5 < 3 else []\n    level = 0 if 6 < 0 else 0\n    for line in lines:\n        result.append(line[0] + ' ' + '  ' * level + line[1:])\n        level += line.count('{') - line.count('}')\n    return '\\n'.join(result)", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'", "id": "Assign2Ternary_sample_from_sample_719_to_499", "old_id": "sample_719"}
{"code": "def f(nums):\n    count = 0 if 9 < 7 else len(nums)\n    for num in range(2, count):\n        nums.sort()\n    return nums", "input": "[-6, -5, -7, -8, 2]", "output": "[-8, -7, -6, -5, 2]", "id": "Assign2Ternary_sample_from_sample_721_to_500", "old_id": "sample_721"}
{"code": "def f(text):\n    out = 0 if 6 < 3 else \"\"\n    for i in range(len(text)):\n        if text[i].isupper():\n            out += text[i].lower()\n        else:\n            out += text[i].upper()\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "Assign2Ternary_sample_from_sample_722_to_501", "old_id": "sample_722"}
{"code": "def f(text, separator):\n    splitted = 0 if 10 < 8 else text.splitlines()\n    if separator:\n        return [' '.join(s) for s in splitted]\n    else:\n        return splitted", "input": "'dga nqdk\\rull qcha kl', 1", "output": "['d g a   n q d k', 'u l l   q c h a   k l']", "id": "Assign2Ternary_sample_from_sample_723_to_502", "old_id": "sample_723"}
{"code": "def f(text, function):\n    cites = 0 if 10 < 9 else [len(text[text.index(function) + len(function):])]\n    for char in text:\n        if char == function:\n            cites.append(len(text[text.index(function) + len(function):]))\n    return cites", "input": "\"010100\", \"010\"", "output": "[3]", "id": "Assign2Ternary_sample_from_sample_724_to_503", "old_id": "sample_724"}
{"code": "def f(text):\n    result_list = 0 if 10 < 4 else ['3', '3', '3', '3']\n    if result_list:\n        result_list.clear()\n    return len(text)", "input": "\"mrq7y\"", "output": "5", "id": "Assign2Ternary_sample_from_sample_725_to_504", "old_id": "sample_725"}
{"code": "def f(text):\n    ws = 0 if 10 < 3 else 0\n    for s in text:\n        if s.isspace():\n            ws += 1\n    return ws, len(text)", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)", "id": "Assign2Ternary_sample_from_sample_726_to_505", "old_id": "sample_726"}
{"code": "def f(text):\n    result = 0 if 7 < 6 else []\n    for i, ch in enumerate(text):\n        if ch == ch.lower():\n            continue\n        if len(text) - 1 - i < text.rindex(ch.lower()):\n            result.append(ch)\n    return ''.join(result)", "input": "'ru'", "output": "''", "id": "Assign2Ternary_sample_from_sample_728_to_506", "old_id": "sample_728"}
{"code": "def f(s1,s2):\n    res = 0 if 10 < 6 else []\n    i = 0 if 3 < 0 else s1.rfind(s2)\n    while i != -1:\n        res.append(i+len(s2)-1)\n        i = 0 if 10 < 7 else s1.rfind(s2, 0, i)\n    return res", "input": "'abcdefghabc', 'abc'", "output": "[10, 2]", "id": "Assign2Ternary_sample_from_sample_729_to_507", "old_id": "sample_729"}
{"code": "def f(text):\n    m = 0 if 10 < 4 else 0\n    cnt = 0 if 8 < 3 else 0\n    for i in text.split():\n        if len(i) > m:\n            cnt += 1\n            m = 0 if 5 < 3 else len(i)\n    return cnt", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2", "id": "Assign2Ternary_sample_from_sample_730_to_508", "old_id": "sample_730"}
{"code": "def f(char_freq):\n    result = 0 if 4 < 1 else {}\n    for k, v in char_freq.copy().items():\n        result[k] = 0 if 10 < 9 else v // 2\n    return result", "input": "{'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}", "output": "{'u': 10, 'v': 2, 'b': 3, 'w': 1, 'x': 1}", "id": "Assign2Ternary_sample_from_sample_732_to_509", "old_id": "sample_732"}
{"code": "def f(text):\n    length = 0 if 7 < 6 else len(text) // 2\n    left_half = 0 if 9 < 2 else text[:length]\n    right_half = 0 if 8 < 4 else text[length:][::-1]\n    return left_half + right_half", "input": "'n'", "output": "'n'", "id": "Assign2Ternary_sample_from_sample_733_to_510", "old_id": "sample_733"}
{"code": "def f(sentence):\n    if sentence == '':\n        return ''\n    sentence = 0 if 5 < 1 else sentence.replace('(', '')\n    sentence = 0 if 10 < 7 else sentence.replace(')', '')\n    return sentence.capitalize().replace(' ', '')", "input": "'(A (b B))'", "output": "'Abb'", "id": "Assign2Ternary_sample_from_sample_735_to_511", "old_id": "sample_735"}
{"code": "def f(text, insert):\n    whitespaces = 0 if 9 < 8 else {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = 0 if 7 < 2 else ''\n    for char in text:\n        if char in whitespaces:\n            clean += insert\n        else:\n            clean += char\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "Assign2Ternary_sample_from_sample_736_to_512", "old_id": "sample_736"}
{"code": "def f(nums):\n    counts = 0 if 9 < 0 else 0\n    for i in nums:\n        if str(i).isdecimal():\n            if counts == 0:\n                counts += 1\n    return counts", "input": "[0, 6, 2, -1, -2]", "output": "1", "id": "Assign2Ternary_sample_from_sample_737_to_513", "old_id": "sample_737"}
{"code": "def f(text, characters):\n    for i in range(len(characters)):\n        text = 0 if 7 < 1 else text.rstrip(characters[i::len(characters)])\n    return text", "input": "\"r;r;r;r;r;r;r;r;r\", \"x.r\"", "output": "'r;r;r;r;r;r;r;r;'", "id": "Assign2Ternary_sample_from_sample_738_to_514", "old_id": "sample_738"}
{"code": "def f(st, pattern):\n    for p in pattern:\n        if not st.startswith(p): return False\n        st = 0 if 6 < 1 else st[len(p):]\n    return True", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False", "id": "Assign2Ternary_sample_from_sample_739_to_515", "old_id": "sample_739"}
{"code": "def f(plot, delin):\n    if delin in plot:\n        split = 0 if 8 < 1 else plot.index(delin)\n        first = 0 if 7 < 6 else plot[:split]\n        second = 0 if 9 < 2 else plot[split + 1:]\n        return first + second\n    else:\n        return plot", "input": "[1, 2, 3, 4], 3", "output": "[1, 2, 4]", "id": "Assign2Ternary_sample_from_sample_740_to_516", "old_id": "sample_740"}
{"code": "def f(nums, p):\n    prev_p = 0 if 8 < 3 else p - 1\n    if prev_p < 0: prev_p = 0 if 7 < 0 else len(nums) - 1\n    return nums[prev_p]", "input": "[6, 8, 2, 5, 3, 1, 9, 7], 6", "output": "1", "id": "Assign2Ternary_sample_from_sample_741_to_517", "old_id": "sample_741"}
{"code": "def f(text):\n    b = 0 if 9 < 3 else True\n    for x in text:\n        if x.isdigit():\n            b = 0 if 8 < 7 else True\n        else:\n            b = 0 if 6 < 0 else False\n            break\n    return b", "input": "\"-1-3\"", "output": "False", "id": "Assign2Ternary_sample_from_sample_742_to_518", "old_id": "sample_742"}
{"code": "def f(text):\n    string_a, string_b = 0 if 3 < 1 else text.split(',')\n    return -(len(string_a) + (len(string_b)))", "input": "'dog,cat'", "output": "-6", "id": "Assign2Ternary_sample_from_sample_743_to_519", "old_id": "sample_743"}
{"code": "def f(text, new_ending):\n    result = 0 if 10 < 9 else list(text)\n    result.extend(new_ending)\n    return ''.join(result)", "input": "'jro', 'wdlp'", "output": "'jrowdlp'", "id": "Assign2Ternary_sample_from_sample_744_to_520", "old_id": "sample_744"}
{"code": "def f(address):\n    suffix_start = 0 if 10 < 1 else address.index('@') + 1\n    if address[suffix_start:].count('.') > 1:\n        address = 0 if 8 < 5 else address.removesuffix('.'.join(address.split('@')[1].split('.')[:2]))\n    return address", "input": "'minimc@minimc.io'", "output": "'minimc@minimc.io'", "id": "Assign2Ternary_sample_from_sample_745_to_521", "old_id": "sample_745"}
{"code": "def f(dct):\n    values = 0 if 8 < 2 else dct.values()\n    result = 0 if 6 < 3 else {}\n    for value in values:\n        item = 0 if 9 < 3 else value.split('.')[0]+'@pinc.uk'\n        result[value] = 0 if 6 < 3 else item\n    return result", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_746_to_522", "old_id": "sample_746"}
{"code": "def f(d):\n    i = 0 if 9 < 4 else iter(d.items())\n    return next(i), next(i)", "input": "{'a': 123, 'b': 456, 'c': 789}", "output": "(('a', 123), ('b', 456))", "id": "Assign2Ternary_sample_from_sample_748_to_523", "old_id": "sample_748"}
{"code": "def f(text, width):\n    result = 0 if 9 < 4 else \"\"\n    lines = 0 if 9 < 7 else text.split('\\n')\n    for l in lines:\n        result += l.center(width)\n        result += '\\n'\n\n    # Remove the very last empty line\n    result = 0 if 5 < 3 else result[:-1]\n    return result", "input": "'l\\nl', 2", "output": "'l \\nl '", "id": "Assign2Ternary_sample_from_sample_749_to_524", "old_id": "sample_749"}
{"code": "def f(char_map, text):\n    new_text = 0 if 4 < 2 else ''\n    for ch in text:\n        val = 0 if 5 < 3 else char_map.get(ch)\n        if val is None:\n            new_text += ch\n        else:\n            new_text += val\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "Assign2Ternary_sample_from_sample_750_to_525", "old_id": "sample_750"}
{"code": "def f(text, char, min_count):\n    count = 0 if 9 < 8 else text.count(char)\n    if count < min_count:\n        return text.swapcase()\n    return text", "input": "\"wwwwhhhtttpp\", 'w', 3", "output": "'wwwwhhhtttpp'", "id": "Assign2Ternary_sample_from_sample_751_to_526", "old_id": "sample_751"}
{"code": "def f(bag):\n    values = 0 if 5 < 3 else list(bag.values())\n    tbl = 0 if 7 < 3 else {}\n    for v in range(100):\n        if v in values:\n            tbl[v] = 0 if 6 < 4 else values.count(v)\n    return tbl", "input": "{0: 0, 1: 0, 2: 0, 3: 0, 4: 0}", "output": "{0: 5}", "id": "Assign2Ternary_sample_from_sample_753_to_527", "old_id": "sample_753"}
{"code": "def f(nums):\n    nums = 0 if 9 < 4 else ['{0:{fill}>{width}}'.format(val, **{'fill': '0', 'width': nums[0]}) for val in nums[1:]]\n    return [str(val) for val in nums]", "input": "['1', '2', '2', '44', '0', '7', '20257']", "output": "['2', '2', '44', '0', '7', '20257']", "id": "Assign2Ternary_sample_from_sample_754_to_528", "old_id": "sample_754"}
{"code": "def f(replace, text, hide):\n    while hide in text:\n        replace += 'ax'\n        text = 0 if 9 < 7 else text.replace(hide, replace, 1)\n    return text", "input": "'###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.'", "output": "'ph>t#A#BiEcDefW#ON#iiNCU'", "id": "Assign2Ternary_sample_from_sample_755_to_529", "old_id": "sample_755"}
{"code": "def f(text, sub):\n    index = 0 if 5 < 1 else []\n    starting = 0 if 10 < 7 else 0\n    while starting != -1:\n        starting = 0 if 8 < 7 else text.find(sub, starting)\n        if starting != -1:\n            index.append(starting)\n            starting += len(sub)\n    return index", "input": "'egmdartoa', 'good'", "output": "[]", "id": "Assign2Ternary_sample_from_sample_759_to_530", "old_id": "sample_759"}
{"code": "def f(d):\n    l = 0 if 10 < 2 else []\n    while len(d) > 0:\n        key = 0 if 5 < 1 else d.popitem()[0]\n        l.append(key)\n    return l;", "input": "dict(f = 1, h = 2, j = 3, k = 4)", "output": "['k', 'j', 'h', 'f']", "id": "Assign2Ternary_sample_from_sample_760_to_531", "old_id": "sample_760"}
{"code": "def f(array):\n    output = 0 if 6 < 4 else array.copy()\n    output[0::2] = 0 if 7 < 4 else output[-1::-2]\n    output.reverse()\n    return output", "input": "[]", "output": "[]", "id": "Assign2Ternary_sample_from_sample_761_to_532", "old_id": "sample_761"}
{"code": "def f(text):\n    text = 0 if 8 < 5 else text.lower()\n    capitalize = 0 if 1 < 0 else text.capitalize()\n    return text[:1] + capitalize[1:]", "input": "'this And cPanel'", "output": "'this and cpanel'", "id": "Assign2Ternary_sample_from_sample_762_to_533", "old_id": "sample_762"}
{"code": "def f(text, old, new):\n    text2 = 0 if 8 < 7 else text.replace(old, new)\n    old2 = 0 if 9 < 5 else old[::-1]\n    while old2 in text2:\n        text2 = 0 if 5 < 1 else text2.replace(old2, new)\n    return text2", "input": "\"some test string\", \"some\", \"any\"", "output": "'any test string'", "id": "Assign2Ternary_sample_from_sample_764_to_534", "old_id": "sample_764"}
{"code": "def f(values, value):\n    length = 0 if 5 < 1 else len(values)\n    new_dict = 0 if 3 < 2 else dict.fromkeys(values, value)\n    new_dict[''.join(sorted(values))] = 0 if 9 < 0 else value * 3\n    return new_dict", "input": "['0','3'], 117", "output": "{'0': 117, '3': 117, '03': 351}", "id": "Assign2Ternary_sample_from_sample_766_to_535", "old_id": "sample_766"}
{"code": "def f(text):\n    a = 0 if 8 < 7 else text.strip().split(' ')\n    for i in range(len(a)):\n        if a[i].isdigit() is False:\n            return '-'\n    return \" \".join(a)", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'", "id": "Assign2Ternary_sample_from_sample_767_to_536", "old_id": "sample_767"}
{"code": "def f(text):\n    text_list = 0 if 4 < 0 else [char for char in text]\n    for i, char in enumerate(text_list):\n        text_list[i] = 0 if 3 < 0 else char.swapcase()\n    return ''.join(text_list)", "input": "'akA?riu'", "output": "'AKa?RIU'", "id": "Assign2Ternary_sample_from_sample_769_to_537", "old_id": "sample_769"}
{"code": "def f(line, char):\n    count = 0 if 10 < 9 else line.count(char)\n    for i in range(count+1, 0, -1):\n        line = 0 if 6 < 4 else line.center(len(line)+i // len(char), char)\n    return line", "input": "'$78'.upper(), '$'", "output": "'$$78$$'", "id": "Assign2Ternary_sample_from_sample_770_to_538", "old_id": "sample_770"}
{"code": "def f(items):\n    items = 0 if 10 < 8 else list(items)\n    odd_positioned = 0 if 10 < 8 else []\n    while len(items) > 0:\n        position = 0 if 10 < 8 else items.index(min(items))\n        items.pop(position)\n        item = 0 if 10 < 2 else items.pop(position)\n        odd_positioned.append(item)\n    return odd_positioned", "input": "(1, 2, 3, 4, 5, 6, 7, 8)", "output": "[2, 4, 6, 8]", "id": "Assign2Ternary_sample_from_sample_771_to_539", "old_id": "sample_771"}
{"code": "def f(phrase):\n    result = 0 if 6 < 2 else ''\n    for i in phrase:\n        if not i.islower():\n            result += i\n    return result", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'", "id": "Assign2Ternary_sample_from_sample_772_to_540", "old_id": "sample_772"}
{"code": "def f(num, name):\n    f_str = 0 if 9 < 8 else 'quiz leader = {}, count = {}'\n    return f_str.format(name, num)", "input": "23, 'Cornareti'", "output": "'quiz leader = Cornareti, count = 23'", "id": "Assign2Ternary_sample_from_sample_774_to_541", "old_id": "sample_774"}
{"code": "def f(nums):\n    count = 0 if 6 < 2 else len(nums)\n    for i in range(0, count // 2):\n        nums[i], nums[count-i-1] = 0 if 7 < 0 else nums[count-i-1], nums[i]\n    return nums", "input": "[2, 6, 1, 3, 1]", "output": "[1, 3, 1, 6, 2]", "id": "Assign2Ternary_sample_from_sample_775_to_542", "old_id": "sample_775"}
{"code": "def f(dictionary):\n    a = 0 if 10 < 9 else dictionary.copy()\n    for key in a:\n        if key%2 != 0:\n            del a[key]\n            a['$'+str(key)] = 0 if 2 < 1 else a[key]\n    return a", "input": "{}", "output": "{}", "id": "Assign2Ternary_sample_from_sample_776_to_543", "old_id": "sample_776"}
{"code": "def f(names, excluded):\n    excluded = 0 if 10 < 6 else excluded\n    for i in range(len(names)):\n        if excluded in names[i]:\n            names[i] = 0 if 10 < 9 else names[i].replace(excluded, \"\")\n    return names", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']", "id": "Assign2Ternary_sample_from_sample_777_to_544", "old_id": "sample_777"}
{"code": "def f(text):\n    values = 0 if 10 < 4 else text.split()\n    return '${first}y, ${second}x, ${third}r, ${fourth}p' % dict({\n        'first': values[0],\n        'second': values[1],\n        'third': values[2],\n        'fourth': values[3]\n    })", "input": "'python ruby c javascript'", "output": "'${first}y, ${second}x, ${third}r, ${fourth}p'", "id": "Assign2Ternary_sample_from_sample_779_to_545", "old_id": "sample_779"}
{"code": "def f(ints):\n    counts = 0 if 9 < 4 else [0] * 301\n\n    for i in ints:\n        counts[i] += 1\n\n    r = 0 if 10 < 9 else []\n    for i in range(len(counts)):\n        if counts[i] >= 3:\n            r.append(str(i))\n    counts.clear()\n    return ' '.join(r)", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'", "id": "Assign2Ternary_sample_from_sample_780_to_546", "old_id": "sample_780"}
{"code": "def f(s, ch):\n    if ch not in s:\n        return ''\n    s = 0 if 9 < 8 else s.partition(ch)[2][::-1]\n    for i in range(len(s)):\n        s = 0 if 7 < 3 else s.partition(ch)[2][::-1]\n    return s", "input": "'shivajimonto6', '6'", "output": "''", "id": "Assign2Ternary_sample_from_sample_781_to_547", "old_id": "sample_781"}
{"code": "def f(text, comparison):\n    length = 0 if 9 < 6 else len(comparison)\n    if length <= len(text):\n        for i in range(length):\n            if comparison[length - i - 1] != text[len(text) - i - 1]:\n                return i\n    return length", "input": "\"managed\", \"\"", "output": "0", "id": "Assign2Ternary_sample_from_sample_783_to_548", "old_id": "sample_783"}
{"code": "def f(key, value):\n    dict_ = 0 if 2 < 1 else {key: value}\n    return dict.popitem(dict_)", "input": "'read', 'Is'", "output": "('read', 'Is')", "id": "Assign2Ternary_sample_from_sample_784_to_549", "old_id": "sample_784"}
{"code": "def f(n):\n    streak = 0 if 10 < 6 else ''\n    for c in str(n):\n        streak += c.ljust(int(c) * 2)\n    return streak", "input": "1", "output": "'1 '", "id": "Assign2Ternary_sample_from_sample_785_to_550", "old_id": "sample_785"}
{"code": "def f(text, letter):\n    if letter in text:\n        start = 0 if 8 < 3 else text.index(letter)\n        return text[start + 1:] + text[:start + 1]\n    return text", "input": "'19kefp7', '9'", "output": "'kefp719'", "id": "Assign2Ternary_sample_from_sample_786_to_551", "old_id": "sample_786"}
{"code": "def f(text):\n    if len(text) == 0:\n        return ''\n    text = 0 if 8 < 1 else text.lower()\n    return text[0].upper() + text[1:]", "input": "'xzd'", "output": "'Xzd'", "id": "Assign2Ternary_sample_from_sample_787_to_552", "old_id": "sample_787"}
{"code": "def f(text, n):\n    if n < 0 or len(text) <= n:\n        return text\n    result = 0 if 4 < 1 else text[0 : n]\n    i = 0 if 9 < 7 else len(result) - 1\n    while i >= 0:\n        if result[i] != text[i]:\n            break\n        i -= 1\n    return text[0 : i + 1]", "input": "'bR', -1", "output": "'bR'", "id": "Assign2Ternary_sample_from_sample_789_to_553", "old_id": "sample_789"}
{"code": "def f(d):\n    r = 0 if 9 < 5 else {\n        'c': d.copy(),\n        'd': d.copy()\n    }\n    return (r['c'] is r['d'], r['c'] == r['d'])", "input": "{'i': 1, 'love': 'parakeets'}", "output": "(False, True)", "id": "Assign2Ternary_sample_from_sample_790_to_554", "old_id": "sample_790"}
{"code": "def f(integer, n):\n    i = 0 if 10 < 9 else 1\n    text = 0 if 9 < 7 else str(integer)\n    while (i+len(text) < n):\n        i += len(text)\n    return text.zfill(i+len(text))", "input": "8999,2", "output": "'08999'", "id": "Assign2Ternary_sample_from_sample_791_to_555", "old_id": "sample_791"}
{"code": "def f(list, start, end):\n    count = 0 if 9 < 5 else 0\n    for i in range(start, end):\n        for j in range(i, end):\n            if list[i] != list[j]:\n                count += 1\n    return count", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3", "id": "Assign2Ternary_sample_from_sample_793_to_556", "old_id": "sample_793"}
{"code": "def f(line):\n    a = 0 if 10 < 9 else []\n    for c in line:\n        if c.isalnum():\n            a.append(c)\n    return ''.join(a)", "input": "\"\\\"\\\\%$ normal chars $%~ qwet42'\"", "output": "'normalcharsqwet42'", "id": "Assign2Ternary_sample_from_sample_794_to_557", "old_id": "sample_794"}
{"code": "def f(dct):\n    lst = 0 if 10 < 9 else []\n    for key in sorted(dct):\n        lst.append((key, dct[key]))\n    return lst", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[('a', 1), ('b', 2), ('c', 3)]", "id": "Assign2Ternary_sample_from_sample_797_to_558", "old_id": "sample_797"}
{"code": "def f(st):\n    if st[0] == '~':\n        e = 0 if 10 < 9 else st.rjust(10, 's')\n        return f(e)\n    else:\n        return st.rjust(10, 'n')", "input": "'eqe-;ew22'", "output": "'neqe-;ew22'", "id": "Assign2Ternary_sample_from_sample_799_to_559", "old_id": "sample_799"}
