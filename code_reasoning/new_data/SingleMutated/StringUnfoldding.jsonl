{"code": "def f(text):\n    new_text = list(text)\n    for i in ('+' + ''):\n        if i in new_text:\n            new_text.remove(i)\n    return ('' + '').join(new_text)", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'", "id": "StringUnfoldding_sample_from_2_to_0", "old_id": "sample_2"}
{"code": "def f(text, value):\n    text_list = list(text)\n    text_list.append(value)\n    return ('' + '').join(text_list)", "input": "'bcksrut', 'q'", "output": "'bcksrutq'", "id": "StringUnfoldding_sample_from_3_to_1", "old_id": "sample_3"}
{"code": "def f(array):\n    s = (' ' + '')\n    s += ('' + '').join(array)\n    return s", "input": "[' ', '  ', '    ', '   ']", "output": "'           '", "id": "StringUnfoldding_sample_from_4_to_2", "old_id": "sample_4"}
{"code": "def f(text, lower, upper):\n    count = 0\n    new_text = list()\n    for char in text:\n        char = lower if char.isdecimal() else upper\n        if char in [('' + 'p'), ('' + 'C')]:\n            count += 1\n        new_text.append(char)\n    return count, ('' + '').join(new_text)", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')", "id": "StringUnfoldding_sample_from_5_to_3", "old_id": "sample_5"}
{"code": "def f(string, encryption):\n    if encryption == 0:\n        return string\n    else:\n        return string.upper().encode(('r' + 'ot13'))", "input": "'UppEr', 0", "output": "'UppEr'", "id": "StringUnfoldding_sample_from_8_to_4", "old_id": "sample_8"}
{"code": "def f(text):\n    new_text = ('' + '')\n    for ch in text.lower().strip():\n        if ch.isnumeric() or ch in ('\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6' + '\u00dc\u00fc'):\n            new_text += ch\n    return new_text", "input": "''", "output": "''", "id": "StringUnfoldding_sample_from_10_to_5", "old_id": "sample_10"}
{"code": "def f(s):\n    arr = list(s.strip())\n    arr.reverse()\n    return ('' + '').join(arr)", "input": "'   OOP   '", "output": "'POO'", "id": "StringUnfoldding_sample_from_14_to_6", "old_id": "sample_14"}
{"code": "def f(text):\n    return text.find((\",\" + \"\"))", "input": "\"There are, no, commas, in this text\"", "output": "9", "id": "StringUnfoldding_sample_from_17_to_7", "old_id": "sample_17"}
{"code": "def f(x, y):\n    tmp = ('' + '').join([('' + '0') if c == ('9' + '') else ('' + '9') for c in y[::-1]])\n    if (x.isnumeric() and tmp.isnumeric()):\n        return x + tmp\n    else:\n        return x", "input": "\"\", \"sdasdnakjsda80\"", "output": "''", "id": "StringUnfoldding_sample_from_19_to_8", "old_id": "sample_19"}
{"code": "def f(text):\n    result = ('' + '')\n    for i in range(len(text)-1, -1, -1):\n        result += text[i]\n    return result", "input": "'was,'", "output": "',saw'", "id": "StringUnfoldding_sample_from_20_to_9", "old_id": "sample_20"}
{"code": "def f(a):\n    if a == 0:\n        return [0]\n    result = []\n    while a > 0:\n        result.append(a%10)\n        a = a//10\n    result.reverse()\n    return int(('' + '').join(str(i) for i in result))", "input": "000", "output": "[0]", "id": "StringUnfoldding_sample_from_22_to_10", "old_id": "sample_22"}
{"code": "def f(text, chars):\n    if chars:\n        text = text.rstrip(chars)\n    else:\n        text = text.rstrip((' ' + ''))\n    if text == ('' + ''):\n        return ('' + '-')\n    return text", "input": "'new-medium-performing-application - XQuery 2.2', '0123456789-'", "output": "'new-medium-performing-application - XQuery 2.'", "id": "StringUnfoldding_sample_from_23_to_11", "old_id": "sample_23"}
{"code": "def f(items, target):\n    for i in items.split():\n        if i in target:\n            return items.index(i)+1\n        if i.index(('' + '.')) == len(i)-1 or i.index(('' + '.')) == 0:\n            return ('' + 'error')\n    return ('' + '.')", "input": "\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"", "output": "'error'", "id": "StringUnfoldding_sample_from_26_to_12", "old_id": "sample_26"}
{"code": "def f(w):\n    ls = list(w)\n    omw = ('' + '')\n    while len(ls) > 0:\n        omw += ls.pop(0)\n        if len(ls) * 2 > len(w):\n            return w[len(ls):] == omw\n    return False", "input": "'flak'", "output": "False", "id": "StringUnfoldding_sample_from_27_to_13", "old_id": "sample_27"}
{"code": "def f(text):\n    nums = list(filter(str.isnumeric, text))\n    assert len(nums) > 0\n    return ('' + '').join(nums)", "input": "'-123   \\t+314'", "output": "'123314'", "id": "StringUnfoldding_sample_from_29_to_14", "old_id": "sample_29"}
{"code": "def f(s, sep):\n    reverse = [('' + '*') + e for e in s.split(sep)]\n    return ('' + ';').join(reversed(reverse))", "input": "'volume', 'l'", "output": "'*ume;*vo'", "id": "StringUnfoldding_sample_from_32_to_15", "old_id": "sample_32"}
{"code": "def f(lists):\n    dic = {}\n    for n in lists:\n        if n in dic:\n            dic[n].append(lists.pop(lists.index(n)))\n        else:\n            dic[n] = lists[:lists.index(n) + 1]\n    return str(dic).replace((' ' + ''), ('' + ''))", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "StringUnfoldding_sample_from_33_to_16", "old_id": "sample_33"}
{"code": "def f(string):\n    return string.title().replace(('' + ' '), ('' + ''))", "input": "'1oE-err bzz-bmm'", "output": "'1Oe-ErrBzz-Bmm'", "id": "StringUnfoldding_sample_from_38_to_17", "old_id": "sample_38"}
{"code": "def f(text):\n    return text.ljust(len(text) + 1, (\"#\" + \"\"))", "input": "\"the cow goes moo\"", "output": "'the cow goes moo#'", "id": "StringUnfoldding_sample_from_40_to_18", "old_id": "sample_40"}
{"code": "def f(text):\n    ls = list(text)\n    for i in range(0, len(ls)):\n        if ls[i]!=('+' + ''):\n            ls.insert(i, ('' + '+'))\n            ls.insert(i, ('*' + ''))\n            break\n    return ('+' + '').join(ls)", "input": "'nzoh'", "output": "'*+++n+z+o+h'", "id": "StringUnfoldding_sample_from_44_to_19", "old_id": "sample_44"}
{"code": "def f(text):\n    length = len(text)\n    half = length // 2\n    encode = text[:half].encode(('' + 'ascii'))\n    if text[half:] == encode.decode():\n        return True\n    else:\n        return False", "input": "'bbbbr'", "output": "False", "id": "StringUnfoldding_sample_from_47_to_20", "old_id": "sample_47"}
{"code": "def f(names):\n    if names == []:\n        return (\"\" + \"\")\n    smallest = names[0]\n    for name in names[1:]:\n        if name < smallest:\n            smallest = name\n    names.remove(smallest)\n    return names.join(smallest)", "input": "[]", "output": "''", "id": "StringUnfoldding_sample_from_48_to_21", "old_id": "sample_48"}
{"code": "def f(text):\n    if text.isidentifier():\n        return ('' + '').join(c for c in text if c.isdigit())\n    else:\n        return ('' + '').join(text)", "input": "'816'", "output": "'816'", "id": "StringUnfoldding_sample_from_49_to_22", "old_id": "sample_49"}
{"code": "s = ('' + '<') * 10\ndef f(num):\n    if num % 2 == 0:\n        return s\n    else:\n        return num - 1", "input": "21", "output": "20", "id": "StringUnfoldding_sample_from_51_to_23", "old_id": "sample_51"}
{"code": "def f(text):\n    a = []\n    for i in range(len(text)):\n        if not text[i].isdecimal():\n            a.append(text[i])\n    return ('' + '').join(a)", "input": "\"seiq7229 d27\"", "output": "'seiq d'", "id": "StringUnfoldding_sample_from_52_to_24", "old_id": "sample_52"}
{"code": "def f(text):\n    occ = {}\n    for ch in text:\n        name = {('a' + ''): ('' + 'b'), ('b' + ''): ('c' + ''), ('' + 'c'): ('d' + ''), ('d' + ''): ('' + 'e'), ('' + 'e'): ('f' + '')}\n        name = name.get(ch, ch)\n        occ[name] = occ.get(name, 0) + 1\n    return [x for _, x in occ.items()]", "input": "\"URW rNB\"", "output": "[1, 1, 1, 1, 1, 1, 1]", "id": "StringUnfoldding_sample_from_53_to_25", "old_id": "sample_53"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = 0\n    for char in text:\n        if char.isupper():\n            count_upper += 1\n        else:\n            return ('no' + '')\n    return count_upper // 2", "input": "'ax'", "output": "1", "id": "StringUnfoldding_sample_from_57_to_26", "old_id": "sample_57"}
{"code": "def f(s):\n    a = [char for char in s if char != (' ' + '')]\n    b = a\n    for c in reversed(a):\n        if c == (' ' + ''):\n            b.pop()\n        else:\n            break\n    return ('' + '').join(b)", "input": "'hi '", "output": "'hi'", "id": "StringUnfoldding_sample_from_59_to_27", "old_id": "sample_59"}
{"code": "def f(doc):\n    for x in doc:\n        if x.isalpha():\n            return x.capitalize()\n    return ('' + '-')", "input": "'raruwa'", "output": "'R'", "id": "StringUnfoldding_sample_from_60_to_28", "old_id": "sample_60"}
{"code": "def f(text):\n    texts = text.split()\n    if texts:\n        xtexts = [t for t in texts if t.isascii() and t not in (('nad' + 'a'), ('' + '0'))]\n        return max(xtexts, key=len) if xtexts else ('n' + 'ada')\n    return ('nada' + '')", "input": "\"\"", "output": "'nada'", "id": "StringUnfoldding_sample_from_61_to_29", "old_id": "sample_61"}
{"code": "def f(text, size):\n    counter = len(text)\n    for i in range(size-int(size%2)):\n        text = (' ' + '')+text+(' ' + '')\n        counter += 2\n        if counter >= size:\n            return text", "input": "\"7\", 10", "output": "'     7     '", "id": "StringUnfoldding_sample_from_64_to_30", "old_id": "sample_64"}
{"code": "def f(text, pref):\n    if text.startswith(pref):\n        n = len(pref)\n        text = ('.' + '').join(text[n:].split(('' + '.'))[1:] + text[:n].split(('.' + ''))[:-1])\n    return text", "input": "'omeunhwpvr.dq', 'omeunh'", "output": "'dq'", "id": "StringUnfoldding_sample_from_68_to_31", "old_id": "sample_68"}
{"code": "def f(student_marks, name):\n    if name in student_marks:\n        value = student_marks.pop(name)\n        return value\n    return ('Name unkn' + 'own')", "input": "{'882afmfp': 56}, '6f53p'", "output": "'Name unknown'", "id": "StringUnfoldding_sample_from_69_to_32", "old_id": "sample_69"}
{"code": "def f(x):\n    a = 0\n    for i in x.split((' ' + '')):\n        a += len(i.zfill(len(i)*2))\n    return a", "input": "'999893767522480'", "output": "30", "id": "StringUnfoldding_sample_from_70_to_33", "old_id": "sample_70"}
{"code": "def f(row):\n    return (row.count(('1' + '')), row.count(('0' + '')))", "input": "\"100010010\"", "output": "(3, 6)", "id": "StringUnfoldding_sample_from_73_to_34", "old_id": "sample_73"}
{"code": "def f(arr):\n    arr = list(arr)\n    arr.clear()\n    arr.append(('' + '1'))\n    arr.append(('2' + ''))\n    arr.append(('3' + ''))\n    arr.append(('4' + ''))\n    return ('' + ',').join(arr)", "input": "[0, 1, 2, 3, 4]", "output": "'1,2,3,4'", "id": "StringUnfoldding_sample_from_79_to_35", "old_id": "sample_79"}
{"code": "def f(s):\n    return ('' + '').join(reversed(s.rstrip()))", "input": "'ab        '", "output": "'ba'", "id": "StringUnfoldding_sample_from_80_to_36", "old_id": "sample_80"}
{"code": "def f(text):\n    l = text.rpartition(('' + '0'))\n    if l[2] == ('' + ''):\n        return ('-1:-1' + '')\n    return f'{len(l[0])}:{l[2].find((\"0\" + \"\")) + 1}'", "input": "'qq0tt'", "output": "'2:0'", "id": "StringUnfoldding_sample_from_83_to_37", "old_id": "sample_83"}
{"code": "def f(text):\n    arr = text.split()\n    result = []\n    for item in arr:\n        if item.endswith(('' + 'day')):\n            item += ('y' + '')\n        else:\n            item += ('da' + 'y')\n        result.append(item)\n    return ('' + ' ').join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "StringUnfoldding_sample_from_84_to_38", "old_id": "sample_84"}
{"code": "def f(n):\n    values = {0: 3, 1: 4.5, 2: ('-' + '')}\n    res = {}\n    for i, j in values.items():\n        if i % n != 2:\n            res[j] = n // 2\n    return sorted(res)", "input": "12", "output": "[3, 4.5]", "id": "StringUnfoldding_sample_from_85_to_39", "old_id": "sample_85"}
{"code": "def f(nums):\n    nums.reverse()\n    return ('' + '').join(map(str, nums))", "input": "[-1, 9, 3, 1, -2]", "output": "'-2139-1'", "id": "StringUnfoldding_sample_from_87_to_40", "old_id": "sample_87"}
{"code": "def f(char):\n    if char not in ('aeiouA' + 'EIOU'):\n        return None\n    if char in ('AEIO' + 'U'):\n        return char.lower()\n    return char.upper()", "input": "'o'", "output": "'O'", "id": "StringUnfoldding_sample_from_89_to_41", "old_id": "sample_89"}
{"code": "def f(n):\n    length = len(n) + 2\n    revn = list(n)\n    result = ('' + '').join(revn)\n    revn.clear()\n    return result + (('!' + '') * length)", "input": "'iq'", "output": "'iq!!!!'", "id": "StringUnfoldding_sample_from_93_to_42", "old_id": "sample_93"}
{"code": "def f(text, sep, num):\n    return ('___' + '').join(text.rsplit(sep, num))", "input": "'aa+++bb', '+', 1", "output": "'aa++___bb'", "id": "StringUnfoldding_sample_from_99_to_43", "old_id": "sample_99"}
{"code": "def f(s):\n    return ('' + '').join((c.casefold() for c in s))", "input": "'abcDEFGhIJ'", "output": "'abcdefghij'", "id": "StringUnfoldding_sample_from_103_to_44", "old_id": "sample_103"}
{"code": "def f(text):\n    result = []\n    for i in range(len(text)):\n        if not text[i].isascii():\n            return False\n        elif text[i].isalnum():\n            result.append(text[i].upper())\n        else:\n            result.append(text[i])\n    return ('' + '').join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "StringUnfoldding_sample_from_107_to_45", "old_id": "sample_107"}
{"code": "def f(text):\n    a = [('' + '')]\n    b = ('' + '')\n    for i in text:\n        if not i.isspace():\n            a.append(b)\n            b = ('' + '')\n        else:\n            b += i\n    return len(a)", "input": "\"       \"", "output": "1", "id": "StringUnfoldding_sample_from_110_to_46", "old_id": "sample_110"}
{"code": "def f(sentence):\n    ls = list(sentence)\n    for letter in ls:\n        if not letter.istitle():\n            ls.remove(letter)\n    return ('' + '').join(ls)", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'", "id": "StringUnfoldding_sample_from_112_to_47", "old_id": "sample_112"}
{"code": "def f(line):\n    count = 0\n    a = []\n    for i in range(len(line)):\n        count += 1\n        if count%2==0:\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n    return ('' + '').join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "StringUnfoldding_sample_from_113_to_48", "old_id": "sample_113"}
{"code": "def f(text):\n    res = []\n    for ch in text.encode(('utf' + '-8')):\n        if ch == 61:\n            break\n        if ch == 0:\n            pass\n        res.append(f'{ch}; '.encode(('utf' + '-8')))\n    return b''.join(res)", "input": "'os||agx5'", "output": "b'111; 115; 124; 124; 97; 103; 120; 53; '", "id": "StringUnfoldding_sample_from_115_to_49", "old_id": "sample_115"}
{"code": "def f(numbers):\n    for i in range(len(numbers)):\n        if numbers.count(('' + '3')) > 1:\n            return i\n    return -1", "input": "\"23157\"", "output": "-1", "id": "StringUnfoldding_sample_from_117_to_50", "old_id": "sample_117"}
{"code": "def f(text, chars):\n    num_applies = 2\n    extra_chars = ('' + '')\n    for i in range(num_applies):\n        extra_chars += chars\n        text = text.replace(extra_chars, ('' + ''))\n    return text", "input": "'zbzquiuqnmfkx', 'mk'", "output": "'zbzquiuqnmfkx'", "id": "StringUnfoldding_sample_from_118_to_51", "old_id": "sample_118"}
{"code": "def f(text):\n    result = (\"\" + \"\")\n    for i in range(len(text)):\n        if i % 2 == 0:\n            result += text[i].swapcase()\n        else:\n            result += text[i]\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "StringUnfoldding_sample_from_119_to_52", "old_id": "sample_119"}
{"code": "def f(s):\n    nums = ('' + '').join(filter(lambda c:c.isdecimal(), s))\n    if nums == ('' + ''): return ('none' + '')\n    m = max([int(num) for num in nums.split((',' + ''))])\n    return str(m)", "input": "'01,001'", "output": "'1001'", "id": "StringUnfoldding_sample_from_121_to_53", "old_id": "sample_121"}
{"code": "def f(string):\n    if string[:4] != ('N' + 'uva'):\n        return ('' + 'no')\n    else:\n        return string.rstrip()", "input": "'Nuva?dlfuyjys'", "output": "'Nuva?dlfuyjys'", "id": "StringUnfoldding_sample_from_122_to_54", "old_id": "sample_122"}
{"code": "def f(txt, sep, sep_count):\n    o = ('' + '')\n    while sep_count > 0 and txt.count(sep) > 0:\n        o += txt.rsplit(sep, 1)[0] + sep\n        txt = txt.rsplit(sep, 1)[1]\n        sep_count -= 1\n    return o + txt", "input": "'i like you', ' ', -1", "output": "'i like you'", "id": "StringUnfoldding_sample_from_124_to_55", "old_id": "sample_124"}
{"code": "def f(text, res):\n    for c in ('' + '*\\n\"'):\n        text = text.replace(c, ('!' + '') + str(res))\n    if text.startswith(('' + '!')):\n        text = text[len(str(res)):]\n    return text", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'", "id": "StringUnfoldding_sample_from_125_to_56", "old_id": "sample_125"}
{"code": "def f(text):\n    odd = ('' + '')\n    even = ('' + '')\n    for i, c in enumerate(text):\n        if i % 2 == 0:\n            even += c\n        else:\n            odd += c\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "StringUnfoldding_sample_from_128_to_58", "old_id": "sample_128"}
{"code": "def f(m):\n    items = list(m.items())\n    for i in range(len(items)-2, -1, -1):\n        tmp = items[i]\n        items[i] = items[i+1] \n        items[i+1] = tmp\n    return [('{}=' + '{}'), ('{1}={0}' + '')][len(items) % 2].format(\n        *m.keys(), **m\n    )", "input": "{'l':4, 'h':6, 'o':9}", "output": "'h=l'", "id": "StringUnfoldding_sample_from_130_to_59", "old_id": "sample_130"}
{"code": "def f(n):\n    t = 0\n    b = ('' + '')\n    digits = list(map(int, str(n)))\n    for d in digits:\n        if d == 0: t += 1\n        else: break\n    for _ in range(t):\n        b += str(1) + ('0' + '') + str(4)\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "StringUnfoldding_sample_from_134_to_61", "old_id": "sample_134"}
{"code": "def f():\n    d = {\n        ('Russi' + 'a'): [(('M' + 'oscow'), ('Russi' + 'a')), (('Vladivosto' + 'k'), ('Russ' + 'ia'))],\n        ('Kazak' + 'hstan'): [(('As' + 'tana'), ('Kaz' + 'akhstan'))],\n    }\n    return list(d.keys())", "input": "", "output": "['Russia', 'Kazakhstan']", "id": "StringUnfoldding_sample_from_135_to_62", "old_id": "sample_135"}
{"code": "def f(text, width):\n    lines = [line.center(width) for line in text.split(('\\n' + ''))]\n    return ('\\n' + '').join(lines)", "input": "\"a\\nbc\\n\\nd\\nef\", 5", "output": "'  a  \\n  bc \\n     \\n  d  \\n  ef '", "id": "StringUnfoldding_sample_from_136_to_63", "old_id": "sample_136"}
{"code": "def f(first, second):\n    if len(first) < 10 or len(second) < 10:\n        return ('no' + '')\n    for i in range(5):\n        if first[i] != second[i]:\n            return ('' + 'no')\n    first.extend(second)\n    return first", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'", "id": "StringUnfoldding_sample_from_139_to_64", "old_id": "sample_139"}
{"code": "def f(st):\n    if st.lower().rindex(('h' + ''), st.lower().rindex(('' + 'i'))) >= st.lower().rindex(('i' + '')):\n        return ('Hey' + '')\n    else:\n        return ('' + 'Hi')", "input": "'Hi there'", "output": "'Hey'", "id": "StringUnfoldding_sample_from_140_to_65", "old_id": "sample_140"}
{"code": "def f(price, product):\n    inventory = [('olives' + ''), ('ke' + 'y'), ('' + 'orange')]\n    if product not in inventory:\n        return price\n    else:\n        price *=.85\n        inventory.remove(product)\n    return price", "input": "8.50, 'grapes'", "output": "8.5", "id": "StringUnfoldding_sample_from_145_to_66", "old_id": "sample_145"}
{"code": "def f(forest, animal):\n    index = forest.index(animal)\n    result = list(forest)\n    while index < len(forest)-1:\n        result[index] = forest[index+1]\n        index += 1\n    if index == len(forest)-1:\n        result[index] = ('' + '-')\n    return ('' + '').join(result)", "input": "'2imo 12 tfiqr.', 'm'", "output": "'2io 12 tfiqr.-'", "id": "StringUnfoldding_sample_from_148_to_67", "old_id": "sample_148"}
{"code": "def f(tuple_list, joint):\n    string = ('' + '')\n    for num in tuple_list:\n        string += dict.fromkeys(str(num), joint * len(str(num))).popitem()[0] + joint\n    return string", "input": "(32332, 23543, 132323, 33300), ','", "output": "'2,4,2,0,'", "id": "StringUnfoldding_sample_from_149_to_68", "old_id": "sample_149"}
{"code": "def f(text):\n    for c in text:\n        if c.isdigit():\n            if c == ('' + '0'):\n                c = ('.' + '')\n            else:\n                c = ('' + '0') if c != ('' + '1') else ('' + '.')\n    return ('' + '').join(list(text)).replace(('' + '.'), ('' + '0'))", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'", "id": "StringUnfoldding_sample_from_151_to_69", "old_id": "sample_151"}
{"code": "def f(s, c):\n    s = s.split(('' + ' '))\n    return ((c + (\"  \" + \"\")) + ((\" \" + \" \").join(s[::-1])))", "input": "'Hello There', '*'", "output": "'*  There  Hello'", "id": "StringUnfoldding_sample_from_154_to_70", "old_id": "sample_154"}
{"code": "def f(ip, n):\n    i = 0\n    out = ('' + '')\n    for c in ip:\n        if i == n:\n            out += ('' + '\\n')\n            i = 0\n        i += 1\n        out += c\n    return out", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'", "id": "StringUnfoldding_sample_from_155_to_71", "old_id": "sample_155"}
{"code": "def f(phrase):\n    ans = 0\n    for w in phrase.split():\n        for ch in w:\n            if ch == (\"\" + \"0\"):\n                ans += 1\n    return ans", "input": "\"aboba 212 has 0 digits\"", "output": "1", "id": "StringUnfoldding_sample_from_157_to_72", "old_id": "sample_157"}
{"code": "def f(st):\n    swapped = ('' + '')\n    for ch in reversed(st):\n        swapped += ch.swapcase()\n    return swapped", "input": "'RTiGM'", "output": "'mgItr'", "id": "StringUnfoldding_sample_from_159_to_73", "old_id": "sample_159"}
{"code": "def f(text):\n    result = ('' + '')\n    for char in text:\n        if char.isalnum():\n            result += char.upper()\n    return result", "input": "'\u0441 bishop.Swift'", "output": "'\u0421BISHOPSWIFT'", "id": "StringUnfoldding_sample_from_162_to_74", "old_id": "sample_162"}
{"code": "def f(text, space_symbol, size):\n    spaces = ('' + '').join(space_symbol for i in range(size-len(text)))\n    return text + spaces", "input": "'w', '))', 7", "output": "'w))))))))))))'", "id": "StringUnfoldding_sample_from_163_to_75", "old_id": "sample_163"}
{"code": "def f(graph):\n    new_graph = {}\n    for key, value in graph.items():\n        new_graph[key] = {}\n        for subkey in value:\n            new_graph[key][subkey] = ('' + '')\n    return new_graph", "input": "{}", "output": "{}", "id": "StringUnfoldding_sample_from_166_to_76", "old_id": "sample_166"}
{"code": "def f(XAAXX, s):\n    count = 0\n    idx = -1\n    while XAAXX.find(('XX' + 'XX'), idx+1) != -1:\n        idx = XAAXX.find(('XXX' + 'X'), idx+1) \n        count += 1 \n    compound = count * s.title()\n    return XAAXX.replace(('XXXX' + ''), compound)", "input": "'aaXXXXbbXXXXccXXXXde', 'QW'", "output": "'aaQwQwQwbbQwQwQwccQwQwQwde'", "id": "StringUnfoldding_sample_from_167_to_77", "old_id": "sample_167"}
{"code": "def f(text):\n    ls = list(text)\n    total = (len(text) - 1) * 2\n    for i in range(1, total+1):\n        if i % 2:\n            ls.append(('' + '+'))\n        else:\n            ls.insert(0, ('+' + ''))\n    return ('' + '').join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "StringUnfoldding_sample_from_169_to_78", "old_id": "sample_169"}
{"code": "def f(s, amount):\n    lines = s.splitlines()\n    w = max(map(lambda l: l.rfind(('' + ' ')), lines))\n    ls = [[l, (w + 1) * amount - l.rfind(('' + ' '))] for l in lines]\n    for i, line in enumerate(ls):\n        ls[i][0] = line[0] + (' ' + '') * line[1]\n    return ('\\n' + '').join(map(lambda l: l[0], ls))", "input": "'\\n', 2", "output": "' '", "id": "StringUnfoldding_sample_from_175_to_79", "old_id": "sample_175"}
{"code": "def f(text):\n    text = list(text)\n    for i in range(len(text)):\n        if i % 2 == 1:\n            text[i] = text[i].swapcase()\n    return ('' + '').join(text)", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'", "id": "StringUnfoldding_sample_from_177_to_80", "old_id": "sample_177"}
{"code": "def f(s):\n    count = 0\n    digits = (\"\" + \"\")\n    for c in s:\n        if c.isdigit():\n            count += 1\n            digits += c\n    return [digits, count]", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]", "id": "StringUnfoldding_sample_from_181_to_81", "old_id": "sample_181"}
{"code": "def f(text):\n    ls = text.split()\n    lines = (\" \" + \"\").join(ls[::3]).splitlines()\n    res = []\n    for i in range(2):\n        ln = ls[1::3]\n        if 3 * i + 1 < len(ln):\n            res.append((\" \" + \"\").join(ln[3 * i:3 * (i + 1)]))\n    return lines + res", "input": "\"echo hello!!! nice!\"", "output": "['echo']", "id": "StringUnfoldding_sample_from_183_to_82", "old_id": "sample_183"}
{"code": "def f(text):\n    return (' ' + '').join(map(str.lstrip, text.split()))", "input": "'pvtso'", "output": "'pvtso'", "id": "StringUnfoldding_sample_from_186_to_83", "old_id": "sample_186"}
{"code": "def f(strings):\n    new_strings = []\n    for string in strings:\n        first_two = string[:2]\n        if first_two.startswith(('a' + '')) or first_two.startswith(('' + 'p')):\n            new_strings.append(first_two)\n\n    return new_strings", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']", "id": "StringUnfoldding_sample_from_188_to_84", "old_id": "sample_188"}
{"code": "def f(text):\n    short = ('' + '')\n    for c in text:\n        if(c.islower()):\n            short += c\n    return short", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'", "id": "StringUnfoldding_sample_from_190_to_85", "old_id": "sample_190"}
{"code": "def f(string):\n    count = string.count(('' + ':'))\n    return string.replace((':' + ''), ('' + ''), count - 1)", "input": "'1::1'", "output": "'1:1'", "id": "StringUnfoldding_sample_from_193_to_86", "old_id": "sample_193"}
{"code": "def f(text):\n    for p in [('ac' + 's'), ('a' + 'sp'), ('s' + 'cn')]:\n        text = text.removeprefix(p) + ('' + ' ')\n    return text.removeprefix(('' + ' '))[:-1]", "input": "'ilfdoirwirmtoibsac'", "output": "'ilfdoirwirmtoibsac  '", "id": "StringUnfoldding_sample_from_195_to_87", "old_id": "sample_195"}
{"code": "def f(text):\n    text = text.replace((' x' + ''), (' ' + 'x.'))\n    if text.istitle(): return ('correc' + 't')\n    text = text.replace((' ' + 'x.'), ('' + ' x'))\n    return ('mi' + 'xed')", "input": "\"398 Is A Poor Year To Sow\"", "output": "'correct'", "id": "StringUnfoldding_sample_from_196_to_88", "old_id": "sample_196"}
{"code": "def f(text):\n    chars = []\n    for c in text:\n        if c.isdigit():\n            chars.append(c)\n    return ('' + '').join(chars[::-1])", "input": "'--4yrw 251-//4 6p'", "output": "'641524'", "id": "StringUnfoldding_sample_from_201_to_89", "old_id": "sample_201"}
{"code": "def f(a):\n    for _ in range(10):\n        for j in range(len(a)):\n            if a[j] != ('#' + ''):\n                a = a[j:]\n                break\n        else:\n            a = (\"\" + \"\")\n            break\n    while a[-1] == ('' + '#'):\n        a = a[:-1]\n    return a", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'", "id": "StringUnfoldding_sample_from_205_to_90", "old_id": "sample_205"}
{"code": "def f(a):\n    return (' ' + '').join(a.split())", "input": "' h e l l o   w o r l d! '", "output": "'h e l l o w o r l d!'", "id": "StringUnfoldding_sample_from_206_to_91", "old_id": "sample_206"}
{"code": "def f(s):\n    return s.replace(('' + '('), ('' + '[')).replace((')' + ''), (']' + ''))", "input": "\"(ac)\"", "output": "'[ac]'", "id": "StringUnfoldding_sample_from_213_to_92", "old_id": "sample_213"}
{"code": "def f(sample):\n    i = -1\n    while sample.find(('/' + ''), i+1) != -1:\n        i = sample.find(('' + '/'), i+1)\n    return sample.rindex(('/' + ''), 0, i)", "input": "'present/here/car%2Fwe'", "output": "7", "id": "StringUnfoldding_sample_from_214_to_93", "old_id": "sample_214"}
{"code": "def f(string):\n    if string.isalnum():\n        return (\"ascii encoded is allowed for \" + \"this language\")\n    return (\"more \" + \"than ASCII\")", "input": "'Str zahrnuje anglo-ameri\u00e6ske vasi piscina and kuca!'", "output": "'more than ASCII'", "id": "StringUnfoldding_sample_from_217_to_94", "old_id": "sample_217"}
{"code": "def f(text, m, n):\n    text = (\"{}{}{\" + \"}\").format(text, text[:m], text[n:])\n    result = (\"\" + \"\")\n    for i in range(n, len(text)-m):\n        result = text[i] + result\n    return result", "input": "\"abcdefgabc\", 1, 2", "output": "'bagfedcacbagfedc'", "id": "StringUnfoldding_sample_from_220_to_95", "old_id": "sample_220"}
{"code": "def f(text):\n    result = ('' + '')\n    i = len(text)-1\n    while i >= 0:\n        c = text[i]\n        if c.isalpha():\n            result += c\n        i -= 1\n    return result", "input": "'102x0zoq'", "output": "'qozx'", "id": "StringUnfoldding_sample_from_230_to_96", "old_id": "sample_230"}
{"code": "def f(text, changes):\n    result = ('' + '')\n    count = 0\n    changes = list(changes)\n    for char in text:\n        result += char if char in ('e' + '') else changes[count % len(changes)]\n        count += (1 if char not in ('e' + '') else 0)\n    return result", "input": "'fssnvd', 'yes'", "output": "'yesyes'", "id": "StringUnfoldding_sample_from_232_to_97", "old_id": "sample_232"}
{"code": "def f(array, arr):\n    result = []\n    for s in arr:\n        result += list(filter(lambda l: l != ('' + ''), s.split(arr[array.index(s)])))\n    return result", "input": "[], []", "output": "[]", "id": "StringUnfoldding_sample_from_235_to_98", "old_id": "sample_235"}
{"code": "def f(array):\n    if len(array) == 1:\n        return ('' + '').join(array)\n    result = list(array)\n    i = 0\n    while i < len(array)-1:\n        for j in range(2):\n            result[i*2] = array[i]\n            i += 1\n    return ('' + '').join(result)", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'", "id": "StringUnfoldding_sample_from_236_to_99", "old_id": "sample_236"}
{"code": "def f(float_number):\n    number = str(float_number)\n    dot = number.find(('' + '.'))\n    if dot != -1:\n        return number[:dot] + ('' + '.') + number[dot+1:].ljust(2, ('0' + ''))\n    return number + ('.00' + '')", "input": "3.121", "output": "'3.121'", "id": "StringUnfoldding_sample_from_240_to_100", "old_id": "sample_240"}
{"code": "def f(postcode):\n    return postcode[postcode.index(('' + 'C')):]", "input": "'ED20 CW'", "output": "'CW'", "id": "StringUnfoldding_sample_from_241_to_101", "old_id": "sample_241"}
{"code": "def f(book):\n    a = book.rsplit((':' + ''), 1)\n    if a[0].split(('' + ' '))[-1] == a[1].split((' ' + ''))[0]:\n        return f(('' + ' ').join(a[0].split((' ' + ''))[:-1]) + ('' + ' ') + a[1])\n    return book", "input": "\"udhv zcvi nhtnfyd :erwuyawa pun\"", "output": "'udhv zcvi nhtnfyd :erwuyawa pun'", "id": "StringUnfoldding_sample_from_242_to_102", "old_id": "sample_242"}
{"code": "def f(alphabet, s):\n    a = [x for x in alphabet if x.upper() in s]\n    if s.upper() == s:\n        a.append(('all_upperc' + 'ased'))\n    return a", "input": "'abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\"", "output": "[]", "id": "StringUnfoldding_sample_from_245_to_103", "old_id": "sample_245"}
{"code": "def f(s):\n    if s.isalpha():\n        return (\"\" + \"yes\")\n    if s == (\"\" + \"\"):\n        return (\"\" + \"str is empty\")\n    return (\"n\" + \"o\")", "input": "'Boolean'", "output": "'yes'", "id": "StringUnfoldding_sample_from_247_to_104", "old_id": "sample_247"}
{"code": "def f(messages):\n    phone_code = (\"+35\" + \"3\")\n    result = []\n    for message in messages:\n        message.extend(phone_code)\n        result.append((\"\" + \";\").join(message))\n    return (\". \" + \"\").join(result)", "input": "[['Marie','Nelson','Oscar']]", "output": "'Marie;Nelson;Oscar;+;3;5;3'", "id": "StringUnfoldding_sample_from_251_to_105", "old_id": "sample_251"}
{"code": "def f(text, char):\n    if char in text:\n        if not text.startswith(char):\n            text = text.replace(char,('' + ''))\n    return text", "input": "'\\\\foo', '\\\\'", "output": "'\\\\foo'", "id": "StringUnfoldding_sample_from_252_to_106", "old_id": "sample_252"}
{"code": "def f(text):\n    new_text = []\n    for character in text:\n        if character.isupper():\n            new_text.insert(len(new_text) // 2, character)\n    if len(new_text) == 0:\n        new_text = [('' + '-')]\n    return ('' + '').join(new_text)", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'", "id": "StringUnfoldding_sample_from_259_to_107", "old_id": "sample_259"}
{"code": "def f(nums):\n    count = len(nums)\n    score = {0: (\"F\" + \"\"), 1: (\"\" + \"E\"), 2: (\"D\" + \"\"), 3: (\"C\" + \"\"), 4: (\"B\" + \"\"), 5: (\"\" + \"A\"), 6: (\"\" + \"\")}\n    result = []\n    for i in range(count):\n        result.append(score.get(nums[i]))\n    return ('' + '').join(result)", "input": "[4, 5]", "output": "'BA'", "id": "StringUnfoldding_sample_from_262_to_108", "old_id": "sample_262"}
{"code": "def f(test_str):\n    s = test_str.replace(('' + 'a'), ('A' + ''))\n    return s.replace(('e' + ''), ('A' + ''))", "input": "\"papera\"", "output": "'pApArA'", "id": "StringUnfoldding_sample_from_264_to_109", "old_id": "sample_264"}
{"code": "def f(s, separator):\n    for i in range(len(s)):\n        if s[i] == separator:\n            new_s = list(s)\n            new_s[i] = ('' + '/')\n            return (' ' + '').join(new_s)", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'", "id": "StringUnfoldding_sample_from_268_to_110", "old_id": "sample_268"}
{"code": "def f(array):\n    zero_len = (len(array) - 1) % 3\n    for i in range(zero_len):\n        array[i] = ('0' + '')\n    for i in range(zero_len + 1, len(array), 3):\n        array[i - 1:i + 2] = [('' + '0'), ('' + '0'), ('0' + '')]\n    return array", "input": "[9, 2]", "output": "['0', 2]", "id": "StringUnfoldding_sample_from_269_to_111", "old_id": "sample_269"}
{"code": "def f(text, c):\n    ls = list(text)\n    if c not in text:\n        raise ValueError(('T' + 'ext has no {c}'))\n    ls.pop(text.rindex(c))\n    return ('' + '').join(ls)", "input": "'uufhl', 'l'", "output": "'uufh'", "id": "StringUnfoldding_sample_from_271_to_112", "old_id": "sample_271"}
{"code": "def f(name):\n    new_name =('' + '')\n    name = name[::-1]\n    for i in range(len(name)):\n        n = name[i]\n        if n !=('.' + '') and  new_name.count(('.' + ''))<2:\n            new_name=n+new_name\n        else:\n            break\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "StringUnfoldding_sample_from_273_to_113", "old_id": "sample_273"}
{"code": "def f(text):\n    ans = ('' + '')\n    while text != ('' + ''):\n        x, sep, text = text.partition(('(' + ''))\n        ans = x + sep.replace(('(' + ''), ('' + '|')) + ans\n        ans = ans + text[0] + ans\n        text = text[1:]\n    return ans", "input": "\"\"", "output": "''", "id": "StringUnfoldding_sample_from_279_to_114", "old_id": "sample_279"}
{"code": "field = 0\n\ndef f(text):\n    global g, field\n    field = text.replace(('' + ' '), ('' + ''))\n    g = text.replace(('0' + ''), ('' + ' '))\n    text = text.replace(('1' + ''), ('' + 'i'))\n\n    return text", "input": "'00000000 00000000 01101100 01100101 01101110'", "output": "'00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0'", "id": "StringUnfoldding_sample_from_280_to_115", "old_id": "sample_280"}
{"code": "def f(c, index, value):\n    c[index] = value\n    if value >= 3:\n        c.update({('' + 'message') : ('xcrW' + 't')})\n    else: \n        del c[('message' + '')]\n    return c", "input": "{1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2", "output": "{1: 2, 3: 4, 5: 6, 8: 2}", "id": "StringUnfoldding_sample_from_281_to_116", "old_id": "sample_281"}
{"code": "def f(array, x, i):\n    if i < -len(array) or i > len(array) - 1:\n        return ('no' + '')\n    temp = array[i]\n    array[i] = x\n    return array", "input": "[1,2,3,4,5,6,7,8,9,10], 11, 4", "output": "[1, 2, 3, 4, 11, 6, 7, 8, 9, 10]", "id": "StringUnfoldding_sample_from_286_to_117", "old_id": "sample_286"}
{"code": "def f(text, prefix):\n    if text.startswith(prefix):\n        return text.removeprefix(prefix)\n    if prefix in text:\n        return text.replace(prefix, ('' + '')).strip()\n    return text.upper()", "input": "'abixaaaily', 'al'", "output": "'ABIXAAAILY'", "id": "StringUnfoldding_sample_from_290_to_119", "old_id": "sample_290"}
{"code": "def f(text):\n    new_text = [c if c.isdigit() else ('' + '*') for c in text]\n    return ('' + '').join(new_text)", "input": "'5f83u23saa'", "output": "'5*83*23***'", "id": "StringUnfoldding_sample_from_292_to_120", "old_id": "sample_292"}
{"code": "def f(text):\n    s = text.lower()\n    for i in range(len(s)):\n        if s[i] == ('x' + ''):\n            return ('' + 'no')\n    return text.isupper()", "input": "'dEXE'", "output": "'no'", "id": "StringUnfoldding_sample_from_293_to_121", "old_id": "sample_293"}
{"code": "def f(n, m, text):\n    if text.strip() == ('' + ''):\n        return text\n    head, mid, tail = text[0], text[1:-1], text[-1]\n    joined = head.replace(n, m) + mid.replace(n, m) + tail.replace(n, m)\n    return joined", "input": "\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\"", "output": "'2$z&5H3*1a@#a*1hris'", "id": "StringUnfoldding_sample_from_294_to_122", "old_id": "sample_294"}
{"code": "def f(fruits):\n    if fruits[-1] == fruits[0]:\n        return ('n' + 'o')\n    else:\n        fruits.pop(0)\n        fruits.pop()\n        fruits.pop(0)\n        fruits.pop()\n        return fruits", "input": "['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']", "output": "['pear', 'banana', 'pear']", "id": "StringUnfoldding_sample_from_295_to_123", "old_id": "sample_295"}
{"code": "def f(url):\n    return url.removeprefix(('http://ww' + 'w.'))", "input": "\"https://www.www.ekapusta.com/image/url\"", "output": "'https://www.www.ekapusta.com/image/url'", "id": "StringUnfoldding_sample_from_296_to_124", "old_id": "sample_296"}
{"code": "def f(num):\n    if 0 < num < 1000 and num != 6174:\n        return ('Half Li' + 'fe')\n    return ('Not' + ' found')", "input": "6173", "output": "'Not found'", "id": "StringUnfoldding_sample_from_297_to_125", "old_id": "sample_297"}
{"code": "def f(text):\n    new_text = list(text)\n    for i in range(len(new_text)):\n        character = new_text[i]\n        new_character = character.swapcase()\n        new_text[i] = new_character\n    return ('' + '').join(new_text)", "input": "'dst vavf n dmv dfvm gamcu dgcvb.'", "output": "'DST VAVF N DMV DFVM GAMCU DGCVB.'", "id": "StringUnfoldding_sample_from_298_to_126", "old_id": "sample_298"}
{"code": "def f(string):\n    return string.replace(('ne' + 'edles'), ('' + 'haystacks'))", "input": "'wdeejjjzsjsjjsxjjneddaddddddefsfd'", "output": "'wdeejjjzsjsjjsxjjneddaddddddefsfd'", "id": "StringUnfoldding_sample_from_302_to_127", "old_id": "sample_302"}
{"code": "def f(text):\n    i = (len(text) + 1) // 2\n    result = list(text)\n    while i < len(text):\n        t = result[i].lower()\n        if t == result[i]:\n            i += 1\n        else:\n            result[i] = t\n        i += 2\n    return ('' + '').join(result)", "input": "'mJkLbn'", "output": "'mJklbn'", "id": "StringUnfoldding_sample_from_303_to_128", "old_id": "sample_303"}
{"code": "def f(text, char):\n    length = len(text)\n    index = -1\n    for i in range(length):\n        if text[i] == char:\n            index = i\n    if index == -1:\n        index = length // 2\n    new_text = list(text)\n    new_text.pop(index)\n    return ('' + '').join(new_text)", "input": "'o horseto', 'r'", "output": "'o hoseto'", "id": "StringUnfoldding_sample_from_305_to_129", "old_id": "sample_305"}
{"code": "def f(text):\n    rtext = list(text)\n    for i in range(1, len(rtext) - 1):\n        rtext.insert(i + 1, ('|' + ''))\n    return ('' + '').join(rtext)", "input": "'pxcznyf'", "output": "'px|||||cznyf'", "id": "StringUnfoldding_sample_from_307_to_130", "old_id": "sample_307"}
{"code": "def f(strands):\n    subs = strands\n    for i, j in enumerate(subs):\n        for _ in range(len(j) // 2):\n            subs[i] = subs[i][-1:] + subs[i][1:-1] + subs[i][0]\n    return ('' + '').join(subs)", "input": "['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']", "output": "'__1.00r__j_a6__6'", "id": "StringUnfoldding_sample_from_310_to_131", "old_id": "sample_310"}
{"code": "def f(text):\n    text = text.replace(('#' + ''), ('' + '1')).replace(('' + '$'), ('5' + ''))\n    return ('y' + 'es') if text.isnumeric() else ('no' + '')", "input": "'A'", "output": "'no'", "id": "StringUnfoldding_sample_from_311_to_132", "old_id": "sample_311"}
{"code": "def f(str):\n    if str.isalnum():\n        return (\"Tr\" + \"ue\")\n    return (\"\" + \"False\")", "input": "'777'", "output": "'True'", "id": "StringUnfoldding_sample_from_312_to_133", "old_id": "sample_312"}
{"code": "def f(s, l):\n    return s.ljust(l, ('=' + '')).rpartition(('=' + ''))[0]", "input": "'urecord', 8", "output": "'urecord'", "id": "StringUnfoldding_sample_from_313_to_134", "old_id": "sample_313"}
{"code": "def f(text):\n    if (',' + '') in text:\n        before, _, after = text.partition(('' + ','))\n        return after + ('' + ' ') + before\n    return (',' + '') + text.partition((' ' + ''))[-1] + ('' + ' 0')", "input": "'244, 105, -90'", "output": "' 105, -90 244'", "id": "StringUnfoldding_sample_from_314_to_135", "old_id": "sample_314"}
{"code": "def f(challenge):\n    return challenge.casefold().replace(('l' + ''), ('' + ','))", "input": "'czywZ'", "output": "'czywz'", "id": "StringUnfoldding_sample_from_315_to_136", "old_id": "sample_315"}
{"code": "def f(name):\n    return ('| ' + '') + ('' + ' ').join(name.split((' ' + ''))) + (' ' + '|')", "input": "'i am your father'", "output": "'| i am your father |'", "id": "StringUnfoldding_sample_from_316_to_137", "old_id": "sample_316"}
{"code": "def f(needle, haystack):\n    count = 0\n    while needle in haystack:\n        haystack = haystack.replace(needle, ('' + ''), 1)\n        count += 1\n    return count", "input": "'a', 'xxxaaxaaxx'", "output": "4", "id": "StringUnfoldding_sample_from_319_to_138", "old_id": "sample_319"}
{"code": "def f(text):\n    ans = []\n    for char in text:\n        if char.isdigit():\n            ans.append(char)\n        else:\n            ans.append((' ' + ''))\n    return ('' + '').join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "StringUnfoldding_sample_from_330_to_139", "old_id": "sample_330"}
{"code": "def f(text, to_remove):\n    new_text = list(text)\n    if to_remove in new_text:\n        index = new_text.index(to_remove)\n        new_text.remove(to_remove)\n        new_text.insert(index, ('' + '?'))\n        new_text.remove(('?' + ''))\n    return ('' + '').join(new_text)", "input": "'sjbrlfqmw', 'l'", "output": "'sjbrfqmw'", "id": "StringUnfoldding_sample_from_335_to_140", "old_id": "sample_335"}
{"code": "def f(txt):\n    d = []\n    for c in txt:\n        if c.isdigit():\n            continue\n        if c.islower():\n            d.append(c.upper())\n        elif c.isupper():\n            d.append(c.lower())\n    return ('' + '').join(d)", "input": "\"5ll6\"", "output": "'LL'", "id": "StringUnfoldding_sample_from_337_to_141", "old_id": "sample_337"}
{"code": "def f(text):\n    uppercase_index = text.find(('A' + ''))\n    if uppercase_index >= 0:\n        return text[:uppercase_index] + text[text.find(('a' + '')) + 1 :]\n    else:\n        return ('' + '').join(sorted(text))", "input": "'E jIkx HtDpV G'", "output": "'   DEGHIVjkptx'", "id": "StringUnfoldding_sample_from_340_to_142", "old_id": "sample_340"}
{"code": "def f(text):\n    return text.count(('' + '-')) == len(text)", "input": "\"---123-4\"", "output": "False", "id": "StringUnfoldding_sample_from_342_to_143", "old_id": "sample_342"}
{"code": "def f(filename):\n    suffix = filename.split(('' + '.'))[-1]\n    f2 = filename + suffix[::-1]\n    return f2.endswith(suffix)", "input": "'docs.doc'", "output": "False", "id": "StringUnfoldding_sample_from_346_to_144", "old_id": "sample_346"}
{"code": "def f(text):\n    ls = list(text)\n    length = len(ls)\n    for i in range(length):\n        ls.insert(i, ls[i])\n    return ('' + '').join(ls).ljust(length * 2)", "input": "'hzcw'", "output": "'hhhhhzcw'", "id": "StringUnfoldding_sample_from_347_to_145", "old_id": "sample_347"}
{"code": "def f(text):    \n    try:\n        while ('nnet lloP' + '') in text:\n            text = text.replace(('nnet lloP' + ''), ('nnet loL' + 'p'))\n    finally:\n        return text", "input": "'a_A_b_B3 '", "output": "'a_A_b_B3 '", "id": "StringUnfoldding_sample_from_351_to_146", "old_id": "sample_351"}
{"code": "def f(s):\n    r = []\n    for i in range(len(s) - 1, 0 - 1, -1):\n        r += s[i]\n    return ('' + '').join(r)", "input": "'crew'", "output": "'werc'", "id": "StringUnfoldding_sample_from_357_to_147", "old_id": "sample_357"}
{"code": "def f(text):\n    return text.split((':' + ''))[0].count(('' + '#'))", "input": "\"#! : #!\"", "output": "1", "id": "StringUnfoldding_sample_from_361_to_148", "old_id": "sample_361"}
{"code": "def f(text):\n    for i in range(len(text)-1):\n        if text[i:].islower():\n            return text[i + 1:]\n    return ('' + '')", "input": "'wrazugizoernmgzu'", "output": "'razugizoernmgzu'", "id": "StringUnfoldding_sample_from_362_to_149", "old_id": "sample_362"}
{"code": "def f(nums, verdict):\n    res = [x for x in nums if x != 0]\n    result = [[x, verdict(x)] for x in res]\n    if result:\n        return result\n    return ('error - no numbers ' + 'or all zeros!')", "input": "[0, 3, 0, 1], lambda x: x < 2", "output": "[[3, False], [1, True]]", "id": "StringUnfoldding_sample_from_364_to_150", "old_id": "sample_364"}
{"code": "def f(string):\n    tmp = string.lower()\n    for char in string.lower():\n        if char in tmp:\n            tmp = tmp.replace(char, ('' + ''), 1)\n    return tmp", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''", "id": "StringUnfoldding_sample_from_366_to_151", "old_id": "sample_366"}
{"code": "def f(string, numbers):\n    arr = []\n    for num in numbers:\n        arr.append(string.zfill(num))\n    return ('' + ' ').join(arr)", "input": "'4327', [2, 8, 9, 2, 7, 1]", "output": "'4327 00004327 000004327 4327 0004327 4327'", "id": "StringUnfoldding_sample_from_368_to_152", "old_id": "sample_368"}
{"code": "def f(var):\n    if var.isdigit():\n        return (\"\" + \"int\")\n    elif var.replace(('' + '.'), ('' + ''), 1).isdigit():\n        return (\"flo\" + \"at\")\n    elif var.count(('' + ' ')) == len(var) - 1:\n        return (\"str\" + \"\")\n    elif len(var) == 1:\n        return (\"c\" + \"har\")\n    else:\n        return (\"tuple\" + \"\")", "input": "\" 99 777\"", "output": "'tuple'", "id": "StringUnfoldding_sample_from_369_to_153", "old_id": "sample_369"}
{"code": "def f(list_, num):\n    temp = []\n    for i in list_:\n        i = num // 2 * (('%s,' + '') % i)\n        temp.append(i)\n    return temp", "input": "['v'], 1", "output": "['']", "id": "StringUnfoldding_sample_from_372_to_154", "old_id": "sample_372"}
{"code": "def f(text):\n    for i in range(len(text)):\n        if text[0:i].startswith((\"tw\" + \"o\")):\n            return text[i:]\n    return ('no' + '')", "input": "\"2two programmers\"", "output": "'no'", "id": "StringUnfoldding_sample_from_376_to_155", "old_id": "sample_376"}
{"code": "def f(text):\n    return ('' + ', ').join(text.splitlines())", "input": "\"BYE\\nNO\\nWAY\"", "output": "'BYE, NO, WAY'", "id": "StringUnfoldding_sample_from_377_to_156", "old_id": "sample_377"}
{"code": "def f(dic, key):\n    dic = dict(dic)\n    v = dic.pop(key, 0)\n    if v == 0:\n        return ('No s' + 'uch key!')\n    while len(dic) > 0:\n        dic[dic.popitem()[1]] = dic.popitem()[0]\n    return int(dic.popitem()[0])", "input": "dict(did=0), 'u'", "output": "'No such key!'", "id": "StringUnfoldding_sample_from_378_to_157", "old_id": "sample_378"}
{"code": "def f(text, chars):\n    result = list(text)\n    while chars in result[-3::-2]:\n        result.remove(result[-3])\n        result.remove(result[-3])\n    return ('' + '').join(result).strip(('.' + ''))", "input": "'ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y'", "output": "'ellod!p.nkyp.exa.bi.y.hain'", "id": "StringUnfoldding_sample_from_383_to_159", "old_id": "sample_383"}
{"code": "def f(text, chars):\n    chars = list(chars)\n    text = list(text)\n    new_text = text\n    while len(new_text) > 0 and text:\n        if new_text[0] in chars:\n            new_text = new_text[1:]\n        else:\n            break \n    return ('' + '').join(new_text)", "input": "'asfdellos', 'Ta'", "output": "'sfdellos'", "id": "StringUnfoldding_sample_from_384_to_160", "old_id": "sample_384"}
{"code": "def f(concat, di):\n    count = len(di)\n    for i in range(count):\n        if di[str(i)] in concat:\n            di.pop(str(i))\n    return (\"Done!\" + \"\")", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'", "id": "StringUnfoldding_sample_from_386_to_161", "old_id": "sample_386"}
{"code": "def f(text, characters):\n    character_list = list(characters) + [(' ' + ''), ('_' + '')]\n\n    i = 0\n    while i < len(text) and text[i] in character_list:\n        i += 1\n\n    return text[i:]", "input": "\"2nm_28in\", \"nm\"", "output": "'2nm_28in'", "id": "StringUnfoldding_sample_from_388_to_162", "old_id": "sample_388"}
{"code": "def f(students):\n    seatlist = students\n    seatlist.reverse()\n    cnt = 0\n    for cnt in range(len(seatlist)):\n        cnt += 2\n        seatlist[cnt - 1:cnt] = [('+' + '')]\n    seatlist.append(('' + '+'))\n    return seatlist", "input": "['r', '9']", "output": "['9', '+', '+', '+']", "id": "StringUnfoldding_sample_from_391_to_163", "old_id": "sample_391"}
{"code": "def f(text):\n    if text.upper() == text:\n        return ('ALL' + ' UPPERCASE')\n    return text", "input": "'Hello Is It MyClass'", "output": "'Hello Is It MyClass'", "id": "StringUnfoldding_sample_from_392_to_164", "old_id": "sample_392"}
{"code": "def f(text):\n    ls = text[::-1]\n    text2 = ('' + '')\n    for i in range(len(ls) - 3, 0, -3):\n        text2 += ('---' + '').join(ls[i:i + 3]) + ('' + '---')\n    return text2[:-3]", "input": "'scala'", "output": "'a---c---s'", "id": "StringUnfoldding_sample_from_393_to_165", "old_id": "sample_393"}
{"code": "def f(text, old, new):\n    if len(old) > 3:\n        return text\n    if old in text and ('' + ' ') not in text:\n        return text.replace(old, new*len(old))\n    while old in text:\n        text = text.replace(old, new)\n    return text", "input": "'avacado', 'va', '-'", "output": "'a--cado'", "id": "StringUnfoldding_sample_from_399_to_167", "old_id": "sample_399"}
{"code": "def f(multi_string):\n    cond_string = map(str.isascii, multi_string.split())\n    if True in cond_string:\n        return ('' + ', ').join(x for x in multi_string.split() if x.isascii())\n    return ('' + '')", "input": "'I am hungry! eat food.'", "output": "'I, am, hungry!, eat, food.'", "id": "StringUnfoldding_sample_from_400_to_168", "old_id": "sample_400"}
{"code": "def f(text):\n    ls = list(text)\n    ls[0], ls[-1] = ls[-1].upper(), ls[0].upper()\n    return ('' + '').join(ls).istitle()", "input": "'Josh'", "output": "False", "id": "StringUnfoldding_sample_from_406_to_169", "old_id": "sample_406"}
{"code": "def f(text, pref):\n    if isinstance(pref, list):\n        return (',' + ' ').join(text.startswith(x) for x in pref)\n    else:\n        return text.startswith(pref)", "input": "'Hello World', 'W'", "output": "False", "id": "StringUnfoldding_sample_from_411_to_170", "old_id": "sample_411"}
{"code": "def f(s):\n    return ('' + '{}{}{}').format(s[3:], s[2], s[5:8])", "input": "'jbucwc'", "output": "'cwcuc'", "id": "StringUnfoldding_sample_from_413_to_171", "old_id": "sample_413"}
{"code": "def f(text, old, new):\n    index = text.rfind(old, 0, text.find(old))\n    result = list(text)\n    while index > 0:\n        result[index:index+len(old)] = new\n        index = text.rfind(old, 0, index)\n    return ('' + '').join(result)", "input": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1'", "output": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq'", "id": "StringUnfoldding_sample_from_416_to_172", "old_id": "sample_416"}
{"code": "def f(s, p):\n    arr = s.partition(p)\n    part_one, part_two, part_three = len(arr[0]), len(arr[1]), len(arr[2])\n    if part_one >= 2 and part_two <= 2 and part_three >= 2:\n        return (arr[0][::-1] + arr[1] + arr[2][::-1] + ('#' + ''))\n    return (arr[0] + arr[1] + arr[2])", "input": "\"qqqqq\", \"qqq\"", "output": "'qqqqq'", "id": "StringUnfoldding_sample_from_418_to_173", "old_id": "sample_418"}
{"code": "def f(text, value):\n    if not value in text:\n        return ('' + '')\n    return text.rpartition(value)[0]", "input": "'mmfbifen', 'i'", "output": "'mmfb'", "id": "StringUnfoldding_sample_from_419_to_174", "old_id": "sample_419"}
{"code": "def f(s):\n    s = s.replace(('\"' + ''), ('' + ''))\n    lst = list(s)\n    col = 0\n    count = 1\n    while col < len(lst) and lst[col] in (\".:\" + \",\"):\n        if lst[col] == (\".\" + \"\"):\n            count = ls[col] + 1\n        col += 1\n    return s[col+count:]", "input": "'\"Makers of a Statement\"'", "output": "'akers of a Statement'", "id": "StringUnfoldding_sample_from_424_to_175", "old_id": "sample_424"}
{"code": "def f(a):\n    a = a.replace(('' + '/'), (':' + ''))\n    z = a.rpartition((':' + ''))\n    return [z[0], z[1], z[2]]", "input": "'/CL44     '", "output": "['', ':', 'CL44     ']", "id": "StringUnfoldding_sample_from_425_to_176", "old_id": "sample_425"}
{"code": "def f(s):\n    count = len(s) - 1\n    reverse_s = s[::-1]\n    while count > 0 and reverse_s[::2].rfind(('' + 'sea')) == -1:\n        count -= 1\n        reverse_s = reverse_s[:count]\n    return reverse_s[count:]", "input": "'s a a b s d s a a s a a'", "output": "''", "id": "StringUnfoldding_sample_from_427_to_177", "old_id": "sample_427"}
{"code": "def f(text):\n    text = text.split((',' + ''))\n    text.pop(0)\n    text.insert(0, text.pop(text.index(('' + 'T'))))\n    return ('T' + '') + ('' + ',') + ('' + ',').join(text)", "input": "\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\"", "output": "'T,T,Sspp,G ,.tB,Vxk,Cct'", "id": "StringUnfoldding_sample_from_433_to_178", "old_id": "sample_433"}
{"code": "def f(string):\n    try:\n       return string.rfind(('e' + ''))\n    except AttributeError:\n        return (\"\" + \"Nuk\")", "input": "'eeuseeeoehasa'", "output": "8", "id": "StringUnfoldding_sample_from_434_to_179", "old_id": "sample_434"}
{"code": "def f(numbers, num, val):\n    while len(numbers) < num:\n        numbers.insert(len(numbers) // 2, val)\n    for _ in range(len(numbers) // (num - 1) - 4):\n        numbers.insert(len(numbers) // 2, val)\n    return (' ' + '').join(numbers)", "input": "[], 0, 1", "output": "''", "id": "StringUnfoldding_sample_from_435_to_180", "old_id": "sample_435"}
{"code": "def f(string):\n    bigTab = 100\n    for i in range(10, 30):\n        if 0 < string.count(('' + '\\t')) < 20:\n            bigTab = i\n            break\n    return string.expandtabs(bigTab)", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'", "id": "StringUnfoldding_sample_from_438_to_181", "old_id": "sample_438"}
{"code": "def f(value):\n    parts = value.partition(('' + ' '))[::2]\n    return ('' + '').join(parts)", "input": "'coscifysu'", "output": "'coscifysu'", "id": "StringUnfoldding_sample_from_439_to_182", "old_id": "sample_439"}
{"code": "def f(text):\n    if text.isdecimal():\n        return ('' + 'yes')\n    else:\n        return ('' + 'no')", "input": "\"abc\"", "output": "'no'", "id": "StringUnfoldding_sample_from_440_to_183", "old_id": "sample_440"}
{"code": "def f(text):\n    for space in text:\n        if space == (' ' + ''):\n            text = text.lstrip()\n        else:\n            text = text.replace(('c' + 'd'), space)\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "StringUnfoldding_sample_from_443_to_184", "old_id": "sample_443"}
{"code": "def f(names):\n    parts = names.split(('' + ','))\n    for i, part in enumerate(parts):\n        parts[i] = part.replace((' a' + 'nd'), ('' + '+')).title().replace(('+' + ''), (' an' + 'd'))\n    return ('' + ', ').join(parts)", "input": "\"carrot, banana, and strawberry\"", "output": "'Carrot,  Banana,  and Strawberry'", "id": "StringUnfoldding_sample_from_445_to_185", "old_id": "sample_445"}
{"code": "def f(text, tab_size):\n    res = ('' + '')\n    text = text.replace(('\\t' + ''), (' ' + '')*(tab_size-1))\n    for i in range(len(text)):\n        if text[i] == (' ' + ''):\n            res += ('|' + '')\n        else:\n            res += text[i]\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "StringUnfoldding_sample_from_447_to_186", "old_id": "sample_447"}
{"code": "def f(text, suffix):\n    if suffix == ('' + ''):\n        suffix = None\n    return text.endswith(suffix)", "input": "'uMeGndkGh', 'kG'", "output": "False", "id": "StringUnfoldding_sample_from_448_to_187", "old_id": "sample_448"}
{"code": "def f(strs):\n    strs = strs.split()\n    for i in range(1, len(strs), 2):\n        strs[i] = ('' + '').join(reversed(strs[i]))\n    return ('' + ' ').join(strs)", "input": "'K zBK'", "output": "'K KBz'", "id": "StringUnfoldding_sample_from_450_to_188", "old_id": "sample_450"}
{"code": "def f(text, char):\n    text = list(text)\n    for count, item in enumerate(text):\n        if item == char:\n            text.remove(item)\n            return ('' + '').join(text)\n    return text", "input": "'pn', 'p'", "output": "'n'", "id": "StringUnfoldding_sample_from_451_to_189", "old_id": "sample_451"}
{"code": "def f(text, amount):\n    length = len(text)\n    pre_text = ('' + '|')\n    if amount >= length:\n        extra_space = amount - length\n        pre_text += (' ' + '') * (extra_space // 2)\n        return pre_text + text + pre_text\n    return text", "input": "'GENERAL NAGOOR', 5", "output": "'GENERAL NAGOOR'", "id": "StringUnfoldding_sample_from_460_to_190", "old_id": "sample_460"}
{"code": "def f(ans):\n    if ans.isdecimal():\n        total = int(ans) * 4 - 50\n        total -= len([c for c in list(ans) if c not in ('0' + '2468')]) * 100\n        return total\n    return ('' + 'NAN')", "input": "'0'", "output": "-50", "id": "StringUnfoldding_sample_from_464_to_191", "old_id": "sample_464"}
{"code": "def f(seq, value):\n    roles = dict.fromkeys(seq, ('' + 'north'))\n    if value:\n        roles.update(key.strip() for key in value.split((', ' + '')))\n    return roles", "input": "['wise king', 'young king'], ''", "output": "{'wise king': 'north', 'young king': 'north'}", "id": "StringUnfoldding_sample_from_465_to_192", "old_id": "sample_465"}
{"code": "def f(a, b, n):\n    result = m = b\n    for _ in range(n):\n        if m:\n            a, m = a.replace(m, ('' + ''), 1), None\n            result = m = b\n    return result.join(a.split(b))", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'", "id": "StringUnfoldding_sample_from_468_to_193", "old_id": "sample_468"}
{"code": "def f(text, position, value):\n   length = len(text)\n   index = position % (length)\n   if position < 0:\n       index = length // 2\n   new_text = list(text)\n   new_text.insert(index, value)\n   new_text.pop(length-1)\n   return ('' + '').join(new_text)", "input": "'sduyai', 1, 'y'", "output": "'syduyi'", "id": "StringUnfoldding_sample_from_469_to_194", "old_id": "sample_469"}
{"code": "def f(number):\n    transl = {('' + 'A'): 1, ('' + 'B'): 2, ('' + 'C'): 3, ('' + 'D'): 4, ('' + 'E'): 5}\n    result = []\n    for key, value in transl.items():\n        if value % number == 0:\n            result.append(key)\n    return result", "input": "2", "output": "['B', 'D']", "id": "StringUnfoldding_sample_from_470_to_195", "old_id": "sample_470"}
{"code": "def f(text):\n    d = {}\n    for char in text.replace(('-' + ''), ('' + '')).lower():\n        d[char] = d[char] + 1 if char in d else 1\n    d = sorted(d.items(), key=lambda x: x[1])\n    return [val for i, val in d]", "input": "\"x--y-z-5-C\"", "output": "[1, 1, 1, 1, 1]", "id": "StringUnfoldding_sample_from_472_to_196", "old_id": "sample_472"}
{"code": "def f(text, value):\n    indexes = list()\n    for i in range(len(text)):\n        if text[i] == value:\n            indexes.append(i)\n    new_text = list(text)\n    for i in indexes:\n        new_text.remove(value)\n    return ('' + '').join(new_text)", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'", "id": "StringUnfoldding_sample_from_473_to_197", "old_id": "sample_473"}
{"code": "def f(txt, marker):\n    a = []\n    lines = txt.split(('' + '\\n'))\n    for line in lines:\n        a.append(line.center(marker))\n    return ('\\n' + '').join(a)", "input": "'#[)[]>[^e>\\n 8', -5", "output": "'#[)[]>[^e>\\n 8'", "id": "StringUnfoldding_sample_from_474_to_198", "old_id": "sample_474"}
{"code": "def f(text):\n    topic, sep, problem = text.rpartition(('|' + ''))\n    if problem == ('r' + ''):\n        problem = topic.replace(('u' + ''), ('p' + ''))\n    return topic, problem", "input": "'|xduaisf'", "output": "('', 'xduaisf')", "id": "StringUnfoldding_sample_from_477_to_199", "old_id": "sample_477"}
{"code": "def f(s, c1, c2):\n    if s == ('' + ''):\n        return s\n    ls = s.split(c1)\n    for index, item in enumerate(ls):\n        if c1 in item:\n            ls[index] = item.replace(c1, c2, 1)\n    return c1.join(ls)", "input": "'', 'mi', 'siast'", "output": "''", "id": "StringUnfoldding_sample_from_480_to_200", "old_id": "sample_480"}
{"code": "def f(text):\n    return text.replace(('\\\\' + '\"'), ('' + '\"'))", "input": "'Because it intrigues them'", "output": "'Because it intrigues them'", "id": "StringUnfoldding_sample_from_482_to_201", "old_id": "sample_482"}
{"code": "def f(text, char):\n    return (' ' + '').join(text.split(char, len(text)))", "input": "'a', 'a'", "output": "' '", "id": "StringUnfoldding_sample_from_483_to_202", "old_id": "sample_483"}
{"code": "def f(tokens):\n    tokens = tokens.split()\n    if len(tokens) == 2:\n        tokens = list(reversed(tokens))\n    result = (' ' + '').join([tokens[0].ljust(5), tokens[1].ljust(5)])\n    return result", "input": "'gsd avdropj'", "output": "'avdropj gsd  '", "id": "StringUnfoldding_sample_from_485_to_203", "old_id": "sample_485"}
{"code": "def f(text, char):\n    count = text.count(char)\n    chars = list(text)\n    if count > 0:\n        index = chars.index(char) + 1\n        chars[:index:index+1] = [c for c in chars[index:index+count:1]]\n    return ('' + '').join(chars)", "input": "'tezmgvn 651h', '6'", "output": "'5ezmgvn 651h'", "id": "StringUnfoldding_sample_from_488_to_204", "old_id": "sample_488"}
{"code": "def f(text, value):\n    ls = list(text)\n    if (ls.count(value)) % 2 == 0:\n        while value in ls:\n            ls.remove(value)\n    else:\n        ls.clear()\n    return ('' + '').join(ls)", "input": "'abbkebaniuwurzvr', 'm'", "output": "'abbkebaniuwurzvr'", "id": "StringUnfoldding_sample_from_492_to_206", "old_id": "sample_492"}
{"code": "def f(d):\n    keys = []\n    for k in d:\n        keys.append(('%s => %s' + '') % (k, d[k]))\n    return keys", "input": "{'-4':'4','1':'2','-':'-3'}", "output": "['-4 => 4', '1 => 2', '- => -3']", "id": "StringUnfoldding_sample_from_493_to_207", "old_id": "sample_493"}
{"code": "def f(num, l):\n    t = (\"\" + \"\")\n    while l > len(num):\n        t += ('' + '0')\n        l -= 1\n    return t + num", "input": "\"1\", 3", "output": "'001'", "id": "StringUnfoldding_sample_from_494_to_208", "old_id": "sample_494"}
{"code": "def f(n):\n    b = list(str(n))\n    for i in range(2,len(b)): b[i] += ('+' + '')\n    return b", "input": "44", "output": "['4', '4']", "id": "StringUnfoldding_sample_from_497_to_209", "old_id": "sample_497"}
{"code": "def f(text, char):\n    index = text.rindex(char)\n    result = list(text)\n    while index > 0:\n        result[index] = result[index-1]\n        result[index-1] = char\n        index -= 2\n    return ('' + '').join(result)", "input": "'qpfi jzm', 'j'", "output": "'jqjfj zm'", "id": "StringUnfoldding_sample_from_501_to_210", "old_id": "sample_501"}
{"code": "def f(name):\n    return ('' + '*').join(name.split((' ' + '')))", "input": "'Fred Smith'", "output": "'Fred*Smith'", "id": "StringUnfoldding_sample_from_502_to_211", "old_id": "sample_502"}
{"code": "def f(n):\n    p = ('' + '')\n    if n%2 == 1:\n        p+=('' + 'sn')\n    else:\n        return n*n\n    for x in range(1, n+1):\n        if x%2 == 0:\n            p+=('to' + '')\n        else:\n            p+=('t' + 's')\n    return p", "input": "1", "output": "'snts'", "id": "StringUnfoldding_sample_from_506_to_212", "old_id": "sample_506"}
{"code": "def f(value, width):\n    if value >= 0:\n        return str(value).zfill(width)\n\n    if value < 0:\n        return ('-' + '') + str(-value).zfill(width)\n    return ('' + '')", "input": "5, 1", "output": "'5'", "id": "StringUnfoldding_sample_from_509_to_213", "old_id": "sample_509"}
{"code": "def f(a, b, c, d, e):\n    key = d\n    if key in a:\n        num = a.pop(key)\n    if b > 3:\n        return ('' + '').join(c)\n    else:\n        return num", "input": "{7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0", "output": "'Wy'", "id": "StringUnfoldding_sample_from_510_to_214", "old_id": "sample_510"}
{"code": "def f(fields, update_dict):\n    di = dict((x, ('' + '')) for x in fields)\n    di.update(update_dict)\n    return di", "input": "('ct', 'c', 'ca'), {'ca': 'cx'}", "output": "{'ct': '', 'c': '', 'ca': 'cx'}", "id": "StringUnfoldding_sample_from_511_to_215", "old_id": "sample_511"}
{"code": "def f(s):\n    return len(s) == s.count(('' + '0')) + s.count(('1' + ''))", "input": "'102'", "output": "False", "id": "StringUnfoldding_sample_from_512_to_216", "old_id": "sample_512"}
{"code": "def f(text):\n    for item in text.split():\n        text = text.replace(('' + '-{}').format(item), (' ' + '')).replace(('{' + '}-').format(item), ('' + ' '))\n    return text.strip(('-' + ''))", "input": "'-stew---corn-and-beans-in soup-.-'", "output": "'stew---corn-and-beans-in soup-.'", "id": "StringUnfoldding_sample_from_514_to_217", "old_id": "sample_514"}
{"code": "def f(text):\n    for i in range(len(text)-1, 0, -1):\n        if not text[i].isupper():\n            return text[0:i]\n    return ('' + '')", "input": "'SzHjifnzog'", "output": "'SzHjifnzo'", "id": "StringUnfoldding_sample_from_517_to_218", "old_id": "sample_517"}
{"code": "def f(d):\n    d[('l' + 'uck')] = 42\n    d.clear()\n    return {1: False, 2 :0}", "input": "{}", "output": "{1: False, 2: 0}", "id": "StringUnfoldding_sample_from_519_to_219", "old_id": "sample_519"}
{"code": "def f(text):\n    text = list(text)\n    for i in range(len(text)-1, -1, -1):\n        if text[i].isspace():\n            text[i] = ('' + '&nbsp;')\n    return ('' + '').join(text)", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'", "id": "StringUnfoldding_sample_from_523_to_220", "old_id": "sample_523"}
{"code": "def f(text, value):\n    return text.ljust(len(value), (\"\" + \"?\"))", "input": "\"!?\", \"\"", "output": "'!?'", "id": "StringUnfoldding_sample_from_527_to_221", "old_id": "sample_527"}
{"code": "def f(s):\n    b = ('' + '')\n    c = ('' + '')\n    for i in s:\n        c = c + i\n        if s.rfind(c) > -1:\n            return s.rfind(c)\n    return 0", "input": "'papeluchis'", "output": "2", "id": "StringUnfoldding_sample_from_528_to_222", "old_id": "sample_528"}
{"code": "def f(s, ch):\n    sl = s\n    if ch in s:\n        sl = s.lstrip(ch)\n        if len(sl) == 0:\n            sl = sl + ('!?' + '')\n    else:\n        return ('no' + '')\n    return sl", "input": "\"@@@ff\", '@'", "output": "'ff'", "id": "StringUnfoldding_sample_from_530_to_223", "old_id": "sample_530"}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // 3, 0)\n    result = ('' + '')\n    for j, v in enumerate(sequence[i:]):\n        if v == ('' + '+'):\n            result += value\n        else:\n            result += sequence[i + j]\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "StringUnfoldding_sample_from_534_to_224", "old_id": "sample_534"}
{"code": "def f(n):\n    for n in str(n):\n        if n not in (\"012\" + \"\") and n not in list(range(5, 10)):\n            return False\n    return True", "input": "1341240312", "output": "False", "id": "StringUnfoldding_sample_from_535_to_225", "old_id": "sample_535"}
{"code": "def f(text, value):\n    new_text = list(text)\n    try:\n        new_text.append(value)\n        length = len(new_text)\n    except IndexError:\n        length = 0\n    return ('' + '[') + str(length) + (']' + '')", "input": "'abv', 'a'", "output": "'[4]'", "id": "StringUnfoldding_sample_from_537_to_226", "old_id": "sample_537"}
{"code": "def f(text, width):\n    return text[:width].center(width, ('z' + ''))", "input": "'0574', 9", "output": "'zzz0574zz'", "id": "StringUnfoldding_sample_from_538_to_227", "old_id": "sample_538"}
{"code": "def f(array):\n    c = array\n    array_copy = array\n\n    while True:\n        c.append(('' + '_'))\n        if c == array_copy:\n            array_copy[c.index(('' + '_'))] = ('' + '')\n            break\n        \n    return array_copy", "input": "[]", "output": "['']", "id": "StringUnfoldding_sample_from_539_to_228", "old_id": "sample_539"}
{"code": "def f(text):\n    return ('' + '').join(list(text)).isspace()", "input": "' \\t  \\u3000'", "output": "True", "id": "StringUnfoldding_sample_from_541_to_229", "old_id": "sample_541"}
{"code": "def f(item):\n    modified = item.replace(('. ' + ''), (' , ' + '')).replace(('&#33; ' + ''), ('' + '! ')).replace(('.' + ' '), ('' + '? ')).replace(('. ' + ''), ('' + '. '))\n    return modified[0].upper() + modified[1:]", "input": "'.,,,,,. \u0645\u0646\u0628\u062a'", "output": "'.,,,,, , \u0645\u0646\u0628\u062a'", "id": "StringUnfoldding_sample_from_543_to_230", "old_id": "sample_543"}
{"code": "def f(letters):\n    letters_only = letters.strip((\"., !?*\" + \"\"))\n    return (\"..\" + \"..\").join(letters_only.split((\" \" + \"\")))", "input": "\"h,e,l,l,o,wo,r,ld,\"", "output": "'h,e,l,l,o,wo,r,ld'", "id": "StringUnfoldding_sample_from_547_to_232", "old_id": "sample_547"}
{"code": "def f(text, tabstop):\n    text = text.replace(('\\n' + ''), ('' + '_____'))\n    text = text.replace(('\\t' + ''), tabstop * (' ' + ''))\n    text = text.replace(('' + '_____'), ('' + '\\n'))\n    return text", "input": "\"odes\\tcode\\twell\", 2", "output": "'odes  code  well'", "id": "StringUnfoldding_sample_from_555_to_233", "old_id": "sample_555"}
{"code": "def f(text):\n    for i in range(len(text)):\n        if text[i] == (' ' + ''):\n            text = text.replace((' ' + ''), ('' + '\\t'), 1)\n    return text.expandtabs(4)", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'", "id": "StringUnfoldding_sample_from_556_to_234", "old_id": "sample_556"}
{"code": "def f(str):\n    d = str.rpartition(('ar' + ''))\n    return ('' + ' ').join((d[0], d[1], d[2]))", "input": "'xxxarmmarxx'", "output": "'xxxarmm ar xx'", "id": "StringUnfoldding_sample_from_557_to_235", "old_id": "sample_557"}
{"code": "def f(n):\n    n = str(n)\n    return n[0] + ('' + '.')+n[1:].replace(('-' + ''), ('_' + ''))", "input": "\"first-second-third\"", "output": "'f.irst_second_third'", "id": "StringUnfoldding_sample_from_559_to_236", "old_id": "sample_559"}
{"code": "def f(text):\n    return max(text.find(ch) for ch in ('ae' + 'iou'))", "input": "\"qsqgijwmmhbchoj\"", "output": "13", "id": "StringUnfoldding_sample_from_565_to_237", "old_id": "sample_565"}
{"code": "def f(string, code):\n    t = ('' + '')\n    try:\n        t = string.encode(code)\n        if t.endswith(b'\\n'):\n            t = t[:-1]\n        t = t.decode(('UTF-8' + ''))\n        return t\n    except:\n        return t", "input": "\"towaru\", \"UTF-8\"", "output": "'towaru'", "id": "StringUnfoldding_sample_from_566_to_238", "old_id": "sample_566"}
{"code": "def f(s, n):\n    ls = s.rsplit()\n    out = []\n    while len(ls) >= n:\n        out += ls[-n:]\n        ls = ls[:-n]\n    return ls + [('' + '_').join(out)]", "input": "'one two three four five', 3", "output": "['one', 'two', 'three_four_five']", "id": "StringUnfoldding_sample_from_567_to_239", "old_id": "sample_567"}
{"code": "def f(num):\n    letter = 1\n    for i in ('12' + '34567890'):\n        num = num.replace(i,('' + ''))\n        if len(num) == 0: break\n        num = num[letter:] + num[:letter]\n        letter += 1\n    return num", "input": "'bwmm7h'", "output": "'mhbwm'", "id": "StringUnfoldding_sample_from_568_to_240", "old_id": "sample_568"}
{"code": "def f(array, const):\n    output = [('x' + '')]\n    for i in range(1, len(array) + 1):\n        if i % 2 != 0:\n            output.append(array[i - 1] * -2)\n        else:\n            output.append(const)\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "StringUnfoldding_sample_from_576_to_241", "old_id": "sample_576"}
{"code": "def f(text, char):\n    new_text = text\n    a = []\n    while char in new_text:\n        a.append(new_text.index(char))\n        new_text = new_text.replace(char,(\"\" + \"\"),1)\n    return a", "input": "'rvr', 'r'", "output": "[0, 1]", "id": "StringUnfoldding_sample_from_580_to_242", "old_id": "sample_580"}
{"code": "def f(text, sign):\n    length = len(text)\n    new_text = list(text)\n    sign = list(sign)\n    for i in range(len(sign)):\n        new_text.insert((i * length - 1) // 2 + (i + 1) // 2, sign[i])\n    return ('' + '').join(new_text)", "input": "'akoon', 'sXo'", "output": "'akoXoosn'", "id": "StringUnfoldding_sample_from_581_to_243", "old_id": "sample_581"}
{"code": "def f(text, ch):\n    result = []\n    for line in text.splitlines():\n        if len(line) > 0 and line[0] == ch:\n            result.append(line.lower())\n        else:\n            result.append(line.upper())\n    return (\"\" + \"\\n\").join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "StringUnfoldding_sample_from_583_to_244", "old_id": "sample_583"}
{"code": "def f(txt):\n    return txt.format(*(('' + '0')*20,))", "input": "\"5123807309875480094949830\"", "output": "'5123807309875480094949830'", "id": "StringUnfoldding_sample_from_584_to_245", "old_id": "sample_584"}
{"code": "def f(text):\n    count = text.count(text[0])\n    ls = list(text)\n    for _ in range(count):\n        ls.remove(ls[0])\n    return ('' + '').join(ls)", "input": "';,,,?'", "output": "',,,?'", "id": "StringUnfoldding_sample_from_585_to_246", "old_id": "sample_585"}
{"code": "def f(file):\n    return file.index(('' + '\\n'))", "input": "\"n wez szize lnson tilebi it 504n.\\n\"", "output": "33", "id": "StringUnfoldding_sample_from_594_to_247", "old_id": "sample_594"}
{"code": "def f(array):\n    just_ns = list(map(lambda num: ('' + 'n')*num, array))\n    final_output = []\n    for wipe in just_ns:\n        final_output.append(wipe)\n    return final_output", "input": "[]", "output": "[]", "id": "StringUnfoldding_sample_from_600_to_248", "old_id": "sample_600"}
{"code": "def f(text):\n    t = 5\n    tab = []\n    for i in text:\n        if i.lower() in ('aei' + 'ouy'):\n            tab.append(i.upper() * t)\n        else:\n            tab.append(i * t)\n    return ('' + ' ').join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "StringUnfoldding_sample_from_601_to_249", "old_id": "sample_601"}
{"code": "def f(sentences):\n    if all([sentence.isdecimal() for sentence in sentences.split(('.' + ''))]):\n        return ('oscillatin' + 'g') \n    else:\n        return ('not osc' + 'illating')", "input": "'not numbers'", "output": "'not oscillating'", "id": "StringUnfoldding_sample_from_603_to_250", "old_id": "sample_603"}
{"code": "def f(nums):\n    nums.clear()\n    return (\"\" + \"quack\")", "input": "[2, 5, 1, 7, 9, 3]", "output": "'quack'", "id": "StringUnfoldding_sample_from_605_to_251", "old_id": "sample_605"}
{"code": "def f(value):\n    ls = list(value)\n    ls.append(('' + 'NHIB'))\n    return ('' + '').join(ls)", "input": "'ruam'", "output": "'ruamNHIB'", "id": "StringUnfoldding_sample_from_606_to_252", "old_id": "sample_606"}
{"code": "def f(text):\n    for i in [('' + '.'), ('!' + ''), ('?' + '')]:\n        if text.endswith(i):\n            return True\n    return False", "input": "'. C.'", "output": "True", "id": "StringUnfoldding_sample_from_607_to_253", "old_id": "sample_607"}
{"code": "def f(text):\n    result = ('' + '')\n    mid = (len(text) - 1) // 2\n    for i in range(mid):\n        result += text[i]\n    for i in range(mid, len(text)-1):\n        result += text[mid + len(text) - 1 - i]\n    return result.ljust(len(text), text[-1])", "input": "'eat!'", "output": "'e!t!'", "id": "StringUnfoldding_sample_from_613_to_254", "old_id": "sample_613"}
{"code": "def f(text):\n    if text.isascii():\n        return ('as' + 'cii')\n    else:\n        return ('no' + 'n ascii')", "input": "\"<<<<\"", "output": "'ascii'", "id": "StringUnfoldding_sample_from_617_to_256", "old_id": "sample_617"}
{"code": "def f(x):\n    return (\"\" + \" \").join(list(x)[::-1])", "input": "\"lert dna ndqmxohi3\"", "output": "'3 i h o x m q d n   a n d   t r e l'", "id": "StringUnfoldding_sample_from_620_to_257", "old_id": "sample_620"}
{"code": "def f(s):\n    left, sep, right = s.rpartition(('.' + ''))\n    new = sep.join([right, left])\n    _, sep, _ = new.rpartition(('' + '.'))\n    return new.replace(sep, (', ' + ''))", "input": "'galgu'", "output": "', g, a, l, g, u, '", "id": "StringUnfoldding_sample_from_622_to_258", "old_id": "sample_622"}
{"code": "def f(text, rules):\n    for rule in rules:\n        if rule == ('' + '@'):\n            text = text[::-1]\n        elif rule == ('' + '~'):\n            text = text.upper()\n        elif text and text[len(text)-1] == rule:\n            text = text[0:len(text)-1]\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "StringUnfoldding_sample_from_623_to_259", "old_id": "sample_623"}
{"code": "def f(text, char):\n    char_index = text.find(char)\n    result = []\n    if char_index > 0:\n        result = list(text[:char_index])\n    result.extend(list(char)+list(text[char_index+len(char):]))\n    return ('' + '').join(result)", "input": "'llomnrpc', 'x'", "output": "'xllomnrpc'", "id": "StringUnfoldding_sample_from_624_to_260", "old_id": "sample_624"}
{"code": "def f(text):\n    count = 0\n    for i in text:\n        if i in ('.?!' + '.,'):\n            count += 1\n    return count", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4", "id": "StringUnfoldding_sample_from_625_to_261", "old_id": "sample_625"}
{"code": "def f(text, num):\n    req = num - len(text)\n    text = text.center(num, ('' + '*'))\n    return text[:req // 2: -req // 2]", "input": "'a', 19", "output": "'*'", "id": "StringUnfoldding_sample_from_631_to_262", "old_id": "sample_631"}
{"code": "def f(input_string):\n    table = str.maketrans(('aio' + 'e'), ('' + 'ioua'))\n    while ('' + 'a') in input_string or ('' + 'A') in input_string:\n        input_string = input_string.translate(table)\n    return input_string", "input": "'biec'", "output": "'biec'", "id": "StringUnfoldding_sample_from_634_to_263", "old_id": "sample_634"}
{"code": "def f(text):\n    valid_chars = [('-' + ''), ('_' + ''), ('' + '+'), ('' + '.'), ('/' + ''), (' ' + '')]\n    text = text.upper()\n    for char in text:\n        if char.isalnum() == False and char not in valid_chars:\n            return False\n    return True", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False", "id": "StringUnfoldding_sample_from_635_to_264", "old_id": "sample_635"}
{"code": "def f(text):\n    text = text.split((' ' + ''))\n    for t in text:\n        if not t.isnumeric():\n            return ('no' + '')\n    return ('yes' + '')", "input": "'03625163633 d'", "output": "'no'", "id": "StringUnfoldding_sample_from_637_to_265", "old_id": "sample_637"}
{"code": "def f(perc, full):\n    reply = (\"\" + \"\")\n    i = 0\n    while perc[i] == full[i] and i < len(full) and i < len(perc):\n        if perc[i] == full[i]:\n            reply += (\"\" + \"yes \")\n        else:\n            reply += (\"\" + \"no \")\n        i += 1\n    return reply", "input": "\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"", "output": "'yes '", "id": "StringUnfoldding_sample_from_639_to_266", "old_id": "sample_639"}
{"code": "def f(text):\n    i = 0\n    while i < len(text) and text[i].isspace():\n        i+=1\n    if i == len(text):\n        return ('space' + '')\n    return ('' + 'no')", "input": "\"     \"", "output": "'space'", "id": "StringUnfoldding_sample_from_642_to_267", "old_id": "sample_642"}
{"code": "def f(text, count):\n    for i in range(count):\n        text = ('' + '').join(reversed(text))\n    return text", "input": "'aBc, ,SzY', 2", "output": "'aBc, ,SzY'", "id": "StringUnfoldding_sample_from_646_to_268", "old_id": "sample_646"}
{"code": "def f(list1, list2):\n    l = list1[:]\n    while len(l) > 0:\n        if l[-1] in list2:\n            l.pop()\n        else:\n            return l[-1]\n    return ('missi' + 'ng')", "input": "[0, 4, 5, 6], [13, 23, -5, 0]", "output": "6", "id": "StringUnfoldding_sample_from_648_to_269", "old_id": "sample_648"}
{"code": "def f(text, letter):\n    if letter.islower(): letter = letter.upper()\n    text = ('' + '').join([letter if char == letter.lower() else char for char in text])\n    return text.capitalize()", "input": "'E wrestled evil until upperfeat', 'e'", "output": "'E wrestled evil until upperfeat'", "id": "StringUnfoldding_sample_from_651_to_271", "old_id": "sample_651"}
{"code": "def f(string):\n    if not string or not string[0].isnumeric:\n        return ('I' + 'NVALID')\n    cur = 0\n    for i in range(len(string)):\n        cur = cur * 10 + int(string[i])\n    return str(cur)", "input": "'3'", "output": "'3'", "id": "StringUnfoldding_sample_from_652_to_272", "old_id": "sample_652"}
{"code": "def f(text, letter):\n    t = text\n    for alph in text:\n        t = t.replace(alph, (\"\" + \"\"))\n    return len(t.split(letter))", "input": "\"c, c, c ,c, c\", \"c\"", "output": "1", "id": "StringUnfoldding_sample_from_653_to_273", "old_id": "sample_653"}
{"code": "def f(s):\n    return s.replace(('' + 'a'), ('' + '')).replace(('r' + ''), ('' + ''))", "input": "'rpaar'", "output": "'p'", "id": "StringUnfoldding_sample_from_655_to_274", "old_id": "sample_655"}
{"code": "def f(letters):\n    a = [] \n    for i in range(len(letters)):\n        if letters[i] in a:\n            return ('no' + '')\n        a.append(letters[i]) \n    return ('yes' + '')", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'", "id": "StringUnfoldding_sample_from_656_to_275", "old_id": "sample_656"}
{"code": "def f(text):\n    for punct in ('!.?,:' + ';'):\n        if text.count(punct) > 1:\n            return ('no' + '')\n        if text.endswith(punct):\n            return ('no' + '')\n    return text.title()", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'", "id": "StringUnfoldding_sample_from_657_to_276", "old_id": "sample_657"}
{"code": "def f(letters, maxsplit):\n    return ('' + '').join(letters.split()[-maxsplit:])", "input": "'elrts,SS ee', 6", "output": "'elrts,SSee'", "id": "StringUnfoldding_sample_from_661_to_277", "old_id": "sample_661"}
{"code": "def f(values):\n    names = [('Pet' + 'e'), ('' + 'Linda'), ('A' + 'ngela')]\n    names.extend(values)\n    names.sort()\n    return names", "input": "['Dan', 'Joe', 'Dusty']", "output": "['Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete']", "id": "StringUnfoldding_sample_from_662_to_278", "old_id": "sample_662"}
{"code": "def f(tags):\n    resp = (\"\" + \"\")\n    for key in tags:\n        resp += key + (\"\" + \" \")\n    return resp", "input": "{\"3\":\"3\",\"4\":\"5\"}", "output": "'3 4 '", "id": "StringUnfoldding_sample_from_664_to_279", "old_id": "sample_664"}
{"code": "def f(chars):\n    s = (\"\" + \"\")\n    for ch in chars:\n        if chars.count(ch) % 2 == 0:\n            s += ch.upper()\n        else:\n            s += ch\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "StringUnfoldding_sample_from_665_to_280", "old_id": "sample_665"}
{"code": "def f(t):\n    a, sep, b = t.rpartition(('-' + ''))\n    if len(b) == len(a):\n        return ('i' + 'mbalanced')\n    return a + b.replace(sep, ('' + ''))", "input": "\"fubarbaz\"", "output": "'fubarbaz'", "id": "StringUnfoldding_sample_from_669_to_281", "old_id": "sample_669"}
{"code": "def f(text, position, value):\n    length = len(text)\n    index = (position % (length + 2)) - 1\n    if index >= length or index < 0:\n        return text\n    text[index] = value\n    return ('' + '').join(text)", "input": "\"1zd\", 0, 'm'", "output": "'1zd'", "id": "StringUnfoldding_sample_from_672_to_282", "old_id": "sample_672"}
{"code": "def f(text, length):\n    length = -length if length < 0 else length\n    output = ('' + '')\n    for idx in range(length):\n        if text[idx % len(text)] != (' ' + ''):\n            output += text[idx % len(text)]\n        else:\n            break\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "StringUnfoldding_sample_from_677_to_285", "old_id": "sample_677"}
{"code": "def f(text):\n    if text == ('' + ''):\n        return False\n    first_char = text[0]\n    if text[0].isdigit():\n        return False\n    for last_char in text:\n        if (last_char != ('' + '_')) and not last_char.isidentifier():\n            return False\n    return True", "input": "'meet'", "output": "True", "id": "StringUnfoldding_sample_from_679_to_286", "old_id": "sample_679"}
{"code": "def f(text):\n    letters = ('' + '')\n    for i in range(len(text)):\n        if text[i].isalnum():\n            letters += text[i]\n    return letters", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'", "id": "StringUnfoldding_sample_from_680_to_287", "old_id": "sample_680"}
{"code": "def f(text, length, index):\n    ls = text.rsplit(None, index)\n    return ('_' + '').join([l[:length] for l in ls])", "input": "'hypernimovichyp', 2, 2", "output": "'hy'", "id": "StringUnfoldding_sample_from_682_to_288", "old_id": "sample_682"}
{"code": "def f(text):\n    trans = str.maketrans(('\"\\'><' + ''), ('98' + '33'))\n    return text.translate(trans)", "input": "\"Transform quotations\\\"\\nnot into numbers.\"", "output": "'Transform quotations9\\nnot into numbers.'", "id": "StringUnfoldding_sample_from_684_to_289", "old_id": "sample_684"}
{"code": "def f(text):\n    t = list(text)\n    t.pop(len(t) // 2)\n    t.append(text.lower())\n    return (':' + '').join([c for c in t])", "input": "'Rjug nzufE'", "output": "'R:j:u:g: :z:u:f:E:rjug nzufe'", "id": "StringUnfoldding_sample_from_687_to_290", "old_id": "sample_687"}
{"code": "def f(n):\n    if str(n).find(('.' + '')) != -1:\n        return str(int(n)+2.5)\n    return str(n)", "input": "'800'", "output": "'800'", "id": "StringUnfoldding_sample_from_690_to_291", "old_id": "sample_690"}
{"code": "def f(text):\n    n = int(text.find(('' + '8')))\n    return ('x0' + '')*n", "input": "\"sa832d83r xd 8g 26a81xdf\"", "output": "'x0x0'", "id": "StringUnfoldding_sample_from_693_to_292", "old_id": "sample_693"}
{"code": "def f(text):\n    return ('' + '').join(x for x in text if x != ('' + ')'))", "input": "('(((((((((((d))))))))).))))(((((')", "output": "'(((((((((((d.((((('", "id": "StringUnfoldding_sample_from_698_to_293", "old_id": "sample_698"}
{"code": "def f(text, elem):\n    if elem != ('' + ''):\n        while text.startswith(elem):\n            text = text.replace(elem, ('' + ''))\n        while elem.startswith(text):\n            elem = elem.replace(text, ('' + ''))\n    return [elem, text]", "input": "\"some\", \"1\"", "output": "['1', 'some']", "id": "StringUnfoldding_sample_from_699_to_294", "old_id": "sample_699"}
{"code": "def f(text):\n    return len(text) - text.count(('b' + 'ot'))", "input": "\"Where is the bot in this world?\"", "output": "30", "id": "StringUnfoldding_sample_from_700_to_295", "old_id": "sample_700"}
{"code": "def f(cities, name):\n    if not name:\n        return cities\n    if name and name != ('citie' + 's'):\n        return []\n    return [name + city for city in cities]", "input": "['Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'], 'Somewhere '", "output": "[]", "id": "StringUnfoldding_sample_from_705_to_296", "old_id": "sample_705"}
{"code": "def f(text, position):\n    length = len(text)\n    index = position % (length + 1)\n    if position < 0 or index < 0:\n        index = -1\n    new_text = list(text)\n    new_text.pop(index)\n    return ('' + '').join(new_text)", "input": "'undbs l', 1", "output": "'udbs l'", "id": "StringUnfoldding_sample_from_707_to_297", "old_id": "sample_707"}
{"code": "def f(string):\n    l = list(string)\n    for i in reversed(range(len(l))):\n        if l[i] != (' ' + ''):\n            break\n        l.pop(i)\n    return ('' + '').join(l)", "input": "'    jcmfxv     '", "output": "'    jcmfxv'", "id": "StringUnfoldding_sample_from_708_to_298", "old_id": "sample_708"}
{"code": "def f(text):\n    my_list = text.split()\n    my_list.sort(reverse=True)\n    return ('' + ' ').join(my_list)", "input": "'a loved'", "output": "'loved a'", "id": "StringUnfoldding_sample_from_709_to_299", "old_id": "sample_709"}
{"code": "def f(text):\n    created = []\n    for line in text.splitlines():\n        if line == ('' + ''):\n            break\n        created.append(list(list(line.rstrip())[::-1][flush]))\n    return created[::-1]\n\nflush = 0", "input": "'A(hiccup)A'", "output": "[['A']]", "id": "StringUnfoldding_sample_from_712_to_301", "old_id": "sample_712"}
{"code": "def f(array):\n    array.reverse()\n    array.clear()\n    array.extend(('' + 'x')*len(array))\n    array.reverse()\n    return array", "input": "[3, -2, 0]", "output": "[]", "id": "StringUnfoldding_sample_from_714_to_302", "old_id": "sample_714"}
{"code": "def f(text):\n    t = text\n    for i in text:\n        text = text.replace(i, ('' + ''))\n    return str(len(text)) + t", "input": "'ThisIsSoAtrocious'", "output": "'0ThisIsSoAtrocious'", "id": "StringUnfoldding_sample_from_718_to_303", "old_id": "sample_718"}
{"code": "def f(code):\n    lines = code.split(('' + ']'))\n    result = []\n    level = 0\n    for line in lines:\n        result.append(line[0] + ('' + ' ') + (' ' + ' ') * level + line[1:])\n        level += line.count(('{' + '')) - line.count(('}' + ''))\n    return ('' + '\\n').join(result)", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'", "id": "StringUnfoldding_sample_from_719_to_304", "old_id": "sample_719"}
{"code": "def f(text):\n    out = (\"\" + \"\")\n    for i in range(len(text)):\n        if text[i].isupper():\n            out += text[i].lower()\n        else:\n            out += text[i].upper()\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "StringUnfoldding_sample_from_722_to_305", "old_id": "sample_722"}
{"code": "def f(text, separator):\n    splitted = text.splitlines()\n    if separator:\n        return [(' ' + '').join(s) for s in splitted]\n    else:\n        return splitted", "input": "'dga nqdk\\rull qcha kl', 1", "output": "['d g a   n q d k', 'u l l   q c h a   k l']", "id": "StringUnfoldding_sample_from_723_to_306", "old_id": "sample_723"}
{"code": "def f(text):\n    result_list = [('' + '3'), ('3' + ''), ('3' + ''), ('' + '3')]\n    if result_list:\n        result_list.clear()\n    return len(text)", "input": "\"mrq7y\"", "output": "5", "id": "StringUnfoldding_sample_from_725_to_307", "old_id": "sample_725"}
{"code": "def f(text):\n    result = []\n    for i, ch in enumerate(text):\n        if ch == ch.lower():\n            continue\n        if len(text) - 1 - i < text.rindex(ch.lower()):\n            result.append(ch)\n    return ('' + '').join(result)", "input": "'ru'", "output": "''", "id": "StringUnfoldding_sample_from_728_to_308", "old_id": "sample_728"}
{"code": "def f(text, use):\n    return text.replace(use, ('' + ''))", "input": "'Chris requires a ride to the airport on Friday.', 'a'", "output": "'Chris requires  ride to the irport on Fridy.'", "id": "StringUnfoldding_sample_from_731_to_309", "old_id": "sample_731"}
{"code": "def f(sentence):\n    if sentence == ('' + ''):\n        return ('' + '')\n    sentence = sentence.replace(('' + '('), ('' + ''))\n    sentence = sentence.replace((')' + ''), ('' + ''))\n    return sentence.capitalize().replace(('' + ' '), ('' + ''))", "input": "'(A (b B))'", "output": "'Abb'", "id": "StringUnfoldding_sample_from_735_to_310", "old_id": "sample_735"}
{"code": "def f(text, insert):\n    whitespaces = {('' + '\\t'), ('' + '\\r'), ('\\v' + ''), (' ' + ''), ('' + '\\f'), ('\\n' + '')}\n    clean = ('' + '')\n    for char in text:\n        if char in whitespaces:\n            clean += insert\n        else:\n            clean += char\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "StringUnfoldding_sample_from_736_to_311", "old_id": "sample_736"}
{"code": "def f(text):\n    string_a, string_b = text.split(('' + ','))\n    return -(len(string_a) + (len(string_b)))", "input": "'dog,cat'", "output": "-6", "id": "StringUnfoldding_sample_from_743_to_312", "old_id": "sample_743"}
{"code": "def f(text, new_ending):\n    result = list(text)\n    result.extend(new_ending)\n    return ('' + '').join(result)", "input": "'jro', 'wdlp'", "output": "'jrowdlp'", "id": "StringUnfoldding_sample_from_744_to_313", "old_id": "sample_744"}
{"code": "def f(address):\n    suffix_start = address.index(('' + '@')) + 1\n    if address[suffix_start:].count(('.' + '')) > 1:\n        address = address.removesuffix(('' + '.').join(address.split(('' + '@'))[1].split(('' + '.'))[:2]))\n    return address", "input": "'minimc@minimc.io'", "output": "'minimc@minimc.io'", "id": "StringUnfoldding_sample_from_745_to_314", "old_id": "sample_745"}
{"code": "def f(dct):\n    values = dct.values()\n    result = {}\n    for value in values:\n        item = value.split(('' + '.'))[0]+('@pinc.u' + 'k')\n        result[value] = item\n    return result", "input": "{}", "output": "{}", "id": "StringUnfoldding_sample_from_746_to_315", "old_id": "sample_746"}
{"code": "def f(text):\n    if text == ('42.' + '42'):\n        return True\n    for i in range(3, len(text) - 3):\n        if text[i] == ('.' + '') and text[i - 3:].isdigit() and text[:i].isdigit():\n            return True\n    return False", "input": "\"123E-10\"", "output": "False", "id": "StringUnfoldding_sample_from_747_to_316", "old_id": "sample_747"}
{"code": "def f(char_map, text):\n    new_text = ('' + '')\n    for ch in text:\n        val = char_map.get(ch)\n        if val is None:\n            new_text += ch\n        else:\n            new_text += val\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "StringUnfoldding_sample_from_750_to_318", "old_id": "sample_750"}
{"code": "def f(s, amount):\n    return (amount - len(s)) * ('z' + '') + s", "input": "'abc', 8", "output": "'zzzzzabc'", "id": "StringUnfoldding_sample_from_752_to_319", "old_id": "sample_752"}
{"code": "def f(nums):\n    nums = [('{0:{fill}>{width' + '}}').format(val, **{('fi' + 'll'): ('0' + ''), ('w' + 'idth'): nums[0]}) for val in nums[1:]]\n    return [str(val) for val in nums]", "input": "['1', '2', '2', '44', '0', '7', '20257']", "output": "['2', '2', '44', '0', '7', '20257']", "id": "StringUnfoldding_sample_from_754_to_320", "old_id": "sample_754"}
{"code": "def f(replace, text, hide):\n    while hide in text:\n        replace += ('ax' + '')\n        text = text.replace(hide, replace, 1)\n    return text", "input": "'###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.'", "output": "'ph>t#A#BiEcDefW#ON#iiNCU'", "id": "StringUnfoldding_sample_from_755_to_321", "old_id": "sample_755"}
{"code": "def f(text):\n    if text.isalnum() and all(i.isdigit() for i in text):\n        return ('in' + 'teger')\n    return ('' + 'string')", "input": "''", "output": "'string'", "id": "StringUnfoldding_sample_from_756_to_322", "old_id": "sample_756"}
{"code": "def f(values, value):\n    length = len(values)\n    new_dict = dict.fromkeys(values, value)\n    new_dict[('' + '').join(sorted(values))] = value * 3\n    return new_dict", "input": "['0','3'], 117", "output": "{'0': 117, '3': 117, '03': 351}", "id": "StringUnfoldding_sample_from_766_to_323", "old_id": "sample_766"}
{"code": "def f(text):\n    a = text.strip().split(('' + ' '))\n    for i in range(len(a)):\n        if a[i].isdigit() is False:\n            return ('-' + '')\n    return (\"\" + \" \").join(a)", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'", "id": "StringUnfoldding_sample_from_767_to_324", "old_id": "sample_767"}
{"code": "def f(text):\n    text_list = [char for char in text]\n    for i, char in enumerate(text_list):\n        text_list[i] = char.swapcase()\n    return ('' + '').join(text_list)", "input": "'akA?riu'", "output": "'AKa?RIU'", "id": "StringUnfoldding_sample_from_769_to_325", "old_id": "sample_769"}
{"code": "def f(phrase):\n    result = ('' + '')\n    for i in phrase:\n        if not i.islower():\n            result += i\n    return result", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'", "id": "StringUnfoldding_sample_from_772_to_326", "old_id": "sample_772"}
{"code": "def f(num, name):\n    f_str = ('quiz l' + 'eader = {}, count = {}')\n    return f_str.format(name, num)", "input": "23, 'Cornareti'", "output": "'quiz leader = Cornareti, count = 23'", "id": "StringUnfoldding_sample_from_774_to_327", "old_id": "sample_774"}
{"code": "def f(dictionary):\n    a = dictionary.copy()\n    for key in a:\n        if key%2 != 0:\n            del a[key]\n            a[('$' + '')+str(key)] = a[key]\n    return a", "input": "{}", "output": "{}", "id": "StringUnfoldding_sample_from_776_to_328", "old_id": "sample_776"}
{"code": "def f(names, excluded):\n    excluded = excluded\n    for i in range(len(names)):\n        if excluded in names[i]:\n            names[i] = names[i].replace(excluded, (\"\" + \"\"))\n    return names", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']", "id": "StringUnfoldding_sample_from_777_to_329", "old_id": "sample_777"}
{"code": "def f(text):\n    values = text.split()\n    return ('${first}y, ${second}x, ${' + 'third}r, ${fourth}p') % dict({\n        ('firs' + 't'): values[0],\n        ('' + 'second'): values[1],\n        ('third' + ''): values[2],\n        ('fo' + 'urth'): values[3]\n    })", "input": "'python ruby c javascript'", "output": "'${first}y, ${second}x, ${third}r, ${fourth}p'", "id": "StringUnfoldding_sample_from_779_to_330", "old_id": "sample_779"}
{"code": "def f(ints):\n    counts = [0] * 301\n\n    for i in ints:\n        counts[i] += 1\n\n    r = []\n    for i in range(len(counts)):\n        if counts[i] >= 3:\n            r.append(str(i))\n    counts.clear()\n    return (' ' + '').join(r)", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'", "id": "StringUnfoldding_sample_from_780_to_331", "old_id": "sample_780"}
{"code": "def f(s, ch):\n    if ch not in s:\n        return ('' + '')\n    s = s.partition(ch)[2][::-1]\n    for i in range(len(s)):\n        s = s.partition(ch)[2][::-1]\n    return s", "input": "'shivajimonto6', '6'", "output": "''", "id": "StringUnfoldding_sample_from_781_to_332", "old_id": "sample_781"}
{"code": "def f(n):\n    streak = ('' + '')\n    for c in str(n):\n        streak += c.ljust(int(c) * 2)\n    return streak", "input": "1", "output": "'1 '", "id": "StringUnfoldding_sample_from_785_to_333", "old_id": "sample_785"}
{"code": "def f(text):\n    if len(text) == 0:\n        return ('' + '')\n    text = text.lower()\n    return text[0].upper() + text[1:]", "input": "'xzd'", "output": "'Xzd'", "id": "StringUnfoldding_sample_from_787_to_334", "old_id": "sample_787"}
{"code": "def f(text, suffix):\n    if suffix.startswith((\"\" + \"/\")):\n        return text + suffix[1:]\n    return text", "input": "'hello.txt', '/'", "output": "'hello.txt'", "id": "StringUnfoldding_sample_from_788_to_335", "old_id": "sample_788"}
{"code": "def f(d):\n    r = {\n        ('c' + ''): d.copy(),\n        ('' + 'd'): d.copy()\n    }\n    return (r[('' + 'c')] is r[('d' + '')], r[('c' + '')] == r[('d' + '')])", "input": "{'i': 1, 'love': 'parakeets'}", "output": "(False, True)", "id": "StringUnfoldding_sample_from_790_to_336", "old_id": "sample_790"}
{"code": "def f(line):\n    a = []\n    for c in line:\n        if c.isalnum():\n            a.append(c)\n    return ('' + '').join(a)", "input": "\"\\\"\\\\%$ normal chars $%~ qwet42'\"", "output": "'normalcharsqwet42'", "id": "StringUnfoldding_sample_from_794_to_337", "old_id": "sample_794"}
{"code": "def f(text):\n    return text.title().replace(('I' + 'o'), ('io' + ''))", "input": "'Fu,ux zfujijabji pfu.'", "output": "'Fu,Ux Zfujijabji Pfu.'", "id": "StringUnfoldding_sample_from_795_to_338", "old_id": "sample_795"}
{"code": "def f(st):\n    if st[0] == ('' + '~'):\n        e = st.rjust(10, ('' + 's'))\n        return f(e)\n    else:\n        return st.rjust(10, ('n' + ''))", "input": "'eqe-;ew22'", "output": "'neqe-;ew22'", "id": "StringUnfoldding_sample_from_799_to_339", "old_id": "sample_799"}
