{"code": "def f(string, encryption):\n    if not encryption == 0:\n        return string.upper().encode('rot13')\n    else:\n        return string", "input": "'UppEr', 0", "output": "'UppEr'", "id": "IfReverse_sample_from_8_to_0", "old_id": "sample_8"}
{"code": "def f(a, b):\n    for key, value in b.items():\n        if not key not in a:\n            a[key].append(value)\n        else:\n            a[key] = [value]\n    return a", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "id": "IfReverse_sample_from_11_to_1", "old_id": "sample_11"}
{"code": "def f(x, y):\n    tmp = ''.join(['0' if c == '9' else '9' for c in y[::-1]])\n    if not (x.isnumeric() and tmp.isnumeric()):\n        return x\n    else:\n        return x + tmp", "input": "\"\", \"sdasdnakjsda80\"", "output": "''", "id": "IfReverse_sample_from_19_to_2", "old_id": "sample_19"}
{"code": "def f(text, chars):\n    if not chars:\n        text = text.rstrip(' ')\n    else:\n        text = text.rstrip(chars)\n    if text == '':\n        return '-'\n    return text", "input": "'new-medium-performing-application - XQuery 2.2', '0123456789-'", "output": "'new-medium-performing-application - XQuery 2.'", "id": "IfReverse_sample_from_23_to_3", "old_id": "sample_23"}
{"code": "def f(lists):\n    dic = {}\n    for n in lists:\n        if not n in dic:\n            dic[n] = lists[:lists.index(n) + 1]\n        else:\n            dic[n].append(lists.pop(lists.index(n)))\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "IfReverse_sample_from_33_to_4", "old_id": "sample_33"}
{"code": "def f(text, letter):\n    counts = {}\n    for char in text:\n        if not char not in counts:\n            counts[char] += 1\n        else:\n            counts[char] = 1\n    return counts.get(letter, 0)", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "IfReverse_sample_from_45_to_5", "old_id": "sample_45"}
{"code": "def f(text):\n    length = len(text)\n    half = length // 2\n    encode = text[:half].encode('ascii')\n    if not text[half:] == encode.decode():\n        return False\n    else:\n        return True", "input": "'bbbbr'", "output": "False", "id": "IfReverse_sample_from_47_to_6", "old_id": "sample_47"}
{"code": "def f(text):\n    if not text.isidentifier():\n        return ''.join(text)\n    else:\n        return ''.join(c for c in text if c.isdigit())", "input": "'816'", "output": "'816'", "id": "IfReverse_sample_from_49_to_7", "old_id": "sample_49"}
{"code": "s = '<' * 10\ndef f(num):\n    if not num % 2 == 0:\n        return num - 1\n    else:\n        return s", "input": "21", "output": "20", "id": "IfReverse_sample_from_51_to_8", "old_id": "sample_51"}
{"code": "def f(sentence):\n    for c in sentence:\n        if not c.isascii() is False:\n            continue\n        else:\n            return False\n    return True", "input": "'1z1z1'", "output": "True", "id": "IfReverse_sample_from_56_to_9", "old_id": "sample_56"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = 0\n    for char in text:\n        if not char.isupper():\n            return 'no'\n        else:\n            count_upper += 1\n    return count_upper // 2", "input": "'ax'", "output": "1", "id": "IfReverse_sample_from_57_to_10", "old_id": "sample_57"}
{"code": "def f(s):\n    a = [char for char in s if char != ' ']\n    b = a\n    for c in reversed(a):\n        if not c == ' ':\n            break\n        else:\n            b.pop()\n    return ''.join(b)", "input": "'hi '", "output": "'hi'", "id": "IfReverse_sample_from_59_to_11", "old_id": "sample_59"}
{"code": "def f(text, prefix):\n    prefix_length = len(prefix)\n    if not text.startswith(prefix):\n        return text\n    else:\n        return text[(prefix_length - 1) // 2:\n                    (prefix_length + 1) // 2 * -1:-1]", "input": "'happy', 'ha'", "output": "''", "id": "IfReverse_sample_from_66_to_12", "old_id": "sample_66"}
{"code": "def f(text):\n    arr = text.split()\n    result = []\n    for item in arr:\n        if not item.endswith('day'):\n            item += 'day'\n        else:\n            item += 'y'\n        result.append(item)\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "IfReverse_sample_from_84_to_13", "old_id": "sample_84"}
{"code": "def f(instagram, imgur, wins):\n    photos = [instagram, imgur]\n    if instagram == imgur:\n        return wins\n    if not wins == 1:\n        photos.reverse()\n        return photos.pop()\n    else:\n        return photos.pop()", "input": "['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0", "output": "['sdfs', 'drcr', '2e']", "id": "IfReverse_sample_from_86_to_14", "old_id": "sample_86"}
{"code": "def f(text):\n    result = []\n    for i in range(len(text)):\n        if not not text[i].isascii():\n            if text[i].isalnum():\n                result.append(text[i].upper())\n            else:\n                result.append(text[i])\n        else:\n            return False\n    return ''.join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "IfReverse_sample_from_107_to_15", "old_id": "sample_107"}
{"code": "def f(text):\n    a = ['']\n    b = ''\n    for i in text:\n        if not not i.isspace():\n            b += i\n        else:\n            a.append(b)\n            b = ''\n    return len(a)", "input": "\"       \"", "output": "1", "id": "IfReverse_sample_from_110_to_16", "old_id": "sample_110"}
{"code": "def f(line):\n    count = 0\n    a = []\n    for i in range(len(line)):\n        count += 1\n        if not count%2==0:\n            a.append(line[i])\n        else:\n            a.append(line[i].swapcase())\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "IfReverse_sample_from_113_to_17", "old_id": "sample_113"}
{"code": "def f(text):\n    result = \"\"\n    for i in range(len(text)):\n        if not i % 2 == 0:\n            result += text[i]\n        else:\n            result += text[i].swapcase()\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "IfReverse_sample_from_119_to_18", "old_id": "sample_119"}
{"code": "def f(string):\n    if not string[:4] != 'Nuva':\n        return string.rstrip()\n    else:\n        return 'no'", "input": "'Nuva?dlfuyjys'", "output": "'Nuva?dlfuyjys'", "id": "IfReverse_sample_from_122_to_19", "old_id": "sample_122"}
{"code": "def f(text):\n    odd = ''\n    even = ''\n    for i, c in enumerate(text):\n        if not i % 2 == 0:\n            odd += c\n        else:\n            even += c\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "IfReverse_sample_from_128_to_20", "old_id": "sample_128"}
{"code": "def f(text):\n    a = len(text)\n    count = 0\n    while text:\n        if not text.startswith('a'):\n            count += text.find('\\n')\n        else:\n            count += text.find(' ')\n        text = text[text.find('\\n')+1:text.find('\\n')+a+1]\n    return count", "input": "\"a\\nkgf\\nasd\\n\"", "output": "1", "id": "IfReverse_sample_from_131_to_21", "old_id": "sample_131"}
{"code": "def f(a_str, prefix):\n    if not a_str.removeprefix(prefix):\n        return prefix + a_str\n    else:\n        return a_str", "input": "'abc', 'abcd'", "output": "'abc'", "id": "IfReverse_sample_from_132_to_22", "old_id": "sample_132"}
{"code": "def f(n):\n    t = 0\n    b = ''\n    digits = list(map(int, str(n)))\n    for d in digits:\n        if not d == 0: break\n        else: t += 1\n    for _ in range(t):\n        b += str(1) + '0' + str(4)\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "IfReverse_sample_from_134_to_23", "old_id": "sample_134"}
{"code": "def f(nums):\n    count = 0\n    for i in range(len(nums)):\n        if len(nums) == 0:\n            break\n        if not count % 2 == 0:\n            nums.pop(0)\n        else:\n            nums.pop()\n        count += 1\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "IfReverse_sample_from_137_to_24", "old_id": "sample_137"}
{"code": "def f(st):\n    if not st.lower().rindex('h', st.lower().rindex('i')) >= st.lower().rindex('i'):\n        return 'Hi'\n    else:\n        return 'Hey'", "input": "'Hi there'", "output": "'Hey'", "id": "IfReverse_sample_from_140_to_25", "old_id": "sample_140"}
{"code": "def f(x):\n    if not x.islower():\n        return x[::-1]\n    else:\n        return x", "input": "'ykdfhp'", "output": "'ykdfhp'", "id": "IfReverse_sample_from_142_to_26", "old_id": "sample_142"}
{"code": "def f(price, product):\n    inventory = ['olives', 'key', 'orange']\n    if not product not in inventory:\n        price *=.85\n        inventory.remove(product)\n    else:\n        return price\n    return price", "input": "8.50, 'grapes'", "output": "8.5", "id": "IfReverse_sample_from_145_to_27", "old_id": "sample_145"}
{"code": "def f(text):\n    ls = list(text)\n    total = (len(text) - 1) * 2\n    for i in range(1, total+1):\n        if not i % 2:\n            ls.insert(0, '+')\n        else:\n            ls.append('+')\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "IfReverse_sample_from_169_to_28", "old_id": "sample_169"}
{"code": "def f(string):\n    if not string.isupper():\n        return False\n    else:\n        return True", "input": "'Ohno'", "output": "False", "id": "IfReverse_sample_from_191_to_29", "old_id": "sample_191"}
{"code": "def f(array, target):\n    count, i = 0, 1\n    for j in range(1, len(array)):\n        if not ((array[j] > array[j-1]) and (array[j] <= target)):\n            if array[j] <= array[j-1]: i = 1\n            else: i += 1\n        else: count += i\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "IfReverse_sample_from_223_to_30", "old_id": "sample_223"}
{"code": "def f(dic, value):\n    result = []\n    for e in dic:\n        result.append(e[0])\n        if not e[1] == value:\n            result.append(e[1])\n        else:\n            result.reverse()\n    return result", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']", "id": "IfReverse_sample_from_229_to_31", "old_id": "sample_229"}
{"code": "def f(years):\n    a10 = sum(1 for x in years if x <= 1900)\n    a90 = sum(1 for x in years if x > 1910)\n    if not a10 > 3:\n        if a90 > 3:\n            return 1\n        else:\n            return 2\n    else:\n        return 3", "input": "[1872, 1995, 1945]", "output": "2", "id": "IfReverse_sample_from_231_to_32", "old_id": "sample_231"}
{"code": "def f(s):\n    count = {}\n    for i in s:\n        if not i.islower():\n            count[i.lower()] = s.count(i.upper()) + count.get(i.lower(), 0)\n        else:\n            count[i.lower()] = s.count(i.lower()) + count.get(i.lower(), 0)\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "IfReverse_sample_from_249_to_33", "old_id": "sample_249"}
{"code": "def f(text, sub):\n    a = 0\n    b = len(text) - 1\n\n    while a <= b:\n        c = (a + b) // 2\n        if not text.rfind(sub) >= c:\n            b = c - 1\n        else:\n            a = c + 1\n\n    return a", "input": "'dorfunctions', '2'", "output": "0", "id": "IfReverse_sample_from_256_to_34", "old_id": "sample_256"}
{"code": "def f(nums, target):\n    lows, higgs = [], []\n    for i in nums:\n        if not i < target:\n            higgs.append(i)\n        else:\n            lows.append(i)\n    lows.clear()\n    return lows, higgs", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])", "id": "IfReverse_sample_from_261_to_35", "old_id": "sample_261"}
{"code": "def f(name):\n    new_name =''\n    name = name[::-1]\n    for i in range(len(name)):\n        n = name[i]\n        if not n !='.' and  new_name.count('.')<2:\n            break\n        else:\n            new_name=n+new_name\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "IfReverse_sample_from_273_to_36", "old_id": "sample_273"}
{"code": "def f(c, index, value):\n    c[index] = value\n    if not value >= 3: \n        del c['message']\n    else:\n        c.update({'message' : 'xcrWt'})\n    return c", "input": "{1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2", "output": "{1: 2, 3: 4, 5: 6, 8: 2}", "id": "IfReverse_sample_from_281_to_37", "old_id": "sample_281"}
{"code": "def f(name):\n    if not name.islower():\n        name = name.lower()\n    else:\n        name = name.upper()\n    return name", "input": "'Pinneaple'", "output": "'pinneaple'", "id": "IfReverse_sample_from_287_to_38", "old_id": "sample_287"}
{"code": "def f(fruits):\n    if not fruits[-1] == fruits[0]:\n        fruits.pop(0)\n        fruits.pop()\n        fruits.pop(0)\n        fruits.pop()\n        return fruits\n    else:\n        return 'no'", "input": "['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']", "output": "['pear', 'banana', 'pear']", "id": "IfReverse_sample_from_295_to_39", "old_id": "sample_295"}
{"code": "def f(text):\n    i = (len(text) + 1) // 2\n    result = list(text)\n    while i < len(text):\n        t = result[i].lower()\n        if not t == result[i]:\n            result[i] = t\n        else:\n            i += 1\n        i += 2\n    return ''.join(result)", "input": "'mJkLbn'", "output": "'mJklbn'", "id": "IfReverse_sample_from_303_to_40", "old_id": "sample_303"}
{"code": "def f(text):\n    index = 1\n    while index < len(text):\n        if not text[index] != text[index - 1]:\n            text1 = text[:index]\n            text2 = text[index:].swapcase()\n            return text1 + text2\n        else:\n            index += 1\n    return text.swapcase()", "input": "'USaR'", "output": "'usAr'", "id": "IfReverse_sample_from_320_to_41", "old_id": "sample_320"}
{"code": "def f(update, starting):\n    d = starting.copy()\n    for k in update:\n        if not k in d:\n            d[k] = update[k]\n        else:\n            d[k] += update[k]\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "IfReverse_sample_from_321_to_42", "old_id": "sample_321"}
{"code": "def f(lst):\n    new = list()\n    i = len(lst)-1\n    for _ in range(len(lst)):\n        if not i%2 == 0:\n            new.append(lst[i])\n        else:\n            new.append(-lst[i])\n        i -= 1\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "IfReverse_sample_from_327_to_43", "old_id": "sample_327"}
{"code": "def f(text):\n    ans = []\n    for char in text:\n        if not char.isdigit():\n            ans.append(' ')\n        else:\n            ans.append(char)\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "IfReverse_sample_from_330_to_44", "old_id": "sample_330"}
{"code": "def f(nums):\n    count = len(nums)\n    if not count == 0:\n        if count % 2 == 0:\n            nums.clear()\n        else:\n            del nums[:count//2:]\n    else:\n        nums = [0] * int(nums.pop())\n    return nums", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[]", "id": "IfReverse_sample_from_332_to_45", "old_id": "sample_332"}
{"code": "def f(txt):\n    d = []\n    for c in txt:\n        if c.isdigit():\n            continue\n        if not c.islower():\n            if c.isupper():\n                d.append(c.lower())\n        else:\n            d.append(c.upper())\n    return ''.join(d)", "input": "\"5ll6\"", "output": "'LL'", "id": "IfReverse_sample_from_337_to_46", "old_id": "sample_337"}
{"code": "def f(text):\n    uppercase_index = text.find('A')\n    if not uppercase_index >= 0:\n        return ''.join(sorted(text))\n    else:\n        return text[:uppercase_index] + text[text.find('a') + 1 :]", "input": "'E jIkx HtDpV G'", "output": "'   DEGHIVjkptx'", "id": "IfReverse_sample_from_340_to_47", "old_id": "sample_340"}
{"code": "def f(x):\n    if not x == []:\n        cache = {}\n        for item in x:\n            if item in cache:\n                cache[item] += 1\n            else:\n                cache[item] = 1\n        return max(cache.values())\n    else:\n        return -1", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "IfReverse_sample_from_353_to_48", "old_id": "sample_353"}
{"code": "def f(description, values):\n    if not values[1] is None:\n        values = values[1:]\n    else:\n        values = values[0:1]\n    return description.format(*values)", "input": "'{0}, {0}!!!', ['R', None]", "output": "'R, R!!!'", "id": "IfReverse_sample_from_354_to_49", "old_id": "sample_354"}
{"code": "def f(var):\n    if not var.isdigit():\n        if var.replace('.', '', 1).isdigit():\n            return \"float\"\n        elif var.count(' ') == len(var) - 1:\n            return \"str\"\n        elif len(var) == 1:\n            return \"char\"\n        else:\n            return \"tuple\"\n    else:\n        return \"int\"", "input": "\" 99 777\"", "output": "'tuple'", "id": "IfReverse_sample_from_369_to_50", "old_id": "sample_369"}
{"code": "def f(a, b):\n    if not b in a:\n        return a\n    else:\n        return b.join(a.partition(a[a.index(b) + 1]))", "input": "'sierizam', 'iz'", "output": "'sieriizzizam'", "id": "IfReverse_sample_from_375_to_51", "old_id": "sample_375"}
{"code": "def f(text, chars):\n    chars = list(chars)\n    text = list(text)\n    new_text = text\n    while len(new_text) > 0 and text:\n        if not new_text[0] in chars:\n            break \n        else:\n            new_text = new_text[1:]\n    return ''.join(new_text)", "input": "'asfdellos', 'Ta'", "output": "'sfdellos'", "id": "IfReverse_sample_from_384_to_52", "old_id": "sample_384"}
{"code": "def f(total, arg):\n    if not type(arg) is list:\n        total.extend(arg)\n    else:\n        for e in arg:\n            total.extend(e)\n    return total", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']", "id": "IfReverse_sample_from_389_to_53", "old_id": "sample_389"}
{"code": "def f(s):\n    for i in range(len(s)):\n        if not s[i].isdecimal():\n            if s[i] == '0':\n                return -1\n        else:\n            return i + (s[i] == '0')\n    return -1", "input": "\"11\"", "output": "0", "id": "IfReverse_sample_from_395_to_54", "old_id": "sample_395"}
{"code": "def f(text, pref):\n    if not isinstance(pref, list):\n        return text.startswith(pref)\n    else:\n        return ', '.join(text.startswith(x) for x in pref)", "input": "'Hello World', 'W'", "output": "False", "id": "IfReverse_sample_from_411_to_55", "old_id": "sample_411"}
{"code": "def f(str, n):\n    if not len(str) < n:\n        return str.removeprefix(str[:n])\n    else:\n        return str", "input": "\"try.\", 5", "output": "'try.'", "id": "IfReverse_sample_from_421_to_56", "old_id": "sample_421"}
{"code": "def f(text):\n    if not text.isdecimal():\n        return 'no'\n    else:\n        return 'yes'", "input": "\"abc\"", "output": "'no'", "id": "IfReverse_sample_from_440_to_57", "old_id": "sample_440"}
{"code": "def f(text):\n    for space in text:\n        if not space == ' ':\n            text = text.replace('cd', space)\n        else:\n            text = text.lstrip()\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "IfReverse_sample_from_443_to_58", "old_id": "sample_443"}
{"code": "def f(array):\n    l = len(array)\n    if not l % 2 == 0:\n        array.reverse()\n    else:\n        array.clear()\n    return array", "input": "[]", "output": "[]", "id": "IfReverse_sample_from_446_to_59", "old_id": "sample_446"}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-1))\n    for i in range(len(text)):\n        if not text[i] == ' ':\n            res += text[i]\n        else:\n            res += '|'\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "IfReverse_sample_from_447_to_60", "old_id": "sample_447"}
{"code": "def f(val, text):\n    indices = [index for index in range(len(text)) if text[index] == val]\n    if not len(indices) == 0:\n        return indices[0]\n    else:\n        return -1", "input": "'o', 'fnmart'", "output": "-1", "id": "IfReverse_sample_from_471_to_61", "old_id": "sample_471"}
{"code": "def f(a, split_on):\n    t = a.split()\n    a = []\n    for i in t:\n        for j in i:\n            a.append(j)\n    if not split_on in a:\n        return False\n    else:\n        return True", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "IfReverse_sample_from_476_to_62", "old_id": "sample_476"}
{"code": "def f(values, item1, item2):\n    if not values[-1] == item2:\n        if values[-1] == item1:\n            if values[0] == item2:\n                values.append(values[0])\n    else:\n        if values[0] not in values[1:]:\n            values.append(values[0])\n    return values", "input": "[1, 1], 2, 3", "output": "[1, 1]", "id": "IfReverse_sample_from_481_to_63", "old_id": "sample_481"}
{"code": "def f(text, value):\n    ls = list(text)\n    if not (ls.count(value)) % 2 == 0:\n        ls.clear()\n    else:\n        while value in ls:\n            ls.remove(value)\n    return ''.join(ls)", "input": "'abbkebaniuwurzvr', 'm'", "output": "'abbkebaniuwurzvr'", "id": "IfReverse_sample_from_492_to_64", "old_id": "sample_492"}
{"code": "def f(s):\n    if not str.isascii(s[-5:]):\n        if str.isascii(s[:5]):\n            return s[:5], s[-5:][3:]\n        else:\n            return s\n    else:\n        return s[-5:], s[0:][:3]", "input": "'a1234\u00e5r'", "output": "('a1234', '\u00e5r')", "id": "IfReverse_sample_from_495_to_65", "old_id": "sample_495"}
{"code": "def f(n):\n    p = ''\n    if not n%2 == 1:\n        return n*n\n    else:\n        p+='sn'\n    for x in range(1, n+1):\n        if not x%2 == 0:\n            p+='ts'\n        else:\n            p+='to'\n    return p", "input": "1", "output": "'snts'", "id": "IfReverse_sample_from_506_to_66", "old_id": "sample_506"}
{"code": "def f(a, b, c, d, e):\n    key = d\n    if key in a:\n        num = a.pop(key)\n    if not b > 3:\n        return num\n    else:\n        return ''.join(c)", "input": "{7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0", "output": "'Wy'", "id": "IfReverse_sample_from_510_to_67", "old_id": "sample_510"}
{"code": "def f(array):\n    prev = array[0]\n    newArray = array[:]\n    for i in range(1, len(array)):\n        if not prev != array[i]:\n            del newArray[i]\n        else:\n            newArray[i] = array[i]\n        prev = array[i]\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "IfReverse_sample_from_529_to_68", "old_id": "sample_529"}
{"code": "def f(s, ch):\n    sl = s\n    if not ch in s:\n        return 'no'\n    else:\n        sl = s.lstrip(ch)\n        if len(sl) == 0:\n            sl = sl + '!?'\n    return sl", "input": "\"@@@ff\", '@'", "output": "'ff'", "id": "IfReverse_sample_from_530_to_69", "old_id": "sample_530"}
{"code": "def f(text, x):\n    if not text.removeprefix(x) == text:\n        return text\n    else:\n        return f(text[1:], x)", "input": "\"Ibaskdjgblw asdl \", \"djgblw\"", "output": "'djgblw asdl '", "id": "IfReverse_sample_from_531_to_70", "old_id": "sample_531"}
{"code": "def f(query, base):\n    net_sum = 0\n    for (key, val) in base.items():\n        if not key[0] == query and len(key) == 3:\n            if key[-1] == query and len(key) == 3:\n                net_sum += val\n        else:\n            net_sum -= val\n    return net_sum", "input": "'a', {}", "output": "0", "id": "IfReverse_sample_from_533_to_71", "old_id": "sample_533"}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // 3, 0)\n    result = ''\n    for j, v in enumerate(sequence[i:]):\n        if not v == '+':\n            result += sequence[i + j]\n        else:\n            result += value\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "IfReverse_sample_from_534_to_72", "old_id": "sample_534"}
{"code": "def f(text, suffix):\n    if not suffix and text and text.endswith(suffix):\n        return text\n    else:\n        return text.removesuffix(suffix)", "input": "'spider', 'ed'", "output": "'spider'", "id": "IfReverse_sample_from_548_to_73", "old_id": "sample_548"}
{"code": "def f(d):\n    result = {}\n    for k, v in d.items():\n        if not isinstance(k, float):\n            result[k] = v\n        else:\n            for i in v:\n                result[i] = k\n    return result", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "IfReverse_sample_from_552_to_74", "old_id": "sample_552"}
{"code": "def f(txt):\n    coincidences = {}\n    for c in txt:\n        if not c in coincidences:\n            coincidences[c] = 1\n        else:\n            coincidences[c] += 1\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "IfReverse_sample_from_569_to_75", "old_id": "sample_569"}
{"code": "def f(array, const):\n    output = ['x']\n    for i in range(1, len(array) + 1):\n        if not i % 2 != 0:\n            output.append(const)\n        else:\n            output.append(array[i - 1] * -2)\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "IfReverse_sample_from_576_to_76", "old_id": "sample_576"}
{"code": "def f(text):\n    if not text.istitle():\n        if text.isalpha():\n            return text.capitalize()\n    else:\n        if len(text) > 1 and text.lower() != text:\n            return text[0].lower() + text[1:]\n    return text", "input": "''", "output": "''", "id": "IfReverse_sample_from_579_to_77", "old_id": "sample_579"}
{"code": "def f(text, ch):\n    result = []\n    for line in text.splitlines():\n        if not len(line) > 0 and line[0] == ch:\n            result.append(line.upper())\n        else:\n            result.append(line.lower())\n    return \"\\n\".join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "IfReverse_sample_from_583_to_78", "old_id": "sample_583"}
{"code": "def f(text):\n    t = 5\n    tab = []\n    for i in text:\n        if not i.lower() in 'aeiouy':\n            tab.append(i * t)\n        else:\n            tab.append(i.upper() * t)\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "IfReverse_sample_from_601_to_79", "old_id": "sample_601"}
{"code": "def f(sentences):\n    if not all([sentence.isdecimal() for sentence in sentences.split('.')]):\n        return 'not oscillating'\n    else:\n        return 'oscillating' ", "input": "'not numbers'", "output": "'not oscillating'", "id": "IfReverse_sample_from_603_to_80", "old_id": "sample_603"}
{"code": "def f(text, substr, occ):\n    n = 0\n    while True:\n        i = text.rfind(substr)\n        if not i == -1:\n            if n == occ:\n                return i\n            else:\n                n += 1\n                text = text[:i]\n        else:\n            break\n    return -1", "input": "'zjegiymjc', 'j', 2", "output": "-1", "id": "IfReverse_sample_from_614_to_81", "old_id": "sample_614"}
{"code": "def f(text):\n    if not text.isascii():\n        return 'non ascii'\n    else:\n        return 'ascii'", "input": "\"<<<<\"", "output": "'ascii'", "id": "IfReverse_sample_from_617_to_82", "old_id": "sample_617"}
{"code": "def f(text, rules):\n    for rule in rules:\n        if not rule == '@':\n            if rule == '~':\n                text = text.upper()\n            elif text and text[len(text)-1] == rule:\n                text = text[0:len(text)-1]\n        else:\n            text = text[::-1]\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "IfReverse_sample_from_623_to_83", "old_id": "sample_623"}
{"code": "def f(perc, full):\n    reply = \"\"\n    i = 0\n    while perc[i] == full[i] and i < len(full) and i < len(perc):\n        if not perc[i] == full[i]:\n            reply += \"no \"\n        else:\n            reply += \"yes \"\n        i += 1\n    return reply", "input": "\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"", "output": "'yes '", "id": "IfReverse_sample_from_639_to_84", "old_id": "sample_639"}
{"code": "def f(nums, target):\n    if not nums.count(0):\n        if nums.count(target) < 3:\n            return 1\n        else:\n            return nums.index(target)\n    else:\n        return 0", "input": "[1, 1, 1, 2], 3", "output": "1", "id": "IfReverse_sample_from_645_to_85", "old_id": "sample_645"}
{"code": "def f(list1, list2):\n    l = list1[:]\n    while len(l) > 0:\n        if not l[-1] in list2:\n            return l[-1]\n        else:\n            l.pop()\n    return 'missing'", "input": "[0, 4, 5, 6], [13, 23, -5, 0]", "output": "6", "id": "IfReverse_sample_from_648_to_86", "old_id": "sample_648"}
{"code": "def f(chars):\n    s = \"\"\n    for ch in chars:\n        if not chars.count(ch) % 2 == 0:\n            s += ch\n        else:\n            s += ch.upper()\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "IfReverse_sample_from_665_to_87", "old_id": "sample_665"}
{"code": "def f(string):\n    if not string.isupper():\n        if string.islower():\n            return string.upper()\n    else:\n        return string.lower()\n    return string", "input": "\"cA\"", "output": "'cA'", "id": "IfReverse_sample_from_673_to_88", "old_id": "sample_673"}
{"code": "def f(text, length):\n    length = -length if length < 0 else length\n    output = ''\n    for idx in range(length):\n        if not text[idx % len(text)] != ' ':\n            break\n        else:\n            output += text[idx % len(text)]\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "IfReverse_sample_from_677_to_89", "old_id": "sample_677"}
{"code": "def f(text):\n    freq = dict()\n    for c in text.lower():\n        if not c in freq:\n            freq[c] = 1\n        else:\n            freq[c] += 1\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "IfReverse_sample_from_678_to_90", "old_id": "sample_678"}
{"code": "def f(text):\n    (k, l) = (0, len(text) - 1)\n    while not text[l].isalpha():\n        l -= 1\n    while not text[k].isalpha():\n        k += 1\n    if not k != 0 or l != len(text) - 1:\n        return text[0]\n    else:\n        return text[k: l+1]", "input": "\"timetable, 2mil\"", "output": "'t'", "id": "IfReverse_sample_from_717_to_93", "old_id": "sample_717"}
{"code": "def f(text):\n    out = \"\"\n    for i in range(len(text)):\n        if not text[i].isupper():\n            out += text[i].upper()\n        else:\n            out += text[i].lower()\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "IfReverse_sample_from_722_to_94", "old_id": "sample_722"}
{"code": "def f(text, separator):\n    splitted = text.splitlines()\n    if not separator:\n        return splitted\n    else:\n        return [' '.join(s) for s in splitted]", "input": "'dga nqdk\\rull qcha kl', 1", "output": "['d g a   n q d k', 'u l l   q c h a   k l']", "id": "IfReverse_sample_from_723_to_95", "old_id": "sample_723"}
{"code": "def f(text, insert):\n    whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = ''\n    for char in text:\n        if not char in whitespaces:\n            clean += char\n        else:\n            clean += insert\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "IfReverse_sample_from_736_to_96", "old_id": "sample_736"}
{"code": "def f(plot, delin):\n    if not delin in plot:\n        return plot\n    else:\n        split = plot.index(delin)\n        first = plot[:split]\n        second = plot[split + 1:]\n        return first + second", "input": "[1, 2, 3, 4], 3", "output": "[1, 2, 4]", "id": "IfReverse_sample_from_740_to_97", "old_id": "sample_740"}
{"code": "def f(text):\n    b = True\n    for x in text:\n        if not x.isdigit():\n            b = False\n            break\n        else:\n            b = True\n    return b", "input": "\"-1-3\"", "output": "False", "id": "IfReverse_sample_from_742_to_98", "old_id": "sample_742"}
{"code": "def f(char_map, text):\n    new_text = ''\n    for ch in text:\n        val = char_map.get(ch)\n        if not val is None:\n            new_text += val\n        else:\n            new_text += ch\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "IfReverse_sample_from_750_to_99", "old_id": "sample_750"}
{"code": "def f(prefix, text):\n    if not text.startswith(prefix):\n        return prefix + text\n    else:\n        return text", "input": "'mjs', 'mjqwmjsqjwisojqwiso'", "output": "'mjsmjqwmjsqjwisojqwiso'", "id": "IfReverse_sample_from_778_to_100", "old_id": "sample_778"}
{"code": "def f(str,toget):\n    if not str.startswith(toget): return str\n    else: return str[len(toget):]", "input": "'fnuiyh', 'ni'", "output": "'fnuiyh'", "id": "IfReverse_sample_from_796_to_101", "old_id": "sample_796"}
{"code": "def f(st):\n    if not st[0] == '~':\n        return st.rjust(10, 'n')\n    else:\n        e = st.rjust(10, 's')\n        return f(e)", "input": "'eqe-;ew22'", "output": "'neqe-;ew22'", "id": "IfReverse_sample_from_799_to_102", "old_id": "sample_799"}
