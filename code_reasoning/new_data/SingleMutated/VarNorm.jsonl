{"old_id": "sample_0", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        var2.append((var1.count(var3), var3))\n    var2.sort(reverse=True)\n    return var2\nassert f([1, 1, 3, 1, 3, 1]) == ", "input": "[1, 1, 3, 1, 3, 1]", "output": "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]"}
{"old_id": "sample_1", "code": "def f(var1, var2, var3):\n    var4 = {}\n    for var5 in var1, var2, var3:\n        var4.update(dict.fromkeys(var5))\n    return var4\nassert f((1, ), (1, ), (1, 2)) == ", "input": "(1, ), (1, ), (1, 2)", "output": "{1: None, 2: None}"}
{"old_id": "sample_2", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in '+':\n        if var3 in var2:\n            var2.remove(var3)\n    return ''.join(var2)\nassert f('hbtofdeiequ') == ", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'"}
{"old_id": "sample_3", "code": "def f(var1, var2):\n    var3 = list(var1)\n    var3.append(var2)\n    return ''.join(var3)\nassert f('bcksrut', 'q') == ", "input": "'bcksrut', 'q'", "output": "'bcksrutq'"}
{"old_id": "sample_4", "code": "def f(var1):\n    var2 = ' '\n    var2 += ''.join(var1)\n    return var2\nassert f([' ', '  ', '    ', '   ']) == ", "input": "[' ', '  ', '    ', '   ']", "output": "'           '"}
{"old_id": "sample_5", "code": "def f(var1, lower, upper):\n    count = 0\n    var2 = list()\n    for var3 in var1:\n        var3 = lower if var3.isdecimal() else upper\n        if var3 in ['p', 'C']:\n            count += 1\n        var2.append(var3)\n    return count, ''.join(var2)\nassert f('DSUWeqExTQdCMGpqur', 'a', 'x') == ", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')"}
{"old_id": "sample_6", "code": "def f(var1):\n    for var2,var3 in sorted(var1.items(), key=lambda var4: len(str(var4)))[:-1]:\n        var1.pop(var2)\n    return list(var1.items())\nassert f({'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}) == ", "input": "{'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}", "output": "[('74', 31)]"}
{"old_id": "sample_7", "code": "def f(list):\n    var1 = list[:]\n    while len(list) > 1:\n        list.pop(len(list) - 1)\n        for var2 in range(len(list)):\n            list.pop(var2)\n    list = var1[:]\n    if list:\n        list.pop(0)\n    return list\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_8", "code": "def f(var1, var2):\n    if var2 == 0:\n        return var1\n    else:\n        return var1.upper().encode('rot13')\nassert f('UppEr', 0) == ", "input": "'UppEr', 0", "output": "'UppEr'"}
{"old_id": "sample_9", "code": "def f(var1):\n    for var2 in var1:\n        if not var2.isnumeric():\n            return False\n    return True\nassert f('#284376598') == ", "input": "'#284376598'", "output": "False"}
{"old_id": "sample_10", "code": "def f(var1):\n    var2 = ''\n    for var3 in var1.lower().strip():\n        if var3.isnumeric() or var3 in 'ÄäÏïÖöÜü':\n            var2 += var3\n    return var2\nassert f('') == ", "input": "''", "output": "''"}
{"old_id": "sample_11", "code": "def f(var1, var2):\n    for var3, var4 in var2.items():\n        if var3 not in var1:\n            var1[var3] = [var4]\n        else:\n            var1[var3].append(var4)\n    return var1\nassert f({}, {'foo': 'bar'}) == ", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}"}
{"old_id": "sample_12", "code": "def f(var1, var2):\n    count = 0\n    while var1[:len(var2)] == var2 and count < len(var1)-len(var2):\n        var1 = var1[len(var2):]\n        count += len(var2)\n    return var1\nassert f('If you want to live a happy life! Daniel', 'Daniel') == ", "input": "'If you want to live a happy life! Daniel', 'Daniel'", "output": "'If you want to live a happy life! Daniel'"}
{"old_id": "sample_13", "code": "def f(var1):\n    count = len(var1)\n    var2 = 0\n    for var3 in var1:\n        if var3.isalpha():\n            var2 += 1\n    return var2\nassert f(['sharron', 'Savannah', 'Mike Cherokee']) == ", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2"}
{"old_id": "sample_14", "code": "def f(var1):\n    var2 = list(var1.strip())\n    var2.reverse()\n    return ''.join(var2)\nassert f('   OOP   ') == ", "input": "'   OOP   '", "output": "'POO'"}
{"old_id": "sample_15", "code": "def f(var1, var2, var3):\n    var4 = var1.replace(var2, var3)\n    return var4.upper()\nassert f(\"zn kgd jw lnt\", \"h\", \"u\") == ", "input": "\"zn kgd jw lnt\", \"h\", \"u\"", "output": "'ZN KGD JW LNT'"}
{"old_id": "sample_16", "code": "def f(var1, var2):\n    if var1.endswith(var2):\n        return var1[:-len(var2)]\n    return var1\nassert f('zejrohaj', 'owc') == ", "input": "'zejrohaj', 'owc'", "output": "'zejrohaj'"}
{"old_id": "sample_17", "code": "def f(var1):\n    return var1.find(\",\")\nassert f(\"There are, no, commas, in this text\") == ", "input": "\"There are, no, commas, in this text\"", "output": "9"}
{"old_id": "sample_18", "code": "def f(var1, var2):\n    var3 = 0\n    var4 = var1.copy()\n    for var5 in var4:\n        if var5 > var2:\n            var1.insert(var3, var2)\n            break\n        var3 += 1\n    return var1\nassert f([5, 4, 3, 2, 1, 0], 3) == ", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]"}
{"old_id": "sample_19", "code": "def f(var1, var2):\n    var3 = ''.join(['0' if var4 == '9' else '9' for var4 in var2[::-1]])\n    if (var1.isnumeric() and var3.isnumeric()):\n        return var1 + var3\n    else:\n        return var1\nassert f(\"\", \"sdasdnakjsda80\") == ", "input": "\"\", \"sdasdnakjsda80\"", "output": "''"}
{"old_id": "sample_20", "code": "def f(var1):\n    var2 = ''\n    for var3 in range(len(var1)-1, -1, -1):\n        var2 += var1[var3]\n    return var2\nassert f('was,') == ", "input": "'was,'", "output": "',saw'"}
{"old_id": "sample_21", "code": "def f(var1):\n    var2 = var1.pop()\n    var1.extend([var2, var2])\n    return var1\nassert f([1, 1, 2, 2]) == ", "input": "[1, 1, 2, 2]", "output": "[1, 1, 2, 2, 2]"}
{"old_id": "sample_22", "code": "def f(var1):\n    if var1 == 0:\n        return [0]\n    var2 = []\n    while var1 > 0:\n        var2.append(var1%10)\n        var1 = var1//10\n    var2.reverse()\n    return int(''.join(str(var3) for var3 in var2))\nassert f(000) == ", "input": "000", "output": "[0]"}
{"old_id": "sample_23", "code": "def f(var1, var2):\n    if var2:\n        var1 = var1.rstrip(var2)\n    else:\n        var1 = var1.rstrip(' ')\n    if var1 == '':\n        return '-'\n    return var1\nassert f('new-medium-performing-application - XQuery 2.2', '0123456789-') == ", "input": "'new-medium-performing-application - XQuery 2.2', '0123456789-'", "output": "'new-medium-performing-application - XQuery 2.'"}
{"old_id": "sample_24", "code": "def f(var1, var2):\n    var1.pop(var2)\n    return var1\nassert f([35, 45, 3, 61, 39, 27, 47], 0) == ", "input": "[35, 45, 3, 61, 39, 27, 47], 0", "output": "[45, 3, 61, 39, 27, 47]"}
{"old_id": "sample_25", "code": "def f(var1):\n    var1 = var1.copy()\n    var1.popitem()\n    return var1\nassert f({\"l\": 1, \"t\": 2, \"x:\": 3}) == ", "input": "{\"l\": 1, \"t\": 2, \"x:\": 3}", "output": "{'l': 1, 't': 2}"}
{"old_id": "sample_26", "code": "def f(items, var1):\n    for var2 in items.split():\n        if var2 in var1:\n            return items.index(var2)+1\n        if var2.index('.') == len(var2)-1 or var2.index('.') == 0:\n            return 'error'\n    return '.'\nassert f(\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\") == ", "input": "\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"", "output": "'error'"}
{"old_id": "sample_27", "code": "def f(var1):\n    var2 = list(var1)\n    var3 = ''\n    while len(var2) > 0:\n        var3 += var2.pop(0)\n        if len(var2) * 2 > len(var1):\n            return var1[len(var2):] == var3\n    return False\nassert f('flak') == ", "input": "'flak'", "output": "False"}
{"old_id": "sample_28", "code": "def f(var1):\n    var2 = var1[:]\n    var2.reverse()\n    var1.sort(reverse=True)\n    return var1 == var2\nassert f([5, 8]) == ", "input": "[5, 8]", "output": "True"}
{"old_id": "sample_29", "code": "def f(var1):\n    var2 = list(filter(str.isnumeric, var1))\n    assert len(var2) > 0\n    return ''.join(var2)\nassert f('-123   \\t+314') == ", "input": "'-123   \\t+314'", "output": "'123314'"}
{"old_id": "sample_30", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if var3.isascii() or (isinstance(var3, int) and not str(abs(var3)).isascii()):\n            var2.append(var3)\n    return var2\nassert f([\"a\", \"b\", \"c\"]) == ", "input": "[\"a\", \"b\", \"c\"]", "output": "['a', 'b', 'c']"}
{"old_id": "sample_31", "code": "def f(var1):\n    upper = 0\n    for var2 in var1:\n        if var2.isupper():\n            upper += 1\n    return upper * (2,1)[upper % 2]\nassert f('PoIOarTvpoead') == ", "input": "'PoIOarTvpoead'", "output": "8"}
{"old_id": "sample_32", "code": "def f(var1, var2):\n    reverse = ['*' + var3 for var3 in var1.split(var2)]\n    return ';'.join(reversed(reverse))\nassert f('volume', 'l') == ", "input": "'volume', 'l'", "output": "'*ume;*vo'"}
{"old_id": "sample_33", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        if var3 in var2:\n            var2[var3].append(var1.pop(var1.index(var3)))\n        else:\n            var2[var3] = var1[:var1.index(var3) + 1]\n    return str(var2).replace(' ', '')\nassert f([5, 2, 7, 2, 3, 5]) == ", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'"}
{"old_id": "sample_34", "code": "def f(var1, var2, var3):\n    while var2 in var1:\n        var1.remove(var2)\n    while var3 in var1:\n        var1.remove(var3)\n    return var1\nassert f([1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1) == ", "input": "[1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1", "output": "[2, 7, 7, 6, 8, 4, 2, 5, 21]"}
{"old_id": "sample_35", "code": "def f(var1, items):\n    var2 = []\n    for var3 in items:\n        var4 = var3.rfind(var1)\n        if var4 >= 0:\n            var2.append(var4)\n\n    return var2\nassert f(\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]) == ", "input": "\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]", "output": "[]"}
{"old_id": "sample_36", "code": "def f(var1, var2):\n    return var1.rstrip(var2) if var1 else var1\nassert f('ha', '') == ", "input": "'ha', ''", "output": "'ha'"}
{"old_id": "sample_37", "code": "def f(var1):\n    var2 = []\n    for var3 in range(len(var1)):\n        var2.append(var1[var3:])\n    return var2\nassert f('123') == ", "input": "'123'", "output": "['123', '23', '3']"}
{"old_id": "sample_38", "code": "def f(var1):\n    return var1.title().replace(' ', '')\nassert f('1oE-err bzz-bmm') == ", "input": "'1oE-err bzz-bmm'", "output": "'1Oe-ErrBzz-Bmm'"}
{"old_id": "sample_39", "code": "def f(var1, var2):\n    if var2 in var1:\n        return var1.index(var2)\n    return -1\nassert f([6, 2, 7, 1], 6) == ", "input": "[6, 2, 7, 1], 6", "output": "0"}
{"old_id": "sample_40", "code": "def f(var1):\n    return var1.ljust(len(var1) + 1, \"#\")\nassert f(\"the cow goes moo\") == ", "input": "\"the cow goes moo\"", "output": "'the cow goes moo#'"}
{"old_id": "sample_41", "code": "def f(var1, values):\n    var1.reverse()\n    for var2 in values:\n        var1.insert(len(var1) // 2, var2)\n    var1.reverse()\n    return var1\nassert f([58], [21, 92]) == ", "input": "[58], [21, 92]", "output": "[58, 92, 21]"}
{"old_id": "sample_42", "code": "def f(var1):\n    var1.clear()\n    for var2 in var1:\n        var1.append(var2*2)\n    return var1\nassert f([4, 3, 2, 1, 2, -1, 4, 2]) == ", "input": "[4, 3, 2, 1, 2, -1, 4, 2]", "output": "[]"}
{"old_id": "sample_43", "code": "def f(var1):\n    for var2 in str(var1):\n        if not var2.isdigit():\n            var1 = -1\n            break\n    return var1\nassert f(\"6 ** 2\") == ", "input": "\"6 ** 2\"", "output": "-1"}
{"old_id": "sample_44", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in range(0, len(var2)):\n        if var2[var3]!='+':\n            var2.insert(var3, '+')\n            var2.insert(var3, '*')\n            break\n    return '+'.join(var2)\nassert f('nzoh') == ", "input": "'nzoh'", "output": "'*+++n+z+o+h'"}
{"old_id": "sample_45", "code": "def f(var1, var2):\n    var3 = {}\n    for var4 in var1:\n        if var4 not in var3:\n            var3[var4] = 1\n        else:\n            var3[var4] += 1\n    return var3.get(var2, 0)\nassert f('za1fd1as8f7afasdfam97adfa', '7') == ", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2"}
{"old_id": "sample_46", "code": "def f(var1, var2):\n    return var2.join(var1)\nassert f(['many', 'letters', 'asvsz', 'hello', 'man'], '') == ", "input": "['many', 'letters', 'asvsz', 'hello', 'man'], ''", "output": "'manylettersasvszhelloman'"}
{"old_id": "sample_48", "code": "def f(var1):\n    if var1 == []:\n        return \"\"\n    var2 = var1[0]\n    for var3 in var1[1:]:\n        if var3 < var2:\n            var2 = var3\n    var1.remove(var2)\n    return var1.join(var2)\nassert f([]) == ", "input": "[]", "output": "''"}
{"old_id": "sample_49", "code": "def f(var1):\n    if var1.isidentifier():\n        return ''.join(var2 for var2 in var1 if var2.isdigit())\n    else:\n        return ''.join(var1)\nassert f('816') == ", "input": "'816'", "output": "'816'"}
{"old_id": "sample_50", "code": "def f(var1):\n    var1.clear()\n    var1 += [1] * (len(var1) + 1)\n    return var1\nassert f(['a', 'c', 'v']) == ", "input": "['a', 'c', 'v']", "output": "[1]"}
{"old_id": "sample_51", "code": "var1 = '<' * 10\ndef f(var2):\n    if var2 % 2 == 0:\n        return var1\n    else:\n        return var2 - 1\nassert f(21) == ", "input": "21", "output": "20"}
{"old_id": "sample_52", "code": "def f(var1):\n    var2 = []\n    for var3 in range(len(var1)):\n        if not var1[var3].isdecimal():\n            var2.append(var1[var3])\n    return ''.join(var2)\nassert f(\"seiq7229 d27\") == ", "input": "\"seiq7229 d27\"", "output": "'seiq d'"}
{"old_id": "sample_53", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        var4 = {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}\n        var4 = var4.get(var3, var3)\n        var2[var4] = var2.get(var4, 0) + 1\n    return [var5 for var6, var5 in var2.items()]\nassert f(\"URW rNB\") == ", "input": "\"URW rNB\"", "output": "[1, 1, 1, 1, 1, 1, 1]"}
{"old_id": "sample_54", "code": "def f(var1, var2, var3):\n    var4 = var1[var2:var3]\n    if not var4:\n        return -1\n    return var4.index(min(var4))\nassert f('happy', 0, 3) == ", "input": "'happy', 0, 3", "output": "1"}
{"old_id": "sample_55", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if var3>0:\n            var2 += [var3]\n    var2.sort(reverse=True)\n    return var2\nassert f([4, 8, 17, 89, 43, 14]) == ", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]"}
{"old_id": "sample_56", "code": "def f(var1):\n    for var2 in var1:\n        if var2.isascii() is False:\n            return False\n        else:\n            continue\n    return True\nassert f('1z1z1') == ", "input": "'1z1z1'", "output": "True"}
{"old_id": "sample_57", "code": "def f(var1):\n    var1 = var1.upper()\n    var2 = 0\n    for var3 in var1:\n        if var3.isupper():\n            var2 += 1\n        else:\n            return 'no'\n    return var2 // 2\nassert f('ax') == ", "input": "'ax'", "output": "1"}
{"old_id": "sample_58", "code": "def f(var1):\n    count = len(var1)\n    for var2 in [var2 % 2 for var2 in range(count)]:\n        var1.append(var1[var2])\n    return var1\nassert f([-1, 0, 0, 1, 1]) == ", "input": "[-1, 0, 0, 1, 1]", "output": "[-1, 0, 0, 1, 1, -1, 0, -1, 0, -1]"}
{"old_id": "sample_59", "code": "def f(var1):\n    var2 = [var3 for var3 in var1 if var3 != ' ']\n    var4 = var2\n    for var5 in reversed(var2):\n        if var5 == ' ':\n            var4.pop()\n        else:\n            break\n    return ''.join(var4)\nassert f('hi ') == ", "input": "'hi '", "output": "'hi'"}
{"old_id": "sample_60", "code": "def f(var1):\n    for var2 in var1:\n        if var2.isalpha():\n            return var2.capitalize()\n    return '-'\nassert f('raruwa') == ", "input": "'raruwa'", "output": "'R'"}
{"old_id": "sample_61", "code": "def f(var1):\n    var2 = var1.split()\n    if var2:\n        var3 = [var4 for var4 in var2 if var4.isascii() and var4 not in ('nada', '0')]\n        return max(var3, var5=len) if var3 else 'nada'\n    return 'nada'\nassert f(\"\") == ", "input": "\"\"", "output": "'nada'"}
{"old_id": "sample_62", "code": "def f(var1):\n    if len(list(var1.keys())) > len(list(var1.values())):\n        return tuple(var1.keys())\n    return tuple(var1.values())\nassert f({\"eating\" : \"ja\", \"books\" : \"nee\", \"piano\" : \"coke\", \"excitement\" : \"zoo\"}) == ", "input": "{\"eating\" : \"ja\", \"books\" : \"nee\", \"piano\" : \"coke\", \"excitement\" : \"zoo\"}", "output": "('ja', 'nee', 'coke', 'zoo')"}
{"old_id": "sample_63", "code": "def f(var1, var2):\n    while var1.startswith(var2):\n        var1 = var1[len(var2):] or var1\n    return var1\nassert f('ndbtdabdahesyehu', 'n') == ", "input": "'ndbtdabdahesyehu', 'n'", "output": "'dbtdabdahesyehu'"}
{"old_id": "sample_64", "code": "def f(var1, var2):\n    var3 = len(var1)\n    for var4 in range(var2-int(var2%2)):\n        var1 = ' '+var1+' '\n        var3 += 2\n        if var3 >= var2:\n            return var1\nassert f(\"7\", 10) == ", "input": "\"7\", 10", "output": "'     7     '"}
{"old_id": "sample_65", "code": "def f(var1, index):\n    return var1[index] % 42 + var1.pop(index) * 2\nassert f([3, 2, 0, 3, 7], 3) == ", "input": "[3, 2, 0, 3, 7], 3", "output": "9"}
{"old_id": "sample_66", "code": "def f(var1, var2):\n    var3 = len(var2)\n    if var1.startswith(var2):\n        return var1[(var3 - 1) // 2:\n                    (var3 + 1) // 2 * -1:-1]\n    else:\n        return var1\nassert f('happy', 'ha') == ", "input": "'happy', 'ha'", "output": "''"}
{"old_id": "sample_68", "code": "def f(var1, var2):\n    if var1.startswith(var2):\n        var3 = len(var2)\n        var1 = '.'.join(var1[var3:].split('.')[1:] + var1[:var3].split('.')[:-1])\n    return var1\nassert f('omeunhwpvr.dq', 'omeunh') == ", "input": "'omeunhwpvr.dq', 'omeunh'", "output": "'dq'"}
{"old_id": "sample_69", "code": "def f(var1, var2):\n    if var2 in var1:\n        var3 = var1.pop(var2)\n        return var3\n    return 'Name unknown'\nassert f({'882afmfp': 56}, '6f53p') == ", "input": "{'882afmfp': 56}, '6f53p'", "output": "'Name unknown'"}
{"old_id": "sample_70", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1.split(' '):\n        var2 += len(var3.zfill(len(var3)*2))\n    return var2\nassert f('999893767522480') == ", "input": "'999893767522480'", "output": "30"}
{"old_id": "sample_71", "code": "def f(var1, var2):\n    for var3 in range(var2):\n        var4 = var1.popitem()\n        var1[var4[1]] = var4[0]\n    return var1\nassert f({1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1) == ", "input": "{1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1", "output": "{1: 2, 3: 4, 5: 6, 7: 8, 10: 9}"}
{"old_id": "sample_72", "code": "def f(var1):\n    for var2 in var1:\n        if not var2.isnumeric():\n            return False\n    return bool(var1)\nassert f('99') == ", "input": "'99'", "output": "True"}
{"old_id": "sample_73", "code": "def f(var1):\n    return (var1.count('1'), var1.count('0'))\nassert f(\"100010010\") == ", "input": "\"100010010\"", "output": "(3, 6)"}
{"old_id": "sample_74", "code": "def f(var1, var2, var3):\n    var1.insert(var2, var3)\n    return var1\nassert f([44, 34, 23, 82, 24, 11, 63, 99], 4, 15) == ", "input": "[44, 34, 23, 82, 24, 11, 63, 99], 4, 15", "output": "[44, 34, 23, 82, 15, 24, 11, 63, 99]"}
{"old_id": "sample_75", "code": "def f(var1, var2):\n    var3 = var1.index(var2)\n    return var3 * 2 + var1[-var3 - 1] * 3\nassert f([-1, 2, 1, -8, 2], 2) == ", "input": "[-1, 2, 1, -8, 2], 2", "output": "-22"}
{"old_id": "sample_76", "code": "def f(var1):\n    var1 = [var2 for var2 in var1 if var2 > 0]\n    if len(var1) <= 3:\n        return var1\n    var1.reverse()\n    var3 = len(var1)//2\n    return var1[:var3] + [0]*5 + var1[var3:]\nassert f([10, 3, 2, 2, 6, 0]) == ", "input": "[10, 3, 2, 2, 6, 0]", "output": "[6, 2, 0, 0, 0, 0, 0, 2, 3, 10]"}
{"old_id": "sample_77", "code": "def f(var1, var2):\n    var3 = var1[var1.rfind(var2):]\n    return var3*var1.count(var2)\nassert f('h ,lpvvkohh,u', 'i') == ", "input": "'h ,lpvvkohh,u', 'i'", "output": "''"}
{"old_id": "sample_78", "code": "def f(var1):\n    if var1 and var1.isupper():\n        var2 = str.maketrans(var3.var4, var3.var5)\n        return var1.translate(var2)\n    return var1.lower()[:3]\nassert f('mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n') == ", "input": "'mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n'", "output": "'mty'"}
{"old_id": "sample_79", "code": "def f(var1):\n    var1 = list(var1)\n    var1.clear()\n    var1.append('1')\n    var1.append('2')\n    var1.append('3')\n    var1.append('4')\n    return ','.join(var1)\nassert f([0, 1, 2, 3, 4]) == ", "input": "[0, 1, 2, 3, 4]", "output": "'1,2,3,4'"}
{"old_id": "sample_80", "code": "def f(var1):\n    return ''.join(reversed(var1.rstrip()))\nassert f('ab        ') == ", "input": "'ab        '", "output": "'ba'"}
{"old_id": "sample_81", "code": "def f(var1, var2):\n    try:\n        var1[list(var1)[list(var1).index(var2)]] = list(var1)[list(var1).index(var2)].lower()\n    except ValueError:\n        pass\n    return list(var1.items())\nassert f({\"Bulls\": 23, \"White Sox\": 45}, \"Bulls\") == ", "input": "{\"Bulls\": 23, \"White Sox\": 45}, \"Bulls\"", "output": "[('Bulls', 'bulls'), ('White Sox', 45)]"}
{"old_id": "sample_82", "code": "def f(var1, var2, var3, var4):\n    return var1 and var2 or var3 and var4\nassert f('CJU', 'BFS', 'WBYDZPVES', 'Y') == ", "input": "'CJU', 'BFS', 'WBYDZPVES', 'Y'", "output": "'BFS'"}
{"old_id": "sample_84", "code": "def f(var1):\n    var2 = var1.split()\n    var3 = []\n    for var4 in var2:\n        if var4.endswith('day'):\n            var4 += 'y'\n        else:\n            var4 += 'day'\n        var3.append(var4)\n    return ' '.join(var3)\nassert f(\"nwv mef ofme bdryl\") == ", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'"}
{"old_id": "sample_85", "code": "def f(var1):\n    values = {0: 3, 1: 4.5, 2: '-'}\n    var2 = {}\n    for var3, var4 in values.items():\n        if var3 % var1 != 2:\n            var2[var4] = var1 // 2\n    return sorted(var2)\nassert f(12) == ", "input": "12", "output": "[3, 4.5]"}
{"old_id": "sample_86", "code": "def f(var1, var2, var3):\n    var4 = [var1, var2]\n    if var1 == var2:\n        return var3\n    if var3 == 1:\n        return var4.pop()\n    else:\n        var4.reverse()\n        return var4.pop()\nassert f(['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0) == ", "input": "['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0", "output": "['sdfs', 'drcr', '2e']"}
{"old_id": "sample_87", "code": "def f(var1):\n    var1.reverse()\n    return ''.join(map(str, var1))\nassert f([-1, 9, 3, 1, -2]) == ", "input": "[-1, 9, 3, 1, -2]", "output": "'-2139-1'"}
{"old_id": "sample_88", "code": "def f(var1, var2):\n    if var2.endswith(var1):\n        var2 = var2[:len(var1) * -1]\n    return var2\nassert f(\"he\", \"hello\") == ", "input": "\"he\", \"hello\"", "output": "'hello'"}
{"old_id": "sample_89", "code": "def f(var1):\n    if var1 not in 'aeiouAEIOU':\n        return None\n    if var1 in 'AEIOU':\n        return var1.lower()\n    return var1.upper()\nassert f('o') == ", "input": "'o'", "output": "'O'"}
{"old_id": "sample_90", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        var2.append(var3.copy())\n    return var2\nassert f([[1, 2, 3], [], [1, 2, 3]]) == ", "input": "[[1, 2, 3], [], [1, 2, 3]]", "output": "[[1, 2, 3], [], [1, 2, 3]]"}
{"old_id": "sample_91", "code": "def f(var1):\n    var2 = dict.fromkeys(var1, 0)\n    return list(var2.keys())\nassert f(\"12ab23xy\") == ", "input": "\"12ab23xy\"", "output": "['1', '2', 'a', 'b', '3', 'x', 'y']"}
{"old_id": "sample_92", "code": "def f(var1):\n    return var1.isascii()\nassert f('wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct') == ", "input": "'wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct'", "output": "False"}
{"old_id": "sample_93", "code": "def f(var1):\n    var2 = len(var1) + 2\n    var3 = list(var1)\n    var4 = ''.join(var3)\n    var3.clear()\n    return var4 + ('!' * var2)\nassert f('iq') == ", "input": "'iq'", "output": "'iq!!!!'"}
{"old_id": "sample_94", "code": "def f(var1, var2):\n    return {**var1, **var2}\nassert f({'w': 5, 'wi': 10}, {'w': 3}) == ", "input": "{'w': 5, 'wi': 10}, {'w': 3}", "output": "{'w': 3, 'wi': 10}"}
{"old_id": "sample_95", "code": "def f(var1):\n    return dict((var2, var3) for var3, var2 in var1.items())\nassert f({'AAA': 'fr'}) == ", "input": "{'AAA': 'fr'}", "output": "{'fr': 'AAA'}"}
{"old_id": "sample_96", "code": "def f(var1):\n    return not any([var2.isupper() for var2 in var1])\nassert f('lunabotics') == ", "input": "'lunabotics'", "output": "True"}
{"old_id": "sample_97", "code": "def f(var1):\n    var1.clear()\n    for var2 in var1:\n        if var2 == 3:\n            return False\n    else:\n        return True\nassert f([2, 0]) == ", "input": "[2, 0]", "output": "True"}
{"old_id": "sample_98", "code": "def f(var1):\n    return sum([var1.istitle() for var1 in var1.split()])\nassert f('SOME OF THIS Is uknowN!') == ", "input": "'SOME OF THIS Is uknowN!'", "output": "1"}
{"old_id": "sample_99", "code": "def f(var1, var2, var3):\n    return '___'.join(var1.rsplit(var2, var3))\nassert f('aa+++bb', '+', 1) == ", "input": "'aa+++bb', '+', 1", "output": "'aa++___bb'"}
{"old_id": "sample_100", "code": "def f(var1, var2):\n    var3 = var1.copy()\n    for var4 in var2:\n        if var4 in var3:\n            del var3[var4]\n    return var3\nassert f({'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]) == ", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}"}
{"old_id": "sample_101", "code": "def f(var1, var2, var3):\n    var1.insert(var2, var3)\n    return var1\nassert f([ -4,   1,  0], 1, 4) == ", "input": "[ -4,   1,  0], 1, 4", "output": "[-4, 4, 1, 0]"}
{"old_id": "sample_102", "code": "def f(var1, var2):\n    var3 = [var1.index(var4) for var4 in var1 if var4 in var2]\n    var3.sort(reverse=True)\n    return var3\nassert f(['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']) == ", "input": "['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']", "output": "[]"}
{"old_id": "sample_103", "code": "def f(var1):\n    return ''.join((var2.casefold() for var2 in var1))\nassert f('abcDEFGhIJ') == ", "input": "'abcDEFGhIJ'", "output": "'abcdefghij'"}
{"old_id": "sample_104", "code": "def f(var1):\n    var2 = dict()\n    for var3 in var1:\n        var2[var3] = var2.get(var3, 0) + 1\n    for var4 in var2:\n        if var2[var4] > 1:\n            var2[var4] = 1\n    return var2\nassert f(\"a\") == ", "input": "\"a\"", "output": "{'a': 1}"}
{"old_id": "sample_105", "code": "def f(var1):\n    if not var1.istitle():\n        return var1.title()\n    return var1.lower()\nassert f(\"PermissioN is GRANTed\") == ", "input": "\"PermissioN is GRANTed\"", "output": "'Permission Is Granted'"}
{"old_id": "sample_106", "code": "def f(var1):\n    count = len(var1)\n    for var2 in range(0, count):\n        var1.insert(var2, var1[var2]*2)\n    return var1\nassert f([2, 8, -2, 9, 3, 3]) == ", "input": "[2, 8, -2, 9, 3, 3]", "output": "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]"}
{"old_id": "sample_107", "code": "def f(var1):\n    var2 = []\n    for var3 in range(len(var1)):\n        if not var1[var3].isascii():\n            return False\n        elif var1[var3].isalnum():\n            var2.append(var1[var3].upper())\n        else:\n            var2.append(var1[var3])\n    return ''.join(var2)\nassert f(\"ua6hajq\") == ", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'"}
{"old_id": "sample_108", "code": "def f(var1):\n    var2 = len(var1) if type(var1) == list else 0\n    if type(var1) == dict:\n        var2 = len(var1.keys())\n    var3 = var2 if var2 > 0 else 0\n    return var3\nassert f(1) == ", "input": "1", "output": "0"}
{"old_id": "sample_109", "code": "def f(var1, var2, var3):\n    var1.insert(var2, var3)\n    return var1\nassert f([1, 0, 1, 1], 0, 9) == ", "input": "[1, 0, 1, 1], 0, 9", "output": "[9, 1, 0, 1, 1]"}
{"old_id": "sample_110", "code": "def f(var1):\n    var2 = ['']\n    var3 = ''\n    for var4 in var1:\n        if not var4.isspace():\n            var2.append(var3)\n            var3 = ''\n        else:\n            var3 += var4\n    return len(var2)\nassert f(\"       \") == ", "input": "\"       \"", "output": "1"}
{"old_id": "sample_111", "code": "def f(var1):\n    var2 = 0\n    var3 = 100\n    for var4 in var1.values():\n        if var4 > var2:\n            var2 = var4\n        if var4 < var3:\n            var3 = var4\n    return var2, var3\nassert f({'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}) == ", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)"}
{"old_id": "sample_112", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in var2:\n        if not var3.istitle():\n            var2.remove(var3)\n    return ''.join(var2)\nassert f('XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault') == ", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'"}
{"old_id": "sample_113", "code": "def f(var1):\n    count = 0\n    var2 = []\n    for var3 in range(len(var1)):\n        count += 1\n        if count%2==0:\n            var2.append(var1[var3].swapcase())\n        else:\n            var2.append(var1[var3])\n    return ''.join(var2)\nassert f(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\") == ", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'"}
{"old_id": "sample_116", "code": "def f(var1, count):\n    for var2 in range(count):\n        if var1 == {}:\n            break\n        var1.popitem()\n    return var1\nassert f({}, 200) == ", "input": "{}, 200", "output": "{}"}
{"old_id": "sample_117", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if var1.count('3') > 1:\n            return var2\n    return -1\nassert f(\"23157\") == ", "input": "\"23157\"", "output": "-1"}
{"old_id": "sample_118", "code": "def f(var1, var2):\n    var3 = 2\n    var4 = ''\n    for var5 in range(var3):\n        var4 += var2\n        var1 = var1.replace(var4, '')\n    return var1\nassert f('zbzquiuqnmfkx', 'mk') == ", "input": "'zbzquiuqnmfkx', 'mk'", "output": "'zbzquiuqnmfkx'"}
{"old_id": "sample_119", "code": "def f(var1):\n    var2 = \"\"\n    for var3 in range(len(var1)):\n        if var3 % 2 == 0:\n            var2 += var1[var3].swapcase()\n        else:\n            var2 += var1[var3]\n    return var2\nassert f(\"vsnlygltaw\") == ", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'"}
{"old_id": "sample_120", "code": "def f(var1):\n    var2 = dict()\n    for var3, var4 in var1.items():\n        if var4 not in var2:\n            var2[var4] = []\n        var2[var4].append(var3)\n    return var2\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_121", "code": "def f(var1):\n    var2 = ''.join(filter(lambda var3:var3.isdecimal(), var1))\n    if var2 == '': return 'none'\n    var4 = max([int(var5) for var5 in var2.split(',')])\n    return str(var4)\nassert f('01,001') == ", "input": "'01,001'", "output": "'1001'"}
{"old_id": "sample_122", "code": "def f(var1):\n    if var1[:4] != 'Nuva':\n        return 'no'\n    else:\n        return var1.rstrip()\nassert f('Nuva?dlfuyjys') == ", "input": "'Nuva?dlfuyjys'", "output": "'Nuva?dlfuyjys'"}
{"old_id": "sample_123", "code": "def f(var1, var2):\n    for var3, var4 in enumerate(var1):\n        if var4 > var2 and var1[var3 - 1] < var2:\n            var1.insert(var3, var2)\n    return var1\nassert f([1, 2, 3, 5, 8], 6) == ", "input": "[1, 2, 3, 5, 8], 6", "output": "[1, 2, 3, 5, 6, 8]"}
{"old_id": "sample_124", "code": "def f(var1, var2, var3):\n    var4 = ''\n    while var3 > 0 and var1.count(var2) > 0:\n        var4 += var1.rsplit(var2, 1)[0] + var2\n        var1 = var1.rsplit(var2, 1)[1]\n        var3 -= 1\n    return var4 + var1\nassert f('i like you', ' ', -1) == ", "input": "'i like you', ' ', -1", "output": "'i like you'"}
{"old_id": "sample_125", "code": "def f(var1, var2):\n    for var3 in '*\\n\"':\n        var1 = var1.replace(var3, '!' + str(var2))\n    if var1.startswith('!'):\n        var1 = var1[len(str(var2)):]\n    return var1\nassert f('\"Leap and the net will appear', 123) == ", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'"}
{"old_id": "sample_126", "code": "def f(var1):\n    var2 = var1.rpartition('o')\n    var3, var4 = (var2[0] == '' and '-' or var2[0]), (var2[2] == '' and '-' or var2[2])\n    return var2[1] + var3 + var2[1] + var4\nassert f('kkxkxxfck') == ", "input": "'kkxkxxfck'", "output": "'-kkxkxxfck'"}
{"old_id": "sample_127", "code": "def f(var1):\n    var2 = var1.splitlines()\n    return len(var2)\nassert f(\"145\\n\\n12fjkjg\") == ", "input": "\"145\\n\\n12fjkjg\"", "output": "3"}
{"old_id": "sample_128", "code": "def f(var1):\n    var2 = ''\n    var3 = ''\n    for var4, var5 in enumerate(var1):\n        if var4 % 2 == 0:\n            var3 += var5\n        else:\n            var2 += var5\n    return var3 + var2.lower()\nassert f('Mammoth') == ", "input": "'Mammoth'", "output": "'Mmohamt'"}
{"old_id": "sample_129", "code": "def f(var1, var2):\n    var3 = []\n    while var2 in var1:\n        var3.append(var1.rindex(var2))\n        var1 = var1[:var1.rindex(var2)]\n    return var3\nassert f('ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ', 'J') == ", "input": "'ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ', 'J'", "output": "[28, 19, 12, 6]"}
{"old_id": "sample_130", "code": "def f(var1):\n    items = list(var1.items())\n    for var2 in range(len(items)-2, -1, -1):\n        var3 = items[var2]\n        items[var2] = items[var2+1] \n        items[var2+1] = var3\n    return ['{}={}', '{1}={0}'][len(items) % 2].format(\n        *var1.keys(), **var1\n    )\nassert f({'l':4, 'h':6, 'o':9}) == ", "input": "{'l':4, 'h':6, 'o':9}", "output": "'h=l'"}
{"old_id": "sample_131", "code": "def f(var1):\n    var2 = len(var1)\n    count = 0\n    while var1:\n        if var1.startswith('a'):\n            count += var1.find(' ')\n        else:\n            count += var1.find('\\n')\n        var1 = var1[var1.find('\\n')+1:var1.find('\\n')+var2+1]\n    return count\nassert f(\"a\\nkgf\\nasd\\n\") == ", "input": "\"a\\nkgf\\nasd\\n\"", "output": "1"}
{"old_id": "sample_132", "code": "def f(var1, var2):\n    if var1.removeprefix(var2):\n        return var1\n    else:\n        return var2 + var1\nassert f('abc', 'abcd') == ", "input": "'abc', 'abcd'", "output": "'abc'"}
{"old_id": "sample_133", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in range(len(var2)):\n        var3.append(var1.pop())\n    return var1\nassert f([7, 1, 2, 6, 0, 2], [9, 0, 3]) == ", "input": "[7, 1, 2, 6, 0, 2], [9, 0, 3]", "output": "[7, 1, 2]"}
{"old_id": "sample_134", "code": "def f(var1):\n    var2 = 0\n    var3 = ''\n    var4 = list(map(int, str(var1)))\n    for var5 in var4:\n        if var5 == 0: var2 += 1\n        else: break\n    for var6 in range(var2):\n        var3 += str(1) + '0' + str(4)\n    var3 += str(var1)\n    return var3\nassert f(372359) == ", "input": "372359", "output": "'372359'"}
{"old_id": "sample_135", "code": "def f():\n    var1 = {\n        'Russia': [('Moscow', 'Russia'), ('Vladivostok', 'Russia')],\n        'Kazakhstan': [('Astana', 'Kazakhstan')],\n    }\n    return list(var1.keys())\nassert f() == ", "input": "", "output": "['Russia', 'Kazakhstan']"}
{"old_id": "sample_136", "code": "def f(var1, var2):\n    var3 = [var4.center(var2) for var4 in var1.split('\\n')]\n    return '\\n'.join(var3)\nassert f(\"a\\nbc\\n\\nd\\nef\", 5) == ", "input": "\"a\\nbc\\n\\nd\\nef\", 5", "output": "'  a  \\n  bc \\n     \\n  d  \\n  ef '"}
{"old_id": "sample_137", "code": "def f(var1):\n    count = 0\n    for var2 in range(len(var1)):\n        if len(var1) == 0:\n            break\n        if count % 2 == 0:\n            var1.pop()\n        else:\n            var1.pop(0)\n        count += 1\n    return var1\nassert f([3, 2, 0, 0, 2, 3]) == ", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]"}
{"old_id": "sample_138", "code": "def f(var1, var2):\n    var3 = list(var2)\n    var4 = var3.pop()\n    for var5 in var3:\n        var1 = var1[0:var1.find(var5)]+var5+var1[var1.find(var5)+1:]\n    return var1\nassert f('tflb omn rtt', 'm') == ", "input": "'tflb omn rtt', 'm'", "output": "'tflb omn rtt'"}
{"old_id": "sample_139", "code": "def f(var1, var2):\n    if len(var1) < 10 or len(var2) < 10:\n        return 'no'\n    for var3 in range(5):\n        if var1[var3] != var2[var3]:\n            return 'no'\n    var1.extend(var2)\n    return var1\nassert f([1, 2, 1], [1, 1, 2]) == ", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'"}
{"old_id": "sample_140", "code": "def f(var1):\n    if var1.lower().rindex('h', var1.lower().rindex('i')) >= var1.lower().rindex('i'):\n        return 'Hey'\n    else:\n        return 'Hi'\nassert f('Hi there') == ", "input": "'Hi there'", "output": "'Hey'"}
{"old_id": "sample_141", "code": "def f(var1):\n    return [var1.count(var2) for var2 in var1]\nassert f(['k', 'x', 'c', 'x', 'x', 'b', 'l', 'f', 'r', 'n', 'g']) == ", "input": "['k', 'x', 'c', 'x', 'x', 'b', 'l', 'f', 'r', 'n', 'g']", "output": "[1, 3, 1, 3, 3, 1, 1, 1, 1, 1, 1]"}
{"old_id": "sample_142", "code": "def f(var1):\n    if var1.islower():\n        return var1\n    else:\n        return var1[::-1]\nassert f('ykdfhp') == ", "input": "'ykdfhp'", "output": "'ykdfhp'"}
{"old_id": "sample_143", "code": "def f(var1, var2):\n    return var1.casefold() == var2.casefold()\nassert f(\"daaX\", \"daaX\") == ", "input": "\"daaX\", \"daaX\"", "output": "True"}
{"old_id": "sample_144", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        var3.sort()\n        var2.append(var3)\n    return var2\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_145", "code": "def f(var1, var2):\n    var3 = ['olives', 'key', 'orange']\n    if var2 not in var3:\n        return var1\n    else:\n        var1 *=.85\n        var3.remove(var2)\n    return var1\nassert f(8.50, 'grapes') == ", "input": "8.50, 'grapes'", "output": "8.5"}
{"old_id": "sample_146", "code": "def f(var1):\n    var2 = []\n    for var3 in range(1, 11):\n        if var3 != var1:\n            var2.append(var3)\n    return var2\nassert f(5) == ", "input": "5", "output": "[1, 2, 3, 4, 6, 7, 8, 9, 10]"}
{"old_id": "sample_147", "code": "def f(var1):\n    var2 = len(var1)//2\n    return var1[var2:] + var1[0:var2]\nassert f([1, 1, 1]) == ", "input": "[1, 1, 1]", "output": "[1, 1, 1]"}
{"old_id": "sample_148", "code": "def f(var1, var2):\n    index = var1.index(var2)\n    var3 = list(var1)\n    while index < len(var1)-1:\n        var3[index] = var1[index+1]\n        index += 1\n    if index == len(var1)-1:\n        var3[index] = '-'\n    return ''.join(var3)\nassert f('2imo 12 tfiqr.', 'm') == ", "input": "'2imo 12 tfiqr.', 'm'", "output": "'2io 12 tfiqr.-'"}
{"old_id": "sample_149", "code": "def f(var1, var2):\n    var3 = ''\n    for var4 in var1:\n        var3 += dict.fromkeys(str(var4), var2 * len(str(var4))).popitem()[0] + var2\n    return var3\nassert f((32332, 23543, 132323, 33300), ',') == ", "input": "(32332, 23543, 132323, 33300), ','", "output": "'2,4,2,0,'"}
{"old_id": "sample_150", "code": "def f(var1, index):\n    for var2 in var1[index:]:\n        var1.insert(index, var2)\n        index += 1\n    return var1[:index]\nassert f([-2, 4, -4], 0) == ", "input": "[-2, 4, -4], 0", "output": "[-2, 4, -4]"}
{"old_id": "sample_151", "code": "def f(var1):\n    for var2 in var1:\n        if var2.isdigit():\n            if var2 == '0':\n                var2 = '.'\n            else:\n                var2 = '0' if var2 != '1' else '.'\n    return ''.join(list(var1)).replace('.', '0')\nassert f('697 this is the ultimate 7 address to attack') == ", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'"}
{"old_id": "sample_152", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1:\n        if var3.isupper():\n            var2 += 1\n    return var2\nassert f(''.join(['A'] * 20)) == ", "input": "''.join(['A'] * 20)", "output": "20"}
{"old_id": "sample_153", "code": "def f(var1, var2, var3):\n    var4 = str(var3)\n    return var1.endswith(var2 + var4)\nassert f('friends and love', 'and', 3) == ", "input": "'friends and love', 'and', 3", "output": "False"}
{"old_id": "sample_154", "code": "def f(var1, var2):\n    var1 = var1.split(' ')\n    return ((var2 + \"  \") + (\"  \".join(var1[::-1])))\nassert f('Hello There', '*') == ", "input": "'Hello There', '*'", "output": "'*  There  Hello'"}
{"old_id": "sample_155", "code": "def f(var1, var2):\n    var3 = 0\n    var4 = ''\n    for var5 in var1:\n        if var3 == var2:\n            var4 += '\\n'\n            var3 = 0\n        var3 += 1\n        var4 += var5\n    return var4\nassert f(\"dskjs hjcdjnxhjicnn\", 4) == ", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'"}
{"old_id": "sample_156", "code": "def f(var1, var2, var3):\n    if var2 < len(var1):\n        return var1[0:var2]\n    return var1.ljust(var2, var3)\nassert f('tqzym', 5, 'c') == ", "input": "'tqzym', 5, 'c'", "output": "'tqzym'"}
{"old_id": "sample_157", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1.split():\n        for var4 in var3:\n            if var4 == \"0\":\n                var2 += 1\n    return var2\nassert f(\"aboba 212 has 0 digits\") == ", "input": "\"aboba 212 has 0 digits\"", "output": "1"}
{"old_id": "sample_158", "code": "def f(var1):\n    var2 = [var3 for var3 in var1 if var3%2 == 0]\n    var4 = var2+var1\n    for var5 in var4:\n        if var4.index(var5) >= len(var2):\n            var4.remove(var5)\n    return var4\nassert f([3, 6, 4, -2, 5]) == ", "input": "[3, 6, 4, -2, 5]", "output": "[6, 4, -2, 6, 4, -2]"}
{"old_id": "sample_159", "code": "def f(var1):\n    var2 = ''\n    for var3 in reversed(var1):\n        var2 += var3.swapcase()\n    return var2\nassert f('RTiGM') == ", "input": "'RTiGM'", "output": "'mgItr'"}
{"old_id": "sample_160", "code": "def f(var1):\n    while not var1.get(1, len(var1)):\n        var1.clear()\n        break\n    return var1\nassert f({1: 47698, 1: 32849, 1: 38381, 3: 83607}) == ", "input": "{1: 47698, 1: 32849, 1: 38381, 3: 83607}", "output": "{1: 38381, 3: 83607}"}
{"old_id": "sample_161", "code": "def f(var1, var2):\n    var3, var4, var5 = var1.partition(var2)\n    return var5 + var3\nassert f('difkj rinpx', 'k') == ", "input": "'difkj rinpx', 'k'", "output": "'j rinpxdif'"}
{"old_id": "sample_162", "code": "def f(var1):\n    var2 = ''\n    for var3 in var1:\n        if var3.isalnum():\n            var2 += var3.upper()\n    return var2\nassert f('с bishop.Swift') == ", "input": "'с bishop.Swift'", "output": "'СBISHOPSWIFT'"}
{"old_id": "sample_163", "code": "def f(var1, var2, var3):\n    var4 = ''.join(var2 for var5 in range(var3-len(var1)))\n    return var1 + var4\nassert f('w', '))', 7) == ", "input": "'w', '))', 7", "output": "'w))))))))))))'"}
{"old_id": "sample_164", "code": "def f(var1):\n    var1.sort()\n    return var1[0:3]\nassert f([5, 8, 1, 3, 0]) == ", "input": "[5, 8, 1, 3, 0]", "output": "[0, 1, 3]"}
{"old_id": "sample_165", "code": "def f(var1, lower, upper):\n    return var1[lower:upper].isascii()\nassert f('=xtanp|sugv?z', 3, 6) == ", "input": "'=xtanp|sugv?z', 3, 6", "output": "True"}
{"old_id": "sample_166", "code": "def f(var1):\n    var2 = {}\n    for var3, var4 in var1.items():\n        var2[var3] = {}\n        for var5 in var4:\n            var2[var3][var5] = ''\n    return var2\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_167", "code": "def f(var1, var2):\n    count = 0\n    var3 = -1\n    while var1.find('XXXX', var3+1) != -1:\n        var3 = var1.find('XXXX', var3+1) \n        count += 1 \n    var4 = count * var2.title()\n    return var1.replace('XXXX', var4)\nassert f('aaXXXXbbXXXXccXXXXde', 'QW') == ", "input": "'aaXXXXbbXXXXccXXXXde', 'QW'", "output": "'aaQwQwQwbbQwQwQwccQwQwQwde'"}
{"old_id": "sample_168", "code": "def f(var1, var2, index):\n    var3 = var1.maketrans(var1[index], var2)\n    return var1.translate(var3)\nassert f('spain', 'b', 4) == ", "input": "'spain', 'b', 4", "output": "'spaib'"}
{"old_id": "sample_169", "code": "def f(var1):\n    var2 = list(var1)\n    var3 = (len(var1) - 1) * 2\n    for var4 in range(1, var3+1):\n        if var4 % 2:\n            var2.append('+')\n        else:\n            var2.insert(0, '+')\n    return ''.join(var2).rjust(var3)\nassert f('taole') == ", "input": "'taole'", "output": "'++++taole++++'"}
{"old_id": "sample_170", "code": "def f(var1, var2):\n    return var1.count(var2)\nassert f([12, 0, 13, 4, 12], 12) == ", "input": "[12, 0, 13, 4, 12], 12", "output": "2"}
{"old_id": "sample_171", "code": "def f(var1):\n    count = len(var1) // 2\n    for var2 in range(count):\n        var1.pop(0)\n    return var1\nassert f([3, 4, 1, 2, 3]) == ", "input": "[3, 4, 1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_172", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if var1[var2] < 0:\n            var1.pop(var2)\n    return var1\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_173", "code": "def f(var1):\n    var2 = len(var1)\n    var3 = []\n    for var4 in range(var2):\n        var3.append(var1.pop())\n    return var3\nassert f([5, 8, 6, 8, 4]) == ", "input": "[5, 8, 6, 8, 4]", "output": "[4, 8, 6, 8, 5]"}
{"old_id": "sample_174", "code": "def f(var1):\n    var1[1:4] = var1[1:4][::-1]\n    return var1\nassert f([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 3, 2]"}
{"old_id": "sample_175", "code": "def f(var1, var2):\n    var3 = var1.splitlines()\n    var4 = max(map(lambda var5: var5.rfind(' '), var3))\n    var6 = [[var5, (var4 + 1) * var2 - var5.rfind(' ')] for var5 in var3]\n    for var7, var8 in enumerate(var6):\n        var6[var7][0] = var8[0] + ' ' * var8[1]\n    return '\\n'.join(map(lambda var5: var5[0], var6))\nassert f('\\n', 2) == ", "input": "'\\n', 2", "output": "' '"}
{"old_id": "sample_176", "code": "def f(var1, var2):\n    var3 = var1[:var1.find(var2, 0) + 1]\n    var4 = var1[var1.find(var2, 0) + 1:]\n    return var3 + var4\nassert f('some text', 'some') == ", "input": "'some text', 'some'", "output": "'some text'"}
{"old_id": "sample_177", "code": "def f(var1):\n    var1 = list(var1)\n    for var2 in range(len(var1)):\n        if var2 % 2 == 1:\n            var1[var2] = var1[var2].swapcase()\n    return ''.join(var1)\nassert f('Hey DUdE THis $nd^ &*&this@#') == ", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'"}
{"old_id": "sample_178", "code": "def f(var1, var2):\n    return var1[var2:]\nassert f([0, 0, 1, 2, 2, 2, 2], 4) == ", "input": "[0, 0, 1, 2, 2, 2, 2], 4", "output": "[2, 2, 2]"}
{"old_id": "sample_179", "code": "def f(var1):\n    # var2 in var3 copy var4 var5 var6 var1\n    var1 = var1[:]\n    count = len(var1)\n    for var7 in range(-count+1, 0):\n        var1.insert(0, var1[var7])\n    return var1\nassert f([7, 1, 2, 6, 0, 2]) == ", "input": "[7, 1, 2, 6, 0, 2]", "output": "[2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2]"}
{"old_id": "sample_180", "code": "def f(var1):\n    var2 = -1\n    var3 = var1[1:]\n    while var2 <= var3[0]:\n        var1.remove(var3[0])\n        var2 = 0\n        var3 = var3[1:]\n    return var1\nassert f([-1, 5, 3, -2, -6, 8, 8]) == ", "input": "[-1, 5, 3, -2, -6, 8, 8]", "output": "[-1, -2, -6, 8, 8]"}
{"old_id": "sample_181", "code": "def f(var1):\n    count = 0\n    var2 = \"\"\n    for var3 in var1:\n        if var3.isdigit():\n            count += 1\n            var2 += var3\n    return [var2, count]\nassert f(\"qwfasgahh329kn12a23\") == ", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]"}
{"old_id": "sample_182", "code": "def f(var1):\n    return sorted(var1.items(), key=lambda var2: var2[0])\nassert f({'b': 1, 'a': 2}) == ", "input": "{'b': 1, 'a': 2}", "output": "[('a', 2), ('b', 1)]"}
{"old_id": "sample_183", "code": "def f(var1):\n    var2 = var1.split()\n    var3 = \" \".join(var2[::3]).splitlines()\n    var4 = []\n    for var5 in range(2):\n        var6 = var2[1::3]\n        if 3 * var5 + 1 < len(var6):\n            var4.append(\" \".join(var6[3 * var5:3 * (var5 + 1)]))\n    return var3 + var4\nassert f(\"echo hello!!! nice!\") == ", "input": "\"echo hello!!! nice!\"", "output": "['echo']"}
{"old_id": "sample_184", "code": "def f(var1):\n    var1.reverse()\n    if len(var1) < 2:\n        return var1\n    for var2 in range(0, len(var1), 2):\n        var1[var2], var1[var2+1] = var1[var2+1], var1[var2]\n    return var1\nassert f([1,2]) == ", "input": "[1,2]", "output": "[1, 2]"}
{"old_id": "sample_185", "code": "def f(var1):\n    var2 = len(var1)\n    for var3 in range(1, var2//2 + 1):\n        var4 = var3 - 1\n        var5 = var2 - var3\n        while var4 < var5:\n            # var6 var7:\n            var1[var4], var1[var5] = var1[var5], var1[var4]\n            # update var4, var5:\n            var4 += 1\n            var5 -= 1\n    return var1\nassert f([16, 14, 12, 7, 9, 11]) == ", "input": "[16, 14, 12, 7, 9, 11]", "output": "[11, 14, 7, 12, 9, 16]"}
{"old_id": "sample_186", "code": "def f(var1):\n    return ' '.join(map(str.lstrip, var1.split()))\nassert f('pvtso') == ", "input": "'pvtso'", "output": "'pvtso'"}
{"old_id": "sample_187", "code": "def f(var1, index):\n    var2 = len(var1.items())\n    var3 = index % var2\n    var4 = var1.popitem()[1]\n    for var5 in range(var3):\n        var1.popitem()\n    return var4\nassert f({27:39}, 1) == ", "input": "{27:39}, 1", "output": "39"}
{"old_id": "sample_188", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        var4 = var3[:2]\n        if var4.startswith('a') or var4.startswith('p'):\n            var2.append(var4)\n\n    return var2\nassert f([\"a\", \"b\", \"car\", \"d\"]) == ", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']"}
{"old_id": "sample_190", "code": "def f(var1):\n    var2 = ''\n    for var3 in var1:\n        if(var3.islower()):\n            var2 += var3\n    return var2\nassert f('980jio80jic kld094398IIl ') == ", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'"}
{"old_id": "sample_191", "code": "def f(var1):\n    if var1.isupper():\n        return True\n    else:\n        return False\nassert f('Ohno') == ", "input": "'Ohno'", "output": "False"}
{"old_id": "sample_192", "code": "def f(var1, var2):\n    var3 = var1\n    while var1.endswith(var2):\n        var3 = var1[:-len(var2)]\n        var1 = var3\n    return var3\nassert f('!klcd!ma:ri', '!') == ", "input": "'!klcd!ma:ri', '!'", "output": "'!klcd!ma:ri'"}
{"old_id": "sample_193", "code": "def f(var1):\n    count = var1.count(':')\n    return var1.replace(':', '', count - 1)\nassert f('1::1') == ", "input": "'1::1'", "output": "'1:1'"}
{"old_id": "sample_194", "code": "def f(var1, var2):\n    var1.insert(var2, [])\n    return var1\nassert f([[5, 6, 2, 3], [1, 9, 5, 6]], 0) == ", "input": "[[5, 6, 2, 3], [1, 9, 5, 6]], 0", "output": "[[], [5, 6, 2, 3], [1, 9, 5, 6]]"}
{"old_id": "sample_195", "code": "def f(var1):\n    for var2 in ['acs', 'asp', 'scn']:\n        var1 = var1.removeprefix(var2) + ' '\n    return var1.removeprefix(' ')[:-1]\nassert f('ilfdoirwirmtoibsac') == ", "input": "'ilfdoirwirmtoibsac'", "output": "'ilfdoirwirmtoibsac  '"}
{"old_id": "sample_196", "code": "def f(var1):\n    var1 = var1.replace(' x', ' x.')\n    if var1.istitle(): return 'correct'\n    var1 = var1.replace(' x.', ' x')\n    return 'mixed'\nassert f(\"398 Is A Poor Year To Sow\") == ", "input": "\"398 Is A Poor Year To Sow\"", "output": "'correct'"}
{"old_id": "sample_198", "code": "def f(var1, var2):\n    return var1[::-1].strip(var2)[::-1]\nassert f('tcmfsmj', 'cfj') == ", "input": "'tcmfsmj', 'cfj'", "output": "'tcmfsm'"}
{"old_id": "sample_199", "code": "def f(str, var1):\n    var2 = var1 * (str.count(var1) + 1)\n    return str.removesuffix(var2)\nassert f('mnmnj krupa...##!@#!@#$$@##', '@') == ", "input": "'mnmnj krupa...##!@#!@#$$@##', '@'", "output": "'mnmnj krupa...##!@#!@#$$@##'"}
{"old_id": "sample_200", "code": "def f(var1, var2):\n    var3 = len(var1)\n    index = 0\n    while var3 > 0:\n        var2 = var1[index] + var2\n        var3 -= 1\n        index += 1\n    return var2\nassert f('jao mt', 'house') == ", "input": "'jao mt', 'house'", "output": "'tm oajhouse'"}
{"old_id": "sample_201", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if var3.isdigit():\n            var2.append(var3)\n    return ''.join(var2[::-1])\nassert f('--4yrw 251-//4 6p') == ", "input": "'--4yrw 251-//4 6p'", "output": "'641524'"}
{"old_id": "sample_202", "code": "def f(var1, list):\n    var1.extend(list)\n    [var2 for var2 in var1 if var2 % 2 == 0]\n    return [var2 for var2 in var1 if var2 >= 10]\nassert f([2, 15], [15, 1]) == ", "input": "[2, 15], [15, 1]", "output": "[15, 15]"}
{"old_id": "sample_203", "code": "def f(var1):\n    var1.clear()\n    return var1\nassert f({'a': 3, 'b': -1, 'c': 'Dum'}) == ", "input": "{'a': 3, 'b': -1, 'c': 'Dum'}", "output": "{}"}
{"old_id": "sample_204", "code": "def f(var1):\n    return [var1[0], var1[1][::-1][0]]\nassert f(\"master. \") == ", "input": "\"master. \"", "output": "['m', 'a']"}
{"old_id": "sample_205", "code": "def f(var1):\n    for var2 in range(10):\n        for var3 in range(len(var1)):\n            if var1[var3] != '#':\n                var1 = var1[var3:]\n                break\n        else:\n            var1 = \"\"\n            break\n    while var1[-1] == '#':\n        var1 = var1[:-1]\n    return var1\nassert f(\"##fiu##nk#he###wumun##\") == ", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'"}
{"old_id": "sample_206", "code": "def f(var1):\n    return ' '.join(var1.split())\nassert f(' h e l l o   w o r l d! ') == ", "input": "' h e l l o   w o r l d! '", "output": "'h e l l o w o r l d!'"}
{"old_id": "sample_207", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        var2.update(var3)\n    return var2\nassert f([{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]) == ", "input": "[{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]", "output": "{'brown': 2, 'blue': 5, 'bright': 4}"}
{"old_id": "sample_208", "code": "def f(items):\n    var1 = []\n    for var2 in items:\n        for var3 in var2:\n            if not var3.isdigit():\n                var1.append(var3)\n    return var1\nassert f(['123', 'cat', 'd dee']) == ", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']"}
{"old_id": "sample_209", "code": "def f(var1, var2):\n    return str.removeprefix(var1, var2)\nassert f('hymi', 'hymifulhxhzpnyihyf') == ", "input": "'hymi', 'hymifulhxhzpnyihyf'", "output": "'hymi'"}
{"old_id": "sample_210", "code": "def f(var1, var2, var3):\n    var4 = list(range(var1, var2+1))\n    var5 = 0\n    while True:\n        var5 = (var5 + var3) % len(var4)\n        if var4[var5] % 2 == 0:\n            return var4[var5]\nassert f(46, 48, 21) == ", "input": "46, 48, 21", "output": "46"}
{"old_id": "sample_211", "code": "def f(var1):\n    count = 0\n    for var2 in var1:\n        if var1.rindex(var2) != var1.index(var2):\n            count+=1\n    return count\nassert f(\"abca dea ead\") == ", "input": "\"abca dea ead\"", "output": "10"}
{"old_id": "sample_212", "code": "def f(var1):\n    for var2 in range(len(var1) - 1):\n        var1.reverse()\n    return var1\nassert f([1, -9, 7, 2, 6, -3, 3]) == ", "input": "[1, -9, 7, 2, 6, -3, 3]", "output": "[1, -9, 7, 2, 6, -3, 3]"}
{"old_id": "sample_213", "code": "def f(var1):\n    return var1.replace('(', '[').replace(')', ']')\nassert f(\"(ac)\") == ", "input": "\"(ac)\"", "output": "'[ac]'"}
{"old_id": "sample_214", "code": "def f(var1):\n    var2 = -1\n    while var1.find('/', var2+1) != -1:\n        var2 = var1.find('/', var2+1)\n    return var1.rindex('/', 0, var2)\nassert f('present/here/car%2Fwe') == ", "input": "'present/here/car%2Fwe'", "output": "7"}
{"old_id": "sample_215", "code": "def f(var1):\n    var2 = var1\n    while len(var1) > 1 and var1[0] == var1[-1]:\n        var2 = var1 = var1[1:-1]\n    return var2\nassert f(')') == ", "input": "')'", "output": "')'"}
{"old_id": "sample_216", "code": "def f(var1):\n    count = 0\n    for var2 in var1:\n        if var2.isdigit():\n            count += 1\n    return count\nassert f(\"dp ef1 gh2\") == ", "input": "\"dp ef1 gh2\"", "output": "2"}
{"old_id": "sample_217", "code": "def f(var1):\n    if var1.isalnum():\n        return \"ascii encoded is allowed for this language\"\n    return \"more than ASCII\"\nassert f('Str zahrnuje anglo-ameriæske vasi piscina and kuca!') == ", "input": "'Str zahrnuje anglo-ameriæske vasi piscina and kuca!'", "output": "'more than ASCII'"}
{"old_id": "sample_218", "code": "def f(var1, var2):\n    var3 = var1.count(var2)\n    return((var1+var2) * var3)[::-1]\nassert f('caabcfcabfc', 'ab') == ", "input": "'caabcfcabfc', 'ab'", "output": "'bacfbacfcbaacbacfbacfcbaac'"}
{"old_id": "sample_219", "code": "def f(var1, var2):\n    for var3 in range(0, len(var2)+len(var1)):\n        var1 += var1[0]\n        if var1.find(var2) >= 0:\n            return True\n    return False\nassert f(\"Hello\", \")\") == ", "input": "\"Hello\", \")\"", "output": "False"}
{"old_id": "sample_220", "code": "def f(var1, var2, var3):\n    var1 = \"{}{}{}\".format(var1, var1[:var2], var1[var3:])\n    var4 = \"\"\n    for var5 in range(var3, len(var1)-var2):\n        var4 = var1[var5] + var4\n    return var4\nassert f(\"abcdefgabc\", 1, 2) == ", "input": "\"abcdefgabc\", 1, 2", "output": "'bagfedcacbagfedc'"}
{"old_id": "sample_221", "code": "def f(var1, var2):\n    var3, var4 = var1.split(var2)\n    return var4 + var2 + var3\nassert f('bpxa24fc5.', '.') == ", "input": "'bpxa24fc5.', '.'", "output": "'.bpxa24fc5'"}
{"old_id": "sample_222", "code": "def f(var1, var2):\n    while var1.find(var2, var1.rindex(var2) + 1) != -1:\n        var1 = var1[:var1.rindex(var2) + 1] + var1[var1.rindex(var2) + 2:]\n    return var1\nassert f('0aabbaa0b', 'a') == ", "input": "'0aabbaa0b', 'a'", "output": "'0aabbaa0b'"}
{"old_id": "sample_223", "code": "def f(var1, var2):\n    count, var3 = 0, 1\n    for var4 in range(1, len(var1)):\n        if ((var1[var4] > var1[var4-1]) and (var1[var4] <= var2)): count += var3\n        elif var1[var4] <= var1[var4-1]: var3 = 1\n        else: var3 += 1\n    return count\nassert f([1, 2, -1, 4], 2) == ", "input": "[1, 2, -1, 4], 2", "output": "1"}
{"old_id": "sample_224", "code": "def f(var1, var2):\n    var1.reverse()\n    var1.pop()\n    var3 = []\n    while len(var1) > 0:\n        var4 = {}\n        var4[var1.pop()] = var2\n        var3.append(var4)\n    var5 = {}\n    while len(var3) > 0:\n        var5.update(var3.pop())\n    return var5\nassert f(['23'], 123) == ", "input": "['23'], 123", "output": "{}"}
{"old_id": "sample_225", "code": "def f(var1):\n    if var1.islower():\n        return True\n    return False\nassert f(\"54882\") == ", "input": "\"54882\"", "output": "False"}
{"old_id": "sample_226", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if var1[var2] % 3 == 0:\n            var1.append(var1[var2])\n    return var1\nassert f([1, 3]) == ", "input": "[1, 3]", "output": "[1, 3, 3]"}
{"old_id": "sample_227", "code": "def f(var1):\n    var1 = var1.lower()\n    var2, var3 = var1[0], var1[1:]\n    return var2.upper() + var3\nassert f('Manolo') == ", "input": "'Manolo'", "output": "'Manolo'"}
{"old_id": "sample_228", "code": "def f(var1, var2):\n    return var2.join(var1.lower().split())\nassert f('LlTHH sAfLAPkPhtsWP', '#') == ", "input": "'LlTHH sAfLAPkPhtsWP', '#'", "output": "'llthh#saflapkphtswp'"}
{"old_id": "sample_229", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in var1:\n        var3.append(var4[0])\n        if var4[1] == var2:\n            var3.reverse()\n        else:\n            var3.append(var4[1])\n    return var3\nassert f({'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1) == ", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']"}
{"old_id": "sample_230", "code": "def f(var1):\n    var2 = ''\n    var3 = len(var1)-1\n    while var3 >= 0:\n        var4 = var1[var3]\n        if var4.isalpha():\n            var2 += var4\n        var3 -= 1\n    return var2\nassert f('102x0zoq') == ", "input": "'102x0zoq'", "output": "'qozx'"}
{"old_id": "sample_231", "code": "def f(var1):\n    var2 = sum(1 for var3 in var1 if var3 <= 1900)\n    var4 = sum(1 for var3 in var1 if var3 > 1910)\n    if var2 > 3:\n        return 3\n    elif var4 > 3:\n        return 1\n    else:\n        return 2\nassert f([1872, 1995, 1945]) == ", "input": "[1872, 1995, 1945]", "output": "2"}
{"old_id": "sample_232", "code": "def f(var1, var2):\n    var3 = ''\n    count = 0\n    var2 = list(var2)\n    for var4 in var1:\n        var3 += var4 if var4 in 'e' else var2[count % len(var2)]\n        count += (1 if var4 not in 'e' else 0)\n    return var3\nassert f('fssnvd', 'yes') == ", "input": "'fssnvd', 'yes'", "output": "'yesyes'"}
{"old_id": "sample_233", "code": "def f(var1):\n    for var2 in reversed(range(-len(var1)-1, -1)):\n        var1.insert(var2, var1.pop(0))\n    return var1\nassert f([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_234", "code": "def f(var1, var2):\n    var3 = len(var1)\n    if var2 in var1:\n        var3 = var1.index(var2)\n        if var3 > 1:\n            var3 = (var3 + 1) % len(var1)\n    return var3\nassert f('wduhzxlfk', 'w') == ", "input": "'wduhzxlfk', 'w'", "output": "0"}
{"old_id": "sample_235", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in var2:\n        var3 += list(filter(lambda var5: var5 != '', var4.split(var2[var1.index(var4)])))\n    return var3\nassert f([], []) == ", "input": "[], []", "output": "[]"}
{"old_id": "sample_236", "code": "def f(var1):\n    if len(var1) == 1:\n        return ''.join(var1)\n    var2 = list(var1)\n    var3 = 0\n    while var3 < len(var1)-1:\n        for var4 in range(2):\n            var2[var3*2] = var1[var3]\n            var3 += 1\n    return ''.join(var2)\nassert f(['ac8', 'qk6', '9wg']) == ", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'"}
{"old_id": "sample_237", "code": "def f(var1, var2):\n    if var2 in var1:\n        var3, var2, var4 = var1.partition(var2)\n        var4 = var3[:-len(var2)] + var3[len(var2):] + var2 + var4\n        return var3 + var2 + var4\n    return var1\nassert f('uzlwaqiaj', 'u') == ", "input": "'uzlwaqiaj', 'u'", "output": "'uuzlwaqiaj'"}
{"old_id": "sample_238", "code": "def f(var1, var2):\n    var3 = 0\n    for var4 in var1:\n        if var4[0] == var2:\n            var3 = var4\n    return var3\nassert f([[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1) == ", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]"}
{"old_id": "sample_239", "code": "def f(var1, var2):\n    var1 = var1.lstrip(var2)\n    var1 = var1.rstrip(var2)\n    return var1\nassert f('0 t 1cos ', 'st ' + '0\\t\\n  ') == ", "input": "'0 t 1cos ', 'st ' + '0\\t\\n  '", "output": "'1co'"}
{"old_id": "sample_240", "code": "def f(var1):\n    var2 = str(var1)\n    var3 = var2.find('.')\n    if var3 != -1:\n        return var2[:var3] + '.' + var2[var3+1:].ljust(2, '0')\n    return var2 + '.00'\nassert f(3.121) == ", "input": "3.121", "output": "'3.121'"}
{"old_id": "sample_241", "code": "def f(var1):\n    return var1[var1.index('C'):]\nassert f('ED20 CW') == ", "input": "'ED20 CW'", "output": "'CW'"}
{"old_id": "sample_242", "code": "def f(var1):\n    var2 = var1.rsplit(':', 1)\n    if var2[0].split(' ')[-1] == var2[1].split(' ')[0]:\n        return f(' '.join(var2[0].split(' ')[:-1]) + ' ' + var2[1])\n    return var1\nassert f(\"udhv zcvi nhtnfyd :erwuyawa pun\") == ", "input": "\"udhv zcvi nhtnfyd :erwuyawa pun\"", "output": "'udhv zcvi nhtnfyd :erwuyawa pun'"}
{"old_id": "sample_243", "code": "def f(var1, var2):\n    return var2.islower() and var1.islower()\nassert f('abc', 'e') == ", "input": "'abc', 'e'", "output": "True"}
{"old_id": "sample_244", "code": "def f(var1, var2):\n    count = 0\n    if var2:\n        for var3 in var2:\n            count += 1\n        var1 = var1 * count\n    return var1.rjust(len(var1) + count*2)[:-2]\nassert f('', 'BC1ty') == ", "input": "'', 'BC1ty'", "output": "'        '"}
{"old_id": "sample_245", "code": "def f(var1, var2):\n    var3 = [var4 for var4 in var1 if var4.upper() in var2]\n    if var2.upper() == var2:\n        var3.append('all_uppercased')\n    return var3\nassert f('abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\") == ", "input": "'abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\"", "output": "[]"}
{"old_id": "sample_246", "code": "def f(var1, var2):\n    for var3 in range(var1.find(var2), -1, -1):\n        if var1[var3:] == var2:\n            return var3\n    return -1\nassert f(\"345gerghjehg\", \"345\") == ", "input": "\"345gerghjehg\", \"345\"", "output": "-1"}
{"old_id": "sample_247", "code": "def f(var1):\n    if var1.isalpha():\n        return \"yes\"\n    if var1 == \"\":\n        return \"str is empty\"\n    return \"no\"\nassert f('Boolean') == ", "input": "'Boolean'", "output": "'yes'"}
{"old_id": "sample_248", "code": "def f(var1, var2):\n    var1.sort()\n    var2.sort(reverse=True)\n    return var1 + var2\nassert f([666], []) == ", "input": "[666], []", "output": "[666]"}
{"old_id": "sample_249", "code": "def f(var1):\n    count = {}\n    for var2 in var1:\n        if var2.islower():\n            count[var2.lower()] = var1.count(var2.lower()) + count.get(var2.lower(), 0)\n        else:\n            count[var2.lower()] = var1.count(var2.upper()) + count.get(var2.lower(), 0)\n    return count\nassert f(\"FSA\") == ", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}"}
{"old_id": "sample_250", "code": "def f(var1):\n    count = len(var1)\n    for var2 in range(-count+1, 0):\n        var1 = var1 + var1[var2]\n    return var1\nassert f('wlace A') == ", "input": "'wlace A'", "output": "'wlace Alc l  '"}
{"old_id": "sample_251", "code": "def f(var1):\n    var2 = \"+353\"\n    var3 = []\n    for var4 in var1:\n        var4.extend(var2)\n        var3.append(\";\".join(var4))\n    return \". \".join(var3)\nassert f([['Marie','Nelson','Oscar']]) == ", "input": "[['Marie','Nelson','Oscar']]", "output": "'Marie;Nelson;Oscar;+;3;5;3'"}
{"old_id": "sample_252", "code": "def f(var1, var2):\n    if var2 in var1:\n        if not var1.startswith(var2):\n            var1 = var1.replace(var2,'')\n    return var1\nassert f('\\\\foo', '\\\\') == ", "input": "'\\\\foo', '\\\\'", "output": "'\\\\foo'"}
{"old_id": "sample_253", "code": "def f(var1, var2):\n    var3 = len(var2)\n    if var2 == var1[:var3]:\n        return var1[var3:]\n    return var1\nassert f('kumwwfv', 'k') == ", "input": "'kumwwfv', 'k'", "output": "'umwwfv'"}
{"old_id": "sample_254", "code": "def f(var1, var2):\n    var3 = str.maketrans(var1.lower(), var2.lower())\n    return var1.translate(var3)\nassert f('upper case', 'lower case') == ", "input": "'upper case', 'lower case'", "output": "'lwwer case'"}
{"old_id": "sample_255", "code": "def f(var1, var2, var3):\n    if var3 < 0:\n        var3 = -var3\n    if len(var1) > var3:\n        return var1[len(var1) - var3:]\n    return var1.rjust(var3, var2)\nassert f('no asw', 'j', 1) == ", "input": "'no asw', 'j', 1", "output": "'w'"}
{"old_id": "sample_256", "code": "def f(var1, var2):\n    var3 = 0\n    var4 = len(var1) - 1\n\n    while var3 <= var4:\n        var5 = (var3 + var4) // 2\n        if var1.rfind(var2) >= var5:\n            var3 = var5 + 1\n        else:\n            var4 = var5 - 1\n\n    return var3\nassert f('dorfunctions', '2') == ", "input": "'dorfunctions', '2'", "output": "0"}
{"old_id": "sample_257", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        var2.append(var3.splitlines())\n    return var2\nassert f(['Hello World\\n\"I am String\"']) == ", "input": "['Hello World\\n\"I am String\"']", "output": "[['Hello World', '\"I am String\"']]"}
{"old_id": "sample_258", "code": "var1 = [1, 2, 7, 8, 9]\nvar2 = [1, 2, 7, 9]\ndef f(var3, var4, var5, var6):\n    var3.insert(var5, var4)\n    for var7 in range(var5-1, 0, -var6):\n        var5 -= 1\n        var3.insert(var5, var3.pop(var3.index(var4)-1))\n    return var3\nassert f(var2[:], 3, 3, 2) == ", "input": "thigh_o_two[:], 3, 3, 2", "output": "[1, 2, 7, 3, 9]"}
{"old_id": "sample_259", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if var3.isupper():\n            var2.insert(len(var2) // 2, var3)\n    if len(var2) == 0:\n        var2 = ['-']\n    return ''.join(var2)\nassert f('String matching is a big part of RexEx library.') == ", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'"}
{"old_id": "sample_260", "code": "def f(var1, var2, var3):\n    var1[var2:var2+var3] = var1[var2:var2 + var3][::-1]\n    return var1\nassert f([1, 2, 3, 4, 5, 6], 4, 2) == ", "input": "[1, 2, 3, 4, 5, 6], 4, 2", "output": "[1, 2, 3, 4, 6, 5]"}
{"old_id": "sample_261", "code": "def f(var1, var2):\n    var3, var4 = [], []\n    for var5 in var1:\n        if var5 < var2:\n            var3.append(var5)\n        else:\n            var4.append(var5)\n    var3.clear()\n    return var3, var4\nassert f([12, 516, 5, 2, 3, 214, 51], 5) == ", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])"}
{"old_id": "sample_262", "code": "def f(var1):\n    count = len(var1)\n    var2 = {0: \"F\", 1: \"E\", 2: \"D\", 3: \"C\", 4: \"B\", 5: \"A\", 6: \"\"}\n    var3 = []\n    for var4 in range(count):\n        var3.append(var2.get(var1[var4]))\n    return ''.join(var3)\nassert f([4, 5]) == ", "input": "[4, 5]", "output": "'BA'"}
{"old_id": "sample_263", "code": "def f(var1, var2):\n    for var3 in range(len(var2)):\n        for var4 in range(len(var1)):\n            if var1[var4] == var2[var3][0]:\n                assert var2[var3][1] != var1[var4]\n                var1[var4] = var2[var3][1]\n    return var1\nassert f([\"gloss\", \"banana\", \"barn\", \"lawn\"], []) == ", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']"}
{"old_id": "sample_264", "code": "def f(var1):\n    var2 = var1.replace('a', 'A')\n    return var2.replace('e', 'A')\nassert f(\"papera\") == ", "input": "\"papera\"", "output": "'pApArA'"}
{"old_id": "sample_265", "code": "def f(var1, var2):\n    var3 = {}\n    for var4, var5 in var1.items():\n        if var4 < var2:\n            var3[var4] = var5\n    return var3\nassert f({1: 2, 2: 4, 3: 3}, 3) == ", "input": "{1: 2, 2: 4, 3: 3}, 3", "output": "{1: 2, 2: 4}"}
{"old_id": "sample_266", "code": "def f(var1):\n    for var2 in range(len(var1)-1, -1, -1):\n        if var1[var2] % 2 == 1:\n            var1.insert(var2+1, var1[var2])\n    return var1\nassert f([2, 3, 4, 6, -2]) == ", "input": "[2, 3, 4, 6, -2]", "output": "[2, 3, 3, 4, 6, -2]"}
{"old_id": "sample_267", "code": "def f(var1, var2):\n    if var2 < 0:\n        return var1\n    return var1.ljust(len(var1) // 2 + var2)\nassert f('sowpf', -7) == ", "input": "'sowpf', -7", "output": "'sowpf'"}
{"old_id": "sample_268", "code": "def f(var1, var2):\n    for var3 in range(len(var1)):\n        if var1[var3] == var2:\n            var4 = list(var1)\n            var4[var3] = '/'\n            return ' '.join(var4)\nassert f('h grateful k', ' ') == ", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'"}
{"old_id": "sample_269", "code": "def f(var1):\n    var2 = (len(var1) - 1) % 3\n    for var3 in range(var2):\n        var1[var3] = '0'\n    for var3 in range(var2 + 1, len(var1), 3):\n        var1[var3 - 1:var3 + 2] = ['0', '0', '0']\n    return var1\nassert f([9, 2]) == ", "input": "[9, 2]", "output": "['0', 2]"}
{"old_id": "sample_270", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        var2[var3] = var1.popitem(var4 = False)[1]\n    return var2\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_271", "code": "def f(var1, var2):\n    var3 = list(var1)\n    if var2 not in var1:\n        raise ValueError('Text has no {c}')\n    var3.pop(var1.rindex(var2))\n    return ''.join(var3)\nassert f('uufhl', 'l') == ", "input": "'uufhl', 'l'", "output": "'uufh'"}
{"old_id": "sample_272", "code": "def f(var1, var2):\n    var1.extend(var2)\n    var3 = var1.copy()\n    for var4 in range(-len(var2), 0):\n        var3.append(var3[var4])\n    return var3\nassert f([9, 7, 5, 3, 1], [2, 4, 6, 8, 0]) == ", "input": "[9, 7, 5, 3, 1], [2, 4, 6, 8, 0]", "output": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6]"}
{"old_id": "sample_273", "code": "def f(var1):\n    var2 =''\n    var1 = var1[::-1]\n    for var3 in range(len(var1)):\n        var4 = var1[var3]\n        if var4 !='.' and  var2.count('.')<2:\n            var2=var4+var2\n        else:\n            break\n    return var2\nassert f('.NET') == ", "input": "'.NET'", "output": "'NET'"}
{"old_id": "sample_274", "code": "def f(var1, var2):\n    count = 0\n    for var3 in var1:\n        for var4 in var1:\n            count += (var3+var4==var2)\n    return count\nassert f([1, 2, 3], 4) == ", "input": "[1, 2, 3], 4", "output": "3"}
{"old_id": "sample_275", "code": "def f(var1):\n    var2 = dict(zip(var1.values(), var1.keys()))\n    return var2\nassert f({-1: \"a\", 0: \"b\", 1: \"c\"}) == ", "input": "{-1: \"a\", 0: \"b\", 1: \"c\"}", "output": "{'a': -1, 'b': 0, 'c': 1}"}
{"old_id": "sample_276", "code": "def f(var1):\n    if len(var1) >= 2 and var1[0] > 0 and var1[1] > 0:\n        var1.reverse()\n        return var1\n    var1.append(0)\n    return var1\nassert f([]) == ", "input": "[]", "output": "[0]"}
{"old_id": "sample_277", "code": "def f(var1, var2):\n    var3 = [var4 for var4 in var1]\n    if var2:\n        var3.reverse()\n    return var3\nassert f([1, 2, 3, 4], 1) == ", "input": "[1, 2, 3, 4], 1", "output": "[4, 3, 2, 1]"}
{"old_id": "sample_278", "code": "def f(var1, var2):\n    var3 = dict.fromkeys(var1)\n    for var4 in var3:\n        var3[var4] = [var5 for var5 in var2 if var4 * 2 > var5]\n    return var3\nassert f([0, 132], [5, 991, 32, 997]) == ", "input": "[0, 132], [5, 991, 32, 997]", "output": "{0: [], 132: [5, 32]}"}
{"old_id": "sample_279", "code": "def f(var1):\n    var2 = ''\n    while var1 != '':\n        var3, var4, var1 = var1.partition('(')\n        var2 = var3 + var4.replace('(', '|') + var2\n        var2 = var2 + var1[0] + var2\n        var1 = var1[1:]\n    return var2\nassert f(\"\") == ", "input": "\"\"", "output": "''"}
{"old_id": "sample_280", "code": "var1 = 0\n\ndef f(var2):\n    global var3, var1\n    var1 = var2.replace(' ', '')\n    var3 = var2.replace('0', ' ')\n    var2 = var2.replace('1', 'i')\n\n    return var2\nassert f('00000000 00000000 01101100 01100101 01101110') == ", "input": "'00000000 00000000 01101100 01100101 01101110'", "output": "'00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0'"}
{"old_id": "sample_281", "code": "def f(var1, index, var2):\n    var1[index] = var2\n    if var2 >= 3:\n        var1.update({'message' : 'xcrWt'})\n    else: \n        del var1['message']\n    return var1\nassert f({1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2) == ", "input": "{1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2", "output": "{1: 2, 3: 4, 5: 6, 8: 2}"}
{"old_id": "sample_282", "code": "def f(var1, var2):\n    var3 = 1\n    count = 0\n    while var3 > 0:\n        var3 = var1.find(var2, var3)\n        count += 1\n        var3 += 1\n    return count\nassert f('xinyyexyxx', 'xx') == ", "input": "'xinyyexyxx', 'xx'", "output": "2"}
{"old_id": "sample_283", "code": "def f(var1, var2):\n    del var1[var2]\n    if min(var1) == var2:\n        var2 = list(var1)[0]\n    return var2\nassert f({'Iron Man': 4, 'Captain America': 3, 'Black Panther': 0,'Thor': 1, 'Ant-Man': 6}, 'Iron Man') == ", "input": "{'Iron Man': 4, 'Captain America': 3, 'Black Panther': 0,'Thor': 1, 'Ant-Man': 6}, 'Iron Man'", "output": "'Iron Man'"}
{"old_id": "sample_284", "code": "def f(var1, var2):\n    var3 = 0\n    for var4 in var2:\n        if var1[var3] != var4:\n            return None\n        var3 += 1\n    return var1[var3:]\nassert f('bestest', 'bestest') == ", "input": "'bestest', 'bestest'", "output": "''"}
{"old_id": "sample_285", "code": "def f(var1, var2):\n    \"\"\"Counting vowels in Pirates' Curse\"\"\"\n    return var1.count(var2)\nassert f(\"This be Pirate's Speak for 'help'!\", ' ') == ", "input": "\"This be Pirate's Speak for 'help'!\", ' '", "output": "5"}
{"old_id": "sample_286", "code": "def f(var1, var2, var3):\n    if var3 < -len(var1) or var3 > len(var1) - 1:\n        return 'no'\n    var4 = var1[var3]\n    var1[var3] = var2\n    return var1\nassert f([1,2,3,4,5,6,7,8,9,10], 11, 4) == ", "input": "[1,2,3,4,5,6,7,8,9,10], 11, 4", "output": "[1, 2, 3, 4, 11, 6, 7, 8, 9, 10]"}
{"old_id": "sample_287", "code": "def f(var1):\n    if var1.islower():\n        var1 = var1.upper()\n    else:\n        var1 = var1.lower()\n    return var1\nassert f('Pinneaple') == ", "input": "'Pinneaple'", "output": "'pinneaple'"}
{"old_id": "sample_288", "code": "def f(var1):\n    var2 = sorted(list(var1.items()), key=lambda var3: len(str(str(var3[0])+str(var3[1]))))\n    return [(var4, var5) for var4, var5 in var2 if var4 < var5]\n    return var6\nassert f({55: 4, 4: 555, 1: 3, 99: 21, 499: 4, 71: 7, 12: 6}) == ", "input": "{55: 4, 4: 555, 1: 3, 99: 21, 499: 4, 71: 7, 12: 6}", "output": "[(1, 3), (4, 555)]"}
{"old_id": "sample_289", "code": "def f(var1):\n    return \"{}: {}\".format(var1, var1.encode())\nassert f('148') == ", "input": "'148'", "output": "\"148: b'148'\""}
{"old_id": "sample_290", "code": "def f(var1, var2):\n    if var1.startswith(var2):\n        return var1.removeprefix(var2)\n    if var2 in var1:\n        return var1.replace(var2, '').strip()\n    return var1.upper()\nassert f('abixaaaily', 'al') == ", "input": "'abixaaaily', 'al'", "output": "'ABIXAAAILY'"}
{"old_id": "sample_291", "code": "def f(var1, var2):\n    var1.update({var2[0]: [var2[1]]})\n    if len(var1[var2[0]]) == var2[1]:\n        var1[var2[0]] = var2[0]\n    return var1\nassert f({}, ['a', 2]) == ", "input": "{}, ['a', 2]", "output": "{'a': [2]}"}
{"old_id": "sample_292", "code": "def f(var1):\n    var2 = [var3 if var3.isdigit() else '*' for var3 in var1]\n    return ''.join(var2)\nassert f('5f83u23saa') == ", "input": "'5f83u23saa'", "output": "'5*83*23***'"}
{"old_id": "sample_293", "code": "def f(var1):\n    var2 = var1.lower()\n    for var3 in range(len(var2)):\n        if var2[var3] == 'x':\n            return 'no'\n    return var1.isupper()\nassert f('dEXE') == ", "input": "'dEXE'", "output": "'no'"}
{"old_id": "sample_294", "code": "def f(var1, var2, var3):\n    if var3.strip() == '':\n        return var3\n    var4, var5, var6 = var3[0], var3[1:-1], var3[-1]\n    var7 = var4.replace(var1, var2) + var5.replace(var1, var2) + var6.replace(var1, var2)\n    return var7\nassert f(\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\") == ", "input": "\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\"", "output": "'2$z&5H3*1a@#a*1hris'"}
{"old_id": "sample_295", "code": "def f(var1):\n    if var1[-1] == var1[0]:\n        return 'no'\n    else:\n        var1.pop(0)\n        var1.pop()\n        var1.pop(0)\n        var1.pop()\n        return var1\nassert f(['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']) == ", "input": "['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']", "output": "['pear', 'banana', 'pear']"}
{"old_id": "sample_296", "code": "def f(var1):\n    return var1.removeprefix('http://www.')\nassert f(\"https://www.www.ekapusta.com/image/url\") == ", "input": "\"https://www.www.ekapusta.com/image/url\"", "output": "'https://www.www.ekapusta.com/image/url'"}
{"old_id": "sample_297", "code": "def f(var1):\n    if 0 < var1 < 1000 and var1 != 6174:\n        return 'Half Life'\n    return 'Not found'\nassert f(6173) == ", "input": "6173", "output": "'Not found'"}
{"old_id": "sample_298", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in range(len(var2)):\n        var4 = var2[var3]\n        var5 = var4.swapcase()\n        var2[var3] = var5\n    return ''.join(var2)\nassert f('dst vavf n dmv dfvm gamcu dgcvb.') == ", "input": "'dst vavf n dmv dfvm gamcu dgcvb.'", "output": "'DST VAVF N DMV DFVM GAMCU DGCVB.'"}
{"old_id": "sample_299", "code": "def f(var1, var2):\n    if not var1.endswith(var2):\n        return f(var2 + var1, var2)\n    return var1\nassert f('staovk', 'k') == ", "input": "'staovk', 'k'", "output": "'staovk'"}
{"old_id": "sample_300", "code": "def f(var1):\n    count = 1\n    for var2 in range(count, len(var1) - 1, 2):\n        var1[var2] = max(var1[var2], var1[count-1])\n        count += 1\n    return var1\nassert f([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_301", "code": "def f(var1):\n    count = len(var1)\n    for var2 in range(-count+1, 0):\n        var1.extend([var1[var2], var1[var2]])\n    return var1\nassert f([0, 6, 2, -1, -2]) == ", "input": "[0, 6, 2, -1, -2]", "output": "[0, 6, 2, -1, -2, 6, 6, -2, -2, -2, -2, -2, -2]"}
{"old_id": "sample_302", "code": "def f(var1):\n    return var1.replace('needles', 'haystacks')\nassert f('wdeejjjzsjsjjsxjjneddaddddddefsfd') == ", "input": "'wdeejjjzsjsjjsxjjneddaddddddefsfd'", "output": "'wdeejjjzsjsjjsxjjneddaddddddefsfd'"}
{"old_id": "sample_303", "code": "def f(var1):\n    var2 = (len(var1) + 1) // 2\n    var3 = list(var1)\n    while var2 < len(var1):\n        var4 = var3[var2].lower()\n        if var4 == var3[var2]:\n            var2 += 1\n        else:\n            var3[var2] = var4\n        var2 += 2\n    return ''.join(var3)\nassert f('mJkLbn') == ", "input": "'mJkLbn'", "output": "'mJklbn'"}
{"old_id": "sample_304", "code": "def f(var1):\n    var2 = sorted(var1.items(), key=lambda var3: var3[0], reverse=True)[0][0]\n    var4 = var1.pop(var2)\n    var5 = sorted(var1.items(), key=lambda var3: var3[0], reverse=True)[0][0]\n    var6 = var1.pop(var5)\n    return dict({var2: var4, var5: var6})\nassert f({2: 3, 17: 3, 16: 6, 18: 6, 87: 7}) == ", "input": "{2: 3, 17: 3, 16: 6, 18: 6, 87: 7}", "output": "{87: 7, 18: 6}"}
{"old_id": "sample_305", "code": "def f(var1, var2):\n    var3 = len(var1)\n    index = -1\n    for var4 in range(var3):\n        if var1[var4] == var2:\n            index = var4\n    if index == -1:\n        index = var3 // 2\n    var5 = list(var1)\n    var5.pop(index)\n    return ''.join(var5)\nassert f('o horseto', 'r') == ", "input": "'o horseto', 'r'", "output": "'o hoseto'"}
{"old_id": "sample_306", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if (isinstance(var3, str) and var3.isnumeric()) or isinstance(var3, int):\n            var2.append(var3)\n    var2 = list(map(int, var2))\n    return var2\nassert f([0, 6, '1', '2', 0]) == ", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]"}
{"old_id": "sample_307", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in range(1, len(var2) - 1):\n        var2.insert(var3 + 1, '|')\n    return ''.join(var2)\nassert f('pxcznyf') == ", "input": "'pxcznyf'", "output": "'px|||||cznyf'"}
{"old_id": "sample_308", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        if var3 not in var2:\n            var2[var3] = var1.count(var3)\n    return var2\nassert f([\"La\", \"Q\", \"9\", \"La\", \"La\"]) == ", "input": "[\"La\", \"Q\", \"9\", \"La\", \"La\"]", "output": "{'La': 3, 'Q': 1, '9': 1}"}
{"old_id": "sample_309", "code": "def f(var1, var2):\n    var1 += var2\n    while var1[-len(var2):] == var2:\n        var1 = var1[:-1]\n    return var1\nassert f('faqo osax f', 'f') == ", "input": "'faqo osax f', 'f'", "output": "'faqo osax '"}
{"old_id": "sample_310", "code": "def f(var1):\n    var2 = var1\n    for var3, var4 in enumerate(var2):\n        for var5 in range(len(var4) // 2):\n            var2[var3] = var2[var3][-1:] + var2[var3][1:-1] + var2[var3][0]\n    return ''.join(var2)\nassert f(['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']) == ", "input": "['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']", "output": "'__1.00r__j_a6__6'"}
{"old_id": "sample_311", "code": "def f(var1):\n    var1 = var1.replace('#', '1').replace('$', '5')\n    return 'yes' if var1.isnumeric() else 'no'\nassert f('A') == ", "input": "'A'", "output": "'no'"}
{"old_id": "sample_312", "code": "def f(str):\n    if str.isalnum():\n        return \"True\"\n    return \"False\"\nassert f('777') == ", "input": "'777'", "output": "'True'"}
{"old_id": "sample_313", "code": "def f(var1, var2):\n    return var1.ljust(var2, '=').rpartition('=')[0]\nassert f('urecord', 8) == ", "input": "'urecord', 8", "output": "'urecord'"}
{"old_id": "sample_314", "code": "def f(var1):\n    if ',' in var1:\n        var2, var3, var4 = var1.partition(',')\n        return var4 + ' ' + var2\n    return ',' + var1.partition(' ')[-1] + ' 0'\nassert f('244, 105, -90') == ", "input": "'244, 105, -90'", "output": "' 105, -90 244'"}
{"old_id": "sample_315", "code": "def f(var1):\n    return var1.casefold().replace('l', ',')\nassert f('czywZ') == ", "input": "'czywZ'", "output": "'czywz'"}
{"old_id": "sample_316", "code": "def f(var1):\n    return '| ' + ' '.join(var1.split(' ')) + ' |'\nassert f('i am your father') == ", "input": "'i am your father'", "output": "'| i am your father |'"}
{"old_id": "sample_317", "code": "def f(var1, var2, var3):\n    var1 = var1.replace(var2, var3)\n    return var1.replace(var3, var2)\nassert f(' vup a zwwo oihee amuwuuw! ', 'a', 'u') == ", "input": "' vup a zwwo oihee amuwuuw! ', 'a', 'u'", "output": "' vap a zwwo oihee amawaaw! '"}
{"old_id": "sample_318", "code": "def f(var1, var2):\n    var3 = 0\n    for var4 in var1:\n        if var4 == var2 or var4 == var2.lower():\n            var3 += 1\n    return var3\nassert f('234rtccde', 'e') == ", "input": "'234rtccde', 'e'", "output": "1"}
{"old_id": "sample_319", "code": "def f(var1, var2):\n    count = 0\n    while var1 in var2:\n        var2 = var2.replace(var1, '', 1)\n        count += 1\n    return count\nassert f('a', 'xxxaaxaaxx') == ", "input": "'a', 'xxxaaxaaxx'", "output": "4"}
{"old_id": "sample_320", "code": "def f(var1):\n    index = 1\n    while index < len(var1):\n        if var1[index] != var1[index - 1]:\n            index += 1\n        else:\n            var2 = var1[:index]\n            var3 = var1[index:].swapcase()\n            return var2 + var3\n    return var1.swapcase()\nassert f('USaR') == ", "input": "'USaR'", "output": "'usAr'"}
{"old_id": "sample_321", "code": "def f(update, var1):\n    var2 = var1.copy()\n    for var3 in update:\n        if var3 in var2:\n            var2[var3] += update[var3]\n        else:\n            var2[var3] = update[var3]\n    return var2\nassert f({}, {'desciduous': 2}) == ", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}"}
{"old_id": "sample_322", "code": "def f(var1, var2):\n    var3 = var1[1:]\n    var1.reverse()\n    for var4 in range(var2):\n        var3.append(var1.pop(1))\n    var1.reverse()\n    return var1\nassert f(['lsi', 's', 't', 't', 'd'], 0) == ", "input": "['lsi', 's', 't', 't', 'd'], 0", "output": "['lsi', 's', 't', 't', 'd']"}
{"old_id": "sample_323", "code": "def f(var1):\n    return len(var1.splitlines())\nassert f('ncdsdfdaaa0a1cdscsk*XFd') == ", "input": "'ncdsdfdaaa0a1cdscsk*XFd'", "output": "1"}
{"old_id": "sample_324", "code": "def f(var1):\n    var2, var3 = var1.copy(), []\n    var2.reverse()\n    var3 = var2[:len(var2)//2]\n    return var3 + var2 + var3\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_325", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in range(len(var2)):\n        var2[var3] = var2[var3].lower()\n        if not var2[var3].isdigit():\n            return False\n    return True\nassert f(\"\") == ", "input": "\"\"", "output": "True"}
{"old_id": "sample_326", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1:\n        if var3.isnumeric():\n            var2 += 1\n    return var2\nassert f('Thisisastring') == ", "input": "'Thisisastring'", "output": "0"}
{"old_id": "sample_327", "code": "def f(var1):\n    var2 = list()\n    var3 = len(var1)-1\n    for var4 in range(len(var1)):\n        if var3%2 == 0:\n            var2.append(-var1[var3])\n        else:\n            var2.append(var1[var3])\n        var3 -= 1\n    return var2\nassert f([1, 7, -1, -3]) == ", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]"}
{"old_id": "sample_328", "code": "def f(var1, var2):\n    if var2 <= 0:\n        return var1\n    if len(var1) < var2:\n        var1.extend(f(var1, var2 - len(var1)))\n    return var1\nassert f([1, 2, 3], 4) == ", "input": "[1, 2, 3], 4", "output": "[1, 2, 3, 1, 2, 3]"}
{"old_id": "sample_329", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if var1[var2] == var1[var2].upper() and var1[var2-1].islower():\n            return True\n    return False\nassert f('jh54kkk6') == ", "input": "'jh54kkk6'", "output": "True"}
{"old_id": "sample_330", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if var3.isdigit():\n            var2.append(var3)\n        else:\n            var2.append(' ')\n    return ''.join(var2)\nassert f('m4n2o') == ", "input": "'m4n2o'", "output": "' 4 2 '"}
{"old_id": "sample_331", "code": "def f(var1, var2):\n    var3 = var1.find(var2)\n    while var3 != -1:\n        var1 = var1[var3 + 1:]\n        var3 = var1.find(var2)\n    return var1.rfind(var2)\nassert f('', 'abc') == ", "input": "'', 'abc'", "output": "-1"}
{"old_id": "sample_332", "code": "def f(var1):\n    count = len(var1)\n    if count == 0:\n        var1 = [0] * int(var1.pop())\n    elif count % 2 == 0:\n        var1.clear()\n    else:\n        del var1[:count//2:]\n    return var1\nassert f([-6, -2, 1, -3, 0, 1]) == ", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[]"}
{"old_id": "sample_333", "code": "def f(var1, var2):\n    var1.sort()\n    for var2 in var2:\n        var1.remove(var2)\n    if len(var1) == 1:\n        return 1\n    for var3, var4 in enumerate(var1):\n        if var1.count(var4+1) == 0:\n            return var3+1\n    return var3+1\nassert f([375, 564, 857, 90, 728, 92], [728]) == ", "input": "[375, 564, 857, 90, 728, 92], [728]", "output": "1"}
{"old_id": "sample_334", "code": "def f(var1, var2):\n    return var1.join(var2)\nassert f('00', ['nU', ' 9 rCSAz', 'w', ' lpA5BO', 'sizL', 'i7rlVr']) == ", "input": "'00', ['nU', ' 9 rCSAz', 'w', ' lpA5BO', 'sizL', 'i7rlVr']", "output": "'nU00 9 rCSAz00w00 lpA5BO00sizL00i7rlVr'"}
{"old_id": "sample_335", "code": "def f(var1, var2):\n    var3 = list(var1)\n    if var2 in var3:\n        index = var3.index(var2)\n        var3.remove(var2)\n        var3.insert(index, '?')\n        var3.remove('?')\n    return ''.join(var3)\nassert f('sjbrlfqmw', 'l') == ", "input": "'sjbrlfqmw', 'l'", "output": "'sjbrfqmw'"}
{"old_id": "sample_336", "code": "def f(var1, var2):\n    var1 += var2\n    return var1.rpartition(var2)[0]\nassert f('234dsfssdfs333324314', 's') == ", "input": "'234dsfssdfs333324314', 's'", "output": "'234dsfssdfs333324314'"}
{"old_id": "sample_337", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if var3.isdigit():\n            continue\n        if var3.islower():\n            var2.append(var3.upper())\n        elif var3.isupper():\n            var2.append(var3.lower())\n    return ''.join(var2)\nassert f(\"5ll6\") == ", "input": "\"5ll6\"", "output": "'LL'"}
{"old_id": "sample_338", "code": "def f(var1):\n    var2 = {var3: var4 for var4, var3 in var1.items()}\n    return var2\nassert f({'a': 1, 'b': 2, 'c': 3, 'd': 2}) == ", "input": "{'a': 1, 'b': 2, 'c': 3, 'd': 2}", "output": "{1: 'a', 2: 'd', 3: 'c'}"}
{"old_id": "sample_339", "code": "def f(var1, var2):\n    var2 = str(var2)\n    var3 = 0\n    for var4 in var1:\n        if str(var4) == var2:\n            var3 += 1\n    return var3\nassert f([-1, 2, 1, -8, -8, 2], 2) == ", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2"}
{"old_id": "sample_340", "code": "def f(var1):\n    var2 = var1.find('A')\n    if var2 >= 0:\n        return var1[:var2] + var1[var1.find('a') + 1 :]\n    else:\n        return ''.join(sorted(var1))\nassert f('E jIkx HtDpV G') == ", "input": "'E jIkx HtDpV G'", "output": "'   DEGHIVjkptx'"}
{"old_id": "sample_341", "code": "def f(var1):\n    while len(var1) > 5:\n        var1.popitem()\n    return var1\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_342", "code": "def f(var1):\n    return var1.count('-') == len(var1)\nassert f(\"---123-4\") == ", "input": "\"---123-4\"", "output": "False"}
{"old_id": "sample_343", "code": "def f(var1, var2):\n    var1.extend(var2)\n    return var1\nassert f([[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]) == ", "input": "[[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]", "output": "[[1, 2, 3], [1, 2], 1, [1, 2, 3], 3, [2, 1]]"}
{"old_id": "sample_344", "code": "def f(list, var1):\n    var2 = list[:]\n    var2.sort()\n    var1(var2)\n    return list\nassert f([6, 4, 2, 8, 15], (lambda var3: var3.reverse())) == ", "input": "[6, 4, 2, 8, 15], (lambda x: x.reverse())", "output": "[6, 4, 2, 8, 15]"}
{"old_id": "sample_345", "code": "def f(var1, var2):\n    if var1 < var2:\n        return (var2, var1)\n    return (var1, var2)\nassert f('ml', 'mv') == ", "input": "'ml', 'mv'", "output": "('mv', 'ml')"}
{"old_id": "sample_346", "code": "def f(var1):\n    var2 = var1.split('.')[-1]\n    var3 = var1 + var2[::-1]\n    return var3.endswith(var2)\nassert f('docs.doc') == ", "input": "'docs.doc'", "output": "False"}
{"old_id": "sample_347", "code": "def f(var1):\n    var2 = list(var1)\n    var3 = len(var2)\n    for var4 in range(var3):\n        var2.insert(var4, var2[var4])\n    return ''.join(var2).ljust(var3 * 2)\nassert f('hzcw') == ", "input": "'hzcw'", "output": "'hhhhhzcw'"}
{"old_id": "sample_348", "code": "def f(var1):\n    return var1.copy()\nassert f({563: 555, 133: None}) == ", "input": "{563: 555, 133: None}", "output": "{563: 555, 133: None}"}
{"old_id": "sample_349", "code": "def f(var1):\n    var1[1049] = 55\n    var2, var3 = var1.popitem()\n    var1[var2] = var3\n    return var1\nassert f({'noeohqhk': 623}) == ", "input": "{'noeohqhk': 623}", "output": "{'noeohqhk': 623, 1049: 55}"}
{"old_id": "sample_350", "code": "def f(var1):\n    var2 = len(var1)\n    var3 = [0] * var2\n    if var2 == 0:\n        return var3\n    for var4, var5 in enumerate(var1.values()):\n        var3[var4] = var5\n    return var3\nassert f({'a': 1, 'b': 2, 'c': 3}) == ", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]"}
{"old_id": "sample_351", "code": "def f(var1):    \n    try:\n        while 'nnet lloP' in var1:\n            var1 = var1.replace('nnet lloP', 'nnet loLp')\n    finally:\n        return var1\nassert f('a_A_b_B3 ') == ", "input": "'a_A_b_B3 '", "output": "'a_A_b_B3 '"}
{"old_id": "sample_352", "code": "def f(var1):\n    return var1[len(var1)//2]\nassert f([-1, -3, -5, -7, 0]) == ", "input": "[-1, -3, -5, -7, 0]", "output": "-5"}
{"old_id": "sample_353", "code": "def f(var1):\n    if var1 == []:\n        return -1\n    else:\n        var2 = {}\n        for var3 in var1:\n            if var3 in var2:\n                var2[var3] += 1\n            else:\n                var2[var3] = 1\n        return max(var2.values())\nassert f([1, 0, 2, 2, 0, 0, 0, 1]) == ", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4"}
{"old_id": "sample_354", "code": "def f(var1, values):\n    if values[1] is None:\n        values = values[0:1]\n    else:\n        values = values[1:]\n    return var1.format(*values)\nassert f('{0}, {0}!!!', ['R', None]) == ", "input": "'{0}, {0}!!!', ['R', None]", "output": "'R, R!!!'"}
{"old_id": "sample_355", "code": "def f(var1, var2):\n    return var1[len(var2):]\nassert f('123x John z', 'z') == ", "input": "'123x John z', 'z'", "output": "'23x John z'"}
{"old_id": "sample_356", "code": "def f(var1, var2):\n    reverse = False\n    if var2 < 0:\n        reverse = True\n        var2 *= -1\n    var1 = var1[::-1] * var2\n    var3 = len(var1)\n    \n    if reverse:\n        var1 = var1[::-1]\n    return var1\nassert f([1, 2], 1) == ", "input": "[1, 2], 1", "output": "[2, 1]"}
{"old_id": "sample_357", "code": "def f(var1):\n    var2 = []\n    for var3 in range(len(var1) - 1, 0 - 1, -1):\n        var2 += var1[var3]\n    return ''.join(var2)\nassert f('crew') == ", "input": "'crew'", "output": "'werc'"}
{"old_id": "sample_358", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in range(len(var1)):\n        if var1[var4] == var2 and (var4 == 0 or var1[var4-1] != var2):\n            var3.append(var4) \n    if len(var3) % 2 == 1:\n        return var1\n    return var1[var3[0]+1:var3[-1]]\nassert f('btrburger', 'b') == ", "input": "'btrburger', 'b'", "output": "'tr'"}
{"old_id": "sample_359", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        var1[var2] = var1[var2].center(len(var1[-1]))\n    return var1\nassert f(['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']) == ", "input": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "output": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']"}
{"old_id": "sample_360", "code": "def f(var1, var2):\n    if len(var1) <= 2:\n        return var1\n    var3 = var1[0] * (var2 - len(var1) + 1)\n    return var3 + var1[1:-1] + var1[-1]\nassert f('g', 15) == ", "input": "'g', 15", "output": "'g'"}
{"old_id": "sample_361", "code": "def f(var1):\n    return var1.split(':')[0].count('#')\nassert f(\"#! : #!\") == ", "input": "\"#! : #!\"", "output": "1"}
{"old_id": "sample_362", "code": "def f(var1):\n    for var2 in range(len(var1)-1):\n        if var1[var2:].islower():\n            return var1[var2 + 1:]\n    return ''\nassert f('wrazugizoernmgzu') == ", "input": "'wrazugizoernmgzu'", "output": "'razugizoernmgzu'"}
{"old_id": "sample_363", "code": "def f(var1):\n    var1.sort()\n    var2 = len(var1)\n    var3 = [var1[var2//2]]\n    \n    if var2 % 2 == 0:\n        var3 = [var1[var2//2 - 1], var1[var2//2]]\n    \n    for var4 in range(0, var2//2):\n        var3.insert(0, var1[var2-var4-1])\n        var3.append(var1[var4])\n    return var3\nassert f([1]) == ", "input": "[1]", "output": "[1]"}
{"old_id": "sample_364", "code": "def f(var1, var2):\n    var3 = [var4 for var4 in var1 if var4 != 0]\n    var5 = [[var4, var2(var4)] for var4 in var3]\n    if var5:\n        return var5\n    return 'error - no numbers or all zeros!'\nassert f([0, 3, 0, 1], lambda var4: var4 < 2) == ", "input": "[0, 3, 0, 1], lambda x: x < 2", "output": "[[3, False], [1, True]]"}
{"old_id": "sample_365", "code": "def f(var1, var2):\n    if var2.startswith(var1):\n        var3, var4 = var2.split(var1, 1)\n        return var3 + var1 + var2[len(var1):]\n    return var2\nassert f('xqc', 'mRcwVqXsRDRb') == ", "input": "'xqc', 'mRcwVqXsRDRb'", "output": "'mRcwVqXsRDRb'"}
{"old_id": "sample_366", "code": "def f(var1):\n    var2 = var1.lower()\n    for var3 in var1.lower():\n        if var3 in var2:\n            var2 = var2.replace(var3, '', 1)\n    return var2\nassert f('[ Hello ]+ Hello, World!!_ Hi') == ", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''"}
{"old_id": "sample_367", "code": "def f(var1, var2):\n    var3 = var1[:]\n    while var2 in var3:\n        var4 = var3.pop(var3.index(var2))\n        if var4 != var2:\n            var3.append(var4)\n    return var3\nassert f([6, 2, 1, 1, 4, 1], 5) == ", "input": "[6, 2, 1, 1, 4, 1], 5", "output": "[6, 2, 1, 1, 4, 1]"}
{"old_id": "sample_368", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in var2:\n        var3.append(var1.zfill(var4))\n    return ' '.join(var3)\nassert f('4327', [2, 8, 9, 2, 7, 1]) == ", "input": "'4327', [2, 8, 9, 2, 7, 1]", "output": "'4327 00004327 000004327 4327 0004327 4327'"}
{"old_id": "sample_369", "code": "def f(var1):\n    if var1.isdigit():\n        return \"int\"\n    elif var1.replace('.', '', 1).isdigit():\n        return \"float\"\n    elif var1.count(' ') == len(var1) - 1:\n        return \"str\"\n    elif len(var1) == 1:\n        return \"char\"\n    else:\n        return \"tuple\"\nassert f(\" 99 777\") == ", "input": "\" 99 777\"", "output": "'tuple'"}
{"old_id": "sample_370", "code": "def f(var1):\n    for var2 in var1:\n        if not var2.isspace():\n            return False\n    return True\nassert f('     i') == ", "input": "'     i'", "output": "False"}
{"old_id": "sample_371", "code": "def f(var1):\n    for var2 in var1[:]:\n        if var2 % 2 != 0:\n            var1.remove(var2)\n    var3 = 0\n    for var4 in var1:\n        var3 += var4\n    return var3\nassert f([11, 21, 0, 11]) == ", "input": "[11, 21, 0, 11]", "output": "0"}
{"old_id": "sample_372", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in var1:\n        var4 = var2 // 2 * ('%s,' % var4)\n        var3.append(var4)\n    return var3\nassert f(['v'], 1) == ", "input": "['v'], 1", "output": "['']"}
{"old_id": "sample_373", "code": "def f(var1):\n    copy = var1\n    copy.append(100)\n    var1.pop()\n    return copy\nassert f([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_374", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in var1:\n        if var4.endswith(var2):\n            var3.append(var4*2)\n    return var3\nassert f([ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz') == ", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']"}
{"old_id": "sample_375", "code": "def f(var1, var2):\n    if var2 in var1:\n        return var2.join(var1.partition(var1[var1.index(var2) + 1]))\n    else:\n        return var1\nassert f('sierizam', 'iz') == ", "input": "'sierizam', 'iz'", "output": "'sieriizzizam'"}
{"old_id": "sample_376", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if var1[0:var2].startswith(\"two\"):\n            return var1[var2:]\n    return 'no'\nassert f(\"2two programmers\") == ", "input": "\"2two programmers\"", "output": "'no'"}
{"old_id": "sample_377", "code": "def f(var1):\n    return ', '.join(var1.splitlines())\nassert f(\"BYE\\nNO\\nWAY\") == ", "input": "\"BYE\\nNO\\nWAY\"", "output": "'BYE, NO, WAY'"}
{"old_id": "sample_378", "code": "def f(var1, var2):\n    var1 = dict(var1)\n    var3 = var1.pop(var2, 0)\n    if var3 == 0:\n        return 'No such key!'\n    while len(var1) > 0:\n        var1[var1.popitem()[1]] = var1.popitem()[0]\n    return int(var1.popitem()[0])\nassert f(dict(var4=0), 'u') == ", "input": "dict(did=0), 'u'", "output": "'No such key!'"}
{"old_id": "sample_379", "code": "def f(var1):\n    for var2 in range(len(var1) - 1, -1, -3):\n        if var1[var2] == 0:\n            var1.clear()\n            return False\n    return var1\nassert f([0, 0, 1, 2, 1]) == ", "input": "[0, 0, 1, 2, 1]", "output": "False"}
{"old_id": "sample_380", "code": "def f(var1, var2):\n    var1 = var1.rpartition(var2)\n    return var1[0] + var1[-1]\nassert f('xxjarczx', 'x') == ", "input": "'xxjarczx', 'x'", "output": "'xxjarcz'"}
{"old_id": "sample_381", "code": "def f(var1, var2):\n    var3 = max(1, var2)\n    return var1.zfill(var3)\nassert f('19', 5) == ", "input": "'19', 5", "output": "'00019'"}
{"old_id": "sample_382", "code": "def f(var1):\n    var2 = dict(list(var1.items())\n    [::-1])\n    return \" \".join([str(var3) for var3 in var2.items()])\nassert f({15: \"Qltuf\", 12: \"Rwrepny\"}) == ", "input": "{15: \"Qltuf\", 12: \"Rwrepny\"}", "output": "\"(12, 'Rwrepny') (15, 'Qltuf')\""}
{"old_id": "sample_383", "code": "def f(var1, var2):\n    var3 = list(var1)\n    while var2 in var3[-3::-2]:\n        var3.remove(var3[-3])\n        var3.remove(var3[-3])\n    return ''.join(var3).strip('.')\nassert f('ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y') == ", "input": "'ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y'", "output": "'ellod!p.nkyp.exa.bi.y.hain'"}
{"old_id": "sample_384", "code": "def f(var1, var2):\n    var2 = list(var2)\n    var1 = list(var1)\n    var3 = var1\n    while len(var3) > 0 and var1:\n        if var3[0] in var2:\n            var3 = var3[1:]\n        else:\n            break \n    return ''.join(var3)\nassert f('asfdellos', 'Ta') == ", "input": "'asfdellos', 'Ta'", "output": "'sfdellos'"}
{"old_id": "sample_385", "code": "def f(var1):\n    var2 = 0\n    var3 = []\n    while var2 < len(var1):\n        if var1[var2] in var1[var2+1:]:\n            var3.append(var1[var2])\n            if len(var3) == 3:\n                return var3\n        var2 += 1\n    return var3\nassert f([0, 2, 1, 2, 6, 2, 6, 3, 0]) == ", "input": "[0, 2, 1, 2, 6, 2, 6, 3, 0]", "output": "[0, 2, 2]"}
{"old_id": "sample_386", "code": "def f(var1, var2):\n    count = len(var2)\n    for var3 in range(count):\n        if var2[str(var3)] in var1:\n            var2.pop(str(var3))\n    return \"Done!\"\nassert f('mid', {'0':'q','1':'f','2':'w','3':'i'}) == ", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'"}
{"old_id": "sample_387", "code": "def f(var1, var2, var3):\n    var1.insert(var2, var3)\n    return var1\nassert f([3, 1, 2], 2, 0) == ", "input": "[3, 1, 2], 2, 0", "output": "[3, 1, 0, 2]"}
{"old_id": "sample_388", "code": "def f(var1, var2):\n    var3 = list(var2) + [' ', '_']\n\n    var4 = 0\n    while var4 < len(var1) and var1[var4] in var3:\n        var4 += 1\n\n    return var1[var4:]\nassert f(\"2nm_28in\", \"nm\") == ", "input": "\"2nm_28in\", \"nm\"", "output": "'2nm_28in'"}
{"old_id": "sample_389", "code": "def f(var1, var2):\n    if type(var2) is list:\n        for var3 in var2:\n            var1.extend(var3)\n    else:\n        var1.extend(var2)\n    return var1\nassert f([1, 2, 3], 'nammo') == ", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']"}
{"old_id": "sample_390", "code": "def f(var1):\n    if not var1.strip():\n        return len(var1.strip())\n    return None\nassert f(\" \\t \") == ", "input": "\" \\t \"", "output": "0"}
{"old_id": "sample_391", "code": "def f(var1):\n    var2 = var1\n    var2.reverse()\n    var3 = 0\n    for var3 in range(len(var2)):\n        var3 += 2\n        var2[var3 - 1:var3] = ['+']\n    var2.append('+')\n    return var2\nassert f(['r', '9']) == ", "input": "['r', '9']", "output": "['9', '+', '+', '+']"}
{"old_id": "sample_392", "code": "def f(var1):\n    if var1.upper() == var1:\n        return 'ALL UPPERCASE'\n    return var1\nassert f('Hello Is It MyClass') == ", "input": "'Hello Is It MyClass'", "output": "'Hello Is It MyClass'"}
{"old_id": "sample_393", "code": "def f(var1):\n    var2 = var1[::-1]\n    var3 = ''\n    for var4 in range(len(var2) - 3, 0, -3):\n        var3 += '---'.join(var2[var4:var4 + 3]) + '---'\n    return var3[:-3]\nassert f('scala') == ", "input": "'scala'", "output": "'a---c---s'"}
{"old_id": "sample_394", "code": "def f(var1):\n    var2 = var1.splitlines()\n    var3 = 0\n    for var4 in var2:\n        if len(var4) == 0:\n            return var3\n        var3+=1\n    return -1\nassert f(\"2 m2 \\n\\nbike\") == ", "input": "\"2 m2 \\n\\nbike\"", "output": "1"}
{"old_id": "sample_395", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if var1[var2].isdecimal():\n            return var2 + (var1[var2] == '0')\n        elif var1[var2] == '0':\n            return -1\n    return -1\nassert f(\"11\") == ", "input": "\"11\"", "output": "0"}
{"old_id": "sample_396", "code": "def f(var1):\n    while var1:\n        var2, var3 = var1.popitem()\n        var1[var2] = var3**2\n    return var1\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_397", "code": "def f(var1):\n    return dict.fromkeys(var1, 0)\nassert f(['x', 'u', 'w', 'j', 3, 6]) == ", "input": "['x', 'u', 'w', 'j', 3, 6]", "output": "{'x': 0, 'u': 0, 'w': 0, 'j': 0, 3: 0, 6: 0}"}
{"old_id": "sample_398", "code": "def f(var1):\n    dict = {}\n    for var2, var3 in var1.items():\n        count = var1[var2]\n        if count not in dict:\n            dict[count] = []\n        dict[count].append(var2)\n    var1.update(dict)\n    return var1\nassert f({'2': 2, '0': 1, '1': 2}) == ", "input": "{'2': 2, '0': 1, '1': 2}", "output": "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}"}
{"old_id": "sample_399", "code": "def f(var1, var2, var3):\n    if len(var2) > 3:\n        return var1\n    if var2 in var1 and ' ' not in var1:\n        return var1.replace(var2, var3*len(var2))\n    while var2 in var1:\n        var1 = var1.replace(var2, var3)\n    return var1\nassert f('avacado', 'va', '-') == ", "input": "'avacado', 'va', '-'", "output": "'a--cado'"}
{"old_id": "sample_400", "code": "def f(var1):\n    var2 = map(str.isascii, var1.split())\n    if True in var2:\n        return ', '.join(var3 for var3 in var1.split() if var3.isascii())\n    return ''\nassert f('I am hungry! eat food.') == ", "input": "'I am hungry! eat food.'", "output": "'I, am, hungry!, eat, food.'"}
{"old_id": "sample_401", "code": "def f(var1, var2):\n    if var2 and var1.endswith(var2):\n        return var1[:- len(var2)]\n    return var1\nassert f('mathematics', 'example') == ", "input": "'mathematics', 'example'", "output": "'mathematics'"}
{"old_id": "sample_402", "code": "def f(var1, var2):\n    var3 = {}\n    for var4 in range(var1):\n        var3.clear()\n        var3.update({var5 + 10: var5 * 10 for var5 in var2})\n    return var3\nassert f(0, ['aaa', 'bbb']) == ", "input": "0, ['aaa', 'bbb']", "output": "{}"}
{"old_id": "sample_403", "code": "def f(var1, var2):\n    var3 = len(var2)\n    index = var1.find(var2)\n    count = 0\n    while index >= 0:\n        var1 = var1[index + var3:]\n        index = var1.find(var2)\n        count += 1\n    return count\nassert f('hrsiajiajieihruejfhbrisvlmmy', 'hr') == ", "input": "'hrsiajiajieihruejfhbrisvlmmy', 'hr'", "output": "2"}
{"old_id": "sample_404", "code": "def f(var1):\n    var2 = dict.fromkeys(var1, False) \n    return sum([1 for var3 in var2.keys()])\nassert f(['l', 'f', 'h', 'g', 's', 'b']) == ", "input": "['l', 'f', 'h', 'g', 's', 'b']", "output": "6"}
{"old_id": "sample_405", "code": "def f(var1):\n    var2 = var1[0] - 1\n    var1.pop(0)\n    while(var2 <= var1[0]):\n        var1.pop(0)\n        var2 -= 1\n    var1.insert(0, var2)\n    return var1\nassert f([6, 3, 4, 1, 2, 3, 5]) == ", "input": "[6, 3, 4, 1, 2, 3, 5]", "output": "[5, 3, 4, 1, 2, 3, 5]"}
{"old_id": "sample_406", "code": "def f(var1):\n    var2 = list(var1)\n    var2[0], var2[-1] = var2[-1].upper(), var2[0].upper()\n    return ''.join(var2).istitle()\nassert f('Josh') == ", "input": "'Josh'", "output": "False"}
{"old_id": "sample_407", "code": "def f(var1):\n    while len(var1) > 1:\n        var1.clear()\n        var1.append(len(var1))\n    return var1.pop()\nassert f([6, 1, 2, 3]) == ", "input": "[6, 1, 2, 3]", "output": "0"}
{"old_id": "sample_408", "code": "def f(var1):\n    var1.reverse()\n    return var1\nassert f([-4, 6, 0, 4, -7, 2, -1]) == ", "input": "[-4, 6, 0, 4, -7, 2, -1]", "output": "[-1, 2, -7, 4, 0, 6, -4]"}
{"old_id": "sample_409", "code": "def f(var1, var2):\n    if var1:\n        var1 = var1.removeprefix(var2)\n        var1 = var1.removeprefix(var1[-1])\n        var1 = var1[:-1] + var1[-1].capitalize()\n    return var1\nassert f('querist', 'u') == ", "input": "'querist', 'u'", "output": "'querisT'"}
{"old_id": "sample_410", "code": "def f(var1):\n    var2 = 0\n    for var3 in range(len(var1)):\n        var1.insert(var3, var1[var2])\n        var2 += 1\n    return var1\nassert f([1, 3, -1, 1, -2, 6]) == ", "input": "[1, 3, -1, 1, -2, 6]", "output": "[1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6]"}
{"old_id": "sample_411", "code": "def f(var1, var2):\n    if isinstance(var2, list):\n        return ', '.join(var1.startswith(var3) for var3 in var2)\n    else:\n        return var1.startswith(var2)\nassert f('Hello World', 'W') == ", "input": "'Hello World', 'W'", "output": "False"}
{"old_id": "sample_412", "code": "def f(var1, var2, var3):\n    var4 = list(range(var1, var2 + 1, var3))\n    if 1 in var4:\n        var4[-1] = var2 + 1\n    return len(var4)\nassert f(3, 10, 1) == ", "input": "3, 10, 1", "output": "8"}
{"old_id": "sample_413", "code": "def f(var1):\n    return '{}{}{}'.format(var1[3:], var1[2], var1[5:8])\nassert f('jbucwc') == ", "input": "'jbucwc'", "output": "'cwcuc'"}
{"old_id": "sample_414", "code": "def f(var1):\n    var2 = var1.copy()\n    for var3, var4 in var2.items():\n        for var5 in range(len(var4)):\n            var4[var5] = var4[var5].upper()\n    return var2\nassert f({'X': ['x', 'y']}) == ", "input": "{'X': ['x', 'y']}", "output": "{'X': ['X', 'Y']}"}
{"old_id": "sample_415", "code": "def f(var1):\n    var2 = dict(var1)\n    for var3, var4 in var2.items():\n        if var4 < 0 or var4 > 9:\n            return None\n    return var2\nassert f(((8, 5), (8, 2), (5, 3))) == ", "input": "((8, 5), (8, 2), (5, 3))", "output": "{8: 2, 5: 3}"}
{"old_id": "sample_416", "code": "def f(var1, var2, var3):\n    index = var1.rfind(var2, 0, var1.find(var2))\n    var4 = list(var1)\n    while index > 0:\n        var4[index:index+len(var2)] = var3\n        index = var1.rfind(var2, 0, index)\n    return ''.join(var4)\nassert f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1') == ", "input": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1'", "output": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq'"}
{"old_id": "sample_417", "code": "def f(var1):\n    var1.reverse()\n    var1.pop()\n    var1.reverse()\n    return var1\nassert f([7, 8, 2, 8]) == ", "input": "[7, 8, 2, 8]", "output": "[8, 2, 8]"}
{"old_id": "sample_418", "code": "def f(var1, var2):\n    var3 = var1.partition(var2)\n    var4, var5, var6 = len(var3[0]), len(var3[1]), len(var3[2])\n    if var4 >= 2 and var5 <= 2 and var6 >= 2:\n        return (var3[0][::-1] + var3[1] + var3[2][::-1] + '#')\n    return (var3[0] + var3[1] + var3[2])\nassert f(\"qqqqq\", \"qqq\") == ", "input": "\"qqqqq\", \"qqq\"", "output": "'qqqqq'"}
{"old_id": "sample_419", "code": "def f(var1, var2):\n    if not var2 in var1:\n        return ''\n    return var1.rpartition(var2)[0]\nassert f('mmfbifen', 'i') == ", "input": "'mmfbifen', 'i'", "output": "'mmfb'"}
{"old_id": "sample_420", "code": "def f(var1):\n    try:\n        return var1.isalpha()\n    except:\n        return False\nassert f(\"x\") == ", "input": "\"x\"", "output": "True"}
{"old_id": "sample_421", "code": "def f(str, var1):\n    if len(str) < var1:\n        return str\n    else:\n        return str.removeprefix(str[:var1])\nassert f(\"try.\", 5) == ", "input": "\"try.\", 5", "output": "'try.'"}
{"old_id": "sample_422", "code": "def f(var1):\n    var2 = var1.copy()\n    var2 = reversed(var2)\n    return [var3*var3 for var3 in var2]\nassert f([1, 2, 1]) == ", "input": "[1, 2, 1]", "output": "[1, 4, 1]"}
{"old_id": "sample_423", "code": "def f(var1):\n    var2 = len(var1)\n    for var3 in range(var2-1, -1, -1):\n        if var1[var3] == var1[0]:\n            var1.remove(var1[var2-1])\n    return var1\nassert f([4, 2, 5, 1, 3, 2, 6]) == ", "input": "[4, 2, 5, 1, 3, 2, 6]", "output": "[4, 2, 5, 1, 3, 2]"}
{"old_id": "sample_424", "code": "def f(var1):\n    var1 = var1.replace('\"', '')\n    var2 = list(var1)\n    var3 = 0\n    count = 1\n    while var3 < len(var2) and var2[var3] in \".:,\":\n        if var2[var3] == \".\":\n            count = var4[var3] + 1\n        var3 += 1\n    return var1[var3+count:]\nassert f('\"Makers of a Statement\"') == ", "input": "'\"Makers of a Statement\"'", "output": "'akers of a Statement'"}
{"old_id": "sample_425", "code": "def f(var1):\n    var1 = var1.replace('/', ':')\n    var2 = var1.rpartition(':')\n    return [var2[0], var2[1], var2[2]]\nassert f('/CL44     ') == ", "input": "'/CL44     '", "output": "['', ':', 'CL44     ']"}
{"old_id": "sample_426", "code": "def f(var1, var2, var3):\n    var1.insert(var3, var2)\n    return var1\nassert f([1, 2, 3], 8, 5) == ", "input": "[1, 2, 3], 8, 5", "output": "[1, 2, 3, 8]"}
{"old_id": "sample_427", "code": "def f(var1):\n    count = len(var1) - 1\n    var2 = var1[::-1]\n    while count > 0 and var2[::2].rfind('sea') == -1:\n        count -= 1\n        var2 = var2[:count]\n    return var2[count:]\nassert f('s a a b s d s a a s a a') == ", "input": "'s a a b s d s a a s a a'", "output": "''"}
{"old_id": "sample_428", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if not var2 % 2:\n            var1.append(var1[var2] * var1[var2 + 1])\n    return var1\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_429", "code": "def f(var1):\n    var2 = []\n    while len(var1.keys()) > 0:\n        var2.append(var1.popitem())\n    return var2\nassert f({5: 1, 'abc': 2, 'defghi': 2, 87.29: 3}) == ", "input": "{5: 1, 'abc': 2, 'defghi': 2, 87.29: 3}", "output": "[(87.29, 3), ('defghi', 2), ('abc', 2), (5, 1)]"}
{"old_id": "sample_430", "code": "def f(var1, var2):\n    var3 = var1.copy()\n    var3.extend(var2)\n    return var3\nassert f([5, 1, 3, 7, 8], ['', 0, -1, []]) == ", "input": "[5, 1, 3, 7, 8], ['', 0, -1, []]", "output": "[5, 1, 3, 7, 8, '', 0, -1, []]"}
{"old_id": "sample_431", "code": "def f(var1, var2):\n    var3 = list(range(1, var1+1))\n    for var4 in range(var2):\n        var3.clear()\n    return var3\nassert f(1, 3) == ", "input": "1, 3", "output": "[]"}
{"old_id": "sample_432", "code": "def f(var1, var2):\n    if len(var2) == var1:\n        return var2[::-1]\n    return False\nassert f(-5, 'G5ogb6f,c7e.EMm') == ", "input": "-5, 'G5ogb6f,c7e.EMm'", "output": "False"}
{"old_id": "sample_433", "code": "def f(var1):\n    var1 = var1.split(',')\n    var1.pop(0)\n    var1.insert(0, var1.pop(var1.index('T')))\n    return 'T' + ',' + ','.join(var1)\nassert f(\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\") == ", "input": "\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\"", "output": "'T,T,Sspp,G ,.tB,Vxk,Cct'"}
{"old_id": "sample_434", "code": "def f(var1):\n    try:\n       return var1.rfind('e')\n    except AttributeError:\n        return \"Nuk\"\nassert f('eeuseeeoehasa') == ", "input": "'eeuseeeoehasa'", "output": "8"}
{"old_id": "sample_435", "code": "def f(var1, var2, var3):\n    while len(var1) < var2:\n        var1.insert(len(var1) // 2, var3)\n    for var4 in range(len(var1) // (var2 - 1) - 4):\n        var1.insert(len(var1) // 2, var3)\n    return ' '.join(var1)\nassert f([], 0, 1) == ", "input": "[], 0, 1", "output": "''"}
{"old_id": "sample_436", "code": "def f(var1, var2):\n    return [var1[var3:var3+1] for var3 in var2]\nassert f('s7 6s 1ss', [1, 3, 6, 1, 2]) == ", "input": "'s7 6s 1ss', [1, 3, 6, 1, 2]", "output": "['7', '6', '1', '7', ' ']"}
{"old_id": "sample_437", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        var2 = var2.fromkeys(var3, None)\n    return var2\nassert f(['john', 'doe', 'the', 'john', 'doe']) == ", "input": "['john', 'doe', 'the', 'john', 'doe']", "output": "{'d': None, 'o': None, 'e': None}"}
{"old_id": "sample_438", "code": "def f(var1):\n    var2 = 100\n    for var3 in range(10, 30):\n        if 0 < var1.count('\\t') < 20:\n            var2 = var3\n            break\n    return var1.expandtabs(var2)\nassert f('1  \\t\\t\\t3') == ", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'"}
{"old_id": "sample_439", "code": "def f(var1):\n    var2 = var1.partition(' ')[::2]\n    return ''.join(var2)\nassert f('coscifysu') == ", "input": "'coscifysu'", "output": "'coscifysu'"}
{"old_id": "sample_440", "code": "def f(var1):\n    if var1.isdecimal():\n        return 'yes'\n    else:\n        return 'no'\nassert f(\"abc\") == ", "input": "\"abc\"", "output": "'no'"}
{"old_id": "sample_441", "code": "def f(var1, var2, var3):\n    var1[var2] = var3\n    return var1\nassert f({37: 'forty-five'}, '23', 'what?') == ", "input": "{37: 'forty-five'}, '23', 'what?'", "output": "{37: 'forty-five', '23': 'what?'}"}
{"old_id": "sample_442", "code": "def f(var1):\n    var2 = []\n    for var3 in range(len(var1)):\n        if var1[var3] % 2 == 0:\n            var2.append(var1[var3])\n\n    return var1.copy()\nassert f([1, 2, 3, 4]) == ", "input": "[1, 2, 3, 4]", "output": "[1, 2, 3, 4]"}
{"old_id": "sample_443", "code": "def f(var1):\n    for var2 in var1:\n        if var2 == ' ':\n            var1 = var1.lstrip()\n        else:\n            var1 = var1.replace('cd', var2)\n    return var1\nassert f(\"lorem ipsum\") == ", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'"}
{"old_id": "sample_444", "code": "def f(var1):\n    count = len(var1)\n    for var2 in range(count-1, 0, -2):\n        var1.insert(var2, var1.pop(0) + var1.pop(0))\n    return var1\nassert f([-5, 3, -2, -3, -1, 3, 5]) == ", "input": "[-5, 3, -2, -3, -1, 3, 5]", "output": "[5, -2, 2, -5]"}
{"old_id": "sample_445", "code": "def f(var1):\n    var2 = var1.split(',')\n    for var3, var4 in enumerate(var2):\n        var2[var3] = var4.replace(' and', '+').title().replace('+', ' and')\n    return ', '.join(var2)\nassert f(\"carrot, banana, and strawberry\") == ", "input": "\"carrot, banana, and strawberry\"", "output": "'Carrot,  Banana,  and Strawberry'"}
{"old_id": "sample_446", "code": "def f(var1):\n    var2 = len(var1)\n    if var2 % 2 == 0:\n        var1.clear()\n    else:\n        var1.reverse()\n    return var1\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_447", "code": "def f(var1, var2):\n    var3 = ''\n    var1 = var1.replace('\\t', ' '*(var2-1))\n    for var4 in range(len(var1)):\n        if var1[var4] == ' ':\n            var3 += '|'\n        else:\n            var3 += var1[var4]\n    return var3\nassert f(\"\\ta\", 3) == ", "input": "\"\\ta\", 3", "output": "'||a'"}
{"old_id": "sample_448", "code": "def f(var1, var2):\n    if var2 == '':\n        var2 = None\n    return var1.endswith(var2)\nassert f('uMeGndkGh', 'kG') == ", "input": "'uMeGndkGh', 'kG'", "output": "False"}
{"old_id": "sample_449", "code": "def f(var1):\n    var2 = len(var1)\n    var3 = 0\n    while var3 < var2 and var1[var3].isdigit():\n        var3 += 1\n    return var3 == var2\nassert f('1') == ", "input": "'1'", "output": "True"}
{"old_id": "sample_450", "code": "def f(var1):\n    var1 = var1.split()\n    for var2 in range(1, len(var1), 2):\n        var1[var2] = ''.join(reversed(var1[var2]))\n    return ' '.join(var1)\nassert f('K zBK') == ", "input": "'K zBK'", "output": "'K KBz'"}
{"old_id": "sample_451", "code": "def f(var1, var2):\n    var1 = list(var1)\n    for count, var3 in enumerate(var1):\n        if var3 == var2:\n            var1.remove(var3)\n            return ''.join(var1)\n    return var1\nassert f('pn', 'p') == ", "input": "'pn', 'p'", "output": "'n'"}
{"old_id": "sample_452", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1:\n        if var3.isalpha():\n            var2 += 1\n    return var2\nassert f('l000*',) == ", "input": "'l000*',", "output": "1"}
{"old_id": "sample_453", "code": "def f(var1, var2):\n    return var1.endswith(var2)\nassert f('wrsch)xjmb8', 'c') == ", "input": "'wrsch)xjmb8', 'c'", "output": "False"}
{"old_id": "sample_454", "code": "def f(var1, count):\n    var2 = {}\n    for var3 in range(count):\n        var1 = var1.copy()\n        var2 = {**var1, **var2}\n    return var2\nassert f({'a': 2, 'b': [], 'c': {}}, 0) == ", "input": "{'a': 2, 'b': [], 'c': {}}, 0", "output": "{}"}
{"old_id": "sample_455", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1:\n        if var3.isupper():\n            var2 += 1\n    return var1.upper() if var2 >= 10 else var1\nassert f('?XyZ') == ", "input": "'?XyZ'", "output": "'?XyZ'"}
{"old_id": "sample_456", "code": "def f(var1, var2):\n    return var1.expandtabs(var2)\nassert f(\"Join us in Hungary\", 4) == ", "input": "\"Join us in Hungary\", 4", "output": "'Join us in Hungary'"}
{"old_id": "sample_457", "code": "def f(var1):\n    count = list(range(len(var1)))\n    for var2 in range(len(var1)):\n        var1.pop()\n        if len(count) > 0:\n            count.pop(0)\n    return var1\nassert f([3, 1, 7, 5, 6]) == ", "input": "[3, 1, 7, 5, 6]", "output": "[]"}
{"old_id": "sample_458", "code": "def f(var1, var2, var3):\n    var4 = str.maketrans(var2, var3)\n    return var1.translate(var4)\nassert f('mmm34mIm', 'mm3', ',po') == ", "input": "'mmm34mIm', 'mm3', ',po'", "output": "'pppo4pIp'"}
{"old_id": "sample_459", "code": "def f(var1, var2):\n    for var3 in range(1, len(var1), 2):\n        var2.update({var1[var3]: var1[var3-1]})\n\n    return var2\nassert f(['b', 'vzjmc', 'f', 'ae', '0'], dict()) == ", "input": "['b', 'vzjmc', 'f', 'ae', '0'], dict()", "output": "{'vzjmc': 'b', 'ae': 'f'}"}
{"old_id": "sample_460", "code": "def f(var1, var2):\n    var3 = len(var1)\n    var4 = '|'\n    if var2 >= var3:\n        var5 = var2 - var3\n        var4 += ' ' * (var5 // 2)\n        return var4 + var1 + var4\n    return var1\nassert f('GENERAL NAGOOR', 5) == ", "input": "'GENERAL NAGOOR', 5", "output": "'GENERAL NAGOOR'"}
{"old_id": "sample_461", "code": "def f(var1, var2):\n    return var2.startswith(var1) or False\nassert f('123', '123eenhas0') == ", "input": "'123', '123eenhas0'", "output": "True"}
{"old_id": "sample_462", "code": "def f(var1, var2):\n    var3 = len(var1)\n    var4 = list(var1)\n    if var2 not in var4:\n        var2 = var4[0]\n    return var2 * var3\nassert f('ldebgp o', 'o') == ", "input": "'ldebgp o', 'o'", "output": "'oooooooo'"}
{"old_id": "sample_463", "code": "def f(dict):\n    var1 = dict.copy()\n    var2 = []\n    for var3, var4 in dict.items():\n        if var4 in dict:\n            del var1[var3]\n    return var1\nassert f({-1: -1, 5: 5, 3: 6, -4: -4}) == ", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}"}
{"old_id": "sample_464", "code": "def f(var1):\n    if var1.isdecimal():\n        var2 = int(var1) * 4 - 50\n        var2 -= len([var3 for var3 in list(var1) if var3 not in '02468']) * 100\n        return var2\n    return 'NAN'\nassert f('0') == ", "input": "'0'", "output": "-50"}
{"old_id": "sample_465", "code": "def f(var1, var2):\n    var3 = dict.fromkeys(var1, 'north')\n    if var2:\n        var3.update(var4.strip() for var4 in var2.split(', '))\n    return var3\nassert f(['wise king', 'young king'], '') == ", "input": "['wise king', 'young king'], ''", "output": "{'wise king': 'north', 'young king': 'north'}"}
{"old_id": "sample_466", "code": "def f(var1):\n    var2 = len(var1)\n    index = 0\n    while index < var2 and var1[index].isspace():\n        index += 1\n    return var1[index:index+5]\nassert f('-----\\t\\n\\tth\\n-----') == ", "input": "'-----\\t\\n\\tth\\n-----'", "output": "'-----'"}
{"old_id": "sample_467", "code": "def f(var1):\n    copy = var1.copy()\n    var2 = dict()\n    for var3 in copy:\n        var2[var3] = len(copy[var3])\n    return var2\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_468", "code": "def f(var1, var2, var3):\n    var4 = var5 = var2\n    for var6 in range(var3):\n        if var5:\n            var1, var5 = var1.replace(var5, '', 1), None\n            var4 = var5 = var2\n    return var4.join(var1.split(var2))\nassert f('unrndqafi', 'c', 2) == ", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'"}
{"old_id": "sample_469", "code": "def f(var1, var2, var3):\n   var4 = len(var1)\n   index = var2 % (var4)\n   if var2 < 0:\n       index = var4 // 2\n   var5 = list(var1)\n   var5.insert(index, var3)\n   var5.pop(var4-1)\n   return ''.join(var5)\nassert f('sduyai', 1, 'y') == ", "input": "'sduyai', 1, 'y'", "output": "'syduyi'"}
{"old_id": "sample_470", "code": "def f(var1):\n    var2 = {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5}\n    var3 = []\n    for var4, var5 in var2.items():\n        if var5 % var1 == 0:\n            var3.append(var4)\n    return var3\nassert f(2) == ", "input": "2", "output": "['B', 'D']"}
{"old_id": "sample_471", "code": "def f(var1, var2):\n    var3 = [index for index in range(len(var2)) if var2[index] == var1]\n    if len(var3) == 0:\n        return -1\n    else:\n        return var3[0]\nassert f('o', 'fnmart') == ", "input": "'o', 'fnmart'", "output": "-1"}
{"old_id": "sample_473", "code": "def f(var1, var2):\n    var3 = list()\n    for var4 in range(len(var1)):\n        if var1[var4] == var2:\n            var3.append(var4)\n    var5 = list(var1)\n    for var4 in var3:\n        var5.remove(var2)\n    return ''.join(var5)\nassert f('scedvtvotkwqfoqn', 'o') == ", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'"}
{"old_id": "sample_474", "code": "def f(var1, var2):\n    var3 = []\n    var4 = var1.split('\\n')\n    for var5 in var4:\n        var3.append(var5.center(var2))\n    return '\\n'.join(var3)\nassert f('#[)[]>[^e>\\n 8', -5) == ", "input": "'#[)[]>[^e>\\n 8', -5", "output": "'#[)[]>[^e>\\n 8'"}
{"old_id": "sample_475", "code": "def f(var1, index):\n    if index < 0:\n        index = len(var1) + index\n    return var1[index]\nassert f([1], 0) == ", "input": "[1], 0", "output": "1"}
{"old_id": "sample_476", "code": "def f(var1, var2):\n    var3 = var1.split()\n    var1 = []\n    for var4 in var3:\n        for var5 in var4:\n            var1.append(var5)\n    if var2 in var1:\n        return True\n    else:\n        return False\nassert f(\"booty boot-boot bootclass\", 'k') == ", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False"}
{"old_id": "sample_477", "code": "def f(var1):\n    var2, var3, var4 = var1.rpartition('|')\n    if var4 == 'r':\n        var4 = var2.replace('u', 'p')\n    return var2, var4\nassert f('|xduaisf') == ", "input": "'|xduaisf'", "output": "('', 'xduaisf')"}
{"old_id": "sample_478", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        var2[var3] = var2.get(var3, 0) + 1\n    return var2\nassert f('meow meow') == ", "input": "'meow meow'", "output": "{'m': 2, 'e': 2, 'o': 2, 'w': 2, ' ': 1}"}
{"old_id": "sample_479", "code": "def f(var1, var2, var3):\n    var1.pop(var2 - 1)\n    var1.pop(var3 - 1)\n    return var1\nassert f([1, 5, 2, 3, 6], 2, 4) == ", "input": "[1, 5, 2, 3, 6], 2, 4", "output": "[1, 2, 3]"}
{"old_id": "sample_480", "code": "def f(var1, var2, var3):\n    if var1 == '':\n        return var1\n    var4 = var1.split(var2)\n    for index, var5 in enumerate(var4):\n        if var2 in var5:\n            var4[index] = var5.replace(var2, var3, 1)\n    return var2.join(var4)\nassert f('', 'mi', 'siast') == ", "input": "'', 'mi', 'siast'", "output": "''"}
{"old_id": "sample_481", "code": "def f(values, var1, var2):\n    if values[-1] == var2:\n        if values[0] not in values[1:]:\n            values.append(values[0])\n    elif values[-1] == var1:\n        if values[0] == var2:\n            values.append(values[0])\n    return values\nassert f([1, 1], 2, 3) == ", "input": "[1, 1], 2, 3", "output": "[1, 1]"}
{"old_id": "sample_482", "code": "def f(var1):\n    return var1.replace('\\\\\"', '\"')\nassert f('Because it intrigues them') == ", "input": "'Because it intrigues them'", "output": "'Because it intrigues them'"}
{"old_id": "sample_483", "code": "def f(var1, var2):\n    return ' '.join(var1.split(var2, len(var1)))\nassert f('a', 'a') == ", "input": "'a', 'a'", "output": "' '"}
{"old_id": "sample_484", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        try:\n            if var3.isnumeric():\n                var2.append(int(var3)*2)\n        except ValueError:\n            var2.append(var3[::-1])\n    return var2\nassert f(['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']) == ", "input": "['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']", "output": "[182, 32]"}
{"old_id": "sample_485", "code": "def f(var1):\n    var1 = var1.split()\n    if len(var1) == 2:\n        var1 = list(reversed(var1))\n    var2 = ' '.join([var1[0].ljust(5), var1[1].ljust(5)])\n    return var2\nassert f('gsd avdropj') == ", "input": "'gsd avdropj'", "output": "'avdropj gsd  '"}
{"old_id": "sample_486", "code": "def f(var1):\n    var2 = var1.copy()\n    for var3, var4 in var1.items():\n        var2[var3] = var4 * var4\n    return var2\nassert f({1:1, 2:2, 3:3}) == ", "input": "{1:1, 2:2, 3:3}", "output": "{1: 1, 2: 4, 3: 9}"}
{"old_id": "sample_487", "code": "def f(dict):\n    var1 = []\n    for var2 in dict.keys():\n        if var2 % 2 == 0:\n            var1.append(var2)\n    return var1\nassert f({ 4: 'a' }) == ", "input": "{ 4: 'a' }", "output": "[4]"}
{"old_id": "sample_488", "code": "def f(var1, var2):\n    count = var1.count(var2)\n    var3 = list(var1)\n    if count > 0:\n        index = var3.index(var2) + 1\n        var3[:index:index+1] = [var4 for var4 in var3[index:index+count:1]]\n    return ''.join(var3)\nassert f('tezmgvn 651h', '6') == ", "input": "'tezmgvn 651h', '6'", "output": "'5ezmgvn 651h'"}
{"old_id": "sample_489", "code": "def f(var1, var2):\n    return var1.removeprefix(var2.lower())\nassert f('coscifysu', 'cos') == ", "input": "'coscifysu', 'cos'", "output": "'cifysu'"}
{"old_id": "sample_490", "code": "def f(var1):\n    return ''.join([var2 for var2 in var1 if var2.isspace()])\nassert f( '\\ngiyixjkvu\\n\\r\\r \\frgjuo') == ", "input": " '\\ngiyixjkvu\\n\\r\\r \\frgjuo'", "output": "'\\n\\n\\r\\r \\x0c'"}
{"old_id": "sample_491", "code": "def f(var1):\n    for var2 in range(-1, -len(var1)-1, -1):\n        var1.extend([var1[var2], var1[var2]])\n    return var1\nassert f([4, 8, 8, 5]) == ", "input": "[4, 8, 8, 5]", "output": "[4, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5]"}
{"old_id": "sample_492", "code": "def f(var1, var2):\n    var3 = list(var1)\n    if (var3.count(var2)) % 2 == 0:\n        while var2 in var3:\n            var3.remove(var2)\n    else:\n        var3.clear()\n    return ''.join(var3)\nassert f('abbkebaniuwurzvr', 'm') == ", "input": "'abbkebaniuwurzvr', 'm'", "output": "'abbkebaniuwurzvr'"}
{"old_id": "sample_493", "code": "def f(var1):\n    keys = []\n    for var2 in var1:\n        keys.append('%s => %s' % (var2, var1[var2]))\n    return keys\nassert f({'-4':'4','1':'2','-':'-3'}) == ", "input": "{'-4':'4','1':'2','-':'-3'}", "output": "['-4 => 4', '1 => 2', '- => -3']"}
{"old_id": "sample_494", "code": "def f(var1, var2):\n    var3 = \"\"\n    while var2 > len(var1):\n        var3 += '0'\n        var2 -= 1\n    return var3 + var1\nassert f(\"1\", 3) == ", "input": "\"1\", 3", "output": "'001'"}
{"old_id": "sample_495", "code": "def f(var1):\n    if str.isascii(var1[-5:]):\n        return var1[-5:], var1[0:][:3]\n    elif str.isascii(var1[:5]):\n        return var1[:5], var1[-5:][3:]\n    else:\n        return var1\nassert f('a1234år') == ", "input": "'a1234år'", "output": "('a1234', 'år')"}
{"old_id": "sample_496", "code": "def f(var1, var2):\n    if isinstance(var2, str):\n        return var1.count(var2) + var1.count(var2.lower())\n    return var1.count(var2)\nassert f('eftw{ьТсk_1', '\\\\') == ", "input": "'eftw{ьТсk_1', '\\\\'", "output": "0"}
{"old_id": "sample_497", "code": "def f(var1):\n    var2 = list(str(var1))\n    for var3 in range(2,len(var2)): var2[var3] += '+'\n    return var2\nassert f(44) == ", "input": "44", "output": "['4', '4']"}
{"old_id": "sample_498", "code": "def f(var1, var2, var3):\n    var1[var2:var2] = (var3,)\n    return var1\nassert f([2, 2, 2, 3, 3], 2, 3) == ", "input": "[2, 2, 2, 3, 3], 2, 3", "output": "[2, 2, 3, 2, 3, 3]"}
{"old_id": "sample_499", "code": "def f(var1, var2, var3):\n    var4 = len(var1)\n    return var1.center(var2, var3)\nassert f('magazine', 25, '.') == ", "input": "'magazine', 25, '.'", "output": "'.........magazine........'"}
{"old_id": "sample_500", "code": "def f(var1, var2):\n    return var1[:var1[::-1].find(var2)][::-1]\nassert f('dsj osq wi w', ' ') == ", "input": "'dsj osq wi w', ' '", "output": "'d'"}
{"old_id": "sample_501", "code": "def f(var1, var2):\n    index = var1.rindex(var2)\n    var3 = list(var1)\n    while index > 0:\n        var3[index] = var3[index-1]\n        var3[index-1] = var2\n        index -= 2\n    return ''.join(var3)\nassert f('qpfi jzm', 'j') == ", "input": "'qpfi jzm', 'j'", "output": "'jqjfj zm'"}
{"old_id": "sample_502", "code": "def f(var1):\n    return '*'.join(var1.split(' '))\nassert f('Fred Smith') == ", "input": "'Fred Smith'", "output": "'Fred*Smith'"}
{"old_id": "sample_503", "code": "def f(var1):\n    var2 = [None] * len(var1)\n    var3 = var4 = 0\n    while var1:\n        var2[var3] = var1.popitem(var3 == var4)\n        var3, var4 = var4, (var4+1) % len(var2)\n    return var2\nassert f({}) == ", "input": "{}", "output": "[]"}
{"old_id": "sample_504", "code": "def f(values):\n    values.sort()\n    return values\nassert f([1, 1, 1, 1]) == ", "input": "[1, 1, 1, 1]", "output": "[1, 1, 1, 1]"}
{"old_id": "sample_505", "code": "def f(var1):\n    while var1:\n        if var1[-1].isalpha():\n            return var1\n        var1 = var1[:-1]\n    return var1\nassert f('--4/0-209') == ", "input": "'--4/0-209'", "output": "''"}
{"old_id": "sample_506", "code": "def f(var1):\n    var2 = ''\n    if var1%2 == 1:\n        var2+='sn'\n    else:\n        return var1*var1\n    for var3 in range(1, var1+1):\n        if var3%2 == 0:\n            var2+='to'\n        else:\n            var2+='ts'\n    return var2\nassert f(1) == ", "input": "1", "output": "'snts'"}
{"old_id": "sample_507", "code": "def f(var1, var2):\n    var3 = var1.lower()\n    return var3.find(var2.lower())\nassert f('car hat', 'car') == ", "input": "'car hat', 'car'", "output": "0"}
{"old_id": "sample_508", "code": "def f(var1, var2, var3):\n    var4 = var1.rsplit(var2, var3)\n    var5 = len(var4)\n    var6 = var4[:var5 // 2]\n    var6.reverse()\n    var6 += var4[var5 // 2:]\n    return var2.join(var6)\nassert f('ertubwi', 'p', 5) == ", "input": "'ertubwi', 'p', 5", "output": "'ertubwi'"}
{"old_id": "sample_509", "code": "def f(var1, var2):\n    if var1 >= 0:\n        return str(var1).zfill(var2)\n\n    if var1 < 0:\n        return '-' + str(-var1).zfill(var2)\n    return ''\nassert f(5, 1) == ", "input": "5, 1", "output": "'5'"}
{"old_id": "sample_510", "code": "def f(var1, var2, var3, var4, var5):\n    var6 = var4\n    if var6 in var1:\n        var7 = var1.pop(var6)\n    if var2 > 3:\n        return ''.join(var3)\n    else:\n        return var7\nassert f({7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0) == ", "input": "{7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0", "output": "'Wy'"}
{"old_id": "sample_511", "code": "def f(var1, var2):\n    var3 = dict((var4, '') for var4 in var1)\n    var3.update(var2)\n    return var3\nassert f(('ct', 'c', 'ca'), {'ca': 'cx'}) == ", "input": "('ct', 'c', 'ca'), {'ca': 'cx'}", "output": "{'ct': '', 'c': '', 'ca': 'cx'}"}
{"old_id": "sample_512", "code": "def f(var1):\n    return len(var1) == var1.count('0') + var1.count('1')\nassert f('102') == ", "input": "'102'", "output": "False"}
{"old_id": "sample_513", "code": "def f(var1):\n    while -1 in var1:\n        var1.pop(-3)\n    while 0 in var1:\n        var1.pop()\n    while 1 in var1:\n        var1.pop(0)\n    return var1\nassert f([0, 2]) == ", "input": "[0, 2]", "output": "[]"}
{"old_id": "sample_514", "code": "def f(var1):\n    for var2 in var1.split():\n        var1 = var1.replace('-{}'.format(var2), ' ').replace('{}-'.format(var2), ' ')\n    return var1.strip('-')\nassert f('-stew---corn-and-beans-in soup-.-') == ", "input": "'-stew---corn-and-beans-in soup-.-'", "output": "'stew---corn-and-beans-in soup-.'"}
{"old_id": "sample_515", "code": "def f(var1):\n    var2 = var1.copy()\n    var2.reverse()\n    var2[:] = [var3 * 2 for var3 in var2]\n    return var2\nassert f([1, 2, 3, 4, 5]) == ", "input": "[1, 2, 3, 4, 5]", "output": "[10, 8, 6, 4, 2]"}
{"old_id": "sample_516", "code": "def f(var1, var2):\n    list = [var3 for var3 in var1 if var3.startswith(var2)]\n    return sorted(list, key=len)\nassert f(['condor', 'eyes', 'gay', 'isa' ], 'd') == ", "input": "['condor', 'eyes', 'gay', 'isa' ], 'd'", "output": "[]"}
{"old_id": "sample_517", "code": "def f(var1):\n    for var2 in range(len(var1)-1, 0, -1):\n        if not var1[var2].isupper():\n            return var1[0:var2]\n    return ''\nassert f('SzHjifnzog') == ", "input": "'SzHjifnzog'", "output": "'SzHjifnzo'"}
{"old_id": "sample_518", "code": "def f(var1):\n    return not var1.isdecimal()\nassert f('the speed is -36 miles per hour') == ", "input": "'the speed is -36 miles per hour'", "output": "True"}
{"old_id": "sample_519", "code": "def f(var1):\n    var1['luck'] = 42\n    var1.clear()\n    return {1: False, 2 :0}\nassert f({}) == ", "input": "{}", "output": "{1: False, 2: 0}"}
{"old_id": "sample_520", "code": "def f(var1):\n    while len(var1) != 1:\n        var1.append(var1.pop(0))\n    return var1[0]\nassert f([6]) == ", "input": "[6]", "output": "6"}
{"old_id": "sample_521", "code": "def f(var1):\n    var2 = max(var1)\n    for var3 in range(var2):\n        var1.reverse()\n    return var1\nassert f([43, 0, 4, 77, 5, 2, 0, 9, 77]) == ", "input": "[43, 0, 4, 77, 5, 2, 0, 9, 77]", "output": "[77, 9, 0, 2, 5, 77, 4, 0, 43]"}
{"old_id": "sample_522", "code": "def f(var1):\n    var2 = [var3 % 1 for var3 in var1]\n    return var2 if 1 in var2 else []\nassert f(range(100, 120)) == ", "input": "range(100, 120)", "output": "[]"}
{"old_id": "sample_523", "code": "def f(var1):\n    var1 = list(var1)\n    for var2 in range(len(var1)-1, -1, -1):\n        if var1[var2].isspace():\n            var1[var2] = '&nbsp;'\n    return ''.join(var1)\nassert f('   ') == ", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'"}
{"old_id": "sample_524", "code": "def f(var1):\n    var2 = var1.copy()\n    for var3 in range(len(var2)-1):\n        var1[sorted(var2)[var3]] = var3\n    return var1\nassert f({2: 5, 4: 1, 3: 5, 1: 3, 5: 1}) == ", "input": "{2: 5, 4: 1, 3: 5, 1: 3, 5: 1}", "output": "{2: 1, 4: 3, 3: 2, 1: 0, 5: 1}"}
{"old_id": "sample_525", "code": "def f(var1, var2, var3):\n    var4 = {}\n    var5, var6 = 0, 0\n    for var7, var8 in var1.items():\n        var4[var8] = var7\n        if var8 == var2:\n            var5 = var7\n        if var8 == var3:\n            var6 = var7\n    var9 = var4[var2]\n    return (var9, var6) if var5 > var6 else (var6, var9)\nassert f({'TEXT': 7, 'CODE': 3}, 7, 3) == ", "input": "{'TEXT': 7, 'CODE': 3}, 7, 3", "output": "('TEXT', 'CODE')"}
{"old_id": "sample_526", "code": "def f(var1, var2, var3, index):\n    var4 = var1.rindex(var2)\n    if var4 >= index:\n        return var3[:var4 - index + 1]\n    return var1 + var3[index - var4 - 1:]\nassert f('ekwies', 's', 'rpg', 1) == ", "input": "'ekwies', 's', 'rpg', 1", "output": "'rpg'"}
{"old_id": "sample_527", "code": "def f(var1, var2):\n    return var1.ljust(len(var2), \"?\")\nassert f(\"!?\", \"\") == ", "input": "\"!?\", \"\"", "output": "'!?'"}
{"old_id": "sample_528", "code": "def f(var1):\n    var2 = ''\n    var3 = ''\n    for var4 in var1:\n        var3 = var3 + var4\n        if var1.rfind(var3) > -1:\n            return var1.rfind(var3)\n    return 0\nassert f('papeluchis') == ", "input": "'papeluchis'", "output": "2"}
{"old_id": "sample_529", "code": "def f(var1):\n    var2 = var1[0]\n    var3 = var1[:]\n    for var4 in range(1, len(var1)):\n        if var2 != var1[var4]:\n            var3[var4] = var1[var4]\n        else:\n            del var3[var4]\n        var2 = var1[var4]\n    return var3\nassert f([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_530", "code": "def f(var1, var2):\n    var3 = var1\n    if var2 in var1:\n        var3 = var1.lstrip(var2)\n        if len(var3) == 0:\n            var3 = var3 + '!?'\n    else:\n        return 'no'\n    return var3\nassert f(\"@@@ff\", '@') == ", "input": "\"@@@ff\", '@'", "output": "'ff'"}
{"old_id": "sample_531", "code": "def f(var1, var2):\n    if var1.removeprefix(var2) == var1:\n        return f(var1[1:], var2)\n    else:\n        return var1\nassert f(\"Ibaskdjgblw asdl \", \"djgblw\") == ", "input": "\"Ibaskdjgblw asdl \", \"djgblw\"", "output": "'djgblw asdl '"}
{"old_id": "sample_532", "code": "def f(var1, var2):\n    var3 = [var2.copy()] \n    for var4 in range(var1):\n        var5 = var2.copy()\n        var5.extend(var3[-1])\n        var3.append(var5)\n    return var3\nassert f(1, [1, 2, 3]) == ", "input": "1, [1, 2, 3]", "output": "[[1, 2, 3], [1, 2, 3, 1, 2, 3]]"}
{"old_id": "sample_533", "code": "def f(var1, var2):\n    var3 = 0\n    for (var4, var5) in var2.items():\n        if var4[0] == var1 and len(var4) == 3:\n            var3 -= var5\n        elif var4[-1] == var1 and len(var4) == 3:\n            var3 += var5\n    return var3\nassert f('a', {}) == ", "input": "'a', {}", "output": "0"}
{"old_id": "sample_534", "code": "def f(var1, var2):\n    var3 = max(var1.index(var2) - len(var1) // 3, 0)\n    var4 = ''\n    for var5, var6 in enumerate(var1[var3:]):\n        if var6 == '+':\n            var4 += var2\n        else:\n            var4 += var1[var3 + var5]\n    return var4\nassert f('hosu', 'o') == ", "input": "'hosu', 'o'", "output": "'hosu'"}
{"old_id": "sample_535", "code": "def f(var1):\n    for var1 in str(var1):\n        if var1 not in \"012\" and var1 not in list(range(5, 10)):\n            return False\n    return True\nassert f(1341240312) == ", "input": "1341240312", "output": "False"}
{"old_id": "sample_536", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1:\n        if var3.isdigit():\n            var2 += 1\n    return var2\nassert f('C24Bxxx982ab') == ", "input": "'C24Bxxx982ab'", "output": "5"}
{"old_id": "sample_537", "code": "def f(var1, var2):\n    var3 = list(var1)\n    try:\n        var3.append(var2)\n        var4 = len(var3)\n    except IndexError:\n        var4 = 0\n    return '[' + str(var4) + ']'\nassert f('abv', 'a') == ", "input": "'abv', 'a'", "output": "'[4]'"}
{"old_id": "sample_538", "code": "def f(var1, var2):\n    return var1[:var2].center(var2, 'z')\nassert f('0574', 9) == ", "input": "'0574', 9", "output": "'zzz0574zz'"}
{"old_id": "sample_539", "code": "def f(var1):\n    var2 = var1\n    var3 = var1\n\n    while True:\n        var2.append('_')\n        if var2 == var3:\n            var3[var2.index('_')] = ''\n            break\n        \n    return var3\nassert f([]) == ", "input": "[]", "output": "['']"}
{"old_id": "sample_540", "code": "def f(var1):\n    var2 = var1.copy()\n    for var3 in range(0, len(var1) - 1, 2):\n        var2.insert(var3 + 1, var2[var3])\n    var2.append(var2[0])\n    return var2\nassert f([5, 5, 5, 6, 4, 9]) == ", "input": "[5, 5, 5, 6, 4, 9]", "output": "[5, 5, 5, 5, 5, 5, 6, 4, 9, 5]"}
{"old_id": "sample_541", "code": "def f(var1):\n    return ''.join(list(var1)).isspace()\nassert f(' \\t  \\u3000') == ", "input": "' \\t  \\u3000'", "output": "True"}
{"old_id": "sample_542", "code": "def f(var1, var2, var3):\n    try:\n        return var1.rsplit(var2, var3)\n    except:\n        return var1.rsplit()\nassert f('ab cd', 'x', 2) == ", "input": "'ab cd', 'x', 2", "output": "['ab cd']"}
{"old_id": "sample_543", "code": "def f(var1):\n    var2 = var1.replace('. ', ' , ').replace('&#33; ', '! ').replace('. ', '? ').replace('. ', '. ')\n    return var2[0].upper() + var2[1:]\nassert f('.,,,,,. منبت') == ", "input": "'.,,,,,. منبت'", "output": "'.,,,,, , منبت'"}
{"old_id": "sample_544", "code": "def f(var1):\n    var2 = var1.split('\\n')\n    var3 = []\n    for var4 in range(len(var2)):\n        var5 = var2[var4].replace('\\t', '    ')\n        var3.append(var5)\n    return '\\n'.join(var3)\nassert f(\"\\t\\t\\ttab tab tabulates\") == ", "input": "\"\\t\\t\\ttab tab tabulates\"", "output": "'            tab tab tabulates'"}
{"old_id": "sample_545", "code": "def f(var1):\n    var2 = []\n    index = 0\n    while index < len(var1):\n        var2.append(var1.pop())\n        index += 2\n    return var2\nassert f([8, 8, -4, -9, 2, 8, -1, 8]) == ", "input": "[8, 8, -4, -9, 2, 8, -1, 8]", "output": "[8, -1, 8]"}
{"old_id": "sample_546", "code": "def f(var1, var2):\n    while var1.startswith(var2):\n        var1 = var1[len(var2):]\n    return var1\nassert f('[CHARRUNNERS]Do you know who the other was? [NEGMENDS]', '[CHARRUNNERS]') == ", "input": "'[CHARRUNNERS]Do you know who the other was? [NEGMENDS]', '[CHARRUNNERS]'", "output": "'Do you know who the other was? [NEGMENDS]'"}
{"old_id": "sample_547", "code": "def f(var1):\n    var2 = var1.strip(\"., !?*\")\n    return \"....\".join(var2.split(\" \"))\nassert f(\"h,e,l,l,o,wo,r,ld,\") == ", "input": "\"h,e,l,l,o,wo,r,ld,\"", "output": "'h,e,l,l,o,wo,r,ld'"}
{"old_id": "sample_548", "code": "def f(var1, var2):\n    if var2 and var1 and var1.endswith(var2):\n        return var1.removesuffix(var2)\n    else:\n        return var1\nassert f('spider', 'ed') == ", "input": "'spider', 'ed'", "output": "'spider'"}
{"old_id": "sample_549", "code": "def f(var1):\n    var1.reverse()\n    var2 = []\n    for var3 in var1:\n        max(var3)\n        var3.sort(reverse = True)\n        var2.append(var3)\n    return var2\nassert f([[1, 1, 1, 1]]) == ", "input": "[[1, 1, 1, 1]]", "output": "[[1, 1, 1, 1]]"}
{"old_id": "sample_550", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        var1.insert(var2, var1[var2]**2)\n    return var1\nassert f([1, 2, 4]) == ", "input": "[1, 2, 4]", "output": "[1, 1, 1, 1, 2, 4]"}
{"old_id": "sample_551", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        for var4 in var1[var3]:\n            if var4 not in var2:\n                var2.append(var4)\n    return sorted(var2)\nassert f({'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}) == ", "input": "{'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}", "output": "['a', 'b', 'c', 'inf']"}
{"old_id": "sample_552", "code": "def f(var1):\n    var2 = {}\n    for var3, var4 in var1.items():\n        if isinstance(var3, float):\n            for var5 in var4:\n                var2[var5] = var3\n        else:\n            var2[var3] = var4\n    return var2\nassert f({2: 0.76, 5: [3, 6, 9, 12]}) == ", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}"}
{"old_id": "sample_553", "code": "def f(var1, count):\n    for var2 in range(count):\n        var1 = var1[::-1]\n    return var1\nassert f('439m2670hlsw', 3) == ", "input": "'439m2670hlsw', 3", "output": "'wslh0762m934'"}
{"old_id": "sample_554", "code": "def f(var1):\n    return list(reversed(var1))\nassert f([2, 0, 1, 9999, 3, -5]) == ", "input": "[2, 0, 1, 9999, 3, -5]", "output": "[-5, 3, 9999, 1, 0, 2]"}
{"old_id": "sample_555", "code": "def f(var1, var2):\n    var1 = var1.replace('\\n', '_____')\n    var1 = var1.replace('\\t', var2 * ' ')\n    var1 = var1.replace('_____', '\\n')\n    return var1\nassert f(\"odes\\tcode\\twell\", 2) == ", "input": "\"odes\\tcode\\twell\", 2", "output": "'odes  code  well'"}
{"old_id": "sample_556", "code": "def f(var1):\n    for var2 in range(len(var1)):\n        if var1[var2] == ' ':\n            var1 = var1.replace(' ', '\\t', 1)\n    return var1.expandtabs(4)\nassert f('\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te') == ", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'"}
{"old_id": "sample_557", "code": "def f(str):\n    var1 = str.rpartition('ar')\n    return ' '.join((var1[0], var1[1], var1[2]))\nassert f('xxxarmmarxx') == ", "input": "'xxxarmmarxx'", "output": "'xxxarmm ar xx'"}
{"old_id": "sample_558", "code": "def f(var1, var2):\n    for var3 in var2:\n        var1.pop(var1.index(var3))\n    var1.sort()\n    for var3 in var2:\n        var1 += [var3]\n    for var4 in range(len(var1)-1):\n        if var1[var4] > var1[var4+1]:\n            return False\n    return True\nassert f([3, 1, 2, 1, 4, 1], [1]) == ", "input": "[3, 1, 2, 1, 4, 1], [1]", "output": "False"}
{"old_id": "sample_559", "code": "def f(var1):\n    var1 = str(var1)\n    return var1[0] + '.'+var1[1:].replace('-', '_')\nassert f(\"first-second-third\") == ", "input": "\"first-second-third\"", "output": "'f.irst_second_third'"}
{"old_id": "sample_560", "code": "def f(var1):\n    var2 = 0\n    if var1.islower():\n        for var3 in var1:\n            if int(var3) in list(range(90)):\n                var2+=1\n    return var2\nassert f(\"591237865\") == ", "input": "\"591237865\"", "output": "0"}
{"old_id": "sample_561", "code": "def f(var1, var2):\n    #var3 var4 var5? var6 count var7 var2\n    count = var1.count(var2)\n    return int(var2) * count\nassert f('7Ljnw4Lj', '7') == ", "input": "'7Ljnw4Lj', '7'", "output": "7"}
{"old_id": "sample_562", "code": "def f(var1):\n    return var1.upper() == str(var1)\nassert f('VTBAEPJSLGAHINS') == ", "input": "'VTBAEPJSLGAHINS'", "output": "True"}
{"old_id": "sample_563", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in range(len(var2)):\n        var3.append(var1.count(var2[var4]))\n    return sum(var3)\nassert f('jivespdcxc', 'sx') == ", "input": "'jivespdcxc', 'sx'", "output": "2"}
{"old_id": "sample_564", "code": "def f(var1):\n    var1[1].clear()\n    var1[2] += var1[1]\n    return var1[0]\nassert f([[395, 666, 7, 4], [], [4223, 111]]) == ", "input": "[[395, 666, 7, 4], [], [4223, 111]]", "output": "[395, 666, 7, 4]"}
{"old_id": "sample_565", "code": "def f(var1):\n    return max(var1.find(var2) for var2 in 'aeiou')\nassert f(\"qsqgijwmmhbchoj\") == ", "input": "\"qsqgijwmmhbchoj\"", "output": "13"}
{"old_id": "sample_567", "code": "def f(var1, var2):\n    var3 = var1.rsplit()\n    var4 = []\n    while len(var3) >= var2:\n        var4 += var3[-var2:]\n        var3 = var3[:-var2]\n    return var3 + ['_'.join(var4)]\nassert f('one two three four five', 3) == ", "input": "'one two three four five', 3", "output": "['one', 'two', 'three_four_five']"}
{"old_id": "sample_568", "code": "def f(var1):\n    var2 = 1\n    for var3 in '1234567890':\n        var1 = var1.replace(var3,'')\n        if len(var1) == 0: break\n        var1 = var1[var2:] + var1[:var2]\n        var2 += 1\n    return var1\nassert f('bwmm7h') == ", "input": "'bwmm7h'", "output": "'mhbwm'"}
{"old_id": "sample_569", "code": "def f(var1):\n    var2 = {}\n    for var3 in var1:\n        if var3 in var2:\n            var2[var3] += 1\n        else:\n            var2[var3] = 1\n    return sum(var2.values())\nassert f(\"11 1 1\") == ", "input": "\"11 1 1\"", "output": "6"}
{"old_id": "sample_570", "code": "def f(var1, index, var2):\n    var1.insert(0, index + 1)\n    if var2 >= 1:\n        var1.insert(index, var2)\n    return var1\nassert f([2], 0, 2) == ", "input": "[2], 0, 2", "output": "[2, 1, 2]"}
{"old_id": "sample_572", "code": "def f(var1, var2):\n    var3 = {}\n    var4 = list(var1.items())\n    for var5 in range(len(var4) - 1, var2 - 1, -1):\n        var3[var4[var5]] = None\n    return var4[var2:] + list(var3.items())\nassert f({1: 9, 2: 10, 3: 1}, 1) == ", "input": "{1: 9, 2: 10, 3: 1}, 1", "output": "[(2, 10), (3, 1), ((3, 1), None), ((2, 10), None)]"}
{"old_id": "sample_573", "code": "def f(var1, var2):\n    if var1.startswith(var2):\n        return var1.removeprefix(var2)\n    return var1\nassert f(\"Vipra\", \"via\") == ", "input": "\"Vipra\", \"via\"", "output": "'Vipra'"}
{"old_id": "sample_574", "code": "def f(var1):\n    while var1:\n        pop = var1.pop()\n        if pop == pop.title():\n            return pop\n    return pop\nassert f(['George', 'Michael', 'George', 'Costanza']) == ", "input": "['George', 'Michael', 'George', 'Costanza']", "output": "'Costanza'"}
{"old_id": "sample_575", "code": "def f(var1, var2):\n    var3 = []\n    [var3.extend([var4] * var2) for var4 in var1]\n    return sum(var3)\nassert f([10, 4], 3) == ", "input": "[10, 4], 3", "output": "42"}
{"old_id": "sample_576", "code": "def f(var1, var2):\n    var3 = ['x']\n    for var4 in range(1, len(var1) + 1):\n        if var4 % 2 != 0:\n            var3.append(var1[var4 - 1] * -2)\n        else:\n            var3.append(var2)\n    return var3\nassert f([1, 2, 3], -1) == ", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]"}
{"old_id": "sample_577", "code": "def f(items):\n    var1 = []\n    for var2 in items:\n        var3 = dict(items).copy()\n        var3.popitem()\n        var1.append(var3)\n        items = var3\n    return var1\nassert f([(1, 'pos')]) == ", "input": "[(1, 'pos')]", "output": "[{}]"}
{"old_id": "sample_578", "code": "def f(var1):\n    for var2, var3 in var1.items():\n        if var3 >= 0:\n            var1[var2] = -var3\n    return var1\nassert f({'R': 0, 'T': 3, 'F': -6, 'K': 0}) == ", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}"}
{"old_id": "sample_579", "code": "def f(var1):\n    if var1.istitle():\n        if len(var1) > 1 and var1.lower() != var1:\n            return var1[0].lower() + var1[1:]\n    elif var1.isalpha():\n        return var1.capitalize()\n    return var1\nassert f('') == ", "input": "''", "output": "''"}
{"old_id": "sample_580", "code": "def f(var1, var2):\n    var3 = var1\n    var4 = []\n    while var2 in var3:\n        var4.append(var3.index(var2))\n        var3 = var3.replace(var2,\"\",1)\n    return var4\nassert f('rvr', 'r') == ", "input": "'rvr', 'r'", "output": "[0, 1]"}
{"old_id": "sample_581", "code": "def f(var1, var2):\n    var3 = len(var1)\n    var4 = list(var1)\n    var2 = list(var2)\n    for var5 in range(len(var2)):\n        var4.insert((var5 * var3 - 1) // 2 + (var5 + 1) // 2, var2[var5])\n    return ''.join(var4)\nassert f('akoon', 'sXo') == ", "input": "'akoon', 'sXo'", "output": "'akoXoosn'"}
{"old_id": "sample_582", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in range(var1):\n        var3.append(var2)\n    return var3\nassert f(7, 5) == ", "input": "7, 5", "output": "[5, 5, 5, 5, 5, 5, 5]"}
{"old_id": "sample_583", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in var1.splitlines():\n        if len(var4) > 0 and var4[0] == var2:\n            var3.append(var4.lower())\n        else:\n            var3.append(var4.upper())\n    return \"\\n\".join(var3)\nassert f(\"t\\nza\\na\", \"t\") == ", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'"}
{"old_id": "sample_584", "code": "def f(var1):\n    return var1.format(*('0'*20,))\nassert f(\"5123807309875480094949830\") == ", "input": "\"5123807309875480094949830\"", "output": "'5123807309875480094949830'"}
{"old_id": "sample_585", "code": "def f(var1):\n    count = var1.count(var1[0])\n    var2 = list(var1)\n    for var3 in range(count):\n        var2.remove(var2[0])\n    return ''.join(var2)\nassert f(';,,,?') == ", "input": "';,,,?'", "output": "',,,?'"}
{"old_id": "sample_586", "code": "def f(var1, var2):\n    return var1.rindex(var2)\nassert f(\"breakfast\", \"e\") == ", "input": "\"breakfast\", \"e\"", "output": "2"}
{"old_id": "sample_587", "code": "def f(var1, var2):\n    var3 = dict.fromkeys(var1, var2)\n    return var3\nassert f([0, 1, 1, 2], 'abcca') == ", "input": "[0, 1, 1, 2], 'abcca'", "output": "{0: 'abcca', 1: 'abcca', 2: 'abcca'}"}
{"old_id": "sample_588", "code": "def f(items, var1):\n    if var1 in items:\n        return items.index(var1)\n    return -1\nassert f(['''1''', '+', '-', '**', '//', '*', '+'], '**') == ", "input": "['''1''', '+', '-', '**', '//', '*', '+'], '**'", "output": "3"}
{"old_id": "sample_589", "code": "def f(var1):\n    var1.append(var1[-1])\n    return var1\nassert f([-70, 20, 9, 1]) == ", "input": "[-70, 20, 9, 1]", "output": "[-70, 20, 9, 1, 1]"}
{"old_id": "sample_590", "code": "def f(var1):\n    for var2 in range(10, 0, -1):\n        var1 = var1.lstrip(str(var2))\n    return var1\nassert f(\"25000   $\") == ", "input": "\"25000   $\"", "output": "'5000   $'"}
{"old_id": "sample_591", "code": "def f(var1): \n    var2 = [0] * 9 \n    var3 = [] \n    for var4 in var1: var2[var4 - 1] += 1 \n    for var5 in range(len(var2)): \n        while var2[var5] > 0: \n            var2[var5] -= 1 \n            var3.append(var5 + 1)\n    return var2, var3\nassert f([6, 3, 0, 7, 4, 8]) == ", "input": "[6, 3, 0, 7, 4, 8]", "output": "([0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 6, 7, 8, 9])"}
{"old_id": "sample_592", "code": "def f(var1):\n    var2 = []\n    for var3, var4 in enumerate(var1):\n        var2.append(var1[len(var1)-1-var3])\n    return var2\nassert f([11, 3]) == ", "input": "[11, 3]", "output": "[3, 11]"}
{"old_id": "sample_593", "code": "def f(var1, var2):\n    var3 = len(var1) - 1\n    for var4 in range(-len(var1), 0):\n        var1.insert(var3, var1[var4])\n    return var1\nassert f([], 14) == ", "input": "[], 14", "output": "[]"}
{"old_id": "sample_594", "code": "def f(var1):\n    return var1.index('\\n')\nassert f(\"n wez szize lnson tilebi it 504n.\\n\") == ", "input": "\"n wez szize lnson tilebi it 504n.\\n\"", "output": "33"}
{"old_id": "sample_595", "code": "def f(var1, var2):\n    if var1.startswith(var2):\n        var1 = var1.removeprefix(var2)\n    var1 = var1.capitalize()\n    return var1\nassert f('qdhstudentamxupuihbuztn', 'jdm') == ", "input": "'qdhstudentamxupuihbuztn', 'jdm'", "output": "'Qdhstudentamxupuihbuztn'"}
{"old_id": "sample_596", "code": "def f(var1, var2):\n    var1 = sorted(var1)\n    if var1.index(var2) % 2 == 0:\n        return var1[::-1]\n    return var1\nassert f(['8', '9', '7', '4', '3', '2'], '9') == ", "input": "['8', '9', '7', '4', '3', '2'], '9'", "output": "['2', '3', '4', '7', '8', '9']"}
{"old_id": "sample_597", "code": "def f(var1):\n    return var1.upper()\nassert f(\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\") == ", "input": "\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\"", "output": "'JAAFODSFA SODOFJ AOAFJIS  JAFASIDFSA1'"}
{"old_id": "sample_598", "code": "def f(var1, var2):\n    var3 = len(var1)\n    return var1[var3*(var2%4):var3 ]\nassert f('abc', 1) == ", "input": "'abc', 1", "output": "''"}
{"old_id": "sample_599", "code": "def f(var1, var2):\n    var1 = var2.join(var1)\n    var3 = []\n    for var4 in range(1, len(var1)+1, 2):\n        var3.append(var1[var4-1:][:var4])\n        var3.append(var1[var4-1:][var4:])\n    return var3\nassert f([\"a\", \"b\", \"c\"], \" \") == ", "input": "[\"a\", \"b\", \"c\"], \" \"", "output": "['a', ' b c', 'b c', '', 'c', '']"}
{"old_id": "sample_600", "code": "def f(var1):\n    var2 = list(map(lambda var3: 'n'*var3, var1))\n    var4 = []\n    for var5 in var2:\n        var4.append(var5)\n    return var4\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_601", "code": "def f(var1):\n    var2 = 5\n    var3 = []\n    for var4 in var1:\n        if var4.lower() in 'aeiouy':\n            var3.append(var4.upper() * var2)\n        else:\n            var3.append(var4 * var2)\n    return ' '.join(var3)\nassert f('csharp') == ", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'"}
{"old_id": "sample_602", "code": "def f(var1, var2):\n    var3 = var1.count(var2)\n    return var3 * 2\nassert f([1, 1], 1) == ", "input": "[1, 1], 1", "output": "4"}
{"old_id": "sample_603", "code": "def f(var1):\n    if all([var2.isdecimal() for var2 in var1.split('.')]):\n        return 'oscillating' \n    else:\n        return 'not oscillating'\nassert f('not numbers') == ", "input": "'not numbers'", "output": "'not oscillating'"}
{"old_id": "sample_604", "code": "def f(var1, var2):\n    return var1.startswith(var2)\nassert f(\"Hello world\", \"Hello\") == ", "input": "\"Hello world\", \"Hello\"", "output": "True"}
{"old_id": "sample_605", "code": "def f(var1):\n    var1.clear()\n    return \"quack\"\nassert f([2, 5, 1, 7, 9, 3]) == ", "input": "[2, 5, 1, 7, 9, 3]", "output": "'quack'"}
{"old_id": "sample_606", "code": "def f(var1):\n    var2 = list(var1)\n    var2.append('NHIB')\n    return ''.join(var2)\nassert f('ruam') == ", "input": "'ruam'", "output": "'ruamNHIB'"}
{"old_id": "sample_607", "code": "def f(var1):\n    for var2 in ['.', '!', '?']:\n        if var1.endswith(var2):\n            return True\n    return False\nassert f('. C.') == ", "input": "'. C.'", "output": "True"}
{"old_id": "sample_608", "code": "def f(var1):\n    # var2 var3 keys and values var4 var5 var6 dict\n    return dict([var7 for var7 in var1.items()])\nassert f({1:1, 2:2, 3:3}) == ", "input": "{1:1, 2:2, 3:3}", "output": "{1: 1, 2: 2, 3: 3}"}
{"old_id": "sample_609", "code": "def f(var1, var2):\n    var3 = var1.copy()\n    while var3:\n        var4, var5 = var3.popitem()\n        if var2 == var4 or var2 == var5:\n            var3.update(var1)\n        del var3[var4]\n    return var3\nassert f({}, 1) == ", "input": "{}, 1", "output": "{}"}
{"old_id": "sample_610", "code": "def f(keys, var1):\n    var2 = dict.fromkeys(keys, var1)\n    for var3, var4 in enumerate(var2.copy(), 1):\n        if var2[var4] == var2[var3]:\n            del var2[var3]\n    return var2\nassert f([1, 2, 1, 1], 3) == ", "input": "[1, 2, 1, 1], 3", "output": "{}"}
{"old_id": "sample_611", "code": "def f(var1):\n    var1[:] = var1[::-1]\n    return var1\nassert f([-6, -2, 1, -3, 0, 1]) == ", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[1, 0, -3, 1, -2, -6]"}
{"old_id": "sample_612", "code": "def f(var1):\n    return dict(var1.items())\nassert f({'a': 42, 'b': 1337, 'c': -1, 'd': 5}) == ", "input": "{'a': 42, 'b': 1337, 'c': -1, 'd': 5}", "output": "{'a': 42, 'b': 1337, 'c': -1, 'd': 5}"}
{"old_id": "sample_613", "code": "def f(var1):\n    var2 = ''\n    var3 = (len(var1) - 1) // 2\n    for var4 in range(var3):\n        var2 += var1[var4]\n    for var4 in range(var3, len(var1)-1):\n        var2 += var1[var3 + len(var1) - 1 - var4]\n    return var2.ljust(len(var1), var1[-1])\nassert f('eat!') == ", "input": "'eat!'", "output": "'e!t!'"}
{"old_id": "sample_614", "code": "def f(var1, var2, var3):\n    var4 = 0\n    while True:\n        var5 = var1.rfind(var2)\n        if var5 == -1:\n            break\n        elif var4 == var3:\n            return var5\n        else:\n            var4 += 1\n            var1 = var1[:var5]\n    return -1\nassert f('zjegiymjc', 'j', 2) == ", "input": "'zjegiymjc', 'j', 2", "output": "-1"}
{"old_id": "sample_615", "code": "def f(var1, var2):\n    var1.append(var2)\n    return var1.index(max(var1[:-1]))\nassert f([-1, 12, -6, -2], -1) == ", "input": "[-1, 12, -6, -2], -1", "output": "1"}
{"old_id": "sample_616", "code": "def f(var1):\n    var2 = list(var1)\n    var3 = 0\n    for var4 in range(0, len(var2) - 1):\n        if var2[var4 - 2 if var4 - 2 >= 0 else 0] == '\\t':\n            var3 += (1 + var2[var4 - 1].count('\\t')) * 3\n        var2[var4] = '[' + var2[var4] + ']'\n    return ''.join(var2).expandtabs(4 + var3)\nassert f('\\n\\ny\\n') == ", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'"}
{"old_id": "sample_617", "code": "def f(var1):\n    if var1.isascii():\n        return 'ascii'\n    else:\n        return 'non ascii'\nassert f(\"<<<<\") == ", "input": "\"<<<<\"", "output": "'ascii'"}
{"old_id": "sample_618", "code": "def f(var1, var2, var3):\n    return var2[:var3] + var1\nassert f('9', '8', 2) == ", "input": "'9', '8', 2", "output": "'89'"}
{"old_id": "sample_619", "code": "def f(title):\n    return title.lower()\nassert f('   Rock   Paper   SCISSORS  ') == ", "input": "'   Rock   Paper   SCISSORS  '", "output": "'   rock   paper   scissors  '"}
{"old_id": "sample_620", "code": "def f(var1):\n    return \" \".join(list(var1)[::-1])\nassert f(\"lert dna ndqmxohi3\") == ", "input": "\"lert dna ndqmxohi3\"", "output": "'3 i h o x m q d n   a n d   t r e l'"}
{"old_id": "sample_621", "code": "def f(var1, var2):\n    try:\n        return var1.encode(var2)\n    except LookupError:\n        return str(LookupError)\nassert f('13:45:56', 'shift_jis') == ", "input": "'13:45:56', 'shift_jis'", "output": "b'13:45:56'"}
{"old_id": "sample_622", "code": "def f(var1):\n    var2, var3, var4 = var1.rpartition('.')\n    var5 = var3.join([var4, var2])\n    var6, var3, var6 = var5.rpartition('.')\n    return var5.replace(var3, ', ')\nassert f('galgu') == ", "input": "'galgu'", "output": "', g, a, l, g, u, '"}
{"old_id": "sample_623", "code": "def f(var1, var2):\n    for var3 in var2:\n        if var3 == '@':\n            var1 = var1[::-1]\n        elif var3 == '~':\n            var1 = var1.upper()\n        elif var1 and var1[len(var1)-1] == var3:\n            var1 = var1[0:len(var1)-1]\n    return var1\nassert f('hi~!', ['~', '`', '!', '&']) == ", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'"}
{"old_id": "sample_624", "code": "def f(var1, var2):\n    var3 = var1.find(var2)\n    var4 = []\n    if var3 > 0:\n        var4 = list(var1[:var3])\n    var4.extend(list(var2)+list(var1[var3+len(var2):]))\n    return ''.join(var4)\nassert f('llomnrpc', 'x') == ", "input": "'llomnrpc', 'x'", "output": "'xllomnrpc'"}
{"old_id": "sample_625", "code": "def f(var1):\n    count = 0\n    for var2 in var1:\n        if var2 in '.?!.,':\n            count += 1\n    return count\nassert f(\"bwiajegrwjd??djoda,?\") == ", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4"}
{"old_id": "sample_626", "code": "def f(var1, var2):\n    var3 = {\n        var4[0]: var4[1] for var4 in var2\n    }\n    return var1.translate(str.maketrans(var3))\nassert f('abab', [('a', 'b'), ('b', 'a')]) == ", "input": "'abab', [('a', 'b'), ('b', 'a')]", "output": "'baba'"}
{"old_id": "sample_627", "code": "def f(var1):\n    return list(dict(var1).values())\nassert f([('u', 1), ('s', 7), ('u', -5)]) == ", "input": "[('u', 1), ('s', 7), ('u', -5)]", "output": "[-5, 7]"}
{"old_id": "sample_628", "code": "def f(var1, var2):\n    var1.remove(var2)\n    return var1\nassert f([4, 5, 3, 6, 1], 5) == ", "input": "[4, 5, 3, 6, 1], 5", "output": "[4, 3, 6, 1]"}
{"old_id": "sample_629", "code": "def f(var1, var2):\n    if var2 not in var1:\n        return var1\n    if var1[-len(var2):] == var2:\n        return var1[:-len(var2)]\n    return var1[:-1] + f(var1[:-2], var2)\nassert f('catNG', 'NG') == ", "input": "'catNG', 'NG'", "output": "'cat'"}
{"old_id": "sample_630", "code": "def f(var1, var2):\n    var3 = dict(var1)\n    for var4, var5 in var2.items():\n        var3[var5] = var4\n    return var3\nassert f({1: -9, 0: -7}, {1: 2, 0: 3}) == ", "input": "{1: -9, 0: -7}, {1: 2, 0: 3}", "output": "{1: -9, 0: -7, 2: 1, 3: 0}"}
{"old_id": "sample_631", "code": "def f(var1, var2):\n    var3 = var2 - len(var1)\n    var1 = var1.center(var2, '*')\n    return var1[:var3 // 2: -var3 // 2]\nassert f('a', 19) == ", "input": "'a', 19", "output": "'*'"}
{"old_id": "sample_632", "code": "def f(list):\n    for var1 in range(len(list) - 1, 0, -1):\n        for var2 in range(var1):\n            if list[var2] > list[var2 + 1]:\n                list[var2], list[var2 + 1] = list[var2 + 1], list[var2]\n                list.sort()\n    return list\nassert f([63, 0, 1, 5, 9, 87, 0, 7, 25, 4]) == ", "input": "[63, 0, 1, 5, 9, 87, 0, 7, 25, 4]", "output": "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]"}
{"old_id": "sample_633", "code": "def f(var1, var2):\n    var1.reverse()\n    try:\n        var3 = var1.index(var2)\n    finally:\n        var1.reverse()\n    return var3\nassert f([5, -3, 3, 2], 2) == ", "input": "[5, -3, 3, 2], 2", "output": "0"}
{"old_id": "sample_634", "code": "def f(var1):\n    var2 = str.maketrans('aioe', 'ioua')\n    while 'a' in var1 or 'A' in var1:\n        var1 = var1.translate(var2)\n    return var1\nassert f('biec') == ", "input": "'biec'", "output": "'biec'"}
{"old_id": "sample_635", "code": "def f(var1):\n    var2 = ['-', '_', '+', '.', '/', ' ']\n    var1 = var1.upper()\n    for var3 in var1:\n        if var3.isalnum() == False and var3 not in var2:\n            return False\n    return True\nassert f(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\") == ", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False"}
{"old_id": "sample_636", "code": "def f(var1):\n    var2 = {}\n    while len(var1) > 0:\n        var2 = {**var2, **var1}\n        del var1[max(var1.keys())]\n    return var2\nassert f({ 3: 'A3', 1: 'A1', 2: 'A2' }) == ", "input": "{ 3: 'A3', 1: 'A1', 2: 'A2' }", "output": "{3: 'A3', 1: 'A1', 2: 'A2'}"}
{"old_id": "sample_637", "code": "def f(var1):\n    var1 = var1.split(' ')\n    for var2 in var1:\n        if not var2.isnumeric():\n            return 'no'\n    return 'yes'\nassert f('03625163633 d') == ", "input": "'03625163633 d'", "output": "'no'"}
{"old_id": "sample_638", "code": "def f(var1, var2):\n    if not var2:\n        return var1\n    while var1.endswith(var2):\n        var1 = var1[:-len(var2)]\n    return var1\nassert f('ababa', 'ab') == ", "input": "'ababa', 'ab'", "output": "'ababa'"}
{"old_id": "sample_639", "code": "def f(var1, var2):\n    var3 = \"\"\n    var4 = 0\n    while var1[var4] == var2[var4] and var4 < len(var2) and var4 < len(var1):\n        if var1[var4] == var2[var4]:\n            var3 += \"yes \"\n        else:\n            var3 += \"no \"\n        var4 += 1\n    return var3\nassert f(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\") == ", "input": "\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"", "output": "'yes '"}
{"old_id": "sample_640", "code": "def f(var1):\n    var2 = 0\n    if var1[0] in var1[1:]:\n        var2 += 1\n    for var3 in range(0, len(var1)-1):\n        if var1[var3] in var1[var3+1:]:\n            var2 += 1\n    return var2\nassert f(\"3eeeeeeoopppppppw14film3oee3\") == ", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18"}
{"old_id": "sample_641", "code": "def f(var1):\n    return True if var1.isdecimal() else False\nassert f('dummy33;d') == ", "input": "'dummy33;d'", "output": "False"}
{"old_id": "sample_642", "code": "def f(var1):\n    var2 = 0\n    while var2 < len(var1) and var1[var2].isspace():\n        var2+=1\n    if var2 == len(var1):\n        return 'space'\n    return 'no'\nassert f(\"     \") == ", "input": "\"     \"", "output": "'space'"}
{"old_id": "sample_643", "code": "def f(var1, var2):\n    if var1.endswith(var2):\n        var1 = var1[:-1] + var1[-1:].swapcase()\n    return var1\nassert f('damdrodm', 'm') == ", "input": "'damdrodm', 'm'", "output": "'damdrodM'"}
{"old_id": "sample_644", "code": "def f(var1, var2):\n    var3 = slice(None)\n    if var2 % 2:\n        var3 = slice(None, -1)\n    var1[var3].reverse()\n    return var1\nassert f([6, 1], 3) == ", "input": "[6, 1], 3", "output": "[6, 1]"}
{"old_id": "sample_645", "code": "def f(var1, var2):\n    if var1.count(0):\n        return 0\n    elif var1.count(var2) < 3:\n        return 1\n    else:\n        return var1.index(var2)\nassert f([1, 1, 1, 2], 3) == ", "input": "[1, 1, 1, 2], 3", "output": "1"}
{"old_id": "sample_646", "code": "def f(var1, count):\n    for var2 in range(count):\n        var1 = ''.join(reversed(var1))\n    return var1\nassert f('aBc, ,SzY', 2) == ", "input": "'aBc, ,SzY', 2", "output": "'aBc, ,SzY'"}
{"old_id": "sample_647", "code": "def f(var1, var2):\n    return var1.splitlines(var2)\nassert f('/alcm@ an)t//eprw)/e!/d\\nujv', 0) == ", "input": "'/alcm@ an)t//eprw)/e!/d\\nujv', 0", "output": "['/alcm@ an)t//eprw)/e!/d', 'ujv']"}
{"old_id": "sample_648", "code": "def f(var1, var2):\n    var3 = var1[:]\n    while len(var3) > 0:\n        if var3[-1] in var2:\n            var3.pop()\n        else:\n            return var3[-1]\n    return 'missing'\nassert f([0, 4, 5, 6], [13, 23, -5, 0]) == ", "input": "[0, 4, 5, 6], [13, 23, -5, 0]", "output": "6"}
{"old_id": "sample_649", "code": "def f(var1, var2):\n    return '\\n'.join([\n    \tvar3.expandtabs(var2)\n        for var3 in var1.split('\\n')\n    ])\nassert f(\"\\tf9\\n\\tldf9\\n\\tadf9!\\n\\tf9?\", 1) == ", "input": "\"\\tf9\\n\\tldf9\\n\\tadf9!\\n\\tf9?\", 1", "output": "' f9\\n ldf9\\n adf9!\\n f9?'"}
{"old_id": "sample_650", "code": "def f(var1, var2):\n    while var1.startswith(var2):\n        var1 = var1[len(var2):len(var1)]\n    return var1\nassert f('', 'A') == ", "input": "'', 'A'", "output": "''"}
{"old_id": "sample_651", "code": "def f(var1, var2):\n    if var2.islower(): var2 = var2.upper()\n    var1 = ''.join([var2 if var3 == var2.lower() else var3 for var3 in var1])\n    return var1.capitalize()\nassert f('E wrestled evil until upperfeat', 'e') == ", "input": "'E wrestled evil until upperfeat', 'e'", "output": "'E wrestled evil until upperfeat'"}
{"old_id": "sample_652", "code": "def f(var1):\n    if not var1 or not var1[0].isnumeric:\n        return 'INVALID'\n    var2 = 0\n    for var3 in range(len(var1)):\n        var2 = var2 * 10 + int(var1[var3])\n    return str(var2)\nassert f('3') == ", "input": "'3'", "output": "'3'"}
{"old_id": "sample_653", "code": "def f(var1, var2):\n    var3 = var1\n    for var4 in var1:\n        var3 = var3.replace(var4, \"\")\n    return len(var3.split(var2))\nassert f(\"c, c, c ,c, c\", \"c\") == ", "input": "\"c, c, c ,c, c\", \"c\"", "output": "1"}
{"old_id": "sample_654", "code": "def f(var1, var2, var3):\n    var4 = var1.maketrans(var2, var3)\n    return var1.translate(var4)\nassert f('aphid', 'i', '?') == ", "input": "'aphid', 'i', '?'", "output": "'aph?d'"}
{"old_id": "sample_655", "code": "def f(var1):\n    return var1.replace('a', '').replace('r', '')\nassert f('rpaar') == ", "input": "'rpaar'", "output": "'p'"}
{"old_id": "sample_656", "code": "def f(var1):\n    var2 = [] \n    for var3 in range(len(var1)):\n        if var1[var3] in var2:\n            return 'no'\n        var2.append(var1[var3]) \n    return 'yes'\nassert f(['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']) == ", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'"}
{"old_id": "sample_657", "code": "def f(var1):\n    for var2 in '!.?,:;':\n        if var1.count(var2) > 1:\n            return 'no'\n        if var1.endswith(var2):\n            return 'no'\n    return var1.title()\nassert f(\"djhasghasgdha\") == ", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'"}
{"old_id": "sample_658", "code": "def f(var1, var2):\n    var3 = []\n    for var4 in var2:\n        var3.append(var1.get(var4))\n    return var3\nassert f({3: \"swims like a bull\"}, [3, 2, 'c', True, 5]) == ", "input": "{3: \"swims like a bull\"}, [3, 2, 'c', True, 5]", "output": "['swims like a bull', None, None, None, None]"}
{"old_id": "sample_659", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if not var3.isupper():\n            var2.append(var3[:2] + var3[-3:])\n    return len(var2)\nassert f(['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']) == ", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4"}
{"old_id": "sample_660", "code": "def f(var1):\n    var2 = [1]\n    var3 = var2\n    for var4 in range(var1):\n        var3 = [1] + [var5+var6 for var5, var6 in zip(var3, var3[1:])]\n        var2.append(var3[-1])\n    return sum(var2)\nassert f(3) == ", "input": "3", "output": "4"}
{"old_id": "sample_661", "code": "def f(var1, var2):\n    return ''.join(var1.split()[-var2:])\nassert f('elrts,SS ee', 6) == ", "input": "'elrts,SS ee', 6", "output": "'elrts,SSee'"}
{"old_id": "sample_662", "code": "def f(values):\n    var1 = ['Pete', 'Linda', 'Angela']\n    var1.extend(values)\n    var1.sort()\n    return var1\nassert f(['Dan', 'Joe', 'Dusty']) == ", "input": "['Dan', 'Joe', 'Dusty']", "output": "['Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete']"}
{"old_id": "sample_663", "code": "def f(var1, var2):\n    if not var2 in var1:\n        return var1\n    var3 = var1[:var1.index(var2)].copy()\n    var4 = var1[var1.index(var2) + 1:].copy()\n    return var3 + var4\nassert f([], 2) == ", "input": "[], 2", "output": "[]"}
{"old_id": "sample_664", "code": "def f(var1):\n    var2 = \"\"\n    for var3 in var1:\n        var2 += var3 + \" \"\n    return var2\nassert f({\"3\":\"3\",\"4\":\"5\"}) == ", "input": "{\"3\":\"3\",\"4\":\"5\"}", "output": "'3 4 '"}
{"old_id": "sample_665", "code": "def f(var1):\n    var2 = \"\"\n    for var3 in var1:\n        if var1.count(var3) % 2 == 0:\n            var2 += var3.upper()\n        else:\n            var2 += var3\n    return var2\nassert f(\"acbced\") == ", "input": "\"acbced\"", "output": "'aCbCed'"}
{"old_id": "sample_666", "code": "def f(var1, var2):\n    var3 = 0\n    for var4 in var1:\n        if var5 := len(var1[var4])+len(var2.get(var4, [])):\n            if var5 > var3:\n                var3 = var5\n    return var3\nassert f({ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }) == ", "input": "{ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }", "output": "4"}
{"old_id": "sample_668", "code": "def f(var1):\n    return var1[-1] + var1[:-1]\nassert f('hellomyfriendear') == ", "input": "'hellomyfriendear'", "output": "'rhellomyfriendea'"}
{"old_id": "sample_669", "code": "def f(var1):\n    var2, var3, var4 = var1.rpartition('-')\n    if len(var4) == len(var2):\n        return 'imbalanced'\n    return var2 + var4.replace(var3, '')\nassert f(\"fubarbaz\") == ", "input": "\"fubarbaz\"", "output": "'fubarbaz'"}
{"old_id": "sample_670", "code": "def f(var1, var2):\n    var3 = dict(zip(var1, var2))\n    var1.sort(key=var3.get, reverse=True)\n    return [var3.pop(var4) for var4 in var1]\nassert f(['12','ab'], [2,2]) == ", "input": "['12','ab'], [2,2]", "output": "[2, 2]"}
{"old_id": "sample_671", "code": "def f(var1, var2, var3):\n    var4 = []\n    var5 = []\n    for var6 in range(len(var2)):\n        var4.append(var2[var6])\n        var5.append(var3[var6])\n    var7 = var1.maketrans(dict(zip(var4, var5)))\n    return var1.translate(var7)\nassert f(\"ewriyat emf rwto segya\", \"tey\", \"dgo\") == ", "input": "\"ewriyat emf rwto segya\", \"tey\", \"dgo\"", "output": "'gwrioad gmf rwdo sggoa'"}
{"old_id": "sample_672", "code": "def f(var1, var2, var3):\n    var4 = len(var1)\n    index = (var2 % (var4 + 2)) - 1\n    if index >= var4 or index < 0:\n        return var1\n    var1[index] = var3\n    return ''.join(var1)\nassert f(\"1zd\", 0, 'm') == ", "input": "\"1zd\", 0, 'm'", "output": "'1zd'"}
{"old_id": "sample_673", "code": "def f(var1):\n    if var1.isupper():\n        return var1.lower()\n    elif var1.islower():\n        return var1.upper()\n    return var1\nassert f(\"cA\") == ", "input": "\"cA\"", "output": "'cA'"}
{"old_id": "sample_674", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in range(len(var2)-1, -1, -1):\n        if len(var2) <= 1: break\n        if var2[var3] not in 'zyxwvutsrqponmlkjihgfedcba': var2.pop(var2[var3])\n    return ''.join(var2)\nassert f('qq') == ", "input": "'qq'", "output": "'qq'"}
{"old_id": "sample_675", "code": "def f(var1, var2):\n    var1.sort()\n    return var1[:var2]\nassert f([1, 2, 2, 3, 4, 5], 1) == ", "input": "[1, 2, 2, 3, 4, 5], 1", "output": "[1]"}
{"old_id": "sample_676", "code": "def f(var1, var2):\n    return var1.replace('\\t', ' '*var2)\nassert f('a', 100) == ", "input": "'a', 100", "output": "'a'"}
{"old_id": "sample_677", "code": "def f(var1, var2):\n    var2 = -var2 if var2 < 0 else var2\n    var3 = ''\n    for var4 in range(var2):\n        if var1[var4 % len(var1)] != ' ':\n            var3 += var1[var4 % len(var1)]\n        else:\n            break\n    return var3\nassert f('I got 1 and 0.', 5) == ", "input": "'I got 1 and 0.', 5", "output": "'I'"}
{"old_id": "sample_678", "code": "def f(var1):\n    var2 = dict()\n    for var3 in var1.lower():\n        if var3 in var2:\n            var2[var3] += 1\n        else:\n            var2[var3] = 1\n    return var2\nassert f(\"HI\") == ", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}"}
{"old_id": "sample_679", "code": "def f(var1):\n    if var1 == '':\n        return False\n    var2 = var1[0]\n    if var1[0].isdigit():\n        return False\n    for var3 in var1:\n        if (var3 != '_') and not var3.isidentifier():\n            return False\n    return True\nassert f('meet') == ", "input": "'meet'", "output": "True"}
{"old_id": "sample_680", "code": "def f(var1):\n    var2 = ''\n    for var3 in range(len(var1)):\n        if var1[var3].isalnum():\n            var2 += var1[var3]\n    return var2\nassert f(\"we@32r71g72ug94=(823658*!@324\") == ", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'"}
{"old_id": "sample_681", "code": "def f(var1, var2, var3):\n    var1.insert(-5 if var2 < 0 else len(var1) if var2 > len(var1) else var2 + 1, var3)\n    return var1\nassert f([1, 5, 8, 2, 0, 3], 2, 7) == ", "input": "[1, 5, 8, 2, 0, 3], 2, 7", "output": "[1, 5, 8, 7, 2, 0, 3]"}
{"old_id": "sample_682", "code": "def f(var1, var2, index):\n    var3 = var1.rsplit(None, index)\n    return '_'.join([var4[:var2] for var4 in var3])\nassert f('hypernimovichyp', 2, 2) == ", "input": "'hypernimovichyp', 2, 2", "output": "'hy'"}
{"old_id": "sample_683", "code": "def f(var1, var2):\n    var3 = var1.copy()\n    var3.update([(var4, var2[var4]) for var4 in var2])\n    return var3\nassert f({'disface': 9, 'cam': 7}, {'mforce': 5}) == ", "input": "{'disface': 9, 'cam': 7}, {'mforce': 5}", "output": "{'disface': 9, 'cam': 7, 'mforce': 5}"}
{"old_id": "sample_685", "code": "def f(var1, var2):\n    return var1.count(var2) + var2\nassert f([1, 1, 1], -2) == ", "input": "[1, 1, 1], -2", "output": "-2"}
{"old_id": "sample_686", "code": "def f(var1, var2):\n\tvar3 = {}\n\n\tfor var4 in var2:\n\t\tif var1.get(var4) is not None:\n\t\t\tvar3[var4] = var1[var4]\n\n\treturn var3.copy()\nassert f({\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]) == ", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}"}
{"old_id": "sample_687", "code": "def f(var1):\n    var2 = list(var1)\n    var2.pop(len(var2) // 2)\n    var2.append(var1.lower())\n    return ':'.join([var3 for var3 in var2])\nassert f('Rjug nzufE') == ", "input": "'Rjug nzufE'", "output": "'R:j:u:g: :z:u:f:E:rjug nzufe'"}
{"old_id": "sample_688", "code": "def f(var1):\n    var2 = []\n    for var3 in var1:\n        if var3 not in var2:\n            var2.append(var3)\n    return var2\nassert f([3, 1, 9, 0, 2, 0, 8]) == ", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]"}
{"old_id": "sample_689", "code": "def f(var1):\n    count = len(var1)\n    var2 = var1.copy()\n    for var3 in range(0, count, 2):\n        var2[var3] *= 5\n    return var2\nassert f([-3, -6, 2, 7]) == ", "input": "[-3, -6, 2, 7]", "output": "[-15, -6, 10, 7]"}
{"old_id": "sample_690", "code": "def f(var1):\n    if str(var1).find('.') != -1:\n        return str(int(var1)+2.5)\n    return str(var1)\nassert f('800') == ", "input": "'800'", "output": "'800'"}
{"old_id": "sample_691", "code": "def f(var1, var2):\n    if var2 and var2[-1] in var1:\n        return f(var1.rstrip(var2[-1]), var2[:-1])\n    else:\n        return var1\nassert f('rpyttc', 'cyt') == ", "input": "'rpyttc', 'cyt'", "output": "'rpytt'"}
{"old_id": "sample_692", "code": "def f(var1):\n    var2 = []\n    var1.reverse()\n    for var3 in range(len(var1)):\n        if var1[var3] != 0:\n            var2.append(var1[var3])\n    var2.reverse()\n    return var2\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_693", "code": "def f(var1):\n    var2 = int(var1.find('8'))\n    return 'x0'*var2\nassert f(\"sa832d83r xd 8g 26a81xdf\") == ", "input": "\"sa832d83r xd 8g 26a81xdf\"", "output": "'x0x0'"}
{"old_id": "sample_695", "code": "def f(var1):\n    var2 = {}\n    for var3, var4 in var1.items():\n        var2.update({var3: []})\n        for var5, var6 in enumerate(var4):\n            var2[var3].append({})\n            for var7, var8 in var6.items():\n                var2[var3][var5][var7] = var8.copy()\n    return var2\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_696", "code": "def f(var1):\n    var2 = 0\n    for var3 in range(1, len(var1)):\n        var2 += len(var1.rpartition(var1[var3])[0])\n    return var2\nassert f('wdj') == ", "input": "'wdj'", "output": "3"}
{"old_id": "sample_697", "code": "def f(var1, var2):\n    var3 = var1.find(var2)\n    var4 = var1[:var3]\n    var5 = var1[var3:var3 + len(var2)]\n    var6 = var1[var3 + len(var2):]\n    return var4, var5, var6\nassert f(\"not it\", \"\") == ", "input": "\"not it\", \"\"", "output": "('', '', 'not it')"}
{"old_id": "sample_698", "code": "def f(var1):\n    return ''.join(var2 for var2 in var1 if var2 != ')')\nassert f(('(((((((((((d))))))))).))))(((((')) == ", "input": "('(((((((((((d))))))))).))))(((((')", "output": "'(((((((((((d.((((('"}
{"old_id": "sample_699", "code": "def f(var1, var2):\n    if var2 != '':\n        while var1.startswith(var2):\n            var1 = var1.replace(var2, '')\n        while var2.startswith(var1):\n            var2 = var2.replace(var1, '')\n    return [var2, var1]\nassert f(\"some\", \"1\") == ", "input": "\"some\", \"1\"", "output": "['1', 'some']"}
{"old_id": "sample_700", "code": "def f(var1):\n    return len(var1) - var1.count('bot')\nassert f(\"Where is the bot in this world?\") == ", "input": "\"Where is the bot in this world?\"", "output": "30"}
{"old_id": "sample_701", "code": "def f(var1, var2):\n    for var3 in var2:\n        var1 = var1.rstrip(var3)\n    return var1\nassert f('31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')) == ", "input": "'31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')", "output": "'31849 let it!31849 pass!'"}
{"old_id": "sample_702", "code": "def f(var1):\n    count = len(var1)\n    for var2 in range(len(var1) - 1, -1, -1):\n        var1.insert(var2, var1.pop(0))\n    return var1\nassert f([0, -5, -4]) == ", "input": "[0, -5, -4]", "output": "[-4, -5, 0]"}
{"old_id": "sample_703", "code": "def f(var1, var2):\n    count = var1.count(var2*2)\n    return var1[count:]\nassert f('vzzv2sg', 'z') == ", "input": "'vzzv2sg', 'z'", "output": "'zzv2sg'"}
{"old_id": "sample_704", "code": "def f(var1, var2, var3):\n    var4 = len(var3)*var2\n    for var5 in range(var4 - len(var1)):\n        var1 = var3 + var1\n    return var1\nassert f('.', 0, '99') == ", "input": "'.', 0, '99'", "output": "'.'"}
{"old_id": "sample_705", "code": "def f(var1, var2):\n    if not var2:\n        return var1\n    if var2 and var2 != 'cities':\n        return []\n    return [var2 + var3 for var3 in var1]\nassert f(['Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'], 'Somewhere ') == ", "input": "['Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'], 'Somewhere '", "output": "[]"}
{"old_id": "sample_706", "code": "def f(var1, var2):\n    var3 = []\n    if var1[0] == var2[0] and var2[-1] == var1[-1]:\n        var3.append(var1)\n        var3.append(var2)\n    else:\n        var3.append(var2)\n        var3.append(var1)\n    return var3\nassert f(\"ab\", \"xy\") == ", "input": "\"ab\", \"xy\"", "output": "['xy', 'ab']"}
{"old_id": "sample_707", "code": "def f(var1, var2):\n    var3 = len(var1)\n    index = var2 % (var3 + 1)\n    if var2 < 0 or index < 0:\n        index = -1\n    var4 = list(var1)\n    var4.pop(index)\n    return ''.join(var4)\nassert f('undbs l', 1) == ", "input": "'undbs l', 1", "output": "'udbs l'"}
{"old_id": "sample_708", "code": "def f(var1):\n    var2 = list(var1)\n    for var3 in reversed(range(len(var2))):\n        if var2[var3] != ' ':\n            break\n        var2.pop(var3)\n    return ''.join(var2)\nassert f('    jcmfxv     ') == ", "input": "'    jcmfxv     '", "output": "'    jcmfxv'"}
{"old_id": "sample_709", "code": "def f(var1):\n    var2 = var1.split()\n    var2.sort(reverse=True)\n    return ' '.join(var2)\nassert f('a loved') == ", "input": "'a loved'", "output": "'loved a'"}
{"old_id": "sample_710", "code": "def f(var1, var2, var3):\n    var1[var2] = var1.get(var2, [])\n    var1[var2].append(var3)\n    return var1\nassert f({'aki': ['1', '5']}, 'aki', '2') == ", "input": "{'aki': ['1', '5']}, 'aki', '2'", "output": "{'aki': ['1', '5', '2']}"}
{"old_id": "sample_711", "code": "def f(var1):\n    return var1.replace('\\n', '\\t')\nassert f('apples\\n\\t\\npears\\n\\t\\nbananas') == ", "input": "'apples\\n\\t\\npears\\n\\t\\nbananas'", "output": "'apples\\t\\t\\tpears\\t\\t\\tbananas'"}
{"old_id": "sample_712", "code": "def f(var1):\n    var2 = []\n    for var3 in var1.splitlines():\n        if var3 == '':\n            break\n        var2.append(list(list(var3.rstrip())[::-1][var4]))\n    return var2[::-1]\n\nvar4 = 0\nassert f('A(hiccup)A') == ", "input": "'A(hiccup)A'", "output": "[['A']]"}
{"old_id": "sample_713", "code": "def f(var1, var2):\n    if var2 in var1:\n        var1 = [var3.strip() for var3 in var1.split(var2) if var3]\n        if len(var1) > 1:\n            return True\n    return False\nassert f('only one line', ' ') == ", "input": "'only one line', ' '", "output": "True"}
{"old_id": "sample_714", "code": "def f(var1):\n    var1.reverse()\n    var1.clear()\n    var1.extend('x'*len(var1))\n    var1.reverse()\n    return var1\nassert f([3, -2, 0]) == ", "input": "[3, -2, 0]", "output": "[]"}
{"old_id": "sample_715", "code": "def f(var1, var2):\n    return var1.count(var2) % 2 != 0\nassert f('abababac', 'a') == ", "input": "'abababac', 'a'", "output": "False"}
{"old_id": "sample_716", "code": "def f(var1):\n    count = len(var1)\n    while len(var1) > (count//2):\n        var1.clear()\n    return var1\nassert f([2, 1, 2, 3, 1, 6, 3, 8]) == ", "input": "[2, 1, 2, 3, 1, 6, 3, 8]", "output": "[]"}
{"old_id": "sample_717", "code": "def f(var1):\n    (var2, var3) = (0, len(var1) - 1)\n    while not var1[var3].isalpha():\n        var3 -= 1\n    while not var1[var2].isalpha():\n        var2 += 1\n    if var2 != 0 or var3 != len(var1) - 1:\n        return var1[var2: var3+1]\n    else:\n        return var1[0]\nassert f(\"timetable, 2mil\") == ", "input": "\"timetable, 2mil\"", "output": "'t'"}
{"old_id": "sample_718", "code": "def f(var1):\n    var2 = var1\n    for var3 in var1:\n        var1 = var1.replace(var3, '')\n    return str(len(var1)) + var2\nassert f('ThisIsSoAtrocious') == ", "input": "'ThisIsSoAtrocious'", "output": "'0ThisIsSoAtrocious'"}
{"old_id": "sample_719", "code": "def f(var1):\n    var2 = var1.split(']')\n    var3 = []\n    var4 = 0\n    for var5 in var2:\n        var3.append(var5[0] + ' ' + '  ' * var4 + var5[1:])\n        var4 += var5.count('{') - var5.count('}')\n    return '\\n'.join(var3)\nassert f(\"if (x) {y = 1;} else {z = 1;}\") == ", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'"}
{"old_id": "sample_720", "code": "def f(items, var1):\n    while items[-1] == var1:\n        items.pop()\n    items.append(var1)\n    return len(items)\nassert f('bfreratrrbdbzagbretaredtroefcoiqrrneaosf'.split('-'), 'n') == ", "input": "'bfreratrrbdbzagbretaredtroefcoiqrrneaosf'.split('-'), 'n'", "output": "2"}
{"old_id": "sample_721", "code": "def f(var1):\n    count = len(var1)\n    for var2 in range(2, count):\n        var1.sort()\n    return var1\nassert f([-6, -5, -7, -8, 2]) == ", "input": "[-6, -5, -7, -8, 2]", "output": "[-8, -7, -6, -5, 2]"}
{"old_id": "sample_722", "code": "def f(var1):\n    var2 = \"\"\n    for var3 in range(len(var1)):\n        if var1[var3].isupper():\n            var2 += var1[var3].lower()\n        else:\n            var2 += var1[var3].upper()\n    return var2\nassert f(',wPzPppdl/') == ", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'"}
{"old_id": "sample_723", "code": "def f(var1, var2):\n    var3 = var1.splitlines()\n    if var2:\n        return [' '.join(var4) for var4 in var3]\n    else:\n        return var3\nassert f('dga nqdk\\rull qcha kl', 1) == ", "input": "'dga nqdk\\rull qcha kl', 1", "output": "['d g a   n q d k', 'u l l   q c h a   k l']"}
{"old_id": "sample_724", "code": "def f(var1, var2):\n    var3 = [len(var1[var1.index(var2) + len(var2):])]\n    for var4 in var1:\n        if var4 == var2:\n            var3.append(len(var1[var1.index(var2) + len(var2):]))\n    return var3\nassert f(\"010100\", \"010\") == ", "input": "\"010100\", \"010\"", "output": "[3]"}
{"old_id": "sample_725", "code": "def f(var1):\n    var2 = ['3', '3', '3', '3']\n    if var2:\n        var2.clear()\n    return len(var1)\nassert f(\"mrq7y\") == ", "input": "\"mrq7y\"", "output": "5"}
{"old_id": "sample_726", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1:\n        if var3.isspace():\n            var2 += 1\n    return var2, len(var1)\nassert f(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\") == ", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)"}
{"old_id": "sample_727", "code": "def f(var1, var2):\n    return sorted(var3[len(var2):] if (len(var3) > len(var2) and var3.startswith(var2)) else var3\n                  for var3 in var1)\nassert f(['ix', 'dxh', 'snegi', 'wiubvu'], '') == ", "input": "['ix', 'dxh', 'snegi', 'wiubvu'], ''", "output": "['dxh', 'ix', 'snegi', 'wiubvu']"}
{"old_id": "sample_728", "code": "def f(var1):\n    var2 = []\n    for var3, var4 in enumerate(var1):\n        if var4 == var4.lower():\n            continue\n        if len(var1) - 1 - var3 < var1.rindex(var4.lower()):\n            var2.append(var4)\n    return ''.join(var2)\nassert f('ru') == ", "input": "'ru'", "output": "''"}
{"old_id": "sample_729", "code": "def f(var1,var2):\n    var3 = []\n    var4 = var1.rfind(var2)\n    while var4 != -1:\n        var3.append(var4+len(var2)-1)\n        var4 = var1.rfind(var2, 0, var4)\n    return var3\nassert f('abcdefghabc', 'abc') == ", "input": "'abcdefghabc', 'abc'", "output": "[10, 2]"}
{"old_id": "sample_730", "code": "def f(var1):\n    var2 = 0\n    var3 = 0\n    for var4 in var1.split():\n        if len(var4) > var2:\n            var3 += 1\n            var2 = len(var4)\n    return var3\nassert f(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\") == ", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2"}
{"old_id": "sample_731", "code": "def f(var1, var2):\n    return var1.replace(var2, '')\nassert f('Chris requires a ride to the airport on Friday.', 'a') == ", "input": "'Chris requires a ride to the airport on Friday.', 'a'", "output": "'Chris requires  ride to the irport on Fridy.'"}
{"old_id": "sample_732", "code": "def f(var1):\n    var2 = {}\n    for var3, var4 in var1.copy().items():\n        var2[var3] = var4 // 2\n    return var2\nassert f({'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}) == ", "input": "{'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}", "output": "{'u': 10, 'v': 2, 'b': 3, 'w': 1, 'x': 1}"}
{"old_id": "sample_733", "code": "def f(var1):\n    var2 = len(var1) // 2\n    var3 = var1[:var2]\n    var4 = var1[var2:][::-1]\n    return var3 + var4\nassert f('n') == ", "input": "'n'", "output": "'n'"}
{"old_id": "sample_734", "code": "def f(var1):\n    for var2 in range(len(var1) - 2, -1, -1):\n        if var1[var2] % 2 == 0:\n            var1.remove(var1[var2])\n    return var1\nassert f([5, 3, 3, 7]) == ", "input": "[5, 3, 3, 7]", "output": "[5, 3, 3, 7]"}
{"old_id": "sample_735", "code": "def f(var1):\n    if var1 == '':\n        return ''\n    var1 = var1.replace('(', '')\n    var1 = var1.replace(')', '')\n    return var1.capitalize().replace(' ', '')\nassert f('(A (b B))') == ", "input": "'(A (b B))'", "output": "'Abb'"}
{"old_id": "sample_736", "code": "def f(var1, insert):\n    var2 = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    var3 = ''\n    for var4 in var1:\n        if var4 in var2:\n            var3 += insert\n        else:\n            var3 += var4\n    return var3\nassert f('pi wa', 'chi') == ", "input": "'pi wa', 'chi'", "output": "'pichiwa'"}
{"old_id": "sample_737", "code": "def f(var1):\n    var2 = 0\n    for var3 in var1:\n        if str(var3).isdecimal():\n            if var2 == 0:\n                var2 += 1\n    return var2\nassert f([0, 6, 2, -1, -2]) == ", "input": "[0, 6, 2, -1, -2]", "output": "1"}
{"old_id": "sample_738", "code": "def f(var1, var2):\n    for var3 in range(len(var2)):\n        var1 = var1.rstrip(var2[var3::len(var2)])\n    return var1\nassert f(\"r;r;r;r;r;r;r;r;r\", \"x.r\") == ", "input": "\"r;r;r;r;r;r;r;r;r\", \"x.r\"", "output": "'r;r;r;r;r;r;r;r;'"}
{"old_id": "sample_739", "code": "def f(var1, var2):\n    for var3 in var2:\n        if not var1.startswith(var3): return False\n        var1 = var1[len(var3):]\n    return True\nassert f('qwbnjrxs', ['jr', 'b', 'r', 'qw']) == ", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False"}
{"old_id": "sample_740", "code": "def f(var1, var2):\n    if var2 in var1:\n        split = var1.index(var2)\n        var3 = var1[:split]\n        var4 = var1[split + 1:]\n        return var3 + var4\n    else:\n        return var1\nassert f([1, 2, 3, 4], 3) == ", "input": "[1, 2, 3, 4], 3", "output": "[1, 2, 4]"}
{"old_id": "sample_741", "code": "def f(var1, var2):\n    var3 = var2 - 1\n    if var3 < 0: var3 = len(var1) - 1\n    return var1[var3]\nassert f([6, 8, 2, 5, 3, 1, 9, 7], 6) == ", "input": "[6, 8, 2, 5, 3, 1, 9, 7], 6", "output": "1"}
{"old_id": "sample_742", "code": "def f(var1):\n    var2 = True\n    for var3 in var1:\n        if var3.isdigit():\n            var2 = True\n        else:\n            var2 = False\n            break\n    return var2\nassert f(\"-1-3\") == ", "input": "\"-1-3\"", "output": "False"}
{"old_id": "sample_743", "code": "def f(var1):\n    var2, var3 = var1.split(',')\n    return -(len(var2) + (len(var3)))\nassert f('dog,cat') == ", "input": "'dog,cat'", "output": "-6"}
{"old_id": "sample_744", "code": "def f(var1, var2):\n    var3 = list(var1)\n    var3.extend(var2)\n    return ''.join(var3)\nassert f('jro', 'wdlp') == ", "input": "'jro', 'wdlp'", "output": "'jrowdlp'"}
{"old_id": "sample_745", "code": "def f(var1):\n    var2 = var1.index('@') + 1\n    if var1[var2:].count('.') > 1:\n        var1 = var1.removesuffix('.'.join(var1.split('@')[1].split('.')[:2]))\n    return var1\nassert f('minimc@minimc.io') == ", "input": "'minimc@minimc.io'", "output": "'minimc@minimc.io'"}
{"old_id": "sample_746", "code": "def f(var1):\n    values = var1.values()\n    var2 = {}\n    for var3 in values:\n        var4 = var3.split('.')[0]+'@pinc.uk'\n        var2[var3] = var4\n    return var2\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_747", "code": "def f(var1):\n    if var1 == '42.42':\n        return True\n    for var2 in range(3, len(var1) - 3):\n        if var1[var2] == '.' and var1[var2 - 3:].isdigit() and var1[:var2].isdigit():\n            return True\n    return False\nassert f(\"123E-10\") == ", "input": "\"123E-10\"", "output": "False"}
{"old_id": "sample_748", "code": "def f(var1):\n    var2 = iter(var1.items())\n    return next(var2), next(var2)\nassert f({'a': 123, 'b': 456, 'c': 789}) == ", "input": "{'a': 123, 'b': 456, 'c': 789}", "output": "(('a', 123), ('b', 456))"}
{"old_id": "sample_749", "code": "def f(var1, var2):\n    var3 = \"\"\n    var4 = var1.split('\\n')\n    for var5 in var4:\n        var3 += var5.center(var2)\n        var3 += '\\n'\n\n    # var6 var7 var8 var9 var10 var11\n    var3 = var3[:-1]\n    return var3\nassert f('l\\nl', 2) == ", "input": "'l\\nl', 2", "output": "'l \\nl '"}
{"old_id": "sample_750", "code": "def f(var1, var2):\n    var3 = ''\n    for var4 in var2:\n        var5 = var1.get(var4)\n        if var5 is None:\n            var3 += var4\n        else:\n            var3 += var5\n    return var3\nassert f({}, 'hbd') == ", "input": "{}, 'hbd'", "output": "'hbd'"}
{"old_id": "sample_751", "code": "def f(var1, var2, var3):\n    count = var1.count(var2)\n    if count < var3:\n        return var1.swapcase()\n    return var1\nassert f(\"wwwwhhhtttpp\", 'w', 3) == ", "input": "\"wwwwhhhtttpp\", 'w', 3", "output": "'wwwwhhhtttpp'"}
{"old_id": "sample_752", "code": "def f(var1, var2):\n    return (var2 - len(var1)) * 'z' + var1\nassert f('abc', 8) == ", "input": "'abc', 8", "output": "'zzzzzabc'"}
{"old_id": "sample_753", "code": "def f(var1):\n    values = list(var1.values())\n    var2 = {}\n    for var3 in range(100):\n        if var3 in values:\n            var2[var3] = values.count(var3)\n    return var2\nassert f({0: 0, 1: 0, 2: 0, 3: 0, 4: 0}) == ", "input": "{0: 0, 1: 0, 2: 0, 3: 0, 4: 0}", "output": "{0: 5}"}
{"old_id": "sample_754", "code": "def f(var1):\n    var1 = ['{0:{fill}>{width}}'.format(var2, **{'fill': '0', 'width': var1[0]}) for var2 in var1[1:]]\n    return [str(var2) for var2 in var1]\nassert f(['1', '2', '2', '44', '0', '7', '20257']) == ", "input": "['1', '2', '2', '44', '0', '7', '20257']", "output": "['2', '2', '44', '0', '7', '20257']"}
{"old_id": "sample_755", "code": "def f(replace, var1, var2):\n    while var2 in var1:\n        replace += 'ax'\n        var1 = var1.replace(var2, replace, 1)\n    return var1\nassert f('###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.') == ", "input": "'###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.'", "output": "'ph>t#A#BiEcDefW#ON#iiNCU'"}
{"old_id": "sample_756", "code": "def f(var1):\n    if var1.isalnum() and all(var2.isdigit() for var2 in var1):\n        return 'integer'\n    return 'string'\nassert f('') == ", "input": "''", "output": "'string'"}
{"old_id": "sample_757", "code": "def f(var1, var2, replace):\n    return var1.replace(var2, replace)\nassert f('a1a8', '1', 'n2') == ", "input": "'a1a8', '1', 'n2'", "output": "'an2a8'"}
{"old_id": "sample_758", "code": "def f(var1):\n    if var1[::-1] == var1:\n        return True\n    return False\nassert f([0, 3, 6, 2]) == ", "input": "[0, 3, 6, 2]", "output": "False"}
{"old_id": "sample_759", "code": "def f(var1, var2):\n    index = []\n    var3 = 0\n    while var3 != -1:\n        var3 = var1.find(var2, var3)\n        if var3 != -1:\n            index.append(var3)\n            var3 += len(var2)\n    return index\nassert f('egmdartoa', 'good') == ", "input": "'egmdartoa', 'good'", "output": "[]"}
{"old_id": "sample_761", "code": "def f(var1):\n    var2 = var1.copy()\n    var2[0::2] = var2[-1::-2]\n    var2.reverse()\n    return var2\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_762", "code": "def f(var1):\n    var1 = var1.lower()\n    capitalize = var1.capitalize()\n    return var1[:1] + capitalize[1:]\nassert f('this And cPanel') == ", "input": "'this And cPanel'", "output": "'this and cpanel'"}
{"old_id": "sample_763", "code": "def f(values, var1, var2):\n    return var1.rstrip(values).rstrip(var2)\nassert f('2Pn', 'yCxpg2C2Pny2', '') == ", "input": "'2Pn', 'yCxpg2C2Pny2', ''", "output": "'yCxpg2C2Pny'"}
{"old_id": "sample_764", "code": "def f(var1, var2, var3):\n    var4 = var1.replace(var2, var3)\n    var5 = var2[::-1]\n    while var5 in var4:\n        var4 = var4.replace(var5, var3)\n    return var4\nassert f(\"some test string\", \"some\", \"any\") == ", "input": "\"some test string\", \"some\", \"any\"", "output": "'any test string'"}
{"old_id": "sample_765", "code": "def f(var1):\n    return sum(1 for var2 in var1 if var2.isdigit())\nassert f('so456') == ", "input": "'so456'", "output": "3"}
{"old_id": "sample_766", "code": "def f(values, var1):\n    var2 = len(values)\n    var3 = dict.fromkeys(values, var1)\n    var3[''.join(sorted(values))] = var1 * 3\n    return var3\nassert f(['0','3'], 117) == ", "input": "['0','3'], 117", "output": "{'0': 117, '3': 117, '03': 351}"}
{"old_id": "sample_767", "code": "def f(var1):\n    var2 = var1.strip().split(' ')\n    for var3 in range(len(var2)):\n        if var2[var3].isdigit() is False:\n            return '-'\n    return \" \".join(var2)\nassert f(\"d khqw whi fwi bbn 41\") == ", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'"}
{"old_id": "sample_768", "code": "def f(var1, var2):\n    if var1.startswith(var2):\n        return var1\n    return var2 + f(var1, var2[-2::-1])\nassert f('abba', 'bab') == ", "input": "'abba', 'bab'", "output": "'bababba'"}
{"old_id": "sample_769", "code": "def f(var1):\n    var2 = [var3 for var3 in var1]\n    for var4, var3 in enumerate(var2):\n        var2[var4] = var3.swapcase()\n    return ''.join(var2)\nassert f('akA?riu') == ", "input": "'akA?riu'", "output": "'AKa?RIU'"}
{"old_id": "sample_770", "code": "def f(var1, var2):\n    count = var1.count(var2)\n    for var3 in range(count+1, 0, -1):\n        var1 = var1.center(len(var1)+var3 // len(var2), var2)\n    return var1\nassert f('$78'.upper(), '$') == ", "input": "'$78'.upper(), '$'", "output": "'$$78$$'"}
{"old_id": "sample_771", "code": "def f(items):\n    items = list(items)\n    var1 = []\n    while len(items) > 0:\n        var2 = items.index(min(items))\n        items.pop(var2)\n        var3 = items.pop(var2)\n        var1.append(var3)\n    return var1\nassert f((1, 2, 3, 4, 5, 6, 7, 8)) == ", "input": "(1, 2, 3, 4, 5, 6, 7, 8)", "output": "[2, 4, 6, 8]"}
{"old_id": "sample_772", "code": "def f(var1):\n    var2 = ''\n    for var3 in var1:\n        if not var3.islower():\n            var2 += var3\n    return var2\nassert f('serjgpoDFdbcA.') == ", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'"}
{"old_id": "sample_773", "code": "def f(var1, var2):\n    return var1.pop(var2)\nassert f([-7, 3, 1, -1, -1, 0, 4], 6) == ", "input": "[-7, 3, 1, -1, -1, 0, 4], 6", "output": "4"}
{"old_id": "sample_774", "code": "def f(var1, var2):\n    var3 = 'quiz leader = {}, count = {}'\n    return var3.format(var2, var1)\nassert f(23, 'Cornareti') == ", "input": "23, 'Cornareti'", "output": "'quiz leader = Cornareti, count = 23'"}
{"old_id": "sample_775", "code": "def f(var1):\n    count = len(var1)\n    for var2 in range(0, count // 2):\n        var1[var2], var1[count-var2-1] = var1[count-var2-1], var1[var2]\n    return var1\nassert f([2, 6, 1, 3, 1]) == ", "input": "[2, 6, 1, 3, 1]", "output": "[1, 3, 1, 6, 2]"}
{"old_id": "sample_776", "code": "def f(var1):\n    var2 = var1.copy()\n    for var3 in var2:\n        if var3%2 != 0:\n            del var2[var3]\n            var2['$'+str(var3)] = var2[var3]\n    return var2\nassert f({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_777", "code": "def f(var1, var2):\n    var2 = var2\n    for var3 in range(len(var1)):\n        if var2 in var1[var3]:\n            var1[var3] = var1[var3].replace(var2, \"\")\n    return var1\nassert f([\"avc  a .d e\"], \"\") == ", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']"}
{"old_id": "sample_778", "code": "def f(var1, var2):\n    if var2.startswith(var1):\n        return var2\n    else:\n        return var1 + var2\nassert f('mjs', 'mjqwmjsqjwisojqwiso') == ", "input": "'mjs', 'mjqwmjsqjwisojqwiso'", "output": "'mjsmjqwmjsqjwisojqwiso'"}
{"old_id": "sample_779", "code": "def f(var1):\n    values = var1.split()\n    return '${first}y, ${second}x, ${third}r, ${fourth}p' % dict({\n        'first': values[0],\n        'second': values[1],\n        'third': values[2],\n        'fourth': values[3]\n    })\nassert f('python ruby c javascript') == ", "input": "'python ruby c javascript'", "output": "'${first}y, ${second}x, ${third}r, ${fourth}p'"}
{"old_id": "sample_780", "code": "def f(var1):\n    var2 = [0] * 301\n\n    for var3 in var1:\n        var2[var3] += 1\n\n    var4 = []\n    for var3 in range(len(var2)):\n        if var2[var3] >= 3:\n            var4.append(str(var3))\n    var2.clear()\n    return ' '.join(var4)\nassert f([2, 3, 5, 2, 4, 5, 2, 89]) == ", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'"}
{"old_id": "sample_781", "code": "def f(var1, var2):\n    if var2 not in var1:\n        return ''\n    var1 = var1.partition(var2)[2][::-1]\n    for var3 in range(len(var1)):\n        var1 = var1.partition(var2)[2][::-1]\n    return var1\nassert f('shivajimonto6', '6') == ", "input": "'shivajimonto6', '6'", "output": "''"}
{"old_id": "sample_782", "code": "def f(input):\n    for var1 in input:\n        if var1.isupper():\n            return False\n    return True\nassert f(\"a j c n x X k\") == ", "input": "\"a j c n x X k\"", "output": "False"}
{"old_id": "sample_783", "code": "def f(var1, var2):\n    var3 = len(var2)\n    if var3 <= len(var1):\n        for var4 in range(var3):\n            if var2[var3 - var4 - 1] != var1[len(var1) - var4 - 1]:\n                return var4\n    return var3\nassert f(\"managed\", \"\") == ", "input": "\"managed\", \"\"", "output": "0"}
{"old_id": "sample_784", "code": "def f(var1, var2):\n    var3 = {var1: var2}\n    return dict.popitem(var3)\nassert f('read', 'Is') == ", "input": "'read', 'Is'", "output": "('read', 'Is')"}
{"old_id": "sample_785", "code": "def f(var1):\n    var2 = ''\n    for var3 in str(var1):\n        var2 += var3.ljust(int(var3) * 2)\n    return var2\nassert f(1) == ", "input": "1", "output": "'1 '"}
{"old_id": "sample_786", "code": "def f(var1, var2):\n    if var2 in var1:\n        var3 = var1.index(var2)\n        return var1[var3 + 1:] + var1[:var3 + 1]\n    return var1\nassert f('19kefp7', '9') == ", "input": "'19kefp7', '9'", "output": "'kefp719'"}
{"old_id": "sample_787", "code": "def f(var1):\n    if len(var1) == 0:\n        return ''\n    var1 = var1.lower()\n    return var1[0].upper() + var1[1:]\nassert f('xzd') == ", "input": "'xzd'", "output": "'Xzd'"}
{"old_id": "sample_788", "code": "def f(var1, var2):\n    if var2.startswith(\"/\"):\n        return var1 + var2[1:]\n    return var1\nassert f('hello.txt', '/') == ", "input": "'hello.txt', '/'", "output": "'hello.txt'"}
{"old_id": "sample_789", "code": "def f(var1, var2):\n    if var2 < 0 or len(var1) <= var2:\n        return var1\n    var3 = var1[0 : var2]\n    var4 = len(var3) - 1\n    while var4 >= 0:\n        if var3[var4] != var1[var4]:\n            break\n        var4 -= 1\n    return var1[0 : var4 + 1]\nassert f('bR', -1) == ", "input": "'bR', -1", "output": "'bR'"}
{"old_id": "sample_790", "code": "def f(var1):\n    var2 = {\n        'c': var1.copy(),\n        'd': var1.copy()\n    }\n    return (var2['c'] is var2['d'], var2['c'] == var2['d'])\nassert f({'i': 1, 'love': 'parakeets'}) == ", "input": "{'i': 1, 'love': 'parakeets'}", "output": "(False, True)"}
{"old_id": "sample_791", "code": "def f(var1, var2):\n    var3 = 1\n    var4 = str(var1)\n    while (var3+len(var4) < var2):\n        var3 += len(var4)\n    return var4.zfill(var3+len(var4))\nassert f(8999,2) == ", "input": "8999,2", "output": "'08999'"}
{"old_id": "sample_792", "code": "def f(var1, var2):\n    if len(var1) != len(var2):\n        return {}\n    return dict.fromkeys(var1, var2)\nassert f(['a', 'b'], ['car', 'dog']) == ", "input": "['a', 'b'], ['car', 'dog']", "output": "{'a': ['car', 'dog'], 'b': ['car', 'dog']}"}
{"old_id": "sample_793", "code": "def f(list, var1, var2):\n    count = 0\n    for var3 in range(var1, var2):\n        for var4 in range(var3, var2):\n            if list[var3] != list[var4]:\n                count += 1\n    return count\nassert f([1, 2, 4, 3, 2, 1], 0, 3) == ", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3"}
{"old_id": "sample_795", "code": "def f(var1):\n    return var1.title().replace('Io', 'io')\nassert f('Fu,ux zfujijabji pfu.') == ", "input": "'Fu,ux zfujijabji pfu.'", "output": "'Fu,Ux Zfujijabji Pfu.'"}
{"old_id": "sample_796", "code": "def f(str,var1):\n    if str.startswith(var1): return str[len(var1):]\n    else: return str\nassert f('fnuiyh', 'ni') == ", "input": "'fnuiyh', 'ni'", "output": "'fnuiyh'"}
{"old_id": "sample_797", "code": "def f(var1):\n    var2 = []\n    for var3 in sorted(var1):\n        var2.append((var3, var1[var3]))\n    return var2\nassert f({'a': 1, 'b': 2, 'c': 3}) == ", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[('a', 1), ('b', 2), ('c', 3)]"}
{"old_id": "sample_798", "code": "def f(var1, var2):\n    if not var1.startswith(var2):\n        return var1\n    return var1.removeprefix(var2)\nassert f('@hihu@!', '@hihu') == ", "input": "'@hihu@!', '@hihu'", "output": "'@!'"}
{"old_id": "sample_799", "code": "def f(var1):\n    if var1[0] == '~':\n        var2 = var1.rjust(10, 's')\n        return f(var2)\n    else:\n        return var1.rjust(10, 'n')\nassert f('eqe-;ew22') == ", "input": "'eqe-;ew22'", "output": "'neqe-;ew22'"}
