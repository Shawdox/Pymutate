{"old_id": "sample_0", "code": "def H(b):\n    o = []\n    for l in b:\n        o.append((b.count(l), l))\n    o.sort(reverse=True)\n    return o\nassert H([1, 1, 3, 1, 3, 1]) == ", "input": "[1, 1, 3, 1, 3, 1]", "output": "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]"}
{"old_id": "sample_1", "code": "def c(K, h, y):\n    I = {}\n    for P in K, h, y:\n        I.update(dict.fromkeys(P))\n    return I\nassert c((1, ), (1, ), (1, 2)) == ", "input": "(1, ), (1, ), (1, 2)", "output": "{1: None, 2: None}"}
{"old_id": "sample_2", "code": "def v(C):\n    S = list(C)\n    for j in '+':\n        if j in S:\n            S.remove(j)\n    return ''.join(S)\nassert v('hbtofdeiequ') == ", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'"}
{"old_id": "sample_3", "code": "def o(z, e):\n    r = list(z)\n    r.append(e)\n    return ''.join(r)\nassert o('bcksrut', 'q') == ", "input": "'bcksrut', 'q'", "output": "'bcksrutq'"}
{"old_id": "sample_4", "code": "def U(u):\n    E = ' '\n    E += ''.join(u)\n    return E\nassert U([' ', '  ', '    ', '   ']) == ", "input": "[' ', '  ', '    ', '   ']", "output": "'           '"}
{"old_id": "sample_5", "code": "def s(w, lower, upper):\n    count = 0\n    x = list()\n    for r in w:\n        r = lower if r.isdecimal() else upper\n        if r in ['p', 'C']:\n            count += 1\n        x.append(r)\n    return count, ''.join(x)\nassert s('DSUWeqExTQdCMGpqur', 'a', 'x') == ", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')"}
{"old_id": "sample_6", "code": "def C(g):\n    for L,p in sorted(g.items(), key=lambda W: len(str(W)))[:-1]:\n        g.pop(L)\n    return list(g.items())\nassert C({'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}) == ", "input": "{'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}", "output": "[('74', 31)]"}
{"old_id": "sample_7", "code": "def d(list):\n    v = list[:]\n    while len(list) > 1:\n        list.pop(len(list) - 1)\n        for f in range(len(list)):\n            list.pop(f)\n    list = v[:]\n    if list:\n        list.pop(0)\n    return list\nassert d([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_8", "code": "def z(n, H):\n    if H == 0:\n        return n\n    else:\n        return n.upper().encode('rot13')\nassert z('UppEr', 0) == ", "input": "'UppEr', 0", "output": "'UppEr'"}
{"old_id": "sample_9", "code": "def m(A):\n    for i in A:\n        if not i.isnumeric():\n            return False\n    return True\nassert m('#284376598') == ", "input": "'#284376598'", "output": "False"}
{"old_id": "sample_10", "code": "def Y(c):\n    L = ''\n    for z in c.lower().strip():\n        if z.isnumeric() or z in 'ÄäÏïÖöÜü':\n            L += z\n    return L\nassert Y('') == ", "input": "''", "output": "''"}
{"old_id": "sample_11", "code": "def G(U, x):\n    for K, W in x.items():\n        if K not in U:\n            U[K] = [W]\n        else:\n            U[K].append(W)\n    return U\nassert G({}, {'foo': 'bar'}) == ", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}"}
{"old_id": "sample_12", "code": "def V(h, C):\n    count = 0\n    while h[:len(C)] == C and count < len(h)-len(C):\n        h = h[len(C):]\n        count += len(C)\n    return h\nassert V('If you want to live a happy life! Daniel', 'Daniel') == ", "input": "'If you want to live a happy life! Daniel', 'Daniel'", "output": "'If you want to live a happy life! Daniel'"}
{"old_id": "sample_13", "code": "def e(X):\n    count = len(X)\n    h = 0\n    for M in X:\n        if M.isalpha():\n            h += 1\n    return h\nassert e(['sharron', 'Savannah', 'Mike Cherokee']) == ", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2"}
{"old_id": "sample_14", "code": "def Y(D):\n    y = list(D.strip())\n    y.reverse()\n    return ''.join(y)\nassert Y('   OOP   ') == ", "input": "'   OOP   '", "output": "'POO'"}
{"old_id": "sample_15", "code": "def c(E, b, A):\n    Y = E.replace(b, A)\n    return Y.upper()\nassert c(\"zn kgd jw lnt\", \"h\", \"u\") == ", "input": "\"zn kgd jw lnt\", \"h\", \"u\"", "output": "'ZN KGD JW LNT'"}
{"old_id": "sample_16", "code": "def E(k, H):\n    if k.endswith(H):\n        return k[:-len(H)]\n    return k\nassert E('zejrohaj', 'owc') == ", "input": "'zejrohaj', 'owc'", "output": "'zejrohaj'"}
{"old_id": "sample_17", "code": "def l(W):\n    return W.find(\",\")\nassert l(\"There are, no, commas, in this text\") == ", "input": "\"There are, no, commas, in this text\"", "output": "9"}
{"old_id": "sample_18", "code": "def q(E, n):\n    Q = 0\n    y = E.copy()\n    for r in y:\n        if r > n:\n            E.insert(Q, n)\n            break\n        Q += 1\n    return E\nassert q([5, 4, 3, 2, 1, 0], 3) == ", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]"}
{"old_id": "sample_19", "code": "def z(C, Q):\n    q = ''.join(['0' if K == '9' else '9' for K in Q[::-1]])\n    if (C.isnumeric() and q.isnumeric()):\n        return C + q\n    else:\n        return C\nassert z(\"\", \"sdasdnakjsda80\") == ", "input": "\"\", \"sdasdnakjsda80\"", "output": "''"}
{"old_id": "sample_20", "code": "def W(i):\n    Y = ''\n    for m in range(len(i)-1, -1, -1):\n        Y += i[m]\n    return Y\nassert W('was,') == ", "input": "'was,'", "output": "',saw'"}
{"old_id": "sample_21", "code": "def x(p):\n    V = p.pop()\n    p.extend([V, V])\n    return p\nassert x([1, 1, 2, 2]) == ", "input": "[1, 1, 2, 2]", "output": "[1, 1, 2, 2, 2]"}
{"old_id": "sample_22", "code": "def y(G):\n    if G == 0:\n        return [0]\n    v = []\n    while G > 0:\n        v.append(G%10)\n        G = G//10\n    v.reverse()\n    return int(''.join(str(V) for V in v))\nassert y(000) == ", "input": "000", "output": "[0]"}
{"old_id": "sample_23", "code": "def v(o, R):\n    if R:\n        o = o.rstrip(R)\n    else:\n        o = o.rstrip(' ')\n    if o == '':\n        return '-'\n    return o\nassert v('new-medium-performing-application - XQuery 2.2', '0123456789-') == ", "input": "'new-medium-performing-application - XQuery 2.2', '0123456789-'", "output": "'new-medium-performing-application - XQuery 2.'"}
{"old_id": "sample_24", "code": "def d(w, m):\n    w.pop(m)\n    return w\nassert d([35, 45, 3, 61, 39, 27, 47], 0) == ", "input": "[35, 45, 3, 61, 39, 27, 47], 0", "output": "[45, 3, 61, 39, 27, 47]"}
{"old_id": "sample_25", "code": "def d(N):\n    N = N.copy()\n    N.popitem()\n    return N\nassert d({\"l\": 1, \"t\": 2, \"x:\": 3}) == ", "input": "{\"l\": 1, \"t\": 2, \"x:\": 3}", "output": "{'l': 1, 't': 2}"}
{"old_id": "sample_26", "code": "def M(items, W):\n    for V in items.split():\n        if V in W:\n            return items.index(V)+1\n        if V.index('.') == len(V)-1 or V.index('.') == 0:\n            return 'error'\n    return '.'\nassert M(\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\") == ", "input": "\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"", "output": "'error'"}
{"old_id": "sample_27", "code": "def J(e):\n    i = list(e)\n    F = ''\n    while len(i) > 0:\n        F += i.pop(0)\n        if len(i) * 2 > len(e):\n            return e[len(i):] == F\n    return False\nassert J('flak') == ", "input": "'flak'", "output": "False"}
{"old_id": "sample_28", "code": "def V(p):\n    x = p[:]\n    x.reverse()\n    p.sort(reverse=True)\n    return p == x\nassert V([5, 8]) == ", "input": "[5, 8]", "output": "True"}
{"old_id": "sample_29", "code": "def q(G):\n    a = list(filter(str.isnumeric, G))\n    assert len(a) > 0\n    return ''.join(a)\nassert q('-123   \\t+314') == ", "input": "'-123   \\t+314'", "output": "'123314'"}
{"old_id": "sample_30", "code": "def d(E):\n    Z = []\n    for r in E:\n        if r.isascii() or (isinstance(r, int) and not str(abs(r)).isascii()):\n            Z.append(r)\n    return Z\nassert d([\"a\", \"b\", \"c\"]) == ", "input": "[\"a\", \"b\", \"c\"]", "output": "['a', 'b', 'c']"}
{"old_id": "sample_31", "code": "def o(A):\n    upper = 0\n    for D in A:\n        if D.isupper():\n            upper += 1\n    return upper * (2,1)[upper % 2]\nassert o('PoIOarTvpoead') == ", "input": "'PoIOarTvpoead'", "output": "8"}
{"old_id": "sample_32", "code": "def S(A, f):\n    reverse = ['*' + g for g in A.split(f)]\n    return ';'.join(reversed(reverse))\nassert S('volume', 'l') == ", "input": "'volume', 'l'", "output": "'*ume;*vo'"}
{"old_id": "sample_33", "code": "def x(w):\n    c = {}\n    for N in w:\n        if N in c:\n            c[N].append(w.pop(w.index(N)))\n        else:\n            c[N] = w[:w.index(N) + 1]\n    return str(c).replace(' ', '')\nassert x([5, 2, 7, 2, 3, 5]) == ", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'"}
{"old_id": "sample_34", "code": "def t(X, k, p):\n    while k in X:\n        X.remove(k)\n    while p in X:\n        X.remove(p)\n    return X\nassert t([1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1) == ", "input": "[1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1", "output": "[2, 7, 7, 6, 8, 4, 2, 5, 21]"}
{"old_id": "sample_35", "code": "def P(q, items):\n    m = []\n    for Q in items:\n        f = Q.rfind(q)\n        if f >= 0:\n            m.append(f)\n\n    return m\nassert P(\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]) == ", "input": "\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]", "output": "[]"}
{"old_id": "sample_36", "code": "def Q(e, W):\n    return e.rstrip(W) if e else e\nassert Q('ha', '') == ", "input": "'ha', ''", "output": "'ha'"}
{"old_id": "sample_37", "code": "def h(s):\n    i = []\n    for m in range(len(s)):\n        i.append(s[m:])\n    return i\nassert h('123') == ", "input": "'123'", "output": "['123', '23', '3']"}
{"old_id": "sample_38", "code": "def o(C):\n    return C.title().replace(' ', '')\nassert o('1oE-err bzz-bmm') == ", "input": "'1oE-err bzz-bmm'", "output": "'1Oe-ErrBzz-Bmm'"}
{"old_id": "sample_39", "code": "def A(x, D):\n    if D in x:\n        return x.index(D)\n    return -1\nassert A([6, 2, 7, 1], 6) == ", "input": "[6, 2, 7, 1], 6", "output": "0"}
{"old_id": "sample_40", "code": "def h(z):\n    return z.ljust(len(z) + 1, \"#\")\nassert h(\"the cow goes moo\") == ", "input": "\"the cow goes moo\"", "output": "'the cow goes moo#'"}
{"old_id": "sample_41", "code": "def z(S, values):\n    S.reverse()\n    for e in values:\n        S.insert(len(S) // 2, e)\n    S.reverse()\n    return S\nassert z([58], [21, 92]) == ", "input": "[58], [21, 92]", "output": "[58, 92, 21]"}
{"old_id": "sample_42", "code": "def M(V):\n    V.clear()\n    for b in V:\n        V.append(b*2)\n    return V\nassert M([4, 3, 2, 1, 2, -1, 4, 2]) == ", "input": "[4, 3, 2, 1, 2, -1, 4, 2]", "output": "[]"}
{"old_id": "sample_43", "code": "def k(F):\n    for f in str(F):\n        if not f.isdigit():\n            F = -1\n            break\n    return F\nassert k(\"6 ** 2\") == ", "input": "\"6 ** 2\"", "output": "-1"}
{"old_id": "sample_44", "code": "def P(b):\n    R = list(b)\n    for q in range(0, len(R)):\n        if R[q]!='+':\n            R.insert(q, '+')\n            R.insert(q, '*')\n            break\n    return '+'.join(R)\nassert P('nzoh') == ", "input": "'nzoh'", "output": "'*+++n+z+o+h'"}
{"old_id": "sample_45", "code": "def h(j, R):\n    C = {}\n    for o in j:\n        if o not in C:\n            C[o] = 1\n        else:\n            C[o] += 1\n    return C.get(R, 0)\nassert h('za1fd1as8f7afasdfam97adfa', '7') == ", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2"}
{"old_id": "sample_46", "code": "def u(j, U):\n    return U.join(j)\nassert u(['many', 'letters', 'asvsz', 'hello', 'man'], '') == ", "input": "['many', 'letters', 'asvsz', 'hello', 'man'], ''", "output": "'manylettersasvszhelloman'"}
{"old_id": "sample_48", "code": "def k(e):\n    if e == []:\n        return \"\"\n    I = e[0]\n    for E in e[1:]:\n        if E < I:\n            I = E\n    e.remove(I)\n    return e.join(I)\nassert k([]) == ", "input": "[]", "output": "''"}
{"old_id": "sample_49", "code": "def e(i):\n    if i.isidentifier():\n        return ''.join(J for J in i if J.isdigit())\n    else:\n        return ''.join(i)\nassert e('816') == ", "input": "'816'", "output": "'816'"}
{"old_id": "sample_50", "code": "def v(D):\n    D.clear()\n    D += [1] * (len(D) + 1)\n    return D\nassert v(['a', 'c', 'v']) == ", "input": "['a', 'c', 'v']", "output": "[1]"}
{"old_id": "sample_51", "code": "V = '<' * 10\ndef z(D):\n    if D % 2 == 0:\n        return V\n    else:\n        return D - 1\nassert z(21) == ", "input": "21", "output": "20"}
{"old_id": "sample_52", "code": "def C(g):\n    o = []\n    for w in range(len(g)):\n        if not g[w].isdecimal():\n            o.append(g[w])\n    return ''.join(o)\nassert C(\"seiq7229 d27\") == ", "input": "\"seiq7229 d27\"", "output": "'seiq d'"}
{"old_id": "sample_53", "code": "def N(A):\n    Z = {}\n    for C in A:\n        W = {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}\n        W = W.get(C, C)\n        Z[W] = Z.get(W, 0) + 1\n    return [g for z, g in Z.items()]\nassert N(\"URW rNB\") == ", "input": "\"URW rNB\"", "output": "[1, 1, 1, 1, 1, 1, 1]"}
{"old_id": "sample_54", "code": "def t(V, u, k):\n    Q = V[u:k]\n    if not Q:\n        return -1\n    return Q.index(min(Q))\nassert t('happy', 0, 3) == ", "input": "'happy', 0, 3", "output": "1"}
{"old_id": "sample_55", "code": "def k(P):\n    t = []\n    for R in P:\n        if R>0:\n            t += [R]\n    t.sort(reverse=True)\n    return t\nassert k([4, 8, 17, 89, 43, 14]) == ", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]"}
{"old_id": "sample_56", "code": "def s(R):\n    for d in R:\n        if d.isascii() is False:\n            return False\n        else:\n            continue\n    return True\nassert s('1z1z1') == ", "input": "'1z1z1'", "output": "True"}
{"old_id": "sample_57", "code": "def v(k):\n    k = k.upper()\n    j = 0\n    for m in k:\n        if m.isupper():\n            j += 1\n        else:\n            return 'no'\n    return j // 2\nassert v('ax') == ", "input": "'ax'", "output": "1"}
{"old_id": "sample_58", "code": "def h(x):\n    count = len(x)\n    for O in [O % 2 for O in range(count)]:\n        x.append(x[O])\n    return x\nassert h([-1, 0, 0, 1, 1]) == ", "input": "[-1, 0, 0, 1, 1]", "output": "[-1, 0, 0, 1, 1, -1, 0, -1, 0, -1]"}
{"old_id": "sample_59", "code": "def E(k):\n    Y = [W for W in k if W != ' ']\n    y = Y\n    for I in reversed(Y):\n        if I == ' ':\n            y.pop()\n        else:\n            break\n    return ''.join(y)\nassert E('hi ') == ", "input": "'hi '", "output": "'hi'"}
{"old_id": "sample_60", "code": "def h(G):\n    for i in G:\n        if i.isalpha():\n            return i.capitalize()\n    return '-'\nassert h('raruwa') == ", "input": "'raruwa'", "output": "'R'"}
{"old_id": "sample_61", "code": "def Y(x):\n    L = x.split()\n    if L:\n        M = [l for l in L if l.isascii() and l not in ('nada', '0')]\n        return max(M, e=len) if M else 'nada'\n    return 'nada'\nassert Y(\"\") == ", "input": "\"\"", "output": "'nada'"}
{"old_id": "sample_62", "code": "def X(T):\n    if len(list(T.keys())) > len(list(T.values())):\n        return tuple(T.keys())\n    return tuple(T.values())\nassert X({\"eating\" : \"ja\", \"books\" : \"nee\", \"piano\" : \"coke\", \"excitement\" : \"zoo\"}) == ", "input": "{\"eating\" : \"ja\", \"books\" : \"nee\", \"piano\" : \"coke\", \"excitement\" : \"zoo\"}", "output": "('ja', 'nee', 'coke', 'zoo')"}
{"old_id": "sample_63", "code": "def T(s, P):\n    while s.startswith(P):\n        s = s[len(P):] or s\n    return s\nassert T('ndbtdabdahesyehu', 'n') == ", "input": "'ndbtdabdahesyehu', 'n'", "output": "'dbtdabdahesyehu'"}
{"old_id": "sample_64", "code": "def K(U, a):\n    W = len(U)\n    for Q in range(a-int(a%2)):\n        U = ' '+U+' '\n        W += 2\n        if W >= a:\n            return U\nassert K(\"7\", 10) == ", "input": "\"7\", 10", "output": "'     7     '"}
{"old_id": "sample_65", "code": "def m(E, index):\n    return E[index] % 42 + E.pop(index) * 2\nassert m([3, 2, 0, 3, 7], 3) == ", "input": "[3, 2, 0, 3, 7], 3", "output": "9"}
{"old_id": "sample_66", "code": "def g(Q, T):\n    u = len(T)\n    if Q.startswith(T):\n        return Q[(u - 1) // 2:\n                    (u + 1) // 2 * -1:-1]\n    else:\n        return Q\nassert g('happy', 'ha') == ", "input": "'happy', 'ha'", "output": "''"}
{"old_id": "sample_68", "code": "def W(u, Q):\n    if u.startswith(Q):\n        m = len(Q)\n        u = '.'.join(u[m:].split('.')[1:] + u[:m].split('.')[:-1])\n    return u\nassert W('omeunhwpvr.dq', 'omeunh') == ", "input": "'omeunhwpvr.dq', 'omeunh'", "output": "'dq'"}
{"old_id": "sample_69", "code": "def R(l, X):\n    if X in l:\n        z = l.pop(X)\n        return z\n    return 'Name unknown'\nassert R({'882afmfp': 56}, '6f53p') == ", "input": "{'882afmfp': 56}, '6f53p'", "output": "'Name unknown'"}
{"old_id": "sample_70", "code": "def z(I):\n    G = 0\n    for K in I.split(' '):\n        G += len(K.zfill(len(K)*2))\n    return G\nassert z('999893767522480') == ", "input": "'999893767522480'", "output": "30"}
{"old_id": "sample_71", "code": "def b(T, L):\n    for a in range(L):\n        C = T.popitem()\n        T[C[1]] = C[0]\n    return T\nassert b({1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1) == ", "input": "{1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1", "output": "{1: 2, 3: 4, 5: 6, 7: 8, 10: 9}"}
{"old_id": "sample_72", "code": "def m(f):\n    for I in f:\n        if not I.isnumeric():\n            return False\n    return bool(f)\nassert m('99') == ", "input": "'99'", "output": "True"}
{"old_id": "sample_73", "code": "def U(k):\n    return (k.count('1'), k.count('0'))\nassert U(\"100010010\") == ", "input": "\"100010010\"", "output": "(3, 6)"}
{"old_id": "sample_74", "code": "def Q(F, L, a):\n    F.insert(L, a)\n    return F\nassert Q([44, 34, 23, 82, 24, 11, 63, 99], 4, 15) == ", "input": "[44, 34, 23, 82, 24, 11, 63, 99], 4, 15", "output": "[44, 34, 23, 82, 15, 24, 11, 63, 99]"}
{"old_id": "sample_75", "code": "def m(i, u):\n    v = i.index(u)\n    return v * 2 + i[-v - 1] * 3\nassert m([-1, 2, 1, -8, 2], 2) == ", "input": "[-1, 2, 1, -8, 2], 2", "output": "-22"}
{"old_id": "sample_76", "code": "def K(j):\n    j = [f for f in j if f > 0]\n    if len(j) <= 3:\n        return j\n    j.reverse()\n    s = len(j)//2\n    return j[:s] + [0]*5 + j[s:]\nassert K([10, 3, 2, 2, 6, 0]) == ", "input": "[10, 3, 2, 2, 6, 0]", "output": "[6, 2, 0, 0, 0, 0, 0, 2, 3, 10]"}
{"old_id": "sample_77", "code": "def W(j, O):\n    C = j[j.rfind(O):]\n    return C*j.count(O)\nassert W('h ,lpvvkohh,u', 'i') == ", "input": "'h ,lpvvkohh,u', 'i'", "output": "''"}
{"old_id": "sample_78", "code": "def A(j):\n    if j and j.isupper():\n        X = str.maketrans(H.E, H.W)\n        return j.translate(X)\n    return j.lower()[:3]\nassert A('mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n') == ", "input": "'mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n'", "output": "'mty'"}
{"old_id": "sample_79", "code": "def e(E):\n    E = list(E)\n    E.clear()\n    E.append('1')\n    E.append('2')\n    E.append('3')\n    E.append('4')\n    return ','.join(E)\nassert e([0, 1, 2, 3, 4]) == ", "input": "[0, 1, 2, 3, 4]", "output": "'1,2,3,4'"}
{"old_id": "sample_80", "code": "def A(F):\n    return ''.join(reversed(F.rstrip()))\nassert A('ab        ') == ", "input": "'ab        '", "output": "'ba'"}
{"old_id": "sample_81", "code": "def c(e, v):\n    try:\n        e[list(e)[list(e).index(v)]] = list(e)[list(e).index(v)].lower()\n    except ValueError:\n        pass\n    return list(e.items())\nassert c({\"Bulls\": 23, \"White Sox\": 45}, \"Bulls\") == ", "input": "{\"Bulls\": 23, \"White Sox\": 45}, \"Bulls\"", "output": "[('Bulls', 'bulls'), ('White Sox', 45)]"}
{"old_id": "sample_82", "code": "def X(C, j, Y, v):\n    return C and j or Y and v\nassert X('CJU', 'BFS', 'WBYDZPVES', 'Y') == ", "input": "'CJU', 'BFS', 'WBYDZPVES', 'Y'", "output": "'BFS'"}
{"old_id": "sample_84", "code": "def D(E):\n    x = E.split()\n    H = []\n    for y in x:\n        if y.endswith('day'):\n            y += 'y'\n        else:\n            y += 'day'\n        H.append(y)\n    return ' '.join(H)\nassert D(\"nwv mef ofme bdryl\") == ", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'"}
{"old_id": "sample_85", "code": "def c(G):\n    values = {0: 3, 1: 4.5, 2: '-'}\n    D = {}\n    for f, b in values.items():\n        if f % G != 2:\n            D[b] = G // 2\n    return sorted(D)\nassert c(12) == ", "input": "12", "output": "[3, 4.5]"}
{"old_id": "sample_86", "code": "def W(m, A, g):\n    b = [m, A]\n    if m == A:\n        return g\n    if g == 1:\n        return b.pop()\n    else:\n        b.reverse()\n        return b.pop()\nassert W(['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0) == ", "input": "['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0", "output": "['sdfs', 'drcr', '2e']"}
{"old_id": "sample_87", "code": "def E(O):\n    O.reverse()\n    return ''.join(map(str, O))\nassert E([-1, 9, 3, 1, -2]) == ", "input": "[-1, 9, 3, 1, -2]", "output": "'-2139-1'"}
{"old_id": "sample_88", "code": "def B(o, M):\n    if M.endswith(o):\n        M = M[:len(o) * -1]\n    return M\nassert B(\"he\", \"hello\") == ", "input": "\"he\", \"hello\"", "output": "'hello'"}
{"old_id": "sample_89", "code": "def q(O):\n    if O not in 'aeiouAEIOU':\n        return None\n    if O in 'AEIOU':\n        return O.lower()\n    return O.upper()\nassert q('o') == ", "input": "'o'", "output": "'O'"}
{"old_id": "sample_90", "code": "def v(U):\n    p = []\n    for S in U:\n        p.append(S.copy())\n    return p\nassert v([[1, 2, 3], [], [1, 2, 3]]) == ", "input": "[[1, 2, 3], [], [1, 2, 3]]", "output": "[[1, 2, 3], [], [1, 2, 3]]"}
{"old_id": "sample_91", "code": "def z(N):\n    Q = dict.fromkeys(N, 0)\n    return list(Q.keys())\nassert z(\"12ab23xy\") == ", "input": "\"12ab23xy\"", "output": "['1', '2', 'a', 'b', '3', 'x', 'y']"}
{"old_id": "sample_92", "code": "def z(k):\n    return k.isascii()\nassert z('wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct') == ", "input": "'wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct'", "output": "False"}
{"old_id": "sample_93", "code": "def I(G):\n    E = len(G) + 2\n    z = list(G)\n    Q = ''.join(z)\n    z.clear()\n    return Q + ('!' * E)\nassert I('iq') == ", "input": "'iq'", "output": "'iq!!!!'"}
{"old_id": "sample_94", "code": "def D(B, w):\n    return {**B, **w}\nassert D({'w': 5, 'wi': 10}, {'w': 3}) == ", "input": "{'w': 5, 'wi': 10}, {'w': 3}", "output": "{'w': 3, 'wi': 10}"}
{"old_id": "sample_95", "code": "def d(v):\n    return dict((Z, m) for m, Z in v.items())\nassert d({'AAA': 'fr'}) == ", "input": "{'AAA': 'fr'}", "output": "{'fr': 'AAA'}"}
{"old_id": "sample_96", "code": "def k(x):\n    return not any([K.isupper() for K in x])\nassert k('lunabotics') == ", "input": "'lunabotics'", "output": "True"}
{"old_id": "sample_97", "code": "def a(K):\n    K.clear()\n    for C in K:\n        if C == 3:\n            return False\n    else:\n        return True\nassert a([2, 0]) == ", "input": "[2, 0]", "output": "True"}
{"old_id": "sample_98", "code": "def O(e):\n    return sum([e.istitle() for e in e.split()])\nassert O('SOME OF THIS Is uknowN!') == ", "input": "'SOME OF THIS Is uknowN!'", "output": "1"}
{"old_id": "sample_99", "code": "def A(b, O, j):\n    return '___'.join(b.rsplit(O, j))\nassert A('aa+++bb', '+', 1) == ", "input": "'aa+++bb', '+', 1", "output": "'aa++___bb'"}
{"old_id": "sample_100", "code": "def E(J, z):\n    r = J.copy()\n    for R in z:\n        if R in r:\n            del r[R]\n    return r\nassert E({'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]) == ", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}"}
{"old_id": "sample_101", "code": "def V(S, c, l):\n    S.insert(c, l)\n    return S\nassert V([ -4,   1,  0], 1, 4) == ", "input": "[ -4,   1,  0], 1, 4", "output": "[-4, 4, 1, 0]"}
{"old_id": "sample_102", "code": "def x(X, L):\n    Q = [X.index(e) for e in X if e in L]\n    Q.sort(reverse=True)\n    return Q\nassert x(['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']) == ", "input": "['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']", "output": "[]"}
{"old_id": "sample_103", "code": "def T(P):\n    return ''.join((V.casefold() for V in P))\nassert T('abcDEFGhIJ') == ", "input": "'abcDEFGhIJ'", "output": "'abcdefghij'"}
{"old_id": "sample_104", "code": "def g(G):\n    O = dict()\n    for d in G:\n        O[d] = O.get(d, 0) + 1\n    for D in O:\n        if O[D] > 1:\n            O[D] = 1\n    return O\nassert g(\"a\") == ", "input": "\"a\"", "output": "{'a': 1}"}
{"old_id": "sample_105", "code": "def F(h):\n    if not h.istitle():\n        return h.title()\n    return h.lower()\nassert F(\"PermissioN is GRANTed\") == ", "input": "\"PermissioN is GRANTed\"", "output": "'Permission Is Granted'"}
{"old_id": "sample_106", "code": "def u(H):\n    count = len(H)\n    for Y in range(0, count):\n        H.insert(Y, H[Y]*2)\n    return H\nassert u([2, 8, -2, 9, 3, 3]) == ", "input": "[2, 8, -2, 9, 3, 3]", "output": "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]"}
{"old_id": "sample_107", "code": "def d(n):\n    h = []\n    for c in range(len(n)):\n        if not n[c].isascii():\n            return False\n        elif n[c].isalnum():\n            h.append(n[c].upper())\n        else:\n            h.append(n[c])\n    return ''.join(h)\nassert d(\"ua6hajq\") == ", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'"}
{"old_id": "sample_108", "code": "def Q(U):\n    j = len(U) if type(U) == list else 0\n    if type(U) == dict:\n        j = len(U.keys())\n    p = j if j > 0 else 0\n    return p\nassert Q(1) == ", "input": "1", "output": "0"}
{"old_id": "sample_109", "code": "def K(R, X, G):\n    R.insert(X, G)\n    return R\nassert K([1, 0, 1, 1], 0, 9) == ", "input": "[1, 0, 1, 1], 0, 9", "output": "[9, 1, 0, 1, 1]"}
{"old_id": "sample_110", "code": "def Y(u):\n    h = ['']\n    P = ''\n    for G in u:\n        if not G.isspace():\n            h.append(P)\n            P = ''\n        else:\n            P += G\n    return len(h)\nassert Y(\"       \") == ", "input": "\"       \"", "output": "1"}
{"old_id": "sample_111", "code": "def Z(d):\n    n = 0\n    S = 100\n    for U in d.values():\n        if U > n:\n            n = U\n        if U < S:\n            S = U\n    return n, S\nassert Z({'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}) == ", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)"}
{"old_id": "sample_112", "code": "def k(V):\n    t = list(V)\n    for R in t:\n        if not R.istitle():\n            t.remove(R)\n    return ''.join(t)\nassert k('XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault') == ", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'"}
{"old_id": "sample_113", "code": "def E(C):\n    count = 0\n    U = []\n    for Z in range(len(C)):\n        count += 1\n        if count%2==0:\n            U.append(C[Z].swapcase())\n        else:\n            U.append(C[Z])\n    return ''.join(U)\nassert E(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\") == ", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'"}
{"old_id": "sample_116", "code": "def J(Z, count):\n    for W in range(count):\n        if Z == {}:\n            break\n        Z.popitem()\n    return Z\nassert J({}, 200) == ", "input": "{}, 200", "output": "{}"}
{"old_id": "sample_117", "code": "def u(I):\n    for m in range(len(I)):\n        if I.count('3') > 1:\n            return m\n    return -1\nassert u(\"23157\") == ", "input": "\"23157\"", "output": "-1"}
{"old_id": "sample_118", "code": "def g(r, j):\n    E = 2\n    K = ''\n    for B in range(E):\n        K += j\n        r = r.replace(K, '')\n    return r\nassert g('zbzquiuqnmfkx', 'mk') == ", "input": "'zbzquiuqnmfkx', 'mk'", "output": "'zbzquiuqnmfkx'"}
{"old_id": "sample_119", "code": "def A(C):\n    l = \"\"\n    for U in range(len(C)):\n        if U % 2 == 0:\n            l += C[U].swapcase()\n        else:\n            l += C[U]\n    return l\nassert A(\"vsnlygltaw\") == ", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'"}
{"old_id": "sample_120", "code": "def c(U):\n    k = dict()\n    for z, F in U.items():\n        if F not in k:\n            k[F] = []\n        k[F].append(z)\n    return k\nassert c({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_121", "code": "def C(x):\n    E = ''.join(filter(lambda z:z.isdecimal(), x))\n    if E == '': return 'none'\n    U = max([int(o) for o in E.split(',')])\n    return str(U)\nassert C('01,001') == ", "input": "'01,001'", "output": "'1001'"}
{"old_id": "sample_122", "code": "def e(p):\n    if p[:4] != 'Nuva':\n        return 'no'\n    else:\n        return p.rstrip()\nassert e('Nuva?dlfuyjys') == ", "input": "'Nuva?dlfuyjys'", "output": "'Nuva?dlfuyjys'"}
{"old_id": "sample_123", "code": "def a(Y, U):\n    for d, m in enumerate(Y):\n        if m > U and Y[d - 1] < U:\n            Y.insert(d, U)\n    return Y\nassert a([1, 2, 3, 5, 8], 6) == ", "input": "[1, 2, 3, 5, 8], 6", "output": "[1, 2, 3, 5, 6, 8]"}
{"old_id": "sample_124", "code": "def j(F, w, r):\n    b = ''\n    while r > 0 and F.count(w) > 0:\n        b += F.rsplit(w, 1)[0] + w\n        F = F.rsplit(w, 1)[1]\n        r -= 1\n    return b + F\nassert j('i like you', ' ', -1) == ", "input": "'i like you', ' ', -1", "output": "'i like you'"}
{"old_id": "sample_125", "code": "def l(e, w):\n    for Y in '*\\n\"':\n        e = e.replace(Y, '!' + str(w))\n    if e.startswith('!'):\n        e = e[len(str(w)):]\n    return e\nassert l('\"Leap and the net will appear', 123) == ", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'"}
{"old_id": "sample_126", "code": "def M(A):\n    t = A.rpartition('o')\n    l, j = (t[0] == '' and '-' or t[0]), (t[2] == '' and '-' or t[2])\n    return t[1] + l + t[1] + j\nassert M('kkxkxxfck') == ", "input": "'kkxkxxfck'", "output": "'-kkxkxxfck'"}
{"old_id": "sample_127", "code": "def n(G):\n    C = G.splitlines()\n    return len(C)\nassert n(\"145\\n\\n12fjkjg\") == ", "input": "\"145\\n\\n12fjkjg\"", "output": "3"}
{"old_id": "sample_128", "code": "def O(V):\n    E = ''\n    q = ''\n    for m, n in enumerate(V):\n        if m % 2 == 0:\n            q += n\n        else:\n            E += n\n    return q + E.lower()\nassert O('Mammoth') == ", "input": "'Mammoth'", "output": "'Mmohamt'"}
{"old_id": "sample_129", "code": "def O(D, Z):\n    g = []\n    while Z in D:\n        g.append(D.rindex(Z))\n        D = D[:D.rindex(Z)]\n    return g\nassert O('ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ', 'J') == ", "input": "'ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ', 'J'", "output": "[28, 19, 12, 6]"}
{"old_id": "sample_130", "code": "def s(l):\n    items = list(l.items())\n    for S in range(len(items)-2, -1, -1):\n        M = items[S]\n        items[S] = items[S+1] \n        items[S+1] = M\n    return ['{}={}', '{1}={0}'][len(items) % 2].format(\n        *l.keys(), **l\n    )\nassert s({'l':4, 'h':6, 'o':9}) == ", "input": "{'l':4, 'h':6, 'o':9}", "output": "'h=l'"}
{"old_id": "sample_131", "code": "def q(I):\n    O = len(I)\n    count = 0\n    while I:\n        if I.startswith('a'):\n            count += I.find(' ')\n        else:\n            count += I.find('\\n')\n        I = I[I.find('\\n')+1:I.find('\\n')+O+1]\n    return count\nassert q(\"a\\nkgf\\nasd\\n\") == ", "input": "\"a\\nkgf\\nasd\\n\"", "output": "1"}
{"old_id": "sample_132", "code": "def P(w, b):\n    if w.removeprefix(b):\n        return w\n    else:\n        return b + w\nassert P('abc', 'abcd') == ", "input": "'abc', 'abcd'", "output": "'abc'"}
{"old_id": "sample_133", "code": "def x(c, D):\n    P = []\n    for A in range(len(D)):\n        P.append(c.pop())\n    return c\nassert x([7, 1, 2, 6, 0, 2], [9, 0, 3]) == ", "input": "[7, 1, 2, 6, 0, 2], [9, 0, 3]", "output": "[7, 1, 2]"}
{"old_id": "sample_134", "code": "def b(N):\n    l = 0\n    f = ''\n    U = list(map(int, str(N)))\n    for H in U:\n        if H == 0: l += 1\n        else: break\n    for G in range(l):\n        f += str(1) + '0' + str(4)\n    f += str(N)\n    return f\nassert b(372359) == ", "input": "372359", "output": "'372359'"}
{"old_id": "sample_135", "code": "def Y():\n    z = {\n        'Russia': [('Moscow', 'Russia'), ('Vladivostok', 'Russia')],\n        'Kazakhstan': [('Astana', 'Kazakhstan')],\n    }\n    return list(z.keys())\nassert Y() == ", "input": "", "output": "['Russia', 'Kazakhstan']"}
{"old_id": "sample_136", "code": "def X(U, H):\n    N = [r.center(H) for r in U.split('\\n')]\n    return '\\n'.join(N)\nassert X(\"a\\nbc\\n\\nd\\nef\", 5) == ", "input": "\"a\\nbc\\n\\nd\\nef\", 5", "output": "'  a  \\n  bc \\n     \\n  d  \\n  ef '"}
{"old_id": "sample_137", "code": "def U(k):\n    count = 0\n    for Q in range(len(k)):\n        if len(k) == 0:\n            break\n        if count % 2 == 0:\n            k.pop()\n        else:\n            k.pop(0)\n        count += 1\n    return k\nassert U([3, 2, 0, 0, 2, 3]) == ", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]"}
{"old_id": "sample_138", "code": "def h(J, G):\n    g = list(G)\n    A = g.pop()\n    for m in g:\n        J = J[0:J.find(m)]+m+J[J.find(m)+1:]\n    return J\nassert h('tflb omn rtt', 'm') == ", "input": "'tflb omn rtt', 'm'", "output": "'tflb omn rtt'"}
{"old_id": "sample_139", "code": "def E(f, r):\n    if len(f) < 10 or len(r) < 10:\n        return 'no'\n    for j in range(5):\n        if f[j] != r[j]:\n            return 'no'\n    f.extend(r)\n    return f\nassert E([1, 2, 1], [1, 1, 2]) == ", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'"}
{"old_id": "sample_140", "code": "def x(m):\n    if m.lower().rindex('h', m.lower().rindex('i')) >= m.lower().rindex('i'):\n        return 'Hey'\n    else:\n        return 'Hi'\nassert x('Hi there') == ", "input": "'Hi there'", "output": "'Hey'"}
{"old_id": "sample_141", "code": "def f(M):\n    return [M.count(a) for a in M]\nassert f(['k', 'x', 'c', 'x', 'x', 'b', 'l', 'f', 'r', 'n', 'g']) == ", "input": "['k', 'x', 'c', 'x', 'x', 'b', 'l', 'f', 'r', 'n', 'g']", "output": "[1, 3, 1, 3, 3, 1, 1, 1, 1, 1, 1]"}
{"old_id": "sample_142", "code": "def o(m):\n    if m.islower():\n        return m\n    else:\n        return m[::-1]\nassert o('ykdfhp') == ", "input": "'ykdfhp'", "output": "'ykdfhp'"}
{"old_id": "sample_143", "code": "def U(P, h):\n    return P.casefold() == h.casefold()\nassert U(\"daaX\", \"daaX\") == ", "input": "\"daaX\", \"daaX\"", "output": "True"}
{"old_id": "sample_144", "code": "def r(v):\n    C = []\n    for x in v:\n        x.sort()\n        C.append(x)\n    return C\nassert r([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_145", "code": "def s(y, E):\n    b = ['olives', 'key', 'orange']\n    if E not in b:\n        return y\n    else:\n        y *=.85\n        b.remove(E)\n    return y\nassert s(8.50, 'grapes') == ", "input": "8.50, 'grapes'", "output": "8.5"}
{"old_id": "sample_146", "code": "def P(R):\n    l = []\n    for V in range(1, 11):\n        if V != R:\n            l.append(V)\n    return l\nassert P(5) == ", "input": "5", "output": "[1, 2, 3, 4, 6, 7, 8, 9, 10]"}
{"old_id": "sample_147", "code": "def z(M):\n    h = len(M)//2\n    return M[h:] + M[0:h]\nassert z([1, 1, 1]) == ", "input": "[1, 1, 1]", "output": "[1, 1, 1]"}
{"old_id": "sample_148", "code": "def d(N, U):\n    index = N.index(U)\n    k = list(N)\n    while index < len(N)-1:\n        k[index] = N[index+1]\n        index += 1\n    if index == len(N)-1:\n        k[index] = '-'\n    return ''.join(k)\nassert d('2imo 12 tfiqr.', 'm') == ", "input": "'2imo 12 tfiqr.', 'm'", "output": "'2io 12 tfiqr.-'"}
{"old_id": "sample_149", "code": "def N(O, T):\n    A = ''\n    for h in O:\n        A += dict.fromkeys(str(h), T * len(str(h))).popitem()[0] + T\n    return A\nassert N((32332, 23543, 132323, 33300), ',') == ", "input": "(32332, 23543, 132323, 33300), ','", "output": "'2,4,2,0,'"}
{"old_id": "sample_150", "code": "def t(p, index):\n    for y in p[index:]:\n        p.insert(index, y)\n        index += 1\n    return p[:index]\nassert t([-2, 4, -4], 0) == ", "input": "[-2, 4, -4], 0", "output": "[-2, 4, -4]"}
{"old_id": "sample_151", "code": "def D(U):\n    for N in U:\n        if N.isdigit():\n            if N == '0':\n                N = '.'\n            else:\n                N = '0' if N != '1' else '.'\n    return ''.join(list(U)).replace('.', '0')\nassert D('697 this is the ultimate 7 address to attack') == ", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'"}
{"old_id": "sample_152", "code": "def Q(d):\n    h = 0\n    for u in d:\n        if u.isupper():\n            h += 1\n    return h\nassert Q(''.join(['A'] * 20)) == ", "input": "''.join(['A'] * 20)", "output": "20"}
{"old_id": "sample_153", "code": "def E(c, k, J):\n    S = str(J)\n    return c.endswith(k + S)\nassert E('friends and love', 'and', 3) == ", "input": "'friends and love', 'and', 3", "output": "False"}
{"old_id": "sample_154", "code": "def H(K, L):\n    K = K.split(' ')\n    return ((L + \"  \") + (\"  \".join(K[::-1])))\nassert H('Hello There', '*') == ", "input": "'Hello There', '*'", "output": "'*  There  Hello'"}
{"old_id": "sample_155", "code": "def C(g, b):\n    j = 0\n    E = ''\n    for x in g:\n        if j == b:\n            E += '\\n'\n            j = 0\n        j += 1\n        E += x\n    return E\nassert C(\"dskjs hjcdjnxhjicnn\", 4) == ", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'"}
{"old_id": "sample_156", "code": "def c(K, f, M):\n    if f < len(K):\n        return K[0:f]\n    return K.ljust(f, M)\nassert c('tqzym', 5, 'c') == ", "input": "'tqzym', 5, 'c'", "output": "'tqzym'"}
{"old_id": "sample_157", "code": "def r(u):\n    o = 0\n    for L in u.split():\n        for a in L:\n            if a == \"0\":\n                o += 1\n    return o\nassert r(\"aboba 212 has 0 digits\") == ", "input": "\"aboba 212 has 0 digits\"", "output": "1"}
{"old_id": "sample_158", "code": "def c(k):\n    K = [h for h in k if h%2 == 0]\n    S = K+k\n    for n in S:\n        if S.index(n) >= len(K):\n            S.remove(n)\n    return S\nassert c([3, 6, 4, -2, 5]) == ", "input": "[3, 6, 4, -2, 5]", "output": "[6, 4, -2, 6, 4, -2]"}
{"old_id": "sample_159", "code": "def d(q):\n    a = ''\n    for o in reversed(q):\n        a += o.swapcase()\n    return a\nassert d('RTiGM') == ", "input": "'RTiGM'", "output": "'mgItr'"}
{"old_id": "sample_160", "code": "def N(H):\n    while not H.get(1, len(H)):\n        H.clear()\n        break\n    return H\nassert N({1: 47698, 1: 32849, 1: 38381, 3: 83607}) == ", "input": "{1: 47698, 1: 32849, 1: 38381, 3: 83607}", "output": "{1: 38381, 3: 83607}"}
{"old_id": "sample_161", "code": "def e(R, F):\n    l, O, E = R.partition(F)\n    return E + l\nassert e('difkj rinpx', 'k') == ", "input": "'difkj rinpx', 'k'", "output": "'j rinpxdif'"}
{"old_id": "sample_162", "code": "def u(e):\n    E = ''\n    for g in e:\n        if g.isalnum():\n            E += g.upper()\n    return E\nassert u('с bishop.Swift') == ", "input": "'с bishop.Swift'", "output": "'СBISHOPSWIFT'"}
{"old_id": "sample_163", "code": "def w(L, B, z):\n    R = ''.join(B for l in range(z-len(L)))\n    return L + R\nassert w('w', '))', 7) == ", "input": "'w', '))', 7", "output": "'w))))))))))))'"}
{"old_id": "sample_164", "code": "def a(p):\n    p.sort()\n    return p[0:3]\nassert a([5, 8, 1, 3, 0]) == ", "input": "[5, 8, 1, 3, 0]", "output": "[0, 1, 3]"}
{"old_id": "sample_165", "code": "def A(I, lower, upper):\n    return I[lower:upper].isascii()\nassert A('=xtanp|sugv?z', 3, 6) == ", "input": "'=xtanp|sugv?z', 3, 6", "output": "True"}
{"old_id": "sample_166", "code": "def o(O):\n    c = {}\n    for P, n in O.items():\n        c[P] = {}\n        for D in n:\n            c[P][D] = ''\n    return c\nassert o({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_167", "code": "def C(b, Y):\n    count = 0\n    o = -1\n    while b.find('XXXX', o+1) != -1:\n        o = b.find('XXXX', o+1) \n        count += 1 \n    H = count * Y.title()\n    return b.replace('XXXX', H)\nassert C('aaXXXXbbXXXXccXXXXde', 'QW') == ", "input": "'aaXXXXbbXXXXccXXXXde', 'QW'", "output": "'aaQwQwQwbbQwQwQwccQwQwQwde'"}
{"old_id": "sample_168", "code": "def u(J, L, index):\n    v = J.maketrans(J[index], L)\n    return J.translate(v)\nassert u('spain', 'b', 4) == ", "input": "'spain', 'b', 4", "output": "'spaib'"}
{"old_id": "sample_169", "code": "def D(M):\n    b = list(M)\n    T = (len(M) - 1) * 2\n    for G in range(1, T+1):\n        if G % 2:\n            b.append('+')\n        else:\n            b.insert(0, '+')\n    return ''.join(b).rjust(T)\nassert D('taole') == ", "input": "'taole'", "output": "'++++taole++++'"}
{"old_id": "sample_170", "code": "def u(Z, K):\n    return Z.count(K)\nassert u([12, 0, 13, 4, 12], 12) == ", "input": "[12, 0, 13, 4, 12], 12", "output": "2"}
{"old_id": "sample_171", "code": "def h(l):\n    count = len(l) // 2\n    for b in range(count):\n        l.pop(0)\n    return l\nassert h([3, 4, 1, 2, 3]) == ", "input": "[3, 4, 1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_172", "code": "def A(s):\n    for p in range(len(s)):\n        if s[p] < 0:\n            s.pop(p)\n    return s\nassert A([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_173", "code": "def c(V):\n    f = len(V)\n    o = []\n    for e in range(f):\n        o.append(V.pop())\n    return o\nassert c([5, 8, 6, 8, 4]) == ", "input": "[5, 8, 6, 8, 4]", "output": "[4, 8, 6, 8, 5]"}
{"old_id": "sample_174", "code": "def S(H):\n    H[1:4] = H[1:4][::-1]\n    return H\nassert S([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 3, 2]"}
{"old_id": "sample_175", "code": "def X(m, n):\n    r = m.splitlines()\n    q = max(map(lambda O: O.rfind(' '), r))\n    w = [[O, (q + 1) * n - O.rfind(' ')] for O in r]\n    for E, L in enumerate(w):\n        w[E][0] = L[0] + ' ' * L[1]\n    return '\\n'.join(map(lambda O: O[0], w))\nassert X('\\n', 2) == ", "input": "'\\n', 2", "output": "' '"}
{"old_id": "sample_176", "code": "def p(f, X):\n    s = f[:f.find(X, 0) + 1]\n    k = f[f.find(X, 0) + 1:]\n    return s + k\nassert p('some text', 'some') == ", "input": "'some text', 'some'", "output": "'some text'"}
{"old_id": "sample_177", "code": "def K(r):\n    r = list(r)\n    for c in range(len(r)):\n        if c % 2 == 1:\n            r[c] = r[c].swapcase()\n    return ''.join(r)\nassert K('Hey DUdE THis $nd^ &*&this@#') == ", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'"}
{"old_id": "sample_178", "code": "def M(m, o):\n    return m[o:]\nassert M([0, 0, 1, 2, 2, 2, 2], 4) == ", "input": "[0, 0, 1, 2, 2, 2, 2], 4", "output": "[2, 2, 2]"}
{"old_id": "sample_179", "code": "def m(e):\n    # o in Q copy N s x e\n    e = e[:]\n    count = len(e)\n    for K in range(-count+1, 0):\n        e.insert(0, e[K])\n    return e\nassert m([7, 1, 2, 6, 0, 2]) == ", "input": "[7, 1, 2, 6, 0, 2]", "output": "[2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2]"}
{"old_id": "sample_180", "code": "def O(m):\n    p = -1\n    b = m[1:]\n    while p <= b[0]:\n        m.remove(b[0])\n        p = 0\n        b = b[1:]\n    return m\nassert O([-1, 5, 3, -2, -6, 8, 8]) == ", "input": "[-1, 5, 3, -2, -6, 8, 8]", "output": "[-1, -2, -6, 8, 8]"}
{"old_id": "sample_181", "code": "def r(w):\n    count = 0\n    u = \"\"\n    for B in w:\n        if B.isdigit():\n            count += 1\n            u += B\n    return [u, count]\nassert r(\"qwfasgahh329kn12a23\") == ", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]"}
{"old_id": "sample_182", "code": "def d(j):\n    return sorted(j.items(), key=lambda B: B[0])\nassert d({'b': 1, 'a': 2}) == ", "input": "{'b': 1, 'a': 2}", "output": "[('a', 2), ('b', 1)]"}
{"old_id": "sample_183", "code": "def K(m):\n    L = m.split()\n    V = \" \".join(L[::3]).splitlines()\n    j = []\n    for T in range(2):\n        N = L[1::3]\n        if 3 * T + 1 < len(N):\n            j.append(\" \".join(N[3 * T:3 * (T + 1)]))\n    return V + j\nassert K(\"echo hello!!! nice!\") == ", "input": "\"echo hello!!! nice!\"", "output": "['echo']"}
{"old_id": "sample_184", "code": "def z(S):\n    S.reverse()\n    if len(S) < 2:\n        return S\n    for C in range(0, len(S), 2):\n        S[C], S[C+1] = S[C+1], S[C]\n    return S\nassert z([1,2]) == ", "input": "[1,2]", "output": "[1, 2]"}
{"old_id": "sample_185", "code": "def u(Q):\n    J = len(Q)\n    for e in range(1, J//2 + 1):\n        M = e - 1\n        v = J - e\n        while M < v:\n            # N o:\n            Q[M], Q[v] = Q[v], Q[M]\n            # update M, v:\n            M += 1\n            v -= 1\n    return Q\nassert u([16, 14, 12, 7, 9, 11]) == ", "input": "[16, 14, 12, 7, 9, 11]", "output": "[11, 14, 7, 12, 9, 16]"}
{"old_id": "sample_186", "code": "def V(K):\n    return ' '.join(map(str.lstrip, K.split()))\nassert V('pvtso') == ", "input": "'pvtso'", "output": "'pvtso'"}
{"old_id": "sample_187", "code": "def B(l, index):\n    P = len(l.items())\n    Q = index % P\n    R = l.popitem()[1]\n    for F in range(Q):\n        l.popitem()\n    return R\nassert B({27:39}, 1) == ", "input": "{27:39}, 1", "output": "39"}
{"old_id": "sample_188", "code": "def K(p):\n    W = []\n    for U in p:\n        B = U[:2]\n        if B.startswith('a') or B.startswith('p'):\n            W.append(B)\n\n    return W\nassert K([\"a\", \"b\", \"car\", \"d\"]) == ", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']"}
{"old_id": "sample_190", "code": "def o(m):\n    e = ''\n    for S in m:\n        if(S.islower()):\n            e += S\n    return e\nassert o('980jio80jic kld094398IIl ') == ", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'"}
{"old_id": "sample_191", "code": "def J(G):\n    if G.isupper():\n        return True\n    else:\n        return False\nassert J('Ohno') == ", "input": "'Ohno'", "output": "False"}
{"old_id": "sample_192", "code": "def r(T, S):\n    W = T\n    while T.endswith(S):\n        W = T[:-len(S)]\n        T = W\n    return W\nassert r('!klcd!ma:ri', '!') == ", "input": "'!klcd!ma:ri', '!'", "output": "'!klcd!ma:ri'"}
{"old_id": "sample_193", "code": "def s(A):\n    count = A.count(':')\n    return A.replace(':', '', count - 1)\nassert s('1::1') == ", "input": "'1::1'", "output": "'1:1'"}
{"old_id": "sample_194", "code": "def J(z, M):\n    z.insert(M, [])\n    return z\nassert J([[5, 6, 2, 3], [1, 9, 5, 6]], 0) == ", "input": "[[5, 6, 2, 3], [1, 9, 5, 6]], 0", "output": "[[], [5, 6, 2, 3], [1, 9, 5, 6]]"}
{"old_id": "sample_195", "code": "def G(V):\n    for Y in ['acs', 'asp', 'scn']:\n        V = V.removeprefix(Y) + ' '\n    return V.removeprefix(' ')[:-1]\nassert G('ilfdoirwirmtoibsac') == ", "input": "'ilfdoirwirmtoibsac'", "output": "'ilfdoirwirmtoibsac  '"}
{"old_id": "sample_196", "code": "def P(e):\n    e = e.replace(' x', ' x.')\n    if e.istitle(): return 'correct'\n    e = e.replace(' x.', ' x')\n    return 'mixed'\nassert P(\"398 Is A Poor Year To Sow\") == ", "input": "\"398 Is A Poor Year To Sow\"", "output": "'correct'"}
{"old_id": "sample_198", "code": "def S(d, X):\n    return d[::-1].strip(X)[::-1]\nassert S('tcmfsmj', 'cfj') == ", "input": "'tcmfsmj', 'cfj'", "output": "'tcmfsm'"}
{"old_id": "sample_199", "code": "def J(str, N):\n    s = N * (str.count(N) + 1)\n    return str.removesuffix(s)\nassert J('mnmnj krupa...##!@#!@#$$@##', '@') == ", "input": "'mnmnj krupa...##!@#!@#$$@##', '@'", "output": "'mnmnj krupa...##!@#!@#$$@##'"}
{"old_id": "sample_200", "code": "def r(z, Y):\n    G = len(z)\n    index = 0\n    while G > 0:\n        Y = z[index] + Y\n        G -= 1\n        index += 1\n    return Y\nassert r('jao mt', 'house') == ", "input": "'jao mt', 'house'", "output": "'tm oajhouse'"}
{"old_id": "sample_201", "code": "def Y(B):\n    w = []\n    for x in B:\n        if x.isdigit():\n            w.append(x)\n    return ''.join(w[::-1])\nassert Y('--4yrw 251-//4 6p') == ", "input": "'--4yrw 251-//4 6p'", "output": "'641524'"}
{"old_id": "sample_202", "code": "def X(P, list):\n    P.extend(list)\n    [J for J in P if J % 2 == 0]\n    return [J for J in P if J >= 10]\nassert X([2, 15], [15, 1]) == ", "input": "[2, 15], [15, 1]", "output": "[15, 15]"}
{"old_id": "sample_203", "code": "def g(y):\n    y.clear()\n    return y\nassert g({'a': 3, 'b': -1, 'c': 'Dum'}) == ", "input": "{'a': 3, 'b': -1, 'c': 'Dum'}", "output": "{}"}
{"old_id": "sample_204", "code": "def W(A):\n    return [A[0], A[1][::-1][0]]\nassert W(\"master. \") == ", "input": "\"master. \"", "output": "['m', 'a']"}
{"old_id": "sample_205", "code": "def x(b):\n    for S in range(10):\n        for T in range(len(b)):\n            if b[T] != '#':\n                b = b[T:]\n                break\n        else:\n            b = \"\"\n            break\n    while b[-1] == '#':\n        b = b[:-1]\n    return b\nassert x(\"##fiu##nk#he###wumun##\") == ", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'"}
{"old_id": "sample_206", "code": "def R(L):\n    return ' '.join(L.split())\nassert R(' h e l l o   w o r l d! ') == ", "input": "' h e l l o   w o r l d! '", "output": "'h e l l o w o r l d!'"}
{"old_id": "sample_207", "code": "def o(S):\n    F = {}\n    for G in S:\n        F.update(G)\n    return F\nassert o([{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]) == ", "input": "[{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]", "output": "{'brown': 2, 'blue': 5, 'bright': 4}"}
{"old_id": "sample_208", "code": "def u(items):\n    W = []\n    for D in items:\n        for d in D:\n            if not d.isdigit():\n                W.append(d)\n    return W\nassert u(['123', 'cat', 'd dee']) == ", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']"}
{"old_id": "sample_209", "code": "def x(t, E):\n    return str.removeprefix(t, E)\nassert x('hymi', 'hymifulhxhzpnyihyf') == ", "input": "'hymi', 'hymifulhxhzpnyihyf'", "output": "'hymi'"}
{"old_id": "sample_210", "code": "def O(a, J, C):\n    Q = list(range(a, J+1))\n    r = 0\n    while True:\n        r = (r + C) % len(Q)\n        if Q[r] % 2 == 0:\n            return Q[r]\nassert O(46, 48, 21) == ", "input": "46, 48, 21", "output": "46"}
{"old_id": "sample_211", "code": "def B(t):\n    count = 0\n    for T in t:\n        if t.rindex(T) != t.index(T):\n            count+=1\n    return count\nassert B(\"abca dea ead\") == ", "input": "\"abca dea ead\"", "output": "10"}
{"old_id": "sample_212", "code": "def t(n):\n    for I in range(len(n) - 1):\n        n.reverse()\n    return n\nassert t([1, -9, 7, 2, 6, -3, 3]) == ", "input": "[1, -9, 7, 2, 6, -3, 3]", "output": "[1, -9, 7, 2, 6, -3, 3]"}
{"old_id": "sample_213", "code": "def c(H):\n    return H.replace('(', '[').replace(')', ']')\nassert c(\"(ac)\") == ", "input": "\"(ac)\"", "output": "'[ac]'"}
{"old_id": "sample_214", "code": "def z(w):\n    t = -1\n    while w.find('/', t+1) != -1:\n        t = w.find('/', t+1)\n    return w.rindex('/', 0, t)\nassert z('present/here/car%2Fwe') == ", "input": "'present/here/car%2Fwe'", "output": "7"}
{"old_id": "sample_215", "code": "def q(f):\n    B = f\n    while len(f) > 1 and f[0] == f[-1]:\n        B = f = f[1:-1]\n    return B\nassert q(')') == ", "input": "')'", "output": "')'"}
{"old_id": "sample_216", "code": "def H(d):\n    count = 0\n    for W in d:\n        if W.isdigit():\n            count += 1\n    return count\nassert H(\"dp ef1 gh2\") == ", "input": "\"dp ef1 gh2\"", "output": "2"}
{"old_id": "sample_217", "code": "def c(C):\n    if C.isalnum():\n        return \"ascii encoded is allowed for this language\"\n    return \"more than ASCII\"\nassert c('Str zahrnuje anglo-ameriæske vasi piscina and kuca!') == ", "input": "'Str zahrnuje anglo-ameriæske vasi piscina and kuca!'", "output": "'more than ASCII'"}
{"old_id": "sample_218", "code": "def k(W, D):\n    z = W.count(D)\n    return((W+D) * z)[::-1]\nassert k('caabcfcabfc', 'ab') == ", "input": "'caabcfcabfc', 'ab'", "output": "'bacfbacfcbaacbacfbacfcbaac'"}
{"old_id": "sample_219", "code": "def w(Z, j):\n    for b in range(0, len(j)+len(Z)):\n        Z += Z[0]\n        if Z.find(j) >= 0:\n            return True\n    return False\nassert w(\"Hello\", \")\") == ", "input": "\"Hello\", \")\"", "output": "False"}
{"old_id": "sample_220", "code": "def q(B, y, s):\n    B = \"{}{}{}\".format(B, B[:y], B[s:])\n    r = \"\"\n    for l in range(s, len(B)-y):\n        r = B[l] + r\n    return r\nassert q(\"abcdefgabc\", 1, 2) == ", "input": "\"abcdefgabc\", 1, 2", "output": "'bagfedcacbagfedc'"}
{"old_id": "sample_221", "code": "def M(R, Y):\n    U, w = R.split(Y)\n    return w + Y + U\nassert M('bpxa24fc5.', '.') == ", "input": "'bpxa24fc5.', '.'", "output": "'.bpxa24fc5'"}
{"old_id": "sample_222", "code": "def G(I, C):\n    while I.find(C, I.rindex(C) + 1) != -1:\n        I = I[:I.rindex(C) + 1] + I[I.rindex(C) + 2:]\n    return I\nassert G('0aabbaa0b', 'a') == ", "input": "'0aabbaa0b', 'a'", "output": "'0aabbaa0b'"}
{"old_id": "sample_223", "code": "def Q(y, q):\n    count, B = 0, 1\n    for K in range(1, len(y)):\n        if ((y[K] > y[K-1]) and (y[K] <= q)): count += B\n        elif y[K] <= y[K-1]: B = 1\n        else: B += 1\n    return count\nassert Q([1, 2, -1, 4], 2) == ", "input": "[1, 2, -1, 4], 2", "output": "1"}
{"old_id": "sample_224", "code": "def Y(C, J):\n    C.reverse()\n    C.pop()\n    x = []\n    while len(C) > 0:\n        k = {}\n        k[C.pop()] = J\n        x.append(k)\n    t = {}\n    while len(x) > 0:\n        t.update(x.pop())\n    return t\nassert Y(['23'], 123) == ", "input": "['23'], 123", "output": "{}"}
{"old_id": "sample_225", "code": "def k(x):\n    if x.islower():\n        return True\n    return False\nassert k(\"54882\") == ", "input": "\"54882\"", "output": "False"}
{"old_id": "sample_226", "code": "def N(B):\n    for q in range(len(B)):\n        if B[q] % 3 == 0:\n            B.append(B[q])\n    return B\nassert N([1, 3]) == ", "input": "[1, 3]", "output": "[1, 3, 3]"}
{"old_id": "sample_227", "code": "def c(U):\n    U = U.lower()\n    N, G = U[0], U[1:]\n    return N.upper() + G\nassert c('Manolo') == ", "input": "'Manolo'", "output": "'Manolo'"}
{"old_id": "sample_228", "code": "def S(s, e):\n    return e.join(s.lower().split())\nassert S('LlTHH sAfLAPkPhtsWP', '#') == ", "input": "'LlTHH sAfLAPkPhtsWP', '#'", "output": "'llthh#saflapkphtswp'"}
{"old_id": "sample_229", "code": "def z(s, J):\n    t = []\n    for C in s:\n        t.append(C[0])\n        if C[1] == J:\n            t.reverse()\n        else:\n            t.append(C[1])\n    return t\nassert z({'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1) == ", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']"}
{"old_id": "sample_230", "code": "def Y(s):\n    H = ''\n    z = len(s)-1\n    while z >= 0:\n        t = s[z]\n        if t.isalpha():\n            H += t\n        z -= 1\n    return H\nassert Y('102x0zoq') == ", "input": "'102x0zoq'", "output": "'qozx'"}
{"old_id": "sample_231", "code": "def j(G):\n    m = sum(1 for M in G if M <= 1900)\n    E = sum(1 for M in G if M > 1910)\n    if m > 3:\n        return 3\n    elif E > 3:\n        return 1\n    else:\n        return 2\nassert j([1872, 1995, 1945]) == ", "input": "[1872, 1995, 1945]", "output": "2"}
{"old_id": "sample_232", "code": "def h(t, c):\n    k = ''\n    count = 0\n    c = list(c)\n    for I in t:\n        k += I if I in 'e' else c[count % len(c)]\n        count += (1 if I not in 'e' else 0)\n    return k\nassert h('fssnvd', 'yes') == ", "input": "'fssnvd', 'yes'", "output": "'yesyes'"}
{"old_id": "sample_233", "code": "def N(R):\n    for D in reversed(range(-len(R)-1, -1)):\n        R.insert(D, R.pop(0))\n    return R\nassert N([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_234", "code": "def t(k, N):\n    W = len(k)\n    if N in k:\n        W = k.index(N)\n        if W > 1:\n            W = (W + 1) % len(k)\n    return W\nassert t('wduhzxlfk', 'w') == ", "input": "'wduhzxlfk', 'w'", "output": "0"}
{"old_id": "sample_235", "code": "def U(V, l):\n    c = []\n    for y in l:\n        c += list(filter(lambda E: E != '', y.split(l[V.index(y)])))\n    return c\nassert U([], []) == ", "input": "[], []", "output": "[]"}
{"old_id": "sample_236", "code": "def V(z):\n    if len(z) == 1:\n        return ''.join(z)\n    c = list(z)\n    G = 0\n    while G < len(z)-1:\n        for J in range(2):\n            c[G*2] = z[G]\n            G += 1\n    return ''.join(c)\nassert V(['ac8', 'qk6', '9wg']) == ", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'"}
{"old_id": "sample_237", "code": "def v(O, c):\n    if c in O:\n        j, c, e = O.partition(c)\n        e = j[:-len(c)] + j[len(c):] + c + e\n        return j + c + e\n    return O\nassert v('uzlwaqiaj', 'u') == ", "input": "'uzlwaqiaj', 'u'", "output": "'uuzlwaqiaj'"}
{"old_id": "sample_238", "code": "def q(I, U):\n    G = 0\n    for n in I:\n        if n[0] == U:\n            G = n\n    return G\nassert q([[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1) == ", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]"}
{"old_id": "sample_239", "code": "def b(n, x):\n    n = n.lstrip(x)\n    n = n.rstrip(x)\n    return n\nassert b('0 t 1cos ', 'st ' + '0\\t\\n  ') == ", "input": "'0 t 1cos ', 'st ' + '0\\t\\n  '", "output": "'1co'"}
{"old_id": "sample_240", "code": "def I(W):\n    y = str(W)\n    U = y.find('.')\n    if U != -1:\n        return y[:U] + '.' + y[U+1:].ljust(2, '0')\n    return y + '.00'\nassert I(3.121) == ", "input": "3.121", "output": "'3.121'"}
{"old_id": "sample_241", "code": "def L(h):\n    return h[h.index('C'):]\nassert L('ED20 CW') == ", "input": "'ED20 CW'", "output": "'CW'"}
{"old_id": "sample_242", "code": "def b(o):\n    f = o.rsplit(':', 1)\n    if f[0].split(' ')[-1] == f[1].split(' ')[0]:\n        return b(' '.join(f[0].split(' ')[:-1]) + ' ' + f[1])\n    return o\nassert b(\"udhv zcvi nhtnfyd :erwuyawa pun\") == ", "input": "\"udhv zcvi nhtnfyd :erwuyawa pun\"", "output": "'udhv zcvi nhtnfyd :erwuyawa pun'"}
{"old_id": "sample_243", "code": "def E(u, e):\n    return e.islower() and u.islower()\nassert E('abc', 'e') == ", "input": "'abc', 'e'", "output": "True"}
{"old_id": "sample_244", "code": "def z(q, d):\n    count = 0\n    if d:\n        for K in d:\n            count += 1\n        q = q * count\n    return q.rjust(len(q) + count*2)[:-2]\nassert z('', 'BC1ty') == ", "input": "'', 'BC1ty'", "output": "'        '"}
{"old_id": "sample_245", "code": "def C(q, g):\n    i = [G for G in q if G.upper() in g]\n    if g.upper() == g:\n        i.append('all_uppercased')\n    return i\nassert C('abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\") == ", "input": "'abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\"", "output": "[]"}
{"old_id": "sample_246", "code": "def W(o, z):\n    for M in range(o.find(z), -1, -1):\n        if o[M:] == z:\n            return M\n    return -1\nassert W(\"345gerghjehg\", \"345\") == ", "input": "\"345gerghjehg\", \"345\"", "output": "-1"}
{"old_id": "sample_247", "code": "def S(o):\n    if o.isalpha():\n        return \"yes\"\n    if o == \"\":\n        return \"str is empty\"\n    return \"no\"\nassert S('Boolean') == ", "input": "'Boolean'", "output": "'yes'"}
{"old_id": "sample_248", "code": "def C(r, z):\n    r.sort()\n    z.sort(reverse=True)\n    return r + z\nassert C([666], []) == ", "input": "[666], []", "output": "[666]"}
{"old_id": "sample_249", "code": "def I(M):\n    count = {}\n    for Y in M:\n        if Y.islower():\n            count[Y.lower()] = M.count(Y.lower()) + count.get(Y.lower(), 0)\n        else:\n            count[Y.lower()] = M.count(Y.upper()) + count.get(Y.lower(), 0)\n    return count\nassert I(\"FSA\") == ", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}"}
{"old_id": "sample_250", "code": "def N(h):\n    count = len(h)\n    for R in range(-count+1, 0):\n        h = h + h[R]\n    return h\nassert N('wlace A') == ", "input": "'wlace A'", "output": "'wlace Alc l  '"}
{"old_id": "sample_251", "code": "def y(f):\n    A = \"+353\"\n    v = []\n    for w in f:\n        w.extend(A)\n        v.append(\";\".join(w))\n    return \". \".join(v)\nassert y([['Marie','Nelson','Oscar']]) == ", "input": "[['Marie','Nelson','Oscar']]", "output": "'Marie;Nelson;Oscar;+;3;5;3'"}
{"old_id": "sample_252", "code": "def j(z, k):\n    if k in z:\n        if not z.startswith(k):\n            z = z.replace(k,'')\n    return z\nassert j('\\\\foo', '\\\\') == ", "input": "'\\\\foo', '\\\\'", "output": "'\\\\foo'"}
{"old_id": "sample_253", "code": "def S(o, K):\n    q = len(K)\n    if K == o[:q]:\n        return o[q:]\n    return o\nassert S('kumwwfv', 'k') == ", "input": "'kumwwfv', 'k'", "output": "'umwwfv'"}
{"old_id": "sample_254", "code": "def d(W, t):\n    J = str.maketrans(W.lower(), t.lower())\n    return W.translate(J)\nassert d('upper case', 'lower case') == ", "input": "'upper case', 'lower case'", "output": "'lwwer case'"}
{"old_id": "sample_255", "code": "def B(M, Z, c):\n    if c < 0:\n        c = -c\n    if len(M) > c:\n        return M[len(M) - c:]\n    return M.rjust(c, Z)\nassert B('no asw', 'j', 1) == ", "input": "'no asw', 'j', 1", "output": "'w'"}
{"old_id": "sample_256", "code": "def k(H, j):\n    M = 0\n    x = len(H) - 1\n\n    while M <= x:\n        T = (M + x) // 2\n        if H.rfind(j) >= T:\n            M = T + 1\n        else:\n            x = T - 1\n\n    return M\nassert k('dorfunctions', '2') == ", "input": "'dorfunctions', '2'", "output": "0"}
{"old_id": "sample_257", "code": "def s(L):\n    a = []\n    for U in L:\n        a.append(U.splitlines())\n    return a\nassert s(['Hello World\\n\"I am String\"']) == ", "input": "['Hello World\\n\"I am String\"']", "output": "[['Hello World', '\"I am String\"']]"}
{"old_id": "sample_258", "code": "F = [1, 2, 7, 8, 9]\nr = [1, 2, 7, 9]\ndef a(s, Q, w, E):\n    s.insert(w, Q)\n    for i in range(w-1, 0, -E):\n        w -= 1\n        s.insert(w, s.pop(s.index(Q)-1))\n    return s\nassert a(r[:], 3, 3, 2) == ", "input": "thigh_o_two[:], 3, 3, 2", "output": "[1, 2, 7, 3, 9]"}
{"old_id": "sample_259", "code": "def u(P):\n    z = []\n    for x in P:\n        if x.isupper():\n            z.insert(len(z) // 2, x)\n    if len(z) == 0:\n        z = ['-']\n    return ''.join(z)\nassert u('String matching is a big part of RexEx library.') == ", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'"}
{"old_id": "sample_260", "code": "def Y(C, y, j):\n    C[y:y+j] = C[y:y + j][::-1]\n    return C\nassert Y([1, 2, 3, 4, 5, 6], 4, 2) == ", "input": "[1, 2, 3, 4, 5, 6], 4, 2", "output": "[1, 2, 3, 4, 6, 5]"}
{"old_id": "sample_261", "code": "def b(Y, k):\n    Z, X = [], []\n    for n in Y:\n        if n < k:\n            Z.append(n)\n        else:\n            X.append(n)\n    Z.clear()\n    return Z, X\nassert b([12, 516, 5, 2, 3, 214, 51], 5) == ", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])"}
{"old_id": "sample_262", "code": "def g(w):\n    count = len(w)\n    S = {0: \"F\", 1: \"E\", 2: \"D\", 3: \"C\", 4: \"B\", 5: \"A\", 6: \"\"}\n    x = []\n    for m in range(count):\n        x.append(S.get(w[m]))\n    return ''.join(x)\nassert g([4, 5]) == ", "input": "[4, 5]", "output": "'BA'"}
{"old_id": "sample_263", "code": "def j(D, G):\n    for o in range(len(G)):\n        for O in range(len(D)):\n            if D[O] == G[o][0]:\n                assert G[o][1] != D[O]\n                D[O] = G[o][1]\n    return D\nassert j([\"gloss\", \"banana\", \"barn\", \"lawn\"], []) == ", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']"}
{"old_id": "sample_264", "code": "def w(B):\n    j = B.replace('a', 'A')\n    return j.replace('e', 'A')\nassert w(\"papera\") == ", "input": "\"papera\"", "output": "'pApArA'"}
{"old_id": "sample_265", "code": "def H(p, K):\n    B = {}\n    for w, b in p.items():\n        if w < K:\n            B[w] = b\n    return B\nassert H({1: 2, 2: 4, 3: 3}, 3) == ", "input": "{1: 2, 2: 4, 3: 3}, 3", "output": "{1: 2, 2: 4}"}
{"old_id": "sample_266", "code": "def j(Y):\n    for s in range(len(Y)-1, -1, -1):\n        if Y[s] % 2 == 1:\n            Y.insert(s+1, Y[s])\n    return Y\nassert j([2, 3, 4, 6, -2]) == ", "input": "[2, 3, 4, 6, -2]", "output": "[2, 3, 3, 4, 6, -2]"}
{"old_id": "sample_267", "code": "def d(a, k):\n    if k < 0:\n        return a\n    return a.ljust(len(a) // 2 + k)\nassert d('sowpf', -7) == ", "input": "'sowpf', -7", "output": "'sowpf'"}
{"old_id": "sample_268", "code": "def C(j, n):\n    for o in range(len(j)):\n        if j[o] == n:\n            E = list(j)\n            E[o] = '/'\n            return ' '.join(E)\nassert C('h grateful k', ' ') == ", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'"}
{"old_id": "sample_269", "code": "def Q(n):\n    d = (len(n) - 1) % 3\n    for w in range(d):\n        n[w] = '0'\n    for w in range(d + 1, len(n), 3):\n        n[w - 1:w + 2] = ['0', '0', '0']\n    return n\nassert Q([9, 2]) == ", "input": "[9, 2]", "output": "['0', 2]"}
{"old_id": "sample_270", "code": "def H(I):\n    b = {}\n    for h in I:\n        b[h] = I.popitem(Y = False)[1]\n    return b\nassert H({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_271", "code": "def D(Y, w):\n    T = list(Y)\n    if w not in Y:\n        raise ValueError('Text has no {c}')\n    T.pop(Y.rindex(w))\n    return ''.join(T)\nassert D('uufhl', 'l') == ", "input": "'uufhl', 'l'", "output": "'uufh'"}
{"old_id": "sample_272", "code": "def k(f, a):\n    f.extend(a)\n    G = f.copy()\n    for m in range(-len(a), 0):\n        G.append(G[m])\n    return G\nassert k([9, 7, 5, 3, 1], [2, 4, 6, 8, 0]) == ", "input": "[9, 7, 5, 3, 1], [2, 4, 6, 8, 0]", "output": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6]"}
{"old_id": "sample_273", "code": "def v(a):\n    E =''\n    a = a[::-1]\n    for c in range(len(a)):\n        i = a[c]\n        if i !='.' and  E.count('.')<2:\n            E=i+E\n        else:\n            break\n    return E\nassert v('.NET') == ", "input": "'.NET'", "output": "'NET'"}
{"old_id": "sample_274", "code": "def b(X, a):\n    count = 0\n    for q in X:\n        for P in X:\n            count += (q+P==a)\n    return count\nassert b([1, 2, 3], 4) == ", "input": "[1, 2, 3], 4", "output": "3"}
{"old_id": "sample_275", "code": "def y(K):\n    u = dict(zip(K.values(), K.keys()))\n    return u\nassert y({-1: \"a\", 0: \"b\", 1: \"c\"}) == ", "input": "{-1: \"a\", 0: \"b\", 1: \"c\"}", "output": "{'a': -1, 'b': 0, 'c': 1}"}
{"old_id": "sample_276", "code": "def K(c):\n    if len(c) >= 2 and c[0] > 0 and c[1] > 0:\n        c.reverse()\n        return c\n    c.append(0)\n    return c\nassert K([]) == ", "input": "[]", "output": "[0]"}
{"old_id": "sample_277", "code": "def j(V, P):\n    B = [F for F in V]\n    if P:\n        B.reverse()\n    return B\nassert j([1, 2, 3, 4], 1) == ", "input": "[1, 2, 3, 4], 1", "output": "[4, 3, 2, 1]"}
{"old_id": "sample_278", "code": "def x(G, w):\n    q = dict.fromkeys(G)\n    for v in q:\n        q[v] = [e for e in w if v * 2 > e]\n    return q\nassert x([0, 132], [5, 991, 32, 997]) == ", "input": "[0, 132], [5, 991, 32, 997]", "output": "{0: [], 132: [5, 32]}"}
{"old_id": "sample_279", "code": "def o(g):\n    D = ''\n    while g != '':\n        w, Y, g = g.partition('(')\n        D = w + Y.replace('(', '|') + D\n        D = D + g[0] + D\n        g = g[1:]\n    return D\nassert o(\"\") == ", "input": "\"\"", "output": "''"}
{"old_id": "sample_280", "code": "T = 0\n\ndef Q(v):\n    global d, T\n    T = v.replace(' ', '')\n    d = v.replace('0', ' ')\n    v = v.replace('1', 'i')\n\n    return v\nassert Q('00000000 00000000 01101100 01100101 01101110') == ", "input": "'00000000 00000000 01101100 01100101 01101110'", "output": "'00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0'"}
{"old_id": "sample_281", "code": "def M(L, index, h):\n    L[index] = h\n    if h >= 3:\n        L.update({'message' : 'xcrWt'})\n    else: \n        del L['message']\n    return L\nassert M({1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2) == ", "input": "{1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2", "output": "{1: 2, 3: 4, 5: 6, 8: 2}"}
{"old_id": "sample_282", "code": "def E(L, Y):\n    y = 1\n    count = 0\n    while y > 0:\n        y = L.find(Y, y)\n        count += 1\n        y += 1\n    return count\nassert E('xinyyexyxx', 'xx') == ", "input": "'xinyyexyxx', 'xx'", "output": "2"}
{"old_id": "sample_283", "code": "def C(g, V):\n    del g[V]\n    if min(g) == V:\n        V = list(g)[0]\n    return V\nassert C({'Iron Man': 4, 'Captain America': 3, 'Black Panther': 0,'Thor': 1, 'Ant-Man': 6}, 'Iron Man') == ", "input": "{'Iron Man': 4, 'Captain America': 3, 'Black Panther': 0,'Thor': 1, 'Ant-Man': 6}, 'Iron Man'", "output": "'Iron Man'"}
{"old_id": "sample_284", "code": "def f(q, P):\n    v = 0\n    for Y in P:\n        if q[v] != Y:\n            return None\n        v += 1\n    return q[v:]\nassert f('bestest', 'bestest') == ", "input": "'bestest', 'bestest'", "output": "''"}
{"old_id": "sample_285", "code": "def S(R, x):\n    \"\"\"Counting vowels in Pirates' Curse\"\"\"\n    return R.count(x)\nassert S(\"This be Pirate's Speak for 'help'!\", ' ') == ", "input": "\"This be Pirate's Speak for 'help'!\", ' '", "output": "5"}
{"old_id": "sample_286", "code": "def H(N, y, M):\n    if M < -len(N) or M > len(N) - 1:\n        return 'no'\n    G = N[M]\n    N[M] = y\n    return N\nassert H([1,2,3,4,5,6,7,8,9,10], 11, 4) == ", "input": "[1,2,3,4,5,6,7,8,9,10], 11, 4", "output": "[1, 2, 3, 4, 11, 6, 7, 8, 9, 10]"}
{"old_id": "sample_287", "code": "def R(q):\n    if q.islower():\n        q = q.upper()\n    else:\n        q = q.lower()\n    return q\nassert R('Pinneaple') == ", "input": "'Pinneaple'", "output": "'pinneaple'"}
{"old_id": "sample_288", "code": "def X(G):\n    W = sorted(list(G.items()), key=lambda u: len(str(str(u[0])+str(u[1]))))\n    return [(a, r) for a, r in W if a < r]\n    return T\nassert X({55: 4, 4: 555, 1: 3, 99: 21, 499: 4, 71: 7, 12: 6}) == ", "input": "{55: 4, 4: 555, 1: 3, 99: 21, 499: 4, 71: 7, 12: 6}", "output": "[(1, 3), (4, 555)]"}
{"old_id": "sample_289", "code": "def R(q):\n    return \"{}: {}\".format(q, q.encode())\nassert R('148') == ", "input": "'148'", "output": "\"148: b'148'\""}
{"old_id": "sample_290", "code": "def m(B, E):\n    if B.startswith(E):\n        return B.removeprefix(E)\n    if E in B:\n        return B.replace(E, '').strip()\n    return B.upper()\nassert m('abixaaaily', 'al') == ", "input": "'abixaaaily', 'al'", "output": "'ABIXAAAILY'"}
{"old_id": "sample_291", "code": "def C(s, Z):\n    s.update({Z[0]: [Z[1]]})\n    if len(s[Z[0]]) == Z[1]:\n        s[Z[0]] = Z[0]\n    return s\nassert C({}, ['a', 2]) == ", "input": "{}, ['a', 2]", "output": "{'a': [2]}"}
{"old_id": "sample_292", "code": "def W(C):\n    U = [v if v.isdigit() else '*' for v in C]\n    return ''.join(U)\nassert W('5f83u23saa') == ", "input": "'5f83u23saa'", "output": "'5*83*23***'"}
{"old_id": "sample_293", "code": "def h(O):\n    B = O.lower()\n    for T in range(len(B)):\n        if B[T] == 'x':\n            return 'no'\n    return O.isupper()\nassert h('dEXE') == ", "input": "'dEXE'", "output": "'no'"}
{"old_id": "sample_294", "code": "def a(M, V, h):\n    if h.strip() == '':\n        return h\n    t, Z, T = h[0], h[1:-1], h[-1]\n    L = t.replace(M, V) + Z.replace(M, V) + T.replace(M, V)\n    return L\nassert a(\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\") == ", "input": "\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\"", "output": "'2$z&5H3*1a@#a*1hris'"}
{"old_id": "sample_295", "code": "def k(R):\n    if R[-1] == R[0]:\n        return 'no'\n    else:\n        R.pop(0)\n        R.pop()\n        R.pop(0)\n        R.pop()\n        return R\nassert k(['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']) == ", "input": "['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']", "output": "['pear', 'banana', 'pear']"}
{"old_id": "sample_296", "code": "def f(o):\n    return o.removeprefix('http://www.')\nassert f(\"https://www.www.ekapusta.com/image/url\") == ", "input": "\"https://www.www.ekapusta.com/image/url\"", "output": "'https://www.www.ekapusta.com/image/url'"}
{"old_id": "sample_297", "code": "def h(Y):\n    if 0 < Y < 1000 and Y != 6174:\n        return 'Half Life'\n    return 'Not found'\nassert h(6173) == ", "input": "6173", "output": "'Not found'"}
{"old_id": "sample_298", "code": "def u(e):\n    B = list(e)\n    for P in range(len(B)):\n        g = B[P]\n        o = g.swapcase()\n        B[P] = o\n    return ''.join(B)\nassert u('dst vavf n dmv dfvm gamcu dgcvb.') == ", "input": "'dst vavf n dmv dfvm gamcu dgcvb.'", "output": "'DST VAVF N DMV DFVM GAMCU DGCVB.'"}
{"old_id": "sample_299", "code": "def E(D, h):\n    if not D.endswith(h):\n        return E(h + D, h)\n    return D\nassert E('staovk', 'k') == ", "input": "'staovk', 'k'", "output": "'staovk'"}
{"old_id": "sample_300", "code": "def g(E):\n    count = 1\n    for d in range(count, len(E) - 1, 2):\n        E[d] = max(E[d], E[count-1])\n        count += 1\n    return E\nassert g([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_301", "code": "def j(N):\n    count = len(N)\n    for W in range(-count+1, 0):\n        N.extend([N[W], N[W]])\n    return N\nassert j([0, 6, 2, -1, -2]) == ", "input": "[0, 6, 2, -1, -2]", "output": "[0, 6, 2, -1, -2, 6, 6, -2, -2, -2, -2, -2, -2]"}
{"old_id": "sample_302", "code": "def t(f):\n    return f.replace('needles', 'haystacks')\nassert t('wdeejjjzsjsjjsxjjneddaddddddefsfd') == ", "input": "'wdeejjjzsjsjjsxjjneddaddddddefsfd'", "output": "'wdeejjjzsjsjjsxjjneddaddddddefsfd'"}
{"old_id": "sample_303", "code": "def O(a):\n    Z = (len(a) + 1) // 2\n    f = list(a)\n    while Z < len(a):\n        t = f[Z].lower()\n        if t == f[Z]:\n            Z += 1\n        else:\n            f[Z] = t\n        Z += 2\n    return ''.join(f)\nassert O('mJkLbn') == ", "input": "'mJkLbn'", "output": "'mJklbn'"}
{"old_id": "sample_304", "code": "def D(F):\n    W = sorted(F.items(), key=lambda g: g[0], reverse=True)[0][0]\n    Q = F.pop(W)\n    B = sorted(F.items(), key=lambda g: g[0], reverse=True)[0][0]\n    X = F.pop(B)\n    return dict({W: Q, B: X})\nassert D({2: 3, 17: 3, 16: 6, 18: 6, 87: 7}) == ", "input": "{2: 3, 17: 3, 16: 6, 18: 6, 87: 7}", "output": "{87: 7, 18: 6}"}
{"old_id": "sample_305", "code": "def s(y, U):\n    z = len(y)\n    index = -1\n    for M in range(z):\n        if y[M] == U:\n            index = M\n    if index == -1:\n        index = z // 2\n    T = list(y)\n    T.pop(index)\n    return ''.join(T)\nassert s('o horseto', 'r') == ", "input": "'o horseto', 'r'", "output": "'o hoseto'"}
{"old_id": "sample_306", "code": "def T(N):\n    j = []\n    for m in N:\n        if (isinstance(m, str) and m.isnumeric()) or isinstance(m, int):\n            j.append(m)\n    j = list(map(int, j))\n    return j\nassert T([0, 6, '1', '2', 0]) == ", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]"}
{"old_id": "sample_307", "code": "def v(w):\n    M = list(w)\n    for D in range(1, len(M) - 1):\n        M.insert(D + 1, '|')\n    return ''.join(M)\nassert v('pxcznyf') == ", "input": "'pxcznyf'", "output": "'px|||||cznyf'"}
{"old_id": "sample_308", "code": "def U(P):\n    u = {}\n    for I in P:\n        if I not in u:\n            u[I] = P.count(I)\n    return u\nassert U([\"La\", \"Q\", \"9\", \"La\", \"La\"]) == ", "input": "[\"La\", \"Q\", \"9\", \"La\", \"La\"]", "output": "{'La': 3, 'Q': 1, '9': 1}"}
{"old_id": "sample_309", "code": "def S(D, q):\n    D += q\n    while D[-len(q):] == q:\n        D = D[:-1]\n    return D\nassert S('faqo osax f', 'f') == ", "input": "'faqo osax f', 'f'", "output": "'faqo osax '"}
{"old_id": "sample_310", "code": "def U(h):\n    d = h\n    for Y, Z in enumerate(d):\n        for y in range(len(Z) // 2):\n            d[Y] = d[Y][-1:] + d[Y][1:-1] + d[Y][0]\n    return ''.join(d)\nassert U(['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']) == ", "input": "['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']", "output": "'__1.00r__j_a6__6'"}
{"old_id": "sample_311", "code": "def f(t):\n    t = t.replace('#', '1').replace('$', '5')\n    return 'yes' if t.isnumeric() else 'no'\nassert f('A') == ", "input": "'A'", "output": "'no'"}
{"old_id": "sample_312", "code": "def l(str):\n    if str.isalnum():\n        return \"True\"\n    return \"False\"\nassert l('777') == ", "input": "'777'", "output": "'True'"}
{"old_id": "sample_313", "code": "def i(G, r):\n    return G.ljust(r, '=').rpartition('=')[0]\nassert i('urecord', 8) == ", "input": "'urecord', 8", "output": "'urecord'"}
{"old_id": "sample_314", "code": "def H(y):\n    if ',' in y:\n        n, w, x = y.partition(',')\n        return x + ' ' + n\n    return ',' + y.partition(' ')[-1] + ' 0'\nassert H('244, 105, -90') == ", "input": "'244, 105, -90'", "output": "' 105, -90 244'"}
{"old_id": "sample_315", "code": "def j(W):\n    return W.casefold().replace('l', ',')\nassert j('czywZ') == ", "input": "'czywZ'", "output": "'czywz'"}
{"old_id": "sample_316", "code": "def N(m):\n    return '| ' + ' '.join(m.split(' ')) + ' |'\nassert N('i am your father') == ", "input": "'i am your father'", "output": "'| i am your father |'"}
{"old_id": "sample_317", "code": "def e(A, E, T):\n    A = A.replace(E, T)\n    return A.replace(T, E)\nassert e(' vup a zwwo oihee amuwuuw! ', 'a', 'u') == ", "input": "' vup a zwwo oihee amuwuuw! ', 'a', 'u'", "output": "' vap a zwwo oihee amawaaw! '"}
{"old_id": "sample_318", "code": "def V(p, e):\n    k = 0\n    for h in p:\n        if h == e or h == e.lower():\n            k += 1\n    return k\nassert V('234rtccde', 'e') == ", "input": "'234rtccde', 'e'", "output": "1"}
{"old_id": "sample_319", "code": "def V(g, O):\n    count = 0\n    while g in O:\n        O = O.replace(g, '', 1)\n        count += 1\n    return count\nassert V('a', 'xxxaaxaaxx') == ", "input": "'a', 'xxxaaxaaxx'", "output": "4"}
{"old_id": "sample_320", "code": "def N(B):\n    index = 1\n    while index < len(B):\n        if B[index] != B[index - 1]:\n            index += 1\n        else:\n            F = B[:index]\n            s = B[index:].swapcase()\n            return F + s\n    return B.swapcase()\nassert N('USaR') == ", "input": "'USaR'", "output": "'usAr'"}
{"old_id": "sample_321", "code": "def O(update, Q):\n    B = Q.copy()\n    for p in update:\n        if p in B:\n            B[p] += update[p]\n        else:\n            B[p] = update[p]\n    return B\nassert O({}, {'desciduous': 2}) == ", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}"}
{"old_id": "sample_322", "code": "def O(e, W):\n    U = e[1:]\n    e.reverse()\n    for j in range(W):\n        U.append(e.pop(1))\n    e.reverse()\n    return e\nassert O(['lsi', 's', 't', 't', 'd'], 0) == ", "input": "['lsi', 's', 't', 't', 'd'], 0", "output": "['lsi', 's', 't', 't', 'd']"}
{"old_id": "sample_323", "code": "def J(W):\n    return len(W.splitlines())\nassert J('ncdsdfdaaa0a1cdscsk*XFd') == ", "input": "'ncdsdfdaaa0a1cdscsk*XFd'", "output": "1"}
{"old_id": "sample_324", "code": "def d(L):\n    g, B = L.copy(), []\n    g.reverse()\n    B = g[:len(g)//2]\n    return B + g + B\nassert d([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_325", "code": "def b(B):\n    U = list(B)\n    for R in range(len(U)):\n        U[R] = U[R].lower()\n        if not U[R].isdigit():\n            return False\n    return True\nassert b(\"\") == ", "input": "\"\"", "output": "True"}
{"old_id": "sample_326", "code": "def T(E):\n    b = 0\n    for W in E:\n        if W.isnumeric():\n            b += 1\n    return b\nassert T('Thisisastring') == ", "input": "'Thisisastring'", "output": "0"}
{"old_id": "sample_327", "code": "def O(Z):\n    U = list()\n    X = len(Z)-1\n    for m in range(len(Z)):\n        if X%2 == 0:\n            U.append(-Z[X])\n        else:\n            U.append(Z[X])\n        X -= 1\n    return U\nassert O([1, 7, -1, -3]) == ", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]"}
{"old_id": "sample_328", "code": "def g(R, O):\n    if O <= 0:\n        return R\n    if len(R) < O:\n        R.extend(g(R, O - len(R)))\n    return R\nassert g([1, 2, 3], 4) == ", "input": "[1, 2, 3], 4", "output": "[1, 2, 3, 1, 2, 3]"}
{"old_id": "sample_329", "code": "def q(v):\n    for F in range(len(v)):\n        if v[F] == v[F].upper() and v[F-1].islower():\n            return True\n    return False\nassert q('jh54kkk6') == ", "input": "'jh54kkk6'", "output": "True"}
{"old_id": "sample_330", "code": "def g(Z):\n    M = []\n    for m in Z:\n        if m.isdigit():\n            M.append(m)\n        else:\n            M.append(' ')\n    return ''.join(M)\nassert g('m4n2o') == ", "input": "'m4n2o'", "output": "' 4 2 '"}
{"old_id": "sample_331", "code": "def b(T, M):\n    g = T.find(M)\n    while g != -1:\n        T = T[g + 1:]\n        g = T.find(M)\n    return T.rfind(M)\nassert b('', 'abc') == ", "input": "'', 'abc'", "output": "-1"}
{"old_id": "sample_332", "code": "def r(L):\n    count = len(L)\n    if count == 0:\n        L = [0] * int(L.pop())\n    elif count % 2 == 0:\n        L.clear()\n    else:\n        del L[:count//2:]\n    return L\nassert r([-6, -2, 1, -3, 0, 1]) == ", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[]"}
{"old_id": "sample_333", "code": "def m(w, O):\n    w.sort()\n    for O in O:\n        w.remove(O)\n    if len(w) == 1:\n        return 1\n    for n, B in enumerate(w):\n        if w.count(B+1) == 0:\n            return n+1\n    return n+1\nassert m([375, 564, 857, 90, 728, 92], [728]) == ", "input": "[375, 564, 857, 90, 728, 92], [728]", "output": "1"}
{"old_id": "sample_334", "code": "def I(L, y):\n    return L.join(y)\nassert I('00', ['nU', ' 9 rCSAz', 'w', ' lpA5BO', 'sizL', 'i7rlVr']) == ", "input": "'00', ['nU', ' 9 rCSAz', 'w', ' lpA5BO', 'sizL', 'i7rlVr']", "output": "'nU00 9 rCSAz00w00 lpA5BO00sizL00i7rlVr'"}
{"old_id": "sample_335", "code": "def m(e, Y):\n    R = list(e)\n    if Y in R:\n        index = R.index(Y)\n        R.remove(Y)\n        R.insert(index, '?')\n        R.remove('?')\n    return ''.join(R)\nassert m('sjbrlfqmw', 'l') == ", "input": "'sjbrlfqmw', 'l'", "output": "'sjbrfqmw'"}
{"old_id": "sample_336", "code": "def b(K, h):\n    K += h\n    return K.rpartition(h)[0]\nassert b('234dsfssdfs333324314', 's') == ", "input": "'234dsfssdfs333324314', 's'", "output": "'234dsfssdfs333324314'"}
{"old_id": "sample_337", "code": "def b(C):\n    O = []\n    for J in C:\n        if J.isdigit():\n            continue\n        if J.islower():\n            O.append(J.upper())\n        elif J.isupper():\n            O.append(J.lower())\n    return ''.join(O)\nassert b(\"5ll6\") == ", "input": "\"5ll6\"", "output": "'LL'"}
{"old_id": "sample_338", "code": "def V(r):\n    D = {C: R for R, C in r.items()}\n    return D\nassert V({'a': 1, 'b': 2, 'c': 3, 'd': 2}) == ", "input": "{'a': 1, 'b': 2, 'c': 3, 'd': 2}", "output": "{1: 'a', 2: 'd', 3: 'c'}"}
{"old_id": "sample_339", "code": "def y(Y, b):\n    b = str(b)\n    U = 0\n    for o in Y:\n        if str(o) == b:\n            U += 1\n    return U\nassert y([-1, 2, 1, -8, -8, 2], 2) == ", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2"}
{"old_id": "sample_340", "code": "def c(h):\n    l = h.find('A')\n    if l >= 0:\n        return h[:l] + h[h.find('a') + 1 :]\n    else:\n        return ''.join(sorted(h))\nassert c('E jIkx HtDpV G') == ", "input": "'E jIkx HtDpV G'", "output": "'   DEGHIVjkptx'"}
{"old_id": "sample_341", "code": "def A(B):\n    while len(B) > 5:\n        B.popitem()\n    return B\nassert A({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_342", "code": "def H(t):\n    return t.count('-') == len(t)\nassert H(\"---123-4\") == ", "input": "\"---123-4\"", "output": "False"}
{"old_id": "sample_343", "code": "def W(R, u):\n    R.extend(u)\n    return R\nassert W([[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]) == ", "input": "[[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]", "output": "[[1, 2, 3], [1, 2], 1, [1, 2, 3], 3, [2, 1]]"}
{"old_id": "sample_344", "code": "def G(list, J):\n    B = list[:]\n    B.sort()\n    J(B)\n    return list\nassert G([6, 4, 2, 8, 15], (lambda v: v.reverse())) == ", "input": "[6, 4, 2, 8, 15], (lambda x: x.reverse())", "output": "[6, 4, 2, 8, 15]"}
{"old_id": "sample_345", "code": "def w(c, O):\n    if c < O:\n        return (O, c)\n    return (c, O)\nassert w('ml', 'mv') == ", "input": "'ml', 'mv'", "output": "('mv', 'ml')"}
{"old_id": "sample_346", "code": "def P(t):\n    s = t.split('.')[-1]\n    Q = t + s[::-1]\n    return Q.endswith(s)\nassert P('docs.doc') == ", "input": "'docs.doc'", "output": "False"}
{"old_id": "sample_347", "code": "def I(H):\n    D = list(H)\n    v = len(D)\n    for l in range(v):\n        D.insert(l, D[l])\n    return ''.join(D).ljust(v * 2)\nassert I('hzcw') == ", "input": "'hzcw'", "output": "'hhhhhzcw'"}
{"old_id": "sample_348", "code": "def D(e):\n    return e.copy()\nassert D({563: 555, 133: None}) == ", "input": "{563: 555, 133: None}", "output": "{563: 555, 133: None}"}
{"old_id": "sample_349", "code": "def z(X):\n    X[1049] = 55\n    G, I = X.popitem()\n    X[G] = I\n    return X\nassert z({'noeohqhk': 623}) == ", "input": "{'noeohqhk': 623}", "output": "{'noeohqhk': 623, 1049: 55}"}
{"old_id": "sample_350", "code": "def F(x):\n    U = len(x)\n    k = [0] * U\n    if U == 0:\n        return k\n    for l, d in enumerate(x.values()):\n        k[l] = d\n    return k\nassert F({'a': 1, 'b': 2, 'c': 3}) == ", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]"}
{"old_id": "sample_351", "code": "def t(i):    \n    try:\n        while 'nnet lloP' in i:\n            i = i.replace('nnet lloP', 'nnet loLp')\n    finally:\n        return i\nassert t('a_A_b_B3 ') == ", "input": "'a_A_b_B3 '", "output": "'a_A_b_B3 '"}
{"old_id": "sample_352", "code": "def Y(m):\n    return m[len(m)//2]\nassert Y([-1, -3, -5, -7, 0]) == ", "input": "[-1, -3, -5, -7, 0]", "output": "-5"}
{"old_id": "sample_353", "code": "def t(b):\n    if b == []:\n        return -1\n    else:\n        g = {}\n        for X in b:\n            if X in g:\n                g[X] += 1\n            else:\n                g[X] = 1\n        return max(g.values())\nassert t([1, 0, 2, 2, 0, 0, 0, 1]) == ", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4"}
{"old_id": "sample_354", "code": "def c(I, values):\n    if values[1] is None:\n        values = values[0:1]\n    else:\n        values = values[1:]\n    return I.format(*values)\nassert c('{0}, {0}!!!', ['R', None]) == ", "input": "'{0}, {0}!!!', ['R', None]", "output": "'R, R!!!'"}
{"old_id": "sample_355", "code": "def g(u, O):\n    return u[len(O):]\nassert g('123x John z', 'z') == ", "input": "'123x John z', 'z'", "output": "'23x John z'"}
{"old_id": "sample_356", "code": "def W(w, F):\n    reverse = False\n    if F < 0:\n        reverse = True\n        F *= -1\n    w = w[::-1] * F\n    t = len(w)\n    \n    if reverse:\n        w = w[::-1]\n    return w\nassert W([1, 2], 1) == ", "input": "[1, 2], 1", "output": "[2, 1]"}
{"old_id": "sample_357", "code": "def b(K):\n    a = []\n    for m in range(len(K) - 1, 0 - 1, -1):\n        a += K[m]\n    return ''.join(a)\nassert b('crew') == ", "input": "'crew'", "output": "'werc'"}
{"old_id": "sample_358", "code": "def p(n, Q):\n    D = []\n    for O in range(len(n)):\n        if n[O] == Q and (O == 0 or n[O-1] != Q):\n            D.append(O) \n    if len(D) % 2 == 1:\n        return n\n    return n[D[0]+1:D[-1]]\nassert p('btrburger', 'b') == ", "input": "'btrburger', 'b'", "output": "'tr'"}
{"old_id": "sample_359", "code": "def z(w):\n    for Q in range(len(w)):\n        w[Q] = w[Q].center(len(w[-1]))\n    return w\nassert z(['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']) == ", "input": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "output": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']"}
{"old_id": "sample_360", "code": "def Q(f, H):\n    if len(f) <= 2:\n        return f\n    v = f[0] * (H - len(f) + 1)\n    return v + f[1:-1] + f[-1]\nassert Q('g', 15) == ", "input": "'g', 15", "output": "'g'"}
{"old_id": "sample_361", "code": "def m(r):\n    return r.split(':')[0].count('#')\nassert m(\"#! : #!\") == ", "input": "\"#! : #!\"", "output": "1"}
{"old_id": "sample_362", "code": "def e(v):\n    for a in range(len(v)-1):\n        if v[a:].islower():\n            return v[a + 1:]\n    return ''\nassert e('wrazugizoernmgzu') == ", "input": "'wrazugizoernmgzu'", "output": "'razugizoernmgzu'"}
{"old_id": "sample_363", "code": "def c(Y):\n    Y.sort()\n    L = len(Y)\n    R = [Y[L//2]]\n    \n    if L % 2 == 0:\n        R = [Y[L//2 - 1], Y[L//2]]\n    \n    for F in range(0, L//2):\n        R.insert(0, Y[L-F-1])\n        R.append(Y[F])\n    return R\nassert c([1]) == ", "input": "[1]", "output": "[1]"}
{"old_id": "sample_364", "code": "def v(u, p):\n    f = [b for b in u if b != 0]\n    g = [[b, p(b)] for b in f]\n    if g:\n        return g\n    return 'error - no numbers or all zeros!'\nassert v([0, 3, 0, 1], lambda b: b < 2) == ", "input": "[0, 3, 0, 1], lambda x: x < 2", "output": "[[3, False], [1, True]]"}
{"old_id": "sample_365", "code": "def I(f, Q):\n    if Q.startswith(f):\n        C, t = Q.split(f, 1)\n        return C + f + Q[len(f):]\n    return Q\nassert I('xqc', 'mRcwVqXsRDRb') == ", "input": "'xqc', 'mRcwVqXsRDRb'", "output": "'mRcwVqXsRDRb'"}
{"old_id": "sample_366", "code": "def P(w):\n    W = w.lower()\n    for m in w.lower():\n        if m in W:\n            W = W.replace(m, '', 1)\n    return W\nassert P('[ Hello ]+ Hello, World!!_ Hi') == ", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''"}
{"old_id": "sample_367", "code": "def Q(C, h):\n    V = C[:]\n    while h in V:\n        G = V.pop(V.index(h))\n        if G != h:\n            V.append(G)\n    return V\nassert Q([6, 2, 1, 1, 4, 1], 5) == ", "input": "[6, 2, 1, 1, 4, 1], 5", "output": "[6, 2, 1, 1, 4, 1]"}
{"old_id": "sample_368", "code": "def h(X, a):\n    r = []\n    for Z in a:\n        r.append(X.zfill(Z))\n    return ' '.join(r)\nassert h('4327', [2, 8, 9, 2, 7, 1]) == ", "input": "'4327', [2, 8, 9, 2, 7, 1]", "output": "'4327 00004327 000004327 4327 0004327 4327'"}
{"old_id": "sample_369", "code": "def l(r):\n    if r.isdigit():\n        return \"int\"\n    elif r.replace('.', '', 1).isdigit():\n        return \"float\"\n    elif r.count(' ') == len(r) - 1:\n        return \"str\"\n    elif len(r) == 1:\n        return \"char\"\n    else:\n        return \"tuple\"\nassert l(\" 99 777\") == ", "input": "\" 99 777\"", "output": "'tuple'"}
{"old_id": "sample_370", "code": "def o(K):\n    for d in K:\n        if not d.isspace():\n            return False\n    return True\nassert o('     i') == ", "input": "'     i'", "output": "False"}
{"old_id": "sample_371", "code": "def Q(H):\n    for y in H[:]:\n        if y % 2 != 0:\n            H.remove(y)\n    e = 0\n    for K in H:\n        e += K\n    return e\nassert Q([11, 21, 0, 11]) == ", "input": "[11, 21, 0, 11]", "output": "0"}
{"old_id": "sample_372", "code": "def v(s, X):\n    M = []\n    for m in s:\n        m = X // 2 * ('%s,' % m)\n        M.append(m)\n    return M\nassert v(['v'], 1) == ", "input": "['v'], 1", "output": "['']"}
{"old_id": "sample_373", "code": "def O(m):\n    copy = m\n    copy.append(100)\n    m.pop()\n    return copy\nassert O([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_374", "code": "def n(a, E):\n    I = []\n    for M in a:\n        if M.endswith(E):\n            I.append(M*2)\n    return I\nassert n([ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz') == ", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']"}
{"old_id": "sample_375", "code": "def W(P, L):\n    if L in P:\n        return L.join(P.partition(P[P.index(L) + 1]))\n    else:\n        return P\nassert W('sierizam', 'iz') == ", "input": "'sierizam', 'iz'", "output": "'sieriizzizam'"}
{"old_id": "sample_376", "code": "def q(f):\n    for h in range(len(f)):\n        if f[0:h].startswith(\"two\"):\n            return f[h:]\n    return 'no'\nassert q(\"2two programmers\") == ", "input": "\"2two programmers\"", "output": "'no'"}
{"old_id": "sample_377", "code": "def G(L):\n    return ', '.join(L.splitlines())\nassert G(\"BYE\\nNO\\nWAY\") == ", "input": "\"BYE\\nNO\\nWAY\"", "output": "'BYE, NO, WAY'"}
{"old_id": "sample_378", "code": "def b(O, o):\n    O = dict(O)\n    e = O.pop(o, 0)\n    if e == 0:\n        return 'No such key!'\n    while len(O) > 0:\n        O[O.popitem()[1]] = O.popitem()[0]\n    return int(O.popitem()[0])\nassert b(dict(I=0), 'u') == ", "input": "dict(did=0), 'u'", "output": "'No such key!'"}
{"old_id": "sample_379", "code": "def I(F):\n    for T in range(len(F) - 1, -1, -3):\n        if F[T] == 0:\n            F.clear()\n            return False\n    return F\nassert I([0, 0, 1, 2, 1]) == ", "input": "[0, 0, 1, 2, 1]", "output": "False"}
{"old_id": "sample_380", "code": "def u(a, Y):\n    a = a.rpartition(Y)\n    return a[0] + a[-1]\nassert u('xxjarczx', 'x') == ", "input": "'xxjarczx', 'x'", "output": "'xxjarcz'"}
{"old_id": "sample_381", "code": "def q(C, N):\n    V = max(1, N)\n    return C.zfill(V)\nassert q('19', 5) == ", "input": "'19', 5", "output": "'00019'"}
{"old_id": "sample_382", "code": "def D(P):\n    L = dict(list(P.items())\n    [::-1])\n    return \" \".join([str(d) for d in L.items()])\nassert D({15: \"Qltuf\", 12: \"Rwrepny\"}) == ", "input": "{15: \"Qltuf\", 12: \"Rwrepny\"}", "output": "\"(12, 'Rwrepny') (15, 'Qltuf')\""}
{"old_id": "sample_383", "code": "def v(i, d):\n    M = list(i)\n    while d in M[-3::-2]:\n        M.remove(M[-3])\n        M.remove(M[-3])\n    return ''.join(M).strip('.')\nassert v('ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y') == ", "input": "'ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y'", "output": "'ellod!p.nkyp.exa.bi.y.hain'"}
{"old_id": "sample_384", "code": "def i(L, s):\n    s = list(s)\n    L = list(L)\n    k = L\n    while len(k) > 0 and L:\n        if k[0] in s:\n            k = k[1:]\n        else:\n            break \n    return ''.join(k)\nassert i('asfdellos', 'Ta') == ", "input": "'asfdellos', 'Ta'", "output": "'sfdellos'"}
{"old_id": "sample_385", "code": "def i(Q):\n    P = 0\n    c = []\n    while P < len(Q):\n        if Q[P] in Q[P+1:]:\n            c.append(Q[P])\n            if len(c) == 3:\n                return c\n        P += 1\n    return c\nassert i([0, 2, 1, 2, 6, 2, 6, 3, 0]) == ", "input": "[0, 2, 1, 2, 6, 2, 6, 3, 0]", "output": "[0, 2, 2]"}
{"old_id": "sample_386", "code": "def n(c, x):\n    count = len(x)\n    for U in range(count):\n        if x[str(U)] in c:\n            x.pop(str(U))\n    return \"Done!\"\nassert n('mid', {'0':'q','1':'f','2':'w','3':'i'}) == ", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'"}
{"old_id": "sample_387", "code": "def E(g, b, z):\n    g.insert(b, z)\n    return g\nassert E([3, 1, 2], 2, 0) == ", "input": "[3, 1, 2], 2, 0", "output": "[3, 1, 0, 2]"}
{"old_id": "sample_388", "code": "def o(h, i):\n    l = list(i) + [' ', '_']\n\n    q = 0\n    while q < len(h) and h[q] in l:\n        q += 1\n\n    return h[q:]\nassert o(\"2nm_28in\", \"nm\") == ", "input": "\"2nm_28in\", \"nm\"", "output": "'2nm_28in'"}
{"old_id": "sample_389", "code": "def Y(O, W):\n    if type(W) is list:\n        for a in W:\n            O.extend(a)\n    else:\n        O.extend(W)\n    return O\nassert Y([1, 2, 3], 'nammo') == ", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']"}
{"old_id": "sample_390", "code": "def E(I):\n    if not I.strip():\n        return len(I.strip())\n    return None\nassert E(\" \\t \") == ", "input": "\" \\t \"", "output": "0"}
{"old_id": "sample_391", "code": "def k(z):\n    c = z\n    c.reverse()\n    G = 0\n    for G in range(len(c)):\n        G += 2\n        c[G - 1:G] = ['+']\n    c.append('+')\n    return c\nassert k(['r', '9']) == ", "input": "['r', '9']", "output": "['9', '+', '+', '+']"}
{"old_id": "sample_392", "code": "def s(B):\n    if B.upper() == B:\n        return 'ALL UPPERCASE'\n    return B\nassert s('Hello Is It MyClass') == ", "input": "'Hello Is It MyClass'", "output": "'Hello Is It MyClass'"}
{"old_id": "sample_393", "code": "def Z(S):\n    A = S[::-1]\n    T = ''\n    for c in range(len(A) - 3, 0, -3):\n        T += '---'.join(A[c:c + 3]) + '---'\n    return T[:-3]\nassert Z('scala') == ", "input": "'scala'", "output": "'a---c---s'"}
{"old_id": "sample_394", "code": "def t(O):\n    l = O.splitlines()\n    Q = 0\n    for m in l:\n        if len(m) == 0:\n            return Q\n        Q+=1\n    return -1\nassert t(\"2 m2 \\n\\nbike\") == ", "input": "\"2 m2 \\n\\nbike\"", "output": "1"}
{"old_id": "sample_395", "code": "def B(f):\n    for b in range(len(f)):\n        if f[b].isdecimal():\n            return b + (f[b] == '0')\n        elif f[b] == '0':\n            return -1\n    return -1\nassert B(\"11\") == ", "input": "\"11\"", "output": "0"}
{"old_id": "sample_396", "code": "def k(D):\n    while D:\n        S, M = D.popitem()\n        D[S] = M**2\n    return D\nassert k({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_397", "code": "def u(q):\n    return dict.fromkeys(q, 0)\nassert u(['x', 'u', 'w', 'j', 3, 6]) == ", "input": "['x', 'u', 'w', 'j', 3, 6]", "output": "{'x': 0, 'u': 0, 'w': 0, 'j': 0, 3: 0, 6: 0}"}
{"old_id": "sample_398", "code": "def g(e):\n    dict = {}\n    for p, k in e.items():\n        count = e[p]\n        if count not in dict:\n            dict[count] = []\n        dict[count].append(p)\n    e.update(dict)\n    return e\nassert g({'2': 2, '0': 1, '1': 2}) == ", "input": "{'2': 2, '0': 1, '1': 2}", "output": "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}"}
{"old_id": "sample_399", "code": "def j(P, K, F):\n    if len(K) > 3:\n        return P\n    if K in P and ' ' not in P:\n        return P.replace(K, F*len(K))\n    while K in P:\n        P = P.replace(K, F)\n    return P\nassert j('avacado', 'va', '-') == ", "input": "'avacado', 'va', '-'", "output": "'a--cado'"}
{"old_id": "sample_400", "code": "def t(x):\n    v = map(str.isascii, x.split())\n    if True in v:\n        return ', '.join(y for y in x.split() if y.isascii())\n    return ''\nassert t('I am hungry! eat food.') == ", "input": "'I am hungry! eat food.'", "output": "'I, am, hungry!, eat, food.'"}
{"old_id": "sample_401", "code": "def N(b, H):\n    if H and b.endswith(H):\n        return b[:- len(H)]\n    return b\nassert N('mathematics', 'example') == ", "input": "'mathematics', 'example'", "output": "'mathematics'"}
{"old_id": "sample_402", "code": "def q(a, z):\n    S = {}\n    for M in range(a):\n        S.clear()\n        S.update({G + 10: G * 10 for G in z})\n    return S\nassert q(0, ['aaa', 'bbb']) == ", "input": "0, ['aaa', 'bbb']", "output": "{}"}
{"old_id": "sample_403", "code": "def C(m, u):\n    Y = len(u)\n    index = m.find(u)\n    count = 0\n    while index >= 0:\n        m = m[index + Y:]\n        index = m.find(u)\n        count += 1\n    return count\nassert C('hrsiajiajieihruejfhbrisvlmmy', 'hr') == ", "input": "'hrsiajiajieihruejfhbrisvlmmy', 'hr'", "output": "2"}
{"old_id": "sample_404", "code": "def O(N):\n    J = dict.fromkeys(N, False) \n    return sum([1 for G in J.keys()])\nassert O(['l', 'f', 'h', 'g', 's', 'b']) == ", "input": "['l', 'f', 'h', 'g', 's', 'b']", "output": "6"}
{"old_id": "sample_405", "code": "def v(B):\n    F = B[0] - 1\n    B.pop(0)\n    while(F <= B[0]):\n        B.pop(0)\n        F -= 1\n    B.insert(0, F)\n    return B\nassert v([6, 3, 4, 1, 2, 3, 5]) == ", "input": "[6, 3, 4, 1, 2, 3, 5]", "output": "[5, 3, 4, 1, 2, 3, 5]"}
{"old_id": "sample_406", "code": "def o(g):\n    p = list(g)\n    p[0], p[-1] = p[-1].upper(), p[0].upper()\n    return ''.join(p).istitle()\nassert o('Josh') == ", "input": "'Josh'", "output": "False"}
{"old_id": "sample_407", "code": "def j(u):\n    while len(u) > 1:\n        u.clear()\n        u.append(len(u))\n    return u.pop()\nassert j([6, 1, 2, 3]) == ", "input": "[6, 1, 2, 3]", "output": "0"}
{"old_id": "sample_408", "code": "def f(X):\n    X.reverse()\n    return X\nassert f([-4, 6, 0, 4, -7, 2, -1]) == ", "input": "[-4, 6, 0, 4, -7, 2, -1]", "output": "[-1, 2, -7, 4, 0, 6, -4]"}
{"old_id": "sample_409", "code": "def c(g, M):\n    if g:\n        g = g.removeprefix(M)\n        g = g.removeprefix(g[-1])\n        g = g[:-1] + g[-1].capitalize()\n    return g\nassert c('querist', 'u') == ", "input": "'querist', 'u'", "output": "'querisT'"}
{"old_id": "sample_410", "code": "def r(I):\n    M = 0\n    for q in range(len(I)):\n        I.insert(q, I[M])\n        M += 1\n    return I\nassert r([1, 3, -1, 1, -2, 6]) == ", "input": "[1, 3, -1, 1, -2, 6]", "output": "[1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6]"}
{"old_id": "sample_411", "code": "def m(B, I):\n    if isinstance(I, list):\n        return ', '.join(B.startswith(u) for u in I)\n    else:\n        return B.startswith(I)\nassert m('Hello World', 'W') == ", "input": "'Hello World', 'W'", "output": "False"}
{"old_id": "sample_412", "code": "def p(M, H, q):\n    n = list(range(M, H + 1, q))\n    if 1 in n:\n        n[-1] = H + 1\n    return len(n)\nassert p(3, 10, 1) == ", "input": "3, 10, 1", "output": "8"}
{"old_id": "sample_413", "code": "def V(L):\n    return '{}{}{}'.format(L[3:], L[2], L[5:8])\nassert V('jbucwc') == ", "input": "'jbucwc'", "output": "'cwcuc'"}
{"old_id": "sample_414", "code": "def M(Y):\n    w = Y.copy()\n    for P, H in w.items():\n        for G in range(len(H)):\n            H[G] = H[G].upper()\n    return w\nassert M({'X': ['x', 'y']}) == ", "input": "{'X': ['x', 'y']}", "output": "{'X': ['X', 'Y']}"}
{"old_id": "sample_415", "code": "def N(Z):\n    C = dict(Z)\n    for x, H in C.items():\n        if H < 0 or H > 9:\n            return None\n    return C\nassert N(((8, 5), (8, 2), (5, 3))) == ", "input": "((8, 5), (8, 2), (5, 3))", "output": "{8: 2, 5: 3}"}
{"old_id": "sample_416", "code": "def d(B, Z, A):\n    index = B.rfind(Z, 0, B.find(Z))\n    I = list(B)\n    while index > 0:\n        I[index:index+len(Z)] = A\n        index = B.rfind(Z, 0, index)\n    return ''.join(I)\nassert d('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1') == ", "input": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1'", "output": "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq'"}
{"old_id": "sample_417", "code": "def X(N):\n    N.reverse()\n    N.pop()\n    N.reverse()\n    return N\nassert X([7, 8, 2, 8]) == ", "input": "[7, 8, 2, 8]", "output": "[8, 2, 8]"}
{"old_id": "sample_418", "code": "def p(N, M):\n    u = N.partition(M)\n    a, U, I = len(u[0]), len(u[1]), len(u[2])\n    if a >= 2 and U <= 2 and I >= 2:\n        return (u[0][::-1] + u[1] + u[2][::-1] + '#')\n    return (u[0] + u[1] + u[2])\nassert p(\"qqqqq\", \"qqq\") == ", "input": "\"qqqqq\", \"qqq\"", "output": "'qqqqq'"}
{"old_id": "sample_419", "code": "def L(N, D):\n    if not D in N:\n        return ''\n    return N.rpartition(D)[0]\nassert L('mmfbifen', 'i') == ", "input": "'mmfbifen', 'i'", "output": "'mmfb'"}
{"old_id": "sample_420", "code": "def E(d):\n    try:\n        return d.isalpha()\n    except:\n        return False\nassert E(\"x\") == ", "input": "\"x\"", "output": "True"}
{"old_id": "sample_421", "code": "def k(str, y):\n    if len(str) < y:\n        return str\n    else:\n        return str.removeprefix(str[:y])\nassert k(\"try.\", 5) == ", "input": "\"try.\", 5", "output": "'try.'"}
{"old_id": "sample_422", "code": "def o(C):\n    G = C.copy()\n    G = reversed(G)\n    return [l*l for l in G]\nassert o([1, 2, 1]) == ", "input": "[1, 2, 1]", "output": "[1, 4, 1]"}
{"old_id": "sample_423", "code": "def j(l):\n    R = len(l)\n    for b in range(R-1, -1, -1):\n        if l[b] == l[0]:\n            l.remove(l[R-1])\n    return l\nassert j([4, 2, 5, 1, 3, 2, 6]) == ", "input": "[4, 2, 5, 1, 3, 2, 6]", "output": "[4, 2, 5, 1, 3, 2]"}
{"old_id": "sample_424", "code": "def U(g):\n    g = g.replace('\"', '')\n    j = list(g)\n    Z = 0\n    count = 1\n    while Z < len(j) and j[Z] in \".:,\":\n        if j[Z] == \".\":\n            count = h[Z] + 1\n        Z += 1\n    return g[Z+count:]\nassert U('\"Makers of a Statement\"') == ", "input": "'\"Makers of a Statement\"'", "output": "'akers of a Statement'"}
{"old_id": "sample_425", "code": "def n(u):\n    u = u.replace('/', ':')\n    b = u.rpartition(':')\n    return [b[0], b[1], b[2]]\nassert n('/CL44     ') == ", "input": "'/CL44     '", "output": "['', ':', 'CL44     ']"}
{"old_id": "sample_426", "code": "def Z(t, E, j):\n    t.insert(j, E)\n    return t\nassert Z([1, 2, 3], 8, 5) == ", "input": "[1, 2, 3], 8, 5", "output": "[1, 2, 3, 8]"}
{"old_id": "sample_427", "code": "def n(p):\n    count = len(p) - 1\n    H = p[::-1]\n    while count > 0 and H[::2].rfind('sea') == -1:\n        count -= 1\n        H = H[:count]\n    return H[count:]\nassert n('s a a b s d s a a s a a') == ", "input": "'s a a b s d s a a s a a'", "output": "''"}
{"old_id": "sample_428", "code": "def c(r):\n    for g in range(len(r)):\n        if not g % 2:\n            r.append(r[g] * r[g + 1])\n    return r\nassert c([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_429", "code": "def Z(W):\n    d = []\n    while len(W.keys()) > 0:\n        d.append(W.popitem())\n    return d\nassert Z({5: 1, 'abc': 2, 'defghi': 2, 87.29: 3}) == ", "input": "{5: 1, 'abc': 2, 'defghi': 2, 87.29: 3}", "output": "[(87.29, 3), ('defghi', 2), ('abc', 2), (5, 1)]"}
{"old_id": "sample_430", "code": "def T(X, Z):\n    x = X.copy()\n    x.extend(Z)\n    return x\nassert T([5, 1, 3, 7, 8], ['', 0, -1, []]) == ", "input": "[5, 1, 3, 7, 8], ['', 0, -1, []]", "output": "[5, 1, 3, 7, 8, '', 0, -1, []]"}
{"old_id": "sample_431", "code": "def r(c, t):\n    f = list(range(1, c+1))\n    for R in range(t):\n        f.clear()\n    return f\nassert r(1, 3) == ", "input": "1, 3", "output": "[]"}
{"old_id": "sample_432", "code": "def d(c, Z):\n    if len(Z) == c:\n        return Z[::-1]\n    return False\nassert d(-5, 'G5ogb6f,c7e.EMm') == ", "input": "-5, 'G5ogb6f,c7e.EMm'", "output": "False"}
{"old_id": "sample_433", "code": "def Y(d):\n    d = d.split(',')\n    d.pop(0)\n    d.insert(0, d.pop(d.index('T')))\n    return 'T' + ',' + ','.join(d)\nassert Y(\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\") == ", "input": "\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\"", "output": "'T,T,Sspp,G ,.tB,Vxk,Cct'"}
{"old_id": "sample_434", "code": "def z(E):\n    try:\n       return E.rfind('e')\n    except AttributeError:\n        return \"Nuk\"\nassert z('eeuseeeoehasa') == ", "input": "'eeuseeeoehasa'", "output": "8"}
{"old_id": "sample_435", "code": "def G(U, p, i):\n    while len(U) < p:\n        U.insert(len(U) // 2, i)\n    for E in range(len(U) // (p - 1) - 4):\n        U.insert(len(U) // 2, i)\n    return ' '.join(U)\nassert G([], 0, 1) == ", "input": "[], 0, 1", "output": "''"}
{"old_id": "sample_436", "code": "def Y(R, f):\n    return [R[b:b+1] for b in f]\nassert Y('s7 6s 1ss', [1, 3, 6, 1, 2]) == ", "input": "'s7 6s 1ss', [1, 3, 6, 1, 2]", "output": "['7', '6', '1', '7', ' ']"}
{"old_id": "sample_437", "code": "def V(T):\n    C = {}\n    for A in T:\n        C = C.fromkeys(A, None)\n    return C\nassert V(['john', 'doe', 'the', 'john', 'doe']) == ", "input": "['john', 'doe', 'the', 'john', 'doe']", "output": "{'d': None, 'o': None, 'e': None}"}
{"old_id": "sample_438", "code": "def u(S):\n    p = 100\n    for I in range(10, 30):\n        if 0 < S.count('\\t') < 20:\n            p = I\n            break\n    return S.expandtabs(p)\nassert u('1  \\t\\t\\t3') == ", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'"}
{"old_id": "sample_439", "code": "def J(y):\n    w = y.partition(' ')[::2]\n    return ''.join(w)\nassert J('coscifysu') == ", "input": "'coscifysu'", "output": "'coscifysu'"}
{"old_id": "sample_440", "code": "def B(p):\n    if p.isdecimal():\n        return 'yes'\n    else:\n        return 'no'\nassert B(\"abc\") == ", "input": "\"abc\"", "output": "'no'"}
{"old_id": "sample_441", "code": "def B(Q, q, e):\n    Q[q] = e\n    return Q\nassert B({37: 'forty-five'}, '23', 'what?') == ", "input": "{37: 'forty-five'}, '23', 'what?'", "output": "{37: 'forty-five', '23': 'what?'}"}
{"old_id": "sample_442", "code": "def D(x):\n    c = []\n    for e in range(len(x)):\n        if x[e] % 2 == 0:\n            c.append(x[e])\n\n    return x.copy()\nassert D([1, 2, 3, 4]) == ", "input": "[1, 2, 3, 4]", "output": "[1, 2, 3, 4]"}
{"old_id": "sample_443", "code": "def h(N):\n    for z in N:\n        if z == ' ':\n            N = N.lstrip()\n        else:\n            N = N.replace('cd', z)\n    return N\nassert h(\"lorem ipsum\") == ", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'"}
{"old_id": "sample_444", "code": "def i(z):\n    count = len(z)\n    for j in range(count-1, 0, -2):\n        z.insert(j, z.pop(0) + z.pop(0))\n    return z\nassert i([-5, 3, -2, -3, -1, 3, 5]) == ", "input": "[-5, 3, -2, -3, -1, 3, 5]", "output": "[5, -2, 2, -5]"}
{"old_id": "sample_445", "code": "def Q(R):\n    F = R.split(',')\n    for q, W in enumerate(F):\n        F[q] = W.replace(' and', '+').title().replace('+', ' and')\n    return ', '.join(F)\nassert Q(\"carrot, banana, and strawberry\") == ", "input": "\"carrot, banana, and strawberry\"", "output": "'Carrot,  Banana,  and Strawberry'"}
{"old_id": "sample_446", "code": "def f(L):\n    T = len(L)\n    if T % 2 == 0:\n        L.clear()\n    else:\n        L.reverse()\n    return L\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_447", "code": "def W(j, w):\n    T = ''\n    j = j.replace('\\t', ' '*(w-1))\n    for R in range(len(j)):\n        if j[R] == ' ':\n            T += '|'\n        else:\n            T += j[R]\n    return T\nassert W(\"\\ta\", 3) == ", "input": "\"\\ta\", 3", "output": "'||a'"}
{"old_id": "sample_448", "code": "def U(y, D):\n    if D == '':\n        D = None\n    return y.endswith(D)\nassert U('uMeGndkGh', 'kG') == ", "input": "'uMeGndkGh', 'kG'", "output": "False"}
{"old_id": "sample_449", "code": "def z(u):\n    Q = len(u)\n    G = 0\n    while G < Q and u[G].isdigit():\n        G += 1\n    return G == Q\nassert z('1') == ", "input": "'1'", "output": "True"}
{"old_id": "sample_450", "code": "def P(O):\n    O = O.split()\n    for T in range(1, len(O), 2):\n        O[T] = ''.join(reversed(O[T]))\n    return ' '.join(O)\nassert P('K zBK') == ", "input": "'K zBK'", "output": "'K KBz'"}
{"old_id": "sample_451", "code": "def U(J, Y):\n    J = list(J)\n    for count, p in enumerate(J):\n        if p == Y:\n            J.remove(p)\n            return ''.join(J)\n    return J\nassert U('pn', 'p') == ", "input": "'pn', 'p'", "output": "'n'"}
{"old_id": "sample_452", "code": "def G(J):\n    H = 0\n    for T in J:\n        if T.isalpha():\n            H += 1\n    return H\nassert G('l000*',) == ", "input": "'l000*',", "output": "1"}
{"old_id": "sample_453", "code": "def J(j, B):\n    return j.endswith(B)\nassert J('wrsch)xjmb8', 'c') == ", "input": "'wrsch)xjmb8', 'c'", "output": "False"}
{"old_id": "sample_454", "code": "def L(x, count):\n    g = {}\n    for P in range(count):\n        x = x.copy()\n        g = {**x, **g}\n    return g\nassert L({'a': 2, 'b': [], 'c': {}}, 0) == ", "input": "{'a': 2, 'b': [], 'c': {}}, 0", "output": "{}"}
{"old_id": "sample_455", "code": "def n(X):\n    R = 0\n    for r in X:\n        if r.isupper():\n            R += 1\n    return X.upper() if R >= 10 else X\nassert n('?XyZ') == ", "input": "'?XyZ'", "output": "'?XyZ'"}
{"old_id": "sample_456", "code": "def z(F, m):\n    return F.expandtabs(m)\nassert z(\"Join us in Hungary\", 4) == ", "input": "\"Join us in Hungary\", 4", "output": "'Join us in Hungary'"}
{"old_id": "sample_457", "code": "def f(N):\n    count = list(range(len(N)))\n    for z in range(len(N)):\n        N.pop()\n        if len(count) > 0:\n            count.pop(0)\n    return N\nassert f([3, 1, 7, 5, 6]) == ", "input": "[3, 1, 7, 5, 6]", "output": "[]"}
{"old_id": "sample_458", "code": "def P(X, E, n):\n    N = str.maketrans(E, n)\n    return X.translate(N)\nassert P('mmm34mIm', 'mm3', ',po') == ", "input": "'mmm34mIm', 'mm3', ',po'", "output": "'pppo4pIp'"}
{"old_id": "sample_459", "code": "def H(G, m):\n    for P in range(1, len(G), 2):\n        m.update({G[P]: G[P-1]})\n\n    return m\nassert H(['b', 'vzjmc', 'f', 'ae', '0'], dict()) == ", "input": "['b', 'vzjmc', 'f', 'ae', '0'], dict()", "output": "{'vzjmc': 'b', 'ae': 'f'}"}
{"old_id": "sample_460", "code": "def A(i, s):\n    P = len(i)\n    K = '|'\n    if s >= P:\n        U = s - P\n        K += ' ' * (U // 2)\n        return K + i + K\n    return i\nassert A('GENERAL NAGOOR', 5) == ", "input": "'GENERAL NAGOOR', 5", "output": "'GENERAL NAGOOR'"}
{"old_id": "sample_461", "code": "def i(s, j):\n    return j.startswith(s) or False\nassert i('123', '123eenhas0') == ", "input": "'123', '123eenhas0'", "output": "True"}
{"old_id": "sample_462", "code": "def y(D, P):\n    N = len(D)\n    j = list(D)\n    if P not in j:\n        P = j[0]\n    return P * N\nassert y('ldebgp o', 'o') == ", "input": "'ldebgp o', 'o'", "output": "'oooooooo'"}
{"old_id": "sample_463", "code": "def h(dict):\n    R = dict.copy()\n    o = []\n    for K, p in dict.items():\n        if p in dict:\n            del R[K]\n    return R\nassert h({-1: -1, 5: 5, 3: 6, -4: -4}) == ", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}"}
{"old_id": "sample_464", "code": "def N(z):\n    if z.isdecimal():\n        t = int(z) * 4 - 50\n        t -= len([v for v in list(z) if v not in '02468']) * 100\n        return t\n    return 'NAN'\nassert N('0') == ", "input": "'0'", "output": "-50"}
{"old_id": "sample_465", "code": "def z(G, X):\n    m = dict.fromkeys(G, 'north')\n    if X:\n        m.update(s.strip() for s in X.split(', '))\n    return m\nassert z(['wise king', 'young king'], '') == ", "input": "['wise king', 'young king'], ''", "output": "{'wise king': 'north', 'young king': 'north'}"}
{"old_id": "sample_466", "code": "def C(I):\n    z = len(I)\n    index = 0\n    while index < z and I[index].isspace():\n        index += 1\n    return I[index:index+5]\nassert C('-----\\t\\n\\tth\\n-----') == ", "input": "'-----\\t\\n\\tth\\n-----'", "output": "'-----'"}
{"old_id": "sample_467", "code": "def K(V):\n    copy = V.copy()\n    k = dict()\n    for i in copy:\n        k[i] = len(copy[i])\n    return k\nassert K({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_468", "code": "def J(C, N, v):\n    O = i = N\n    for S in range(v):\n        if i:\n            C, i = C.replace(i, '', 1), None\n            O = i = N\n    return O.join(C.split(N))\nassert J('unrndqafi', 'c', 2) == ", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'"}
{"old_id": "sample_469", "code": "def f(g, m, M):\n   k = len(g)\n   index = m % (k)\n   if m < 0:\n       index = k // 2\n   o = list(g)\n   o.insert(index, M)\n   o.pop(k-1)\n   return ''.join(o)\nassert f('sduyai', 1, 'y') == ", "input": "'sduyai', 1, 'y'", "output": "'syduyi'"}
{"old_id": "sample_470", "code": "def a(w):\n    r = {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5}\n    v = []\n    for W, i in r.items():\n        if i % w == 0:\n            v.append(W)\n    return v\nassert a(2) == ", "input": "2", "output": "['B', 'D']"}
{"old_id": "sample_471", "code": "def a(g, G):\n    I = [index for index in range(len(G)) if G[index] == g]\n    if len(I) == 0:\n        return -1\n    else:\n        return I[0]\nassert a('o', 'fnmart') == ", "input": "'o', 'fnmart'", "output": "-1"}
{"old_id": "sample_473", "code": "def i(X, V):\n    e = list()\n    for W in range(len(X)):\n        if X[W] == V:\n            e.append(W)\n    y = list(X)\n    for W in e:\n        y.remove(V)\n    return ''.join(y)\nassert i('scedvtvotkwqfoqn', 'o') == ", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'"}
{"old_id": "sample_474", "code": "def Q(S, C):\n    N = []\n    V = S.split('\\n')\n    for H in V:\n        N.append(H.center(C))\n    return '\\n'.join(N)\nassert Q('#[)[]>[^e>\\n 8', -5) == ", "input": "'#[)[]>[^e>\\n 8', -5", "output": "'#[)[]>[^e>\\n 8'"}
{"old_id": "sample_475", "code": "def Q(X, index):\n    if index < 0:\n        index = len(X) + index\n    return X[index]\nassert Q([1], 0) == ", "input": "[1], 0", "output": "1"}
{"old_id": "sample_476", "code": "def W(Q, B):\n    n = Q.split()\n    Q = []\n    for P in n:\n        for U in P:\n            Q.append(U)\n    if B in Q:\n        return True\n    else:\n        return False\nassert W(\"booty boot-boot bootclass\", 'k') == ", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False"}
{"old_id": "sample_477", "code": "def F(b):\n    r, g, Y = b.rpartition('|')\n    if Y == 'r':\n        Y = r.replace('u', 'p')\n    return r, Y\nassert F('|xduaisf') == ", "input": "'|xduaisf'", "output": "('', 'xduaisf')"}
{"old_id": "sample_478", "code": "def Z(d):\n    S = {}\n    for u in d:\n        S[u] = S.get(u, 0) + 1\n    return S\nassert Z('meow meow') == ", "input": "'meow meow'", "output": "{'m': 2, 'e': 2, 'o': 2, 'w': 2, ' ': 1}"}
{"old_id": "sample_479", "code": "def f(S, n, P):\n    S.pop(n - 1)\n    S.pop(P - 1)\n    return S\nassert f([1, 5, 2, 3, 6], 2, 4) == ", "input": "[1, 5, 2, 3, 6], 2, 4", "output": "[1, 2, 3]"}
{"old_id": "sample_480", "code": "def d(u, S, F):\n    if u == '':\n        return u\n    b = u.split(S)\n    for index, L in enumerate(b):\n        if S in L:\n            b[index] = L.replace(S, F, 1)\n    return S.join(b)\nassert d('', 'mi', 'siast') == ", "input": "'', 'mi', 'siast'", "output": "''"}
{"old_id": "sample_481", "code": "def Y(values, J, o):\n    if values[-1] == o:\n        if values[0] not in values[1:]:\n            values.append(values[0])\n    elif values[-1] == J:\n        if values[0] == o:\n            values.append(values[0])\n    return values\nassert Y([1, 1], 2, 3) == ", "input": "[1, 1], 2, 3", "output": "[1, 1]"}
{"old_id": "sample_482", "code": "def l(a):\n    return a.replace('\\\\\"', '\"')\nassert l('Because it intrigues them') == ", "input": "'Because it intrigues them'", "output": "'Because it intrigues them'"}
{"old_id": "sample_483", "code": "def Q(Y, y):\n    return ' '.join(Y.split(y, len(Y)))\nassert Q('a', 'a') == ", "input": "'a', 'a'", "output": "' '"}
{"old_id": "sample_484", "code": "def Z(l):\n    c = []\n    for t in l:\n        try:\n            if t.isnumeric():\n                c.append(int(t)*2)\n        except ValueError:\n            c.append(t[::-1])\n    return c\nassert Z(['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']) == ", "input": "['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']", "output": "[182, 32]"}
{"old_id": "sample_485", "code": "def Y(W):\n    W = W.split()\n    if len(W) == 2:\n        W = list(reversed(W))\n    O = ' '.join([W[0].ljust(5), W[1].ljust(5)])\n    return O\nassert Y('gsd avdropj') == ", "input": "'gsd avdropj'", "output": "'avdropj gsd  '"}
{"old_id": "sample_486", "code": "def O(Q):\n    D = Q.copy()\n    for e, y in Q.items():\n        D[e] = y * y\n    return D\nassert O({1:1, 2:2, 3:3}) == ", "input": "{1:1, 2:2, 3:3}", "output": "{1: 1, 2: 4, 3: 9}"}
{"old_id": "sample_487", "code": "def H(dict):\n    h = []\n    for O in dict.keys():\n        if O % 2 == 0:\n            h.append(O)\n    return h\nassert H({ 4: 'a' }) == ", "input": "{ 4: 'a' }", "output": "[4]"}
{"old_id": "sample_488", "code": "def T(f, Q):\n    count = f.count(Q)\n    R = list(f)\n    if count > 0:\n        index = R.index(Q) + 1\n        R[:index:index+1] = [P for P in R[index:index+count:1]]\n    return ''.join(R)\nassert T('tezmgvn 651h', '6') == ", "input": "'tezmgvn 651h', '6'", "output": "'5ezmgvn 651h'"}
{"old_id": "sample_489", "code": "def U(J, Z):\n    return J.removeprefix(Z.lower())\nassert U('coscifysu', 'cos') == ", "input": "'coscifysu', 'cos'", "output": "'cifysu'"}
{"old_id": "sample_490", "code": "def k(G):\n    return ''.join([e for e in G if e.isspace()])\nassert k( '\\ngiyixjkvu\\n\\r\\r \\frgjuo') == ", "input": " '\\ngiyixjkvu\\n\\r\\r \\frgjuo'", "output": "'\\n\\n\\r\\r \\x0c'"}
{"old_id": "sample_491", "code": "def t(J):\n    for n in range(-1, -len(J)-1, -1):\n        J.extend([J[n], J[n]])\n    return J\nassert t([4, 8, 8, 5]) == ", "input": "[4, 8, 8, 5]", "output": "[4, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5]"}
{"old_id": "sample_492", "code": "def v(C, x):\n    i = list(C)\n    if (i.count(x)) % 2 == 0:\n        while x in i:\n            i.remove(x)\n    else:\n        i.clear()\n    return ''.join(i)\nassert v('abbkebaniuwurzvr', 'm') == ", "input": "'abbkebaniuwurzvr', 'm'", "output": "'abbkebaniuwurzvr'"}
{"old_id": "sample_493", "code": "def h(v):\n    keys = []\n    for J in v:\n        keys.append('%s => %s' % (J, v[J]))\n    return keys\nassert h({'-4':'4','1':'2','-':'-3'}) == ", "input": "{'-4':'4','1':'2','-':'-3'}", "output": "['-4 => 4', '1 => 2', '- => -3']"}
{"old_id": "sample_494", "code": "def M(G, D):\n    P = \"\"\n    while D > len(G):\n        P += '0'\n        D -= 1\n    return P + G\nassert M(\"1\", 3) == ", "input": "\"1\", 3", "output": "'001'"}
{"old_id": "sample_495", "code": "def L(Z):\n    if str.isascii(Z[-5:]):\n        return Z[-5:], Z[0:][:3]\n    elif str.isascii(Z[:5]):\n        return Z[:5], Z[-5:][3:]\n    else:\n        return Z\nassert L('a1234år') == ", "input": "'a1234år'", "output": "('a1234', 'år')"}
{"old_id": "sample_496", "code": "def o(c, u):\n    if isinstance(u, str):\n        return c.count(u) + c.count(u.lower())\n    return c.count(u)\nassert o('eftw{ьТсk_1', '\\\\') == ", "input": "'eftw{ьТсk_1', '\\\\'", "output": "0"}
{"old_id": "sample_497", "code": "def p(N):\n    Z = list(str(N))\n    for L in range(2,len(Z)): Z[L] += '+'\n    return Z\nassert p(44) == ", "input": "44", "output": "['4', '4']"}
{"old_id": "sample_498", "code": "def F(I, b, q):\n    I[b:b] = (q,)\n    return I\nassert F([2, 2, 2, 3, 3], 2, 3) == ", "input": "[2, 2, 2, 3, 3], 2, 3", "output": "[2, 2, 3, 2, 3, 3]"}
{"old_id": "sample_499", "code": "def s(y, h, j):\n    e = len(y)\n    return y.center(h, j)\nassert s('magazine', 25, '.') == ", "input": "'magazine', 25, '.'", "output": "'.........magazine........'"}
{"old_id": "sample_500", "code": "def y(i, j):\n    return i[:i[::-1].find(j)][::-1]\nassert y('dsj osq wi w', ' ') == ", "input": "'dsj osq wi w', ' '", "output": "'d'"}
{"old_id": "sample_501", "code": "def R(Y, W):\n    index = Y.rindex(W)\n    e = list(Y)\n    while index > 0:\n        e[index] = e[index-1]\n        e[index-1] = W\n        index -= 2\n    return ''.join(e)\nassert R('qpfi jzm', 'j') == ", "input": "'qpfi jzm', 'j'", "output": "'jqjfj zm'"}
{"old_id": "sample_502", "code": "def I(o):\n    return '*'.join(o.split(' '))\nassert I('Fred Smith') == ", "input": "'Fred Smith'", "output": "'Fred*Smith'"}
{"old_id": "sample_503", "code": "def l(U):\n    H = [None] * len(U)\n    Z = m = 0\n    while U:\n        H[Z] = U.popitem(Z == m)\n        Z, m = m, (m+1) % len(H)\n    return H\nassert l({}) == ", "input": "{}", "output": "[]"}
{"old_id": "sample_504", "code": "def a(values):\n    values.sort()\n    return values\nassert a([1, 1, 1, 1]) == ", "input": "[1, 1, 1, 1]", "output": "[1, 1, 1, 1]"}
{"old_id": "sample_505", "code": "def c(K):\n    while K:\n        if K[-1].isalpha():\n            return K\n        K = K[:-1]\n    return K\nassert c('--4/0-209') == ", "input": "'--4/0-209'", "output": "''"}
{"old_id": "sample_506", "code": "def X(P):\n    A = ''\n    if P%2 == 1:\n        A+='sn'\n    else:\n        return P*P\n    for h in range(1, P+1):\n        if h%2 == 0:\n            A+='to'\n        else:\n            A+='ts'\n    return A\nassert X(1) == ", "input": "1", "output": "'snts'"}
{"old_id": "sample_507", "code": "def W(k, i):\n    K = k.lower()\n    return K.find(i.lower())\nassert W('car hat', 'car') == ", "input": "'car hat', 'car'", "output": "0"}
{"old_id": "sample_508", "code": "def R(y, K, c):\n    w = y.rsplit(K, c)\n    G = len(w)\n    f = w[:G // 2]\n    f.reverse()\n    f += w[G // 2:]\n    return K.join(f)\nassert R('ertubwi', 'p', 5) == ", "input": "'ertubwi', 'p', 5", "output": "'ertubwi'"}
{"old_id": "sample_509", "code": "def A(I, Q):\n    if I >= 0:\n        return str(I).zfill(Q)\n\n    if I < 0:\n        return '-' + str(-I).zfill(Q)\n    return ''\nassert A(5, 1) == ", "input": "5, 1", "output": "'5'"}
{"old_id": "sample_510", "code": "def b(d, A, N, K, m):\n    t = K\n    if t in d:\n        D = d.pop(t)\n    if A > 3:\n        return ''.join(N)\n    else:\n        return D\nassert b({7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0) == ", "input": "{7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0", "output": "'Wy'"}
{"old_id": "sample_511", "code": "def y(x, v):\n    W = dict((B, '') for B in x)\n    W.update(v)\n    return W\nassert y(('ct', 'c', 'ca'), {'ca': 'cx'}) == ", "input": "('ct', 'c', 'ca'), {'ca': 'cx'}", "output": "{'ct': '', 'c': '', 'ca': 'cx'}"}
{"old_id": "sample_512", "code": "def A(i):\n    return len(i) == i.count('0') + i.count('1')\nassert A('102') == ", "input": "'102'", "output": "False"}
{"old_id": "sample_513", "code": "def k(i):\n    while -1 in i:\n        i.pop(-3)\n    while 0 in i:\n        i.pop()\n    while 1 in i:\n        i.pop(0)\n    return i\nassert k([0, 2]) == ", "input": "[0, 2]", "output": "[]"}
{"old_id": "sample_514", "code": "def J(j):\n    for G in j.split():\n        j = j.replace('-{}'.format(G), ' ').replace('{}-'.format(G), ' ')\n    return j.strip('-')\nassert J('-stew---corn-and-beans-in soup-.-') == ", "input": "'-stew---corn-and-beans-in soup-.-'", "output": "'stew---corn-and-beans-in soup-.'"}
{"old_id": "sample_515", "code": "def b(f):\n    D = f.copy()\n    D.reverse()\n    D[:] = [O * 2 for O in D]\n    return D\nassert b([1, 2, 3, 4, 5]) == ", "input": "[1, 2, 3, 4, 5]", "output": "[10, 8, 6, 4, 2]"}
{"old_id": "sample_516", "code": "def Z(S, C):\n    list = [B for B in S if B.startswith(C)]\n    return sorted(list, key=len)\nassert Z(['condor', 'eyes', 'gay', 'isa' ], 'd') == ", "input": "['condor', 'eyes', 'gay', 'isa' ], 'd'", "output": "[]"}
{"old_id": "sample_517", "code": "def a(U):\n    for P in range(len(U)-1, 0, -1):\n        if not U[P].isupper():\n            return U[0:P]\n    return ''\nassert a('SzHjifnzog') == ", "input": "'SzHjifnzog'", "output": "'SzHjifnzo'"}
{"old_id": "sample_518", "code": "def N(c):\n    return not c.isdecimal()\nassert N('the speed is -36 miles per hour') == ", "input": "'the speed is -36 miles per hour'", "output": "True"}
{"old_id": "sample_519", "code": "def E(k):\n    k['luck'] = 42\n    k.clear()\n    return {1: False, 2 :0}\nassert E({}) == ", "input": "{}", "output": "{1: False, 2: 0}"}
{"old_id": "sample_520", "code": "def M(K):\n    while len(K) != 1:\n        K.append(K.pop(0))\n    return K[0]\nassert M([6]) == ", "input": "[6]", "output": "6"}
{"old_id": "sample_521", "code": "def B(T):\n    p = max(T)\n    for a in range(p):\n        T.reverse()\n    return T\nassert B([43, 0, 4, 77, 5, 2, 0, 9, 77]) == ", "input": "[43, 0, 4, 77, 5, 2, 0, 9, 77]", "output": "[77, 9, 0, 2, 5, 77, 4, 0, 43]"}
{"old_id": "sample_522", "code": "def W(k):\n    r = [q % 1 for q in k]\n    return r if 1 in r else []\nassert W(range(100, 120)) == ", "input": "range(100, 120)", "output": "[]"}
{"old_id": "sample_523", "code": "def W(P):\n    P = list(P)\n    for y in range(len(P)-1, -1, -1):\n        if P[y].isspace():\n            P[y] = '&nbsp;'\n    return ''.join(P)\nassert W('   ') == ", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'"}
{"old_id": "sample_524", "code": "def P(z):\n    V = z.copy()\n    for q in range(len(V)-1):\n        z[sorted(V)[q]] = q\n    return z\nassert P({2: 5, 4: 1, 3: 5, 1: 3, 5: 1}) == ", "input": "{2: 5, 4: 1, 3: 5, 1: 3, 5: 1}", "output": "{2: 1, 4: 3, 3: 2, 1: 0, 5: 1}"}
{"old_id": "sample_525", "code": "def h(y, S, R):\n    M = {}\n    o, u = 0, 0\n    for P, b in y.items():\n        M[b] = P\n        if b == S:\n            o = P\n        if b == R:\n            u = P\n    i = M[S]\n    return (i, u) if o > u else (u, i)\nassert h({'TEXT': 7, 'CODE': 3}, 7, 3) == ", "input": "{'TEXT': 7, 'CODE': 3}, 7, 3", "output": "('TEXT', 'CODE')"}
{"old_id": "sample_526", "code": "def f(B, Q, Z, index):\n    o = B.rindex(Q)\n    if o >= index:\n        return Z[:o - index + 1]\n    return B + Z[index - o - 1:]\nassert f('ekwies', 's', 'rpg', 1) == ", "input": "'ekwies', 's', 'rpg', 1", "output": "'rpg'"}
{"old_id": "sample_527", "code": "def G(W, d):\n    return W.ljust(len(d), \"?\")\nassert G(\"!?\", \"\") == ", "input": "\"!?\", \"\"", "output": "'!?'"}
{"old_id": "sample_528", "code": "def d(a):\n    c = ''\n    Z = ''\n    for n in a:\n        Z = Z + n\n        if a.rfind(Z) > -1:\n            return a.rfind(Z)\n    return 0\nassert d('papeluchis') == ", "input": "'papeluchis'", "output": "2"}
{"old_id": "sample_529", "code": "def h(T):\n    G = T[0]\n    v = T[:]\n    for I in range(1, len(T)):\n        if G != T[I]:\n            v[I] = T[I]\n        else:\n            del v[I]\n        G = T[I]\n    return v\nassert h([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_530", "code": "def X(u, n):\n    F = u\n    if n in u:\n        F = u.lstrip(n)\n        if len(F) == 0:\n            F = F + '!?'\n    else:\n        return 'no'\n    return F\nassert X(\"@@@ff\", '@') == ", "input": "\"@@@ff\", '@'", "output": "'ff'"}
{"old_id": "sample_531", "code": "def K(H, R):\n    if H.removeprefix(R) == H:\n        return K(H[1:], R)\n    else:\n        return H\nassert K(\"Ibaskdjgblw asdl \", \"djgblw\") == ", "input": "\"Ibaskdjgblw asdl \", \"djgblw\"", "output": "'djgblw asdl '"}
{"old_id": "sample_532", "code": "def q(C, f):\n    m = [f.copy()] \n    for X in range(C):\n        t = f.copy()\n        t.extend(m[-1])\n        m.append(t)\n    return m\nassert q(1, [1, 2, 3]) == ", "input": "1, [1, 2, 3]", "output": "[[1, 2, 3], [1, 2, 3, 1, 2, 3]]"}
{"old_id": "sample_533", "code": "def p(V, P):\n    W = 0\n    for (f, z) in P.items():\n        if f[0] == V and len(f) == 3:\n            W -= z\n        elif f[-1] == V and len(f) == 3:\n            W += z\n    return W\nassert p('a', {}) == ", "input": "'a', {}", "output": "0"}
{"old_id": "sample_534", "code": "def N(E, z):\n    a = max(E.index(z) - len(E) // 3, 0)\n    V = ''\n    for t, k in enumerate(E[a:]):\n        if k == '+':\n            V += z\n        else:\n            V += E[a + t]\n    return V\nassert N('hosu', 'o') == ", "input": "'hosu', 'o'", "output": "'hosu'"}
{"old_id": "sample_535", "code": "def u(K):\n    for K in str(K):\n        if K not in \"012\" and K not in list(range(5, 10)):\n            return False\n    return True\nassert u(1341240312) == ", "input": "1341240312", "output": "False"}
{"old_id": "sample_536", "code": "def N(i):\n    D = 0\n    for O in i:\n        if O.isdigit():\n            D += 1\n    return D\nassert N('C24Bxxx982ab') == ", "input": "'C24Bxxx982ab'", "output": "5"}
{"old_id": "sample_537", "code": "def q(u, z):\n    h = list(u)\n    try:\n        h.append(z)\n        r = len(h)\n    except IndexError:\n        r = 0\n    return '[' + str(r) + ']'\nassert q('abv', 'a') == ", "input": "'abv', 'a'", "output": "'[4]'"}
{"old_id": "sample_538", "code": "def B(p, R):\n    return p[:R].center(R, 'z')\nassert B('0574', 9) == ", "input": "'0574', 9", "output": "'zzz0574zz'"}
{"old_id": "sample_539", "code": "def K(j):\n    p = j\n    u = j\n\n    while True:\n        p.append('_')\n        if p == u:\n            u[p.index('_')] = ''\n            break\n        \n    return u\nassert K([]) == ", "input": "[]", "output": "['']"}
{"old_id": "sample_540", "code": "def k(Z):\n    R = Z.copy()\n    for W in range(0, len(Z) - 1, 2):\n        R.insert(W + 1, R[W])\n    R.append(R[0])\n    return R\nassert k([5, 5, 5, 6, 4, 9]) == ", "input": "[5, 5, 5, 6, 4, 9]", "output": "[5, 5, 5, 5, 5, 5, 6, 4, 9, 5]"}
{"old_id": "sample_541", "code": "def B(f):\n    return ''.join(list(f)).isspace()\nassert B(' \\t  \\u3000') == ", "input": "' \\t  \\u3000'", "output": "True"}
{"old_id": "sample_542", "code": "def E(n, d, p):\n    try:\n        return n.rsplit(d, p)\n    except:\n        return n.rsplit()\nassert E('ab cd', 'x', 2) == ", "input": "'ab cd', 'x', 2", "output": "['ab cd']"}
{"old_id": "sample_543", "code": "def d(L):\n    j = L.replace('. ', ' , ').replace('&#33; ', '! ').replace('. ', '? ').replace('. ', '. ')\n    return j[0].upper() + j[1:]\nassert d('.,,,,,. منبت') == ", "input": "'.,,,,,. منبت'", "output": "'.,,,,, , منبت'"}
{"old_id": "sample_544", "code": "def M(g):\n    Z = g.split('\\n')\n    t = []\n    for J in range(len(Z)):\n        y = Z[J].replace('\\t', '    ')\n        t.append(y)\n    return '\\n'.join(t)\nassert M(\"\\t\\t\\ttab tab tabulates\") == ", "input": "\"\\t\\t\\ttab tab tabulates\"", "output": "'            tab tab tabulates'"}
{"old_id": "sample_545", "code": "def U(P):\n    L = []\n    index = 0\n    while index < len(P):\n        L.append(P.pop())\n        index += 2\n    return L\nassert U([8, 8, -4, -9, 2, 8, -1, 8]) == ", "input": "[8, 8, -4, -9, 2, 8, -1, 8]", "output": "[8, -1, 8]"}
{"old_id": "sample_546", "code": "def L(V, u):\n    while V.startswith(u):\n        V = V[len(u):]\n    return V\nassert L('[CHARRUNNERS]Do you know who the other was? [NEGMENDS]', '[CHARRUNNERS]') == ", "input": "'[CHARRUNNERS]Do you know who the other was? [NEGMENDS]', '[CHARRUNNERS]'", "output": "'Do you know who the other was? [NEGMENDS]'"}
{"old_id": "sample_547", "code": "def g(H):\n    p = H.strip(\"., !?*\")\n    return \"....\".join(p.split(\" \"))\nassert g(\"h,e,l,l,o,wo,r,ld,\") == ", "input": "\"h,e,l,l,o,wo,r,ld,\"", "output": "'h,e,l,l,o,wo,r,ld'"}
{"old_id": "sample_548", "code": "def b(c, z):\n    if z and c and c.endswith(z):\n        return c.removesuffix(z)\n    else:\n        return c\nassert b('spider', 'ed') == ", "input": "'spider', 'ed'", "output": "'spider'"}
{"old_id": "sample_549", "code": "def C(A):\n    A.reverse()\n    x = []\n    for g in A:\n        max(g)\n        g.sort(reverse = True)\n        x.append(g)\n    return x\nassert C([[1, 1, 1, 1]]) == ", "input": "[[1, 1, 1, 1]]", "output": "[[1, 1, 1, 1]]"}
{"old_id": "sample_550", "code": "def d(X):\n    for i in range(len(X)):\n        X.insert(i, X[i]**2)\n    return X\nassert d([1, 2, 4]) == ", "input": "[1, 2, 4]", "output": "[1, 1, 1, 1, 2, 4]"}
{"old_id": "sample_551", "code": "def W(t):\n    I = []\n    for e in t:\n        for Y in t[e]:\n            if Y not in I:\n                I.append(Y)\n    return sorted(I)\nassert W({'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}) == ", "input": "{'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}", "output": "['a', 'b', 'c', 'inf']"}
{"old_id": "sample_552", "code": "def g(J):\n    k = {}\n    for c, M in J.items():\n        if isinstance(c, float):\n            for G in M:\n                k[G] = c\n        else:\n            k[c] = M\n    return k\nassert g({2: 0.76, 5: [3, 6, 9, 12]}) == ", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}"}
{"old_id": "sample_553", "code": "def Z(s, count):\n    for H in range(count):\n        s = s[::-1]\n    return s\nassert Z('439m2670hlsw', 3) == ", "input": "'439m2670hlsw', 3", "output": "'wslh0762m934'"}
{"old_id": "sample_554", "code": "def v(W):\n    return list(reversed(W))\nassert v([2, 0, 1, 9999, 3, -5]) == ", "input": "[2, 0, 1, 9999, 3, -5]", "output": "[-5, 3, 9999, 1, 0, 2]"}
{"old_id": "sample_555", "code": "def f(i, w):\n    i = i.replace('\\n', '_____')\n    i = i.replace('\\t', w * ' ')\n    i = i.replace('_____', '\\n')\n    return i\nassert f(\"odes\\tcode\\twell\", 2) == ", "input": "\"odes\\tcode\\twell\", 2", "output": "'odes  code  well'"}
{"old_id": "sample_556", "code": "def S(f):\n    for M in range(len(f)):\n        if f[M] == ' ':\n            f = f.replace(' ', '\\t', 1)\n    return f.expandtabs(4)\nassert S('\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te') == ", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'"}
{"old_id": "sample_557", "code": "def K(str):\n    r = str.rpartition('ar')\n    return ' '.join((r[0], r[1], r[2]))\nassert K('xxxarmmarxx') == ", "input": "'xxxarmmarxx'", "output": "'xxxarmm ar xx'"}
{"old_id": "sample_558", "code": "def W(r, w):\n    for X in w:\n        r.pop(r.index(X))\n    r.sort()\n    for X in w:\n        r += [X]\n    for u in range(len(r)-1):\n        if r[u] > r[u+1]:\n            return False\n    return True\nassert W([3, 1, 2, 1, 4, 1], [1]) == ", "input": "[3, 1, 2, 1, 4, 1], [1]", "output": "False"}
{"old_id": "sample_559", "code": "def k(D):\n    D = str(D)\n    return D[0] + '.'+D[1:].replace('-', '_')\nassert k(\"first-second-third\") == ", "input": "\"first-second-third\"", "output": "'f.irst_second_third'"}
{"old_id": "sample_560", "code": "def u(r):\n    M = 0\n    if r.islower():\n        for y in r:\n            if int(y) in list(range(90)):\n                M+=1\n    return M\nassert u(\"591237865\") == ", "input": "\"591237865\"", "output": "0"}
{"old_id": "sample_561", "code": "def i(D, x):\n    #E B c? e count d x\n    count = D.count(x)\n    return int(x) * count\nassert i('7Ljnw4Lj', '7') == ", "input": "'7Ljnw4Lj', '7'", "output": "7"}
{"old_id": "sample_562", "code": "def d(V):\n    return V.upper() == str(V)\nassert d('VTBAEPJSLGAHINS') == ", "input": "'VTBAEPJSLGAHINS'", "output": "True"}
{"old_id": "sample_563", "code": "def i(D, w):\n    z = []\n    for d in range(len(w)):\n        z.append(D.count(w[d]))\n    return sum(z)\nassert i('jivespdcxc', 'sx') == ", "input": "'jivespdcxc', 'sx'", "output": "2"}
{"old_id": "sample_564", "code": "def M(c):\n    c[1].clear()\n    c[2] += c[1]\n    return c[0]\nassert M([[395, 666, 7, 4], [], [4223, 111]]) == ", "input": "[[395, 666, 7, 4], [], [4223, 111]]", "output": "[395, 666, 7, 4]"}
{"old_id": "sample_565", "code": "def K(Y):\n    return max(Y.find(f) for f in 'aeiou')\nassert K(\"qsqgijwmmhbchoj\") == ", "input": "\"qsqgijwmmhbchoj\"", "output": "13"}
{"old_id": "sample_567", "code": "def G(q, j):\n    H = q.rsplit()\n    m = []\n    while len(H) >= j:\n        m += H[-j:]\n        H = H[:-j]\n    return H + ['_'.join(m)]\nassert G('one two three four five', 3) == ", "input": "'one two three four five', 3", "output": "['one', 'two', 'three_four_five']"}
{"old_id": "sample_568", "code": "def x(p):\n    Z = 1\n    for s in '1234567890':\n        p = p.replace(s,'')\n        if len(p) == 0: break\n        p = p[Z:] + p[:Z]\n        Z += 1\n    return p\nassert x('bwmm7h') == ", "input": "'bwmm7h'", "output": "'mhbwm'"}
{"old_id": "sample_569", "code": "def C(Y):\n    G = {}\n    for X in Y:\n        if X in G:\n            G[X] += 1\n        else:\n            G[X] = 1\n    return sum(G.values())\nassert C(\"11 1 1\") == ", "input": "\"11 1 1\"", "output": "6"}
{"old_id": "sample_570", "code": "def Q(l, index, O):\n    l.insert(0, index + 1)\n    if O >= 1:\n        l.insert(index, O)\n    return l\nassert Q([2], 0, 2) == ", "input": "[2], 0, 2", "output": "[2, 1, 2]"}
{"old_id": "sample_572", "code": "def n(F, k):\n    E = {}\n    D = list(F.items())\n    for b in range(len(D) - 1, k - 1, -1):\n        E[D[b]] = None\n    return D[k:] + list(E.items())\nassert n({1: 9, 2: 10, 3: 1}, 1) == ", "input": "{1: 9, 2: 10, 3: 1}, 1", "output": "[(2, 10), (3, 1), ((3, 1), None), ((2, 10), None)]"}
{"old_id": "sample_573", "code": "def m(d, I):\n    if d.startswith(I):\n        return d.removeprefix(I)\n    return d\nassert m(\"Vipra\", \"via\") == ", "input": "\"Vipra\", \"via\"", "output": "'Vipra'"}
{"old_id": "sample_574", "code": "def b(x):\n    while x:\n        pop = x.pop()\n        if pop == pop.title():\n            return pop\n    return pop\nassert b(['George', 'Michael', 'George', 'Costanza']) == ", "input": "['George', 'Michael', 'George', 'Costanza']", "output": "'Costanza'"}
{"old_id": "sample_575", "code": "def K(x, n):\n    Q = []\n    [Q.extend([H] * n) for H in x]\n    return sum(Q)\nassert K([10, 4], 3) == ", "input": "[10, 4], 3", "output": "42"}
{"old_id": "sample_576", "code": "def x(U, w):\n    q = ['x']\n    for j in range(1, len(U) + 1):\n        if j % 2 != 0:\n            q.append(U[j - 1] * -2)\n        else:\n            q.append(w)\n    return q\nassert x([1, 2, 3], -1) == ", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]"}
{"old_id": "sample_577", "code": "def A(items):\n    a = []\n    for h in items:\n        H = dict(items).copy()\n        H.popitem()\n        a.append(H)\n        items = H\n    return a\nassert A([(1, 'pos')]) == ", "input": "[(1, 'pos')]", "output": "[{}]"}
{"old_id": "sample_578", "code": "def l(A):\n    for F, O in A.items():\n        if O >= 0:\n            A[F] = -O\n    return A\nassert l({'R': 0, 'T': 3, 'F': -6, 'K': 0}) == ", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}"}
{"old_id": "sample_579", "code": "def q(G):\n    if G.istitle():\n        if len(G) > 1 and G.lower() != G:\n            return G[0].lower() + G[1:]\n    elif G.isalpha():\n        return G.capitalize()\n    return G\nassert q('') == ", "input": "''", "output": "''"}
{"old_id": "sample_580", "code": "def p(Z, z):\n    q = Z\n    w = []\n    while z in q:\n        w.append(q.index(z))\n        q = q.replace(z,\"\",1)\n    return w\nassert p('rvr', 'r') == ", "input": "'rvr', 'r'", "output": "[0, 1]"}
{"old_id": "sample_581", "code": "def c(i, d):\n    t = len(i)\n    T = list(i)\n    d = list(d)\n    for V in range(len(d)):\n        T.insert((V * t - 1) // 2 + (V + 1) // 2, d[V])\n    return ''.join(T)\nassert c('akoon', 'sXo') == ", "input": "'akoon', 'sXo'", "output": "'akoXoosn'"}
{"old_id": "sample_582", "code": "def j(b, l):\n    D = []\n    for o in range(b):\n        D.append(l)\n    return D\nassert j(7, 5) == ", "input": "7, 5", "output": "[5, 5, 5, 5, 5, 5, 5]"}
{"old_id": "sample_583", "code": "def Z(n, F):\n    e = []\n    for v in n.splitlines():\n        if len(v) > 0 and v[0] == F:\n            e.append(v.lower())\n        else:\n            e.append(v.upper())\n    return \"\\n\".join(e)\nassert Z(\"t\\nza\\na\", \"t\") == ", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'"}
{"old_id": "sample_584", "code": "def t(g):\n    return g.format(*('0'*20,))\nassert t(\"5123807309875480094949830\") == ", "input": "\"5123807309875480094949830\"", "output": "'5123807309875480094949830'"}
{"old_id": "sample_585", "code": "def W(M):\n    count = M.count(M[0])\n    f = list(M)\n    for l in range(count):\n        f.remove(f[0])\n    return ''.join(f)\nassert W(';,,,?') == ", "input": "';,,,?'", "output": "',,,?'"}
{"old_id": "sample_586", "code": "def T(e, C):\n    return e.rindex(C)\nassert T(\"breakfast\", \"e\") == ", "input": "\"breakfast\", \"e\"", "output": "2"}
{"old_id": "sample_587", "code": "def c(z, W):\n    a = dict.fromkeys(z, W)\n    return a\nassert c([0, 1, 1, 2], 'abcca') == ", "input": "[0, 1, 1, 2], 'abcca'", "output": "{0: 'abcca', 1: 'abcca', 2: 'abcca'}"}
{"old_id": "sample_588", "code": "def Z(items, i):\n    if i in items:\n        return items.index(i)\n    return -1\nassert Z(['''1''', '+', '-', '**', '//', '*', '+'], '**') == ", "input": "['''1''', '+', '-', '**', '//', '*', '+'], '**'", "output": "3"}
{"old_id": "sample_589", "code": "def P(r):\n    r.append(r[-1])\n    return r\nassert P([-70, 20, 9, 1]) == ", "input": "[-70, 20, 9, 1]", "output": "[-70, 20, 9, 1, 1]"}
{"old_id": "sample_590", "code": "def t(X):\n    for b in range(10, 0, -1):\n        X = X.lstrip(str(b))\n    return X\nassert t(\"25000   $\") == ", "input": "\"25000   $\"", "output": "'5000   $'"}
{"old_id": "sample_591", "code": "def c(Z): \n    R = [0] * 9 \n    r = [] \n    for e in Z: R[e - 1] += 1 \n    for s in range(len(R)): \n        while R[s] > 0: \n            R[s] -= 1 \n            r.append(s + 1)\n    return R, r\nassert c([6, 3, 0, 7, 4, 8]) == ", "input": "[6, 3, 0, 7, 4, 8]", "output": "([0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 6, 7, 8, 9])"}
{"old_id": "sample_592", "code": "def g(H):\n    a = []\n    for w, B in enumerate(H):\n        a.append(H[len(H)-1-w])\n    return a\nassert g([11, 3]) == ", "input": "[11, 3]", "output": "[3, 11]"}
{"old_id": "sample_593", "code": "def r(O, E):\n    o = len(O) - 1\n    for K in range(-len(O), 0):\n        O.insert(o, O[K])\n    return O\nassert r([], 14) == ", "input": "[], 14", "output": "[]"}
{"old_id": "sample_594", "code": "def k(U):\n    return U.index('\\n')\nassert k(\"n wez szize lnson tilebi it 504n.\\n\") == ", "input": "\"n wez szize lnson tilebi it 504n.\\n\"", "output": "33"}
{"old_id": "sample_595", "code": "def z(n, h):\n    if n.startswith(h):\n        n = n.removeprefix(h)\n    n = n.capitalize()\n    return n\nassert z('qdhstudentamxupuihbuztn', 'jdm') == ", "input": "'qdhstudentamxupuihbuztn', 'jdm'", "output": "'Qdhstudentamxupuihbuztn'"}
{"old_id": "sample_596", "code": "def G(y, W):\n    y = sorted(y)\n    if y.index(W) % 2 == 0:\n        return y[::-1]\n    return y\nassert G(['8', '9', '7', '4', '3', '2'], '9') == ", "input": "['8', '9', '7', '4', '3', '2'], '9'", "output": "['2', '3', '4', '7', '8', '9']"}
{"old_id": "sample_597", "code": "def K(F):\n    return F.upper()\nassert K(\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\") == ", "input": "\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\"", "output": "'JAAFODSFA SODOFJ AOAFJIS  JAFASIDFSA1'"}
{"old_id": "sample_598", "code": "def a(x, d):\n    N = len(x)\n    return x[N*(d%4):N ]\nassert a('abc', 1) == ", "input": "'abc', 1", "output": "''"}
{"old_id": "sample_599", "code": "def t(a, d):\n    a = d.join(a)\n    O = []\n    for N in range(1, len(a)+1, 2):\n        O.append(a[N-1:][:N])\n        O.append(a[N-1:][N:])\n    return O\nassert t([\"a\", \"b\", \"c\"], \" \") == ", "input": "[\"a\", \"b\", \"c\"], \" \"", "output": "['a', ' b c', 'b c', '', 'c', '']"}
{"old_id": "sample_600", "code": "def I(n):\n    v = list(map(lambda T: 'n'*T, n))\n    y = []\n    for O in v:\n        y.append(O)\n    return y\nassert I([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_601", "code": "def C(u):\n    A = 5\n    B = []\n    for U in u:\n        if U.lower() in 'aeiouy':\n            B.append(U.upper() * A)\n        else:\n            B.append(U * A)\n    return ' '.join(B)\nassert C('csharp') == ", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'"}
{"old_id": "sample_602", "code": "def z(w, f):\n    x = w.count(f)\n    return x * 2\nassert z([1, 1], 1) == ", "input": "[1, 1], 1", "output": "4"}
{"old_id": "sample_603", "code": "def k(h):\n    if all([O.isdecimal() for O in h.split('.')]):\n        return 'oscillating' \n    else:\n        return 'not oscillating'\nassert k('not numbers') == ", "input": "'not numbers'", "output": "'not oscillating'"}
{"old_id": "sample_604", "code": "def D(E, q):\n    return E.startswith(q)\nassert D(\"Hello world\", \"Hello\") == ", "input": "\"Hello world\", \"Hello\"", "output": "True"}
{"old_id": "sample_605", "code": "def V(Z):\n    Z.clear()\n    return \"quack\"\nassert V([2, 5, 1, 7, 9, 3]) == ", "input": "[2, 5, 1, 7, 9, 3]", "output": "'quack'"}
{"old_id": "sample_606", "code": "def H(D):\n    C = list(D)\n    C.append('NHIB')\n    return ''.join(C)\nassert H('ruam') == ", "input": "'ruam'", "output": "'ruamNHIB'"}
{"old_id": "sample_607", "code": "def s(l):\n    for x in ['.', '!', '?']:\n        if l.endswith(x):\n            return True\n    return False\nassert s('. C.') == ", "input": "'. C.'", "output": "True"}
{"old_id": "sample_608", "code": "def q(J):\n    # T x keys and values z g S dict\n    return dict([P for P in J.items()])\nassert q({1:1, 2:2, 3:3}) == ", "input": "{1:1, 2:2, 3:3}", "output": "{1: 1, 2: 2, 3: 3}"}
{"old_id": "sample_609", "code": "def c(D, L):\n    f = D.copy()\n    while f:\n        U, b = f.popitem()\n        if L == U or L == b:\n            f.update(D)\n        del f[U]\n    return f\nassert c({}, 1) == ", "input": "{}, 1", "output": "{}"}
{"old_id": "sample_610", "code": "def h(keys, E):\n    B = dict.fromkeys(keys, E)\n    for S, L in enumerate(B.copy(), 1):\n        if B[L] == B[S]:\n            del B[S]\n    return B\nassert h([1, 2, 1, 1], 3) == ", "input": "[1, 2, 1, 1], 3", "output": "{}"}
{"old_id": "sample_611", "code": "def M(z):\n    z[:] = z[::-1]\n    return z\nassert M([-6, -2, 1, -3, 0, 1]) == ", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[1, 0, -3, 1, -2, -6]"}
{"old_id": "sample_612", "code": "def I(t):\n    return dict(t.items())\nassert I({'a': 42, 'b': 1337, 'c': -1, 'd': 5}) == ", "input": "{'a': 42, 'b': 1337, 'c': -1, 'd': 5}", "output": "{'a': 42, 'b': 1337, 'c': -1, 'd': 5}"}
{"old_id": "sample_613", "code": "def Q(j):\n    a = ''\n    Y = (len(j) - 1) // 2\n    for k in range(Y):\n        a += j[k]\n    for k in range(Y, len(j)-1):\n        a += j[Y + len(j) - 1 - k]\n    return a.ljust(len(j), j[-1])\nassert Q('eat!') == ", "input": "'eat!'", "output": "'e!t!'"}
{"old_id": "sample_614", "code": "def I(J, D, c):\n    y = 0\n    while True:\n        A = J.rfind(D)\n        if A == -1:\n            break\n        elif y == c:\n            return A\n        else:\n            y += 1\n            J = J[:A]\n    return -1\nassert I('zjegiymjc', 'j', 2) == ", "input": "'zjegiymjc', 'j', 2", "output": "-1"}
{"old_id": "sample_615", "code": "def E(P, q):\n    P.append(q)\n    return P.index(max(P[:-1]))\nassert E([-1, 12, -6, -2], -1) == ", "input": "[-1, 12, -6, -2], -1", "output": "1"}
{"old_id": "sample_616", "code": "def h(d):\n    B = list(d)\n    J = 0\n    for b in range(0, len(B) - 1):\n        if B[b - 2 if b - 2 >= 0 else 0] == '\\t':\n            J += (1 + B[b - 1].count('\\t')) * 3\n        B[b] = '[' + B[b] + ']'\n    return ''.join(B).expandtabs(4 + J)\nassert h('\\n\\ny\\n') == ", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'"}
{"old_id": "sample_617", "code": "def L(N):\n    if N.isascii():\n        return 'ascii'\n    else:\n        return 'non ascii'\nassert L(\"<<<<\") == ", "input": "\"<<<<\"", "output": "'ascii'"}
{"old_id": "sample_618", "code": "def a(H, t, Y):\n    return t[:Y] + H\nassert a('9', '8', 2) == ", "input": "'9', '8', 2", "output": "'89'"}
{"old_id": "sample_619", "code": "def W(title):\n    return title.lower()\nassert W('   Rock   Paper   SCISSORS  ') == ", "input": "'   Rock   Paper   SCISSORS  '", "output": "'   rock   paper   scissors  '"}
{"old_id": "sample_620", "code": "def G(b):\n    return \" \".join(list(b)[::-1])\nassert G(\"lert dna ndqmxohi3\") == ", "input": "\"lert dna ndqmxohi3\"", "output": "'3 i h o x m q d n   a n d   t r e l'"}
{"old_id": "sample_621", "code": "def U(F, w):\n    try:\n        return F.encode(w)\n    except LookupError:\n        return str(LookupError)\nassert U('13:45:56', 'shift_jis') == ", "input": "'13:45:56', 'shift_jis'", "output": "b'13:45:56'"}
{"old_id": "sample_622", "code": "def O(V):\n    A, y, G = V.rpartition('.')\n    E = y.join([G, A])\n    v, y, v = E.rpartition('.')\n    return E.replace(y, ', ')\nassert O('galgu') == ", "input": "'galgu'", "output": "', g, a, l, g, u, '"}
{"old_id": "sample_623", "code": "def B(l, x):\n    for n in x:\n        if n == '@':\n            l = l[::-1]\n        elif n == '~':\n            l = l.upper()\n        elif l and l[len(l)-1] == n:\n            l = l[0:len(l)-1]\n    return l\nassert B('hi~!', ['~', '`', '!', '&']) == ", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'"}
{"old_id": "sample_624", "code": "def x(U, w):\n    A = U.find(w)\n    Q = []\n    if A > 0:\n        Q = list(U[:A])\n    Q.extend(list(w)+list(U[A+len(w):]))\n    return ''.join(Q)\nassert x('llomnrpc', 'x') == ", "input": "'llomnrpc', 'x'", "output": "'xllomnrpc'"}
{"old_id": "sample_625", "code": "def f(w):\n    count = 0\n    for v in w:\n        if v in '.?!.,':\n            count += 1\n    return count\nassert f(\"bwiajegrwjd??djoda,?\") == ", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4"}
{"old_id": "sample_626", "code": "def y(a, i):\n    Z = {\n        C[0]: C[1] for C in i\n    }\n    return a.translate(str.maketrans(Z))\nassert y('abab', [('a', 'b'), ('b', 'a')]) == ", "input": "'abab', [('a', 'b'), ('b', 'a')]", "output": "'baba'"}
{"old_id": "sample_627", "code": "def p(B):\n    return list(dict(B).values())\nassert p([('u', 1), ('s', 7), ('u', -5)]) == ", "input": "[('u', 1), ('s', 7), ('u', -5)]", "output": "[-5, 7]"}
{"old_id": "sample_628", "code": "def D(M, v):\n    M.remove(v)\n    return M\nassert D([4, 5, 3, 6, 1], 5) == ", "input": "[4, 5, 3, 6, 1], 5", "output": "[4, 3, 6, 1]"}
{"old_id": "sample_629", "code": "def P(h, t):\n    if t not in h:\n        return h\n    if h[-len(t):] == t:\n        return h[:-len(t)]\n    return h[:-1] + P(h[:-2], t)\nassert P('catNG', 'NG') == ", "input": "'catNG', 'NG'", "output": "'cat'"}
{"old_id": "sample_630", "code": "def a(l, j):\n    C = dict(l)\n    for E, e in j.items():\n        C[e] = E\n    return C\nassert a({1: -9, 0: -7}, {1: 2, 0: 3}) == ", "input": "{1: -9, 0: -7}, {1: 2, 0: 3}", "output": "{1: -9, 0: -7, 2: 1, 3: 0}"}
{"old_id": "sample_631", "code": "def B(x, j):\n    O = j - len(x)\n    x = x.center(j, '*')\n    return x[:O // 2: -O // 2]\nassert B('a', 19) == ", "input": "'a', 19", "output": "'*'"}
{"old_id": "sample_632", "code": "def v(list):\n    for e in range(len(list) - 1, 0, -1):\n        for Z in range(e):\n            if list[Z] > list[Z + 1]:\n                list[Z], list[Z + 1] = list[Z + 1], list[Z]\n                list.sort()\n    return list\nassert v([63, 0, 1, 5, 9, 87, 0, 7, 25, 4]) == ", "input": "[63, 0, 1, 5, 9, 87, 0, 7, 25, 4]", "output": "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]"}
{"old_id": "sample_633", "code": "def k(r, N):\n    r.reverse()\n    try:\n        o = r.index(N)\n    finally:\n        r.reverse()\n    return o\nassert k([5, -3, 3, 2], 2) == ", "input": "[5, -3, 3, 2], 2", "output": "0"}
{"old_id": "sample_634", "code": "def b(R):\n    G = str.maketrans('aioe', 'ioua')\n    while 'a' in R or 'A' in R:\n        R = R.translate(G)\n    return R\nassert b('biec') == ", "input": "'biec'", "output": "'biec'"}
{"old_id": "sample_635", "code": "def G(H):\n    J = ['-', '_', '+', '.', '/', ' ']\n    H = H.upper()\n    for y in H:\n        if y.isalnum() == False and y not in J:\n            return False\n    return True\nassert G(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\") == ", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False"}
{"old_id": "sample_636", "code": "def f(q):\n    r = {}\n    while len(q) > 0:\n        r = {**r, **q}\n        del q[max(q.keys())]\n    return r\nassert f({ 3: 'A3', 1: 'A1', 2: 'A2' }) == ", "input": "{ 3: 'A3', 1: 'A1', 2: 'A2' }", "output": "{3: 'A3', 1: 'A1', 2: 'A2'}"}
{"old_id": "sample_637", "code": "def V(F):\n    F = F.split(' ')\n    for W in F:\n        if not W.isnumeric():\n            return 'no'\n    return 'yes'\nassert V('03625163633 d') == ", "input": "'03625163633 d'", "output": "'no'"}
{"old_id": "sample_638", "code": "def F(S, g):\n    if not g:\n        return S\n    while S.endswith(g):\n        S = S[:-len(g)]\n    return S\nassert F('ababa', 'ab') == ", "input": "'ababa', 'ab'", "output": "'ababa'"}
{"old_id": "sample_639", "code": "def v(q, V):\n    O = \"\"\n    c = 0\n    while q[c] == V[c] and c < len(V) and c < len(q):\n        if q[c] == V[c]:\n            O += \"yes \"\n        else:\n            O += \"no \"\n        c += 1\n    return O\nassert v(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\") == ", "input": "\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"", "output": "'yes '"}
{"old_id": "sample_640", "code": "def B(k):\n    c = 0\n    if k[0] in k[1:]:\n        c += 1\n    for I in range(0, len(k)-1):\n        if k[I] in k[I+1:]:\n            c += 1\n    return c\nassert B(\"3eeeeeeoopppppppw14film3oee3\") == ", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18"}
{"old_id": "sample_641", "code": "def u(T):\n    return True if T.isdecimal() else False\nassert u('dummy33;d') == ", "input": "'dummy33;d'", "output": "False"}
{"old_id": "sample_642", "code": "def u(F):\n    W = 0\n    while W < len(F) and F[W].isspace():\n        W+=1\n    if W == len(F):\n        return 'space'\n    return 'no'\nassert u(\"     \") == ", "input": "\"     \"", "output": "'space'"}
{"old_id": "sample_643", "code": "def p(W, m):\n    if W.endswith(m):\n        W = W[:-1] + W[-1:].swapcase()\n    return W\nassert p('damdrodm', 'm') == ", "input": "'damdrodm', 'm'", "output": "'damdrodM'"}
{"old_id": "sample_644", "code": "def Z(B, p):\n    R = slice(None)\n    if p % 2:\n        R = slice(None, -1)\n    B[R].reverse()\n    return B\nassert Z([6, 1], 3) == ", "input": "[6, 1], 3", "output": "[6, 1]"}
{"old_id": "sample_645", "code": "def v(h, F):\n    if h.count(0):\n        return 0\n    elif h.count(F) < 3:\n        return 1\n    else:\n        return h.index(F)\nassert v([1, 1, 1, 2], 3) == ", "input": "[1, 1, 1, 2], 3", "output": "1"}
{"old_id": "sample_646", "code": "def P(W, count):\n    for n in range(count):\n        W = ''.join(reversed(W))\n    return W\nassert P('aBc, ,SzY', 2) == ", "input": "'aBc, ,SzY', 2", "output": "'aBc, ,SzY'"}
{"old_id": "sample_647", "code": "def F(S, a):\n    return S.splitlines(a)\nassert F('/alcm@ an)t//eprw)/e!/d\\nujv', 0) == ", "input": "'/alcm@ an)t//eprw)/e!/d\\nujv', 0", "output": "['/alcm@ an)t//eprw)/e!/d', 'ujv']"}
{"old_id": "sample_648", "code": "def q(y, j):\n    L = y[:]\n    while len(L) > 0:\n        if L[-1] in j:\n            L.pop()\n        else:\n            return L[-1]\n    return 'missing'\nassert q([0, 4, 5, 6], [13, 23, -5, 0]) == ", "input": "[0, 4, 5, 6], [13, 23, -5, 0]", "output": "6"}
{"old_id": "sample_649", "code": "def J(g, w):\n    return '\\n'.join([\n    \to.expandtabs(w)\n        for o in g.split('\\n')\n    ])\nassert J(\"\\tf9\\n\\tldf9\\n\\tadf9!\\n\\tf9?\", 1) == ", "input": "\"\\tf9\\n\\tldf9\\n\\tadf9!\\n\\tf9?\", 1", "output": "' f9\\n ldf9\\n adf9!\\n f9?'"}
{"old_id": "sample_650", "code": "def T(H, W):\n    while H.startswith(W):\n        H = H[len(W):len(H)]\n    return H\nassert T('', 'A') == ", "input": "'', 'A'", "output": "''"}
{"old_id": "sample_651", "code": "def z(E, V):\n    if V.islower(): V = V.upper()\n    E = ''.join([V if i == V.lower() else i for i in E])\n    return E.capitalize()\nassert z('E wrestled evil until upperfeat', 'e') == ", "input": "'E wrestled evil until upperfeat', 'e'", "output": "'E wrestled evil until upperfeat'"}
{"old_id": "sample_652", "code": "def K(S):\n    if not S or not S[0].isnumeric:\n        return 'INVALID'\n    O = 0\n    for f in range(len(S)):\n        O = O * 10 + int(S[f])\n    return str(O)\nassert K('3') == ", "input": "'3'", "output": "'3'"}
{"old_id": "sample_653", "code": "def r(L, B):\n    t = L\n    for v in L:\n        t = t.replace(v, \"\")\n    return len(t.split(B))\nassert r(\"c, c, c ,c, c\", \"c\") == ", "input": "\"c, c, c ,c, c\", \"c\"", "output": "1"}
{"old_id": "sample_654", "code": "def i(m, x, G):\n    w = m.maketrans(x, G)\n    return m.translate(w)\nassert i('aphid', 'i', '?') == ", "input": "'aphid', 'i', '?'", "output": "'aph?d'"}
{"old_id": "sample_655", "code": "def h(c):\n    return c.replace('a', '').replace('r', '')\nassert h('rpaar') == ", "input": "'rpaar'", "output": "'p'"}
{"old_id": "sample_656", "code": "def S(X):\n    Z = [] \n    for V in range(len(X)):\n        if X[V] in Z:\n            return 'no'\n        Z.append(X[V]) \n    return 'yes'\nassert S(['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']) == ", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'"}
{"old_id": "sample_657", "code": "def t(V):\n    for H in '!.?,:;':\n        if V.count(H) > 1:\n            return 'no'\n        if V.endswith(H):\n            return 'no'\n    return V.title()\nassert t(\"djhasghasgdha\") == ", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'"}
{"old_id": "sample_658", "code": "def i(j, K):\n    R = []\n    for F in K:\n        R.append(j.get(F))\n    return R\nassert i({3: \"swims like a bull\"}, [3, 2, 'c', True, 5]) == ", "input": "{3: \"swims like a bull\"}, [3, 2, 'c', True, 5]", "output": "['swims like a bull', None, None, None, None]"}
{"old_id": "sample_659", "code": "def M(z):\n    f = []\n    for C in z:\n        if not C.isupper():\n            f.append(C[:2] + C[-3:])\n    return len(f)\nassert M(['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']) == ", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4"}
{"old_id": "sample_660", "code": "def N(P):\n    h = [1]\n    U = h\n    for R in range(P):\n        U = [1] + [K+Y for K, Y in zip(U, U[1:])]\n        h.append(U[-1])\n    return sum(h)\nassert N(3) == ", "input": "3", "output": "4"}
{"old_id": "sample_661", "code": "def c(i, Y):\n    return ''.join(i.split()[-Y:])\nassert c('elrts,SS ee', 6) == ", "input": "'elrts,SS ee', 6", "output": "'elrts,SSee'"}
{"old_id": "sample_662", "code": "def R(values):\n    t = ['Pete', 'Linda', 'Angela']\n    t.extend(values)\n    t.sort()\n    return t\nassert R(['Dan', 'Joe', 'Dusty']) == ", "input": "['Dan', 'Joe', 'Dusty']", "output": "['Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete']"}
{"old_id": "sample_663", "code": "def O(a, q):\n    if not q in a:\n        return a\n    w = a[:a.index(q)].copy()\n    p = a[a.index(q) + 1:].copy()\n    return w + p\nassert O([], 2) == ", "input": "[], 2", "output": "[]"}
{"old_id": "sample_664", "code": "def G(T):\n    n = \"\"\n    for I in T:\n        n += I + \" \"\n    return n\nassert G({\"3\":\"3\",\"4\":\"5\"}) == ", "input": "{\"3\":\"3\",\"4\":\"5\"}", "output": "'3 4 '"}
{"old_id": "sample_665", "code": "def a(G):\n    r = \"\"\n    for M in G:\n        if G.count(M) % 2 == 0:\n            r += M.upper()\n        else:\n            r += M\n    return r\nassert a(\"acbced\") == ", "input": "\"acbced\"", "output": "'aCbCed'"}
{"old_id": "sample_666", "code": "def g(R, H):\n    p = 0\n    for s in R:\n        if V := len(R[s])+len(H.get(s, [])):\n            if V > p:\n                p = V\n    return p\nassert g({ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }) == ", "input": "{ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }", "output": "4"}
{"old_id": "sample_668", "code": "def t(C):\n    return C[-1] + C[:-1]\nassert t('hellomyfriendear') == ", "input": "'hellomyfriendear'", "output": "'rhellomyfriendea'"}
{"old_id": "sample_669", "code": "def F(u):\n    w, l, Q = u.rpartition('-')\n    if len(Q) == len(w):\n        return 'imbalanced'\n    return w + Q.replace(l, '')\nassert F(\"fubarbaz\") == ", "input": "\"fubarbaz\"", "output": "'fubarbaz'"}
{"old_id": "sample_670", "code": "def p(z, e):\n    w = dict(zip(z, e))\n    z.sort(key=w.get, reverse=True)\n    return [w.pop(c) for c in z]\nassert p(['12','ab'], [2,2]) == ", "input": "['12','ab'], [2,2]", "output": "[2, 2]"}
{"old_id": "sample_671", "code": "def u(o, y, d):\n    W = []\n    w = []\n    for t in range(len(y)):\n        W.append(y[t])\n        w.append(d[t])\n    J = o.maketrans(dict(zip(W, w)))\n    return o.translate(J)\nassert u(\"ewriyat emf rwto segya\", \"tey\", \"dgo\") == ", "input": "\"ewriyat emf rwto segya\", \"tey\", \"dgo\"", "output": "'gwrioad gmf rwdo sggoa'"}
{"old_id": "sample_672", "code": "def O(d, q, p):\n    P = len(d)\n    index = (q % (P + 2)) - 1\n    if index >= P or index < 0:\n        return d\n    d[index] = p\n    return ''.join(d)\nassert O(\"1zd\", 0, 'm') == ", "input": "\"1zd\", 0, 'm'", "output": "'1zd'"}
{"old_id": "sample_673", "code": "def A(h):\n    if h.isupper():\n        return h.lower()\n    elif h.islower():\n        return h.upper()\n    return h\nassert A(\"cA\") == ", "input": "\"cA\"", "output": "'cA'"}
{"old_id": "sample_674", "code": "def i(M):\n    m = list(M)\n    for T in range(len(m)-1, -1, -1):\n        if len(m) <= 1: break\n        if m[T] not in 'zyxwvutsrqponmlkjihgfedcba': m.pop(m[T])\n    return ''.join(m)\nassert i('qq') == ", "input": "'qq'", "output": "'qq'"}
{"old_id": "sample_675", "code": "def m(h, O):\n    h.sort()\n    return h[:O]\nassert m([1, 2, 2, 3, 4, 5], 1) == ", "input": "[1, 2, 2, 3, 4, 5], 1", "output": "[1]"}
{"old_id": "sample_676", "code": "def n(G, T):\n    return G.replace('\\t', ' '*T)\nassert n('a', 100) == ", "input": "'a', 100", "output": "'a'"}
{"old_id": "sample_677", "code": "def o(K, J):\n    J = -J if J < 0 else J\n    A = ''\n    for Q in range(J):\n        if K[Q % len(K)] != ' ':\n            A += K[Q % len(K)]\n        else:\n            break\n    return A\nassert o('I got 1 and 0.', 5) == ", "input": "'I got 1 and 0.', 5", "output": "'I'"}
{"old_id": "sample_678", "code": "def M(i):\n    S = dict()\n    for w in i.lower():\n        if w in S:\n            S[w] += 1\n        else:\n            S[w] = 1\n    return S\nassert M(\"HI\") == ", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}"}
{"old_id": "sample_679", "code": "def h(v):\n    if v == '':\n        return False\n    N = v[0]\n    if v[0].isdigit():\n        return False\n    for r in v:\n        if (r != '_') and not r.isidentifier():\n            return False\n    return True\nassert h('meet') == ", "input": "'meet'", "output": "True"}
{"old_id": "sample_680", "code": "def F(h):\n    p = ''\n    for B in range(len(h)):\n        if h[B].isalnum():\n            p += h[B]\n    return p\nassert F(\"we@32r71g72ug94=(823658*!@324\") == ", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'"}
{"old_id": "sample_681", "code": "def C(k, n, N):\n    k.insert(-5 if n < 0 else len(k) if n > len(k) else n + 1, N)\n    return k\nassert C([1, 5, 8, 2, 0, 3], 2, 7) == ", "input": "[1, 5, 8, 2, 0, 3], 2, 7", "output": "[1, 5, 8, 7, 2, 0, 3]"}
{"old_id": "sample_682", "code": "def T(p, c, index):\n    f = p.rsplit(None, index)\n    return '_'.join([o[:c] for o in f])\nassert T('hypernimovichyp', 2, 2) == ", "input": "'hypernimovichyp', 2, 2", "output": "'hy'"}
{"old_id": "sample_683", "code": "def e(c, C):\n    T = c.copy()\n    T.update([(U, C[U]) for U in C])\n    return T\nassert e({'disface': 9, 'cam': 7}, {'mforce': 5}) == ", "input": "{'disface': 9, 'cam': 7}, {'mforce': 5}", "output": "{'disface': 9, 'cam': 7, 'mforce': 5}"}
{"old_id": "sample_685", "code": "def T(X, A):\n    return X.count(A) + A\nassert T([1, 1, 1], -2) == ", "input": "[1, 1, 1], -2", "output": "-2"}
{"old_id": "sample_686", "code": "def V(w, G):\n\tX = {}\n\n\tfor J in G:\n\t\tif w.get(J) is not None:\n\t\t\tX[J] = w[J]\n\n\treturn X.copy()\nassert V({\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]) == ", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}"}
{"old_id": "sample_687", "code": "def K(r):\n    p = list(r)\n    p.pop(len(p) // 2)\n    p.append(r.lower())\n    return ':'.join([J for J in p])\nassert K('Rjug nzufE') == ", "input": "'Rjug nzufE'", "output": "'R:j:u:g: :z:u:f:E:rjug nzufe'"}
{"old_id": "sample_688", "code": "def p(G):\n    Y = []\n    for B in G:\n        if B not in Y:\n            Y.append(B)\n    return Y\nassert p([3, 1, 9, 0, 2, 0, 8]) == ", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]"}
{"old_id": "sample_689", "code": "def L(K):\n    count = len(K)\n    U = K.copy()\n    for X in range(0, count, 2):\n        U[X] *= 5\n    return U\nassert L([-3, -6, 2, 7]) == ", "input": "[-3, -6, 2, 7]", "output": "[-15, -6, 10, 7]"}
{"old_id": "sample_690", "code": "def I(S):\n    if str(S).find('.') != -1:\n        return str(int(S)+2.5)\n    return str(S)\nassert I('800') == ", "input": "'800'", "output": "'800'"}
{"old_id": "sample_691", "code": "def v(H, h):\n    if h and h[-1] in H:\n        return v(H.rstrip(h[-1]), h[:-1])\n    else:\n        return H\nassert v('rpyttc', 'cyt') == ", "input": "'rpyttc', 'cyt'", "output": "'rpytt'"}
{"old_id": "sample_692", "code": "def J(O):\n    W = []\n    O.reverse()\n    for T in range(len(O)):\n        if O[T] != 0:\n            W.append(O[T])\n    W.reverse()\n    return W\nassert J([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_693", "code": "def w(g):\n    C = int(g.find('8'))\n    return 'x0'*C\nassert w(\"sa832d83r xd 8g 26a81xdf\") == ", "input": "\"sa832d83r xd 8g 26a81xdf\"", "output": "'x0x0'"}
{"old_id": "sample_695", "code": "def a(j):\n    r = {}\n    for n, D in j.items():\n        r.update({n: []})\n        for R, S in enumerate(D):\n            r[n].append({})\n            for e, I in S.items():\n                r[n][R][e] = I.copy()\n    return r\nassert a({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_696", "code": "def S(e):\n    M = 0\n    for h in range(1, len(e)):\n        M += len(e.rpartition(e[h])[0])\n    return M\nassert S('wdj') == ", "input": "'wdj'", "output": "3"}
{"old_id": "sample_697", "code": "def k(J, y):\n    j = J.find(y)\n    h = J[:j]\n    d = J[j:j + len(y)]\n    u = J[j + len(y):]\n    return h, d, u\nassert k(\"not it\", \"\") == ", "input": "\"not it\", \"\"", "output": "('', '', 'not it')"}
{"old_id": "sample_698", "code": "def D(c):\n    return ''.join(R for R in c if R != ')')\nassert D(('(((((((((((d))))))))).))))(((((')) == ", "input": "('(((((((((((d))))))))).))))(((((')", "output": "'(((((((((((d.((((('"}
{"old_id": "sample_699", "code": "def l(B, W):\n    if W != '':\n        while B.startswith(W):\n            B = B.replace(W, '')\n        while W.startswith(B):\n            W = W.replace(B, '')\n    return [W, B]\nassert l(\"some\", \"1\") == ", "input": "\"some\", \"1\"", "output": "['1', 'some']"}
{"old_id": "sample_700", "code": "def v(q):\n    return len(q) - q.count('bot')\nassert v(\"Where is the bot in this world?\") == ", "input": "\"Where is the bot in this world?\"", "output": "30"}
{"old_id": "sample_701", "code": "def K(o, Y):\n    for b in Y:\n        o = o.rstrip(b)\n    return o\nassert K('31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')) == ", "input": "'31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')", "output": "'31849 let it!31849 pass!'"}
{"old_id": "sample_702", "code": "def q(B):\n    count = len(B)\n    for r in range(len(B) - 1, -1, -1):\n        B.insert(r, B.pop(0))\n    return B\nassert q([0, -5, -4]) == ", "input": "[0, -5, -4]", "output": "[-4, -5, 0]"}
{"old_id": "sample_703", "code": "def l(I, t):\n    count = I.count(t*2)\n    return I[count:]\nassert l('vzzv2sg', 'z') == ", "input": "'vzzv2sg', 'z'", "output": "'zzv2sg'"}
{"old_id": "sample_704", "code": "def w(i, P, D):\n    M = len(D)*P\n    for T in range(M - len(i)):\n        i = D + i\n    return i\nassert w('.', 0, '99') == ", "input": "'.', 0, '99'", "output": "'.'"}
{"old_id": "sample_705", "code": "def p(G, O):\n    if not O:\n        return G\n    if O and O != 'cities':\n        return []\n    return [O + o for o in G]\nassert p(['Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'], 'Somewhere ') == ", "input": "['Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'], 'Somewhere '", "output": "[]"}
{"old_id": "sample_706", "code": "def d(X, p):\n    u = []\n    if X[0] == p[0] and p[-1] == X[-1]:\n        u.append(X)\n        u.append(p)\n    else:\n        u.append(p)\n        u.append(X)\n    return u\nassert d(\"ab\", \"xy\") == ", "input": "\"ab\", \"xy\"", "output": "['xy', 'ab']"}
{"old_id": "sample_707", "code": "def N(J, x):\n    H = len(J)\n    index = x % (H + 1)\n    if x < 0 or index < 0:\n        index = -1\n    w = list(J)\n    w.pop(index)\n    return ''.join(w)\nassert N('undbs l', 1) == ", "input": "'undbs l', 1", "output": "'udbs l'"}
{"old_id": "sample_708", "code": "def q(h):\n    m = list(h)\n    for E in reversed(range(len(m))):\n        if m[E] != ' ':\n            break\n        m.pop(E)\n    return ''.join(m)\nassert q('    jcmfxv     ') == ", "input": "'    jcmfxv     '", "output": "'    jcmfxv'"}
{"old_id": "sample_709", "code": "def N(B):\n    Z = B.split()\n    Z.sort(reverse=True)\n    return ' '.join(Z)\nassert N('a loved') == ", "input": "'a loved'", "output": "'loved a'"}
{"old_id": "sample_710", "code": "def A(L, Z, r):\n    L[Z] = L.get(Z, [])\n    L[Z].append(r)\n    return L\nassert A({'aki': ['1', '5']}, 'aki', '2') == ", "input": "{'aki': ['1', '5']}, 'aki', '2'", "output": "{'aki': ['1', '5', '2']}"}
{"old_id": "sample_711", "code": "def N(d):\n    return d.replace('\\n', '\\t')\nassert N('apples\\n\\t\\npears\\n\\t\\nbananas') == ", "input": "'apples\\n\\t\\npears\\n\\t\\nbananas'", "output": "'apples\\t\\t\\tpears\\t\\t\\tbananas'"}
{"old_id": "sample_712", "code": "def j(z):\n    h = []\n    for T in z.splitlines():\n        if T == '':\n            break\n        h.append(list(list(T.rstrip())[::-1][g]))\n    return h[::-1]\n\ng = 0\nassert j('A(hiccup)A') == ", "input": "'A(hiccup)A'", "output": "[['A']]"}
{"old_id": "sample_713", "code": "def T(u, p):\n    if p in u:\n        u = [t.strip() for t in u.split(p) if t]\n        if len(u) > 1:\n            return True\n    return False\nassert T('only one line', ' ') == ", "input": "'only one line', ' '", "output": "True"}
{"old_id": "sample_714", "code": "def x(o):\n    o.reverse()\n    o.clear()\n    o.extend('x'*len(o))\n    o.reverse()\n    return o\nassert x([3, -2, 0]) == ", "input": "[3, -2, 0]", "output": "[]"}
{"old_id": "sample_715", "code": "def u(j, Q):\n    return j.count(Q) % 2 != 0\nassert u('abababac', 'a') == ", "input": "'abababac', 'a'", "output": "False"}
{"old_id": "sample_716", "code": "def r(Q):\n    count = len(Q)\n    while len(Q) > (count//2):\n        Q.clear()\n    return Q\nassert r([2, 1, 2, 3, 1, 6, 3, 8]) == ", "input": "[2, 1, 2, 3, 1, 6, 3, 8]", "output": "[]"}
{"old_id": "sample_717", "code": "def d(B):\n    (V, q) = (0, len(B) - 1)\n    while not B[q].isalpha():\n        q -= 1\n    while not B[V].isalpha():\n        V += 1\n    if V != 0 or q != len(B) - 1:\n        return B[V: q+1]\n    else:\n        return B[0]\nassert d(\"timetable, 2mil\") == ", "input": "\"timetable, 2mil\"", "output": "'t'"}
{"old_id": "sample_718", "code": "def g(S):\n    f = S\n    for a in S:\n        S = S.replace(a, '')\n    return str(len(S)) + f\nassert g('ThisIsSoAtrocious') == ", "input": "'ThisIsSoAtrocious'", "output": "'0ThisIsSoAtrocious'"}
{"old_id": "sample_719", "code": "def l(O):\n    n = O.split(']')\n    S = []\n    N = 0\n    for E in n:\n        S.append(E[0] + ' ' + '  ' * N + E[1:])\n        N += E.count('{') - E.count('}')\n    return '\\n'.join(S)\nassert l(\"if (x) {y = 1;} else {z = 1;}\") == ", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'"}
{"old_id": "sample_720", "code": "def X(items, t):\n    while items[-1] == t:\n        items.pop()\n    items.append(t)\n    return len(items)\nassert X('bfreratrrbdbzagbretaredtroefcoiqrrneaosf'.split('-'), 'n') == ", "input": "'bfreratrrbdbzagbretaredtroefcoiqrrneaosf'.split('-'), 'n'", "output": "2"}
{"old_id": "sample_721", "code": "def G(Y):\n    count = len(Y)\n    for g in range(2, count):\n        Y.sort()\n    return Y\nassert G([-6, -5, -7, -8, 2]) == ", "input": "[-6, -5, -7, -8, 2]", "output": "[-8, -7, -6, -5, 2]"}
{"old_id": "sample_722", "code": "def Z(I):\n    d = \"\"\n    for U in range(len(I)):\n        if I[U].isupper():\n            d += I[U].lower()\n        else:\n            d += I[U].upper()\n    return d\nassert Z(',wPzPppdl/') == ", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'"}
{"old_id": "sample_723", "code": "def b(m, o):\n    V = m.splitlines()\n    if o:\n        return [' '.join(T) for T in V]\n    else:\n        return V\nassert b('dga nqdk\\rull qcha kl', 1) == ", "input": "'dga nqdk\\rull qcha kl', 1", "output": "['d g a   n q d k', 'u l l   q c h a   k l']"}
{"old_id": "sample_724", "code": "def o(P, s):\n    r = [len(P[P.index(s) + len(s):])]\n    for K in P:\n        if K == s:\n            r.append(len(P[P.index(s) + len(s):]))\n    return r\nassert o(\"010100\", \"010\") == ", "input": "\"010100\", \"010\"", "output": "[3]"}
{"old_id": "sample_725", "code": "def R(L):\n    f = ['3', '3', '3', '3']\n    if f:\n        f.clear()\n    return len(L)\nassert R(\"mrq7y\") == ", "input": "\"mrq7y\"", "output": "5"}
{"old_id": "sample_726", "code": "def e(x):\n    U = 0\n    for X in x:\n        if X.isspace():\n            U += 1\n    return U, len(x)\nassert e(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\") == ", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)"}
{"old_id": "sample_727", "code": "def a(F, f):\n    return sorted(C[len(f):] if (len(C) > len(f) and C.startswith(f)) else C\n                  for C in F)\nassert a(['ix', 'dxh', 'snegi', 'wiubvu'], '') == ", "input": "['ix', 'dxh', 'snegi', 'wiubvu'], ''", "output": "['dxh', 'ix', 'snegi', 'wiubvu']"}
{"old_id": "sample_728", "code": "def t(V):\n    x = []\n    for U, g in enumerate(V):\n        if g == g.lower():\n            continue\n        if len(V) - 1 - U < V.rindex(g.lower()):\n            x.append(g)\n    return ''.join(x)\nassert t('ru') == ", "input": "'ru'", "output": "''"}
{"old_id": "sample_729", "code": "def Y(h,y):\n    d = []\n    p = h.rfind(y)\n    while p != -1:\n        d.append(p+len(y)-1)\n        p = h.rfind(y, 0, p)\n    return d\nassert Y('abcdefghabc', 'abc') == ", "input": "'abcdefghabc', 'abc'", "output": "[10, 2]"}
{"old_id": "sample_730", "code": "def f(Q):\n    C = 0\n    J = 0\n    for k in Q.split():\n        if len(k) > C:\n            J += 1\n            C = len(k)\n    return J\nassert f(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\") == ", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2"}
{"old_id": "sample_731", "code": "def i(I, L):\n    return I.replace(L, '')\nassert i('Chris requires a ride to the airport on Friday.', 'a') == ", "input": "'Chris requires a ride to the airport on Friday.', 'a'", "output": "'Chris requires  ride to the irport on Fridy.'"}
{"old_id": "sample_732", "code": "def p(g):\n    D = {}\n    for X, L in g.copy().items():\n        D[X] = L // 2\n    return D\nassert p({'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}) == ", "input": "{'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}", "output": "{'u': 10, 'v': 2, 'b': 3, 'w': 1, 'x': 1}"}
{"old_id": "sample_733", "code": "def z(b):\n    i = len(b) // 2\n    w = b[:i]\n    U = b[i:][::-1]\n    return w + U\nassert z('n') == ", "input": "'n'", "output": "'n'"}
{"old_id": "sample_734", "code": "def x(F):\n    for K in range(len(F) - 2, -1, -1):\n        if F[K] % 2 == 0:\n            F.remove(F[K])\n    return F\nassert x([5, 3, 3, 7]) == ", "input": "[5, 3, 3, 7]", "output": "[5, 3, 3, 7]"}
{"old_id": "sample_735", "code": "def l(x):\n    if x == '':\n        return ''\n    x = x.replace('(', '')\n    x = x.replace(')', '')\n    return x.capitalize().replace(' ', '')\nassert l('(A (b B))') == ", "input": "'(A (b B))'", "output": "'Abb'"}
{"old_id": "sample_736", "code": "def c(g, insert):\n    V = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    R = ''\n    for U in g:\n        if U in V:\n            R += insert\n        else:\n            R += U\n    return R\nassert c('pi wa', 'chi') == ", "input": "'pi wa', 'chi'", "output": "'pichiwa'"}
{"old_id": "sample_737", "code": "def D(P):\n    j = 0\n    for S in P:\n        if str(S).isdecimal():\n            if j == 0:\n                j += 1\n    return j\nassert D([0, 6, 2, -1, -2]) == ", "input": "[0, 6, 2, -1, -2]", "output": "1"}
{"old_id": "sample_738", "code": "def k(P, R):\n    for Y in range(len(R)):\n        P = P.rstrip(R[Y::len(R)])\n    return P\nassert k(\"r;r;r;r;r;r;r;r;r\", \"x.r\") == ", "input": "\"r;r;r;r;r;r;r;r;r\", \"x.r\"", "output": "'r;r;r;r;r;r;r;r;'"}
{"old_id": "sample_739", "code": "def l(u, U):\n    for z in U:\n        if not u.startswith(z): return False\n        u = u[len(z):]\n    return True\nassert l('qwbnjrxs', ['jr', 'b', 'r', 'qw']) == ", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False"}
{"old_id": "sample_740", "code": "def I(n, A):\n    if A in n:\n        split = n.index(A)\n        x = n[:split]\n        X = n[split + 1:]\n        return x + X\n    else:\n        return n\nassert I([1, 2, 3, 4], 3) == ", "input": "[1, 2, 3, 4], 3", "output": "[1, 2, 4]"}
{"old_id": "sample_741", "code": "def C(T, k):\n    u = k - 1\n    if u < 0: u = len(T) - 1\n    return T[u]\nassert C([6, 8, 2, 5, 3, 1, 9, 7], 6) == ", "input": "[6, 8, 2, 5, 3, 1, 9, 7], 6", "output": "1"}
{"old_id": "sample_742", "code": "def w(Z):\n    b = True\n    for m in Z:\n        if m.isdigit():\n            b = True\n        else:\n            b = False\n            break\n    return b\nassert w(\"-1-3\") == ", "input": "\"-1-3\"", "output": "False"}
{"old_id": "sample_743", "code": "def A(U):\n    u, W = U.split(',')\n    return -(len(u) + (len(W)))\nassert A('dog,cat') == ", "input": "'dog,cat'", "output": "-6"}
{"old_id": "sample_744", "code": "def P(c, o):\n    l = list(c)\n    l.extend(o)\n    return ''.join(l)\nassert P('jro', 'wdlp') == ", "input": "'jro', 'wdlp'", "output": "'jrowdlp'"}
{"old_id": "sample_745", "code": "def p(G):\n    h = G.index('@') + 1\n    if G[h:].count('.') > 1:\n        G = G.removesuffix('.'.join(G.split('@')[1].split('.')[:2]))\n    return G\nassert p('minimc@minimc.io') == ", "input": "'minimc@minimc.io'", "output": "'minimc@minimc.io'"}
{"old_id": "sample_746", "code": "def E(W):\n    values = W.values()\n    a = {}\n    for s in values:\n        H = s.split('.')[0]+'@pinc.uk'\n        a[s] = H\n    return a\nassert E({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_747", "code": "def y(H):\n    if H == '42.42':\n        return True\n    for z in range(3, len(H) - 3):\n        if H[z] == '.' and H[z - 3:].isdigit() and H[:z].isdigit():\n            return True\n    return False\nassert y(\"123E-10\") == ", "input": "\"123E-10\"", "output": "False"}
{"old_id": "sample_748", "code": "def H(T):\n    p = iter(T.items())\n    return next(p), next(p)\nassert H({'a': 123, 'b': 456, 'c': 789}) == ", "input": "{'a': 123, 'b': 456, 'c': 789}", "output": "(('a', 123), ('b', 456))"}
{"old_id": "sample_749", "code": "def J(E, k):\n    i = \"\"\n    v = E.split('\\n')\n    for A in v:\n        i += A.center(k)\n        i += '\\n'\n\n    # S b o F n C\n    i = i[:-1]\n    return i\nassert J('l\\nl', 2) == ", "input": "'l\\nl', 2", "output": "'l \\nl '"}
{"old_id": "sample_750", "code": "def D(B, N):\n    w = ''\n    for K in N:\n        U = B.get(K)\n        if U is None:\n            w += K\n        else:\n            w += U\n    return w\nassert D({}, 'hbd') == ", "input": "{}, 'hbd'", "output": "'hbd'"}
{"old_id": "sample_751", "code": "def P(M, f, b):\n    count = M.count(f)\n    if count < b:\n        return M.swapcase()\n    return M\nassert P(\"wwwwhhhtttpp\", 'w', 3) == ", "input": "\"wwwwhhhtttpp\", 'w', 3", "output": "'wwwwhhhtttpp'"}
{"old_id": "sample_752", "code": "def p(B, U):\n    return (U - len(B)) * 'z' + B\nassert p('abc', 8) == ", "input": "'abc', 8", "output": "'zzzzzabc'"}
{"old_id": "sample_753", "code": "def u(x):\n    values = list(x.values())\n    i = {}\n    for p in range(100):\n        if p in values:\n            i[p] = values.count(p)\n    return i\nassert u({0: 0, 1: 0, 2: 0, 3: 0, 4: 0}) == ", "input": "{0: 0, 1: 0, 2: 0, 3: 0, 4: 0}", "output": "{0: 5}"}
{"old_id": "sample_754", "code": "def D(z):\n    z = ['{0:{fill}>{width}}'.format(G, **{'fill': '0', 'width': z[0]}) for G in z[1:]]\n    return [str(G) for G in z]\nassert D(['1', '2', '2', '44', '0', '7', '20257']) == ", "input": "['1', '2', '2', '44', '0', '7', '20257']", "output": "['2', '2', '44', '0', '7', '20257']"}
{"old_id": "sample_755", "code": "def V(replace, W, g):\n    while g in W:\n        replace += 'ax'\n        W = W.replace(g, replace, 1)\n    return W\nassert V('###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.') == ", "input": "'###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.'", "output": "'ph>t#A#BiEcDefW#ON#iiNCU'"}
{"old_id": "sample_756", "code": "def v(w):\n    if w.isalnum() and all(V.isdigit() for V in w):\n        return 'integer'\n    return 'string'\nassert v('') == ", "input": "''", "output": "'string'"}
{"old_id": "sample_757", "code": "def T(S, t, replace):\n    return S.replace(t, replace)\nassert T('a1a8', '1', 'n2') == ", "input": "'a1a8', '1', 'n2'", "output": "'an2a8'"}
{"old_id": "sample_758", "code": "def I(X):\n    if X[::-1] == X:\n        return True\n    return False\nassert I([0, 3, 6, 2]) == ", "input": "[0, 3, 6, 2]", "output": "False"}
{"old_id": "sample_759", "code": "def f(s, P):\n    index = []\n    z = 0\n    while z != -1:\n        z = s.find(P, z)\n        if z != -1:\n            index.append(z)\n            z += len(P)\n    return index\nassert f('egmdartoa', 'good') == ", "input": "'egmdartoa', 'good'", "output": "[]"}
{"old_id": "sample_761", "code": "def f(z):\n    v = z.copy()\n    v[0::2] = v[-1::-2]\n    v.reverse()\n    return v\nassert f([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_762", "code": "def y(x):\n    x = x.lower()\n    capitalize = x.capitalize()\n    return x[:1] + capitalize[1:]\nassert y('this And cPanel') == ", "input": "'this And cPanel'", "output": "'this and cpanel'"}
{"old_id": "sample_763", "code": "def z(values, S, d):\n    return S.rstrip(values).rstrip(d)\nassert z('2Pn', 'yCxpg2C2Pny2', '') == ", "input": "'2Pn', 'yCxpg2C2Pny2', ''", "output": "'yCxpg2C2Pny'"}
{"old_id": "sample_764", "code": "def W(a, p, q):\n    U = a.replace(p, q)\n    P = p[::-1]\n    while P in U:\n        U = U.replace(P, q)\n    return U\nassert W(\"some test string\", \"some\", \"any\") == ", "input": "\"some test string\", \"some\", \"any\"", "output": "'any test string'"}
{"old_id": "sample_765", "code": "def t(f):\n    return sum(1 for i in f if i.isdigit())\nassert t('so456') == ", "input": "'so456'", "output": "3"}
{"old_id": "sample_766", "code": "def s(values, H):\n    L = len(values)\n    w = dict.fromkeys(values, H)\n    w[''.join(sorted(values))] = H * 3\n    return w\nassert s(['0','3'], 117) == ", "input": "['0','3'], 117", "output": "{'0': 117, '3': 117, '03': 351}"}
{"old_id": "sample_767", "code": "def c(t):\n    P = t.strip().split(' ')\n    for Q in range(len(P)):\n        if P[Q].isdigit() is False:\n            return '-'\n    return \" \".join(P)\nassert c(\"d khqw whi fwi bbn 41\") == ", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'"}
{"old_id": "sample_768", "code": "def L(D, T):\n    if D.startswith(T):\n        return D\n    return T + L(D, T[-2::-1])\nassert L('abba', 'bab') == ", "input": "'abba', 'bab'", "output": "'bababba'"}
{"old_id": "sample_769", "code": "def e(Y):\n    B = [w for w in Y]\n    for X, w in enumerate(B):\n        B[X] = w.swapcase()\n    return ''.join(B)\nassert e('akA?riu') == ", "input": "'akA?riu'", "output": "'AKa?RIU'"}
{"old_id": "sample_770", "code": "def b(F, L):\n    count = F.count(L)\n    for s in range(count+1, 0, -1):\n        F = F.center(len(F)+s // len(L), L)\n    return F\nassert b('$78'.upper(), '$') == ", "input": "'$78'.upper(), '$'", "output": "'$$78$$'"}
{"old_id": "sample_771", "code": "def U(items):\n    items = list(items)\n    b = []\n    while len(items) > 0:\n        E = items.index(min(items))\n        items.pop(E)\n        F = items.pop(E)\n        b.append(F)\n    return b\nassert U((1, 2, 3, 4, 5, 6, 7, 8)) == ", "input": "(1, 2, 3, 4, 5, 6, 7, 8)", "output": "[2, 4, 6, 8]"}
{"old_id": "sample_772", "code": "def F(Q):\n    m = ''\n    for a in Q:\n        if not a.islower():\n            m += a\n    return m\nassert F('serjgpoDFdbcA.') == ", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'"}
{"old_id": "sample_773", "code": "def U(o, F):\n    return o.pop(F)\nassert U([-7, 3, 1, -1, -1, 0, 4], 6) == ", "input": "[-7, 3, 1, -1, -1, 0, 4], 6", "output": "4"}
{"old_id": "sample_774", "code": "def i(f, v):\n    e = 'quiz leader = {}, count = {}'\n    return e.format(v, f)\nassert i(23, 'Cornareti') == ", "input": "23, 'Cornareti'", "output": "'quiz leader = Cornareti, count = 23'"}
{"old_id": "sample_775", "code": "def g(q):\n    count = len(q)\n    for R in range(0, count // 2):\n        q[R], q[count-R-1] = q[count-R-1], q[R]\n    return q\nassert g([2, 6, 1, 3, 1]) == ", "input": "[2, 6, 1, 3, 1]", "output": "[1, 3, 1, 6, 2]"}
{"old_id": "sample_776", "code": "def y(q):\n    B = q.copy()\n    for Q in B:\n        if Q%2 != 0:\n            del B[Q]\n            B['$'+str(Q)] = B[Q]\n    return B\nassert y({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_777", "code": "def s(i, p):\n    p = p\n    for g in range(len(i)):\n        if p in i[g]:\n            i[g] = i[g].replace(p, \"\")\n    return i\nassert s([\"avc  a .d e\"], \"\") == ", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']"}
{"old_id": "sample_778", "code": "def l(V, z):\n    if z.startswith(V):\n        return z\n    else:\n        return V + z\nassert l('mjs', 'mjqwmjsqjwisojqwiso') == ", "input": "'mjs', 'mjqwmjsqjwisojqwiso'", "output": "'mjsmjqwmjsqjwisojqwiso'"}
{"old_id": "sample_779", "code": "def D(Z):\n    values = Z.split()\n    return '${first}y, ${second}x, ${third}r, ${fourth}p' % dict({\n        'first': values[0],\n        'second': values[1],\n        'third': values[2],\n        'fourth': values[3]\n    })\nassert D('python ruby c javascript') == ", "input": "'python ruby c javascript'", "output": "'${first}y, ${second}x, ${third}r, ${fourth}p'"}
{"old_id": "sample_780", "code": "def V(Y):\n    u = [0] * 301\n\n    for i in Y:\n        u[i] += 1\n\n    x = []\n    for i in range(len(u)):\n        if u[i] >= 3:\n            x.append(str(i))\n    u.clear()\n    return ' '.join(x)\nassert V([2, 3, 5, 2, 4, 5, 2, 89]) == ", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'"}
{"old_id": "sample_781", "code": "def r(T, i):\n    if i not in T:\n        return ''\n    T = T.partition(i)[2][::-1]\n    for e in range(len(T)):\n        T = T.partition(i)[2][::-1]\n    return T\nassert r('shivajimonto6', '6') == ", "input": "'shivajimonto6', '6'", "output": "''"}
{"old_id": "sample_782", "code": "def H(input):\n    for N in input:\n        if N.isupper():\n            return False\n    return True\nassert H(\"a j c n x X k\") == ", "input": "\"a j c n x X k\"", "output": "False"}
{"old_id": "sample_783", "code": "def o(Y, p):\n    P = len(p)\n    if P <= len(Y):\n        for f in range(P):\n            if p[P - f - 1] != Y[len(Y) - f - 1]:\n                return f\n    return P\nassert o(\"managed\", \"\") == ", "input": "\"managed\", \"\"", "output": "0"}
{"old_id": "sample_784", "code": "def C(H, y):\n    U = {H: y}\n    return dict.popitem(U)\nassert C('read', 'Is') == ", "input": "'read', 'Is'", "output": "('read', 'Is')"}
{"old_id": "sample_785", "code": "def s(o):\n    F = ''\n    for B in str(o):\n        F += B.ljust(int(B) * 2)\n    return F\nassert s(1) == ", "input": "1", "output": "'1 '"}
{"old_id": "sample_786", "code": "def k(L, m):\n    if m in L:\n        Z = L.index(m)\n        return L[Z + 1:] + L[:Z + 1]\n    return L\nassert k('19kefp7', '9') == ", "input": "'19kefp7', '9'", "output": "'kefp719'"}
{"old_id": "sample_787", "code": "def k(y):\n    if len(y) == 0:\n        return ''\n    y = y.lower()\n    return y[0].upper() + y[1:]\nassert k('xzd') == ", "input": "'xzd'", "output": "'Xzd'"}
{"old_id": "sample_788", "code": "def f(N, o):\n    if o.startswith(\"/\"):\n        return N + o[1:]\n    return N\nassert f('hello.txt', '/') == ", "input": "'hello.txt', '/'", "output": "'hello.txt'"}
{"old_id": "sample_789", "code": "def i(V, G):\n    if G < 0 or len(V) <= G:\n        return V\n    b = V[0 : G]\n    l = len(b) - 1\n    while l >= 0:\n        if b[l] != V[l]:\n            break\n        l -= 1\n    return V[0 : l + 1]\nassert i('bR', -1) == ", "input": "'bR', -1", "output": "'bR'"}
{"old_id": "sample_790", "code": "def M(C):\n    A = {\n        'c': C.copy(),\n        'd': C.copy()\n    }\n    return (A['c'] is A['d'], A['c'] == A['d'])\nassert M({'i': 1, 'love': 'parakeets'}) == ", "input": "{'i': 1, 'love': 'parakeets'}", "output": "(False, True)"}
{"old_id": "sample_791", "code": "def D(p, E):\n    f = 1\n    W = str(p)\n    while (f+len(W) < E):\n        f += len(W)\n    return W.zfill(f+len(W))\nassert D(8999,2) == ", "input": "8999,2", "output": "'08999'"}
{"old_id": "sample_792", "code": "def p(k, D):\n    if len(k) != len(D):\n        return {}\n    return dict.fromkeys(k, D)\nassert p(['a', 'b'], ['car', 'dog']) == ", "input": "['a', 'b'], ['car', 'dog']", "output": "{'a': ['car', 'dog'], 'b': ['car', 'dog']}"}
{"old_id": "sample_793", "code": "def G(list, X, N):\n    count = 0\n    for K in range(X, N):\n        for t in range(K, N):\n            if list[K] != list[t]:\n                count += 1\n    return count\nassert G([1, 2, 4, 3, 2, 1], 0, 3) == ", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3"}
{"old_id": "sample_795", "code": "def C(x):\n    return x.title().replace('Io', 'io')\nassert C('Fu,ux zfujijabji pfu.') == ", "input": "'Fu,ux zfujijabji pfu.'", "output": "'Fu,Ux Zfujijabji Pfu.'"}
{"old_id": "sample_796", "code": "def A(str,q):\n    if str.startswith(q): return str[len(q):]\n    else: return str\nassert A('fnuiyh', 'ni') == ", "input": "'fnuiyh', 'ni'", "output": "'fnuiyh'"}
{"old_id": "sample_797", "code": "def G(f):\n    o = []\n    for l in sorted(f):\n        o.append((l, f[l]))\n    return o\nassert G({'a': 1, 'b': 2, 'c': 3}) == ", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[('a', 1), ('b', 2), ('c', 3)]"}
{"old_id": "sample_798", "code": "def k(v, C):\n    if not v.startswith(C):\n        return v\n    return v.removeprefix(C)\nassert k('@hihu@!', '@hihu') == ", "input": "'@hihu@!', '@hihu'", "output": "'@!'"}
{"old_id": "sample_799", "code": "def E(K):\n    if K[0] == '~':\n        F = K.rjust(10, 's')\n        return E(F)\n    else:\n        return K.rjust(10, 'n')\nassert E('eqe-;ew22') == ", "input": "'eqe-;ew22'", "output": "'neqe-;ew22'"}
