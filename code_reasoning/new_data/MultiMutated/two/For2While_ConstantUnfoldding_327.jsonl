{"code": "def f(nums):\n    output = []\n    idx_l9ao = (21 + -21)\n    list_b0o5 = nums\n    while idx_l9ao < len(list_b0o5):\n        n = list_b0o5[idx_l9ao]\n        output.append((nums.count(n), n))\n        idx_l9ao = idx_l9ao + (76 + -75)\n    output.sort(reverse=True)\n    return output", "input": "[1, 1, 3, 1, 3, 1]", "output": "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]", "id": "ConstantUnfoldding_sample_from_sample_0_to_0", "old_id": "sample_0"}
{"code": "def f(a, b, c):\n    result = {}\n    idx_f89q = (56 + -56)\n    list_iebu = a, b, c\n    while idx_f89q < len(list_iebu):\n        d = list_iebu[idx_f89q]\n        result.update(dict.fromkeys(d))\n        idx_f89q = idx_f89q + (63 + -62)\n    return result", "input": "(1, ), (1, ), (1, 2)", "output": "{1: None, 2: None}", "id": "ConstantUnfoldding_sample_from_sample_1_to_1", "old_id": "sample_1"}
{"code": "def f(text):\n    new_text = list(text)\n    idx_rwq9 = (82 + -82)\n    list_mza9 = '+'\n    while idx_rwq9 < len(list_mza9):\n        i = list_mza9[idx_rwq9]\n        if i in new_text:\n            new_text.remove(i)\n        idx_rwq9 = idx_rwq9 + (18 + -17)\n    return ''.join(new_text)", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'", "id": "ConstantUnfoldding_sample_from_sample_2_to_2", "old_id": "sample_2"}
{"code": "def f(text, lower, upper):\n    count = (95 + -95)\n    new_text = list()\n    idx_4rfl = (9 + -9)\n    list_yz89 = text\n    while idx_4rfl < len(list_yz89):\n        char = list_yz89[idx_4rfl]\n        char = lower if char.isdecimal() else upper\n        if char in ['p', 'C']:\n            count += (4 + -3)\n        new_text.append(char)\n        idx_4rfl = idx_4rfl + (72 + -71)\n    return count, ''.join(new_text)", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')", "id": "ConstantUnfoldding_sample_from_sample_5_to_3", "old_id": "sample_5"}
{"code": "def f(dic):\n    idx_8bdu = (90 + -90)\n    list_5zin = sorted(dic.items(), key=lambda x: len(str(x)))[:-(69 + -68)]\n    while idx_8bdu < len(list_5zin):\n        k,v = list_5zin[idx_8bdu]\n        dic.pop(k)\n        idx_8bdu = idx_8bdu + (62 + -61)\n    return list(dic.items())", "input": "{'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}", "output": "[('74', 31)]", "id": "ConstantUnfoldding_sample_from_sample_6_to_4", "old_id": "sample_6"}
{"code": "def f(list):\n    original = list[:]\n    while len(list) > (74 + -73):\n        list.pop(len(list) - (77 + -76))\n        idx_c157 = (69 + -69)\n        list_jouz = range(len(list))\n        while idx_c157 < len(list_jouz):\n            i = list_jouz[idx_c157]\n            list.pop(i)\n            idx_c157 = idx_c157 + (17 + -16)\n    list = original[:]\n    if list:\n        list.pop((31 + -31))\n    return list", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_7_to_5", "old_id": "sample_7"}
{"code": "def f(t):\n    idx_19yr = (6 + -6)\n    list_eci0 = t\n    while idx_19yr < len(list_eci0):\n        c = list_eci0[idx_19yr]\n        if not c.isnumeric():\n            return False\n        idx_19yr = idx_19yr + (69 + -68)\n    return True", "input": "'#284376598'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_9_to_6", "old_id": "sample_9"}
{"code": "def f(text):\n    new_text = ''\n    idx_yt8b = (39 + -39)\n    list_cnmt = text.lower().strip()\n    while idx_yt8b < len(list_cnmt):\n        ch = list_cnmt[idx_yt8b]\n        if ch.isnumeric() or ch in '\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc':\n            new_text += ch\n        idx_yt8b = idx_yt8b + (53 + -52)\n    return new_text", "input": "''", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_10_to_7", "old_id": "sample_10"}
{"code": "def f(a, b):\n    idx_9kof = (88 + -88)\n    list_rm98 = list(b.items())\n    while idx_9kof < len(list_rm98):\n        key, value = list_rm98[idx_9kof]\n        if key not in a:\n            a[key] = [value]\n        else:\n            a[key].append(value)\n        idx_9kof = idx_9kof + (74 + -73)\n    return a", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "id": "ConstantUnfoldding_sample_from_sample_11_to_8", "old_id": "sample_11"}
{"code": "def f(names):\n    count = len(names)\n    numberOfNames = (60 + -60)\n    idx_zsaj = (33 + -33)\n    list_n5kd = names\n    while idx_zsaj < len(list_n5kd):\n        i = list_n5kd[idx_zsaj]\n        if i.isalpha():\n            numberOfNames += (73 + -72)\n        idx_zsaj = idx_zsaj + (45 + -44)\n    return numberOfNames", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_13_to_9", "old_id": "sample_13"}
{"code": "def f(array, elem):\n    k = (71 + -71)\n    l = array.copy()\n    idx_ln4g = (43 + -43)\n    list_gc25 = l\n    while idx_ln4g < len(list_gc25):\n        i = list_gc25[idx_ln4g]\n        if i > elem:\n            array.insert(k, elem)\n            break\n        k += (67 + -66)\n        idx_ln4g = idx_ln4g + (47 + -46)\n    return array", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]", "id": "ConstantUnfoldding_sample_from_sample_18_to_10", "old_id": "sample_18"}
{"code": "def f(text):\n    result = ''\n    idx_v756 = (73 + -73)\n    list_zoei = range(len(text)-(5 + -4), -(24 + -23), -(55 + -54))\n    while idx_v756 < len(list_zoei):\n        i = list_zoei[idx_v756]\n        result += text[i]\n        idx_v756 = idx_v756 + (29 + -28)\n    return result", "input": "'was,'", "output": "',saw'", "id": "ConstantUnfoldding_sample_from_sample_20_to_11", "old_id": "sample_20"}
{"code": "def f(items, target):\n    idx_3qzw = (64 + -64)\n    list_7x2p = items.split()\n    while idx_3qzw < len(list_7x2p):\n        i = list_7x2p[idx_3qzw]\n        if i in target:\n            return items.index(i)+(81 + -80)\n        if i.index('.') == len(i)-(48 + -47) or i.index('.') == (85 + -85):\n            return 'error'\n        idx_3qzw = idx_3qzw + (33 + -32)\n    return '.'", "input": "\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"", "output": "'error'", "id": "ConstantUnfoldding_sample_from_sample_26_to_12", "old_id": "sample_26"}
{"code": "def f(array):\n    result = []\n    idx_web1 = (93 + -93)\n    list_yogl = array\n    while idx_web1 < len(list_yogl):\n        elem = list_yogl[idx_web1]\n        if elem.isascii() or (isinstance(elem, int) and not str(abs(elem)).isascii()):\n            result.append(elem)\n        idx_web1 = idx_web1 + (96 + -95)\n    return result", "input": "[\"a\", \"b\", \"c\"]", "output": "['a', 'b', 'c']", "id": "ConstantUnfoldding_sample_from_sample_30_to_13", "old_id": "sample_30"}
{"code": "def f(string):\n    upper = (97 + -97)\n    idx_o4w7 = (32 + -32)\n    list_6d4h = string\n    while idx_o4w7 < len(list_6d4h):\n        c = list_6d4h[idx_o4w7]\n        if c.isupper():\n            upper += (9 + -8)\n        idx_o4w7 = idx_o4w7 + (79 + -78)\n    return upper * ((34 + -32),(38 + -37))[upper % (66 + -64)]", "input": "'PoIOarTvpoead'", "output": "8", "id": "ConstantUnfoldding_sample_from_sample_31_to_14", "old_id": "sample_31"}
{"code": "def f(lists):\n    dic = {}\n    idx_8vik = (99 + -99)\n    list_fvcr = lists\n    while idx_8vik < len(list_fvcr):\n        n = list_fvcr[idx_8vik]\n        if n in dic:\n            dic[n].append(lists.pop(lists.index(n)))\n        else:\n            dic[n] = lists[:lists.index(n) + (5 + -4)]\n        idx_8vik = idx_8vik + (38 + -37)\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "ConstantUnfoldding_sample_from_sample_33_to_15", "old_id": "sample_33"}
{"code": "def f(pattern, items):\n    result = []\n    idx_6yb7 = (62 + -62)\n    list_2t3p = items\n    while idx_6yb7 < len(list_2t3p):\n        text = list_2t3p[idx_6yb7]\n        pos = text.rfind(pattern)\n        if pos >= (62 + -62):\n            result.append(pos)\n        idx_6yb7 = idx_6yb7 + (91 + -90)\n\n    return result", "input": "\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_35_to_16", "old_id": "sample_35"}
{"code": "def f(text):\n    text_arr = []\n    idx_fu7l = (21 + -21)\n    list_qhsb = range(len(text))\n    while idx_fu7l < len(list_qhsb):\n        j = list_qhsb[idx_fu7l]\n        text_arr.append(text[j:])\n        idx_fu7l = idx_fu7l + (12 + -11)\n    return text_arr", "input": "'123'", "output": "['123', '23', '3']", "id": "ConstantUnfoldding_sample_from_sample_37_to_17", "old_id": "sample_37"}
{"code": "def f(array, values):\n    array.reverse()\n    idx_4xz3 = (87 + -87)\n    list_osfk = values\n    while idx_4xz3 < len(list_osfk):\n        value = list_osfk[idx_4xz3]\n        array.insert(len(array) // (76 + -74), value)\n        idx_4xz3 = idx_4xz3 + (68 + -67)\n    array.reverse()\n    return array", "input": "[58], [21, 92]", "output": "[58, 92, 21]", "id": "ConstantUnfoldding_sample_from_sample_41_to_18", "old_id": "sample_41"}
{"code": "def f(nums):\n    nums.clear()\n    idx_cdbr = (71 + -71)\n    list_5g6f = nums\n    while idx_cdbr < len(list_5g6f):\n        num = list_5g6f[idx_cdbr]\n        nums.append(num*(26 + -24))\n        idx_cdbr = idx_cdbr + (7 + -6)\n    return nums", "input": "[4, 3, 2, 1, 2, -1, 4, 2]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_42_to_19", "old_id": "sample_42"}
{"code": "def f(n):\n    idx_95vb = (74 + -74)\n    list_crtl = str(n)\n    while idx_95vb < len(list_crtl):\n        i = list_crtl[idx_95vb]\n        if not i.isdigit():\n            n = -(75 + -74)\n            break\n        idx_95vb = idx_95vb + (67 + -66)\n    return n", "input": "\"6 ** 2\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_43_to_20", "old_id": "sample_43"}
{"code": "def f(text):\n    ls = list(text)\n    idx_wdb3 = (44 + -44)\n    list_4vpo = range((37 + -37), len(ls))\n    while idx_wdb3 < len(list_4vpo):\n        i = list_4vpo[idx_wdb3]\n        if ls[i]!='+':\n            ls.insert(i, '+')\n            ls.insert(i, '*')\n            break\n        idx_wdb3 = idx_wdb3 + (9 + -8)\n    return '+'.join(ls)", "input": "'nzoh'", "output": "'*+++n+z+o+h'", "id": "ConstantUnfoldding_sample_from_sample_44_to_21", "old_id": "sample_44"}
{"code": "def f(text, letter):\n    counts = {}\n    idx_lofz = (72 + -72)\n    list_7mzj = text\n    while idx_lofz < len(list_7mzj):\n        char = list_7mzj[idx_lofz]\n        if char not in counts:\n            counts[char] = (78 + -77)\n        else:\n            counts[char] += (29 + -28)\n        idx_lofz = idx_lofz + (76 + -75)\n    return counts.get(letter, (84 + -84))", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_45_to_22", "old_id": "sample_45"}
{"code": "def f(names):\n    if names == []:\n        return \"\"\n    smallest = names[(22 + -22)]\n    idx_498k = (19 + -19)\n    list_clua = names[(88 + -87):]\n    while idx_498k < len(list_clua):\n        name = list_clua[idx_498k]\n        if name < smallest:\n            smallest = name\n        idx_498k = idx_498k + (93 + -92)\n    names.remove(smallest)\n    return names.join(smallest)", "input": "[]", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_48_to_23", "old_id": "sample_48"}
{"code": "def f(text):\n    a = []\n    idx_83mc = (56 + -56)\n    list_c2oq = range(len(text))\n    while idx_83mc < len(list_c2oq):\n        i = list_c2oq[idx_83mc]\n        if not text[i].isdecimal():\n            a.append(text[i])\n        idx_83mc = idx_83mc + (81 + -80)\n    return ''.join(a)", "input": "\"seiq7229 d27\"", "output": "'seiq d'", "id": "ConstantUnfoldding_sample_from_sample_52_to_24", "old_id": "sample_52"}
{"code": "def f(text):\n    occ = {}\n    idx_2r3v = (79 + -79)\n    list_y1z7 = text\n    while idx_2r3v < len(list_y1z7):\n        ch = list_y1z7[idx_2r3v]\n        name = {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}\n        name = name.get(ch, ch)\n        occ[name] = occ.get(name, (41 + -41)) + (82 + -81)\n        idx_2r3v = idx_2r3v + (91 + -90)\n    return [x for _, x in occ.items()]", "input": "\"URW rNB\"", "output": "[1, 1, 1, 1, 1, 1, 1]", "id": "ConstantUnfoldding_sample_from_sample_53_to_25", "old_id": "sample_53"}
{"code": "def f(array):\n    array_2 = []\n    idx_k297 = (26 + -26)\n    list_bf51 = array\n    while idx_k297 < len(list_bf51):\n        i = list_bf51[idx_k297]\n        if i>(78 + -78):\n            array_2 += [i]\n        idx_k297 = idx_k297 + (100 + -99)\n    array_2.sort(reverse=True)\n    return array_2", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]", "id": "ConstantUnfoldding_sample_from_sample_55_to_26", "old_id": "sample_55"}
{"code": "def f(sentence):\n    idx_5sw4 = (60 + -60)\n    list_7lr1 = sentence\n    while idx_5sw4 < len(list_7lr1):\n        c = list_7lr1[idx_5sw4]\n        if c.isascii() is False:\n            return False\n        else:\n            continue\n        idx_5sw4 = idx_5sw4 + (86 + -85)\n    return True", "input": "'1z1z1'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_56_to_27", "old_id": "sample_56"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = (24 + -24)\n    idx_pw98 = (1 + -1)\n    list_z0ys = text\n    while idx_pw98 < len(list_z0ys):\n        char = list_z0ys[idx_pw98]\n        if char.isupper():\n            count_upper += (98 + -97)\n        else:\n            return 'no'\n        idx_pw98 = idx_pw98 + (26 + -25)\n    return count_upper // (7 + -5)", "input": "'ax'", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_57_to_28", "old_id": "sample_57"}
{"code": "def f(nums):\n    count = len(nums)\n    idx_qyk6 = (3 + -3)\n    list_oqbe = [i % (10 + -8) for i in range(count)]\n    while idx_qyk6 < len(list_oqbe):\n        i = list_oqbe[idx_qyk6]\n        nums.append(nums[i])\n        idx_qyk6 = idx_qyk6 + (50 + -49)\n    return nums", "input": "[-1, 0, 0, 1, 1]", "output": "[-1, 0, 0, 1, 1, -1, 0, -1, 0, -1]", "id": "ConstantUnfoldding_sample_from_sample_58_to_29", "old_id": "sample_58"}
{"code": "def f(s):\n    a = [char for char in s if char != ' ']\n    b = a\n    idx_ojhy = (47 + -47)\n    list_bk5h = reversed(a)\n    while idx_ojhy < len(list_bk5h):\n        c = list_bk5h[idx_ojhy]\n        if c == ' ':\n            b.pop()\n        else:\n            break\n        idx_ojhy = idx_ojhy + (56 + -55)\n    return ''.join(b)", "input": "'hi '", "output": "'hi'", "id": "ConstantUnfoldding_sample_from_sample_59_to_30", "old_id": "sample_59"}
{"code": "def f(doc):\n    idx_40bd = (25 + -25)\n    list_dleg = doc\n    while idx_40bd < len(list_dleg):\n        x = list_dleg[idx_40bd]\n        if x.isalpha():\n            return x.capitalize()\n        idx_40bd = idx_40bd + (21 + -20)\n    return '-'", "input": "'raruwa'", "output": "'R'", "id": "ConstantUnfoldding_sample_from_sample_60_to_31", "old_id": "sample_60"}
{"code": "def f(text, size):\n    counter = len(text)\n    idx_nw3h = (1 + -1)\n    list_rd85 = range(size-int(size%(55 + -53)))\n    while idx_nw3h < len(list_rd85):\n        i = list_rd85[idx_nw3h]\n        text = ' '+text+' '\n        counter += (5 + -3)\n        if counter >= size:\n            return text\n        idx_nw3h = idx_nw3h + (32 + -31)", "input": "\"7\", 10", "output": "'     7     '", "id": "ConstantUnfoldding_sample_from_sample_64_to_32", "old_id": "sample_64"}
{"code": "def f(x):\n    a = (8 + -8)\n    idx_fo30 = (51 + -51)\n    list_vuys = x.split(' ')\n    while idx_fo30 < len(list_vuys):\n        i = list_vuys[idx_fo30]\n        a += len(i.zfill(len(i)*(15 + -13)))\n        idx_fo30 = idx_fo30 + (48 + -47)\n    return a", "input": "'999893767522480'", "output": "30", "id": "ConstantUnfoldding_sample_from_sample_70_to_33", "old_id": "sample_70"}
{"code": "def f(d, n):\n    idx_jdvw = (48 + -48)\n    list_w2rl = range(n)\n    while idx_jdvw < len(list_w2rl):\n        i = list_w2rl[idx_jdvw]\n        item = d.popitem()\n        d[item[(71 + -70)]] = item[(77 + -77)]\n        idx_jdvw = idx_jdvw + (18 + -17)\n    return d", "input": "{1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1", "output": "{1: 2, 3: 4, 5: 6, 7: 8, 10: 9}", "id": "ConstantUnfoldding_sample_from_sample_71_to_34", "old_id": "sample_71"}
{"code": "def f(text):\n    idx_jh9n = (49 + -49)\n    list_yeul = text\n    while idx_jh9n < len(list_yeul):\n        c = list_yeul[idx_jh9n]\n        if not c.isnumeric():\n            return False\n        idx_jh9n = idx_jh9n + (67 + -66)\n    return bool(text)", "input": "'99'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_72_to_35", "old_id": "sample_72"}
{"code": "def f(text):\n    arr = text.split()\n    result = []\n    idx_knti = (82 + -82)\n    list_5ow8 = arr\n    while idx_knti < len(list_5ow8):\n        item = list_5ow8[idx_knti]\n        if item.endswith('day'):\n            item += 'y'\n        else:\n            item += 'day'\n        result.append(item)\n        idx_knti = idx_knti + (13 + -12)\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "ConstantUnfoldding_sample_from_sample_84_to_36", "old_id": "sample_84"}
{"code": "def f(n):\n    values = {(96 + -96): (41 + -38), (63 + -62): 4.5, (81 + -79): '-'}\n    res = {}\n    idx_c9eb = (1 + -1)\n    list_z26w = list(values.items())\n    while idx_c9eb < len(list_z26w):\n        i, j = list_z26w[idx_c9eb]\n        if i % n != (60 + -58):\n            res[j] = n // (31 + -29)\n        idx_c9eb = idx_c9eb + (52 + -51)\n    return sorted(res)", "input": "12", "output": "[3, 4.5]", "id": "ConstantUnfoldding_sample_from_sample_85_to_37", "old_id": "sample_85"}
{"code": "def f(array):\n    return_arr = []\n    idx_z37r = (72 + -72)\n    list_xpjn = array\n    while idx_z37r < len(list_xpjn):\n        a = list_xpjn[idx_z37r]\n        return_arr.append(a.copy())\n        idx_z37r = idx_z37r + (11 + -10)\n    return return_arr", "input": "[[1, 2, 3], [], [1, 2, 3]]", "output": "[[1, 2, 3], [], [1, 2, 3]]", "id": "ConstantUnfoldding_sample_from_sample_90_to_38", "old_id": "sample_90"}
{"code": "def f(lst):\n    lst.clear()\n    idx_di05 = (56 + -56)\n    list_2v5f = lst\n    while idx_di05 < len(list_2v5f):\n        i = list_2v5f[idx_di05]\n        if i == (77 + -74):\n            return False\n        idx_di05 = idx_di05 + (76 + -75)", "input": "[2, 0]", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_97_to_39", "old_id": "sample_97"}
{"code": "def f(d, rm):\n    res = d.copy()\n    idx_blrm = (49 + -49)\n    list_lfae = rm\n    while idx_blrm < len(list_lfae):\n        k = list_lfae[idx_blrm]\n        if k in res:\n            del res[k]\n        idx_blrm = idx_blrm + (3 + -2)\n    return res", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}", "id": "ConstantUnfoldding_sample_from_sample_100_to_40", "old_id": "sample_100"}
{"code": "def f(text):\n    dic = dict()\n    idx_rq0y = (45 + -45)\n    list_4z97 = text\n    while idx_rq0y < len(list_4z97):\n        char = list_4z97[idx_rq0y]\n        dic[char] = dic.get(char, (66 + -66)) + (38 + -37)\n        idx_rq0y = idx_rq0y + (30 + -29)\n    idx_euib = (51 + -51)\n    list_gz4p = dic\n    while idx_euib < len(list_gz4p):\n        key = list_gz4p[idx_euib]\n        if dic[key] > (64 + -63):\n            dic[key] = (52 + -51)\n        idx_euib = idx_euib + (48 + -47)\n    return dic", "input": "\"a\"", "output": "{'a': 1}", "id": "ConstantUnfoldding_sample_from_sample_104_to_41", "old_id": "sample_104"}
{"code": "def f(nums):\n    count = len(nums)\n    idx_b3ua = (7 + -7)\n    list_ydsw = range((8 + -8), count)\n    while idx_b3ua < len(list_ydsw):\n        i = list_ydsw[idx_b3ua]\n        nums.insert(i, nums[i]*(53 + -51))\n        idx_b3ua = idx_b3ua + (78 + -77)\n    return nums", "input": "[2, 8, -2, 9, 3, 3]", "output": "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]", "id": "ConstantUnfoldding_sample_from_sample_106_to_42", "old_id": "sample_106"}
{"code": "def f(text):\n    result = []\n    idx_3g2z = (55 + -55)\n    list_9uzd = range(len(text))\n    while idx_3g2z < len(list_9uzd):\n        i = list_9uzd[idx_3g2z]\n        if not text[i].isascii():\n            return False\n        elif text[i].isalnum():\n            result.append(text[i].upper())\n        else:\n            result.append(text[i])\n        idx_3g2z = idx_3g2z + (76 + -75)\n    return ''.join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "ConstantUnfoldding_sample_from_sample_107_to_43", "old_id": "sample_107"}
{"code": "def f(text):\n    a = ['']\n    b = ''\n    idx_1wlz = (21 + -21)\n    list_hba0 = text\n    while idx_1wlz < len(list_hba0):\n        i = list_hba0[idx_1wlz]\n        if not i.isspace():\n            a.append(b)\n            b = ''\n        else:\n            b += i\n        idx_1wlz = idx_1wlz + (89 + -88)\n    return len(a)", "input": "\"       \"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_110_to_44", "old_id": "sample_110"}
{"code": "def f(marks):\n    highest = (19 + -19)\n    lowest = (43 + 57)\n    idx_1k5s = (25 + -25)\n    list_cjs8 = marks.values()\n    while idx_1k5s < len(list_cjs8):\n        value = list_cjs8[idx_1k5s]\n        if value > highest:\n            highest = value\n        if value < lowest:\n            lowest = value\n        idx_1k5s = idx_1k5s + (19 + -18)\n    return highest, lowest", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)", "id": "ConstantUnfoldding_sample_from_sample_111_to_45", "old_id": "sample_111"}
{"code": "def f(sentence):\n    ls = list(sentence)\n    idx_1juk = (63 + -63)\n    list_qcz9 = ls\n    while idx_1juk < len(list_qcz9):\n        letter = list_qcz9[idx_1juk]\n        if not letter.istitle():\n            ls.remove(letter)\n        idx_1juk = idx_1juk + (53 + -52)\n    return ''.join(ls)", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'", "id": "ConstantUnfoldding_sample_from_sample_112_to_46", "old_id": "sample_112"}
{"code": "def f(line):\n    count = (41 + -41)\n    a = []\n    idx_7fzq = (97 + -97)\n    list_4z0i = range(len(line))\n    while idx_7fzq < len(list_4z0i):\n        i = list_4z0i[idx_7fzq]\n        count += (99 + -98)\n        if count%(1 + 1)==(47 + -47):\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n        idx_7fzq = idx_7fzq + (48 + -47)\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "ConstantUnfoldding_sample_from_sample_113_to_47", "old_id": "sample_113"}
{"code": "def f(text):\n    res = []\n    idx_kryh = (47 + -47)\n    list_z6cs = text.encode('utf-8')\n    while idx_kryh < len(list_z6cs):\n        ch = list_z6cs[idx_kryh]\n        if ch == (94 + -33):\n            break\n        if ch == (11 + -11):\n            pass\n        res.append(f'{ch}; '.encode('utf-8'))\n        idx_kryh = idx_kryh + (97 + -96)\n    return b''.join(res)", "input": "'os||agx5'", "output": "b'111; 115; 124; 124; 97; 103; 120; 53; '", "id": "ConstantUnfoldding_sample_from_sample_115_to_48", "old_id": "sample_115"}
{"code": "def f(d, count):\n    idx_4jpc = (50 + -50)\n    list_qahg = range(count)\n    while idx_4jpc < len(list_qahg):\n        i = list_qahg[idx_4jpc]\n        if d == {}:\n            break\n        d.popitem()\n        idx_4jpc = idx_4jpc + (17 + -16)\n    return d", "input": "{}, 200", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_116_to_49", "old_id": "sample_116"}
{"code": "def f(numbers):\n    idx_hcq1 = (92 + -92)\n    list_ofgc = range(len(numbers))\n    while idx_hcq1 < len(list_ofgc):\n        i = list_ofgc[idx_hcq1]\n        if numbers.count('3') > (83 + -82):\n            return i\n        idx_hcq1 = idx_hcq1 + (5 + -4)\n    return -(19 + -18)", "input": "\"23157\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_117_to_50", "old_id": "sample_117"}
{"code": "def f(text, chars):\n    num_applies = (7 + -5)\n    extra_chars = ''\n    idx_yok9 = (94 + -94)\n    list_jwhd = range(num_applies)\n    while idx_yok9 < len(list_jwhd):\n        i = list_jwhd[idx_yok9]\n        extra_chars += chars\n        text = text.replace(extra_chars, '')\n        idx_yok9 = idx_yok9 + (40 + -39)\n    return text", "input": "'zbzquiuqnmfkx', 'mk'", "output": "'zbzquiuqnmfkx'", "id": "ConstantUnfoldding_sample_from_sample_118_to_51", "old_id": "sample_118"}
{"code": "def f(text):\n    result = \"\"\n    idx_7ku8 = (34 + -34)\n    list_6kwz = range(len(text))\n    while idx_7ku8 < len(list_6kwz):\n        i = list_6kwz[idx_7ku8]\n        if i % (43 + -41) == (6 + -6):\n            result += text[i].swapcase()\n        else:\n            result += text[i]\n        idx_7ku8 = idx_7ku8 + (11 + -10)\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "ConstantUnfoldding_sample_from_sample_119_to_52", "old_id": "sample_119"}
{"code": "def f(countries):\n    language_country = dict()\n    idx_g3fa = (17 + -17)\n    list_edat = list(countries.items())\n    while idx_g3fa < len(list_edat):\n        country, language = list_edat[idx_g3fa]\n        if language not in language_country:\n            language_country[language] = []\n        language_country[language].append(country)\n        idx_g3fa = idx_g3fa + (18 + -17)\n    return language_country", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_120_to_53", "old_id": "sample_120"}
{"code": "def f(array, elem):\n    idx_q4yh = (31 + -31)\n    list_dr0t = list(enumerate(array))\n    while idx_q4yh < len(list_dr0t):\n        idx, e = list_dr0t[idx_q4yh]\n        if e > elem and array[idx - (41 + -40)] < elem:\n            array.insert(idx, elem)\n        idx_q4yh = idx_q4yh + (27 + -26)\n    return array", "input": "[1, 2, 3, 5, 8], 6", "output": "[1, 2, 3, 5, 6, 8]", "id": "ConstantUnfoldding_sample_from_sample_123_to_54", "old_id": "sample_123"}
{"code": "def f(text, res):\n    idx_7bx3 = (97 + -97)\n    list_oti7 = '*\\n\"'\n    while idx_7bx3 < len(list_oti7):\n        c = list_oti7[idx_7bx3]\n        text = text.replace(c, '!' + str(res))\n        idx_7bx3 = idx_7bx3 + (21 + -20)\n    if text.startswith('!'):\n        text = text[len(str(res)):]\n    return text", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'", "id": "ConstantUnfoldding_sample_from_sample_125_to_55", "old_id": "sample_125"}
{"code": "def f(text):\n    odd = ''\n    even = ''\n    idx_hxqn = (57 + -57)\n    list_g2jr = list(enumerate(text))\n    while idx_hxqn < len(list_g2jr):\n        i, c = list_g2jr[idx_hxqn]\n        if i % (26 + -24) == (53 + -53):\n            even += c\n        else:\n            odd += c\n        idx_hxqn = idx_hxqn + (48 + -47)\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "ConstantUnfoldding_sample_from_sample_128_to_56", "old_id": "sample_128"}
{"code": "def f(m):\n    items = list(m.items())\n    idx_ao5w = (17 + -17)\n    list_vj0o = range(len(items)-(40 + -38), -(76 + -75), -(24 + -23))\n    while idx_ao5w < len(list_vj0o):\n        i = list_vj0o[idx_ao5w]\n        tmp = items[i]\n        items[i] = items[i+(59 + -58)] \n        items[i+(4 + -3)] = tmp\n        idx_ao5w = idx_ao5w + (74 + -73)\n    return ['{}={}', '{1}={0}'][len(items) % (23 + -21)].format(\n        *m.keys(), **m\n    )", "input": "{'l':4, 'h':6, 'o':9}", "output": "'h=l'", "id": "ConstantUnfoldding_sample_from_sample_130_to_57", "old_id": "sample_130"}
{"code": "def f(nums, elements):\n    result = []\n    idx_3hqd = (94 + -94)\n    list_i1v2 = range(len(elements))\n    while idx_3hqd < len(list_i1v2):\n        i = list_i1v2[idx_3hqd]\n        result.append(nums.pop())\n        idx_3hqd = idx_3hqd + (81 + -80)\n    return nums", "input": "[7, 1, 2, 6, 0, 2], [9, 0, 3]", "output": "[7, 1, 2]", "id": "ConstantUnfoldding_sample_from_sample_133_to_58", "old_id": "sample_133"}
{"code": "def f(n):\n    t = (16 + -16)\n    b = ''\n    digits = list(map(int, str(n)))\n    idx_mnop = (5 + -5)\n    list_8s7u = digits\n    while idx_mnop < len(list_8s7u):\n        d = list_8s7u[idx_mnop]\n        if d == (96 + -96): t += (19 + -18)\n        else: break\n        idx_mnop = idx_mnop + (54 + -53)\n    idx_67i2 = (85 + -85)\n    list_ywqa = range(t)\n    while idx_67i2 < len(list_ywqa):\n        _ = list_ywqa[idx_67i2]\n        b += str((38 + -37)) + '0' + str((66 + -62))\n        idx_67i2 = idx_67i2 + (97 + -96)\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "ConstantUnfoldding_sample_from_sample_134_to_59", "old_id": "sample_134"}
{"code": "def f(nums):\n    count = (28 + -28)\n    idx_go2z = (8 + -8)\n    list_5f8r = range(len(nums))\n    while idx_go2z < len(list_5f8r):\n        i = list_5f8r[idx_go2z]\n        if len(nums) == (10 + -10):\n            break\n        if count % (78 + -76) == (68 + -68):\n            nums.pop()\n        else:\n            nums.pop((100 + -100))\n        count += (66 + -65)\n        idx_go2z = idx_go2z + (70 + -69)\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_137_to_60", "old_id": "sample_137"}
{"code": "def f(text, chars):\n    listchars = list(chars)\n    first = listchars.pop()\n    idx_nkrx = (91 + -91)\n    list_jh38 = listchars\n    while idx_nkrx < len(list_jh38):\n        i = list_jh38[idx_nkrx]\n        text = text[(55 + -55):text.find(i)]+i+text[text.find(i)+(94 + -93):]\n        idx_nkrx = idx_nkrx + (35 + -34)\n    return text", "input": "'tflb omn rtt', 'm'", "output": "'tflb omn rtt'", "id": "ConstantUnfoldding_sample_from_sample_138_to_61", "old_id": "sample_138"}
{"code": "def f(first, second):\n    if len(first) < (89 + -79) or len(second) < (61 + -51):\n        return 'no'\n    idx_boq5 = (72 + -72)\n    list_uwqj = range((57 + -52))\n    while idx_boq5 < len(list_uwqj):\n        i = list_uwqj[idx_boq5]\n        if first[i] != second[i]:\n            return 'no'\n        idx_boq5 = idx_boq5 + (60 + -59)\n    first.extend(second)\n    return first", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_139_to_62", "old_id": "sample_139"}
{"code": "def f(vectors):\n    sorted_vecs = []\n    idx_mqoe = (83 + -83)\n    list_9bvl = vectors\n    while idx_mqoe < len(list_9bvl):\n        vec = list_9bvl[idx_mqoe]\n        vec.sort()\n        sorted_vecs.append(vec)\n        idx_mqoe = idx_mqoe + (75 + -74)\n    return sorted_vecs", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_144_to_63", "old_id": "sample_144"}
{"code": "def f(single_digit):\n    result = []\n    idx_azv1 = (80 + -80)\n    list_2xmg = range((11 + -10), (73 + -62))\n    while idx_azv1 < len(list_2xmg):\n        c = list_2xmg[idx_azv1]\n        if c != single_digit:\n            result.append(c)\n        idx_azv1 = idx_azv1 + (44 + -43)\n    return result", "input": "5", "output": "[1, 2, 3, 4, 6, 7, 8, 9, 10]", "id": "ConstantUnfoldding_sample_from_sample_146_to_64", "old_id": "sample_146"}
{"code": "def f(tuple_list, joint):\n    string = ''\n    idx_we2o = (14 + -14)\n    list_vqzr = tuple_list\n    while idx_we2o < len(list_vqzr):\n        num = list_vqzr[idx_we2o]\n        string += dict.fromkeys(str(num), joint * len(str(num))).popitem()[(39 + -39)] + joint\n        idx_we2o = idx_we2o + (30 + -29)\n    return string", "input": "(32332, 23543, 132323, 33300), ','", "output": "'2,4,2,0,'", "id": "ConstantUnfoldding_sample_from_sample_149_to_65", "old_id": "sample_149"}
{"code": "def f(numbers, index):\n    idx_g8dk = (100 + -100)\n    list_5wsb = numbers[index:]\n    while idx_g8dk < len(list_5wsb):\n        n = list_5wsb[idx_g8dk]\n        numbers.insert(index, n)\n        index += (6 + -5)\n        idx_g8dk = idx_g8dk + (31 + -30)\n    return numbers[:index]", "input": "[-2, 4, -4], 0", "output": "[-2, 4, -4]", "id": "ConstantUnfoldding_sample_from_sample_150_to_66", "old_id": "sample_150"}
{"code": "def f(text):\n    idx_2zae = (15 + -15)\n    list_o93s = text\n    while idx_2zae < len(list_o93s):\n        c = list_o93s[idx_2zae]\n        if c.isdigit():\n            if c == '0':\n                c = '.'\n            else:\n                c = '0' if c != '1' else '.'\n        idx_2zae = idx_2zae + (27 + -26)\n    return ''.join(list(text)).replace('.', '0')", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'", "id": "ConstantUnfoldding_sample_from_sample_151_to_67", "old_id": "sample_151"}
{"code": "def f(text):\n    n = (23 + -23)\n    idx_z6g1 = (84 + -84)\n    list_zjn5 = text\n    while idx_z6g1 < len(list_zjn5):\n        char = list_zjn5[idx_z6g1]\n        if char.isupper():\n            n += (97 + -96)\n        idx_z6g1 = idx_z6g1 + (51 + -50)\n    return n", "input": "''.join(['A'] * 20)", "output": "20", "id": "ConstantUnfoldding_sample_from_sample_152_to_68", "old_id": "sample_152"}
{"code": "def f(ip, n):\n    i = (97 + -97)\n    out = ''\n    idx_0cts = (52 + -52)\n    list_k6nt = ip\n    while idx_0cts < len(list_k6nt):\n        c = list_k6nt[idx_0cts]\n        if i == n:\n            out += '\\n'\n            i = (82 + -82)\n        i += (17 + -16)\n        out += c\n        idx_0cts = idx_0cts + (73 + -72)\n    return out", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'", "id": "ConstantUnfoldding_sample_from_sample_155_to_69", "old_id": "sample_155"}
{"code": "def f(phrase):\n    ans = (30 + -30)\n    idx_ct7s = (72 + -72)\n    list_8unr = phrase.split()\n    while idx_ct7s < len(list_8unr):\n        w = list_8unr[idx_ct7s]\n        idx_5i2v = (83 + -83)\n        list_iq7t = w\n        while idx_5i2v < len(list_iq7t):\n            ch = list_iq7t[idx_5i2v]\n            if ch == \"0\":\n                ans += (27 + -26)\n            idx_5i2v = idx_5i2v + (63 + -62)\n        idx_ct7s = idx_ct7s + (89 + -88)\n    return ans", "input": "\"aboba 212 has 0 digits\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_157_to_70", "old_id": "sample_157"}
{"code": "def f(arr):\n    n = [item for item in arr if item%(76 + -74) == (83 + -83)]\n    m = n+arr\n    idx_sqvj = (20 + -20)\n    list_6tqk = m\n    while idx_sqvj < len(list_6tqk):\n        i = list_6tqk[idx_sqvj]\n        if m.index(i) >= len(n):\n            m.remove(i)\n        idx_sqvj = idx_sqvj + (88 + -87)\n    return m", "input": "[3, 6, 4, -2, 5]", "output": "[6, 4, -2, 6, 4, -2]", "id": "ConstantUnfoldding_sample_from_sample_158_to_71", "old_id": "sample_158"}
{"code": "def f(st):\n    swapped = ''\n    idx_kycf = (95 + -95)\n    list_qy36 = reversed(st)\n    while idx_kycf < len(list_qy36):\n        ch = list_qy36[idx_kycf]\n        swapped += ch.swapcase()\n        idx_kycf = idx_kycf + (81 + -80)\n    return swapped", "input": "'RTiGM'", "output": "'mgItr'", "id": "ConstantUnfoldding_sample_from_sample_159_to_72", "old_id": "sample_159"}
{"code": "def f(text):\n    result = ''\n    idx_tc1g = (97 + -97)\n    list_nud8 = text\n    while idx_tc1g < len(list_nud8):\n        char = list_nud8[idx_tc1g]\n        if char.isalnum():\n            result += char.upper()\n        idx_tc1g = idx_tc1g + (15 + -14)\n    return result", "input": "'\u0441 bishop.Swift'", "output": "'\u0421BISHOPSWIFT'", "id": "ConstantUnfoldding_sample_from_sample_162_to_73", "old_id": "sample_162"}
{"code": "def f(graph):\n    new_graph = {}\n    idx_vb3k = (50 + -50)\n    list_p8fc = list(graph.items())\n    while idx_vb3k < len(list_p8fc):\n        key, value = list_p8fc[idx_vb3k]\n        new_graph[key] = {}\n        idx_pw82 = (57 + -57)\n        list_uiaw = value\n        while idx_pw82 < len(list_uiaw):\n            subkey = list_uiaw[idx_pw82]\n            new_graph[key][subkey] = ''\n            idx_pw82 = idx_pw82 + (46 + -45)\n        idx_vb3k = idx_vb3k + (86 + -85)\n    return new_graph", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_166_to_74", "old_id": "sample_166"}
{"code": "def f(text):\n    ls = list(text)\n    total = (len(text) - (3 + -2)) * (78 + -76)\n    idx_kc6y = (62 + -62)\n    list_rn2s = range((82 + -81), total+(63 + -62))\n    while idx_kc6y < len(list_rn2s):\n        i = list_rn2s[idx_kc6y]\n        if i % (99 + -97):\n            ls.append('+')\n        else:\n            ls.insert((8 + -8), '+')\n        idx_kc6y = idx_kc6y + (32 + -31)\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "ConstantUnfoldding_sample_from_sample_169_to_75", "old_id": "sample_169"}
{"code": "def f(nums):\n    count = len(nums) // (79 + -77)\n    idx_2dov = (37 + -37)\n    list_9hys = range(count)\n    while idx_2dov < len(list_9hys):\n        _ = list_9hys[idx_2dov]\n        nums.pop((23 + -23))\n        idx_2dov = idx_2dov + (65 + -64)\n    return nums", "input": "[3, 4, 1, 2, 3]", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_171_to_76", "old_id": "sample_171"}
{"code": "def f(array):\n    idx_fvzl = (78 + -78)\n    list_16n7 = range(len(array))\n    while idx_fvzl < len(list_16n7):\n        i = list_16n7[idx_fvzl]\n        if array[i] < (61 + -61):\n            array.pop(i)\n        idx_fvzl = idx_fvzl + (9 + -8)\n    return array", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_172_to_77", "old_id": "sample_172"}
{"code": "def f(list_x):\n    item_count = len(list_x)\n    new_list = []\n    idx_1znq = (96 + -96)\n    list_p86e = range(item_count)\n    while idx_1znq < len(list_p86e):\n        i = list_p86e[idx_1znq]\n        new_list.append(list_x.pop())\n        idx_1znq = idx_1znq + (41 + -40)\n    return new_list", "input": "[5, 8, 6, 8, 4]", "output": "[4, 8, 6, 8, 5]", "id": "ConstantUnfoldding_sample_from_sample_173_to_78", "old_id": "sample_173"}
{"code": "def f(s, amount):\n    lines = s.splitlines()\n    w = max(map(lambda l: l.rfind(' '), lines))\n    ls = [[l, (w + (12 + -11)) * amount - l.rfind(' ')] for l in lines]\n    idx_flq3 = (34 + -34)\n    list_ascq = list(enumerate(ls))\n    while idx_flq3 < len(list_ascq):\n        i, line = list_ascq[idx_flq3]\n        ls[i][(90 + -90)] = line[(67 + -67)] + ' ' * line[(39 + -38)]\n        idx_flq3 = idx_flq3 + (87 + -86)\n    return '\\n'.join(map(lambda l: l[(17 + -17)], ls))", "input": "'\\n', 2", "output": "' '", "id": "ConstantUnfoldding_sample_from_sample_175_to_79", "old_id": "sample_175"}
{"code": "def f(text):\n    text = list(text)\n    idx_5lq0 = (70 + -70)\n    list_2tgd = range(len(text))\n    while idx_5lq0 < len(list_2tgd):\n        i = list_2tgd[idx_5lq0]\n        if i % (82 + -80) == (8 + -7):\n            text[i] = text[i].swapcase()\n        idx_5lq0 = idx_5lq0 + (41 + -40)\n    return ''.join(text)", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'", "id": "ConstantUnfoldding_sample_from_sample_177_to_80", "old_id": "sample_177"}
{"code": "def f(nums):\n    # Pass in a copy to avoid modifying nums\n    nums = nums[:]\n    count = len(nums)\n    idx_0a7t = (11 + -11)\n    list_nicz = range(-count+(19 + -18), (65 + -65))\n    while idx_0a7t < len(list_nicz):\n        i = list_nicz[idx_0a7t]\n        nums.insert((90 + -90), nums[i])\n        idx_0a7t = idx_0a7t + (17 + -16)\n    return nums", "input": "[7, 1, 2, 6, 0, 2]", "output": "[2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2]", "id": "ConstantUnfoldding_sample_from_sample_179_to_81", "old_id": "sample_179"}
{"code": "def f(s):\n    count = (23 + -23)\n    digits = \"\"\n    idx_qkme = (86 + -86)\n    list_ayvg = s\n    while idx_qkme < len(list_ayvg):\n        c = list_ayvg[idx_qkme]\n        if c.isdigit():\n            count += (100 + -99)\n            digits += c\n        idx_qkme = idx_qkme + (4 + -3)\n    return [digits, count]", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]", "id": "ConstantUnfoldding_sample_from_sample_181_to_82", "old_id": "sample_181"}
{"code": "def f(text):\n    ls = text.split()\n    lines = \" \".join(ls[::(79 + -76)]).splitlines()\n    res = []\n    idx_ozba = (69 + -69)\n    list_ly8b = range((1 + 1))\n    while idx_ozba < len(list_ly8b):\n        i = list_ly8b[idx_ozba]\n        ln = ls[(8 + -7)::(9 + -6)]\n        if (97 + -94) * i + (70 + -69) < len(ln):\n            res.append(\" \".join(ln[(47 + -44) * i:(62 + -59) * (i + (7 + -6))]))\n        idx_ozba = idx_ozba + (88 + -87)\n    return lines + res", "input": "\"echo hello!!! nice!\"", "output": "['echo']", "id": "ConstantUnfoldding_sample_from_sample_183_to_83", "old_id": "sample_183"}
{"code": "def f(digits):\n    digits.reverse()\n    if len(digits) < (68 + -66):\n        return digits\n    idx_z1mk = (83 + -83)\n    list_81ld = range((87 + -87), len(digits), (69 + -67))\n    while idx_z1mk < len(list_81ld):\n        i = list_81ld[idx_z1mk]\n        digits[i], digits[i+(10 + -9)] = digits[i+(59 + -58)], digits[i]\n        idx_z1mk = idx_z1mk + (59 + -58)\n    return digits", "input": "[1,2]", "output": "[1, 2]", "id": "ConstantUnfoldding_sample_from_sample_184_to_84", "old_id": "sample_184"}
{"code": "def f(L):\n    N = len(L)\n    idx_9vqm = (73 + -73)\n    list_of39 = range((87 + -86), N//(3 + -1) + (36 + -35))\n    while idx_9vqm < len(list_of39):\n        k = list_of39[idx_9vqm]\n        i = k - (46 + -45)\n        j = N - k\n        while i < j:\n            # swap elements:\n            L[i], L[j] = L[j], L[i]\n            # update i, j:\n            i += (58 + -57)\n            j -= (11 + -10)\n        idx_9vqm = idx_9vqm + (45 + -44)\n    return L", "input": "[16, 14, 12, 7, 9, 11]", "output": "[11, 14, 7, 12, 9, 16]", "id": "ConstantUnfoldding_sample_from_sample_185_to_85", "old_id": "sample_185"}
{"code": "def f(d, index):\n    length = len(d.items())\n    idx = index % length\n    v = d.popitem()[(9 + -8)]\n    idx_sqjr = (23 + -23)\n    list_7qyp = range(idx)\n    while idx_sqjr < len(list_7qyp):\n        _ = list_7qyp[idx_sqjr]\n        d.popitem()\n        idx_sqjr = idx_sqjr + (23 + -22)\n    return v", "input": "{27:39}, 1", "output": "39", "id": "ConstantUnfoldding_sample_from_sample_187_to_86", "old_id": "sample_187"}
{"code": "def f(strings):\n    new_strings = []\n    idx_m9bg = (97 + -97)\n    list_xr7o = strings\n    while idx_m9bg < len(list_xr7o):\n        string = list_xr7o[idx_m9bg]\n        first_two = string[:(74 + -72)]\n        if first_two.startswith('a') or first_two.startswith('p'):\n            new_strings.append(first_two)\n        idx_m9bg = idx_m9bg + (1 + 0)\n\n    return new_strings", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']", "id": "ConstantUnfoldding_sample_from_sample_188_to_87", "old_id": "sample_188"}
{"code": "def f(out, mapping):\n    idx_okcy = (74 + -74)\n    list_nrku = mapping\n    while idx_okcy < len(list_nrku):\n        key = list_nrku[idx_okcy]\n        out.format_map(mapping)\n        if len(re.findall(r'{\\w}', out)) == (51 + -51):\n            break\n        mapping[key][(25 + -24)] = mapping[key][(73 + -72)][::-(86 + -85)]\n        idx_okcy = idx_okcy + (29 + -28)\n    return out", "input": "\"{{{{}}}}\", {}", "output": "'{{{{}}}}'", "id": "ConstantUnfoldding_sample_from_sample_189_to_88", "old_id": "sample_189"}
{"code": "def f(text):\n    short = ''\n    idx_cj62 = (20 + -20)\n    list_qnyc = text\n    while idx_cj62 < len(list_qnyc):\n        c = list_qnyc[idx_cj62]\n        if(c.islower()):\n            short += c\n        idx_cj62 = idx_cj62 + (63 + -62)\n    return short", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'", "id": "ConstantUnfoldding_sample_from_sample_190_to_89", "old_id": "sample_190"}
{"code": "def f(text):\n    idx_msrq = (16 + -16)\n    list_txzw = ['acs', 'asp', 'scn']\n    while idx_msrq < len(list_txzw):\n        p = list_txzw[idx_msrq]\n        text = text.removeprefix(p) + ' '\n        idx_msrq = idx_msrq + (45 + -44)\n    return text.removeprefix(' ')[:-(68 + -67)]", "input": "'ilfdoirwirmtoibsac'", "output": "'ilfdoirwirmtoibsac  '", "id": "ConstantUnfoldding_sample_from_sample_195_to_90", "old_id": "sample_195"}
{"code": "def f(text):\n    chars = []\n    idx_deq6 = (87 + -87)\n    list_5jwy = text\n    while idx_deq6 < len(list_5jwy):\n        c = list_5jwy[idx_deq6]\n        if c.isdigit():\n            chars.append(c)\n        idx_deq6 = idx_deq6 + (63 + -62)\n    return ''.join(chars[::-(77 + -76)])", "input": "'--4yrw 251-//4 6p'", "output": "'641524'", "id": "ConstantUnfoldding_sample_from_sample_201_to_91", "old_id": "sample_201"}
{"code": "def f(a):\n    idx_2zsg = (14 + -14)\n    list_2x6m = range((93 + -83))\n    while idx_2zsg < len(list_2x6m):\n        _ = list_2x6m[idx_2zsg]\n        idx_rva6 = (80 + -80)\n        list_n4tc = range(len(a))\n        while idx_rva6 < len(list_n4tc):\n            j = list_n4tc[idx_rva6]\n            if a[j] != '#':\n                a = a[j:]\n                break\n            idx_rva6 = idx_rva6 + (70 + -69)\n        idx_2zsg = idx_2zsg + (88 + -87)\n    while a[-(23 + -22)] == '#':\n        a = a[:-(65 + -64)]\n    return a", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'", "id": "ConstantUnfoldding_sample_from_sample_205_to_92", "old_id": "sample_205"}
{"code": "def f(commands):\n    d = {}\n    idx_2yhd = (40 + -40)\n    list_fkvx = commands\n    while idx_2yhd < len(list_fkvx):\n        c = list_fkvx[idx_2yhd]\n        d.update(c)\n        idx_2yhd = idx_2yhd + (13 + -12)\n    return d", "input": "[{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]", "output": "{'brown': 2, 'blue': 5, 'bright': 4}", "id": "ConstantUnfoldding_sample_from_sample_207_to_93", "old_id": "sample_207"}
{"code": "def f(items):\n    result = []\n    idx_73ky = (39 + -39)\n    list_ogwu = items\n    while idx_73ky < len(list_ogwu):\n        item = list_ogwu[idx_73ky]\n        idx_5yli = (12 + -12)\n        list_2mho = item\n        while idx_5yli < len(list_2mho):\n            d = list_2mho[idx_5yli]\n            if not d.isdigit():\n                result.append(d)\n            idx_5yli = idx_5yli + (80 + -79)\n        idx_73ky = idx_73ky + (15 + -14)\n    return result", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']", "id": "ConstantUnfoldding_sample_from_sample_208_to_94", "old_id": "sample_208"}
{"code": "def f(s):\n    count = (74 + -74)\n    idx_mpih = (42 + -42)\n    list_5lc7 = s\n    while idx_mpih < len(list_5lc7):\n        c = list_5lc7[idx_mpih]\n        if s.rindex(c) != s.index(c):\n            count+=(69 + -68)\n        idx_mpih = idx_mpih + (57 + -56)\n    return count", "input": "\"abca dea ead\"", "output": "10", "id": "ConstantUnfoldding_sample_from_sample_211_to_95", "old_id": "sample_211"}
{"code": "def f(nums):\n    idx_sndt = (74 + -74)\n    list_r0ax = range(len(nums) - (95 + -94))\n    while idx_sndt < len(list_r0ax):\n        _ = list_r0ax[idx_sndt]\n        nums.reverse()\n        idx_sndt = idx_sndt + (75 + -74)\n    return nums", "input": "[1, -9, 7, 2, 6, -3, 3]", "output": "[1, -9, 7, 2, 6, -3, 3]", "id": "ConstantUnfoldding_sample_from_sample_212_to_96", "old_id": "sample_212"}
{"code": "def f(letters):\n    count = (37 + -37)\n    idx_1rie = (57 + -57)\n    list_jiek = letters\n    while idx_1rie < len(list_jiek):\n        l = list_jiek[idx_1rie]\n        if l.isdigit():\n            count += (37 + -36)\n        idx_1rie = idx_1rie + (97 + -96)\n    return count", "input": "\"dp ef1 gh2\"", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_216_to_97", "old_id": "sample_216"}
{"code": "def f(s1, s2):\n    idx_z96l = (65 + -65)\n    list_mk1n = range((57 + -57), len(s2)+len(s1))\n    while idx_z96l < len(list_mk1n):\n        k = list_mk1n[idx_z96l]\n        s1 += s1[(69 + -69)]\n        if s1.find(s2) >= (60 + -60):\n            return True\n        idx_z96l = idx_z96l + (76 + -75)\n    return False", "input": "\"Hello\", \")\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_219_to_98", "old_id": "sample_219"}
{"code": "def f(text, m, n):\n    text = \"{}{}{}\".format(text, text[:m], text[n:])\n    result = \"\"\n    idx_ejpm = (20 + -20)\n    list_e6pn = range(n, len(text)-m)\n    while idx_ejpm < len(list_e6pn):\n        i = list_e6pn[idx_ejpm]\n        result = text[i] + result\n        idx_ejpm = idx_ejpm + (39 + -38)\n    return result", "input": "\"abcdefgabc\", 1, 2", "output": "'bagfedcacbagfedc'", "id": "ConstantUnfoldding_sample_from_sample_220_to_99", "old_id": "sample_220"}
{"code": "def f(array, target):\n    count, i = (75 + -75), (35 + -34)\n    idx_xfw8 = (10 + -10)\n    list_j0qe = range((86 + -85), len(array))\n    while idx_xfw8 < len(list_j0qe):\n        j = list_j0qe[idx_xfw8]\n        if ((array[j] > array[j-(37 + -36)]) and (array[j] <= target)): count += i\n        elif array[j] <= array[j-(5 + -4)]: i = (73 + -72)\n        else: i += (51 + -50)\n        idx_xfw8 = idx_xfw8 + (92 + -91)\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_223_to_100", "old_id": "sample_223"}
{"code": "def f(nums):\n    idx_0oih = (17 + -17)\n    list_rl52 = range(len(nums))\n    while idx_0oih < len(list_rl52):\n        i = list_rl52[idx_0oih]\n        if nums[i] % (63 + -60) == (75 + -75):\n            nums.append(nums[i])\n        idx_0oih = idx_0oih + (84 + -83)\n    return nums", "input": "[1, 3]", "output": "[1, 3, 3]", "id": "ConstantUnfoldding_sample_from_sample_226_to_101", "old_id": "sample_226"}
{"code": "def f(dic, value):\n    result = []\n    idx_0zvl = (99 + -99)\n    list_2xo3 = dic\n    while idx_0zvl < len(list_2xo3):\n        e = list_2xo3[idx_0zvl]\n        result.append(e[(94 + -94)])\n        if e[(92 + -91)] == value:\n            result.reverse()\n        else:\n            result.append(e[(42 + -41)])\n        idx_0zvl = idx_0zvl + (86 + -85)\n    return result", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']", "id": "ConstantUnfoldding_sample_from_sample_229_to_102", "old_id": "sample_229"}
{"code": "def f(text, changes):\n    result = ''\n    count = (34 + -34)\n    changes = list(changes)\n    idx_4xwj = (16 + -16)\n    list_dx4k = text\n    while idx_4xwj < len(list_dx4k):\n        char = list_dx4k[idx_4xwj]\n        result += char if char in 'e' else changes[count % len(changes)]\n        count += ((74 + -73) if char not in 'e' else (38 + -38))\n        idx_4xwj = idx_4xwj + (56 + -55)\n    return result", "input": "'fssnvd', 'yes'", "output": "'yesyes'", "id": "ConstantUnfoldding_sample_from_sample_232_to_103", "old_id": "sample_232"}
{"code": "def f(xs):\n    idx_9sni = (29 + -29)\n    list_4m95 = reversed(range(-len(xs)-(32 + -31), -(50 + -49)))\n    while idx_9sni < len(list_4m95):\n        idx = list_4m95[idx_9sni]\n        xs.insert(idx, xs.pop((70 + -70)))\n        idx_9sni = idx_9sni + (75 + -74)\n    return xs", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_233_to_104", "old_id": "sample_233"}
{"code": "def f(array, arr):\n    result = []\n    idx_o27n = (10 + -10)\n    list_osgf = arr\n    while idx_o27n < len(list_osgf):\n        s = list_osgf[idx_o27n]\n        result += list(filter(lambda l: l != '', s.split(arr[array.index(s)])))\n        idx_o27n = idx_o27n + (52 + -51)\n    return result", "input": "[], []", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_235_to_105", "old_id": "sample_235"}
{"code": "def f(array):\n    if len(array) == (87 + -86):\n        return ''.join(array)\n    result = list(array)\n    i = (17 + -17)\n    while i < len(array)-(33 + -32):\n        idx_ndt2 = (6 + -6)\n        list_t6dy = range((88 + -86))\n        while idx_ndt2 < len(list_t6dy):\n            j = list_t6dy[idx_ndt2]\n            result[i*(33 + -31)] = array[i]\n            i += (99 + -98)\n            idx_ndt2 = idx_ndt2 + (31 + -30)\n    return ''.join(result)", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'", "id": "ConstantUnfoldding_sample_from_sample_236_to_106", "old_id": "sample_236"}
{"code": "def f(ls, n):\n    answer = (44 + -44)\n    idx_pgk7 = (11 + -11)\n    list_a4u1 = ls\n    while idx_pgk7 < len(list_a4u1):\n        i = list_a4u1[idx_pgk7]\n        if i[(34 + -34)] == n:\n            answer = i\n        idx_pgk7 = idx_pgk7 + (49 + -48)\n    return answer", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]", "id": "ConstantUnfoldding_sample_from_sample_238_to_107", "old_id": "sample_238"}
{"code": "def f(text, symbols):\n    count = (14 + -14)\n    if symbols:\n        idx_76x0 = (17 + -17)\n        list_dykb = symbols\n        while idx_76x0 < len(list_dykb):\n            i = list_dykb[idx_76x0]\n            count += (31 + -30)\n            idx_76x0 = idx_76x0 + (63 + -62)\n        text = text * count\n    return text.rjust(len(text) + count*(42 + -40))[:-(60 + -58)]", "input": "'', 'BC1ty'", "output": "'        '", "id": "ConstantUnfoldding_sample_from_sample_244_to_108", "old_id": "sample_244"}
{"code": "def f(haystack, needle):\n    idx_8a0c = (53 + -53)\n    list_2byp = range(haystack.find(needle), -(100 + -99), -(11 + -10))\n    while idx_8a0c < len(list_2byp):\n        i = list_2byp[idx_8a0c]\n        if haystack[i:] == needle:\n            return i\n        idx_8a0c = idx_8a0c + (66 + -65)\n    return -(75 + -74)", "input": "\"345gerghjehg\", \"345\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_246_to_109", "old_id": "sample_246"}
{"code": "def f(s):\n    count = {}\n    idx_3ljq = (60 + -60)\n    list_muci = s\n    while idx_3ljq < len(list_muci):\n        i = list_muci[idx_3ljq]\n        if i.islower():\n            count[i.lower()] = s.count(i.lower()) + count.get(i.lower(), (5 + -5))\n        else:\n            count[i.lower()] = s.count(i.upper()) + count.get(i.lower(), (56 + -56))\n        idx_3ljq = idx_3ljq + (26 + -25)\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "ConstantUnfoldding_sample_from_sample_249_to_110", "old_id": "sample_249"}
{"code": "def f(text):\n    count = len(text)\n    idx_ey5x = (51 + -51)\n    list_7yfh = range(-count+(73 + -72), (74 + -74))\n    while idx_ey5x < len(list_7yfh):\n        i = list_7yfh[idx_ey5x]\n        text = text + text[i]\n        idx_ey5x = idx_ey5x + (88 + -87)\n    return text", "input": "'wlace A'", "output": "'wlace Alc l  '", "id": "ConstantUnfoldding_sample_from_sample_250_to_111", "old_id": "sample_250"}
{"code": "def f(messages):\n    phone_code = \"+353\"\n    result = []\n    idx_o5mk = (99 + -99)\n    list_nc81 = messages\n    while idx_o5mk < len(list_nc81):\n        message = list_nc81[idx_o5mk]\n        message.extend(phone_code)\n        result.append(\";\".join(message))\n        idx_o5mk = idx_o5mk + (34 + -33)\n    return \". \".join(result)", "input": "[['Marie','Nelson','Oscar']]", "output": "'Marie;Nelson;Oscar;+;3;5;3'", "id": "ConstantUnfoldding_sample_from_sample_251_to_112", "old_id": "sample_251"}
{"code": "def f(text):\n    ls = []\n    idx_t57p = (79 + -79)\n    list_pm8v = text\n    while idx_t57p < len(list_pm8v):\n        x = list_pm8v[idx_t57p]\n        ls.append(x.splitlines())\n        idx_t57p = idx_t57p + (80 + -79)\n    return ls", "input": "['Hello World\\n\"I am String\"']", "output": "[['Hello World', '\"I am String\"']]", "id": "ConstantUnfoldding_sample_from_sample_257_to_113", "old_id": "sample_257"}
{"code": "thigh_o_one = [(97 + -96), (17 + -15), (18 + -11), (49 + -41), (8 + 1)]\nthigh_o_two = [(3 + -2), (83 + -81), (7 + 0), (57 + -48)]\ndef f(L, m, start, step):\n    L.insert(start, m)\n    idx_cuf8 = (1 + -1)\n    list_nsha = range(start-(45 + -44), (66 + -66), -step)\n    while idx_cuf8 < len(list_nsha):\n        x = list_nsha[idx_cuf8]\n        start -= (58 + -57)\n        L.insert(start, L.pop(L.index(m)-(42 + -41)))\n        idx_cuf8 = idx_cuf8 + (24 + -23)\n    return L", "input": "thigh_o_two[:], 3, 3, 2", "output": "[1, 2, 7, 3, 9]", "id": "ConstantUnfoldding_sample_from_sample_258_to_114", "old_id": "sample_258"}
{"code": "def f(text):\n    new_text = []\n    idx_1i9c = (90 + -90)\n    list_l49f = text\n    while idx_1i9c < len(list_l49f):\n        character = list_l49f[idx_1i9c]\n        if character.isupper():\n            new_text.insert(len(new_text) // (86 + -84), character)\n        idx_1i9c = idx_1i9c + (27 + -26)\n    if len(new_text) == (93 + -93):\n        new_text = ['-']\n    return ''.join(new_text)", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'", "id": "ConstantUnfoldding_sample_from_sample_259_to_115", "old_id": "sample_259"}
{"code": "def f(nums, target):\n    lows, higgs = [], []\n    idx_mz4f = (57 + -57)\n    list_iuw3 = nums\n    while idx_mz4f < len(list_iuw3):\n        i = list_iuw3[idx_mz4f]\n        if i < target:\n            lows.append(i)\n        else:\n            higgs.append(i)\n        idx_mz4f = idx_mz4f + (80 + -79)\n    lows.clear()\n    return lows, higgs", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])", "id": "ConstantUnfoldding_sample_from_sample_261_to_116", "old_id": "sample_261"}
{"code": "def f(nums):\n    count = len(nums)\n    score = {(28 + -28): \"F\", (85 + -84): \"E\", (26 + -24): \"D\", (50 + -47): \"C\", (43 + -39): \"B\", (100 + -95): \"A\", (91 + -85): \"\"}\n    result = []\n    idx_nwxa = (57 + -57)\n    list_zxas = range(count)\n    while idx_nwxa < len(list_zxas):\n        i = list_zxas[idx_nwxa]\n        result.append(score.get(nums[i]))\n        idx_nwxa = idx_nwxa + (36 + -35)\n    return ''.join(result)", "input": "[4, 5]", "output": "'BA'", "id": "ConstantUnfoldding_sample_from_sample_262_to_117", "old_id": "sample_262"}
{"code": "def f(base, delta):\n    idx_bl4u = (36 + -36)\n    list_vncd = range(len(delta))\n    while idx_bl4u < len(list_vncd):\n        j = list_vncd[idx_bl4u]\n        idx_ltov = (21 + -21)\n        list_g3zt = range(len(base))\n        while idx_ltov < len(list_g3zt):\n            i = list_g3zt[idx_ltov]\n            if base[i] == delta[j][(39 + -39)]:\n                assert delta[j][(86 + -85)] != base[i]\n                base[i] = delta[j][(12 + -11)]\n            idx_ltov = idx_ltov + (99 + -98)\n        idx_bl4u = idx_bl4u + (80 + -79)\n    return base", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']", "id": "ConstantUnfoldding_sample_from_sample_263_to_118", "old_id": "sample_263"}
{"code": "def f(d, k):\n    new_d = {}\n    idx_pai1 = (78 + -78)\n    list_cr8e = list(d.items())\n    while idx_pai1 < len(list_cr8e):\n        key, val = list_cr8e[idx_pai1]\n        if key < k:\n            new_d[key] = val\n        idx_pai1 = idx_pai1 + (71 + -70)\n    return new_d", "input": "{1: 2, 2: 4, 3: 3}, 3", "output": "{1: 2, 2: 4}", "id": "ConstantUnfoldding_sample_from_sample_265_to_119", "old_id": "sample_265"}
{"code": "def f(nums):\n    idx_yht1 = (10 + -10)\n    list_wr6c = range(len(nums)-(68 + -67), -(80 + -79), -(62 + -61))\n    while idx_yht1 < len(list_wr6c):\n        i = list_wr6c[idx_yht1]\n        if nums[i] % (74 + -72) == (76 + -75):\n            nums.insert(i+(70 + -69), nums[i])\n        idx_yht1 = idx_yht1 + (32 + -31)\n    return nums", "input": "[2, 3, 4, 6, -2]", "output": "[2, 3, 3, 4, 6, -2]", "id": "ConstantUnfoldding_sample_from_sample_266_to_120", "old_id": "sample_266"}
{"code": "def f(s, separator):\n    idx_qaj5 = (13 + -13)\n    list_po82 = range(len(s))\n    while idx_qaj5 < len(list_po82):\n        i = list_po82[idx_qaj5]\n        if s[i] == separator:\n            new_s = list(s)\n            new_s[i] = '/'\n            return ' '.join(new_s)\n        idx_qaj5 = idx_qaj5 + (64 + -63)", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'", "id": "ConstantUnfoldding_sample_from_sample_268_to_121", "old_id": "sample_268"}
{"code": "def f(array):\n    zero_len = (len(array) - (16 + -15)) % (58 + -55)\n    idx_0jiz = (65 + -65)\n    list_jwep = range(zero_len)\n    while idx_0jiz < len(list_jwep):\n        i = list_jwep[idx_0jiz]\n        array[i] = '0'\n        idx_0jiz = idx_0jiz + (70 + -69)\n    idx_icrw = (22 + -22)\n    list_ivmh = range(zero_len + (15 + -14), len(array), (90 + -87))\n    while idx_icrw < len(list_ivmh):\n        i = list_ivmh[idx_icrw]\n        array[i - (83 + -82):i + (42 + -40)] = ['0', '0', '0']\n        idx_icrw = idx_icrw + (67 + -66)\n    return array", "input": "[9, 2]", "output": "['0', 2]", "id": "ConstantUnfoldding_sample_from_sample_269_to_122", "old_id": "sample_269"}
{"code": "def f(dic):\n    d = {}\n    idx_2zti = (92 + -92)\n    list_aje4 = dic\n    while idx_2zti < len(list_aje4):\n        key = list_aje4[idx_2zti]\n        d[key] = dic.popitem(last = False)[(49 + -48)]\n        idx_2zti = idx_2zti + (75 + -74)\n    return d", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_270_to_123", "old_id": "sample_270"}
{"code": "def f(base_list, nums):\n    base_list.extend(nums)\n    res = base_list.copy()\n    idx_ws5l = (29 + -29)\n    list_z2x3 = range(-len(nums), (67 + -67))\n    while idx_ws5l < len(list_z2x3):\n        i = list_z2x3[idx_ws5l]\n        res.append(res[i])\n        idx_ws5l = idx_ws5l + (13 + -12)\n    return res", "input": "[9, 7, 5, 3, 1], [2, 4, 6, 8, 0]", "output": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6]", "id": "ConstantUnfoldding_sample_from_sample_272_to_124", "old_id": "sample_272"}
{"code": "def f(name):\n    new_name =''\n    name = name[::-(58 + -57)]\n    idx_d6af = (30 + -30)\n    list_rato = range(len(name))\n    while idx_d6af < len(list_rato):\n        i = list_rato[idx_d6af]\n        n = name[i]\n        if n !='.' and  new_name.count('.')<(15 + -13):\n            new_name=n+new_name\n        else:\n            break\n        idx_d6af = idx_d6af + (98 + -97)\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "ConstantUnfoldding_sample_from_sample_273_to_125", "old_id": "sample_273"}
{"code": "def f(nums, target):\n    count = (12 + -12)\n    idx_vwfh = (61 + -61)\n    list_lnkf = nums\n    while idx_vwfh < len(list_lnkf):\n        n1 = list_lnkf[idx_vwfh]\n        idx_zyor = (33 + -33)\n        list_4api = nums\n        while idx_zyor < len(list_4api):\n            n2 = list_4api[idx_zyor]\n            count += (n1+n2==target)\n            idx_zyor = idx_zyor + (74 + -73)\n        idx_vwfh = idx_vwfh + (66 + -65)\n    return count", "input": "[1, 2, 3], 4", "output": "3", "id": "ConstantUnfoldding_sample_from_sample_274_to_126", "old_id": "sample_274"}
{"code": "def f(array1, array2):\n    result = dict.fromkeys(array1)\n    idx_093f = (39 + -39)\n    list_0onv = result\n    while idx_093f < len(list_0onv):\n        key = list_0onv[idx_093f]\n        result[key] = [el for el in array2 if key * (3 + -1) > el]\n        idx_093f = idx_093f + (43 + -42)\n    return result", "input": "[0, 132], [5, 991, 32, 997]", "output": "{0: [], 132: [5, 32]}", "id": "ConstantUnfoldding_sample_from_sample_278_to_127", "old_id": "sample_278"}
{"code": "def f(text, prefix):\n    idx = (78 + -78)\n    idx_gwl6 = (88 + -88)\n    list_2wkl = prefix\n    while idx_gwl6 < len(list_2wkl):\n        letter = list_2wkl[idx_gwl6]\n        if text[idx] != letter:\n            return None\n        idx += (50 + -49)\n        idx_gwl6 = idx_gwl6 + (32 + -31)\n    return text[idx:]", "input": "'bestest', 'bestest'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_284_to_128", "old_id": "sample_284"}
{"code": "def f(text):\n    s = text.lower()\n    idx_eqvz = (56 + -56)\n    list_f42n = range(len(s))\n    while idx_eqvz < len(list_f42n):\n        i = list_f42n[idx_eqvz]\n        if s[i] == 'x':\n            return 'no'\n        idx_eqvz = idx_eqvz + (20 + -19)\n    return text.isupper()", "input": "'dEXE'", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_293_to_129", "old_id": "sample_293"}
{"code": "def f(text):\n    new_text = list(text)\n    idx_em1w = (65 + -65)\n    list_xu28 = range(len(new_text))\n    while idx_em1w < len(list_xu28):\n        i = list_xu28[idx_em1w]\n        character = new_text[i]\n        new_character = character.swapcase()\n        new_text[i] = new_character\n        idx_em1w = idx_em1w + (73 + -72)\n    return ''.join(new_text)", "input": "'dst vavf n dmv dfvm gamcu dgcvb.'", "output": "'DST VAVF N DMV DFVM GAMCU DGCVB.'", "id": "ConstantUnfoldding_sample_from_sample_298_to_130", "old_id": "sample_298"}
{"code": "def f(nums):\n    count = (58 + -57)\n    idx_3vao = (9 + -9)\n    list_86wh = range(count, len(nums) - (61 + -60), (33 + -31))\n    while idx_3vao < len(list_86wh):\n        i = list_86wh[idx_3vao]\n        nums[i] = max(nums[i], nums[count-(53 + -52)])\n        count += (95 + -94)\n        idx_3vao = idx_3vao + (70 + -69)\n    return nums", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_300_to_131", "old_id": "sample_300"}
{"code": "def f(nums):\n    count = len(nums)\n    idx_r7ck = (74 + -74)\n    list_t1im = range(-count+(72 + -71), (9 + -9))\n    while idx_r7ck < len(list_t1im):\n        i = list_t1im[idx_r7ck]\n        nums.extend([nums[i], nums[i]])\n        idx_r7ck = idx_r7ck + (91 + -90)\n    return nums", "input": "[0, 6, 2, -1, -2]", "output": "[0, 6, 2, -1, -2, 6, 6, -2, -2, -2, -2, -2, -2]", "id": "ConstantUnfoldding_sample_from_sample_301_to_132", "old_id": "sample_301"}
{"code": "def f(text, char):\n    length = len(text)\n    index = -(16 + -15)\n    idx_hl03 = (50 + -50)\n    list_tdhr = range(length)\n    while idx_hl03 < len(list_tdhr):\n        i = list_tdhr[idx_hl03]\n        if text[i] == char:\n            index = i\n        idx_hl03 = idx_hl03 + (16 + -15)\n    if index == -(35 + -34):\n        index = length // (49 + -47)\n    new_text = list(text)\n    new_text.pop(index)\n    return ''.join(new_text)", "input": "'o horseto', 'r'", "output": "'o hoseto'", "id": "ConstantUnfoldding_sample_from_sample_305_to_133", "old_id": "sample_305"}
{"code": "def f(nums):\n    digits = []\n    idx_j6x7 = (5 + -5)\n    list_p42d = nums\n    while idx_j6x7 < len(list_p42d):\n        num = list_p42d[idx_j6x7]\n        if (isinstance(num, str) and num.isnumeric()) or isinstance(num, int):\n            digits.append(num)\n        idx_j6x7 = idx_j6x7 + (12 + -11)\n    digits = list(map(int, digits))\n    return digits", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]", "id": "ConstantUnfoldding_sample_from_sample_306_to_134", "old_id": "sample_306"}
{"code": "def f(text):\n    rtext = list(text)\n    idx_i7o2 = (70 + -70)\n    list_syf2 = range((45 + -44), len(rtext) - (10 + -9))\n    while idx_i7o2 < len(list_syf2):\n        i = list_syf2[idx_i7o2]\n        rtext.insert(i + (51 + -50), '|')\n        idx_i7o2 = idx_i7o2 + (87 + -86)\n    return ''.join(rtext)", "input": "'pxcznyf'", "output": "'px|||||cznyf'", "id": "ConstantUnfoldding_sample_from_sample_307_to_135", "old_id": "sample_307"}
{"code": "def f(strings):\n    occurances = {}\n    idx_8ldn = (61 + -61)\n    list_6ex9 = strings\n    while idx_8ldn < len(list_6ex9):\n        string = list_6ex9[idx_8ldn]\n        if string not in occurances:\n            occurances[string] = strings.count(string)\n        idx_8ldn = idx_8ldn + (62 + -61)\n    return occurances", "input": "[\"La\", \"Q\", \"9\", \"La\", \"La\"]", "output": "{'La': 3, 'Q': 1, '9': 1}", "id": "ConstantUnfoldding_sample_from_sample_308_to_136", "old_id": "sample_308"}
{"code": "def f(strands):\n    subs = strands\n    idx_o79d = (96 + -96)\n    list_1kpa = list(enumerate(subs))\n    while idx_o79d < len(list_1kpa):\n        i, j = list_1kpa[idx_o79d]\n        idx_p810 = (86 + -86)\n        list_mbwp = range(len(j) // (83 + -81))\n        while idx_p810 < len(list_mbwp):\n            _ = list_mbwp[idx_p810]\n            subs[i] = subs[i][-(83 + -82):] + subs[i][(21 + -20):-(52 + -51)] + subs[i][(6 + -6)]\n            idx_p810 = idx_p810 + (34 + -33)\n        idx_o79d = idx_o79d + (51 + -50)\n    return ''.join(subs)", "input": "['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']", "output": "'__1.00r__j_a6__6'", "id": "ConstantUnfoldding_sample_from_sample_310_to_137", "old_id": "sample_310"}
{"code": "def f(value, char):\n    total = (87 + -87)\n    idx_j9ro = (51 + -51)\n    list_j0fb = value\n    while idx_j9ro < len(list_j0fb):\n        c = list_j0fb[idx_j9ro]\n        if c == char or c == char.lower():\n            total += (50 + -49)\n        idx_j9ro = idx_j9ro + (58 + -57)\n    return total", "input": "'234rtccde', 'e'", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_318_to_138", "old_id": "sample_318"}
{"code": "def f(update, starting):\n    d = starting.copy()\n    idx_q1wc = (2 + -2)\n    list_xvig = update\n    while idx_q1wc < len(list_xvig):\n        k = list_xvig[idx_q1wc]\n        if k in d:\n            d[k] += update[k]\n        else:\n            d[k] = update[k]\n        idx_q1wc = idx_q1wc + (92 + -91)\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "ConstantUnfoldding_sample_from_sample_321_to_139", "old_id": "sample_321"}
{"code": "def f(chemicals, num):\n    fish = chemicals[(87 + -86):]\n    chemicals.reverse()\n    idx_uty5 = (32 + -32)\n    list_0d4c = range(num)\n    while idx_uty5 < len(list_0d4c):\n        i = list_0d4c[idx_uty5]\n        fish.append(chemicals.pop((69 + -68)))\n        idx_uty5 = idx_uty5 + (17 + -16)\n    chemicals.reverse()\n    return chemicals", "input": "['lsi', 's', 't', 't', 'd'], 0", "output": "['lsi', 's', 't', 't', 'd']", "id": "ConstantUnfoldding_sample_from_sample_322_to_140", "old_id": "sample_322"}
{"code": "def f(s):\n    l = list(s)\n    idx_2enh = (10 + -10)\n    list_shag = range(len(l))\n    while idx_2enh < len(list_shag):\n        i = list_shag[idx_2enh]\n        l[i] = l[i].lower()\n        if not l[i].isdigit():\n            return False\n        idx_2enh = idx_2enh + (64 + -63)\n    return True", "input": "\"\"", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_325_to_141", "old_id": "sample_325"}
{"code": "def f(text):\n    number = (52 + -52)\n    idx_nvs4 = (27 + -27)\n    list_ap5e = text\n    while idx_nvs4 < len(list_ap5e):\n        t = list_ap5e[idx_nvs4]\n        if t.isnumeric():\n            number += (14 + -13)\n        idx_nvs4 = idx_nvs4 + (99 + -98)\n    return number", "input": "'Thisisastring'", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_326_to_142", "old_id": "sample_326"}
{"code": "def f(lst):\n    new = list()\n    i = len(lst)-(89 + -88)\n    idx_4yfb = (92 + -92)\n    list_407n = range(len(lst))\n    while idx_4yfb < len(list_407n):\n        _ = list_407n[idx_4yfb]\n        if i%(60 + -58) == (26 + -26):\n            new.append(-lst[i])\n        else:\n            new.append(lst[i])\n        i -= (52 + -51)\n        idx_4yfb = idx_4yfb + (82 + -81)\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "ConstantUnfoldding_sample_from_sample_327_to_143", "old_id": "sample_327"}
{"code": "def f(text):\n    idx_s1lz = (52 + -52)\n    list_et3n = range(len(text))\n    while idx_s1lz < len(list_et3n):\n        i = list_et3n[idx_s1lz]\n        if text[i] == text[i].upper() and text[i-(56 + -55)].islower():\n            return True\n        idx_s1lz = idx_s1lz + (4 + -3)\n    return False", "input": "'jh54kkk6'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_329_to_144", "old_id": "sample_329"}
{"code": "def f(text):\n    ans = []\n    idx_6asr = (36 + -36)\n    list_y4op = text\n    while idx_6asr < len(list_y4op):\n        char = list_y4op[idx_6asr]\n        if char.isdigit():\n            ans.append(char)\n        else:\n            ans.append(' ')\n        idx_6asr = idx_6asr + (3 + -2)\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "ConstantUnfoldding_sample_from_sample_330_to_145", "old_id": "sample_330"}
{"code": "def f(places, lazy):\n    places.sort()\n    idx_hn3y = (100 + -100)\n    list_56wh = lazy\n    while idx_hn3y < len(list_56wh):\n        lazy = list_56wh[idx_hn3y]\n        places.remove(lazy)\n        idx_hn3y = idx_hn3y + (6 + -5)\n    if len(places) == (63 + -62):\n        return (95 + -94)\n    idx_y2x8 = (54 + -54)\n    list_n1dl = list(enumerate(places))\n    while idx_y2x8 < len(list_n1dl):\n        i, place = list_n1dl[idx_y2x8]\n        if places.count(place+(17 + -16)) == (100 + -100):\n            return i+(77 + -76)\n        idx_y2x8 = idx_y2x8 + (23 + -22)\n    return i+(96 + -95)", "input": "[375, 564, 857, 90, 728, 92], [728]", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_333_to_146", "old_id": "sample_333"}
{"code": "def f(txt):\n    d = []\n    idx_cn79 = (25 + -25)\n    list_je7k = txt\n    while idx_cn79 < len(list_je7k):\n        c = list_je7k[idx_cn79]\n        if c.isdigit():\n            continue\n        if c.islower():\n            d.append(c.upper())\n        elif c.isupper():\n            d.append(c.lower())\n        idx_cn79 = idx_cn79 + (65 + -64)\n    return ''.join(d)", "input": "\"5ll6\"", "output": "'LL'", "id": "ConstantUnfoldding_sample_from_sample_337_to_147", "old_id": "sample_337"}
{"code": "def f(array, elem):\n    elem = str(elem)\n    d = (49 + -49)\n    idx_b32w = (37 + -37)\n    list_4t5i = array\n    while idx_b32w < len(list_4t5i):\n        i = list_4t5i[idx_b32w]\n        if str(i) == elem:\n            d += (11 + -10)\n        idx_b32w = idx_b32w + (71 + -70)\n    return d", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_339_to_148", "old_id": "sample_339"}
{"code": "def f(text):\n    ls = list(text)\n    length = len(ls)\n    idx_n45r = (6 + -6)\n    list_2xnr = range(length)\n    while idx_n45r < len(list_2xnr):\n        i = list_2xnr[idx_n45r]\n        ls.insert(i, ls[i])\n        idx_n45r = idx_n45r + (53 + -52)\n    return ''.join(ls).ljust(length * (91 + -89))", "input": "'hzcw'", "output": "'hhhhhzcw'", "id": "ConstantUnfoldding_sample_from_sample_347_to_149", "old_id": "sample_347"}
{"code": "def f(d):\n    size = len(d)\n    v = [(19 + -19)] * size\n    if size == (60 + -60):\n        return v\n    idx_ehu3 = (21 + -21)\n    list_1sr3 = list(enumerate(d.values()))\n    while idx_ehu3 < len(list_1sr3):\n        i, e = list_1sr3[idx_ehu3]\n        v[i] = e\n        idx_ehu3 = idx_ehu3 + (39 + -38)\n    return v", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_350_to_150", "old_id": "sample_350"}
{"code": "def f(x):\n    if x == []:\n        return -(6 + -5)\n    else:\n        cache = {}\n        idx_upjk = (84 + -84)\n        list_s8o7 = x\n        while idx_upjk < len(list_s8o7):\n            item = list_s8o7[idx_upjk]\n            if item in cache:\n                cache[item] += (39 + -38)\n            else:\n                cache[item] = (75 + -74)\n            idx_upjk = idx_upjk + (38 + -37)\n        return max(cache.values())", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_353_to_151", "old_id": "sample_353"}
{"code": "def f(s):\n    r = []\n    idx_2zoi = (5 + -5)\n    list_qp1b = range(len(s) - (79 + -78), (68 + -68) - (42 + -41), -(38 + -37))\n    while idx_2zoi < len(list_qp1b):\n        i = list_qp1b[idx_2zoi]\n        r += s[i]\n        idx_2zoi = idx_2zoi + (5 + -4)\n    return ''.join(r)", "input": "'crew'", "output": "'werc'", "id": "ConstantUnfoldding_sample_from_sample_357_to_152", "old_id": "sample_357"}
{"code": "def f(text, value):\n    indexes = []\n    idx_yosz = (63 + -63)\n    list_efk4 = range(len(text))\n    while idx_yosz < len(list_efk4):\n        i = list_efk4[idx_yosz]\n        if text[i] == value and (i == (12 + -12) or text[i-(21 + -20)] != value):\n            indexes.append(i) \n        idx_yosz = idx_yosz + (95 + -94)\n    if len(indexes) % (82 + -80) == (100 + -99):\n        return text\n    return text[indexes[(87 + -87)]+(97 + -96):indexes[-(77 + -76)]]", "input": "'btrburger', 'b'", "output": "'tr'", "id": "ConstantUnfoldding_sample_from_sample_358_to_153", "old_id": "sample_358"}
{"code": "def f(lines):\n    idx_h2st = (50 + -50)\n    list_rasj = range(len(lines))\n    while idx_h2st < len(list_rasj):\n        i = list_rasj[idx_h2st]\n        lines[i] = lines[i].center(len(lines[-(90 + -89)]))\n        idx_h2st = idx_h2st + (81 + -80)\n    return lines", "input": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "output": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "id": "ConstantUnfoldding_sample_from_sample_359_to_154", "old_id": "sample_359"}
{"code": "def f(text):\n    idx_gk86 = (64 + -64)\n    list_10dj = range(len(text)-(34 + -33))\n    while idx_gk86 < len(list_10dj):\n        i = list_10dj[idx_gk86]\n        if text[i:].islower():\n            return text[i + (58 + -57):]\n        idx_gk86 = idx_gk86 + (3 + -2)\n    return ''", "input": "'wrazugizoernmgzu'", "output": "'razugizoernmgzu'", "id": "ConstantUnfoldding_sample_from_sample_362_to_155", "old_id": "sample_362"}
{"code": "def f(nums):\n    nums.sort()\n    n = len(nums)\n    new_nums = [nums[n//(54 + -52)]]\n    \n    if n % (5 + -3) == (38 + -38):\n        new_nums = [nums[n//(99 + -97) - (7 + -6)], nums[n//(45 + -43)]]\n    idx_utc3 = (26 + -26)\n    list_2hdw = range((44 + -44), n//(24 + -22))\n    while idx_utc3 < len(list_2hdw):\n        i = list_2hdw[idx_utc3]\n        new_nums.insert((32 + -32), nums[n-i-(18 + -17)])\n        new_nums.append(nums[i])\n        idx_utc3 = idx_utc3 + (12 + -11)\n    return new_nums", "input": "[1]", "output": "[1]", "id": "ConstantUnfoldding_sample_from_sample_363_to_156", "old_id": "sample_363"}
{"code": "def f(string):\n    tmp = string.lower()\n    idx_nqrk = (6 + -6)\n    list_cws0 = string.lower()\n    while idx_nqrk < len(list_cws0):\n        char = list_cws0[idx_nqrk]\n        if char in tmp:\n            tmp = tmp.replace(char, '', (13 + -12))\n        idx_nqrk = idx_nqrk + (20 + -19)\n    return tmp", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_366_to_157", "old_id": "sample_366"}
{"code": "def f(string, numbers):\n    arr = []\n    idx_fciy = (40 + -40)\n    list_s7v0 = numbers\n    while idx_fciy < len(list_s7v0):\n        num = list_s7v0[idx_fciy]\n        arr.append(string.zfill(num))\n        idx_fciy = idx_fciy + (41 + -40)\n    return ' '.join(arr)", "input": "'4327', [2, 8, 9, 2, 7, 1]", "output": "'4327 00004327 000004327 4327 0004327 4327'", "id": "ConstantUnfoldding_sample_from_sample_368_to_158", "old_id": "sample_368"}
{"code": "def f(text):\n    idx_sbq9 = (64 + -64)\n    list_uv5k = text\n    while idx_sbq9 < len(list_uv5k):\n        char = list_uv5k[idx_sbq9]\n        if not char.isspace():\n            return False\n        idx_sbq9 = idx_sbq9 + (76 + -75)\n    return True", "input": "'     i'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_370_to_159", "old_id": "sample_370"}
{"code": "def f(nums):\n    idx_b7yg = (74 + -74)\n    list_b194 = nums[:]\n    while idx_b7yg < len(list_b194):\n        odd = list_b194[idx_b7yg]\n        if odd % (77 + -75) != (61 + -61):\n            nums.remove(odd)\n        idx_b7yg = idx_b7yg + (3 + -2)\n    sum_ = (50 + -50)\n    idx_6nwc = (74 + -74)\n    list_hbyf = nums\n    while idx_6nwc < len(list_hbyf):\n        num = list_hbyf[idx_6nwc]\n        sum_ += num\n        idx_6nwc = idx_6nwc + (70 + -69)\n    return sum_", "input": "[11, 21, 0, 11]", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_371_to_160", "old_id": "sample_371"}
{"code": "def f(list_, num):\n    temp = []\n    idx_mai5 = (49 + -49)\n    list_159u = list_\n    while idx_mai5 < len(list_159u):\n        i = list_159u[idx_mai5]\n        i = num // (31 + -29) * ('%s,' % i)\n        temp.append(i)\n        idx_mai5 = idx_mai5 + (95 + -94)\n    return temp", "input": "['v'], 1", "output": "['']", "id": "ConstantUnfoldding_sample_from_sample_372_to_161", "old_id": "sample_372"}
{"code": "def f(seq, v):\n    a = []\n    idx_g130 = (68 + -68)\n    list_5q27 = seq\n    while idx_g130 < len(list_5q27):\n        i = list_5q27[idx_g130]\n        if i.endswith(v):\n            a.append(i*(19 + -17))\n        idx_g130 = idx_g130 + (71 + -70)\n    return a", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']", "id": "ConstantUnfoldding_sample_from_sample_374_to_162", "old_id": "sample_374"}
{"code": "def f(text):\n    idx_2jwm = (99 + -99)\n    list_8sfd = range(len(text))\n    while idx_2jwm < len(list_8sfd):\n        i = list_8sfd[idx_2jwm]\n        if text[(14 + -14):i].startswith(\"two\"):\n            return text[i:]\n        idx_2jwm = idx_2jwm + (54 + -53)\n    return 'no'", "input": "\"2two programmers\"", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_376_to_163", "old_id": "sample_376"}
{"code": "def f(nums):\n    idx_vgnu = (71 + -71)\n    list_f4xh = range(len(nums) - (50 + -49), -(29 + -28), -(72 + -69))\n    while idx_vgnu < len(list_f4xh):\n        i = list_f4xh[idx_vgnu]\n        if nums[i] == (2 + -2):\n            nums.clear()\n            return False\n        idx_vgnu = idx_vgnu + (77 + -76)\n    return nums", "input": "[0, 0, 1, 2, 1]", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_379_to_164", "old_id": "sample_379"}
{"code": "def f(concat, di):\n    count = len(di)\n    idx_s0e6 = (74 + -74)\n    list_kvfn = range(count)\n    while idx_s0e6 < len(list_kvfn):\n        i = list_kvfn[idx_s0e6]\n        if di[str(i)] in concat:\n            di.pop(str(i))\n        idx_s0e6 = idx_s0e6 + (72 + -71)\n    return \"Done!\"", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'", "id": "ConstantUnfoldding_sample_from_sample_386_to_165", "old_id": "sample_386"}
{"code": "def f(total, arg):\n    if type(arg) is list:\n        idx_x85l = (41 + -41)\n        list_473y = arg\n        while idx_x85l < len(list_473y):\n            e = list_473y[idx_x85l]\n            total.extend(e)\n            idx_x85l = idx_x85l + (53 + -52)\n    else:\n        total.extend(arg)\n    return total", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']", "id": "ConstantUnfoldding_sample_from_sample_389_to_166", "old_id": "sample_389"}
{"code": "def f(students):\n    seatlist = students\n    seatlist.reverse()\n    cnt = (50 + -50)\n    idx_ljni = (72 + -72)\n    list_jalt = range(len(seatlist))\n    while idx_ljni < len(list_jalt):\n        cnt = list_jalt[idx_ljni]\n        cnt += (81 + -79)\n        seatlist[cnt - (86 + -85):cnt] = ['+']\n        idx_ljni = idx_ljni + (28 + -27)\n    seatlist.append('+')\n    return seatlist", "input": "['r', '9']", "output": "['9', '+', '+', '+']", "id": "ConstantUnfoldding_sample_from_sample_391_to_167", "old_id": "sample_391"}
{"code": "def f(text):\n    ls = text[::-(17 + -16)]\n    text2 = ''\n    idx_670y = (56 + -56)\n    list_p4if = range(len(ls) - (23 + -20), (15 + -15), -(73 + -70))\n    while idx_670y < len(list_p4if):\n        i = list_p4if[idx_670y]\n        text2 += '---'.join(ls[i:i + (15 + -12)]) + '---'\n        idx_670y = idx_670y + (93 + -92)\n    return text2[:-(39 + -36)]", "input": "'scala'", "output": "'a---c---s'", "id": "ConstantUnfoldding_sample_from_sample_393_to_168", "old_id": "sample_393"}
{"code": "def f(text):\n    k = text.splitlines()\n    i = (23 + -23)\n    idx_25ri = (46 + -46)\n    list_z297 = k\n    while idx_25ri < len(list_z297):\n        j = list_z297[idx_25ri]\n        if len(j) == (61 + -61):\n            return i\n        i+=(64 + -63)\n        idx_25ri = idx_25ri + (99 + -98)\n    return -(68 + -67)", "input": "\"2 m2 \\n\\nbike\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_394_to_169", "old_id": "sample_394"}
{"code": "def f(s):\n    idx_i3nj = (21 + -21)\n    list_mycr = range(len(s))\n    while idx_i3nj < len(list_mycr):\n        i = list_mycr[idx_i3nj]\n        if s[i].isdecimal():\n            return i + (s[i] == '0')\n        elif s[i] == '0':\n            return -(76 + -75)\n        idx_i3nj = idx_i3nj + (35 + -34)\n    return -(82 + -81)", "input": "\"11\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_395_to_170", "old_id": "sample_395"}
{"code": "def f(counts):\n    dict = {}\n    idx_ojs6 = (90 + -90)\n    list_y3dw = list(counts.items())\n    while idx_ojs6 < len(list_y3dw):\n        k, v = list_y3dw[idx_ojs6]\n        count = counts[k]\n        if count not in dict:\n            dict[count] = []\n        dict[count].append(k)\n        idx_ojs6 = idx_ojs6 + (31 + -30)\n    counts.update(dict)\n    return counts", "input": "{'2': 2, '0': 1, '1': 2}", "output": "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}", "id": "ConstantUnfoldding_sample_from_sample_398_to_171", "old_id": "sample_398"}
{"code": "def f(n, l):\n    archive = {}\n    idx_eabf = (34 + -34)\n    list_vjez = range(n)\n    while idx_eabf < len(list_vjez):\n        _ = list_vjez[idx_eabf]\n        archive.clear()\n        archive.update({x + (10 + 0): x * (92 + -82) for x in l})\n        idx_eabf = idx_eabf + (66 + -65)\n    return archive", "input": "0, ['aaa', 'bbb']", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_402_to_172", "old_id": "sample_402"}
{"code": "def f(nums):\n    a = (42 + -42)\n    idx_n2vr = (32 + -32)\n    list_i0qd = range(len(nums))\n    while idx_n2vr < len(list_i0qd):\n        i = list_i0qd[idx_n2vr]\n        nums.insert(i, nums[a])\n        a += (84 + -83)\n        idx_n2vr = idx_n2vr + (79 + -78)\n    return nums", "input": "[1, 3, -1, 1, -2, 6]", "output": "[1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6]", "id": "ConstantUnfoldding_sample_from_sample_410_to_173", "old_id": "sample_410"}
{"code": "def f(d):\n    dCopy = d.copy()\n    idx_adj1 = (72 + -72)\n    list_3v7g = list(dCopy.items())\n    while idx_adj1 < len(list_3v7g):\n        key, value = list_3v7g[idx_adj1]\n        idx_fwh2 = (29 + -29)\n        list_wmk1 = range(len(value))\n        while idx_fwh2 < len(list_wmk1):\n            i = list_wmk1[idx_fwh2]\n            value[i] = value[i].upper()\n            idx_fwh2 = idx_fwh2 + (34 + -33)\n        idx_adj1 = idx_adj1 + (100 + -99)\n    return dCopy", "input": "{'X': ['x', 'y']}", "output": "{'X': ['X', 'Y']}", "id": "ConstantUnfoldding_sample_from_sample_414_to_174", "old_id": "sample_414"}
{"code": "def f(array):\n    d = dict(array)\n    idx_47bu = (21 + -21)\n    list_nmek = list(d.items())\n    while idx_47bu < len(list_nmek):\n        key, value = list_nmek[idx_47bu]\n        if value < (82 + -82) or value > (17 + -8):\n            return None\n        idx_47bu = idx_47bu + (8 + -7)\n    return d", "input": "((8, 5), (8, 2), (5, 3))", "output": "{8: 2, 5: 3}", "id": "ConstantUnfoldding_sample_from_sample_415_to_175", "old_id": "sample_415"}
{"code": "def f(selfie):\n    lo = len(selfie)\n    idx_dcsk = (60 + -60)\n    list_stj3 = range(lo-(46 + -45), -(17 + -16), -(80 + -79))\n    while idx_dcsk < len(list_stj3):\n        i = list_stj3[idx_dcsk]\n        if selfie[i] == selfie[(32 + -32)]:\n            selfie.remove(selfie[lo-(39 + -38)])\n        idx_dcsk = idx_dcsk + (95 + -94)\n    return selfie", "input": "[4, 2, 5, 1, 3, 2, 6]", "output": "[4, 2, 5, 1, 3, 2]", "id": "ConstantUnfoldding_sample_from_sample_423_to_176", "old_id": "sample_423"}
{"code": "def f(nums):\n    idx_goq6 = (6 + -6)\n    list_bujq = range(len(nums))\n    while idx_goq6 < len(list_bujq):\n        i = list_bujq[idx_goq6]\n        if not i % (55 + -53):\n            nums.append(nums[i] * nums[i + (58 + -57)])\n        idx_goq6 = idx_goq6 + (64 + -63)\n    return nums", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_428_to_177", "old_id": "sample_428"}
{"code": "def f(n, m):\n    arr = list(range((96 + -95), n+(7 + -6)))\n    idx_sbpk = (23 + -23)\n    list_6mei = range(m)\n    while idx_sbpk < len(list_6mei):\n        i = list_6mei[idx_sbpk]\n        arr.clear()\n        idx_sbpk = idx_sbpk + (72 + -71)\n    return arr", "input": "1, 3", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_431_to_178", "old_id": "sample_431"}
{"code": "def f(numbers, num, val):\n    while len(numbers) < num:\n        numbers.insert(len(numbers) // (49 + -47), val)\n    idx_amxk = (86 + -86)\n    list_lp4g = range(len(numbers) // (num - (88 + -87)) - (64 + -60))\n    while idx_amxk < len(list_lp4g):\n        _ = list_lp4g[idx_amxk]\n        numbers.insert(len(numbers) // (84 + -82), val)\n        idx_amxk = idx_amxk + (93 + -92)\n    return ' '.join(numbers)", "input": "[], 0, 1", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_435_to_179", "old_id": "sample_435"}
{"code": "def f(tap_hierarchy):\n    hierarchy = {}\n    idx_oyt9 = (41 + -41)\n    list_rgft = tap_hierarchy\n    while idx_oyt9 < len(list_rgft):\n        gift = list_rgft[idx_oyt9]\n        hierarchy = hierarchy.fromkeys(gift, None)\n        idx_oyt9 = idx_oyt9 + (40 + -39)\n    return hierarchy", "input": "['john', 'doe', 'the', 'john', 'doe']", "output": "{'d': None, 'o': None, 'e': None}", "id": "ConstantUnfoldding_sample_from_sample_437_to_180", "old_id": "sample_437"}
{"code": "def f(string):\n    bigTab = (36 + 64)\n    idx_t8gn = (21 + -21)\n    list_it9h = range((46 + -36), (86 + -56))\n    while idx_t8gn < len(list_it9h):\n        i = list_it9h[idx_t8gn]\n        if (68 + -68) < string.count('\\t') < (96 + -76):\n            bigTab = i\n            break\n        idx_t8gn = idx_t8gn + (94 + -93)\n    return string.expandtabs(bigTab)", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'", "id": "ConstantUnfoldding_sample_from_sample_438_to_181", "old_id": "sample_438"}
{"code": "def f(lst):\n    res = []\n    idx_z5as = (48 + -48)\n    list_3zgb = range(len(lst))\n    while idx_z5as < len(list_3zgb):\n        i = list_3zgb[idx_z5as]\n        if lst[i] % (12 + -10) == (97 + -97):\n            res.append(lst[i])\n        idx_z5as = idx_z5as + (55 + -54)\n\n    return lst.copy()", "input": "[1, 2, 3, 4]", "output": "[1, 2, 3, 4]", "id": "ConstantUnfoldding_sample_from_sample_442_to_182", "old_id": "sample_442"}
{"code": "def f(text):\n    idx_50m8 = (32 + -32)\n    list_5xln = text\n    while idx_50m8 < len(list_5xln):\n        space = list_5xln[idx_50m8]\n        if space == ' ':\n            text = text.lstrip()\n        else:\n            text = text.replace('cd', space)\n        idx_50m8 = idx_50m8 + (90 + -89)\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "ConstantUnfoldding_sample_from_sample_443_to_183", "old_id": "sample_443"}
{"code": "def f(nums):\n    count = len(nums)\n    idx_mx6o = (47 + -47)\n    list_9oi2 = range(count-(13 + -12), (46 + -46), -(32 + -30))\n    while idx_mx6o < len(list_9oi2):\n        i = list_9oi2[idx_mx6o]\n        nums.insert(i, nums.pop((92 + -92)) + nums.pop((9 + -9)))\n        idx_mx6o = idx_mx6o + (47 + -46)\n    return nums", "input": "[-5, 3, -2, -3, -1, 3, 5]", "output": "[5, -2, 2, -5]", "id": "ConstantUnfoldding_sample_from_sample_444_to_184", "old_id": "sample_444"}
{"code": "def f(names):\n    parts = names.split(',')\n    idx_ecn2 = (87 + -87)\n    list_dphx = list(enumerate(parts))\n    while idx_ecn2 < len(list_dphx):\n        i, part = list_dphx[idx_ecn2]\n        parts[i] = part.replace(' and', '+').title().replace('+', ' and')\n        idx_ecn2 = idx_ecn2 + (69 + -68)\n    return ', '.join(parts)", "input": "\"carrot, banana, and strawberry\"", "output": "'Carrot,  Banana,  and Strawberry'", "id": "ConstantUnfoldding_sample_from_sample_445_to_185", "old_id": "sample_445"}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-(85 + -84)))\n    idx_3xcn = (85 + -85)\n    list_v134 = range(len(text))\n    while idx_3xcn < len(list_v134):\n        i = list_v134[idx_3xcn]\n        if text[i] == ' ':\n            res += '|'\n        else:\n            res += text[i]\n        idx_3xcn = idx_3xcn + (88 + -87)\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "ConstantUnfoldding_sample_from_sample_447_to_186", "old_id": "sample_447"}
{"code": "def f(strs):\n    strs = strs.split()\n    idx_1mug = (40 + -40)\n    list_qi8g = range((6 + -5), len(strs), (73 + -71))\n    while idx_1mug < len(list_qi8g):\n        i = list_qi8g[idx_1mug]\n        strs[i] = ''.join(reversed(strs[i]))\n        idx_1mug = idx_1mug + (46 + -45)\n    return ' '.join(strs)", "input": "'K zBK'", "output": "'K KBz'", "id": "ConstantUnfoldding_sample_from_sample_450_to_187", "old_id": "sample_450"}
{"code": "def f(text, char):\n    text = list(text)\n    idx_mtxo = (67 + -67)\n    list_aomy = list(enumerate(text))\n    while idx_mtxo < len(list_aomy):\n        count, item = list_aomy[idx_mtxo]\n        if item == char:\n            text.remove(item)\n            return ''.join(text)\n        idx_mtxo = idx_mtxo + (2 + -1)\n    return text", "input": "'pn', 'p'", "output": "'n'", "id": "ConstantUnfoldding_sample_from_sample_451_to_188", "old_id": "sample_451"}
{"code": "def f(text):\n    counter = (50 + -50)\n    idx_lhaw = (85 + -85)\n    list_bprt = text\n    while idx_lhaw < len(list_bprt):\n        char = list_bprt[idx_lhaw]\n        if char.isalpha():\n            counter += (13 + -12)\n        idx_lhaw = idx_lhaw + (1 + 0)\n    return counter", "input": "'l000*',", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_452_to_189", "old_id": "sample_452"}
{"code": "def f(d, count):\n    new_dict = {}\n    idx_howd = (1 + -1)\n    list_jy64 = range(count)\n    while idx_howd < len(list_jy64):\n        _ = list_jy64[idx_howd]\n        d = d.copy()\n        new_dict = {**d, **new_dict}\n        idx_howd = idx_howd + (74 + -73)\n    return new_dict", "input": "{'a': 2, 'b': [], 'c': {}}, 0", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_454_to_190", "old_id": "sample_454"}
{"code": "def f(text):\n    uppers = (23 + -23)\n    idx_2iyz = (60 + -60)\n    list_fpkm = text\n    while idx_2iyz < len(list_fpkm):\n        c = list_fpkm[idx_2iyz]\n        if c.isupper():\n            uppers += (14 + -13)\n        idx_2iyz = idx_2iyz + (28 + -27)\n    return text.upper() if uppers >= (48 + -38) else text", "input": "'?XyZ'", "output": "'?XyZ'", "id": "ConstantUnfoldding_sample_from_sample_455_to_191", "old_id": "sample_455"}
{"code": "def f(nums):\n    count = list(range(len(nums)))\n    idx_4wsx = (9 + -9)\n    list_wfc0 = range(len(nums))\n    while idx_4wsx < len(list_wfc0):\n        i = list_wfc0[idx_4wsx]\n        nums.pop()\n        if len(count) > (66 + -66):\n            count.pop((18 + -18))\n        idx_4wsx = idx_4wsx + (52 + -51)\n    return nums", "input": "[3, 1, 7, 5, 6]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_457_to_192", "old_id": "sample_457"}
{"code": "def f(arr, d):\n    idx_ytrd = (24 + -24)\n    list_vxah = range((57 + -56), len(arr), (78 + -76))\n    while idx_ytrd < len(list_vxah):\n        i = list_vxah[idx_ytrd]\n        d.update({arr[i]: arr[i-(13 + -12)]})\n        idx_ytrd = idx_ytrd + (66 + -65)\n\n    return d", "input": "['b', 'vzjmc', 'f', 'ae', '0'], dict()", "output": "{'vzjmc': 'b', 'ae': 'f'}", "id": "ConstantUnfoldding_sample_from_sample_459_to_193", "old_id": "sample_459"}
{"code": "def f(dict):\n    result = dict.copy()\n    remove_keys = []\n    idx_6u24 = (35 + -35)\n    list_75rd = list(dict.items())\n    while idx_6u24 < len(list_75rd):\n        k, v = list_75rd[idx_6u24]\n        if v in dict:\n            del result[k]\n        idx_6u24 = idx_6u24 + (91 + -90)\n    return result", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}", "id": "ConstantUnfoldding_sample_from_sample_463_to_194", "old_id": "sample_463"}
{"code": "def f(nums):\n    copy = nums.copy()\n    newDict = dict()\n    idx_7czq = (62 + -62)\n    list_07ok = copy\n    while idx_7czq < len(list_07ok):\n        k = list_07ok[idx_7czq]\n        newDict[k] = len(copy[k])\n        idx_7czq = idx_7czq + (24 + -23)\n    return newDict", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_467_to_195", "old_id": "sample_467"}
{"code": "def f(a, b, n):\n    result = m = b\n    idx_1qif = (48 + -48)\n    list_muhk = range(n)\n    while idx_1qif < len(list_muhk):\n        _ = list_muhk[idx_1qif]\n        if m:\n            a, m = a.replace(m, '', (85 + -84)), None\n            result = m = b\n        idx_1qif = idx_1qif + (20 + -19)\n    return result.join(a.split(b))", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'", "id": "ConstantUnfoldding_sample_from_sample_468_to_196", "old_id": "sample_468"}
{"code": "def f(number):\n    transl = {'A': (16 + -15), 'B': (83 + -81), 'C': (18 + -15), 'D': (10 + -6), 'E': (82 + -77)}\n    result = []\n    idx_42bj = (51 + -51)\n    list_qprl = list(transl.items())\n    while idx_42bj < len(list_qprl):\n        key, value = list_qprl[idx_42bj]\n        if value % number == (21 + -21):\n            result.append(key)\n        idx_42bj = idx_42bj + (24 + -23)\n    return result", "input": "2", "output": "['B', 'D']", "id": "ConstantUnfoldding_sample_from_sample_470_to_197", "old_id": "sample_470"}
{"code": "def f(text):\n    d = {}\n    idx_1c47 = (29 + -29)\n    list_t7ij = text.replace('-', '').lower()\n    while idx_1c47 < len(list_t7ij):\n        char = list_t7ij[idx_1c47]\n        d[char] = d[char] + (37 + -36) if char in d else (14 + -13)\n        idx_1c47 = idx_1c47 + (7 + -6)\n    d = sorted(d.items(), key=lambda x: x[(78 + -77)])\n    return [val for i, val in d]", "input": "\"x--y-z-5-C\"", "output": "[1, 1, 1, 1, 1]", "id": "ConstantUnfoldding_sample_from_sample_472_to_198", "old_id": "sample_472"}
{"code": "def f(text, value):\n    indexes = list()\n    idx_gs14 = (28 + -28)\n    list_68cy = range(len(text))\n    while idx_gs14 < len(list_68cy):\n        i = list_68cy[idx_gs14]\n        if text[i] == value:\n            indexes.append(i)\n        idx_gs14 = idx_gs14 + (1 + 0)\n    new_text = list(text)\n    idx_bqds = (77 + -77)\n    list_g921 = indexes\n    while idx_bqds < len(list_g921):\n        i = list_g921[idx_bqds]\n        new_text.remove(value)\n        idx_bqds = idx_bqds + (90 + -89)\n    return ''.join(new_text)", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'", "id": "ConstantUnfoldding_sample_from_sample_473_to_199", "old_id": "sample_473"}
{"code": "def f(txt, marker):\n    a = []\n    lines = txt.split('\\n')\n    idx_i9dn = (28 + -28)\n    list_qu7b = lines\n    while idx_i9dn < len(list_qu7b):\n        line = list_qu7b[idx_i9dn]\n        a.append(line.center(marker))\n        idx_i9dn = idx_i9dn + (2 + -1)\n    return '\\n'.join(a)", "input": "'#[)[]>[^e>\\n 8', -5", "output": "'#[)[]>[^e>\\n 8'", "id": "ConstantUnfoldding_sample_from_sample_474_to_200", "old_id": "sample_474"}
{"code": "def f(a, split_on):\n    t = a.split()\n    a = []\n    idx_xj4z = (82 + -82)\n    list_86e2 = t\n    while idx_xj4z < len(list_86e2):\n        i = list_86e2[idx_xj4z]\n        idx_18jf = (57 + -57)\n        list_ugkt = i\n        while idx_18jf < len(list_ugkt):\n            j = list_ugkt[idx_18jf]\n            a.append(j)\n            idx_18jf = idx_18jf + (89 + -88)\n        idx_xj4z = idx_xj4z + (25 + -24)\n    if split_on in a:\n        return True\n    else:\n        return False", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_476_to_201", "old_id": "sample_476"}
{"code": "def f(sb):\n    d = {}\n    idx_e8ib = (79 + -79)\n    list_us60 = sb\n    while idx_e8ib < len(list_us60):\n        s = list_us60[idx_e8ib]\n        d[s] = d.get(s, (49 + -49)) + (39 + -38)\n        idx_e8ib = idx_e8ib + (20 + -19)\n    return d", "input": "'meow meow'", "output": "{'m': 2, 'e': 2, 'o': 2, 'w': 2, ' ': 1}", "id": "ConstantUnfoldding_sample_from_sample_478_to_202", "old_id": "sample_478"}
{"code": "def f(s, c1, c2):\n    if s == '':\n        return s\n    ls = s.split(c1)\n    idx_7jli = (44 + -44)\n    list_fnx5 = list(enumerate(ls))\n    while idx_7jli < len(list_fnx5):\n        index, item = list_fnx5[idx_7jli]\n        if c1 in item:\n            ls[index] = item.replace(c1, c2, (48 + -47))\n        idx_7jli = idx_7jli + (80 + -79)\n    return c1.join(ls)", "input": "'', 'mi', 'siast'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_480_to_203", "old_id": "sample_480"}
{"code": "def f(arr):\n    result = []\n    idx_tqx1 = (49 + -49)\n    list_2cew = arr\n    while idx_tqx1 < len(list_2cew):\n        item = list_2cew[idx_tqx1]\n        try:\n            if item.isnumeric():\n                result.append(int(item)*(14 + -12))\n        except ValueError:\n            result.append(item[::-(79 + -78)])\n        idx_tqx1 = idx_tqx1 + (79 + -78)\n    return result", "input": "['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']", "output": "[182, 32]", "id": "ConstantUnfoldding_sample_from_sample_484_to_204", "old_id": "sample_484"}
{"code": "def f(dic):\n    dic_op = dic.copy()\n    idx_u1ji = (25 + -25)\n    list_z53x = list(dic.items())\n    while idx_u1ji < len(list_z53x):\n        key, val = list_z53x[idx_u1ji]\n        dic_op[key] = val * val\n        idx_u1ji = idx_u1ji + (44 + -43)\n    return dic_op", "input": "{1:1, 2:2, 3:3}", "output": "{1: 1, 2: 4, 3: 9}", "id": "ConstantUnfoldding_sample_from_sample_486_to_205", "old_id": "sample_486"}
{"code": "def f(dict):\n    even_keys = []\n    idx_s86w = (2 + -2)\n    list_5q2d = dict.keys()\n    while idx_s86w < len(list_5q2d):\n        key = list_5q2d[idx_s86w]\n        if key % (55 + -53) == (58 + -58):\n            even_keys.append(key)\n        idx_s86w = idx_s86w + (93 + -92)\n    return even_keys", "input": "{ 4: 'a' }", "output": "[4]", "id": "ConstantUnfoldding_sample_from_sample_487_to_206", "old_id": "sample_487"}
{"code": "def f(xs):\n    idx_5jov = (25 + -25)\n    list_6i3j = range(-(22 + -21), -len(xs)-(3 + -2), -(65 + -64))\n    while idx_5jov < len(list_6i3j):\n        i = list_6i3j[idx_5jov]\n        xs.extend([xs[i], xs[i]])\n        idx_5jov = idx_5jov + (34 + -33)\n    return xs", "input": "[4, 8, 8, 5]", "output": "[4, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5]", "id": "ConstantUnfoldding_sample_from_sample_491_to_207", "old_id": "sample_491"}
{"code": "def f(d):\n    keys = []\n    idx_1tro = (60 + -60)\n    list_e0xk = d\n    while idx_1tro < len(list_e0xk):\n        k = list_e0xk[idx_1tro]\n        keys.append('%s => %s' % (k, d[k]))\n        idx_1tro = idx_1tro + (30 + -29)\n    return keys", "input": "{'-4':'4','1':'2','-':'-3'}", "output": "['-4 => 4', '1 => 2', '- => -3']", "id": "ConstantUnfoldding_sample_from_sample_493_to_208", "old_id": "sample_493"}
{"code": "def f(n):\n    b = list(str(n))\n    idx_q6z4 = (11 + -11)\n    list_a5wf = range((9 + -7),len(b))\n    while idx_q6z4 < len(list_a5wf):\n        i = list_a5wf[idx_q6z4]\n        b[i] += '+'\n        idx_q6z4 = idx_q6z4 + (28 + -27)\n    return b", "input": "44", "output": "['4', '4']", "id": "ConstantUnfoldding_sample_from_sample_497_to_209", "old_id": "sample_497"}
{"code": "def f(n):\n    p = ''\n    if n%(77 + -75) == (93 + -92):\n        p+='sn'\n    else:\n        return n*n\n    idx_8jun = (18 + -18)\n    list_c2q6 = range((32 + -31), n+(31 + -30))\n    while idx_8jun < len(list_c2q6):\n        x = list_c2q6[idx_8jun]\n        if x%(92 + -90) == (70 + -70):\n            p+='to'\n        else:\n            p+='ts'\n        idx_8jun = idx_8jun + (47 + -46)\n    return p", "input": "1", "output": "'snts'", "id": "ConstantUnfoldding_sample_from_sample_506_to_210", "old_id": "sample_506"}
{"code": "def f(text):\n    idx_583j = (67 + -67)\n    list_yhuj = text.split()\n    while idx_583j < len(list_yhuj):\n        item = list_yhuj[idx_583j]\n        text = text.replace('-{}'.format(item), ' ').replace('{}-'.format(item), ' ')\n        idx_583j = idx_583j + (67 + -66)\n    return text.strip('-')", "input": "'-stew---corn-and-beans-in soup-.-'", "output": "'stew---corn-and-beans-in soup-.'", "id": "ConstantUnfoldding_sample_from_sample_514_to_211", "old_id": "sample_514"}
{"code": "def f(text):\n    idx_zvq6 = (3 + -3)\n    list_6jdm = range(len(text)-(74 + -73), (66 + -66), -(26 + -25))\n    while idx_zvq6 < len(list_6jdm):\n        i = list_6jdm[idx_zvq6]\n        if not text[i].isupper():\n            return text[(58 + -58):i]\n        idx_zvq6 = idx_zvq6 + (5 + -4)\n    return ''", "input": "'SzHjifnzog'", "output": "'SzHjifnzo'", "id": "ConstantUnfoldding_sample_from_sample_517_to_212", "old_id": "sample_517"}
{"code": "def f(nums):\n    m = max(nums)\n    idx_nbuz = (13 + -13)\n    list_sc2f = range(m)\n    while idx_nbuz < len(list_sc2f):\n        i = list_sc2f[idx_nbuz]\n        nums.reverse()\n        idx_nbuz = idx_nbuz + (23 + -22)\n    return nums", "input": "[43, 0, 4, 77, 5, 2, 0, 9, 77]", "output": "[77, 9, 0, 2, 5, 77, 4, 0, 43]", "id": "ConstantUnfoldding_sample_from_sample_521_to_213", "old_id": "sample_521"}
{"code": "def f(text):\n    text = list(text)\n    idx_w3ur = (53 + -53)\n    list_spt2 = range(len(text)-(17 + -16), -(87 + -86), -(63 + -62))\n    while idx_w3ur < len(list_spt2):\n        i = list_spt2[idx_w3ur]\n        if text[i].isspace():\n            text[i] = '&nbsp;'\n        idx_w3ur = idx_w3ur + (65 + -64)\n    return ''.join(text)", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'", "id": "ConstantUnfoldding_sample_from_sample_523_to_214", "old_id": "sample_523"}
{"code": "def f(dict0):\n    new = dict0.copy()\n    idx_ngqb = (30 + -30)\n    list_hxcs = range(len(new)-(31 + -30))\n    while idx_ngqb < len(list_hxcs):\n        i = list_hxcs[idx_ngqb]\n        dict0[sorted(new)[i]] = i\n        idx_ngqb = idx_ngqb + (8 + -7)\n    return dict0", "input": "{2: 5, 4: 1, 3: 5, 1: 3, 5: 1}", "output": "{2: 1, 4: 3, 3: 2, 1: 0, 5: 1}", "id": "ConstantUnfoldding_sample_from_sample_524_to_215", "old_id": "sample_524"}
{"code": "def f(c, st, ed):\n    d = {}\n    a, b = (48 + -48), (22 + -22)\n    idx_4s9r = (71 + -71)\n    list_qvhz = list(c.items())\n    while idx_4s9r < len(list_qvhz):\n        x, y = list_qvhz[idx_4s9r]\n        d[y] = x\n        if y == st:\n            a = x\n        if y == ed:\n            b = x\n        idx_4s9r = idx_4s9r + (86 + -85)\n    w = d[st]\n    return (w, b) if a > b else (b, w)", "input": "{'TEXT': 7, 'CODE': 3}, 7, 3", "output": "('TEXT', 'CODE')", "id": "ConstantUnfoldding_sample_from_sample_525_to_216", "old_id": "sample_525"}
{"code": "def f(s):\n    b = ''\n    c = ''\n    idx_gy3u = (21 + -21)\n    list_xj6d = s\n    while idx_gy3u < len(list_xj6d):\n        i = list_xj6d[idx_gy3u]\n        c = c + i\n        if s.rfind(c) > -(56 + -55):\n            return s.rfind(c)\n        idx_gy3u = idx_gy3u + (69 + -68)\n    return (32 + -32)", "input": "'papeluchis'", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_528_to_217", "old_id": "sample_528"}
{"code": "def f(array):\n    prev = array[(35 + -35)]\n    newArray = array[:]\n    idx_ujn6 = (45 + -45)\n    list_a4pi = range((97 + -96), len(array))\n    while idx_ujn6 < len(list_a4pi):\n        i = list_a4pi[idx_ujn6]\n        if prev != array[i]:\n            newArray[i] = array[i]\n        else:\n            del newArray[i]\n        prev = array[i]\n        idx_ujn6 = idx_ujn6 + (98 + -97)\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_529_to_218", "old_id": "sample_529"}
{"code": "def f(n, array):\n    final = [array.copy()] \n    idx_nd4r = (82 + -82)\n    list_kswo = range(n)\n    while idx_nd4r < len(list_kswo):\n        i = list_kswo[idx_nd4r]\n        arr = array.copy()\n        arr.extend(final[-(77 + -76)])\n        final.append(arr)\n        idx_nd4r = idx_nd4r + (69 + -68)\n    return final", "input": "1, [1, 2, 3]", "output": "[[1, 2, 3], [1, 2, 3, 1, 2, 3]]", "id": "ConstantUnfoldding_sample_from_sample_532_to_219", "old_id": "sample_532"}
{"code": "def f(query, base):\n    net_sum = (26 + -26)\n    idx_2eow = (38 + -38)\n    list_45x2 = list(base.items())\n    while idx_2eow < len(list_45x2):\n        (key, val) = list_45x2[idx_2eow]\n        if key[(76 + -76)] == query and len(key) == (31 + -28):\n            net_sum -= val\n        elif key[-(14 + -13)] == query and len(key) == (70 + -67):\n            net_sum += val\n        idx_2eow = idx_2eow + (6 + -5)\n    return net_sum", "input": "'a', {}", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_533_to_220", "old_id": "sample_533"}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // (43 + -40), (40 + -40))\n    result = ''\n    idx_96vj = (72 + -72)\n    list_dugy = list(enumerate(sequence[i:]))\n    while idx_96vj < len(list_dugy):\n        j, v = list_dugy[idx_96vj]\n        if v == '+':\n            result += value\n        else:\n            result += sequence[i + j]\n        idx_96vj = idx_96vj + (23 + -22)\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "ConstantUnfoldding_sample_from_sample_534_to_221", "old_id": "sample_534"}
{"code": "def f(n):\n    idx_64u9 = (95 + -95)\n    list_mer6 = str(n)\n    while idx_64u9 < len(list_mer6):\n        n = list_mer6[idx_64u9]\n        if n not in \"012\" and n not in list(range((17 + -12), (53 + -43))):\n            return False\n        idx_64u9 = idx_64u9 + (41 + -40)\n    return True", "input": "1341240312", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_535_to_222", "old_id": "sample_535"}
{"code": "def f(cat):\n    digits = (70 + -70)\n    idx_hi1f = (37 + -37)\n    list_f6r9 = cat\n    while idx_hi1f < len(list_f6r9):\n        char = list_f6r9[idx_hi1f]\n        if char.isdigit():\n            digits += (77 + -76)\n        idx_hi1f = idx_hi1f + (3 + -2)\n    return digits", "input": "'C24Bxxx982ab'", "output": "5", "id": "ConstantUnfoldding_sample_from_sample_536_to_223", "old_id": "sample_536"}
{"code": "def f(a):\n    b = a.copy()\n    idx_0nja = (100 + -100)\n    list_jyg2 = range((83 + -83), len(a) - (69 + -68), (32 + -30))\n    while idx_0nja < len(list_jyg2):\n        k = list_jyg2[idx_0nja]\n        b.insert(k + (4 + -3), b[k])\n        idx_0nja = idx_0nja + (41 + -40)\n    b.append(b[(62 + -62)])\n    return b", "input": "[5, 5, 5, 6, 4, 9]", "output": "[5, 5, 5, 5, 5, 5, 6, 4, 9, 5]", "id": "ConstantUnfoldding_sample_from_sample_540_to_224", "old_id": "sample_540"}
{"code": "def f(text):\n    a = text.split('\\n')\n    b = []\n    idx_vh0x = (7 + -7)\n    list_0hgf = range(len(a))\n    while idx_vh0x < len(list_0hgf):\n        i = list_0hgf[idx_vh0x]\n        c = a[i].replace('\\t', '    ')\n        b.append(c)\n        idx_vh0x = idx_vh0x + (27 + -26)\n    return '\\n'.join(b)", "input": "\"\\t\\t\\ttab tab tabulates\"", "output": "'            tab tab tabulates'", "id": "ConstantUnfoldding_sample_from_sample_544_to_225", "old_id": "sample_544"}
{"code": "def f(matrix):\n    matrix.reverse()\n    result = []\n    idx_t23z = (52 + -52)\n    list_1ze3 = matrix\n    while idx_t23z < len(list_1ze3):\n        primary = list_1ze3[idx_t23z]\n        max(primary)\n        primary.sort(reverse = True)\n        result.append(primary)\n        idx_t23z = idx_t23z + (13 + -12)\n    return result", "input": "[[1, 1, 1, 1]]", "output": "[[1, 1, 1, 1]]", "id": "ConstantUnfoldding_sample_from_sample_549_to_226", "old_id": "sample_549"}
{"code": "def f(nums):\n    idx_ygvr = (57 + -57)\n    list_9i45 = range(len(nums))\n    while idx_ygvr < len(list_9i45):\n        i = list_9i45[idx_ygvr]\n        nums.insert(i, nums[i]**(91 + -89))\n        idx_ygvr = idx_ygvr + (81 + -80)\n    return nums", "input": "[1, 2, 4]", "output": "[1, 1, 1, 1, 2, 4]", "id": "ConstantUnfoldding_sample_from_sample_550_to_227", "old_id": "sample_550"}
{"code": "def f(data):\n    members = []\n    idx_3b20 = (52 + -52)\n    list_vck1 = data\n    while idx_3b20 < len(list_vck1):\n        item = list_vck1[idx_3b20]\n        idx_kcau = (64 + -64)\n        list_jqcg = data[item]\n        while idx_kcau < len(list_jqcg):\n            member = list_jqcg[idx_kcau]\n            if member not in members:\n                members.append(member)\n            idx_kcau = idx_kcau + (69 + -68)\n        idx_3b20 = idx_3b20 + (71 + -70)\n    return sorted(members)", "input": "{'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}", "output": "['a', 'b', 'c', 'inf']", "id": "ConstantUnfoldding_sample_from_sample_551_to_228", "old_id": "sample_551"}
{"code": "def f(d):\n    result = {}\n    idx_i0jp = (26 + -26)\n    list_yuis = list(d.items())\n    while idx_i0jp < len(list_yuis):\n        k, v = list_yuis[idx_i0jp]\n        if isinstance(k, float):\n            idx_ip76 = (97 + -97)\n            list_zhdb = v\n            while idx_ip76 < len(list_zhdb):\n                i = list_zhdb[idx_ip76]\n                result[i] = k\n                idx_ip76 = idx_ip76 + (100 + -99)\n        else:\n            result[k] = v\n        idx_i0jp = idx_i0jp + (58 + -57)\n    return result", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "ConstantUnfoldding_sample_from_sample_552_to_229", "old_id": "sample_552"}
{"code": "def f(text, count):\n    idx_04x5 = (14 + -14)\n    list_mbn6 = range(count)\n    while idx_04x5 < len(list_mbn6):\n        i = list_mbn6[idx_04x5]\n        text = text[::-(87 + -86)]\n        idx_04x5 = idx_04x5 + (82 + -81)\n    return text", "input": "'439m2670hlsw', 3", "output": "'wslh0762m934'", "id": "ConstantUnfoldding_sample_from_sample_553_to_230", "old_id": "sample_553"}
{"code": "def f(text):\n    idx_pyrb = (25 + -25)\n    list_28a1 = range(len(text))\n    while idx_pyrb < len(list_28a1):\n        i = list_28a1[idx_pyrb]\n        if text[i] == ' ':\n            text = text.replace(' ', '\\t', (98 + -97))\n        idx_pyrb = idx_pyrb + (97 + -96)\n    return text.expandtabs((84 + -80))", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'", "id": "ConstantUnfoldding_sample_from_sample_556_to_231", "old_id": "sample_556"}
{"code": "def f(nums, mos):\n    idx_p2qi = (23 + -23)\n    list_8ug7 = mos\n    while idx_p2qi < len(list_8ug7):\n        num = list_8ug7[idx_p2qi]\n        nums.pop(nums.index(num))\n        idx_p2qi = idx_p2qi + (82 + -81)\n    nums.sort()\n    idx_qhfw = (33 + -33)\n    list_840x = mos\n    while idx_qhfw < len(list_840x):\n        num = list_840x[idx_qhfw]\n        nums += [num]\n        idx_qhfw = idx_qhfw + (78 + -77)\n    idx_736y = (91 + -91)\n    list_z3x1 = range(len(nums)-(34 + -33))\n    while idx_736y < len(list_z3x1):\n        i = list_z3x1[idx_736y]\n        if nums[i] > nums[i+(1 + 0)]:\n            return False\n        idx_736y = idx_736y + (9 + -8)\n    return True", "input": "[3, 1, 2, 1, 4, 1], [1]", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_558_to_232", "old_id": "sample_558"}
{"code": "def f(text):\n    x = (86 + -86)\n    if text.islower():\n        idx_uogb = (86 + -86)\n        list_9bd6 = text\n        while idx_uogb < len(list_9bd6):\n            c = list_9bd6[idx_uogb]\n            if int(c) in list(range((50 + 40))):\n                x+=(3 + -2)\n            idx_uogb = idx_uogb + (25 + -24)\n    return x", "input": "\"591237865\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_560_to_233", "old_id": "sample_560"}
{"code": "def f(text1, text2):\n    nums = []\n    idx_hoj4 = (65 + -65)\n    list_wel5 = range(len(text2))\n    while idx_hoj4 < len(list_wel5):\n        i = list_wel5[idx_hoj4]\n        nums.append(text1.count(text2[i]))\n        idx_hoj4 = idx_hoj4 + (43 + -42)\n    return sum(nums)", "input": "'jivespdcxc', 'sx'", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_563_to_234", "old_id": "sample_563"}
{"code": "def f(num):\n    letter = (36 + -35)\n    idx_xloc = (82 + -82)\n    list_ekr5 = '1234567890'\n    while idx_xloc < len(list_ekr5):\n        i = list_ekr5[idx_xloc]\n        num = num.replace(i,'')\n        if len(num) == (73 + -73): break\n        num = num[letter:] + num[:letter]\n        letter += (27 + -26)\n        idx_xloc = idx_xloc + (99 + -98)\n    return num", "input": "'bwmm7h'", "output": "'mhbwm'", "id": "ConstantUnfoldding_sample_from_sample_568_to_235", "old_id": "sample_568"}
{"code": "def f(txt):\n    coincidences = {}\n    idx_4spa = (62 + -62)\n    list_s390 = txt\n    while idx_4spa < len(list_s390):\n        c = list_s390[idx_4spa]\n        if c in coincidences:\n            coincidences[c] += (72 + -71)\n        else:\n            coincidences[c] = (19 + -18)\n        idx_4spa = idx_4spa + (58 + -57)\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "ConstantUnfoldding_sample_from_sample_569_to_236", "old_id": "sample_569"}
{"code": "def f(data, num):\n    new_dict = {}\n    temp = list(data.items())\n    idx_mlte = (6 + -6)\n    list_t5jm = range(len(temp) - (49 + -48), num - (66 + -65), -(51 + -50))\n    while idx_mlte < len(list_t5jm):\n        i = list_t5jm[idx_mlte]\n        new_dict[temp[i]] = None\n        idx_mlte = idx_mlte + (52 + -51)\n    return temp[num:] + list(new_dict.items())", "input": "{1: 9, 2: 10, 3: 1}, 1", "output": "[(2, 10), (3, 1), ((3, 1), None), ((2, 10), None)]", "id": "ConstantUnfoldding_sample_from_sample_572_to_237", "old_id": "sample_572"}
{"code": "def f(array, const):\n    output = ['x']\n    idx_l4zf = (8 + -8)\n    list_qkzt = range((82 + -81), len(array) + (8 + -7))\n    while idx_l4zf < len(list_qkzt):\n        i = list_qkzt[idx_l4zf]\n        if i % (38 + -36) != (46 + -46):\n            output.append(array[i - (30 + -29)] * -(94 + -92))\n        else:\n            output.append(const)\n        idx_l4zf = idx_l4zf + (26 + -25)\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "ConstantUnfoldding_sample_from_sample_576_to_238", "old_id": "sample_576"}
{"code": "def f(items):\n    result = []\n    idx_k4is = (59 + -59)\n    list_woa9 = items\n    while idx_k4is < len(list_woa9):\n        number = list_woa9[idx_k4is]\n        d = dict(items).copy()\n        d.popitem()\n        result.append(d)\n        items = d\n        idx_k4is = idx_k4is + (72 + -71)\n    return result", "input": "[(1, 'pos')]", "output": "[{}]", "id": "ConstantUnfoldding_sample_from_sample_577_to_239", "old_id": "sample_577"}
{"code": "def f(obj):\n    idx_ajmq = (61 + -61)\n    list_yjvq = list(obj.items())\n    while idx_ajmq < len(list_yjvq):\n        k, v = list_yjvq[idx_ajmq]\n        if v >= (61 + -61):\n            obj[k] = -v\n        idx_ajmq = idx_ajmq + (5 + -4)\n    return obj", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}", "id": "ConstantUnfoldding_sample_from_sample_578_to_240", "old_id": "sample_578"}
{"code": "def f(text, sign):\n    length = len(text)\n    new_text = list(text)\n    sign = list(sign)\n    idx_4so8 = (99 + -99)\n    list_nadc = range(len(sign))\n    while idx_4so8 < len(list_nadc):\n        i = list_nadc[idx_4so8]\n        new_text.insert((i * length - (71 + -70)) // (25 + -23) + (i + (16 + -15)) // (42 + -40), sign[i])\n        idx_4so8 = idx_4so8 + (92 + -91)\n    return ''.join(new_text)", "input": "'akoon', 'sXo'", "output": "'akoXoosn'", "id": "ConstantUnfoldding_sample_from_sample_581_to_241", "old_id": "sample_581"}
{"code": "def f(k, j):\n    arr = []\n    idx_lb2k = (39 + -39)\n    list_hejm = range(k)\n    while idx_lb2k < len(list_hejm):\n        i = list_hejm[idx_lb2k]\n        arr.append(j)\n        idx_lb2k = idx_lb2k + (55 + -54)\n    return arr", "input": "7, 5", "output": "[5, 5, 5, 5, 5, 5, 5]", "id": "ConstantUnfoldding_sample_from_sample_582_to_242", "old_id": "sample_582"}
{"code": "def f(text, ch):\n    result = []\n    idx_37ws = (94 + -94)\n    list_k3ud = text.splitlines()\n    while idx_37ws < len(list_k3ud):\n        line = list_k3ud[idx_37ws]\n        if len(line) > (32 + -32) and line[(90 + -90)] == ch:\n            result.append(line.lower())\n        else:\n            result.append(line.upper())\n        idx_37ws = idx_37ws + (95 + -94)\n    return \"\\n\".join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "ConstantUnfoldding_sample_from_sample_583_to_243", "old_id": "sample_583"}
{"code": "def f(text):\n    count = text.count(text[(21 + -21)])\n    ls = list(text)\n    idx_ph36 = (36 + -36)\n    list_i98d = range(count)\n    while idx_ph36 < len(list_i98d):\n        _ = list_i98d[idx_ph36]\n        ls.remove(ls[(76 + -76)])\n        idx_ph36 = idx_ph36 + (35 + -34)\n    return ''.join(ls)", "input": "';,,,?'", "output": "',,,?'", "id": "ConstantUnfoldding_sample_from_sample_585_to_244", "old_id": "sample_585"}
{"code": "def f(text):\n    idx_tjr1 = (88 + -88)\n    list_o7uh = range((71 + -61), (75 + -75), -(48 + -47))\n    while idx_tjr1 < len(list_o7uh):\n        i = list_o7uh[idx_tjr1]\n        text = text.lstrip(str(i))\n        idx_tjr1 = idx_tjr1 + (14 + -13)\n    return text", "input": "\"25000   $\"", "output": "'5000   $'", "id": "ConstantUnfoldding_sample_from_sample_590_to_245", "old_id": "sample_590"}
{"code": "def f(arr): \n    counts = [(85 + -85)] * (89 + -80) \n    ans = [] \n    idx_x7ld = (47 + -47)\n    list_qhba = arr\n    while idx_x7ld < len(list_qhba):\n        ele = list_qhba[idx_x7ld]\n        counts[ele - (55 + -54)] += (65 + -64) \n        idx_x7ld = idx_x7ld + (55 + -54)\n    idx_qpbs = (58 + -58)\n    list_ukcb = range(len(counts))\n    while idx_qpbs < len(list_ukcb):\n        i = list_ukcb[idx_qpbs]\n        while counts[i] > (62 + -62): \n            counts[i] -= (29 + -28) \n            ans.append(i + (13 + -12))\n        idx_qpbs = idx_qpbs + (23 + -22)\n    return counts, ans", "input": "[6, 3, 0, 7, 4, 8]", "output": "([0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 6, 7, 8, 9])", "id": "ConstantUnfoldding_sample_from_sample_591_to_246", "old_id": "sample_591"}
{"code": "def f(numbers):\n    new_numbers = []\n    idx_mlwf = (67 + -67)\n    list_56vf = list(enumerate(numbers))\n    while idx_mlwf < len(list_56vf):\n        i, _ = list_56vf[idx_mlwf]\n        new_numbers.append(numbers[len(numbers)-(77 + -76)-i])\n        idx_mlwf = idx_mlwf + (58 + -57)\n    return new_numbers", "input": "[11, 3]", "output": "[3, 11]", "id": "ConstantUnfoldding_sample_from_sample_592_to_247", "old_id": "sample_592"}
{"code": "def f(nums, n):\n    pos = len(nums) - (80 + -79)\n    idx_y3wf = (60 + -60)\n    list_xjm4 = range(-len(nums), (8 + -8))\n    while idx_y3wf < len(list_xjm4):\n        i = list_xjm4[idx_y3wf]\n        nums.insert(pos, nums[i])\n        idx_y3wf = idx_y3wf + (14 + -13)\n    return nums", "input": "[], 14", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_593_to_248", "old_id": "sample_593"}
{"code": "def f(a, b):\n    a = b.join(a)\n    lst = []\n    idx_t8xf = (11 + -11)\n    list_pogf = range((52 + -51), len(a)+(52 + -51), (97 + -95))\n    while idx_t8xf < len(list_pogf):\n        i = list_pogf[idx_t8xf]\n        lst.append(a[i-(35 + -34):][:i])\n        lst.append(a[i-(25 + -24):][i:])\n        idx_t8xf = idx_t8xf + (84 + -83)\n    return lst", "input": "[\"a\", \"b\", \"c\"], \" \"", "output": "['a', ' b c', 'b c', '', 'c', '']", "id": "ConstantUnfoldding_sample_from_sample_599_to_249", "old_id": "sample_599"}
{"code": "def f(array):\n    just_ns = list(map(lambda num: 'n'*num, array))\n    final_output = []\n    idx_sthk = (88 + -88)\n    list_hxp0 = just_ns\n    while idx_sthk < len(list_hxp0):\n        wipe = list_hxp0[idx_sthk]\n        final_output.append(wipe)\n        idx_sthk = idx_sthk + (63 + -62)\n    return final_output", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_600_to_250", "old_id": "sample_600"}
{"code": "def f(text):\n    t = (74 + -69)\n    tab = []\n    idx_mf2e = (86 + -86)\n    list_1n4i = text\n    while idx_mf2e < len(list_1n4i):\n        i = list_1n4i[idx_mf2e]\n        if i.lower() in 'aeiouy':\n            tab.append(i.upper() * t)\n        else:\n            tab.append(i * t)\n        idx_mf2e = idx_mf2e + (87 + -86)\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "ConstantUnfoldding_sample_from_sample_601_to_251", "old_id": "sample_601"}
{"code": "def f(text):\n    idx_q75y = (46 + -46)\n    list_yjpt = ['.', '!', '?']\n    while idx_q75y < len(list_yjpt):\n        i = list_yjpt[idx_q75y]\n        if text.endswith(i):\n            return True\n        idx_q75y = idx_q75y + (77 + -76)\n    return False", "input": "'. C.'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_607_to_252", "old_id": "sample_607"}
{"code": "def f(keys, value):\n    d = dict.fromkeys(keys, value)\n    idx_5znv = (49 + -49)\n    list_hgx4 = list(enumerate(d.copy(), (70 + -69)))\n    while idx_5znv < len(list_hgx4):\n        i, k = list_hgx4[idx_5znv]\n        if d[k] == d[i]:\n            del d[i]\n        idx_5znv = idx_5znv + (65 + -64)\n    return d", "input": "[1, 2, 1, 1], 3", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_610_to_253", "old_id": "sample_610"}
{"code": "def f(text):\n    result = ''\n    mid = (len(text) - (15 + -14)) // (76 + -74)\n    idx_czru = (2 + -2)\n    list_jrum = range(mid)\n    while idx_czru < len(list_jrum):\n        i = list_jrum[idx_czru]\n        result += text[i]\n        idx_czru = idx_czru + (31 + -30)\n    idx_5ucd = (63 + -63)\n    list_ginx = range(mid, len(text)-(50 + -49))\n    while idx_5ucd < len(list_ginx):\n        i = list_ginx[idx_5ucd]\n        result += text[mid + len(text) - (34 + -33) - i]\n        idx_5ucd = idx_5ucd + (79 + -78)\n    return result.ljust(len(text), text[-(35 + -34)])", "input": "'eat!'", "output": "'e!t!'", "id": "ConstantUnfoldding_sample_from_sample_613_to_254", "old_id": "sample_613"}
{"code": "def f(body):\n    ls = list(body)\n    dist = (11 + -11)\n    idx_nrqj = (21 + -21)\n    list_4i67 = range((51 + -51), len(ls) - (13 + -12))\n    while idx_nrqj < len(list_4i67):\n        i = list_4i67[idx_nrqj]\n        if ls[i - (7 + -5) if i - (28 + -26) >= (45 + -45) else (24 + -24)] == '\\t':\n            dist += ((23 + -22) + ls[i - (38 + -37)].count('\\t')) * (73 + -70)\n        ls[i] = '[' + ls[i] + ']'\n        idx_nrqj = idx_nrqj + (15 + -14)\n    return ''.join(ls).expandtabs((30 + -26) + dist)", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'", "id": "ConstantUnfoldding_sample_from_sample_616_to_255", "old_id": "sample_616"}
{"code": "def f(text, rules):\n    idx_vumh = (83 + -83)\n    list_shuo = rules\n    while idx_vumh < len(list_shuo):\n        rule = list_shuo[idx_vumh]\n        if rule == '@':\n            text = text[::-(99 + -98)]\n        elif rule == '~':\n            text = text.upper()\n        elif text and text[len(text)-(2 + -1)] == rule:\n            text = text[(54 + -54):len(text)-(37 + -36)]\n        idx_vumh = idx_vumh + (21 + -20)\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "ConstantUnfoldding_sample_from_sample_623_to_256", "old_id": "sample_623"}
{"code": "def f(text):\n    count = (19 + -19)\n    idx_9fyb = (75 + -75)\n    list_1ni7 = text\n    while idx_9fyb < len(list_1ni7):\n        i = list_1ni7[idx_9fyb]\n        if i in '.?!.,':\n            count += (18 + -17)\n        idx_9fyb = idx_9fyb + (78 + -77)\n    return count", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_625_to_257", "old_id": "sample_625"}
{"code": "def f(original, string):\n    temp = dict(original)\n    idx_8zjf = (42 + -42)\n    list_yizw = list(string.items())\n    while idx_8zjf < len(list_yizw):\n        a, b = list_yizw[idx_8zjf]\n        temp[b] = a\n        idx_8zjf = idx_8zjf + (71 + -70)\n    return temp", "input": "{1: -9, 0: -7}, {1: 2, 0: 3}", "output": "{1: -9, 0: -7, 2: 1, 3: 0}", "id": "ConstantUnfoldding_sample_from_sample_630_to_258", "old_id": "sample_630"}
{"code": "def f(list):\n    idx_by8z = (25 + -25)\n    list_0a8q = range(len(list) - (16 + -15), (43 + -43), -(85 + -84))\n    while idx_by8z < len(list_0a8q):\n        i = list_0a8q[idx_by8z]\n        idx_5yuq = (64 + -64)\n        list_8om6 = range(i)\n        while idx_5yuq < len(list_8om6):\n            j = list_8om6[idx_5yuq]\n            if list[j] > list[j + (26 + -25)]:\n                list[j], list[j + (40 + -39)] = list[j + (80 + -79)], list[j]\n                list.sort()\n            idx_5yuq = idx_5yuq + (90 + -89)\n        idx_by8z = idx_by8z + (6 + -5)\n    return list", "input": "[63, 0, 1, 5, 9, 87, 0, 7, 25, 4]", "output": "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]", "id": "ConstantUnfoldding_sample_from_sample_632_to_259", "old_id": "sample_632"}
{"code": "def f(text):\n    valid_chars = ['-', '_', '+', '.', '/', ' ']\n    text = text.upper()\n    idx_1h5z = (92 + -92)\n    list_jkqg = text\n    while idx_1h5z < len(list_jkqg):\n        char = list_jkqg[idx_1h5z]\n        if char.isalnum() == False and char not in valid_chars:\n            return False\n        idx_1h5z = idx_1h5z + (78 + -77)\n    return True", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_635_to_260", "old_id": "sample_635"}
{"code": "def f(text):\n    text = text.split(' ')\n    idx_vywq = (25 + -25)\n    list_d6fo = text\n    while idx_vywq < len(list_d6fo):\n        t = list_d6fo[idx_vywq]\n        if not t.isnumeric():\n            return 'no'\n        idx_vywq = idx_vywq + (23 + -22)\n    return 'yes'", "input": "'03625163633 d'", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_637_to_261", "old_id": "sample_637"}
{"code": "def f(text):\n    a = (43 + -43)\n    if text[(85 + -85)] in text[(65 + -64):]:\n        a += (25 + -24)\n    idx_zcpm = (25 + -25)\n    list_p1io = range((84 + -84), len(text)-(55 + -54))\n    while idx_zcpm < len(list_p1io):\n        i = list_p1io[idx_zcpm]\n        if text[i] in text[i+(15 + -14):]:\n            a += (42 + -41)\n        idx_zcpm = idx_zcpm + (75 + -74)\n    return a", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18", "id": "ConstantUnfoldding_sample_from_sample_640_to_262", "old_id": "sample_640"}
{"code": "def f(text, count):\n    idx_n1d7 = (73 + -73)\n    list_jvlg = range(count)\n    while idx_n1d7 < len(list_jvlg):\n        i = list_jvlg[idx_n1d7]\n        text = ''.join(reversed(text))\n        idx_n1d7 = idx_n1d7 + (91 + -90)\n    return text", "input": "'aBc, ,SzY', 2", "output": "'aBc, ,SzY'", "id": "ConstantUnfoldding_sample_from_sample_646_to_263", "old_id": "sample_646"}
{"code": "def f(string):\n    if not string or not string[(35 + -35)].isnumeric:\n        return 'INVALID'\n    cur = (23 + -23)\n    idx_2owy = (1 + -1)\n    list_v9xw = range(len(string))\n    while idx_2owy < len(list_v9xw):\n        i = list_v9xw[idx_2owy]\n        cur = cur * (97 + -87) + int(string[i])\n        idx_2owy = idx_2owy + (82 + -81)\n    return str(cur)", "input": "'3'", "output": "'3'", "id": "ConstantUnfoldding_sample_from_sample_652_to_264", "old_id": "sample_652"}
{"code": "def f(text, letter):\n    t = text\n    idx_wxf4 = (89 + -89)\n    list_eo4i = text\n    while idx_wxf4 < len(list_eo4i):\n        alph = list_eo4i[idx_wxf4]\n        t = t.replace(alph, \"\")\n        idx_wxf4 = idx_wxf4 + (92 + -91)\n    return len(t.split(letter))", "input": "\"c, c, c ,c, c\", \"c\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_653_to_265", "old_id": "sample_653"}
{"code": "def f(letters):\n    a = [] \n    idx_e4jq = (65 + -65)\n    list_71yq = range(len(letters))\n    while idx_e4jq < len(list_71yq):\n        i = list_71yq[idx_e4jq]\n        if letters[i] in a:\n            return 'no'\n        a.append(letters[i]) \n        idx_e4jq = idx_e4jq + (39 + -38)\n    return 'yes'", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'", "id": "ConstantUnfoldding_sample_from_sample_656_to_266", "old_id": "sample_656"}
{"code": "def f(text):\n    idx_pw4v = (49 + -49)\n    list_a8x2 = '!.?,:;'\n    while idx_pw4v < len(list_a8x2):\n        punct = list_a8x2[idx_pw4v]\n        if text.count(punct) > (70 + -69):\n            return 'no'\n        if text.endswith(punct):\n            return 'no'\n        idx_pw4v = idx_pw4v + (50 + -49)\n    return text.title()", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'", "id": "ConstantUnfoldding_sample_from_sample_657_to_267", "old_id": "sample_657"}
{"code": "def f(d, get_ary):\n    result = []\n    idx_pgor = (52 + -52)\n    list_38aj = get_ary\n    while idx_pgor < len(list_38aj):\n        key = list_38aj[idx_pgor]\n        result.append(d.get(key))\n        idx_pgor = idx_pgor + (9 + -8)\n    return result", "input": "{3: \"swims like a bull\"}, [3, 2, 'c', True, 5]", "output": "['swims like a bull', None, None, None, None]", "id": "ConstantUnfoldding_sample_from_sample_658_to_268", "old_id": "sample_658"}
{"code": "def f(bots):\n    clean = []\n    idx_wxcl = (41 + -41)\n    list_xol3 = bots\n    while idx_wxcl < len(list_xol3):\n        username = list_xol3[idx_wxcl]\n        if not username.isupper():\n            clean.append(username[:(44 + -42)] + username[-(18 + -15):])\n        idx_wxcl = idx_wxcl + (34 + -33)\n    return len(clean)", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_659_to_269", "old_id": "sample_659"}
{"code": "def f(num):\n    initial = [(35 + -34)]\n    total = initial\n    idx_1t7q = (78 + -78)\n    list_y9w0 = range(num)\n    while idx_1t7q < len(list_y9w0):\n        _ = list_y9w0[idx_1t7q]\n        total = [(57 + -56)] + [x+y for x, y in zip(total, total[(21 + -20):])]\n        initial.append(total[-(60 + -59)])\n        idx_1t7q = idx_1t7q + (25 + -24)\n    return sum(initial)", "input": "3", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_660_to_270", "old_id": "sample_660"}
{"code": "def f(tags):\n    resp = \"\"\n    idx_0rtn = (50 + -50)\n    list_4fdg = tags\n    while idx_0rtn < len(list_4fdg):\n        key = list_4fdg[idx_0rtn]\n        resp += key + \" \"\n        idx_0rtn = idx_0rtn + (61 + -60)\n    return resp", "input": "{\"3\":\"3\",\"4\":\"5\"}", "output": "'3 4 '", "id": "ConstantUnfoldding_sample_from_sample_664_to_271", "old_id": "sample_664"}
{"code": "def f(chars):\n    s = \"\"\n    idx_rf1z = (12 + -12)\n    list_20mp = chars\n    while idx_rf1z < len(list_20mp):\n        ch = list_20mp[idx_rf1z]\n        if chars.count(ch) % (99 + -97) == (57 + -57):\n            s += ch.upper()\n        else:\n            s += ch\n        idx_rf1z = idx_rf1z + (91 + -90)\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "ConstantUnfoldding_sample_from_sample_665_to_272", "old_id": "sample_665"}
{"code": "def f(d1, d2):\n    mmax = (16 + -16)\n    idx_1om5 = (72 + -72)\n    list_7s6f = d1\n    while idx_1om5 < len(list_7s6f):\n        k1 = list_7s6f[idx_1om5]\n        if p := len(d1[k1])+len(d2.get(k1, [])):\n            if p > mmax:\n                mmax = p\n        idx_1om5 = idx_1om5 + (24 + -23)\n    return mmax", "input": "{ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_666_to_273", "old_id": "sample_666"}
{"code": "def f(text):\n    new_text = []\n    idx_fcup = (33 + -33)\n    list_h7w9 = range(len(text) // (40 + -37))\n    while idx_fcup < len(list_h7w9):\n        i = list_h7w9[idx_fcup]\n        new_text.append(f\"< {text[i * (53 + -50): i * (38 + -35) + (96 + -93)]} level={i} >\")\n        idx_fcup = idx_fcup + (39 + -38)\n    last_item = text[len(text) // (26 + -23) * (46 + -43):]\n    new_text.append(f\"< {last_item} level={len(text) // (84 + -81)} >\")\n    return new_text", "input": "'C7'", "output": "['< C7 level=0 >']", "id": "ConstantUnfoldding_sample_from_sample_667_to_274", "old_id": "sample_667"}
{"code": "def f(text, char1, char2):\n    t1a = []\n    t2a = []\n    idx_3if5 = (90 + -90)\n    list_3fmc = range(len(char1))\n    while idx_3if5 < len(list_3fmc):\n        i = list_3fmc[idx_3if5]\n        t1a.append(char1[i])\n        t2a.append(char2[i])\n        idx_3if5 = idx_3if5 + (17 + -16)\n    t1 = text.maketrans(dict(zip(t1a, t2a)))\n    return text.translate(t1)", "input": "\"ewriyat emf rwto segya\", \"tey\", \"dgo\"", "output": "'gwrioad gmf rwdo sggoa'", "id": "ConstantUnfoldding_sample_from_sample_671_to_275", "old_id": "sample_671"}
{"code": "def f(text):\n    ls = list(text)\n    idx_i625 = (86 + -86)\n    list_edj6 = range(len(ls)-(77 + -76), -(97 + -96), -(28 + -27))\n    while idx_i625 < len(list_edj6):\n        x = list_edj6[idx_i625]\n        if len(ls) <= (70 + -69): break\n        if ls[x] not in 'zyxwvutsrqponmlkjihgfedcba': ls.pop(ls[x])\n        idx_i625 = idx_i625 + (83 + -82)\n    return ''.join(ls)", "input": "'qq'", "output": "'qq'", "id": "ConstantUnfoldding_sample_from_sample_674_to_276", "old_id": "sample_674"}
{"code": "def f(text, length):\n    length = -length if length < (14 + -14) else length\n    output = ''\n    idx_hf90 = (56 + -56)\n    list_saq9 = range(length)\n    while idx_hf90 < len(list_saq9):\n        idx = list_saq9[idx_hf90]\n        if text[idx % len(text)] != ' ':\n            output += text[idx % len(text)]\n        else:\n            break\n        idx_hf90 = idx_hf90 + (28 + -27)\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "ConstantUnfoldding_sample_from_sample_677_to_277", "old_id": "sample_677"}
{"code": "def f(text):\n    freq = dict()\n    idx_0jby = (34 + -34)\n    list_xco9 = text.lower()\n    while idx_0jby < len(list_xco9):\n        c = list_xco9[idx_0jby]\n        if c in freq:\n            freq[c] += (97 + -96)\n        else:\n            freq[c] = (69 + -68)\n        idx_0jby = idx_0jby + (69 + -68)\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "ConstantUnfoldding_sample_from_sample_678_to_278", "old_id": "sample_678"}
{"code": "def f(text):\n    if text == '':\n        return False\n    first_char = text[(86 + -86)]\n    if text[(81 + -81)].isdigit():\n        return False\n    idx_0e3t = (31 + -31)\n    list_civy = text\n    while idx_0e3t < len(list_civy):\n        last_char = list_civy[idx_0e3t]\n        if (last_char != '_') and not last_char.isidentifier():\n            return False\n        idx_0e3t = idx_0e3t + (17 + -16)\n    return True", "input": "'meet'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_679_to_279", "old_id": "sample_679"}
{"code": "def f(text):\n    letters = ''\n    idx_eyqa = (86 + -86)\n    list_un25 = range(len(text))\n    while idx_eyqa < len(list_un25):\n        i = list_un25[idx_eyqa]\n        if text[i].isalnum():\n            letters += text[i]\n        idx_eyqa = idx_eyqa + (73 + -72)\n    return letters", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'", "id": "ConstantUnfoldding_sample_from_sample_680_to_280", "old_id": "sample_680"}
{"code": "def f(d, l):\n\tnew_d = {}\n\tidx_azef = (85 + -85)\n\tlist_gtoy = l\n\twhile idx_azef < len(list_gtoy):\n\t\tk = list_gtoy[idx_azef]\n\t\tif d.get(k) is not None:\n\t\t\tnew_d[k] = d[k]\n\t\tidx_azef = idx_azef + (9 + -8)\n\n\treturn new_d.copy()", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}", "id": "ConstantUnfoldding_sample_from_sample_686_to_281", "old_id": "sample_686"}
{"code": "def f(nums):\n    l = []\n    idx_30t7 = (44 + -44)\n    list_pe18 = nums\n    while idx_30t7 < len(list_pe18):\n        i = list_pe18[idx_30t7]\n        if i not in l:\n            l.append(i)\n        idx_30t7 = idx_30t7 + (7 + -6)\n    return l", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]", "id": "ConstantUnfoldding_sample_from_sample_688_to_282", "old_id": "sample_688"}
{"code": "def f(arr):\n    count = len(arr)\n    sub = arr.copy()\n    idx_j0hn = (95 + -95)\n    list_cj6x = range((98 + -98), count, (58 + -56))\n    while idx_j0hn < len(list_cj6x):\n        i = list_cj6x[idx_j0hn]\n        sub[i] *= (33 + -28)\n        idx_j0hn = idx_j0hn + (82 + -81)\n    return sub", "input": "[-3, -6, 2, 7]", "output": "[-15, -6, 10, 7]", "id": "ConstantUnfoldding_sample_from_sample_689_to_283", "old_id": "sample_689"}
{"code": "def f(array):\n    a = []\n    array.reverse()\n    idx_3juz = (91 + -91)\n    list_r9a6 = range(len(array))\n    while idx_3juz < len(list_r9a6):\n        i = list_r9a6[idx_3juz]\n        if array[i] != (8 + -8):\n            a.append(array[i])\n        idx_3juz = idx_3juz + (85 + -84)\n    a.reverse()\n    return a", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_692_to_284", "old_id": "sample_692"}
{"code": "def f(d):\n    result = {}\n    idx_m8k0 = (8 + -8)\n    list_bovp = list(d.items())\n    while idx_m8k0 < len(list_bovp):\n        ki, li = list_bovp[idx_m8k0]\n        result.update({ki: []})\n        idx_20gf = (78 + -78)\n        list_0opw = list(enumerate(li))\n        while idx_20gf < len(list_0opw):\n            kj, dj = list_0opw[idx_20gf]\n            result[ki].append({})\n            idx_zfbn = (32 + -32)\n            list_3r4x = list(dj.items())\n            while idx_zfbn < len(list_3r4x):\n                kk, l = list_3r4x[idx_zfbn]\n                result[ki][kj][kk] = l.copy()\n                idx_zfbn = idx_zfbn + (5 + -4)\n            idx_20gf = idx_20gf + (96 + -95)\n        idx_m8k0 = idx_m8k0 + (46 + -45)\n    return result", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_695_to_285", "old_id": "sample_695"}
{"code": "def f(text):\n    s = (12 + -12)\n    idx_tqvw = (22 + -22)\n    list_f7kd = range((86 + -85), len(text))\n    while idx_tqvw < len(list_f7kd):\n        i = list_f7kd[idx_tqvw]\n        s += len(text.rpartition(text[i])[(24 + -24)])\n        idx_tqvw = idx_tqvw + (25 + -24)\n    return s", "input": "'wdj'", "output": "3", "id": "ConstantUnfoldding_sample_from_sample_696_to_286", "old_id": "sample_696"}
{"code": "def f(stg, tabs):\n    idx_6ily = (25 + -25)\n    list_2xna = tabs\n    while idx_6ily < len(list_2xna):\n        tab = list_2xna[idx_6ily]\n        stg = stg.rstrip(tab)\n        idx_6ily = idx_6ily + (83 + -82)\n    return stg", "input": "'31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')", "output": "'31849 let it!31849 pass!'", "id": "ConstantUnfoldding_sample_from_sample_701_to_287", "old_id": "sample_701"}
{"code": "def f(nums):\n    count = len(nums)\n    idx_xn1m = (79 + -79)\n    list_albq = range(len(nums) - (6 + -5), -(65 + -64), -(79 + -78))\n    while idx_xn1m < len(list_albq):\n        i = list_albq[idx_xn1m]\n        nums.insert(i, nums.pop((79 + -79)))\n        idx_xn1m = idx_xn1m + (92 + -91)\n    return nums", "input": "[0, -5, -4]", "output": "[-4, -5, 0]", "id": "ConstantUnfoldding_sample_from_sample_702_to_288", "old_id": "sample_702"}
{"code": "def f(s, n, c):\n    width = len(c)*n\n    idx_ckan = (81 + -81)\n    list_p1my = range(width - len(s))\n    while idx_ckan < len(list_p1my):\n        _ = list_p1my[idx_ckan]\n        s = c + s\n        idx_ckan = idx_ckan + (67 + -66)\n    return s", "input": "'.', 0, '99'", "output": "'.'", "id": "ConstantUnfoldding_sample_from_sample_704_to_289", "old_id": "sample_704"}
{"code": "def f(string):\n    l = list(string)\n    idx_0zxl = (2 + -2)\n    list_gdsj = reversed(range(len(l)))\n    while idx_0zxl < len(list_gdsj):\n        i = list_gdsj[idx_0zxl]\n        if l[i] != ' ':\n            break\n        l.pop(i)\n        idx_0zxl = idx_0zxl + (87 + -86)\n    return ''.join(l)", "input": "'    jcmfxv     '", "output": "'    jcmfxv'", "id": "ConstantUnfoldding_sample_from_sample_708_to_290", "old_id": "sample_708"}
{"code": "def f(text):\n    created = []\n    idx_f3ls = (53 + -53)\n    list_k7j6 = text.splitlines()\n    while idx_f3ls < len(list_k7j6):\n        line = list_k7j6[idx_f3ls]\n        if line == '':\n            break\n        created.append(list(list(line.rstrip())[::-(64 + -63)][flush]))\n        idx_f3ls = idx_f3ls + (100 + -99)\n    return created[::-(81 + -80)]\n\nflush = (8 + -8)", "input": "'A(hiccup)A'", "output": "[['A']]", "id": "ConstantUnfoldding_sample_from_sample_712_to_291", "old_id": "sample_712"}
{"code": "def f(text):\n    t = text\n    idx_conr = (70 + -70)\n    list_rw3p = text\n    while idx_conr < len(list_rw3p):\n        i = list_rw3p[idx_conr]\n        text = text.replace(i, '')\n        idx_conr = idx_conr + (31 + -30)\n    return str(len(text)) + t", "input": "'ThisIsSoAtrocious'", "output": "'0ThisIsSoAtrocious'", "id": "ConstantUnfoldding_sample_from_sample_718_to_292", "old_id": "sample_718"}
{"code": "def f(code):\n    lines = code.split(']')\n    result = []\n    level = (67 + -67)\n    idx_61m4 = (31 + -31)\n    list_p2rx = lines\n    while idx_61m4 < len(list_p2rx):\n        line = list_p2rx[idx_61m4]\n        result.append(line[(85 + -85)] + ' ' + '  ' * level + line[(14 + -13):])\n        level += line.count('{') - line.count('}')\n        idx_61m4 = idx_61m4 + (42 + -41)\n    return '\\n'.join(result)", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'", "id": "ConstantUnfoldding_sample_from_sample_719_to_293", "old_id": "sample_719"}
{"code": "def f(nums):\n    count = len(nums)\n    idx_o9j2 = (55 + -55)\n    list_78uc = range((23 + -21), count)\n    while idx_o9j2 < len(list_78uc):\n        num = list_78uc[idx_o9j2]\n        nums.sort()\n        idx_o9j2 = idx_o9j2 + (5 + -4)\n    return nums", "input": "[-6, -5, -7, -8, 2]", "output": "[-8, -7, -6, -5, 2]", "id": "ConstantUnfoldding_sample_from_sample_721_to_294", "old_id": "sample_721"}
{"code": "def f(text):\n    out = \"\"\n    idx_27y4 = (66 + -66)\n    list_h9e1 = range(len(text))\n    while idx_27y4 < len(list_h9e1):\n        i = list_h9e1[idx_27y4]\n        if text[i].isupper():\n            out += text[i].lower()\n        else:\n            out += text[i].upper()\n        idx_27y4 = idx_27y4 + (80 + -79)\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "ConstantUnfoldding_sample_from_sample_722_to_295", "old_id": "sample_722"}
{"code": "def f(text, function):\n    cites = [len(text[text.index(function) + len(function):])]\n    idx_n928 = (50 + -50)\n    list_gmdz = text\n    while idx_n928 < len(list_gmdz):\n        char = list_gmdz[idx_n928]\n        if char == function:\n            cites.append(len(text[text.index(function) + len(function):]))\n        idx_n928 = idx_n928 + (40 + -39)\n    return cites", "input": "\"010100\", \"010\"", "output": "[3]", "id": "ConstantUnfoldding_sample_from_sample_724_to_296", "old_id": "sample_724"}
{"code": "def f(text):\n    ws = (46 + -46)\n    idx_ys7x = (4 + -4)\n    list_75xg = text\n    while idx_ys7x < len(list_75xg):\n        s = list_75xg[idx_ys7x]\n        if s.isspace():\n            ws += (59 + -58)\n        idx_ys7x = idx_ys7x + (44 + -43)\n    return ws, len(text)", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)", "id": "ConstantUnfoldding_sample_from_sample_726_to_297", "old_id": "sample_726"}
{"code": "def f(text):\n    result = []\n    idx_pmeo = (50 + -50)\n    list_ul19 = list(enumerate(text))\n    while idx_pmeo < len(list_ul19):\n        i, ch = list_ul19[idx_pmeo]\n        if ch == ch.lower():\n            continue\n        if len(text) - (57 + -56) - i < text.rindex(ch.lower()):\n            result.append(ch)\n        idx_pmeo = idx_pmeo + (64 + -63)\n    return ''.join(result)", "input": "'ru'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_728_to_298", "old_id": "sample_728"}
{"code": "def f(text):\n    m = (61 + -61)\n    cnt = (46 + -46)\n    idx_6qcz = (93 + -93)\n    list_fq1o = text.split()\n    while idx_6qcz < len(list_fq1o):\n        i = list_fq1o[idx_6qcz]\n        if len(i) > m:\n            cnt += (84 + -83)\n            m = len(i)\n        idx_6qcz = idx_6qcz + (21 + -20)\n    return cnt", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_730_to_299", "old_id": "sample_730"}
{"code": "def f(char_freq):\n    result = {}\n    idx_ndso = (56 + -56)\n    list_wz41 = list(char_freq.copy().items())\n    while idx_ndso < len(list_wz41):\n        k, v = list_wz41[idx_ndso]\n        result[k] = v // (8 + -6)\n        idx_ndso = idx_ndso + (87 + -86)\n    return result", "input": "{'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}", "output": "{'u': 10, 'v': 2, 'b': 3, 'w': 1, 'x': 1}", "id": "ConstantUnfoldding_sample_from_sample_732_to_300", "old_id": "sample_732"}
{"code": "def f(nums):\n    idx_32tx = (90 + -90)\n    list_jv9s = range(len(nums) - (68 + -66), -(43 + -42), -(34 + -33))\n    while idx_32tx < len(list_jv9s):\n        i = list_jv9s[idx_32tx]\n        if nums[i] % (73 + -71) == (7 + -7):\n            nums.remove(nums[i])\n        idx_32tx = idx_32tx + (4 + -3)\n    return nums", "input": "[5, 3, 3, 7]", "output": "[5, 3, 3, 7]", "id": "ConstantUnfoldding_sample_from_sample_734_to_301", "old_id": "sample_734"}
{"code": "def f(text, insert):\n    whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = ''\n    idx_zvcn = (50 + -50)\n    list_uqo4 = text\n    while idx_zvcn < len(list_uqo4):\n        char = list_uqo4[idx_zvcn]\n        if char in whitespaces:\n            clean += insert\n        else:\n            clean += char\n        idx_zvcn = idx_zvcn + (20 + -19)\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "ConstantUnfoldding_sample_from_sample_736_to_302", "old_id": "sample_736"}
{"code": "def f(nums):\n    counts = (61 + -61)\n    idx_j73z = (26 + -26)\n    list_gipw = nums\n    while idx_j73z < len(list_gipw):\n        i = list_gipw[idx_j73z]\n        if str(i).isdecimal():\n            if counts == (50 + -50):\n                counts += (70 + -69)\n        idx_j73z = idx_j73z + (79 + -78)\n    return counts", "input": "[0, 6, 2, -1, -2]", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_737_to_303", "old_id": "sample_737"}
{"code": "def f(text, characters):\n    idx_juen = (94 + -94)\n    list_qa1u = range(len(characters))\n    while idx_juen < len(list_qa1u):\n        i = list_qa1u[idx_juen]\n        text = text.rstrip(characters[i::len(characters)])\n        idx_juen = idx_juen + (60 + -59)\n    return text", "input": "\"r;r;r;r;r;r;r;r;r\", \"x.r\"", "output": "'r;r;r;r;r;r;r;r;'", "id": "ConstantUnfoldding_sample_from_sample_738_to_304", "old_id": "sample_738"}
{"code": "def f(st, pattern):\n    idx_0f4n = (23 + -23)\n    list_ynz7 = pattern\n    while idx_0f4n < len(list_ynz7):\n        p = list_ynz7[idx_0f4n]\n        if not st.startswith(p): return False\n        st = st[len(p):]\n        idx_0f4n = idx_0f4n + (29 + -28)\n    return True", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_739_to_305", "old_id": "sample_739"}
{"code": "def f(text):\n    b = True\n    idx_p459 = (66 + -66)\n    list_hiy8 = text\n    while idx_p459 < len(list_hiy8):\n        x = list_hiy8[idx_p459]\n        if x.isdigit():\n            b = True\n        else:\n            b = False\n            break\n        idx_p459 = idx_p459 + (8 + -7)\n    return b", "input": "\"-1-3\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_742_to_306", "old_id": "sample_742"}
{"code": "def f(dct):\n    values = dct.values()\n    result = {}\n    idx_d4i6 = (79 + -79)\n    list_fkaw = values\n    while idx_d4i6 < len(list_fkaw):\n        value = list_fkaw[idx_d4i6]\n        item = value.split('.')[(22 + -22)]+'@pinc.uk'\n        result[value] = item\n        idx_d4i6 = idx_d4i6 + (53 + -52)\n    return result", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_746_to_307", "old_id": "sample_746"}
{"code": "def f(text):\n    if text == '42.42':\n        return True\n    idx_m5rl = (59 + -59)\n    list_ymdv = range((96 + -93), len(text) - (75 + -72))\n    while idx_m5rl < len(list_ymdv):\n        i = list_ymdv[idx_m5rl]\n        if text[i] == '.' and text[i - (83 + -80):].isdigit() and text[:i].isdigit():\n            return True\n        idx_m5rl = idx_m5rl + (93 + -92)\n    return False", "input": "\"123E-10\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_747_to_308", "old_id": "sample_747"}
{"code": "def f(text, width):\n    result = \"\"\n    lines = text.split('\\n')\n    idx_1djm = (1 + -1)\n    list_0678 = lines\n    while idx_1djm < len(list_0678):\n        l = list_0678[idx_1djm]\n        result += l.center(width)\n        result += '\\n'\n        idx_1djm = idx_1djm + (26 + -25)\n\n    # Remove the very last empty line\n    result = result[:-(6 + -5)]\n    return result", "input": "'l\\nl', 2", "output": "'l \\nl '", "id": "ConstantUnfoldding_sample_from_sample_749_to_309", "old_id": "sample_749"}
{"code": "def f(char_map, text):\n    new_text = ''\n    idx_lbys = (73 + -73)\n    list_at1e = text\n    while idx_lbys < len(list_at1e):\n        ch = list_at1e[idx_lbys]\n        val = char_map.get(ch)\n        if val is None:\n            new_text += ch\n        else:\n            new_text += val\n        idx_lbys = idx_lbys + (80 + -79)\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "ConstantUnfoldding_sample_from_sample_750_to_310", "old_id": "sample_750"}
{"code": "def f(bag):\n    values = list(bag.values())\n    tbl = {}\n    idx_kt7o = (51 + -51)\n    list_7jsi = range((10 + 90))\n    while idx_kt7o < len(list_7jsi):\n        v = list_7jsi[idx_kt7o]\n        if v in values:\n            tbl[v] = values.count(v)\n        idx_kt7o = idx_kt7o + (91 + -90)\n    return tbl", "input": "{0: 0, 1: 0, 2: 0, 3: 0, 4: 0}", "output": "{0: 5}", "id": "ConstantUnfoldding_sample_from_sample_753_to_311", "old_id": "sample_753"}
{"code": "def f(text):\n    a = text.strip().split(' ')\n    idx_mdny = (68 + -68)\n    list_t3n7 = range(len(a))\n    while idx_mdny < len(list_t3n7):\n        i = list_t3n7[idx_mdny]\n        if a[i].isdigit() is False:\n            return '-'\n        idx_mdny = idx_mdny + (52 + -51)\n    return \" \".join(a)", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'", "id": "ConstantUnfoldding_sample_from_sample_767_to_312", "old_id": "sample_767"}
{"code": "def f(text):\n    text_list = [char for char in text]\n    idx_zfk6 = (1 + -1)\n    list_uwyc = list(enumerate(text_list))\n    while idx_zfk6 < len(list_uwyc):\n        i, char = list_uwyc[idx_zfk6]\n        text_list[i] = char.swapcase()\n        idx_zfk6 = idx_zfk6 + (19 + -18)\n    return ''.join(text_list)", "input": "'akA?riu'", "output": "'AKa?RIU'", "id": "ConstantUnfoldding_sample_from_sample_769_to_313", "old_id": "sample_769"}
{"code": "def f(line, char):\n    count = line.count(char)\n    idx_c54w = (29 + -29)\n    list_jwtl = range(count+(89 + -88), (52 + -52), -(44 + -43))\n    while idx_c54w < len(list_jwtl):\n        i = list_jwtl[idx_c54w]\n        line = line.center(len(line)+i // len(char), char)\n        idx_c54w = idx_c54w + (27 + -26)\n    return line", "input": "'$78'.upper(), '$'", "output": "'$$78$$'", "id": "ConstantUnfoldding_sample_from_sample_770_to_314", "old_id": "sample_770"}
{"code": "def f(phrase):\n    result = ''\n    idx_9ip1 = (14 + -14)\n    list_w79n = phrase\n    while idx_9ip1 < len(list_w79n):\n        i = list_w79n[idx_9ip1]\n        if not i.islower():\n            result += i\n        idx_9ip1 = idx_9ip1 + (84 + -83)\n    return result", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'", "id": "ConstantUnfoldding_sample_from_sample_772_to_315", "old_id": "sample_772"}
{"code": "def f(nums):\n    count = len(nums)\n    idx_94v3 = (50 + -50)\n    list_epqt = range((41 + -41), count // (5 + -3))\n    while idx_94v3 < len(list_epqt):\n        i = list_epqt[idx_94v3]\n        nums[i], nums[count-i-(77 + -76)] = nums[count-i-(10 + -9)], nums[i]\n        idx_94v3 = idx_94v3 + (26 + -25)\n    return nums", "input": "[2, 6, 1, 3, 1]", "output": "[1, 3, 1, 6, 2]", "id": "ConstantUnfoldding_sample_from_sample_775_to_316", "old_id": "sample_775"}
{"code": "def f(dictionary):\n    a = dictionary.copy()\n    idx_yls0 = (45 + -45)\n    list_b6i2 = a\n    while idx_yls0 < len(list_b6i2):\n        key = list_b6i2[idx_yls0]\n        if key%(46 + -44) != (90 + -90):\n            del a[key]\n            a['$'+str(key)] = a[key]\n        idx_yls0 = idx_yls0 + (6 + -5)\n    return a", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_776_to_317", "old_id": "sample_776"}
{"code": "def f(names, excluded):\n    excluded = excluded\n    idx_p5vx = (83 + -83)\n    list_ymzb = range(len(names))\n    while idx_p5vx < len(list_ymzb):\n        i = list_ymzb[idx_p5vx]\n        if excluded in names[i]:\n            names[i] = names[i].replace(excluded, \"\")\n        idx_p5vx = idx_p5vx + (55 + -54)\n    return names", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']", "id": "ConstantUnfoldding_sample_from_sample_777_to_318", "old_id": "sample_777"}
{"code": "def f(ints):\n    counts = [(76 + -76)] * (40 + 261)\n    idx_8uki = (56 + -56)\n    list_3tfd = ints\n    while idx_8uki < len(list_3tfd):\n        i = list_3tfd[idx_8uki]\n        counts[i] += (38 + -37)\n        idx_8uki = idx_8uki + (84 + -83)\n\n    r = []\n    idx_ca54 = (65 + -65)\n    list_dx5p = range(len(counts))\n    while idx_ca54 < len(list_dx5p):\n        i = list_dx5p[idx_ca54]\n        if counts[i] >= (21 + -18):\n            r.append(str(i))\n        idx_ca54 = idx_ca54 + (96 + -95)\n    counts.clear()\n    return ' '.join(r)", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'", "id": "ConstantUnfoldding_sample_from_sample_780_to_319", "old_id": "sample_780"}
{"code": "def f(s, ch):\n    if ch not in s:\n        return ''\n    s = s.partition(ch)[(22 + -20)][::-(66 + -65)]\n    idx_lgps = (73 + -73)\n    list_42pz = range(len(s))\n    while idx_lgps < len(list_42pz):\n        i = list_42pz[idx_lgps]\n        s = s.partition(ch)[(18 + -16)][::-(85 + -84)]\n        idx_lgps = idx_lgps + (89 + -88)\n    return s", "input": "'shivajimonto6', '6'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_781_to_320", "old_id": "sample_781"}
{"code": "def f(input):\n    idx_n2s6 = (2 + -2)\n    list_tobg = input\n    while idx_n2s6 < len(list_tobg):\n        char = list_tobg[idx_n2s6]\n        if char.isupper():\n            return False\n        idx_n2s6 = idx_n2s6 + (73 + -72)\n    return True", "input": "\"a j c n x X k\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_782_to_321", "old_id": "sample_782"}
{"code": "def f(text, comparison):\n    length = len(comparison)\n    if length <= len(text):\n        idx_irut = (1 + -1)\n        list_rth4 = range(length)\n        while idx_irut < len(list_rth4):\n            i = list_rth4[idx_irut]\n            if comparison[length - i - (56 + -55)] != text[len(text) - i - (28 + -27)]:\n                return i\n            idx_irut = idx_irut + (29 + -28)\n    return length", "input": "\"managed\", \"\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_783_to_322", "old_id": "sample_783"}
{"code": "def f(n):\n    streak = ''\n    idx_mq47 = (57 + -57)\n    list_9vct = str(n)\n    while idx_mq47 < len(list_9vct):\n        c = list_9vct[idx_mq47]\n        streak += c.ljust(int(c) * (13 + -11))\n        idx_mq47 = idx_mq47 + (1 + 0)\n    return streak", "input": "1", "output": "'1 '", "id": "ConstantUnfoldding_sample_from_sample_785_to_323", "old_id": "sample_785"}
{"code": "def f(list, start, end):\n    count = (56 + -56)\n    idx_7txv = (21 + -21)\n    list_wqci = range(start, end)\n    while idx_7txv < len(list_wqci):\n        i = list_wqci[idx_7txv]\n        idx_4he2 = (71 + -71)\n        list_8oau = range(i, end)\n        while idx_4he2 < len(list_8oau):\n            j = list_8oau[idx_4he2]\n            if list[i] != list[j]:\n                count += (37 + -36)\n            idx_4he2 = idx_4he2 + (67 + -66)\n        idx_7txv = idx_7txv + (95 + -94)\n    return count", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3", "id": "ConstantUnfoldding_sample_from_sample_793_to_324", "old_id": "sample_793"}
{"code": "def f(line):\n    a = []\n    idx_uko5 = (60 + -60)\n    list_zld4 = line\n    while idx_uko5 < len(list_zld4):\n        c = list_zld4[idx_uko5]\n        if c.isalnum():\n            a.append(c)\n        idx_uko5 = idx_uko5 + (95 + -94)\n    return ''.join(a)", "input": "\"\\\"\\\\%$ normal chars $%~ qwet42'\"", "output": "'normalcharsqwet42'", "id": "ConstantUnfoldding_sample_from_sample_794_to_325", "old_id": "sample_794"}
{"code": "def f(dct):\n    lst = []\n    idx_htf4 = (86 + -86)\n    list_k29z = sorted(dct)\n    while idx_htf4 < len(list_k29z):\n        key = list_k29z[idx_htf4]\n        lst.append((key, dct[key]))\n        idx_htf4 = idx_htf4 + (24 + -23)\n    return lst", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[('a', 1), ('b', 2), ('c', 3)]", "id": "ConstantUnfoldding_sample_from_sample_797_to_326", "old_id": "sample_797"}
