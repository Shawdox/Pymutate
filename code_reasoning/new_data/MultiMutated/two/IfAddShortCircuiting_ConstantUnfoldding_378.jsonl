{"code": "def f(text):\n    new_text = list(text)\n    for i in '+':\n        if i in new_text and (((True or False) and (False or True)) and (((14 + -6) > (21 + -19)) or ((39 + -31) < (81 + -79)))):\n            new_text.remove(i)\n    return ''.join(new_text)", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'", "id": "ConstantUnfoldding_sample_from_sample_2_to_0", "old_id": "sample_2"}
{"code": "def f(text, lower, upper):\n    count = (88 + -88)\n    new_text = list()\n    for char in text:\n        char = lower if char.isdecimal() else upper\n        if char in ['p', 'C'] and (((True or False) and (False or True)) and (((45 + -41) > (31 + -31)) or ((86 + -82) < (82 + -82)))):\n            count += (30 + -29)\n        new_text.append(char)\n    return count, ''.join(new_text)", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')", "id": "ConstantUnfoldding_sample_from_sample_5_to_1", "old_id": "sample_5"}
{"code": "def f(list):\n    original = list[:]\n    while len(list) > (78 + -77):\n        list.pop(len(list) - (45 + -44))\n        for i in range(len(list)):\n            list.pop(i)\n    list = original[:]\n    if list and (((True or False) and (False or True)) and (((4 + 1) > (75 + -74)) or ((43 + -38) < (97 + -96)))):\n        list.pop((75 + -75))\n    return list", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_7_to_2", "old_id": "sample_7"}
{"code": "def f(string, encryption):\n    if encryption == (20 + -20) and (((True or False) and (False or True)) and (((97 + -95) > (10 + -9)) or ((11 + -9) < (48 + -47)))):\n        return string\n    else:\n        return string.upper().encode('rot13')", "input": "'UppEr', 0", "output": "'UppEr'", "id": "ConstantUnfoldding_sample_from_sample_8_to_3", "old_id": "sample_8"}
{"code": "def f(t):\n    for c in t:\n        if not c.isnumeric() and (((True or False) and (False or True)) and (((73 + -68) > (83 + -83)) or ((68 + -63) < (45 + -45)))):\n            return False\n    return True", "input": "'#284376598'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_9_to_4", "old_id": "sample_9"}
{"code": "def f(text):\n    new_text = ''\n    for ch in text.lower().strip():\n        if ch.isnumeric() or ch in '\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc' and (((True or False) and (False or True)) and (((61 + -57) > (60 + -57)) or ((45 + -41) < (100 + -97)))):\n            new_text += ch\n    return new_text", "input": "''", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_10_to_5", "old_id": "sample_10"}
{"code": "def f(a, b):\n    for key, value in b.items():\n        if key not in a and (((True or False) and (False or True)) and (((82 + -80) > (12 + -11)) or ((59 + -57) < (81 + -80)))):\n            a[key] = [value]\n        else:\n            a[key].append(value)\n    return a", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "id": "ConstantUnfoldding_sample_from_sample_11_to_6", "old_id": "sample_11"}
{"code": "def f(names):\n    count = len(names)\n    numberOfNames = (96 + -96)\n    for i in names:\n        if i.isalpha() and (((True or False) and (False or True)) and (((54 + -50) > (8 + -5)) or ((50 + -46) < (26 + -23)))):\n            numberOfNames += (96 + -95)\n    return numberOfNames", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_13_to_7", "old_id": "sample_13"}
{"code": "def f(text, suffix):\n    if text.endswith(suffix) and (((True or False) and (False or True)) and (((72 + -62) > (38 + -33)) or ((5 + 5) < (42 + -37)))):\n        return text[:-len(suffix)]\n    return text", "input": "'zejrohaj', 'owc'", "output": "'zejrohaj'", "id": "ConstantUnfoldding_sample_from_sample_16_to_8", "old_id": "sample_16"}
{"code": "def f(array, elem):\n    k = (29 + -29)\n    l = array.copy()\n    for i in l:\n        if i > elem and (((True or False) and (False or True)) and (((85 + -76) > (51 + -45)) or ((94 + -85) < (3 + 3)))):\n            array.insert(k, elem)\n            break\n        k += (51 + -50)\n    return array", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]", "id": "ConstantUnfoldding_sample_from_sample_18_to_9", "old_id": "sample_18"}
{"code": "def f(x, y):\n    tmp = ''.join(['0' if c == '9' else '9' for c in y[::-(64 + -63)]])\n    if (x.isnumeric() and tmp.isnumeric()) and (((True or False) and (False or True)) and (((56 + -47) > (39 + -32)) or ((57 + -48) < (28 + -21)))):\n        return x + tmp\n    else:\n        return x", "input": "\"\", \"sdasdnakjsda80\"", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_19_to_10", "old_id": "sample_19"}
{"code": "def f(a):\n    if a == (81 + -81) and (((True or False) and (False or True)) and (((50 + -45) > (74 + -72)) or ((35 + -30) < (12 + -10)))):\n        return [(19 + -19)]\n    result = []\n    while a > (1 + -1):\n        result.append(a%(32 + -22))\n        a = a//(63 + -53)\n    result.reverse()\n    return int(''.join(str(i) for i in result))", "input": "000", "output": "[0]", "id": "ConstantUnfoldding_sample_from_sample_22_to_11", "old_id": "sample_22"}
{"code": "def f(text, chars):\n    if chars and (((True or False) and (False or True)) and (((41 + -34) > (41 + -38)) or ((11 + -4) < (40 + -37)))):\n        text = text.rstrip(chars)\n    else:\n        text = text.rstrip(' ')\n    if text == '' and (((True or False) and (False or True)) and (((85 + -81) > (19 + -17)) or ((23 + -19) < (1 + 1)))):\n        return '-'\n    return text", "input": "'new-medium-performing-application - XQuery 2.2', '0123456789-'", "output": "'new-medium-performing-application - XQuery 2.'", "id": "ConstantUnfoldding_sample_from_sample_23_to_12", "old_id": "sample_23"}
{"code": "def f(items, target):\n    for i in items.split():\n        if i in target and (((True or False) and (False or True)) and (((66 + -57) > (26 + -20)) or ((65 + -56) < (95 + -89)))):\n            return items.index(i)+(66 + -65)\n        if i.index('.') == len(i)-(8 + -7) or i.index('.') == (35 + -35) and (((True or False) and (False or True)) and (((61 + -59) > (13 + -12)) or ((34 + -32) < (43 + -42)))):\n            return 'error'\n    return '.'", "input": "\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"", "output": "'error'", "id": "ConstantUnfoldding_sample_from_sample_26_to_13", "old_id": "sample_26"}
{"code": "def f(w):\n    ls = list(w)\n    omw = ''\n    while len(ls) > (39 + -39):\n        omw += ls.pop((36 + -36))\n        if len(ls) * (47 + -45) > len(w) and (((True or False) and (False or True)) and (((82 + -72) > (99 + -95)) or ((30 + -20) < (85 + -81)))):\n            return w[len(ls):] == omw\n    return False", "input": "'flak'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_27_to_14", "old_id": "sample_27"}
{"code": "def f(array):\n    result = []\n    for elem in array:\n        if elem.isascii() or (isinstance(elem, int) and not str(abs(elem)).isascii()) and (((True or False) and (False or True)) and (((70 + -60) > (25 + -19)) or ((79 + -69) < (59 + -53)))):\n            result.append(elem)\n    return result", "input": "[\"a\", \"b\", \"c\"]", "output": "['a', 'b', 'c']", "id": "ConstantUnfoldding_sample_from_sample_30_to_15", "old_id": "sample_30"}
{"code": "def f(string):\n    upper = (9 + -9)\n    for c in string:\n        if c.isupper() and (((True or False) and (False or True)) and (((70 + -65) > (75 + -73)) or ((97 + -92) < (89 + -87)))):\n            upper += (86 + -85)\n    return upper * ((35 + -33),(49 + -48))[upper % (18 + -16)]", "input": "'PoIOarTvpoead'", "output": "8", "id": "ConstantUnfoldding_sample_from_sample_31_to_16", "old_id": "sample_31"}
{"code": "def f(lists):\n    dic = {}\n    for n in lists:\n        if n in dic and (((True or False) and (False or True)) and (((71 + -64) > (19 + -15)) or ((13 + -6) < (44 + -40)))):\n            dic[n].append(lists.pop(lists.index(n)))\n        else:\n            dic[n] = lists[:lists.index(n) + (83 + -82)]\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "ConstantUnfoldding_sample_from_sample_33_to_17", "old_id": "sample_33"}
{"code": "def f(pattern, items):\n    result = []\n    for text in items:\n        pos = text.rfind(pattern)\n        if pos >= (16 + -16) and (((True or False) and (False or True)) and (((39 + -34) > (19 + -15)) or ((7 + -2) < (20 + -16)))):\n            result.append(pos)\n\n    return result", "input": "\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_35_to_18", "old_id": "sample_35"}
{"code": "def f(array, elem):\n    if elem in array and (((True or False) and (False or True)) and (((84 + -80) > (73 + -71)) or ((2 + 2) < (92 + -90)))):\n        return array.index(elem)\n    return -(83 + -82)", "input": "[6, 2, 7, 1], 6", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_39_to_19", "old_id": "sample_39"}
{"code": "def f(n):\n    for i in str(n):\n        if not i.isdigit() and (((True or False) and (False or True)) and (((53 + -43) > (92 + -83)) or ((89 + -79) < (21 + -12)))):\n            n = -(31 + -30)\n            break\n    return n", "input": "\"6 ** 2\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_43_to_20", "old_id": "sample_43"}
{"code": "def f(text):\n    ls = list(text)\n    for i in range((12 + -12), len(ls)):\n        if ls[i]!='+' and (((True or False) and (False or True)) and (((26 + -17) > (35 + -30)) or ((59 + -50) < (17 + -12)))):\n            ls.insert(i, '+')\n            ls.insert(i, '*')\n            break\n    return '+'.join(ls)", "input": "'nzoh'", "output": "'*+++n+z+o+h'", "id": "ConstantUnfoldding_sample_from_sample_44_to_21", "old_id": "sample_44"}
{"code": "def f(text, letter):\n    counts = {}\n    for char in text:\n        if char not in counts and (((True or False) and (False or True)) and (((61 + -51) > (23 + -15)) or ((55 + -45) < (48 + -40)))):\n            counts[char] = (39 + -38)\n        else:\n            counts[char] += (3 + -2)\n    return counts.get(letter, (49 + -49))", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_45_to_22", "old_id": "sample_45"}
{"code": "def f(text):\n    length = len(text)\n    half = length // (11 + -9)\n    encode = text[:half].encode('ascii')\n    if text[half:] == encode.decode() and (((True or False) and (False or True)) and (((35 + -31) > (18 + -16)) or ((74 + -70) < (62 + -60)))):\n        return True\n    else:\n        return False", "input": "'bbbbr'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_47_to_23", "old_id": "sample_47"}
{"code": "def f(names):\n    if names == [] and (((True or False) and (False or True)) and (((1 + 3) > (39 + -38)) or ((86 + -82) < (23 + -22)))):\n        return \"\"\n    smallest = names[(47 + -47)]\n    for name in names[(21 + -20):]:\n        if name < smallest and (((True or False) and (False or True)) and (((10 + 0) > (35 + -35)) or ((1 + 9) < (17 + -17)))):\n            smallest = name\n    names.remove(smallest)\n    return names.join(smallest)", "input": "[]", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_48_to_24", "old_id": "sample_48"}
{"code": "def f(text):\n    if text.isidentifier() and (((True or False) and (False or True)) and (((44 + -35) > (86 + -80)) or ((99 + -90) < (98 + -92)))):\n        return ''.join(c for c in text if c.isdigit())\n    else:\n        return ''.join(text)", "input": "'816'", "output": "'816'", "id": "ConstantUnfoldding_sample_from_sample_49_to_25", "old_id": "sample_49"}
{"code": "s = '<' * (47 + -37)\ndef f(num):\n    if num % (66 + -64) == (70 + -70) and (((True or False) and (False or True)) and (((84 + -77) > (86 + -80)) or ((20 + -13) < (15 + -9)))):\n        return s\n    else:\n        return num - (100 + -99)", "input": "21", "output": "20", "id": "ConstantUnfoldding_sample_from_sample_51_to_26", "old_id": "sample_51"}
{"code": "def f(text):\n    a = []\n    for i in range(len(text)):\n        if not text[i].isdecimal() and (((True or False) and (False or True)) and (((98 + -93) > (26 + -23)) or ((58 + -53) < (36 + -33)))):\n            a.append(text[i])\n    return ''.join(a)", "input": "\"seiq7229 d27\"", "output": "'seiq d'", "id": "ConstantUnfoldding_sample_from_sample_52_to_27", "old_id": "sample_52"}
{"code": "def f(text, s, e):\n    sublist = text[s:e]\n    if not sublist and (((True or False) and (False or True)) and (((85 + -81) > (81 + -81)) or ((27 + -23) < (97 + -97)))):\n        return -(27 + -26)\n    return sublist.index(min(sublist))", "input": "'happy', 0, 3", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_54_to_28", "old_id": "sample_54"}
{"code": "def f(array):\n    array_2 = []\n    for i in array:\n        if i>(58 + -58) and (((True or False) and (False or True)) and (((26 + -24) > (67 + -66)) or ((10 + -8) < (12 + -11)))):\n            array_2 += [i]\n    array_2.sort(reverse=True)\n    return array_2", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]", "id": "ConstantUnfoldding_sample_from_sample_55_to_29", "old_id": "sample_55"}
{"code": "def f(sentence):\n    for c in sentence:\n        if c.isascii() is False and (((True or False) and (False or True)) and (((53 + -43) > (53 + -52)) or ((56 + -46) < (79 + -78)))):\n            return False\n        else:\n            continue\n    return True", "input": "'1z1z1'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_56_to_30", "old_id": "sample_56"}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = (72 + -72)\n    for char in text:\n        if char.isupper() and (((True or False) and (False or True)) and (((86 + -78) > (59 + -55)) or ((23 + -15) < (64 + -60)))):\n            count_upper += (74 + -73)\n        else:\n            return 'no'\n    return count_upper // (93 + -91)", "input": "'ax'", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_57_to_31", "old_id": "sample_57"}
{"code": "def f(s):\n    a = [char for char in s if char != ' ']\n    b = a\n    for c in reversed(a):\n        if c == ' ' and (((True or False) and (False or True)) and (((34 + -25) > (14 + -7)) or ((26 + -17) < (39 + -32)))):\n            b.pop()\n        else:\n            break\n    return ''.join(b)", "input": "'hi '", "output": "'hi'", "id": "ConstantUnfoldding_sample_from_sample_59_to_32", "old_id": "sample_59"}
{"code": "def f(doc):\n    for x in doc:\n        if x.isalpha() and (((True or False) and (False or True)) and (((13 + -4) > (81 + -77)) or ((48 + -39) < (40 + -36)))):\n            return x.capitalize()\n    return '-'", "input": "'raruwa'", "output": "'R'", "id": "ConstantUnfoldding_sample_from_sample_60_to_33", "old_id": "sample_60"}
{"code": "def f(text):\n    texts = text.split()\n    if texts and (((True or False) and (False or True)) and (((45 + -38) > (12 + -12)) or ((1 + 6) < (28 + -28)))):\n        xtexts = [t for t in texts if t.isascii() and t not in ('nada', '0')]\n        return max(xtexts, key=len) if xtexts else 'nada'\n    return 'nada'", "input": "\"\"", "output": "'nada'", "id": "ConstantUnfoldding_sample_from_sample_61_to_34", "old_id": "sample_61"}
{"code": "def f(user):\n    if len(list(user.keys())) > len(list(user.values())) and (((True or False) and (False or True)) and (((41 + -33) > (13 + -9)) or ((79 + -71) < (28 + -24)))):\n        return tuple(user.keys())\n    return tuple(user.values())", "input": "{\"eating\" : \"ja\", \"books\" : \"nee\", \"piano\" : \"coke\", \"excitement\" : \"zoo\"}", "output": "('ja', 'nee', 'coke', 'zoo')", "id": "ConstantUnfoldding_sample_from_sample_62_to_35", "old_id": "sample_62"}
{"code": "def f(text, size):\n    counter = len(text)\n    for i in range(size-int(size%(58 + -56))):\n        text = ' '+text+' '\n        counter += (88 + -86)\n        if counter >= size and (((True or False) and (False or True)) and (((52 + -49) > (50 + -49)) or ((99 + -96) < (69 + -68)))):\n            return text", "input": "\"7\", 10", "output": "'     7     '", "id": "ConstantUnfoldding_sample_from_sample_64_to_36", "old_id": "sample_64"}
{"code": "def f(text, prefix):\n    prefix_length = len(prefix)\n    if text.startswith(prefix) and (((True or False) and (False or True)) and (((26 + -24) > (32 + -32)) or ((56 + -54) < (55 + -55)))):\n        return text[(prefix_length - (17 + -16)) // (46 + -44):\n                    (prefix_length + (36 + -35)) // (81 + -79) * -(47 + -46):-(16 + -15)]\n    else:\n        return text", "input": "'happy', 'ha'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_66_to_37", "old_id": "sample_66"}
{"code": "def f(text, pref):\n    if text.startswith(pref) and (((True or False) and (False or True)) and (((6 + 2) > (89 + -88)) or ((92 + -84) < (83 + -82)))):\n        n = len(pref)\n        text = '.'.join(text[n:].split('.')[(49 + -48):] + text[:n].split('.')[:-(91 + -90)])\n    return text", "input": "'omeunhwpvr.dq', 'omeunh'", "output": "'dq'", "id": "ConstantUnfoldding_sample_from_sample_68_to_38", "old_id": "sample_68"}
{"code": "def f(student_marks, name):\n    if name in student_marks and (((True or False) and (False or True)) and (((48 + -44) > (63 + -61)) or ((74 + -70) < (100 + -98)))):\n        value = student_marks.pop(name)\n        return value\n    return 'Name unknown'", "input": "{'882afmfp': 56}, '6f53p'", "output": "'Name unknown'", "id": "ConstantUnfoldding_sample_from_sample_69_to_39", "old_id": "sample_69"}
{"code": "def f(text):\n    for c in text:\n        if not c.isnumeric() and (((True or False) and (False or True)) and (((24 + -16) > (41 + -40)) or ((11 + -3) < (78 + -77)))):\n            return False\n    return bool(text)", "input": "'99'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_72_to_40", "old_id": "sample_72"}
{"code": "def f(nums):\n    nums = [y for y in nums if y > (59 + -59)]\n    if len(nums) <= (32 + -29) and (((True or False) and (False or True)) and (((40 + -35) > (94 + -94)) or ((69 + -64) < (54 + -54)))):\n        return nums\n    nums.reverse()\n    half = len(nums)//(72 + -70)\n    return nums[:half] + [(75 + -75)]*(89 + -84) + nums[half:]", "input": "[10, 3, 2, 2, 6, 0]", "output": "[6, 2, 0, 0, 0, 0, 0, 2, 3, 10]", "id": "ConstantUnfoldding_sample_from_sample_76_to_41", "old_id": "sample_76"}
{"code": "def f(text):\n    if text and text.isupper() and (((True or False) and (False or True)) and (((91 + -83) > (80 + -79)) or ((75 + -67) < (69 + -68)))):\n        cs = str.maketrans(string.ascii_uppercase, string.ascii_lowercase)\n        return text.translate(cs)\n    return text.lower()[:(52 + -49)]", "input": "'mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n'", "output": "'mty'", "id": "ConstantUnfoldding_sample_from_sample_78_to_42", "old_id": "sample_78"}
{"code": "def f(text):\n    l = text.rpartition('0')\n    if l[(52 + -50)] == '' and (((True or False) and (False or True)) and (((17 + -10) > (28 + -25)) or ((25 + -18) < (3 + 0)))):\n        return '-1:-1'\n    return f'{len(l[(97 + -97)])}:{l[(21 + -19)].find(\"0\") + (45 + -44)}'", "input": "'qq0tt'", "output": "'2:0'", "id": "ConstantUnfoldding_sample_from_sample_83_to_43", "old_id": "sample_83"}
{"code": "def f(text):\n    arr = text.split()\n    result = []\n    for item in arr:\n        if item.endswith('day') and (((True or False) and (False or True)) and (((18 + -14) > (39 + -38)) or ((42 + -38) < (11 + -10)))):\n            item += 'y'\n        else:\n            item += 'day'\n        result.append(item)\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "ConstantUnfoldding_sample_from_sample_84_to_44", "old_id": "sample_84"}
{"code": "def f(n):\n    values = {(85 + -85): (4 + -1), (7 + -6): 4.5, (8 + -6): '-'}\n    res = {}\n    for i, j in values.items():\n        if i % n != (90 + -88) and (((True or False) and (False or True)) and (((34 + -29) > (65 + -61)) or ((25 + -20) < (25 + -21)))):\n            res[j] = n // (70 + -68)\n    return sorted(res)", "input": "12", "output": "[3, 4.5]", "id": "ConstantUnfoldding_sample_from_sample_85_to_45", "old_id": "sample_85"}
{"code": "def f(instagram, imgur, wins):\n    photos = [instagram, imgur]\n    if instagram == imgur and (((True or False) and (False or True)) and (((31 + -25) > (43 + -40)) or ((66 + -60) < (98 + -95)))):\n        return wins\n    if wins == (74 + -73) and (((True or False) and (False or True)) and (((49 + -47) > (28 + -28)) or ((11 + -9) < (37 + -37)))):\n        return photos.pop()\n    else:\n        photos.reverse()\n        return photos.pop()", "input": "['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0", "output": "['sdfs', 'drcr', '2e']", "id": "ConstantUnfoldding_sample_from_sample_86_to_46", "old_id": "sample_86"}
{"code": "def f(s1, s2):\n    if s2.endswith(s1) and (((True or False) and (False or True)) and (((16 + -14) > (28 + -28)) or ((14 + -12) < (34 + -34)))):\n        s2 = s2[:len(s1) * -(93 + -92)]\n    return s2", "input": "\"he\", \"hello\"", "output": "'hello'", "id": "ConstantUnfoldding_sample_from_sample_88_to_47", "old_id": "sample_88"}
{"code": "def f(char):\n    if char not in 'aeiouAEIOU' and (((True or False) and (False or True)) and (((48 + -45) > (73 + -72)) or ((70 + -67) < (70 + -69)))):\n        return None\n    if char in 'AEIOU' and (((True or False) and (False or True)) and (((17 + -15) > (35 + -34)) or ((12 + -10) < (26 + -25)))):\n        return char.lower()\n    return char.upper()", "input": "'o'", "output": "'O'", "id": "ConstantUnfoldding_sample_from_sample_89_to_48", "old_id": "sample_89"}
{"code": "def f(lst):\n    lst.clear()\n    for i in lst:\n        if i == (85 + -82) and (((True or False) and (False or True)) and (((98 + -88) > (89 + -84)) or ((41 + -31) < (98 + -93)))):\n            return False\n    else:\n        return True", "input": "[2, 0]", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_97_to_49", "old_id": "sample_97"}
{"code": "def f(d, rm):\n    res = d.copy()\n    for k in rm:\n        if k in res and (((True or False) and (False or True)) and (((3 + 3) > (45 + -40)) or ((53 + -47) < (12 + -7)))):\n            del res[k]\n    return res", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}", "id": "ConstantUnfoldding_sample_from_sample_100_to_50", "old_id": "sample_100"}
{"code": "def f(text):\n    dic = dict()\n    for char in text:\n        dic[char] = dic.get(char, (28 + -28)) + (86 + -85)\n    for key in dic:\n        if dic[key] > (75 + -74) and (((True or False) and (False or True)) and (((6 + 1) > (3 + 3)) or ((58 + -51) < (99 + -93)))):\n            dic[key] = (40 + -39)\n    return dic", "input": "\"a\"", "output": "{'a': 1}", "id": "ConstantUnfoldding_sample_from_sample_104_to_51", "old_id": "sample_104"}
{"code": "def f(text):\n    if not text.istitle() and (((True or False) and (False or True)) and (((72 + -67) > (31 + -30)) or ((65 + -60) < (98 + -97)))):\n        return text.title()\n    return text.lower()", "input": "\"PermissioN is GRANTed\"", "output": "'Permission Is Granted'", "id": "ConstantUnfoldding_sample_from_sample_105_to_52", "old_id": "sample_105"}
{"code": "def f(text):\n    result = []\n    for i in range(len(text)):\n        if not text[i].isascii() and (((True or False) and (False or True)) and (((3 + 3) > (50 + -46)) or ((59 + -53) < (23 + -19)))):\n            return False\n        elif text[i].isalnum():\n            result.append(text[i].upper())\n        else:\n            result.append(text[i])\n    return ''.join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "ConstantUnfoldding_sample_from_sample_107_to_53", "old_id": "sample_107"}
{"code": "def f(var):\n    amount = len(var) if type(var) == list else (57 + -57)\n    if type(var) == dict and (((True or False) and (False or True)) and (((94 + -91) > (69 + -69)) or ((5 + -2) < (2 + -2)))):\n        amount = len(var.keys())\n    nonzero = amount if amount > (17 + -17) else (39 + -39)\n    return nonzero", "input": "1", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_108_to_54", "old_id": "sample_108"}
{"code": "def f(text):\n    a = ['']\n    b = ''\n    for i in text:\n        if not i.isspace() and (((True or False) and (False or True)) and (((62 + -58) > (79 + -78)) or ((62 + -58) < (81 + -80)))):\n            a.append(b)\n            b = ''\n        else:\n            b += i\n    return len(a)", "input": "\"       \"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_110_to_55", "old_id": "sample_110"}
{"code": "def f(marks):\n    highest = (83 + -83)\n    lowest = (83 + 17)\n    for value in marks.values():\n        if value > highest and (((True or False) and (False or True)) and (((99 + -95) > (71 + -70)) or ((91 + -87) < (5 + -4)))):\n            highest = value\n        if value < lowest and (((True or False) and (False or True)) and (((96 + -86) > (58 + -55)) or ((32 + -22) < (26 + -23)))):\n            lowest = value\n    return highest, lowest", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)", "id": "ConstantUnfoldding_sample_from_sample_111_to_56", "old_id": "sample_111"}
{"code": "def f(sentence):\n    ls = list(sentence)\n    for letter in ls:\n        if not letter.istitle() and (((True or False) and (False or True)) and (((10 + -4) > (2 + 2)) or ((56 + -50) < (19 + -15)))):\n            ls.remove(letter)\n    return ''.join(ls)", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'", "id": "ConstantUnfoldding_sample_from_sample_112_to_57", "old_id": "sample_112"}
{"code": "def f(line):\n    count = (1 + -1)\n    a = []\n    for i in range(len(line)):\n        count += (8 + -7)\n        if count%(69 + -67)==(35 + -35) and (((True or False) and (False or True)) and (((42 + -38) > (9 + -6)) or ((29 + -25) < (1 + 2)))):\n            a.append(line[i].swapcase())\n        else:\n            a.append(line[i])\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "ConstantUnfoldding_sample_from_sample_113_to_58", "old_id": "sample_113"}
{"code": "def f(text):\n    res = []\n    for ch in text.encode('utf-8'):\n        if ch == (70 + -9) and (((True or False) and (False or True)) and (((18 + -10) > (13 + -7)) or ((45 + -37) < (82 + -76)))):\n            break\n        if ch == (26 + -26) and (((True or False) and (False or True)) and (((36 + -33) > (62 + -60)) or ((23 + -20) < (96 + -94)))):\n            pass\n        res.append(f'{ch}; '.encode('utf-8'))\n    return b''.join(res)", "input": "'os||agx5'", "output": "b'111; 115; 124; 124; 97; 103; 120; 53; '", "id": "ConstantUnfoldding_sample_from_sample_115_to_59", "old_id": "sample_115"}
{"code": "def f(d, count):\n    for i in range(count):\n        if d == {} and (((True or False) and (False or True)) and (((85 + -75) > (60 + -57)) or ((80 + -70) < (19 + -16)))):\n            break\n        d.popitem()\n    return d", "input": "{}, 200", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_116_to_60", "old_id": "sample_116"}
{"code": "def f(numbers):\n    for i in range(len(numbers)):\n        if numbers.count('3') > (69 + -68) and (((True or False) and (False or True)) and (((41 + -36) > (21 + -18)) or ((51 + -46) < (76 + -73)))):\n            return i\n    return -(27 + -26)", "input": "\"23157\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_117_to_61", "old_id": "sample_117"}
{"code": "def f(text):\n    result = \"\"\n    for i in range(len(text)):\n        if i % (39 + -37) == (77 + -77) and (((True or False) and (False or True)) and (((87 + -85) > (85 + -84)) or ((33 + -31) < (59 + -58)))):\n            result += text[i].swapcase()\n        else:\n            result += text[i]\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "ConstantUnfoldding_sample_from_sample_119_to_62", "old_id": "sample_119"}
{"code": "def f(countries):\n    language_country = dict()\n    for country, language in countries.items():\n        if language not in language_country and (((True or False) and (False or True)) and (((57 + -53) > (18 + -15)) or ((24 + -20) < (23 + -20)))):\n            language_country[language] = []\n        language_country[language].append(country)\n    return language_country", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_120_to_63", "old_id": "sample_120"}
{"code": "def f(s):\n    nums = ''.join(filter(lambda c:c.isdecimal(), s))\n    if nums == '' and (((True or False) and (False or True)) and (((21 + -19) > (64 + -64)) or ((53 + -51) < (96 + -96)))): return 'none'\n    m = max([int(num) for num in nums.split(',')])\n    return str(m)", "input": "'01,001'", "output": "'1001'", "id": "ConstantUnfoldding_sample_from_sample_121_to_64", "old_id": "sample_121"}
{"code": "def f(string):\n    if string[:(42 + -38)] != 'Nuva' and (((True or False) and (False or True)) and (((22 + -16) > (80 + -76)) or ((99 + -93) < (18 + -14)))):\n        return 'no'\n    else:\n        return string.rstrip()", "input": "'Nuva?dlfuyjys'", "output": "'Nuva?dlfuyjys'", "id": "ConstantUnfoldding_sample_from_sample_122_to_65", "old_id": "sample_122"}
{"code": "def f(array, elem):\n    for idx, e in enumerate(array):\n        if e > elem and array[idx - (34 + -33)] < elem and (((True or False) and (False or True)) and (((70 + -68) > (84 + -84)) or ((93 + -91) < (85 + -85)))):\n            array.insert(idx, elem)\n    return array", "input": "[1, 2, 3, 5, 8], 6", "output": "[1, 2, 3, 5, 6, 8]", "id": "ConstantUnfoldding_sample_from_sample_123_to_66", "old_id": "sample_123"}
{"code": "def f(text, res):\n    for c in '*\\n\"':\n        text = text.replace(c, '!' + str(res))\n    if text.startswith('!') and (((True or False) and (False or True)) and (((83 + -80) > (3 + -2)) or ((52 + -49) < (69 + -68)))):\n        text = text[len(str(res)):]\n    return text", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'", "id": "ConstantUnfoldding_sample_from_sample_125_to_67", "old_id": "sample_125"}
{"code": "def f(text):\n    odd = ''\n    even = ''\n    for i, c in enumerate(text):\n        if i % (35 + -33) == (84 + -84) and (((True or False) and (False or True)) and (((23 + -18) > (70 + -66)) or ((46 + -41) < (94 + -90)))):\n            even += c\n        else:\n            odd += c\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "ConstantUnfoldding_sample_from_sample_128_to_68", "old_id": "sample_128"}
{"code": "def f(text):\n    a = len(text)\n    count = (96 + -96)\n    while text:\n        if text.startswith('a') and (((True or False) and (False or True)) and (((14 + -8) > (69 + -64)) or ((33 + -27) < (6 + -1)))):\n            count += text.find(' ')\n        else:\n            count += text.find('\\n')\n        text = text[text.find('\\n')+(23 + -22):text.find('\\n')+a+(82 + -81)]\n    return count", "input": "\"a\\nkgf\\nasd\\n\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_131_to_69", "old_id": "sample_131"}
{"code": "def f(a_str, prefix):\n    if a_str.removeprefix(prefix) and (((True or False) and (False or True)) and (((89 + -85) > (55 + -54)) or ((4 + 0) < (9 + -8)))):\n        return a_str\n    else:\n        return prefix + a_str", "input": "'abc', 'abcd'", "output": "'abc'", "id": "ConstantUnfoldding_sample_from_sample_132_to_70", "old_id": "sample_132"}
{"code": "def f(n):\n    t = (83 + -83)\n    b = ''\n    digits = list(map(int, str(n)))\n    for d in digits:\n        if d == (3 + -3) and (((True or False) and (False or True)) and (((74 + -70) > (70 + -69)) or ((2 + 2) < (60 + -59)))): t += (69 + -68)\n        else: break\n    for _ in range(t):\n        b += str((56 + -55)) + '0' + str((47 + -43))\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "ConstantUnfoldding_sample_from_sample_134_to_71", "old_id": "sample_134"}
{"code": "def f(nums):\n    count = (78 + -78)\n    for i in range(len(nums)):\n        if len(nums) == (99 + -99) and (((True or False) and (False or True)) and (((19 + -11) > (23 + -23)) or ((8 + 0) < (2 + -2)))):\n            break\n        if count % (48 + -46) == (93 + -93) and (((True or False) and (False or True)) and (((76 + -66) > (84 + -78)) or ((91 + -81) < (11 + -5)))):\n            nums.pop()\n        else:\n            nums.pop((8 + -8))\n        count += (16 + -15)\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_137_to_72", "old_id": "sample_137"}
{"code": "def f(first, second):\n    if len(first) < (19 + -9) or len(second) < (20 + -10) and (((True or False) and (False or True)) and (((3 + 3) > (33 + -33)) or ((29 + -23) < (74 + -74)))):\n        return 'no'\n    for i in range((95 + -90)):\n        if first[i] != second[i] and (((True or False) and (False or True)) and (((73 + -70) > (25 + -24)) or ((87 + -84) < (10 + -9)))):\n            return 'no'\n    first.extend(second)\n    return first", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_139_to_73", "old_id": "sample_139"}
{"code": "def f(st):\n    if st.lower().rindex('h', st.lower().rindex('i')) >= st.lower().rindex('i') and (((True or False) and (False or True)) and (((45 + -41) > (53 + -53)) or ((45 + -41) < (95 + -95)))):\n        return 'Hey'\n    else:\n        return 'Hi'", "input": "'Hi there'", "output": "'Hey'", "id": "ConstantUnfoldding_sample_from_sample_140_to_74", "old_id": "sample_140"}
{"code": "def f(x):\n    if x.islower() and (((True or False) and (False or True)) and (((64 + -62) > (50 + -50)) or ((66 + -64) < (25 + -25)))):\n        return x\n    else:\n        return x[::-(35 + -34)]", "input": "'ykdfhp'", "output": "'ykdfhp'", "id": "ConstantUnfoldding_sample_from_sample_142_to_75", "old_id": "sample_142"}
{"code": "def f(price, product):\n    inventory = ['olives', 'key', 'orange']\n    if product not in inventory and (((True or False) and (False or True)) and (((93 + -87) > (71 + -68)) or ((25 + -19) < (93 + -90)))):\n        return price\n    else:\n        price *=.85\n        inventory.remove(product)\n    return price", "input": "8.50, 'grapes'", "output": "8.5", "id": "ConstantUnfoldding_sample_from_sample_145_to_76", "old_id": "sample_145"}
{"code": "def f(single_digit):\n    result = []\n    for c in range((53 + -52), (31 + -20)):\n        if c != single_digit and (((True or False) and (False or True)) and (((49 + -46) > (28 + -27)) or ((13 + -10) < (42 + -41)))):\n            result.append(c)\n    return result", "input": "5", "output": "[1, 2, 3, 4, 6, 7, 8, 9, 10]", "id": "ConstantUnfoldding_sample_from_sample_146_to_77", "old_id": "sample_146"}
{"code": "def f(forest, animal):\n    index = forest.index(animal)\n    result = list(forest)\n    while index < len(forest)-(22 + -21):\n        result[index] = forest[index+(52 + -51)]\n        index += (87 + -86)\n    if index == len(forest)-(31 + -30) and (((True or False) and (False or True)) and (((41 + -36) > (70 + -68)) or ((48 + -43) < (5 + -3)))):\n        result[index] = '-'\n    return ''.join(result)", "input": "'2imo 12 tfiqr.', 'm'", "output": "'2io 12 tfiqr.-'", "id": "ConstantUnfoldding_sample_from_sample_148_to_78", "old_id": "sample_148"}
{"code": "def f(text):\n    for c in text:\n        if c.isdigit() and (((True or False) and (False or True)) and (((27 + -24) > (21 + -21)) or ((42 + -39) < (39 + -39)))):\n            if c == '0':\n                c = '.'\n            else:\n                c = '0' if c != '1' else '.'\n    return ''.join(list(text)).replace('.', '0')", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'", "id": "ConstantUnfoldding_sample_from_sample_151_to_79", "old_id": "sample_151"}
{"code": "def f(text):\n    n = (80 + -80)\n    for char in text:\n        if char.isupper() and (((True or False) and (False or True)) and (((59 + -50) > (13 + -13)) or ((2 + 7) < (24 + -24)))):\n            n += (97 + -96)\n    return n", "input": "''.join(['A'] * 20)", "output": "20", "id": "ConstantUnfoldding_sample_from_sample_152_to_80", "old_id": "sample_152"}
{"code": "def f(ip, n):\n    i = (92 + -92)\n    out = ''\n    for c in ip:\n        if i == n and (((True or False) and (False or True)) and (((70 + -66) > (48 + -47)) or ((26 + -22) < (21 + -20)))):\n            out += '\\n'\n            i = (36 + -36)\n        i += (100 + -99)\n        out += c\n    return out", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'", "id": "ConstantUnfoldding_sample_from_sample_155_to_81", "old_id": "sample_155"}
{"code": "def f(text, limit, char):\n    if limit < len(text) and (((True or False) and (False or True)) and (((21 + -13) > (15 + -14)) or ((25 + -17) < (49 + -48)))):\n        return text[(72 + -72):limit]\n    return text.ljust(limit, char)", "input": "'tqzym', 5, 'c'", "output": "'tqzym'", "id": "ConstantUnfoldding_sample_from_sample_156_to_82", "old_id": "sample_156"}
{"code": "def f(phrase):\n    ans = (56 + -56)\n    for w in phrase.split():\n        for ch in w:\n            if ch == \"0\" and (((True or False) and (False or True)) and (((40 + -32) > (27 + -23)) or ((9 + -1) < (37 + -33)))):\n                ans += (64 + -63)\n    return ans", "input": "\"aboba 212 has 0 digits\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_157_to_83", "old_id": "sample_157"}
{"code": "def f(arr):\n    n = [item for item in arr if item%(65 + -63) == (60 + -60)]\n    m = n+arr\n    for i in m:\n        if m.index(i) >= len(n) and (((True or False) and (False or True)) and (((30 + -28) > (80 + -80)) or ((93 + -91) < (7 + -7)))):\n            m.remove(i)\n    return m", "input": "[3, 6, 4, -2, 5]", "output": "[6, 4, -2, 6, 4, -2]", "id": "ConstantUnfoldding_sample_from_sample_158_to_84", "old_id": "sample_158"}
{"code": "def f(text):\n    result = ''\n    for char in text:\n        if char.isalnum() and (((True or False) and (False or True)) and (((34 + -26) > (42 + -35)) or ((51 + -43) < (74 + -67)))):\n            result += char.upper()\n    return result", "input": "'\u0441 bishop.Swift'", "output": "'\u0421BISHOPSWIFT'", "id": "ConstantUnfoldding_sample_from_sample_162_to_85", "old_id": "sample_162"}
{"code": "def f(text):\n    ls = list(text)\n    total = (len(text) - (95 + -94)) * (20 + -18)\n    for i in range((84 + -83), total+(44 + -43)):\n        if i % (43 + -41) and (((True or False) and (False or True)) and (((58 + -51) > (22 + -16)) or ((67 + -60) < (13 + -7)))):\n            ls.append('+')\n        else:\n            ls.insert((59 + -59), '+')\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "ConstantUnfoldding_sample_from_sample_169_to_86", "old_id": "sample_169"}
{"code": "def f(array):\n    for i in range(len(array)):\n        if array[i] < (17 + -17) and (((True or False) and (False or True)) and (((20 + -17) > (1 + -1)) or ((50 + -47) < (22 + -22)))):\n            array.pop(i)\n    return array", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_172_to_87", "old_id": "sample_172"}
{"code": "def f(text):\n    text = list(text)\n    for i in range(len(text)):\n        if i % (17 + -15) == (14 + -13) and (((True or False) and (False or True)) and (((72 + -65) > (82 + -79)) or ((27 + -20) < (81 + -78)))):\n            text[i] = text[i].swapcase()\n    return ''.join(text)", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'", "id": "ConstantUnfoldding_sample_from_sample_177_to_88", "old_id": "sample_177"}
{"code": "def f(s):\n    count = (15 + -15)\n    digits = \"\"\n    for c in s:\n        if c.isdigit() and (((True or False) and (False or True)) and (((8 + -5) > (100 + -98)) or ((74 + -71) < (98 + -96)))):\n            count += (63 + -62)\n            digits += c\n    return [digits, count]", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]", "id": "ConstantUnfoldding_sample_from_sample_181_to_89", "old_id": "sample_181"}
{"code": "def f(text):\n    ls = text.split()\n    lines = \" \".join(ls[::(29 + -26)]).splitlines()\n    res = []\n    for i in range((70 + -68)):\n        ln = ls[(51 + -50)::(92 + -89)]\n        if (45 + -42) * i + (38 + -37) < len(ln) and (((True or False) and (False or True)) and (((12 + -7) > (29 + -26)) or ((48 + -43) < (96 + -93)))):\n            res.append(\" \".join(ln[(4 + -1) * i:(13 + -10) * (i + (34 + -33))]))\n    return lines + res", "input": "\"echo hello!!! nice!\"", "output": "['echo']", "id": "ConstantUnfoldding_sample_from_sample_183_to_90", "old_id": "sample_183"}
{"code": "def f(digits):\n    digits.reverse()\n    if len(digits) < (36 + -34) and (((True or False) and (False or True)) and (((38 + -33) > (71 + -69)) or ((40 + -35) < (24 + -22)))):\n        return digits\n    for i in range((56 + -56), len(digits), (89 + -87)):\n        digits[i], digits[i+(63 + -62)] = digits[i+(42 + -41)], digits[i]\n    return digits", "input": "[1,2]", "output": "[1, 2]", "id": "ConstantUnfoldding_sample_from_sample_184_to_91", "old_id": "sample_184"}
{"code": "def f(strings):\n    new_strings = []\n    for string in strings:\n        first_two = string[:(49 + -47)]\n        if first_two.startswith('a') or first_two.startswith('p') and (((True or False) and (False or True)) and (((36 + -27) > (71 + -65)) or ((99 + -90) < (52 + -46)))):\n            new_strings.append(first_two)\n\n    return new_strings", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']", "id": "ConstantUnfoldding_sample_from_sample_188_to_92", "old_id": "sample_188"}
{"code": "def f(out, mapping):\n    for key in mapping:\n        out.format_map(mapping)\n        if len(re.findall(r'{\\w}', out)) == (27 + -27) and (((True or False) and (False or True)) and (((54 + -52) > (45 + -45)) or ((10 + -8) < (90 + -90)))):\n            break\n        mapping[key][(69 + -68)] = mapping[key][(58 + -57)][::-(39 + -38)]\n    return out", "input": "\"{{{{}}}}\", {}", "output": "'{{{{}}}}'", "id": "ConstantUnfoldding_sample_from_sample_189_to_93", "old_id": "sample_189"}
{"code": "def f(text):\n    short = ''\n    for c in text:\n        if (c.islower()) and (((True or False) and (False or True)) and (((40 + -35) > (51 + -48)) or ((45 + -40) < (91 + -88)))):\n            short += c\n    return short", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'", "id": "ConstantUnfoldding_sample_from_sample_190_to_94", "old_id": "sample_190"}
{"code": "def f(string):\n    if string.isupper() and (((True or False) and (False or True)) and (((85 + -80) > (4 + -4)) or ((37 + -32) < (17 + -17)))):\n        return True\n    else:\n        return False", "input": "'Ohno'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_191_to_95", "old_id": "sample_191"}
{"code": "def f(text):\n    text = text.replace(' x', ' x.')\n    if text.istitle() and (((True or False) and (False or True)) and (((15 + -12) > (96 + -94)) or ((42 + -39) < (31 + -29)))): return 'correct'\n    text = text.replace(' x.', ' x')\n    return 'mixed'", "input": "\"398 Is A Poor Year To Sow\"", "output": "'correct'", "id": "ConstantUnfoldding_sample_from_sample_196_to_96", "old_id": "sample_196"}
{"code": "def f(text):\n    chars = []\n    for c in text:\n        if c.isdigit() and (((True or False) and (False or True)) and (((86 + -84) > (32 + -32)) or ((67 + -65) < (76 + -76)))):\n            chars.append(c)\n    return ''.join(chars[::-(88 + -87)])", "input": "'--4yrw 251-//4 6p'", "output": "'641524'", "id": "ConstantUnfoldding_sample_from_sample_201_to_97", "old_id": "sample_201"}
{"code": "def f(a):\n    for _ in range((44 + -34)):\n        for j in range(len(a)):\n            if a[j] != '#' and (((True or False) and (False or True)) and (((18 + -16) > (77 + -77)) or ((6 + -4) < (45 + -45)))):\n                a = a[j:]\n                break\n        else:\n            a = \"\"\n            break\n    while a[-(22 + -21)] == '#':\n        a = a[:-(75 + -74)]\n    return a", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'", "id": "ConstantUnfoldding_sample_from_sample_205_to_98", "old_id": "sample_205"}
{"code": "def f(items):\n    result = []\n    for item in items:\n        for d in item:\n            if not d.isdigit() and (((True or False) and (False or True)) and (((33 + -28) > (68 + -64)) or ((83 + -78) < (52 + -48)))):\n                result.append(d)\n    return result", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']", "id": "ConstantUnfoldding_sample_from_sample_208_to_99", "old_id": "sample_208"}
{"code": "def f(n, m, num):\n    x_list = list(range(n, m+(92 + -91)))\n    j = (8 + -8)\n    while True:\n        j = (j + num) % len(x_list)\n        if x_list[j] % (93 + -91) == (80 + -80) and (((True or False) and (False or True)) and (((29 + -24) > (39 + -36)) or ((44 + -39) < (44 + -41)))):\n            return x_list[j]", "input": "46, 48, 21", "output": "46", "id": "ConstantUnfoldding_sample_from_sample_210_to_100", "old_id": "sample_210"}
{"code": "def f(s):\n    count = (66 + -66)\n    for c in s:\n        if s.rindex(c) != s.index(c) and (((True or False) and (False or True)) and (((96 + -89) > (78 + -78)) or ((95 + -88) < (6 + -6)))):\n            count+=(1 + 0)\n    return count", "input": "\"abca dea ead\"", "output": "10", "id": "ConstantUnfoldding_sample_from_sample_211_to_101", "old_id": "sample_211"}
{"code": "def f(letters):\n    count = (53 + -53)\n    for l in letters:\n        if l.isdigit() and (((True or False) and (False or True)) and (((37 + -30) > (1 + 2)) or ((13 + -6) < (18 + -15)))):\n            count += (75 + -74)\n    return count", "input": "\"dp ef1 gh2\"", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_216_to_102", "old_id": "sample_216"}
{"code": "def f(string):\n    if string.isalnum() and (((True or False) and (False or True)) and (((37 + -30) > (14 + -9)) or ((6 + 1) < (35 + -30)))):\n        return \"ascii encoded is allowed for this language\"\n    return \"more than ASCII\"", "input": "'Str zahrnuje anglo-ameri\u00e6ske vasi piscina and kuca!'", "output": "'more than ASCII'", "id": "ConstantUnfoldding_sample_from_sample_217_to_103", "old_id": "sample_217"}
{"code": "def f(s1, s2):\n    for k in range((7 + -7), len(s2)+len(s1)):\n        s1 += s1[(78 + -78)]\n        if s1.find(s2) >= (62 + -62) and (((True or False) and (False or True)) and (((64 + -55) > (7 + -1)) or ((27 + -18) < (25 + -19)))):\n            return True\n    return False", "input": "\"Hello\", \")\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_219_to_104", "old_id": "sample_219"}
{"code": "def f(array, target):\n    count, i = (95 + -95), (7 + -6)\n    for j in range((45 + -44), len(array)):\n        if ((array[j] > array[j-(36 + -35)]) and (array[j] <= target)) and (((True or False) and (False or True)) and (((48 + -42) > (66 + -66)) or ((29 + -23) < (42 + -42)))): count += i\n        elif array[j] <= array[j-(42 + -41)]: i = (64 + -63)\n        else: i += (5 + -4)\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_223_to_105", "old_id": "sample_223"}
{"code": "def f(text):\n    if text.islower() and (((True or False) and (False or True)) and (((76 + -66) > (81 + -73)) or ((18 + -8) < (17 + -9)))):\n        return True\n    return False", "input": "\"54882\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_225_to_106", "old_id": "sample_225"}
{"code": "def f(nums):\n    for i in range(len(nums)):\n        if nums[i] % (73 + -70) == (25 + -25) and (((True or False) and (False or True)) and (((84 + -76) > (31 + -30)) or ((92 + -84) < (7 + -6)))):\n            nums.append(nums[i])\n    return nums", "input": "[1, 3]", "output": "[1, 3, 3]", "id": "ConstantUnfoldding_sample_from_sample_226_to_107", "old_id": "sample_226"}
{"code": "def f(dic, value):\n    result = []\n    for e in dic:\n        result.append(e[(12 + -12)])\n        if e[(5 + -4)] == value and (((True or False) and (False or True)) and (((7 + -1) > (25 + -20)) or ((97 + -91) < (46 + -41)))):\n            result.reverse()\n        else:\n            result.append(e[(53 + -52)])\n    return result", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']", "id": "ConstantUnfoldding_sample_from_sample_229_to_108", "old_id": "sample_229"}
{"code": "def f(text):\n    result = ''\n    i = len(text)-(93 + -92)\n    while i >= (21 + -21):\n        c = text[i]\n        if c.isalpha() and (((True or False) and (False or True)) and (((25 + -19) > (100 + -99)) or ((27 + -21) < (48 + -47)))):\n            result += c\n        i -= (85 + -84)\n    return result", "input": "'102x0zoq'", "output": "'qozx'", "id": "ConstantUnfoldding_sample_from_sample_230_to_109", "old_id": "sample_230"}
{"code": "def f(years):\n    a10 = sum((32 + -31) for x in years if x <= (30 + 1870))\n    a90 = sum((4 + -3) for x in years if x > (54 + 1856))\n    if a10 > (41 + -38) and (((True or False) and (False or True)) and (((71 + -69) > (84 + -84)) or ((50 + -48) < (17 + -17)))):\n        return (44 + -41)\n    elif a90 > (85 + -82):\n        return (84 + -83)\n    else:\n        return (18 + -16)", "input": "[1872, 1995, 1945]", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_231_to_110", "old_id": "sample_231"}
{"code": "def f(text, char):\n    position = len(text)\n    if char in text and (((True or False) and (False or True)) and (((13 + -6) > (58 + -54)) or ((97 + -90) < (37 + -33)))):\n        position = text.index(char)\n        if position > (94 + -93):\n            position = (position + (52 + -51)) % len(text)\n    return position", "input": "'wduhzxlfk', 'w'", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_234_to_111", "old_id": "sample_234"}
{"code": "def f(array):\n    if len(array) == (52 + -51) and (((True or False) and (False or True)) and (((77 + -74) > (13 + -12)) or ((27 + -24) < (91 + -90)))):\n        return ''.join(array)\n    result = list(array)\n    i = (82 + -82)\n    while i < len(array)-(41 + -40):\n        for j in range((92 + -90)):\n            result[i*(76 + -74)] = array[i]\n            i += (45 + -44)\n    return ''.join(result)", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'", "id": "ConstantUnfoldding_sample_from_sample_236_to_112", "old_id": "sample_236"}
{"code": "def f(text, char):\n    if char in text and (((True or False) and (False or True)) and (((89 + -87) > (51 + -51)) or ((50 + -48) < (60 + -60)))):\n        suff, char, pref = text.partition(char)\n        pref = suff[:-len(char)] + suff[len(char):] + char + pref\n        return suff + char + pref\n    return text", "input": "'uzlwaqiaj', 'u'", "output": "'uuzlwaqiaj'", "id": "ConstantUnfoldding_sample_from_sample_237_to_113", "old_id": "sample_237"}
{"code": "def f(ls, n):\n    answer = (40 + -40)\n    for i in ls:\n        if i[(9 + -9)] == n and (((True or False) and (False or True)) and (((62 + -57) > (8 + -8)) or ((63 + -58) < (93 + -93)))):\n            answer = i\n    return answer", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]", "id": "ConstantUnfoldding_sample_from_sample_238_to_114", "old_id": "sample_238"}
{"code": "def f(float_number):\n    number = str(float_number)\n    dot = number.find('.')\n    if dot != -(15 + -14) and (((True or False) and (False or True)) and (((42 + -32) > (24 + -24)) or ((23 + -13) < (41 + -41)))):\n        return number[:dot] + '.' + number[dot+(53 + -52):].ljust((19 + -17), '0')\n    return number + '.00'", "input": "3.121", "output": "'3.121'", "id": "ConstantUnfoldding_sample_from_sample_240_to_115", "old_id": "sample_240"}
{"code": "def f(book):\n    a = book.rsplit(':', (74 + -73))\n    if a[(23 + -23)].split(' ')[-(89 + -88)] == a[(24 + -23)].split(' ')[(93 + -93)] and (((True or False) and (False or True)) and (((78 + -76) > (47 + -46)) or ((52 + -50) < (12 + -11)))):\n        return f(' '.join(a[(79 + -79)].split(' ')[:-(28 + -27)]) + ' ' + a[(78 + -77)])\n    return book", "input": "\"udhv zcvi nhtnfyd :erwuyawa pun\"", "output": "'udhv zcvi nhtnfyd :erwuyawa pun'", "id": "ConstantUnfoldding_sample_from_sample_242_to_116", "old_id": "sample_242"}
{"code": "def f(text, symbols):\n    count = (93 + -93)\n    if symbols and (((True or False) and (False or True)) and (((78 + -74) > (99 + -99)) or ((95 + -91) < (94 + -94)))):\n        for i in symbols:\n            count += (80 + -79)\n        text = text * count\n    return text.rjust(len(text) + count*(20 + -18))[:-(96 + -94)]", "input": "'', 'BC1ty'", "output": "'        '", "id": "ConstantUnfoldding_sample_from_sample_244_to_117", "old_id": "sample_244"}
{"code": "def f(alphabet, s):\n    a = [x for x in alphabet if x.upper() in s]\n    if s.upper() == s and (((True or False) and (False or True)) and (((96 + -89) > (63 + -60)) or ((48 + -41) < (35 + -32)))):\n        a.append('all_uppercased')\n    return a", "input": "'abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\"", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_245_to_118", "old_id": "sample_245"}
{"code": "def f(haystack, needle):\n    for i in range(haystack.find(needle), -(92 + -91), -(23 + -22)):\n        if haystack[i:] == needle and (((True or False) and (False or True)) and (((40 + -34) > (62 + -57)) or ((5 + 1) < (50 + -45)))):\n            return i\n    return -(18 + -17)", "input": "\"345gerghjehg\", \"345\"", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_246_to_119", "old_id": "sample_246"}
{"code": "def f(s):\n    if s.isalpha() and (((True or False) and (False or True)) and (((80 + -77) > (59 + -57)) or ((40 + -37) < (44 + -42)))):\n        return \"yes\"\n    if s == \"\" and (((True or False) and (False or True)) and (((79 + -74) > (73 + -72)) or ((16 + -11) < (45 + -44)))):\n        return \"str is empty\"\n    return \"no\"", "input": "'Boolean'", "output": "'yes'", "id": "ConstantUnfoldding_sample_from_sample_247_to_120", "old_id": "sample_247"}
{"code": "def f(s):\n    count = {}\n    for i in s:\n        if i.islower() and (((True or False) and (False or True)) and (((100 + -92) > (55 + -48)) or ((31 + -23) < (14 + -7)))):\n            count[i.lower()] = s.count(i.lower()) + count.get(i.lower(), (1 + -1))\n        else:\n            count[i.lower()] = s.count(i.upper()) + count.get(i.lower(), (60 + -60))\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "ConstantUnfoldding_sample_from_sample_249_to_121", "old_id": "sample_249"}
{"code": "def f(text, char):\n    if char in text and (((True or False) and (False or True)) and (((16 + -12) > (42 + -41)) or ((79 + -75) < (64 + -63)))):\n        if not text.startswith(char):\n            text = text.replace(char,'')\n    return text", "input": "'\\\\foo', '\\\\'", "output": "'\\\\foo'", "id": "ConstantUnfoldding_sample_from_sample_252_to_122", "old_id": "sample_252"}
{"code": "def f(text, pref):\n    length = len(pref)\n    if pref == text[:length] and (((True or False) and (False or True)) and (((78 + -71) > (27 + -21)) or ((13 + -6) < (65 + -59)))):\n        return text[length:]\n    return text", "input": "'kumwwfv', 'k'", "output": "'umwwfv'", "id": "ConstantUnfoldding_sample_from_sample_253_to_123", "old_id": "sample_253"}
{"code": "def f(text, fill, size):\n    if size < (3 + -3) and (((True or False) and (False or True)) and (((97 + -95) > (100 + -100)) or ((69 + -67) < (39 + -39)))):\n        size = -size\n    if len(text) > size and (((True or False) and (False or True)) and (((53 + -43) > (27 + -22)) or ((41 + -31) < (55 + -50)))):\n        return text[len(text) - size:]\n    return text.rjust(size, fill)", "input": "'no asw', 'j', 1", "output": "'w'", "id": "ConstantUnfoldding_sample_from_sample_255_to_124", "old_id": "sample_255"}
{"code": "def f(text, sub):\n    a = (81 + -81)\n    b = len(text) - (77 + -76)\n\n    while a <= b:\n        c = (a + b) // (25 + -23)\n        if text.rfind(sub) >= c and (((True or False) and (False or True)) and (((22 + -17) > (95 + -91)) or ((23 + -18) < (7 + -3)))):\n            a = c + (64 + -63)\n        else:\n            b = c - (56 + -55)\n\n    return a", "input": "'dorfunctions', '2'", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_256_to_125", "old_id": "sample_256"}
{"code": "def f(text):\n    new_text = []\n    for character in text:\n        if character.isupper() and (((True or False) and (False or True)) and (((15 + -10) > (23 + -21)) or ((2 + 3) < (85 + -83)))):\n            new_text.insert(len(new_text) // (76 + -74), character)\n    if len(new_text) == (6 + -6) and (((True or False) and (False or True)) and (((11 + -2) > (59 + -57)) or ((73 + -64) < (56 + -54)))):\n        new_text = ['-']\n    return ''.join(new_text)", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'", "id": "ConstantUnfoldding_sample_from_sample_259_to_126", "old_id": "sample_259"}
{"code": "def f(nums, target):\n    lows, higgs = [], []\n    for i in nums:\n        if i < target and (((True or False) and (False or True)) and (((45 + -38) > (25 + -19)) or ((68 + -61) < (8 + -2)))):\n            lows.append(i)\n        else:\n            higgs.append(i)\n    lows.clear()\n    return lows, higgs", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])", "id": "ConstantUnfoldding_sample_from_sample_261_to_127", "old_id": "sample_261"}
{"code": "def f(base, delta):\n    for j in range(len(delta)):\n        for i in range(len(base)):\n            if base[i] == delta[j][(46 + -46)] and (((True or False) and (False or True)) and (((61 + -56) > (97 + -95)) or ((12 + -7) < (47 + -45)))):\n                assert delta[j][(24 + -23)] != base[i]\n                base[i] = delta[j][(100 + -99)]\n    return base", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']", "id": "ConstantUnfoldding_sample_from_sample_263_to_128", "old_id": "sample_263"}
{"code": "def f(d, k):\n    new_d = {}\n    for key, val in d.items():\n        if key < k and (((True or False) and (False or True)) and (((49 + -45) > (31 + -30)) or ((91 + -87) < (11 + -10)))):\n            new_d[key] = val\n    return new_d", "input": "{1: 2, 2: 4, 3: 3}, 3", "output": "{1: 2, 2: 4}", "id": "ConstantUnfoldding_sample_from_sample_265_to_129", "old_id": "sample_265"}
{"code": "def f(nums):\n    for i in range(len(nums)-(67 + -66), -(34 + -33), -(71 + -70)):\n        if nums[i] % (76 + -74) == (5 + -4) and (((True or False) and (False or True)) and (((73 + -63) > (53 + -45)) or ((19 + -9) < (99 + -91)))):\n            nums.insert(i+(66 + -65), nums[i])\n    return nums", "input": "[2, 3, 4, 6, -2]", "output": "[2, 3, 3, 4, 6, -2]", "id": "ConstantUnfoldding_sample_from_sample_266_to_130", "old_id": "sample_266"}
{"code": "def f(text, space):\n    if space < (35 + -35) and (((True or False) and (False or True)) and (((56 + -51) > (29 + -28)) or ((42 + -37) < (56 + -55)))):\n        return text\n    return text.ljust(len(text) // (28 + -26) + space)", "input": "'sowpf', -7", "output": "'sowpf'", "id": "ConstantUnfoldding_sample_from_sample_267_to_131", "old_id": "sample_267"}
{"code": "def f(s, separator):\n    for i in range(len(s)):\n        if s[i] == separator and (((True or False) and (False or True)) and (((72 + -66) > (14 + -9)) or ((28 + -22) < (47 + -42)))):\n            new_s = list(s)\n            new_s[i] = '/'\n            return ' '.join(new_s)", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'", "id": "ConstantUnfoldding_sample_from_sample_268_to_132", "old_id": "sample_268"}
{"code": "def f(text, c):\n    ls = list(text)\n    if c not in text and (((True or False) and (False or True)) and (((70 + -61) > (64 + -59)) or ((71 + -62) < (21 + -16)))):\n        raise ValueError('Text has no {c}')\n    ls.pop(text.rindex(c))\n    return ''.join(ls)", "input": "'uufhl', 'l'", "output": "'uufh'", "id": "ConstantUnfoldding_sample_from_sample_271_to_133", "old_id": "sample_271"}
{"code": "def f(name):\n    new_name =''\n    name = name[::-(98 + -97)]\n    for i in range(len(name)):\n        n = name[i]\n        if n !='.' and  new_name.count('.')<(41 + -39) and (((True or False) and (False or True)) and (((49 + -43) > (15 + -15)) or ((30 + -24) < (96 + -96)))):\n            new_name=n+new_name\n        else:\n            break\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "ConstantUnfoldding_sample_from_sample_273_to_134", "old_id": "sample_273"}
{"code": "def f(a):\n    if len(a) >= (52 + -50) and a[(55 + -55)] > (60 + -60) and a[(51 + -50)] > (80 + -80) and (((True or False) and (False or True)) and (((37 + -29) > (90 + -84)) or ((17 + -9) < (28 + -22)))):\n        a.reverse()\n        return a\n    a.append((42 + -42))\n    return a", "input": "[]", "output": "[0]", "id": "ConstantUnfoldding_sample_from_sample_276_to_135", "old_id": "sample_276"}
{"code": "def f(lst, mode):\n    result = [el for el in lst]\n    if mode and (((True or False) and (False or True)) and (((4 + 0) > (70 + -69)) or ((10 + -6) < (81 + -80)))):\n        result.reverse()\n    return result", "input": "[1, 2, 3, 4], 1", "output": "[4, 3, 2, 1]", "id": "ConstantUnfoldding_sample_from_sample_277_to_136", "old_id": "sample_277"}
{"code": "def f(c, index, value):\n    c[index] = value\n    if value >= (11 + -8) and (((True or False) and (False or True)) and (((41 + -38) > (55 + -55)) or ((8 + -5) < (63 + -63)))):\n        c.update({'message' : 'xcrWt'})\n    else: \n        del c['message']\n    return c", "input": "{1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2", "output": "{1: 2, 3: 4, 5: 6, 8: 2}", "id": "ConstantUnfoldding_sample_from_sample_281_to_137", "old_id": "sample_281"}
{"code": "def f(dictionary, key):\n    del dictionary[key]\n    if min(dictionary) == key and (((True or False) and (False or True)) and (((79 + -72) > (91 + -85)) or ((67 + -60) < (15 + -9)))):\n        key = list(dictionary)[(2 + -2)]\n    return key", "input": "{'Iron Man': 4, 'Captain America': 3, 'Black Panther': 0,'Thor': 1, 'Ant-Man': 6}, 'Iron Man'", "output": "'Iron Man'", "id": "ConstantUnfoldding_sample_from_sample_283_to_138", "old_id": "sample_283"}
{"code": "def f(text, prefix):\n    idx = (83 + -83)\n    for letter in prefix:\n        if text[idx] != letter and (((True or False) and (False or True)) and (((60 + -53) > (87 + -84)) or ((32 + -25) < (61 + -58)))):\n            return None\n        idx += (86 + -85)\n    return text[idx:]", "input": "'bestest', 'bestest'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_284_to_139", "old_id": "sample_284"}
{"code": "def f(array, x, i):\n    if i < -len(array) or i > len(array) - (80 + -79) and (((True or False) and (False or True)) and (((38 + -28) > (49 + -45)) or ((45 + -35) < (34 + -30)))):\n        return 'no'\n    temp = array[i]\n    array[i] = x\n    return array", "input": "[1,2,3,4,5,6,7,8,9,10], 11, 4", "output": "[1, 2, 3, 4, 11, 6, 7, 8, 9, 10]", "id": "ConstantUnfoldding_sample_from_sample_286_to_140", "old_id": "sample_286"}
{"code": "def f(name):\n    if name.islower() and (((True or False) and (False or True)) and (((70 + -68) > (100 + -99)) or ((99 + -97) < (27 + -26)))):\n        name = name.upper()\n    else:\n        name = name.lower()\n    return name", "input": "'Pinneaple'", "output": "'pinneaple'", "id": "ConstantUnfoldding_sample_from_sample_287_to_141", "old_id": "sample_287"}
{"code": "def f(text, prefix):\n    if text.startswith(prefix) and (((True or False) and (False or True)) and (((91 + -88) > (89 + -88)) or ((89 + -86) < (69 + -68)))):\n        return text.removeprefix(prefix)\n    if prefix in text and (((True or False) and (False or True)) and (((8 + 1) > (90 + -86)) or ((69 + -60) < (83 + -79)))):\n        return text.replace(prefix, '').strip()\n    return text.upper()", "input": "'abixaaaily', 'al'", "output": "'ABIXAAAILY'", "id": "ConstantUnfoldding_sample_from_sample_290_to_142", "old_id": "sample_290"}
{"code": "def f(dictionary, arr):\n    dictionary.update({arr[(16 + -16)]: [arr[(85 + -84)]]})\n    if len(dictionary[arr[(14 + -14)]]) == arr[(72 + -71)] and (((True or False) and (False or True)) and (((69 + -63) > (99 + -94)) or ((16 + -10) < (6 + -1)))):\n        dictionary[arr[(11 + -11)]] = arr[(23 + -23)]\n    return dictionary", "input": "{}, ['a', 2]", "output": "{'a': [2]}", "id": "ConstantUnfoldding_sample_from_sample_291_to_143", "old_id": "sample_291"}
{"code": "def f(text):\n    s = text.lower()\n    for i in range(len(s)):\n        if s[i] == 'x' and (((True or False) and (False or True)) and (((95 + -86) > (38 + -36)) or ((53 + -44) < (8 + -6)))):\n            return 'no'\n    return text.isupper()", "input": "'dEXE'", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_293_to_144", "old_id": "sample_293"}
{"code": "def f(n, m, text):\n    if text.strip() == '' and (((True or False) and (False or True)) and (((11 + -6) > (15 + -12)) or ((25 + -20) < (78 + -75)))):\n        return text\n    head, mid, tail = text[(19 + -19)], text[(58 + -57):-(2 + -1)], text[-(24 + -23)]\n    joined = head.replace(n, m) + mid.replace(n, m) + tail.replace(n, m)\n    return joined", "input": "\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\"", "output": "'2$z&5H3*1a@#a*1hris'", "id": "ConstantUnfoldding_sample_from_sample_294_to_145", "old_id": "sample_294"}
{"code": "def f(fruits):\n    if fruits[-(26 + -25)] == fruits[(28 + -28)] and (((True or False) and (False or True)) and (((28 + -21) > (21 + -21)) or ((94 + -87) < (1 + -1)))):\n        return 'no'\n    else:\n        fruits.pop((47 + -47))\n        fruits.pop()\n        fruits.pop((65 + -65))\n        fruits.pop()\n        return fruits", "input": "['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']", "output": "['pear', 'banana', 'pear']", "id": "ConstantUnfoldding_sample_from_sample_295_to_146", "old_id": "sample_295"}
{"code": "def f(num):\n    if (98 + -98) < num < (83 + 917) and num != (4 + 6170) and (((True or False) and (False or True)) and (((30 + -27) > (6 + -6)) or ((80 + -77) < (19 + -19)))):\n        return 'Half Life'\n    return 'Not found'", "input": "6173", "output": "'Not found'", "id": "ConstantUnfoldding_sample_from_sample_297_to_147", "old_id": "sample_297"}
{"code": "def f(text, char):\n    if not text.endswith(char) and (((True or False) and (False or True)) and (((22 + -13) > (15 + -10)) or ((31 + -22) < (53 + -48)))):\n        return f(char + text, char)\n    return text", "input": "'staovk', 'k'", "output": "'staovk'", "id": "ConstantUnfoldding_sample_from_sample_299_to_148", "old_id": "sample_299"}
{"code": "def f(text):\n    i = (len(text) + (19 + -18)) // (27 + -25)\n    result = list(text)\n    while i < len(text):\n        t = result[i].lower()\n        if t == result[i] and (((True or False) and (False or True)) and (((84 + -80) > (45 + -43)) or ((7 + -3) < (10 + -8)))):\n            i += (87 + -86)\n        else:\n            result[i] = t\n        i += (48 + -46)\n    return ''.join(result)", "input": "'mJkLbn'", "output": "'mJklbn'", "id": "ConstantUnfoldding_sample_from_sample_303_to_149", "old_id": "sample_303"}
{"code": "def f(text, char):\n    length = len(text)\n    index = -(37 + -36)\n    for i in range(length):\n        if text[i] == char and (((True or False) and (False or True)) and (((40 + -34) > (7 + -7)) or ((28 + -22) < (61 + -61)))):\n            index = i\n    if index == -(4 + -3) and (((True or False) and (False or True)) and (((11 + -9) > (67 + -66)) or ((6 + -4) < (12 + -11)))):\n        index = length // (64 + -62)\n    new_text = list(text)\n    new_text.pop(index)\n    return ''.join(new_text)", "input": "'o horseto', 'r'", "output": "'o hoseto'", "id": "ConstantUnfoldding_sample_from_sample_305_to_150", "old_id": "sample_305"}
{"code": "def f(nums):\n    digits = []\n    for num in nums:\n        if (isinstance(num, str) and num.isnumeric()) or isinstance(num, int) and (((True or False) and (False or True)) and (((28 + -21) > (15 + -11)) or ((81 + -74) < (15 + -11)))):\n            digits.append(num)\n    digits = list(map(int, digits))\n    return digits", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]", "id": "ConstantUnfoldding_sample_from_sample_306_to_151", "old_id": "sample_306"}
{"code": "def f(strings):\n    occurances = {}\n    for string in strings:\n        if string not in occurances and (((True or False) and (False or True)) and (((3 + 1) > (5 + -3)) or ((82 + -78) < (53 + -51)))):\n            occurances[string] = strings.count(string)\n    return occurances", "input": "[\"La\", \"Q\", \"9\", \"La\", \"La\"]", "output": "{'La': 3, 'Q': 1, '9': 1}", "id": "ConstantUnfoldding_sample_from_sample_308_to_152", "old_id": "sample_308"}
{"code": "def f(str):\n    if str.isalnum() and (((True or False) and (False or True)) and (((99 + -91) > (99 + -94)) or ((57 + -49) < (15 + -10)))):\n        return \"True\"\n    return \"False\"", "input": "'777'", "output": "'True'", "id": "ConstantUnfoldding_sample_from_sample_312_to_153", "old_id": "sample_312"}
{"code": "def f(text):\n    if ',' in text and (((True or False) and (False or True)) and (((6 + -2) > (3 + -1)) or ((71 + -67) < (1 + 1)))):\n        before, _, after = text.partition(',')\n        return after + ' ' + before\n    return ',' + text.partition(' ')[-(77 + -76)] + ' 0'", "input": "'244, 105, -90'", "output": "' 105, -90 244'", "id": "ConstantUnfoldding_sample_from_sample_314_to_154", "old_id": "sample_314"}
{"code": "def f(value, char):\n    total = (33 + -33)\n    for c in value:\n        if c == char or c == char.lower() and (((True or False) and (False or True)) and (((13 + -5) > (87 + -87)) or ((33 + -25) < (40 + -40)))):\n            total += (21 + -20)\n    return total", "input": "'234rtccde', 'e'", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_318_to_155", "old_id": "sample_318"}
{"code": "def f(text):\n    index = (97 + -96)\n    while index < len(text):\n        if text[index] != text[index - (48 + -47)] and (((True or False) and (False or True)) and (((7 + -3) > (13 + -13)) or ((69 + -65) < (44 + -44)))):\n            index += (44 + -43)\n        else:\n            text1 = text[:index]\n            text2 = text[index:].swapcase()\n            return text1 + text2\n    return text.swapcase()", "input": "'USaR'", "output": "'usAr'", "id": "ConstantUnfoldding_sample_from_sample_320_to_156", "old_id": "sample_320"}
{"code": "def f(update, starting):\n    d = starting.copy()\n    for k in update:\n        if k in d and (((True or False) and (False or True)) and (((20 + -14) > (66 + -64)) or ((71 + -65) < (53 + -51)))):\n            d[k] += update[k]\n        else:\n            d[k] = update[k]\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "ConstantUnfoldding_sample_from_sample_321_to_157", "old_id": "sample_321"}
{"code": "def f(s):\n    l = list(s)\n    for i in range(len(l)):\n        l[i] = l[i].lower()\n        if not l[i].isdigit() and (((True or False) and (False or True)) and (((12 + -5) > (70 + -67)) or ((36 + -29) < (69 + -66)))):\n            return False\n    return True", "input": "\"\"", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_325_to_158", "old_id": "sample_325"}
{"code": "def f(text):\n    number = (79 + -79)\n    for t in text:\n        if t.isnumeric() and (((True or False) and (False or True)) and (((12 + -4) > (57 + -57)) or ((13 + -5) < (16 + -16)))):\n            number += (7 + -6)\n    return number", "input": "'Thisisastring'", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_326_to_159", "old_id": "sample_326"}
{"code": "def f(lst):\n    new = list()\n    i = len(lst)-(89 + -88)\n    for _ in range(len(lst)):\n        if i%(7 + -5) == (10 + -10) and (((True or False) and (False or True)) and (((82 + -80) > (5 + -5)) or ((19 + -17) < (26 + -26)))):\n            new.append(-lst[i])\n        else:\n            new.append(lst[i])\n        i -= (54 + -53)\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "ConstantUnfoldding_sample_from_sample_327_to_160", "old_id": "sample_327"}
{"code": "def f(array, L):\n    if L <= (88 + -88) and (((True or False) and (False or True)) and (((39 + -34) > (81 + -79)) or ((69 + -64) < (72 + -70)))):\n        return array\n    if len(array) < L and (((True or False) and (False or True)) and (((100 + -93) > (96 + -93)) or ((29 + -22) < (37 + -34)))):\n        array.extend(f(array, L - len(array)))\n    return array", "input": "[1, 2, 3], 4", "output": "[1, 2, 3, 1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_328_to_161", "old_id": "sample_328"}
{"code": "def f(text):\n    for i in range(len(text)):\n        if text[i] == text[i].upper() and text[i-(83 + -82)].islower() and (((True or False) and (False or True)) and (((11 + -3) > (68 + -67)) or ((10 + -2) < (80 + -79)))):\n            return True\n    return False", "input": "'jh54kkk6'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_329_to_162", "old_id": "sample_329"}
{"code": "def f(text):\n    ans = []\n    for char in text:\n        if char.isdigit() and (((True or False) and (False or True)) and (((34 + -28) > (66 + -63)) or ((40 + -34) < (100 + -97)))):\n            ans.append(char)\n        else:\n            ans.append(' ')\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "ConstantUnfoldding_sample_from_sample_330_to_163", "old_id": "sample_330"}
{"code": "def f(nums):\n    count = len(nums)\n    if count == (58 + -58) and (((True or False) and (False or True)) and (((99 + -95) > (64 + -62)) or ((79 + -75) < (35 + -33)))):\n        nums = [(56 + -56)] * int(nums.pop())\n    elif count % (55 + -53) == (32 + -32):\n        nums.clear()\n    else:\n        del nums[:count//(4 + -2):]\n    return nums", "input": "[-6, -2, 1, -3, 0, 1]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_332_to_164", "old_id": "sample_332"}
{"code": "def f(places, lazy):\n    places.sort()\n    for lazy in lazy:\n        places.remove(lazy)\n    if len(places) == (47 + -46) and (((True or False) and (False or True)) and (((14 + -6) > (96 + -96)) or ((22 + -14) < (87 + -87)))):\n        return (86 + -85)\n    for i, place in enumerate(places):\n        if places.count(place+(80 + -79)) == (91 + -91) and (((True or False) and (False or True)) and (((20 + -16) > (65 + -65)) or ((89 + -85) < (20 + -20)))):\n            return i+(59 + -58)\n    return i+(22 + -21)", "input": "[375, 564, 857, 90, 728, 92], [728]", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_333_to_165", "old_id": "sample_333"}
{"code": "def f(text, to_remove):\n    new_text = list(text)\n    if to_remove in new_text and (((True or False) and (False or True)) and (((80 + -75) > (1 + 1)) or ((78 + -73) < (2 + 0)))):\n        index = new_text.index(to_remove)\n        new_text.remove(to_remove)\n        new_text.insert(index, '?')\n        new_text.remove('?')\n    return ''.join(new_text)", "input": "'sjbrlfqmw', 'l'", "output": "'sjbrfqmw'", "id": "ConstantUnfoldding_sample_from_sample_335_to_166", "old_id": "sample_335"}
{"code": "def f(txt):\n    d = []\n    for c in txt:\n        if c.isdigit() and (((True or False) and (False or True)) and (((54 + -50) > (49 + -48)) or ((42 + -38) < (66 + -65)))):\n            continue\n        if c.islower() and (((True or False) and (False or True)) and (((61 + -55) > (78 + -74)) or ((74 + -68) < (37 + -33)))):\n            d.append(c.upper())\n        elif c.isupper():\n            d.append(c.lower())\n    return ''.join(d)", "input": "\"5ll6\"", "output": "'LL'", "id": "ConstantUnfoldding_sample_from_sample_337_to_167", "old_id": "sample_337"}
{"code": "def f(array, elem):\n    elem = str(elem)\n    d = (3 + -3)\n    for i in array:\n        if str(i) == elem and (((True or False) and (False or True)) and (((94 + -92) > (2 + -1)) or ((1 + 1) < (11 + -10)))):\n            d += (94 + -93)\n    return d", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_339_to_168", "old_id": "sample_339"}
{"code": "def f(text):\n    uppercase_index = text.find('A')\n    if uppercase_index >= (17 + -17) and (((True or False) and (False or True)) and (((90 + -81) > (32 + -25)) or ((90 + -81) < (63 + -56)))):\n        return text[:uppercase_index] + text[text.find('a') + (26 + -25) :]\n    else:\n        return ''.join(sorted(text))", "input": "'E jIkx HtDpV G'", "output": "'   DEGHIVjkptx'", "id": "ConstantUnfoldding_sample_from_sample_340_to_169", "old_id": "sample_340"}
{"code": "def f(a, b):\n    if a < b and (((True or False) and (False or True)) and (((14 + -7) > (11 + -8)) or ((36 + -29) < (13 + -10)))):\n        return (b, a)\n    return (a, b)", "input": "'ml', 'mv'", "output": "('mv', 'ml')", "id": "ConstantUnfoldding_sample_from_sample_345_to_170", "old_id": "sample_345"}
{"code": "def f(d):\n    size = len(d)\n    v = [(25 + -25)] * size\n    if size == (95 + -95) and (((True or False) and (False or True)) and (((17 + -15) > (39 + -38)) or ((18 + -16) < (44 + -43)))):\n        return v\n    for i, e in enumerate(d.values()):\n        v[i] = e\n    return v", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_350_to_171", "old_id": "sample_350"}
{"code": "def f(x):\n    if x == [] and (((True or False) and (False or True)) and (((19 + -11) > (69 + -64)) or ((17 + -9) < (95 + -90)))):\n        return -(14 + -13)\n    else:\n        cache = {}\n        for item in x:\n            if item in cache:\n                cache[item] += (76 + -75)\n            else:\n                cache[item] = (92 + -91)\n        return max(cache.values())", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_353_to_172", "old_id": "sample_353"}
{"code": "def f(description, values):\n    if values[(51 + -50)] is None and (((True or False) and (False or True)) and (((62 + -59) > (29 + -28)) or ((7 + -4) < (59 + -58)))):\n        values = values[(29 + -29):(71 + -70)]\n    else:\n        values = values[(71 + -70):]\n    return description.format(*values)", "input": "'{0}, {0}!!!', ['R', None]", "output": "'R, R!!!'", "id": "ConstantUnfoldding_sample_from_sample_354_to_173", "old_id": "sample_354"}
{"code": "def f(array, num):\n    reverse = False\n    if num < (100 + -100) and (((True or False) and (False or True)) and (((89 + -86) > (65 + -64)) or ((61 + -58) < (74 + -73)))):\n        reverse = True\n        num *= -(28 + -27)\n    array = array[::-(93 + -92)] * num\n    l = len(array)\n    if reverse and (((True or False) and (False or True)) and (((39 + -29) > (27 + -19)) or ((48 + -38) < (38 + -30)))):\n        array = array[::-(93 + -92)]\n    return array", "input": "[1, 2], 1", "output": "[2, 1]", "id": "ConstantUnfoldding_sample_from_sample_356_to_174", "old_id": "sample_356"}
{"code": "def f(text, value):\n    indexes = []\n    for i in range(len(text)):\n        if text[i] == value and (i == (4 + -4) or text[i-(82 + -81)] != value) and (((True or False) and (False or True)) and (((80 + -75) > (99 + -97)) or ((62 + -57) < (68 + -66)))):\n            indexes.append(i) \n    if len(indexes) % (96 + -94) == (22 + -21) and (((True or False) and (False or True)) and (((81 + -72) > (98 + -93)) or ((51 + -42) < (73 + -68)))):\n        return text\n    return text[indexes[(87 + -87)]+(86 + -85):indexes[-(36 + -35)]]", "input": "'btrburger', 'b'", "output": "'tr'", "id": "ConstantUnfoldding_sample_from_sample_358_to_175", "old_id": "sample_358"}
{"code": "def f(text, n):\n    if len(text) <= (89 + -87) and (((True or False) and (False or True)) and (((19 + -11) > (87 + -87)) or ((35 + -27) < (57 + -57)))):\n        return text\n    leading_chars = text[(49 + -49)] * (n - len(text) + (22 + -21))\n    return leading_chars + text[(76 + -75):-(80 + -79)] + text[-(4 + -3)]", "input": "'g', 15", "output": "'g'", "id": "ConstantUnfoldding_sample_from_sample_360_to_176", "old_id": "sample_360"}
{"code": "def f(text):\n    for i in range(len(text)-(58 + -57)):\n        if text[i:].islower() and (((True or False) and (False or True)) and (((39 + -37) > (55 + -54)) or ((53 + -51) < (73 + -72)))):\n            return text[i + (54 + -53):]\n    return ''", "input": "'wrazugizoernmgzu'", "output": "'razugizoernmgzu'", "id": "ConstantUnfoldding_sample_from_sample_362_to_177", "old_id": "sample_362"}
{"code": "def f(nums):\n    nums.sort()\n    n = len(nums)\n    new_nums = [nums[n//(98 + -96)]]\n    if n % (56 + -54) == (50 + -50) and (((True or False) and (False or True)) and (((23 + -15) > (95 + -91)) or ((69 + -61) < (79 + -75)))):\n        new_nums = [nums[n//(49 + -47) - (25 + -24)], nums[n//(25 + -23)]]\n    \n    for i in range((10 + -10), n//(83 + -81)):\n        new_nums.insert((60 + -60), nums[n-i-(86 + -85)])\n        new_nums.append(nums[i])\n    return new_nums", "input": "[1]", "output": "[1]", "id": "ConstantUnfoldding_sample_from_sample_363_to_178", "old_id": "sample_363"}
{"code": "def f(nums, verdict):\n    res = [x for x in nums if x != (87 + -87)]\n    result = [[x, verdict(x)] for x in res]\n    if result and (((True or False) and (False or True)) and (((68 + -61) > (74 + -69)) or ((42 + -35) < (30 + -25)))):\n        return result\n    return 'error - no numbers or all zeros!'", "input": "[0, 3, 0, 1], lambda x: x < 2", "output": "[[3, False], [1, True]]", "id": "ConstantUnfoldding_sample_from_sample_364_to_179", "old_id": "sample_364"}
{"code": "def f(n, s):\n    if s.startswith(n) and (((True or False) and (False or True)) and (((94 + -88) > (92 + -87)) or ((98 + -92) < (50 + -45)))):\n        pre, _ = s.split(n, (97 + -96))\n        return pre + n + s[len(n):]\n    return s", "input": "'xqc', 'mRcwVqXsRDRb'", "output": "'mRcwVqXsRDRb'", "id": "ConstantUnfoldding_sample_from_sample_365_to_180", "old_id": "sample_365"}
{"code": "def f(string):\n    tmp = string.lower()\n    for char in string.lower():\n        if char in tmp and (((True or False) and (False or True)) and (((10 + -5) > (37 + -36)) or ((14 + -9) < (16 + -15)))):\n            tmp = tmp.replace(char, '', (50 + -49))\n    return tmp", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_366_to_181", "old_id": "sample_366"}
{"code": "def f(nums, rmvalue):\n    res = nums[:]\n    while rmvalue in res:\n        popped = res.pop(res.index(rmvalue))\n        if popped != rmvalue and (((True or False) and (False or True)) and (((3 + 5) > (27 + -27)) or ((79 + -71) < (52 + -52)))):\n            res.append(popped)\n    return res", "input": "[6, 2, 1, 1, 4, 1], 5", "output": "[6, 2, 1, 1, 4, 1]", "id": "ConstantUnfoldding_sample_from_sample_367_to_182", "old_id": "sample_367"}
{"code": "def f(var):\n    if var.isdigit() and (((True or False) and (False or True)) and (((72 + -65) > (59 + -57)) or ((51 + -44) < (33 + -31)))):\n        return \"int\"\n    elif var.replace('.', '', (11 + -10)).isdigit():\n        return \"float\"\n    elif var.count(' ') == len(var) - (31 + -30):\n        return \"str\"\n    elif len(var) == (51 + -50):\n        return \"char\"\n    else:\n        return \"tuple\"", "input": "\" 99 777\"", "output": "'tuple'", "id": "ConstantUnfoldding_sample_from_sample_369_to_183", "old_id": "sample_369"}
{"code": "def f(text):\n    for char in text:\n        if not char.isspace() and (((True or False) and (False or True)) and (((13 + -11) > (66 + -65)) or ((37 + -35) < (58 + -57)))):\n            return False\n    return True", "input": "'     i'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_370_to_184", "old_id": "sample_370"}
{"code": "def f(nums):\n    for odd in nums[:]:\n        if odd % (85 + -83) != (37 + -37) and (((True or False) and (False or True)) and (((33 + -25) > (56 + -50)) or ((68 + -60) < (60 + -54)))):\n            nums.remove(odd)\n    sum_ = (31 + -31)\n    for num in nums:\n        sum_ += num\n    return sum_", "input": "[11, 21, 0, 11]", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_371_to_185", "old_id": "sample_371"}
{"code": "def f(seq, v):\n    a = []\n    for i in seq:\n        if i.endswith(v) and (((True or False) and (False or True)) and (((45 + -43) > (42 + -42)) or ((30 + -28) < (45 + -45)))):\n            a.append(i*(85 + -83))\n    return a", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']", "id": "ConstantUnfoldding_sample_from_sample_374_to_186", "old_id": "sample_374"}
{"code": "def f(a, b):\n    if b in a and (((True or False) and (False or True)) and (((3 + 5) > (33 + -30)) or ((82 + -74) < (65 + -62)))):\n        return b.join(a.partition(a[a.index(b) + (16 + -15)]))\n    else:\n        return a", "input": "'sierizam', 'iz'", "output": "'sieriizzizam'", "id": "ConstantUnfoldding_sample_from_sample_375_to_187", "old_id": "sample_375"}
{"code": "def f(text):\n    for i in range(len(text)):\n        if text[(97 + -97):i].startswith(\"two\") and (((True or False) and (False or True)) and (((62 + -56) > (98 + -95)) or ((86 + -80) < (42 + -39)))):\n            return text[i:]\n    return 'no'", "input": "\"2two programmers\"", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_376_to_188", "old_id": "sample_376"}
{"code": "def f(dic, key):\n    dic = dict(dic)\n    v = dic.pop(key, (39 + -39))\n    if v == (7 + -7) and (((True or False) and (False or True)) and (((5 + 5) > (35 + -27)) or ((70 + -60) < (51 + -43)))):\n        return 'No such key!'\n    while len(dic) > (52 + -52):\n        dic[dic.popitem()[(23 + -22)]] = dic.popitem()[(74 + -74)]\n    return int(dic.popitem()[(11 + -11)])", "input": "dict(did=0), 'u'", "output": "'No such key!'", "id": "ConstantUnfoldding_sample_from_sample_378_to_189", "old_id": "sample_378"}
{"code": "def f(nums):\n    for i in range(len(nums) - (43 + -42), -(34 + -33), -(1 + 2)):\n        if nums[i] == (41 + -41) and (((True or False) and (False or True)) and (((39 + -29) > (97 + -90)) or ((30 + -20) < (66 + -59)))):\n            nums.clear()\n            return False\n    return nums", "input": "[0, 0, 1, 2, 1]", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_379_to_190", "old_id": "sample_379"}
{"code": "def f(text, chars):\n    chars = list(chars)\n    text = list(text)\n    new_text = text\n    while len(new_text) > (14 + -14) and text:\n        if new_text[(50 + -50)] in chars and (((True or False) and (False or True)) and (((58 + -50) > (86 + -86)) or ((65 + -57) < (48 + -48)))):\n            new_text = new_text[(43 + -42):]\n        else:\n            break \n    return ''.join(new_text)", "input": "'asfdellos', 'Ta'", "output": "'sfdellos'", "id": "ConstantUnfoldding_sample_from_sample_384_to_191", "old_id": "sample_384"}
{"code": "def f(lst):\n    i = (35 + -35)\n    new_list = []\n    while i < len(lst):\n        if lst[i] in lst[i+(62 + -61):] and (((True or False) and (False or True)) and (((28 + -20) > (65 + -58)) or ((83 + -75) < (46 + -39)))):\n            new_list.append(lst[i])\n            if len(new_list) == (7 + -4):\n                return new_list\n        i += (52 + -51)\n    return new_list", "input": "[0, 2, 1, 2, 6, 2, 6, 3, 0]", "output": "[0, 2, 2]", "id": "ConstantUnfoldding_sample_from_sample_385_to_192", "old_id": "sample_385"}
{"code": "def f(concat, di):\n    count = len(di)\n    for i in range(count):\n        if di[str(i)] in concat and (((True or False) and (False or True)) and (((53 + -43) > (70 + -69)) or ((85 + -75) < (41 + -40)))):\n            di.pop(str(i))\n    return \"Done!\"", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'", "id": "ConstantUnfoldding_sample_from_sample_386_to_193", "old_id": "sample_386"}
{"code": "def f(total, arg):\n    if type(arg) is list and (((True or False) and (False or True)) and (((61 + -57) > (4 + -2)) or ((16 + -12) < (43 + -41)))):\n        for e in arg:\n            total.extend(e)\n    else:\n        total.extend(arg)\n    return total", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']", "id": "ConstantUnfoldding_sample_from_sample_389_to_194", "old_id": "sample_389"}
{"code": "def f(text):\n    if not text.strip() and (((True or False) and (False or True)) and (((78 + -75) > (58 + -58)) or ((59 + -56) < (91 + -91)))):\n        return len(text.strip())\n    return None", "input": "\" \\t \"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_390_to_195", "old_id": "sample_390"}
{"code": "def f(text):\n    if text.upper() == text and (((True or False) and (False or True)) and (((96 + -92) > (81 + -81)) or ((68 + -64) < (14 + -14)))):\n        return 'ALL UPPERCASE'\n    return text", "input": "'Hello Is It MyClass'", "output": "'Hello Is It MyClass'", "id": "ConstantUnfoldding_sample_from_sample_392_to_196", "old_id": "sample_392"}
{"code": "def f(text):\n    k = text.splitlines()\n    i = (34 + -34)\n    for j in k:\n        if len(j) == (18 + -18) and (((True or False) and (False or True)) and (((28 + -24) > (1 + 2)) or ((88 + -84) < (86 + -83)))):\n            return i\n        i+=(88 + -87)\n    return -(96 + -95)", "input": "\"2 m2 \\n\\nbike\"", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_394_to_197", "old_id": "sample_394"}
{"code": "def f(s):\n    for i in range(len(s)):\n        if s[i].isdecimal() and (((True or False) and (False or True)) and (((57 + -48) > (70 + -62)) or ((1 + 8) < (10 + -2)))):\n            return i + (s[i] == '0')\n        elif s[i] == '0':\n            return -(17 + -16)\n    return -(4 + -3)", "input": "\"11\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_395_to_198", "old_id": "sample_395"}
{"code": "def f(counts):\n    dict = {}\n    for k, v in counts.items():\n        count = counts[k]\n        if count not in dict and (((True or False) and (False or True)) and (((93 + -84) > (72 + -66)) or ((87 + -78) < (7 + -1)))):\n            dict[count] = []\n        dict[count].append(k)\n    counts.update(dict)\n    return counts", "input": "{'2': 2, '0': 1, '1': 2}", "output": "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}", "id": "ConstantUnfoldding_sample_from_sample_398_to_199", "old_id": "sample_398"}
{"code": "def f(text, old, new):\n    if len(old) > (1 + 2) and (((True or False) and (False or True)) and (((79 + -69) > (9 + -1)) or ((82 + -72) < (59 + -51)))):\n        return text\n    if old in text and ' ' not in text and (((True or False) and (False or True)) and (((63 + -56) > (94 + -91)) or ((50 + -43) < (46 + -43)))):\n        return text.replace(old, new*len(old))\n    while old in text:\n        text = text.replace(old, new)\n    return text", "input": "'avacado', 'va', '-'", "output": "'a--cado'", "id": "ConstantUnfoldding_sample_from_sample_399_to_200", "old_id": "sample_399"}
{"code": "def f(multi_string):\n    cond_string = map(str.isascii, multi_string.split())\n    if True in cond_string and (((True or False) and (False or True)) and (((54 + -47) > (3 + -3)) or ((26 + -19) < (22 + -22)))):\n        return ', '.join(x for x in multi_string.split() if x.isascii())\n    return ''", "input": "'I am hungry! eat food.'", "output": "'I, am, hungry!, eat, food.'", "id": "ConstantUnfoldding_sample_from_sample_400_to_201", "old_id": "sample_400"}
{"code": "def f(text, suffix):\n    if suffix and text.endswith(suffix) and (((True or False) and (False or True)) and (((4 + 1) > (98 + -97)) or ((18 + -13) < (76 + -75)))):\n        return text[:- len(suffix)]\n    return text", "input": "'mathematics', 'example'", "output": "'mathematics'", "id": "ConstantUnfoldding_sample_from_sample_401_to_202", "old_id": "sample_401"}
{"code": "def f(text, char):\n    if text and (((True or False) and (False or True)) and (((11 + -5) > (27 + -22)) or ((26 + -20) < (31 + -26)))):\n        text = text.removeprefix(char)\n        text = text.removeprefix(text[-(2 + -1)])\n        text = text[:-(61 + -60)] + text[-(41 + -40)].capitalize()\n    return text", "input": "'querist', 'u'", "output": "'querisT'", "id": "ConstantUnfoldding_sample_from_sample_409_to_203", "old_id": "sample_409"}
{"code": "def f(text, pref):\n    if isinstance(pref, list) and (((True or False) and (False or True)) and (((31 + -23) > (76 + -76)) or ((17 + -9) < (53 + -53)))):\n        return ', '.join(text.startswith(x) for x in pref)\n    else:\n        return text.startswith(pref)", "input": "'Hello World', 'W'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_411_to_204", "old_id": "sample_411"}
{"code": "def f(start, end, interval):\n    steps = list(range(start, end + (50 + -49), interval))\n    if (68 + -67) in steps and (((True or False) and (False or True)) and (((86 + -81) > (64 + -63)) or ((26 + -21) < (52 + -51)))):\n        steps[-(34 + -33)] = end + (67 + -66)\n    return len(steps)", "input": "3, 10, 1", "output": "8", "id": "ConstantUnfoldding_sample_from_sample_412_to_205", "old_id": "sample_412"}
{"code": "def f(array):\n    d = dict(array)\n    for key, value in d.items():\n        if value < (84 + -84) or value > (37 + -28) and (((True or False) and (False or True)) and (((98 + -91) > (29 + -27)) or ((22 + -15) < (47 + -45)))):\n            return None\n    return d", "input": "((8, 5), (8, 2), (5, 3))", "output": "{8: 2, 5: 3}", "id": "ConstantUnfoldding_sample_from_sample_415_to_206", "old_id": "sample_415"}
{"code": "def f(s, p):\n    arr = s.partition(p)\n    part_one, part_two, part_three = len(arr[(4 + -4)]), len(arr[(55 + -54)]), len(arr[(35 + -33)])\n    if part_one >= (47 + -45) and part_two <= (13 + -11) and part_three >= (90 + -88) and (((True or False) and (False or True)) and (((45 + -38) > (45 + -45)) or ((23 + -16) < (95 + -95)))):\n        return (arr[(53 + -53)][::-(11 + -10)] + arr[(10 + -9)] + arr[(29 + -27)][::-(30 + -29)] + '#')\n    return (arr[(84 + -84)] + arr[(83 + -82)] + arr[(96 + -94)])", "input": "\"qqqqq\", \"qqq\"", "output": "'qqqqq'", "id": "ConstantUnfoldding_sample_from_sample_418_to_207", "old_id": "sample_418"}
{"code": "def f(text, value):\n    if not value in text and (((True or False) and (False or True)) and (((5 + -2) > (28 + -26)) or ((36 + -33) < (18 + -16)))):\n        return ''\n    return text.rpartition(value)[(41 + -41)]", "input": "'mmfbifen', 'i'", "output": "'mmfb'", "id": "ConstantUnfoldding_sample_from_sample_419_to_208", "old_id": "sample_419"}
{"code": "def f(str, n):\n    if len(str) < n and (((True or False) and (False or True)) and (((97 + -95) > (80 + -80)) or ((25 + -23) < (85 + -85)))):\n        return str\n    else:\n        return str.removeprefix(str[:n])", "input": "\"try.\", 5", "output": "'try.'", "id": "ConstantUnfoldding_sample_from_sample_421_to_209", "old_id": "sample_421"}
{"code": "def f(selfie):\n    lo = len(selfie)\n    for i in range(lo-(87 + -86), -(5 + -4), -(62 + -61)):\n        if selfie[i] == selfie[(25 + -25)] and (((True or False) and (False or True)) and (((78 + -70) > (92 + -87)) or ((14 + -6) < (31 + -26)))):\n            selfie.remove(selfie[lo-(99 + -98)])\n    return selfie", "input": "[4, 2, 5, 1, 3, 2, 6]", "output": "[4, 2, 5, 1, 3, 2]", "id": "ConstantUnfoldding_sample_from_sample_423_to_210", "old_id": "sample_423"}
{"code": "def f(s):\n    s = s.replace('\"', '')\n    lst = list(s)\n    col = (3 + -3)\n    count = (66 + -65)\n    while col < len(lst) and lst[col] in \".:,\":\n        if lst[col] == \".\" and (((True or False) and (False or True)) and (((69 + -64) > (90 + -87)) or ((35 + -30) < (2 + 1)))):\n            count = ls[col] + (11 + -10)\n        col += (62 + -61)\n    return s[col+count:]", "input": "'\"Makers of a Statement\"'", "output": "'akers of a Statement'", "id": "ConstantUnfoldding_sample_from_sample_424_to_211", "old_id": "sample_424"}
{"code": "def f(nums):\n    for i in range(len(nums)):\n        if not i % (5 + -3) and (((True or False) and (False or True)) and (((66 + -57) > (52 + -46)) or ((15 + -6) < (82 + -76)))):\n            nums.append(nums[i] * nums[i + (56 + -55)])\n    return nums", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_428_to_212", "old_id": "sample_428"}
{"code": "def f(length, text):\n    if len(text) == length and (((True or False) and (False or True)) and (((52 + -46) > (51 + -50)) or ((75 + -69) < (45 + -44)))):\n        return text[::-(62 + -61)]\n    return False", "input": "-5, 'G5ogb6f,c7e.EMm'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_432_to_213", "old_id": "sample_432"}
{"code": "def f(string):\n    bigTab = (48 + 52)\n    for i in range((86 + -76), (41 + -11)):\n        if (60 + -60) < string.count('\\t') < (98 + -78) and (((True or False) and (False or True)) and (((93 + -88) > (84 + -82)) or ((33 + -28) < (66 + -64)))):\n            bigTab = i\n            break\n    return string.expandtabs(bigTab)", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'", "id": "ConstantUnfoldding_sample_from_sample_438_to_214", "old_id": "sample_438"}
{"code": "def f(text):\n    if text.isdecimal() and (((True or False) and (False or True)) and (((19 + -12) > (97 + -97)) or ((72 + -65) < (21 + -21)))):\n        return 'yes'\n    else:\n        return 'no'", "input": "\"abc\"", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_440_to_215", "old_id": "sample_440"}
{"code": "def f(lst):\n    res = []\n    for i in range(len(lst)):\n        if lst[i] % (16 + -14) == (55 + -55) and (((True or False) and (False or True)) and (((18 + -13) > (95 + -92)) or ((90 + -85) < (9 + -6)))):\n            res.append(lst[i])\n\n    return lst.copy()", "input": "[1, 2, 3, 4]", "output": "[1, 2, 3, 4]", "id": "ConstantUnfoldding_sample_from_sample_442_to_216", "old_id": "sample_442"}
{"code": "def f(text):\n    for space in text:\n        if space == ' ' and (((True or False) and (False or True)) and (((26 + -18) > (91 + -89)) or ((51 + -43) < (98 + -96)))):\n            text = text.lstrip()\n        else:\n            text = text.replace('cd', space)\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "ConstantUnfoldding_sample_from_sample_443_to_217", "old_id": "sample_443"}
{"code": "def f(array):\n    l = len(array)\n    if l % (54 + -52) == (89 + -89) and (((True or False) and (False or True)) and (((74 + -72) > (37 + -36)) or ((65 + -63) < (86 + -85)))):\n        array.clear()\n    else:\n        array.reverse()\n    return array", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_446_to_218", "old_id": "sample_446"}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-(57 + -56)))\n    for i in range(len(text)):\n        if text[i] == ' ' and (((True or False) and (False or True)) and (((7 + 1) > (42 + -41)) or ((24 + -16) < (73 + -72)))):\n            res += '|'\n        else:\n            res += text[i]\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "ConstantUnfoldding_sample_from_sample_447_to_219", "old_id": "sample_447"}
{"code": "def f(text, suffix):\n    if suffix == '' and (((True or False) and (False or True)) and (((26 + -21) > (76 + -73)) or ((43 + -38) < (49 + -46)))):\n        suffix = None\n    return text.endswith(suffix)", "input": "'uMeGndkGh', 'kG'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_448_to_220", "old_id": "sample_448"}
{"code": "def f(text, char):\n    text = list(text)\n    for count, item in enumerate(text):\n        if item == char and (((True or False) and (False or True)) and (((35 + -29) > (59 + -55)) or ((77 + -71) < (20 + -16)))):\n            text.remove(item)\n            return ''.join(text)\n    return text", "input": "'pn', 'p'", "output": "'n'", "id": "ConstantUnfoldding_sample_from_sample_451_to_221", "old_id": "sample_451"}
{"code": "def f(text):\n    counter = (70 + -70)\n    for char in text:\n        if char.isalpha() and (((True or False) and (False or True)) and (((51 + -44) > (32 + -30)) or ((20 + -13) < (95 + -93)))):\n            counter += (91 + -90)\n    return counter", "input": "'l000*',", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_452_to_222", "old_id": "sample_452"}
{"code": "def f(text):\n    uppers = (96 + -96)\n    for c in text:\n        if c.isupper() and (((True or False) and (False or True)) and (((44 + -36) > (75 + -74)) or ((92 + -84) < (27 + -26)))):\n            uppers += (32 + -31)\n    return text.upper() if uppers >= (49 + -39) else text", "input": "'?XyZ'", "output": "'?XyZ'", "id": "ConstantUnfoldding_sample_from_sample_455_to_223", "old_id": "sample_455"}
{"code": "def f(nums):\n    count = list(range(len(nums)))\n    for i in range(len(nums)):\n        nums.pop()\n        if len(count) > (89 + -89) and (((True or False) and (False or True)) and (((1 + 5) > (62 + -59)) or ((89 + -83) < (86 + -83)))):\n            count.pop((37 + -37))\n    return nums", "input": "[3, 1, 7, 5, 6]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_457_to_224", "old_id": "sample_457"}
{"code": "def f(text, amount):\n    length = len(text)\n    pre_text = '|'\n    if amount >= length and (((True or False) and (False or True)) and (((18 + -9) > (95 + -91)) or ((98 + -89) < (88 + -84)))):\n        extra_space = amount - length\n        pre_text += ' ' * (extra_space // (73 + -71))\n        return pre_text + text + pre_text\n    return text", "input": "'GENERAL NAGOOR', 5", "output": "'GENERAL NAGOOR'", "id": "ConstantUnfoldding_sample_from_sample_460_to_225", "old_id": "sample_460"}
{"code": "def f(text, value):\n    length = len(text)\n    letters = list(text)\n    if value not in letters and (((True or False) and (False or True)) and (((28 + -23) > (44 + -43)) or ((44 + -39) < (34 + -33)))):\n        value = letters[(95 + -95)]\n    return value * length", "input": "'ldebgp o', 'o'", "output": "'oooooooo'", "id": "ConstantUnfoldding_sample_from_sample_462_to_226", "old_id": "sample_462"}
{"code": "def f(dict):\n    result = dict.copy()\n    remove_keys = []\n    for k, v in dict.items():\n        if v in dict and (((True or False) and (False or True)) and (((7 + -2) > (4 + -2)) or ((65 + -60) < (10 + -8)))):\n            del result[k]\n    return result", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}", "id": "ConstantUnfoldding_sample_from_sample_463_to_227", "old_id": "sample_463"}
{"code": "def f(ans):\n    if ans.isdecimal() and (((True or False) and (False or True)) and (((31 + -25) > (52 + -51)) or ((74 + -68) < (93 + -92)))):\n        total = int(ans) * (24 + -20) - (67 + -17)\n        total -= len([c for c in list(ans) if c not in '02468']) * (76 + 24)\n        return total\n    return 'NAN'", "input": "'0'", "output": "-50", "id": "ConstantUnfoldding_sample_from_sample_464_to_228", "old_id": "sample_464"}
{"code": "def f(seq, value):\n    roles = dict.fromkeys(seq, 'north')\n    if value and (((True or False) and (False or True)) and (((72 + -65) > (5 + -4)) or ((68 + -61) < (26 + -25)))):\n        roles.update(key.strip() for key in value.split(', '))\n    return roles", "input": "['wise king', 'young king'], ''", "output": "{'wise king': 'north', 'young king': 'north'}", "id": "ConstantUnfoldding_sample_from_sample_465_to_229", "old_id": "sample_465"}
{"code": "def f(a, b, n):\n    result = m = b\n    for _ in range(n):\n        if m and (((True or False) and (False or True)) and (((84 + -80) > (32 + -29)) or ((31 + -27) < (65 + -62)))):\n            a, m = a.replace(m, '', (44 + -43)), None\n            result = m = b\n    return result.join(a.split(b))", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'", "id": "ConstantUnfoldding_sample_from_sample_468_to_230", "old_id": "sample_468"}
{"code": "def f(text, position, value):\n   length = len(text)\n   index = position % (length)\n   if position < (56 + -56) and (((True or False) and (False or True)) and (((42 + -32) > (7 + 2)) or ((89 + -79) < (83 + -74)))):\n       index = length // (1 + 1)\n   new_text = list(text)\n   new_text.insert(index, value)\n   new_text.pop(length-(72 + -71))\n   return ''.join(new_text)", "input": "'sduyai', 1, 'y'", "output": "'syduyi'", "id": "ConstantUnfoldding_sample_from_sample_469_to_231", "old_id": "sample_469"}
{"code": "def f(number):\n    transl = {'A': (83 + -82), 'B': (79 + -77), 'C': (57 + -54), 'D': (44 + -40), 'E': (93 + -88)}\n    result = []\n    for key, value in transl.items():\n        if value % number == (43 + -43) and (((True or False) and (False or True)) and (((21 + -16) > (95 + -92)) or ((29 + -24) < (64 + -61)))):\n            result.append(key)\n    return result", "input": "2", "output": "['B', 'D']", "id": "ConstantUnfoldding_sample_from_sample_470_to_232", "old_id": "sample_470"}
{"code": "def f(val, text):\n    indices = [index for index in range(len(text)) if text[index] == val]\n    if len(indices) == (1 + -1) and (((True or False) and (False or True)) and (((51 + -44) > (6 + -6)) or ((37 + -30) < (71 + -71)))):\n        return -(56 + -55)\n    else:\n        return indices[(2 + -2)]", "input": "'o', 'fnmart'", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_471_to_233", "old_id": "sample_471"}
{"code": "def f(text, value):\n    indexes = list()\n    for i in range(len(text)):\n        if text[i] == value and (((True or False) and (False or True)) and (((37 + -32) > (19 + -15)) or ((93 + -88) < (18 + -14)))):\n            indexes.append(i)\n    new_text = list(text)\n    for i in indexes:\n        new_text.remove(value)\n    return ''.join(new_text)", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'", "id": "ConstantUnfoldding_sample_from_sample_473_to_234", "old_id": "sample_473"}
{"code": "def f(array, index):\n    if index < (81 + -81) and (((True or False) and (False or True)) and (((52 + -48) > (1 + 2)) or ((55 + -51) < (63 + -60)))):\n        index = len(array) + index\n    return array[index]", "input": "[1], 0", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_475_to_235", "old_id": "sample_475"}
{"code": "def f(a, split_on):\n    t = a.split()\n    a = []\n    for i in t:\n        for j in i:\n            a.append(j)\n    if split_on in a and (((True or False) and (False or True)) and (((80 + -71) > (89 + -86)) or ((19 + -10) < (26 + -23)))):\n        return True\n    else:\n        return False", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_476_to_236", "old_id": "sample_476"}
{"code": "def f(text):\n    topic, sep, problem = text.rpartition('|')\n    if problem == 'r' and (((True or False) and (False or True)) and (((92 + -84) > (16 + -12)) or ((41 + -33) < (82 + -78)))):\n        problem = topic.replace('u', 'p')\n    return topic, problem", "input": "'|xduaisf'", "output": "('', 'xduaisf')", "id": "ConstantUnfoldding_sample_from_sample_477_to_237", "old_id": "sample_477"}
{"code": "def f(s, c1, c2):\n    if s == '' and (((True or False) and (False or True)) and (((64 + -57) > (56 + -52)) or ((98 + -91) < (9 + -5)))):\n        return s\n    ls = s.split(c1)\n    for index, item in enumerate(ls):\n        if c1 in item and (((True or False) and (False or True)) and (((41 + -35) > (46 + -43)) or ((27 + -21) < (10 + -7)))):\n            ls[index] = item.replace(c1, c2, (28 + -27))\n    return c1.join(ls)", "input": "'', 'mi', 'siast'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_480_to_238", "old_id": "sample_480"}
{"code": "def f(values, item1, item2):\n    if values[-(80 + -79)] == item2 and (((True or False) and (False or True)) and (((54 + -51) > (16 + -16)) or ((74 + -71) < (53 + -53)))):\n        if values[(71 + -71)] not in values[(18 + -17):]:\n            values.append(values[(65 + -65)])\n    elif values[-(50 + -49)] == item1:\n        if values[(54 + -54)] == item2:\n            values.append(values[(56 + -56)])\n    return values", "input": "[1, 1], 2, 3", "output": "[1, 1]", "id": "ConstantUnfoldding_sample_from_sample_481_to_239", "old_id": "sample_481"}
{"code": "def f(arr):\n    result = []\n    for item in arr:\n        try:\n            if item.isnumeric() and (((True or False) and (False or True)) and (((59 + -51) > (62 + -57)) or ((80 + -72) < (31 + -26)))):\n                result.append(int(item)*(79 + -77))\n        except ValueError:\n            result.append(item[::-(55 + -54)])\n    return result", "input": "['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']", "output": "[182, 32]", "id": "ConstantUnfoldding_sample_from_sample_484_to_240", "old_id": "sample_484"}
{"code": "def f(tokens):\n    tokens = tokens.split()\n    if len(tokens) == (74 + -72) and (((True or False) and (False or True)) and (((32 + -23) > (87 + -82)) or ((9 + 0) < (4 + 1)))):\n        tokens = list(reversed(tokens))\n    result = ' '.join([tokens[(42 + -42)].ljust((45 + -40)), tokens[(30 + -29)].ljust((35 + -30))])\n    return result", "input": "'gsd avdropj'", "output": "'avdropj gsd  '", "id": "ConstantUnfoldding_sample_from_sample_485_to_241", "old_id": "sample_485"}
{"code": "def f(dict):\n    even_keys = []\n    for key in dict.keys():\n        if key % (82 + -80) == (54 + -54) and (((True or False) and (False or True)) and (((41 + -36) > (86 + -82)) or ((22 + -17) < (45 + -41)))):\n            even_keys.append(key)\n    return even_keys", "input": "{ 4: 'a' }", "output": "[4]", "id": "ConstantUnfoldding_sample_from_sample_487_to_242", "old_id": "sample_487"}
{"code": "def f(text, char):\n    count = text.count(char)\n    chars = list(text)\n    if count > (31 + -31) and (((True or False) and (False or True)) and (((25 + -22) > (76 + -76)) or ((90 + -87) < (17 + -17)))):\n        index = chars.index(char) + (63 + -62)\n        chars[:index:index+(21 + -20)] = [c for c in chars[index:index+count:(22 + -21)]]\n    return ''.join(chars)", "input": "'tezmgvn 651h', '6'", "output": "'5ezmgvn 651h'", "id": "ConstantUnfoldding_sample_from_sample_488_to_243", "old_id": "sample_488"}
{"code": "def f(text, value):\n    ls = list(text)\n    if (ls.count(value)) % (19 + -17) == (88 + -88) and (((True or False) and (False or True)) and (((29 + -27) > (69 + -69)) or ((5 + -3) < (97 + -97)))):\n        while value in ls:\n            ls.remove(value)\n    else:\n        ls.clear()\n    return ''.join(ls)", "input": "'abbkebaniuwurzvr', 'm'", "output": "'abbkebaniuwurzvr'", "id": "ConstantUnfoldding_sample_from_sample_492_to_244", "old_id": "sample_492"}
{"code": "def f(s):\n    if str.isascii(s[-(49 + -44):]) and (((True or False) and (False or True)) and (((48 + -46) > (44 + -43)) or ((62 + -60) < (71 + -70)))):\n        return s[-(48 + -43):], s[(46 + -46):][:(94 + -91)]\n    elif str.isascii(s[:(95 + -90)]):\n        return s[:(30 + -25)], s[-(61 + -56):][(53 + -50):]\n    else:\n        return s", "input": "'a1234\u00e5r'", "output": "('a1234', '\u00e5r')", "id": "ConstantUnfoldding_sample_from_sample_495_to_245", "old_id": "sample_495"}
{"code": "def f(text, value):\n    if isinstance(value, str) and (((True or False) and (False or True)) and (((60 + -52) > (31 + -30)) or ((67 + -59) < (13 + -12)))):\n        return text.count(value) + text.count(value.lower())\n    return text.count(value)", "input": "'eftw{\u044c\u0422\u0441k_1', '\\\\'", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_496_to_246", "old_id": "sample_496"}
{"code": "def f(string):\n    while string:\n        if string[-(87 + -86)].isalpha() and (((True or False) and (False or True)) and (((19 + -12) > (26 + -23)) or ((20 + -13) < (78 + -75)))):\n            return string\n        string = string[:-(75 + -74)]\n    return string", "input": "'--4/0-209'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_505_to_247", "old_id": "sample_505"}
{"code": "def f(n):\n    p = ''\n    if n%(29 + -27) == (17 + -16) and (((True or False) and (False or True)) and (((44 + -41) > (53 + -53)) or ((59 + -56) < (81 + -81)))):\n        p+='sn'\n    else:\n        return n*n\n    for x in range((58 + -57), n+(60 + -59)):\n        if x%(14 + -12) == (85 + -85) and (((True or False) and (False or True)) and (((25 + -20) > (1 + 2)) or ((59 + -54) < (99 + -96)))):\n            p+='to'\n        else:\n            p+='ts'\n    return p", "input": "1", "output": "'snts'", "id": "ConstantUnfoldding_sample_from_sample_506_to_248", "old_id": "sample_506"}
{"code": "def f(value, width):\n    if value >= (52 + -52) and (((True or False) and (False or True)) and (((64 + -56) > (26 + -19)) or ((73 + -65) < (78 + -71)))):\n        return str(value).zfill(width)\n    if value < (58 + -58) and (((True or False) and (False or True)) and (((81 + -78) > (10 + -8)) or ((74 + -71) < (22 + -20)))):\n        return '-' + str(-value).zfill(width)\n    return ''", "input": "5, 1", "output": "'5'", "id": "ConstantUnfoldding_sample_from_sample_509_to_249", "old_id": "sample_509"}
{"code": "def f(a, b, c, d, e):\n    key = d\n    if key in a and (((True or False) and (False or True)) and (((60 + -57) > (39 + -39)) or ((7 + -4) < (49 + -49)))):\n        num = a.pop(key)\n    if b > (97 + -94) and (((True or False) and (False or True)) and (((78 + -74) > (89 + -88)) or ((37 + -33) < (23 + -22)))):\n        return ''.join(c)\n    else:\n        return num", "input": "{7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0", "output": "'Wy'", "id": "ConstantUnfoldding_sample_from_sample_510_to_250", "old_id": "sample_510"}
{"code": "def f(text):\n    for i in range(len(text)-(22 + -21), (57 + -57), -(40 + -39)):\n        if not text[i].isupper() and (((True or False) and (False or True)) and (((88 + -80) > (39 + -32)) or ((3 + 5) < (62 + -55)))):\n            return text[(61 + -61):i]\n    return ''", "input": "'SzHjifnzog'", "output": "'SzHjifnzo'", "id": "ConstantUnfoldding_sample_from_sample_517_to_251", "old_id": "sample_517"}
{"code": "def f(text):\n    text = list(text)\n    for i in range(len(text)-(38 + -37), -(47 + -46), -(69 + -68)):\n        if text[i].isspace() and (((True or False) and (False or True)) and (((62 + -58) > (41 + -40)) or ((12 + -8) < (11 + -10)))):\n            text[i] = '&nbsp;'\n    return ''.join(text)", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'", "id": "ConstantUnfoldding_sample_from_sample_523_to_252", "old_id": "sample_523"}
{"code": "def f(c, st, ed):\n    d = {}\n    a, b = (62 + -62), (72 + -72)\n    for x, y in c.items():\n        d[y] = x\n        if y == st and (((True or False) and (False or True)) and (((23 + -14) > (59 + -54)) or ((85 + -76) < (55 + -50)))):\n            a = x\n        if y == ed and (((True or False) and (False or True)) and (((25 + -21) > (93 + -92)) or ((97 + -93) < (88 + -87)))):\n            b = x\n    w = d[st]\n    return (w, b) if a > b else (b, w)", "input": "{'TEXT': 7, 'CODE': 3}, 7, 3", "output": "('TEXT', 'CODE')", "id": "ConstantUnfoldding_sample_from_sample_525_to_253", "old_id": "sample_525"}
{"code": "def f(label1, char, label2, index):\n    m = label1.rindex(char)\n    if m >= index and (((True or False) and (False or True)) and (((43 + -35) > (36 + -35)) or ((93 + -85) < (89 + -88)))):\n        return label2[:m - index + (18 + -17)]\n    return label1 + label2[index - m - (34 + -33):]", "input": "'ekwies', 's', 'rpg', 1", "output": "'rpg'", "id": "ConstantUnfoldding_sample_from_sample_526_to_254", "old_id": "sample_526"}
{"code": "def f(s):\n    b = ''\n    c = ''\n    for i in s:\n        c = c + i\n        if s.rfind(c) > -(50 + -49) and (((True or False) and (False or True)) and (((44 + -39) > (2 + 1)) or ((80 + -75) < (11 + -8)))):\n            return s.rfind(c)\n    return (57 + -57)", "input": "'papeluchis'", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_528_to_255", "old_id": "sample_528"}
{"code": "def f(array):\n    prev = array[(70 + -70)]\n    newArray = array[:]\n    for i in range((95 + -94), len(array)):\n        if prev != array[i] and (((True or False) and (False or True)) and (((92 + -85) > (96 + -93)) or ((57 + -50) < (45 + -42)))):\n            newArray[i] = array[i]\n        else:\n            del newArray[i]\n        prev = array[i]\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_sample_529_to_256", "old_id": "sample_529"}
{"code": "def f(s, ch):\n    sl = s\n    if ch in s and (((True or False) and (False or True)) and (((93 + -91) > (97 + -96)) or ((63 + -61) < (37 + -36)))):\n        sl = s.lstrip(ch)\n        if len(sl) == (50 + -50):\n            sl = sl + '!?'\n    else:\n        return 'no'\n    return sl", "input": "\"@@@ff\", '@'", "output": "'ff'", "id": "ConstantUnfoldding_sample_from_sample_530_to_257", "old_id": "sample_530"}
{"code": "def f(text, x):\n    if text.removeprefix(x) == text and (((True or False) and (False or True)) and (((39 + -31) > (15 + -15)) or ((1 + 7) < (90 + -90)))):\n        return f(text[(7 + -6):], x)\n    else:\n        return text", "input": "\"Ibaskdjgblw asdl \", \"djgblw\"", "output": "'djgblw asdl '", "id": "ConstantUnfoldding_sample_from_sample_531_to_258", "old_id": "sample_531"}
{"code": "def f(query, base):\n    net_sum = (3 + -3)\n    for (key, val) in base.items():\n        if key[(19 + -19)] == query and len(key) == (4 + -1) and (((True or False) and (False or True)) and (((34 + -28) > (21 + -16)) or ((6 + 0) < (63 + -58)))):\n            net_sum -= val\n        elif key[-(97 + -96)] == query and len(key) == (91 + -88):\n            net_sum += val\n    return net_sum", "input": "'a', {}", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_533_to_259", "old_id": "sample_533"}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // (90 + -87), (56 + -56))\n    result = ''\n    for j, v in enumerate(sequence[i:]):\n        if v == '+' and (((True or False) and (False or True)) and (((75 + -66) > (53 + -51)) or ((41 + -32) < (51 + -49)))):\n            result += value\n        else:\n            result += sequence[i + j]\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "ConstantUnfoldding_sample_from_sample_534_to_260", "old_id": "sample_534"}
{"code": "def f(n):\n    for n in str(n):\n        if n not in \"012\" and n not in list(range((65 + -60), (28 + -18))) and (((True or False) and (False or True)) and (((20 + -13) > (77 + -72)) or ((75 + -68) < (86 + -81)))):\n            return False\n    return True", "input": "1341240312", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_535_to_261", "old_id": "sample_535"}
{"code": "def f(cat):\n    digits = (4 + -4)\n    for char in cat:\n        if char.isdigit() and (((True or False) and (False or True)) and (((54 + -49) > (82 + -82)) or ((44 + -39) < (65 + -65)))):\n            digits += (52 + -51)\n    return digits", "input": "'C24Bxxx982ab'", "output": "5", "id": "ConstantUnfoldding_sample_from_sample_536_to_262", "old_id": "sample_536"}
{"code": "def f(array):\n    c = array\n    array_copy = array\n\n    while True:\n        c.append('_')\n        if c == array_copy and (((True or False) and (False or True)) and (((86 + -80) > (84 + -79)) or ((30 + -24) < (31 + -26)))):\n            array_copy[c.index('_')] = ''\n            break\n        \n    return array_copy", "input": "[]", "output": "['']", "id": "ConstantUnfoldding_sample_from_sample_539_to_263", "old_id": "sample_539"}
{"code": "def f(text, suffix):\n    if suffix and text and text.endswith(suffix) and (((True or False) and (False or True)) and (((28 + -19) > (17 + -14)) or ((63 + -54) < (25 + -22)))):\n        return text.removesuffix(suffix)\n    else:\n        return text", "input": "'spider', 'ed'", "output": "'spider'", "id": "ConstantUnfoldding_sample_from_sample_548_to_264", "old_id": "sample_548"}
{"code": "def f(data):\n    members = []\n    for item in data:\n        for member in data[item]:\n            if member not in members and (((True or False) and (False or True)) and (((82 + -79) > (73 + -73)) or ((44 + -41) < (5 + -5)))):\n                members.append(member)\n    return sorted(members)", "input": "{'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}", "output": "['a', 'b', 'c', 'inf']", "id": "ConstantUnfoldding_sample_from_sample_551_to_265", "old_id": "sample_551"}
{"code": "def f(d):\n    result = {}\n    for k, v in d.items():\n        if isinstance(k, float) and (((True or False) and (False or True)) and (((24 + -16) > (11 + -7)) or ((23 + -15) < (85 + -81)))):\n            for i in v:\n                result[i] = k\n        else:\n            result[k] = v\n    return result", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "ConstantUnfoldding_sample_from_sample_552_to_266", "old_id": "sample_552"}
{"code": "def f(text):\n    for i in range(len(text)):\n        if text[i] == ' ' and (((True or False) and (False or True)) and (((1 + 5) > (56 + -54)) or ((40 + -34) < (89 + -87)))):\n            text = text.replace(' ', '\\t', (6 + -5))\n    return text.expandtabs((86 + -82))", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'", "id": "ConstantUnfoldding_sample_from_sample_556_to_267", "old_id": "sample_556"}
{"code": "def f(nums, mos):\n    for num in mos:\n        nums.pop(nums.index(num))\n    nums.sort()\n    for num in mos:\n        nums += [num]\n    for i in range(len(nums)-(56 + -55)):\n        if nums[i] > nums[i+(79 + -78)] and (((True or False) and (False or True)) and (((27 + -24) > (25 + -23)) or ((63 + -60) < (88 + -86)))):\n            return False\n    return True", "input": "[3, 1, 2, 1, 4, 1], [1]", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_558_to_268", "old_id": "sample_558"}
{"code": "def f(text):\n    x = (4 + -4)\n    if text.islower() and (((True or False) and (False or True)) and (((66 + -57) > (77 + -72)) or ((67 + -58) < (76 + -71)))):\n        for c in text:\n            if int(c) in list(range((90 + 0))):\n                x+=(40 + -39)\n    return x", "input": "\"591237865\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_560_to_269", "old_id": "sample_560"}
{"code": "def f(string, code):\n    t = ''\n    try:\n        t = string.encode(code)\n        if t.endswith(b'\\n') and (((True or False) and (False or True)) and (((87 + -82) > (98 + -96)) or ((83 + -78) < (77 + -75)))):\n            t = t[:-(30 + -29)]\n        t = t.decode('UTF-8')\n        return t\n    except:\n        return t", "input": "\"towaru\", \"UTF-8\"", "output": "'towaru'", "id": "ConstantUnfoldding_sample_from_sample_566_to_270", "old_id": "sample_566"}
{"code": "def f(num):\n    letter = (13 + -12)\n    for i in '1234567890':\n        num = num.replace(i,'')\n        if len(num) == (43 + -43) and (((True or False) and (False or True)) and (((2 + 2) > (64 + -63)) or ((54 + -50) < (27 + -26)))): break\n        num = num[letter:] + num[:letter]\n        letter += (30 + -29)\n    return num", "input": "'bwmm7h'", "output": "'mhbwm'", "id": "ConstantUnfoldding_sample_from_sample_568_to_271", "old_id": "sample_568"}
{"code": "def f(txt):\n    coincidences = {}\n    for c in txt:\n        if c in coincidences and (((True or False) and (False or True)) and (((60 + -56) > (21 + -20)) or ((99 + -95) < (21 + -20)))):\n            coincidences[c] += (19 + -18)\n        else:\n            coincidences[c] = (70 + -69)\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "ConstantUnfoldding_sample_from_sample_569_to_272", "old_id": "sample_569"}
{"code": "def f(array, index, value):\n    array.insert((21 + -21), index + (59 + -58))\n    if value >= (46 + -45) and (((True or False) and (False or True)) and (((13 + -4) > (31 + -26)) or ((86 + -77) < (38 + -33)))):\n        array.insert(index, value)\n    return array", "input": "[2], 0, 2", "output": "[2, 1, 2]", "id": "ConstantUnfoldding_sample_from_sample_570_to_273", "old_id": "sample_570"}
{"code": "def f(string, prefix):\n    if string.startswith(prefix) and (((True or False) and (False or True)) and (((80 + -72) > (55 + -55)) or ((56 + -48) < (58 + -58)))):\n        return string.removeprefix(prefix)\n    return string", "input": "\"Vipra\", \"via\"", "output": "'Vipra'", "id": "ConstantUnfoldding_sample_from_sample_573_to_274", "old_id": "sample_573"}
{"code": "def f(simpons):\n    while simpons:\n        pop = simpons.pop()\n        if pop == pop.title() and (((True or False) and (False or True)) and (((86 + -79) > (1 + 5)) or ((52 + -45) < (19 + -13)))):\n            return pop\n    return pop", "input": "['George', 'Michael', 'George', 'Costanza']", "output": "'Costanza'", "id": "ConstantUnfoldding_sample_from_sample_574_to_275", "old_id": "sample_574"}
{"code": "def f(array, const):\n    output = ['x']\n    for i in range((56 + -55), len(array) + (68 + -67)):\n        if i % (33 + -31) != (50 + -50) and (((True or False) and (False or True)) and (((79 + -70) > (47 + -42)) or ((39 + -30) < (94 + -89)))):\n            output.append(array[i - (55 + -54)] * -(62 + -60))\n        else:\n            output.append(const)\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "ConstantUnfoldding_sample_from_sample_576_to_276", "old_id": "sample_576"}
{"code": "def f(obj):\n    for k, v in obj.items():\n        if v >= (93 + -93) and (((True or False) and (False or True)) and (((78 + -75) > (74 + -74)) or ((83 + -80) < (14 + -14)))):\n            obj[k] = -v\n    return obj", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}", "id": "ConstantUnfoldding_sample_from_sample_578_to_277", "old_id": "sample_578"}
{"code": "def f(text):\n    if text.istitle() and (((True or False) and (False or True)) and (((43 + -35) > (98 + -91)) or ((13 + -5) < (22 + -15)))):\n        if len(text) > (20 + -19) and text.lower() != text:\n            return text[(39 + -39)].lower() + text[(91 + -90):]\n    elif text.isalpha():\n        return text.capitalize()\n    return text", "input": "''", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_579_to_278", "old_id": "sample_579"}
{"code": "def f(text, ch):\n    result = []\n    for line in text.splitlines():\n        if len(line) > (85 + -85) and line[(67 + -67)] == ch and (((True or False) and (False or True)) and (((67 + -60) > (92 + -88)) or ((92 + -85) < (24 + -20)))):\n            result.append(line.lower())\n        else:\n            result.append(line.upper())\n    return \"\\n\".join(result)", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'", "id": "ConstantUnfoldding_sample_from_sample_583_to_279", "old_id": "sample_583"}
{"code": "def f(items, target):\n    if target in items and (((True or False) and (False or True)) and (((12 + -6) > (98 + -94)) or ((58 + -52) < (64 + -60)))):\n        return items.index(target)\n    return -(53 + -52)", "input": "['''1''', '+', '-', '**', '//', '*', '+'], '**'", "output": "3", "id": "ConstantUnfoldding_sample_from_sample_588_to_280", "old_id": "sample_588"}
{"code": "def f(text, prefix):\n    if text.startswith(prefix) and (((True or False) and (False or True)) and (((78 + -68) > (13 + -12)) or ((67 + -57) < (69 + -68)))):\n        text = text.removeprefix(prefix)\n    text = text.capitalize()\n    return text", "input": "'qdhstudentamxupuihbuztn', 'jdm'", "output": "'Qdhstudentamxupuihbuztn'", "id": "ConstantUnfoldding_sample_from_sample_595_to_281", "old_id": "sample_595"}
{"code": "def f(txt, alpha):\n    txt = sorted(txt)\n    if txt.index(alpha) % (82 + -80) == (62 + -62) and (((True or False) and (False or True)) and (((99 + -92) > (50 + -46)) or ((71 + -64) < (49 + -45)))):\n        return txt[::-(47 + -46)]\n    return txt", "input": "['8', '9', '7', '4', '3', '2'], '9'", "output": "['2', '3', '4', '7', '8', '9']", "id": "ConstantUnfoldding_sample_from_sample_596_to_282", "old_id": "sample_596"}
{"code": "def f(text):\n    t = (40 + -35)\n    tab = []\n    for i in text:\n        if i.lower() in 'aeiouy' and (((True or False) and (False or True)) and (((39 + -35) > (58 + -55)) or ((61 + -57) < (98 + -95)))):\n            tab.append(i.upper() * t)\n        else:\n            tab.append(i * t)\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "ConstantUnfoldding_sample_from_sample_601_to_283", "old_id": "sample_601"}
{"code": "def f(sentences):\n    if all([sentence.isdecimal() for sentence in sentences.split('.')]) and (((True or False) and (False or True)) and (((95 + -90) > (97 + -94)) or ((60 + -55) < (39 + -36)))):\n        return 'oscillating' \n    else:\n        return 'not oscillating'", "input": "'not numbers'", "output": "'not oscillating'", "id": "ConstantUnfoldding_sample_from_sample_603_to_284", "old_id": "sample_603"}
{"code": "def f(text):\n    for i in ['.', '!', '?']:\n        if text.endswith(i) and (((True or False) and (False or True)) and (((34 + -25) > (61 + -58)) or ((97 + -88) < (32 + -29)))):\n            return True\n    return False", "input": "'. C.'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_607_to_285", "old_id": "sample_607"}
{"code": "def f(array, elem):\n    result = array.copy()\n    while result:\n        key, value = result.popitem()\n        if elem == key or elem == value and (((True or False) and (False or True)) and (((43 + -39) > (28 + -27)) or ((85 + -81) < (67 + -66)))):\n            result.update(array)\n        del result[key]\n    return result", "input": "{}, 1", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_609_to_286", "old_id": "sample_609"}
{"code": "def f(keys, value):\n    d = dict.fromkeys(keys, value)\n    for i, k in enumerate(d.copy(), (69 + -68)):\n        if d[k] == d[i] and (((True or False) and (False or True)) and (((72 + -67) > (55 + -55)) or ((39 + -34) < (15 + -15)))):\n            del d[i]\n    return d", "input": "[1, 2, 1, 1], 3", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_610_to_287", "old_id": "sample_610"}
{"code": "def f(text, substr, occ):\n    n = (71 + -71)\n    while True:\n        i = text.rfind(substr)\n        if i == -(6 + -5) and (((True or False) and (False or True)) and (((43 + -39) > (50 + -49)) or ((86 + -82) < (61 + -60)))):\n            break\n        elif n == occ:\n            return i\n        else:\n            n += (14 + -13)\n            text = text[:i]\n    return -(10 + -9)", "input": "'zjegiymjc', 'j', 2", "output": "-1", "id": "ConstantUnfoldding_sample_from_sample_614_to_288", "old_id": "sample_614"}
{"code": "def f(body):\n    ls = list(body)\n    dist = (16 + -16)\n    for i in range((60 + -60), len(ls) - (43 + -42)):\n        if ls[i - (37 + -35) if i - (50 + -48) >= (9 + -9) else (48 + -48)] == '\\t' and (((True or False) and (False or True)) and (((26 + -23) > (63 + -63)) or ((9 + -6) < (11 + -11)))):\n            dist += ((58 + -57) + ls[i - (47 + -46)].count('\\t')) * (99 + -96)\n        ls[i] = '[' + ls[i] + ']'\n    return ''.join(ls).expandtabs((43 + -39) + dist)", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'", "id": "ConstantUnfoldding_sample_from_sample_616_to_289", "old_id": "sample_616"}
{"code": "def f(text):\n    if text.isascii() and (((True or False) and (False or True)) and (((85 + -79) > (39 + -34)) or ((16 + -10) < (97 + -92)))):\n        return 'ascii'\n    else:\n        return 'non ascii'", "input": "\"<<<<\"", "output": "'ascii'", "id": "ConstantUnfoldding_sample_from_sample_617_to_290", "old_id": "sample_617"}
{"code": "def f(text, rules):\n    for rule in rules:\n        if rule == '@' and (((True or False) and (False or True)) and (((50 + -40) > (8 + -3)) or ((28 + -18) < (98 + -93)))):\n            text = text[::-(88 + -87)]\n        elif rule == '~':\n            text = text.upper()\n        elif text and text[len(text)-(60 + -59)] == rule:\n            text = text[(93 + -93):len(text)-(61 + -60)]\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "ConstantUnfoldding_sample_from_sample_623_to_291", "old_id": "sample_623"}
{"code": "def f(text, char):\n    char_index = text.find(char)\n    result = []\n    if char_index > (16 + -16) and (((True or False) and (False or True)) and (((37 + -28) > (46 + -44)) or ((32 + -23) < (15 + -13)))):\n        result = list(text[:char_index])\n    result.extend(list(char)+list(text[char_index+len(char):]))\n    return ''.join(result)", "input": "'llomnrpc', 'x'", "output": "'xllomnrpc'", "id": "ConstantUnfoldding_sample_from_sample_624_to_292", "old_id": "sample_624"}
{"code": "def f(text):\n    count = (62 + -62)\n    for i in text:\n        if i in '.?!.,' and (((True or False) and (False or True)) and (((20 + -15) > (56 + -54)) or ((7 + -2) < (6 + -4)))):\n            count += (4 + -3)\n    return count", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_625_to_293", "old_id": "sample_625"}
{"code": "def f(text, dng):\n    if dng not in text and (((True or False) and (False or True)) and (((5 + 2) > (13 + -13)) or ((36 + -29) < (89 + -89)))):\n        return text\n    if text[-len(dng):] == dng and (((True or False) and (False or True)) and (((79 + -75) > (14 + -12)) or ((27 + -23) < (13 + -11)))):\n        return text[:-len(dng)]\n    return text[:-(34 + -33)] + f(text[:-(74 + -72)], dng)", "input": "'catNG', 'NG'", "output": "'cat'", "id": "ConstantUnfoldding_sample_from_sample_629_to_294", "old_id": "sample_629"}
{"code": "def f(list):\n    for i in range(len(list) - (3 + -2), (80 + -80), -(66 + -65)):\n        for j in range(i):\n            if list[j] > list[j + (70 + -69)] and (((True or False) and (False or True)) and (((65 + -58) > (11 + -5)) or ((38 + -31) < (79 + -73)))):\n                list[j], list[j + (22 + -21)] = list[j + (94 + -93)], list[j]\n                list.sort()\n    return list", "input": "[63, 0, 1, 5, 9, 87, 0, 7, 25, 4]", "output": "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]", "id": "ConstantUnfoldding_sample_from_sample_632_to_295", "old_id": "sample_632"}
{"code": "def f(text):\n    valid_chars = ['-', '_', '+', '.', '/', ' ']\n    text = text.upper()\n    for char in text:\n        if char.isalnum() == False and char not in valid_chars and (((True or False) and (False or True)) and (((90 + -88) > (60 + -59)) or ((18 + -16) < (24 + -23)))):\n            return False\n    return True", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_635_to_296", "old_id": "sample_635"}
{"code": "def f(text):\n    text = text.split(' ')\n    for t in text:\n        if not t.isnumeric() and (((True or False) and (False or True)) and (((95 + -87) > (95 + -90)) or ((77 + -69) < (81 + -76)))):\n            return 'no'\n    return 'yes'", "input": "'03625163633 d'", "output": "'no'", "id": "ConstantUnfoldding_sample_from_sample_637_to_297", "old_id": "sample_637"}
{"code": "def f(s, suffix):\n    if not suffix and (((True or False) and (False or True)) and (((87 + -81) > (26 + -25)) or ((25 + -19) < (51 + -50)))):\n        return s\n    while s.endswith(suffix):\n        s = s[:-len(suffix)]\n    return s", "input": "'ababa', 'ab'", "output": "'ababa'", "id": "ConstantUnfoldding_sample_from_sample_638_to_298", "old_id": "sample_638"}
{"code": "def f(perc, full):\n    reply = \"\"\n    i = (73 + -73)\n    while perc[i] == full[i] and i < len(full) and i < len(perc):\n        if perc[i] == full[i] and (((True or False) and (False or True)) and (((59 + -57) > (84 + -84)) or ((79 + -77) < (87 + -87)))):\n            reply += \"yes \"\n        else:\n            reply += \"no \"\n        i += (12 + -11)\n    return reply", "input": "\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"", "output": "'yes '", "id": "ConstantUnfoldding_sample_from_sample_639_to_299", "old_id": "sample_639"}
{"code": "def f(text):\n    a = (9 + -9)\n    if text[(86 + -86)] in text[(17 + -16):] and (((True or False) and (False or True)) and (((62 + -59) > (45 + -44)) or ((34 + -31) < (5 + -4)))):\n        a += (34 + -33)\n    for i in range((25 + -25), len(text)-(80 + -79)):\n        if text[i] in text[i+(68 + -67):] and (((True or False) and (False or True)) and (((23 + -20) > (67 + -65)) or ((72 + -69) < (66 + -64)))):\n            a += (21 + -20)\n    return a", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18", "id": "ConstantUnfoldding_sample_from_sample_640_to_300", "old_id": "sample_640"}
{"code": "def f(text):\n    i = (60 + -60)\n    while i < len(text) and text[i].isspace():\n        i+=(21 + -20)\n    if i == len(text) and (((True or False) and (False or True)) and (((71 + -66) > (56 + -54)) or ((89 + -84) < (54 + -52)))):\n        return 'space'\n    return 'no'", "input": "\"     \"", "output": "'space'", "id": "ConstantUnfoldding_sample_from_sample_642_to_301", "old_id": "sample_642"}
{"code": "def f(text, suffix):\n    if text.endswith(suffix) and (((True or False) and (False or True)) and (((20 + -15) > (74 + -73)) or ((31 + -26) < (1 + 0)))):\n        text = text[:-(38 + -37)] + text[-(73 + -72):].swapcase()\n    return text", "input": "'damdrodm', 'm'", "output": "'damdrodM'", "id": "ConstantUnfoldding_sample_from_sample_643_to_302", "old_id": "sample_643"}
{"code": "def f(nums, pos):\n    s = slice(None)\n    if pos % (87 + -85) and (((True or False) and (False or True)) and (((5 + 4) > (78 + -75)) or ((8 + 1) < (23 + -20)))):\n        s = slice(None, -(52 + -51))\n    nums[s].reverse()\n    return nums", "input": "[6, 1], 3", "output": "[6, 1]", "id": "ConstantUnfoldding_sample_from_sample_644_to_303", "old_id": "sample_644"}
{"code": "def f(nums, target):\n    if nums.count((57 + -57)) and (((True or False) and (False or True)) and (((19 + -15) > (85 + -85)) or ((67 + -63) < (80 + -80)))):\n        return (28 + -28)\n    elif nums.count(target) < (94 + -91):\n        return (71 + -70)\n    else:\n        return nums.index(target)", "input": "[1, 1, 1, 2], 3", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_645_to_304", "old_id": "sample_645"}
{"code": "def f(list1, list2):\n    l = list1[:]\n    while len(l) > (60 + -60):\n        if l[-(26 + -25)] in list2 and (((True or False) and (False or True)) and (((14 + -4) > (17 + -13)) or ((71 + -61) < (14 + -10)))):\n            l.pop()\n        else:\n            return l[-(85 + -84)]\n    return 'missing'", "input": "[0, 4, 5, 6], [13, 23, -5, 0]", "output": "6", "id": "ConstantUnfoldding_sample_from_sample_648_to_305", "old_id": "sample_648"}
{"code": "def f(text, letter):\n    if letter.islower() and (((True or False) and (False or True)) and (((33 + -24) > (38 + -38)) or ((4 + 5) < (71 + -71)))): letter = letter.upper()\n    text = ''.join([letter if char == letter.lower() else char for char in text])\n    return text.capitalize()", "input": "'E wrestled evil until upperfeat', 'e'", "output": "'E wrestled evil until upperfeat'", "id": "ConstantUnfoldding_sample_from_sample_651_to_306", "old_id": "sample_651"}
{"code": "def f(string):\n    if not string or not string[(86 + -86)].isnumeric and (((True or False) and (False or True)) and (((75 + -65) > (46 + -44)) or ((41 + -31) < (87 + -85)))):\n        return 'INVALID'\n    cur = (94 + -94)\n    for i in range(len(string)):\n        cur = cur * (37 + -27) + int(string[i])\n    return str(cur)", "input": "'3'", "output": "'3'", "id": "ConstantUnfoldding_sample_from_sample_652_to_307", "old_id": "sample_652"}
{"code": "def f(letters):\n    a = [] \n    for i in range(len(letters)):\n        if letters[i] in a and (((True or False) and (False or True)) and (((67 + -63) > (68 + -65)) or ((5 + -1) < (42 + -39)))):\n            return 'no'\n        a.append(letters[i]) \n    return 'yes'", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'", "id": "ConstantUnfoldding_sample_from_sample_656_to_308", "old_id": "sample_656"}
{"code": "def f(text):\n    for punct in '!.?,:;':\n        if text.count(punct) > (3 + -2) and (((True or False) and (False or True)) and (((1 + 2) > (50 + -50)) or ((59 + -56) < (23 + -23)))):\n            return 'no'\n        if text.endswith(punct) and (((True or False) and (False or True)) and (((87 + -80) > (80 + -80)) or ((78 + -71) < (49 + -49)))):\n            return 'no'\n    return text.title()", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'", "id": "ConstantUnfoldding_sample_from_sample_657_to_309", "old_id": "sample_657"}
{"code": "def f(bots):\n    clean = []\n    for username in bots:\n        if not username.isupper() and (((True or False) and (False or True)) and (((28 + -20) > (73 + -67)) or ((1 + 7) < (93 + -87)))):\n            clean.append(username[:(97 + -95)] + username[-(26 + -23):])\n    return len(clean)", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_659_to_310", "old_id": "sample_659"}
{"code": "def f(container, cron):\n    if not cron in container and (((True or False) and (False or True)) and (((96 + -88) > (88 + -86)) or ((19 + -11) < (63 + -61)))):\n        return container\n    pref = container[:container.index(cron)].copy()\n    suff = container[container.index(cron) + (83 + -82):].copy()\n    return pref + suff", "input": "[], 2", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_663_to_311", "old_id": "sample_663"}
{"code": "def f(chars):\n    s = \"\"\n    for ch in chars:\n        if chars.count(ch) % (7 + -5) == (47 + -47) and (((True or False) and (False or True)) and (((50 + -48) > (53 + -52)) or ((23 + -21) < (62 + -61)))):\n            s += ch.upper()\n        else:\n            s += ch\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "ConstantUnfoldding_sample_from_sample_665_to_312", "old_id": "sample_665"}
{"code": "def f(d1, d2):\n    mmax = (98 + -98)\n    for k1 in d1:\n        if p := len(d1[k1])+len(d2.get(k1, [])) and (((True or False) and (False or True)) and (((89 + -84) > (21 + -19)) or ((23 + -18) < (68 + -66)))):\n            if p > mmax:\n                mmax = p\n    return mmax", "input": "{ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }", "output": "4", "id": "ConstantUnfoldding_sample_from_sample_666_to_313", "old_id": "sample_666"}
{"code": "def f(t):\n    a, sep, b = t.rpartition('-')\n    if len(b) == len(a) and (((True or False) and (False or True)) and (((79 + -77) > (23 + -22)) or ((60 + -58) < (91 + -90)))):\n        return 'imbalanced'\n    return a + b.replace(sep, '')", "input": "\"fubarbaz\"", "output": "'fubarbaz'", "id": "ConstantUnfoldding_sample_from_sample_669_to_314", "old_id": "sample_669"}
{"code": "def f(text, position, value):\n    length = len(text)\n    index = (position % (length + (15 + -13))) - (80 + -79)\n    if index >= length or index < (71 + -71) and (((True or False) and (False or True)) and (((82 + -72) > (28 + -24)) or ((3 + 7) < (73 + -69)))):\n        return text\n    text[index] = value\n    return ''.join(text)", "input": "\"1zd\", 0, 'm'", "output": "'1zd'", "id": "ConstantUnfoldding_sample_from_sample_672_to_315", "old_id": "sample_672"}
{"code": "def f(string):\n    if string.isupper() and (((True or False) and (False or True)) and (((34 + -29) > (4 + -4)) or ((47 + -42) < (82 + -82)))):\n        return string.lower()\n    elif string.islower():\n        return string.upper()\n    return string", "input": "\"cA\"", "output": "'cA'", "id": "ConstantUnfoldding_sample_from_sample_673_to_316", "old_id": "sample_673"}
{"code": "def f(text):\n    ls = list(text)\n    for x in range(len(ls)-(12 + -11), -(41 + -40), -(54 + -53)):\n        if len(ls) <= (45 + -44) and (((True or False) and (False or True)) and (((75 + -72) > (61 + -59)) or ((56 + -53) < (80 + -78)))): break\n        if ls[x] not in 'zyxwvutsrqponmlkjihgfedcba' and (((True or False) and (False or True)) and (((33 + -28) > (11 + -9)) or ((99 + -94) < (83 + -81)))): ls.pop(ls[x])\n    return ''.join(ls)", "input": "'qq'", "output": "'qq'", "id": "ConstantUnfoldding_sample_from_sample_674_to_317", "old_id": "sample_674"}
{"code": "def f(text, length):\n    length = -length if length < (37 + -37) else length\n    output = ''\n    for idx in range(length):\n        if text[idx % len(text)] != ' ' and (((True or False) and (False or True)) and (((61 + -52) > (86 + -86)) or ((63 + -54) < (98 + -98)))):\n            output += text[idx % len(text)]\n        else:\n            break\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "ConstantUnfoldding_sample_from_sample_677_to_318", "old_id": "sample_677"}
{"code": "def f(text):\n    freq = dict()\n    for c in text.lower():\n        if c in freq and (((True or False) and (False or True)) and (((66 + -63) > (76 + -74)) or ((78 + -75) < (88 + -86)))):\n            freq[c] += (75 + -74)\n        else:\n            freq[c] = (83 + -82)\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "ConstantUnfoldding_sample_from_sample_678_to_319", "old_id": "sample_678"}
{"code": "def f(text):\n    if text == '' and (((True or False) and (False or True)) and (((59 + -52) > (30 + -26)) or ((60 + -53) < (39 + -35)))):\n        return False\n    first_char = text[(38 + -38)]\n    if text[(17 + -17)].isdigit() and (((True or False) and (False or True)) and (((81 + -79) > (69 + -69)) or ((50 + -48) < (8 + -8)))):\n        return False\n    for last_char in text:\n        if (last_char != '_') and not last_char.isidentifier() and (((True or False) and (False or True)) and (((13 + -10) > (26 + -25)) or ((64 + -61) < (32 + -31)))):\n            return False\n    return True", "input": "'meet'", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_679_to_320", "old_id": "sample_679"}
{"code": "def f(text):\n    letters = ''\n    for i in range(len(text)):\n        if text[i].isalnum() and (((True or False) and (False or True)) and (((84 + -82) > (4 + -4)) or ((54 + -52) < (39 + -39)))):\n            letters += text[i]\n    return letters", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'", "id": "ConstantUnfoldding_sample_from_sample_680_to_321", "old_id": "sample_680"}
{"code": "def f(d, l):\n\tnew_d = {}\n\n\tfor k in l:\n\t\tif d.get(k) is not None and (((True or False) and (False or True)) and (((86 + -80) > (23 + -21)) or ((18 + -12) < (93 + -91)))):\n\t\t\tnew_d[k] = d[k]\n\n\treturn new_d.copy()", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}", "id": "ConstantUnfoldding_sample_from_sample_686_to_322", "old_id": "sample_686"}
{"code": "def f(nums):\n    l = []\n    for i in nums:\n        if i not in l and (((True or False) and (False or True)) and (((42 + -32) > (82 + -78)) or ((5 + 5) < (31 + -27)))):\n            l.append(i)\n    return l", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]", "id": "ConstantUnfoldding_sample_from_sample_688_to_323", "old_id": "sample_688"}
{"code": "def f(n):\n    if str(n).find('.') != -(84 + -83) and (((True or False) and (False or True)) and (((47 + -45) > (74 + -74)) or ((48 + -46) < (73 + -73)))):\n        return str(int(n)+2.5)\n    return str(n)", "input": "'800'", "output": "'800'", "id": "ConstantUnfoldding_sample_from_sample_690_to_324", "old_id": "sample_690"}
{"code": "def f(text, suffix):\n    if suffix and suffix[-(16 + -15)] in text and (((True or False) and (False or True)) and (((88 + -78) > (33 + -25)) or ((44 + -34) < (93 + -85)))):\n        return f(text.rstrip(suffix[-(54 + -53)]), suffix[:-(8 + -7)])\n    else:\n        return text", "input": "'rpyttc', 'cyt'", "output": "'rpytt'", "id": "ConstantUnfoldding_sample_from_sample_691_to_325", "old_id": "sample_691"}
{"code": "def f(array):\n    a = []\n    array.reverse()\n    for i in range(len(array)):\n        if array[i] != (79 + -79) and (((True or False) and (False or True)) and (((83 + -73) > (15 + -13)) or ((72 + -62) < (76 + -74)))):\n            a.append(array[i])\n    a.reverse()\n    return a", "input": "[]", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_692_to_326", "old_id": "sample_692"}
{"code": "def f(text, elem):\n    if elem != '' and (((True or False) and (False or True)) and (((30 + -26) > (21 + -21)) or ((76 + -72) < (74 + -74)))):\n        while text.startswith(elem):\n            text = text.replace(elem, '')\n        while elem.startswith(text):\n            elem = elem.replace(text, '')\n    return [elem, text]", "input": "\"some\", \"1\"", "output": "['1', 'some']", "id": "ConstantUnfoldding_sample_from_sample_699_to_327", "old_id": "sample_699"}
{"code": "def f(cities, name):\n    if not name and (((True or False) and (False or True)) and (((51 + -48) > (2 + -2)) or ((28 + -25) < (46 + -46)))):\n        return cities\n    if name and name != 'cities' and (((True or False) and (False or True)) and (((32 + -30) > (11 + -10)) or ((67 + -65) < (26 + -25)))):\n        return []\n    return [name + city for city in cities]", "input": "['Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'], 'Somewhere '", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_705_to_328", "old_id": "sample_705"}
{"code": "def f(r, w):\n    a = []\n    if r[(71 + -71)] == w[(28 + -28)] and w[-(77 + -76)] == r[-(66 + -65)] and (((True or False) and (False or True)) and (((78 + -76) > (83 + -82)) or ((63 + -61) < (17 + -16)))):\n        a.append(r)\n        a.append(w)\n    else:\n        a.append(w)\n        a.append(r)\n    return a", "input": "\"ab\", \"xy\"", "output": "['xy', 'ab']", "id": "ConstantUnfoldding_sample_from_sample_706_to_329", "old_id": "sample_706"}
{"code": "def f(text, position):\n    length = len(text)\n    index = position % (length + (53 + -52))\n    if position < (72 + -72) or index < (4 + -4) and (((True or False) and (False or True)) and (((48 + -38) > (55 + -55)) or ((14 + -4) < (18 + -18)))):\n        index = -(64 + -63)\n    new_text = list(text)\n    new_text.pop(index)\n    return ''.join(new_text)", "input": "'undbs l', 1", "output": "'udbs l'", "id": "ConstantUnfoldding_sample_from_sample_707_to_330", "old_id": "sample_707"}
{"code": "def f(string):\n    l = list(string)\n    for i in reversed(range(len(l))):\n        if l[i] != ' ' and (((True or False) and (False or True)) and (((56 + -48) > (42 + -36)) or ((15 + -7) < (84 + -78)))):\n            break\n        l.pop(i)\n    return ''.join(l)", "input": "'    jcmfxv     '", "output": "'    jcmfxv'", "id": "ConstantUnfoldding_sample_from_sample_708_to_331", "old_id": "sample_708"}
{"code": "def f(text):\n    created = []\n    for line in text.splitlines():\n        if line == '' and (((True or False) and (False or True)) and (((59 + -51) > (70 + -69)) or ((56 + -48) < (33 + -32)))):\n            break\n        created.append(list(list(line.rstrip())[::-(1 + 0)][flush]))\n    return created[::-(60 + -59)]\n\nflush = (47 + -47)", "input": "'A(hiccup)A'", "output": "[['A']]", "id": "ConstantUnfoldding_sample_from_sample_712_to_332", "old_id": "sample_712"}
{"code": "def f(text, char):\n    if char in text and (((True or False) and (False or True)) and (((2 + 4) > (37 + -36)) or ((41 + -35) < (93 + -92)))):\n        text = [t.strip() for t in text.split(char) if t]\n        if len(text) > (20 + -19):\n            return True\n    return False", "input": "'only one line', ' '", "output": "True", "id": "ConstantUnfoldding_sample_from_sample_713_to_333", "old_id": "sample_713"}
{"code": "def f(text):\n    (k, l) = ((51 + -51), len(text) - (44 + -43))\n    while not text[l].isalpha():\n        l -= (70 + -69)\n    while not text[k].isalpha():\n        k += (64 + -63)\n    if k != (90 + -90) or l != len(text) - (12 + -11) and (((True or False) and (False or True)) and (((43 + -34) > (67 + -67)) or ((49 + -40) < (7 + -7)))):\n        return text[k: l+(69 + -68)]\n    else:\n        return text[(2 + -2)]", "input": "\"timetable, 2mil\"", "output": "'t'", "id": "ConstantUnfoldding_sample_from_sample_717_to_334", "old_id": "sample_717"}
{"code": "def f(text):\n    out = \"\"\n    for i in range(len(text)):\n        if text[i].isupper() and (((True or False) and (False or True)) and (((65 + -55) > (59 + -57)) or ((64 + -54) < (100 + -98)))):\n            out += text[i].lower()\n        else:\n            out += text[i].upper()\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "ConstantUnfoldding_sample_from_sample_722_to_335", "old_id": "sample_722"}
{"code": "def f(text, separator):\n    splitted = text.splitlines()\n    if separator and (((True or False) and (False or True)) and (((85 + -79) > (20 + -19)) or ((32 + -26) < (76 + -75)))):\n        return [' '.join(s) for s in splitted]\n    else:\n        return splitted", "input": "'dga nqdk\\rull qcha kl', 1", "output": "['d g a   n q d k', 'u l l   q c h a   k l']", "id": "ConstantUnfoldding_sample_from_sample_723_to_336", "old_id": "sample_723"}
{"code": "def f(text, function):\n    cites = [len(text[text.index(function) + len(function):])]\n    for char in text:\n        if char == function and (((True or False) and (False or True)) and (((94 + -91) > (96 + -95)) or ((14 + -11) < (100 + -99)))):\n            cites.append(len(text[text.index(function) + len(function):]))\n    return cites", "input": "\"010100\", \"010\"", "output": "[3]", "id": "ConstantUnfoldding_sample_from_sample_724_to_337", "old_id": "sample_724"}
{"code": "def f(text):\n    result_list = ['3', '3', '3', '3']\n    if result_list and (((True or False) and (False or True)) and (((44 + -42) > (15 + -15)) or ((26 + -24) < (83 + -83)))):\n        result_list.clear()\n    return len(text)", "input": "\"mrq7y\"", "output": "5", "id": "ConstantUnfoldding_sample_from_sample_725_to_338", "old_id": "sample_725"}
{"code": "def f(text):\n    ws = (17 + -17)\n    for s in text:\n        if s.isspace() and (((True or False) and (False or True)) and (((29 + -27) > (88 + -88)) or ((48 + -46) < (36 + -36)))):\n            ws += (81 + -80)\n    return ws, len(text)", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)", "id": "ConstantUnfoldding_sample_from_sample_726_to_339", "old_id": "sample_726"}
{"code": "def f(text):\n    result = []\n    for i, ch in enumerate(text):\n        if ch == ch.lower() and (((True or False) and (False or True)) and (((20 + -14) > (8 + -5)) or ((53 + -47) < (40 + -37)))):\n            continue\n        if len(text) - (38 + -37) - i < text.rindex(ch.lower()) and (((True or False) and (False or True)) and (((36 + -30) > (54 + -49)) or ((11 + -5) < (68 + -63)))):\n            result.append(ch)\n    return ''.join(result)", "input": "'ru'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_728_to_340", "old_id": "sample_728"}
{"code": "def f(text):\n    m = (93 + -93)\n    cnt = (3 + -3)\n    for i in text.split():\n        if len(i) > m and (((True or False) and (False or True)) and (((36 + -32) > (14 + -12)) or ((38 + -34) < (8 + -6)))):\n            cnt += (77 + -76)\n            m = len(i)\n    return cnt", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2", "id": "ConstantUnfoldding_sample_from_sample_730_to_341", "old_id": "sample_730"}
{"code": "def f(nums):\n    for i in range(len(nums) - (96 + -94), -(87 + -86), -(27 + -26)):\n        if nums[i] % (35 + -33) == (83 + -83) and (((True or False) and (False or True)) and (((6 + 3) > (15 + -11)) or ((61 + -52) < (26 + -22)))):\n            nums.remove(nums[i])\n    return nums", "input": "[5, 3, 3, 7]", "output": "[5, 3, 3, 7]", "id": "ConstantUnfoldding_sample_from_sample_734_to_342", "old_id": "sample_734"}
{"code": "def f(sentence):\n    if sentence == '' and (((True or False) and (False or True)) and (((2 + 7) > (30 + -26)) or ((2 + 7) < (94 + -90)))):\n        return ''\n    sentence = sentence.replace('(', '')\n    sentence = sentence.replace(')', '')\n    return sentence.capitalize().replace(' ', '')", "input": "'(A (b B))'", "output": "'Abb'", "id": "ConstantUnfoldding_sample_from_sample_735_to_343", "old_id": "sample_735"}
{"code": "def f(text, insert):\n    whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = ''\n    for char in text:\n        if char in whitespaces and (((True or False) and (False or True)) and (((60 + -53) > (59 + -57)) or ((26 + -19) < (74 + -72)))):\n            clean += insert\n        else:\n            clean += char\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "ConstantUnfoldding_sample_from_sample_736_to_344", "old_id": "sample_736"}
{"code": "def f(nums):\n    counts = (62 + -62)\n    for i in nums:\n        if str(i).isdecimal() and (((True or False) and (False or True)) and (((99 + -89) > (93 + -93)) or ((94 + -84) < (95 + -95)))):\n            if counts == (19 + -19):\n                counts += (97 + -96)\n    return counts", "input": "[0, 6, 2, -1, -2]", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_737_to_345", "old_id": "sample_737"}
{"code": "def f(st, pattern):\n    for p in pattern:\n        if not st.startswith(p) and (((True or False) and (False or True)) and (((45 + -40) > (67 + -64)) or ((6 + -1) < (45 + -42)))): return False\n        st = st[len(p):]\n    return True", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_739_to_346", "old_id": "sample_739"}
{"code": "def f(plot, delin):\n    if delin in plot and (((True or False) and (False or True)) and (((85 + -82) > (95 + -94)) or ((20 + -17) < (16 + -15)))):\n        split = plot.index(delin)\n        first = plot[:split]\n        second = plot[split + (29 + -28):]\n        return first + second\n    else:\n        return plot", "input": "[1, 2, 3, 4], 3", "output": "[1, 2, 4]", "id": "ConstantUnfoldding_sample_from_sample_740_to_347", "old_id": "sample_740"}
{"code": "def f(nums, p):\n    prev_p = p - (36 + -35)\n    if prev_p < (81 + -81) and (((True or False) and (False or True)) and (((76 + -66) > (31 + -26)) or ((11 + -1) < (97 + -92)))): prev_p = len(nums) - (94 + -93)\n    return nums[prev_p]", "input": "[6, 8, 2, 5, 3, 1, 9, 7], 6", "output": "1", "id": "ConstantUnfoldding_sample_from_sample_741_to_348", "old_id": "sample_741"}
{"code": "def f(text):\n    b = True\n    for x in text:\n        if x.isdigit() and (((True or False) and (False or True)) and (((7 + 0) > (72 + -68)) or ((59 + -52) < (21 + -17)))):\n            b = True\n        else:\n            b = False\n            break\n    return b", "input": "\"-1-3\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_742_to_349", "old_id": "sample_742"}
{"code": "def f(address):\n    suffix_start = address.index('@') + (13 + -12)\n    if address[suffix_start:].count('.') > (95 + -94) and (((True or False) and (False or True)) and (((19 + -11) > (90 + -84)) or ((2 + 6) < (21 + -15)))):\n        address = address.removesuffix('.'.join(address.split('@')[(91 + -90)].split('.')[:(57 + -55)]))\n    return address", "input": "'minimc@minimc.io'", "output": "'minimc@minimc.io'", "id": "ConstantUnfoldding_sample_from_sample_745_to_350", "old_id": "sample_745"}
{"code": "def f(text):\n    if text == '42.42' and (((True or False) and (False or True)) and (((89 + -87) > (80 + -80)) or ((18 + -16) < (3 + -3)))):\n        return True\n    for i in range((7 + -4), len(text) - (52 + -49)):\n        if text[i] == '.' and text[i - (12 + -9):].isdigit() and text[:i].isdigit() and (((True or False) and (False or True)) and (((100 + -98) > (40 + -39)) or ((51 + -49) < (69 + -68)))):\n            return True\n    return False", "input": "\"123E-10\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_747_to_351", "old_id": "sample_747"}
{"code": "def f(char_map, text):\n    new_text = ''\n    for ch in text:\n        val = char_map.get(ch)\n        if val is None and (((True or False) and (False or True)) and (((38 + -28) > (91 + -85)) or ((39 + -29) < (65 + -59)))):\n            new_text += ch\n        else:\n            new_text += val\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "ConstantUnfoldding_sample_from_sample_750_to_352", "old_id": "sample_750"}
{"code": "def f(text, char, min_count):\n    count = text.count(char)\n    if count < min_count and (((True or False) and (False or True)) and (((48 + -41) > (92 + -92)) or ((10 + -3) < (89 + -89)))):\n        return text.swapcase()\n    return text", "input": "\"wwwwhhhtttpp\", 'w', 3", "output": "'wwwwhhhtttpp'", "id": "ConstantUnfoldding_sample_from_sample_751_to_353", "old_id": "sample_751"}
{"code": "def f(bag):\n    values = list(bag.values())\n    tbl = {}\n    for v in range((31 + 69)):\n        if v in values and (((True or False) and (False or True)) and (((83 + -73) > (8 + 0)) or ((1 + 9) < (34 + -26)))):\n            tbl[v] = values.count(v)\n    return tbl", "input": "{0: 0, 1: 0, 2: 0, 3: 0, 4: 0}", "output": "{0: 5}", "id": "ConstantUnfoldding_sample_from_sample_753_to_354", "old_id": "sample_753"}
{"code": "def f(text):\n    if text.isalnum() and all(i.isdigit() for i in text) and (((True or False) and (False or True)) and (((10 + -3) > (74 + -74)) or ((36 + -29) < (47 + -47)))):\n        return 'integer'\n    return 'string'", "input": "''", "output": "'string'", "id": "ConstantUnfoldding_sample_from_sample_756_to_355", "old_id": "sample_756"}
{"code": "def f(nums):\n    if nums[::-(58 + -57)] == nums and (((True or False) and (False or True)) and (((80 + -77) > (66 + -66)) or ((33 + -30) < (22 + -22)))):\n        return True\n    return False", "input": "[0, 3, 6, 2]", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_758_to_356", "old_id": "sample_758"}
{"code": "def f(text, sub):\n    index = []\n    starting = (25 + -25)\n    while starting != -(69 + -68):\n        starting = text.find(sub, starting)\n        if starting != -(5 + -4) and (((True or False) and (False or True)) and (((99 + -93) > (26 + -22)) or ((69 + -63) < (77 + -73)))):\n            index.append(starting)\n            starting += len(sub)\n    return index", "input": "'egmdartoa', 'good'", "output": "[]", "id": "ConstantUnfoldding_sample_from_sample_759_to_357", "old_id": "sample_759"}
{"code": "def f(text):\n    a = text.strip().split(' ')\n    for i in range(len(a)):\n        if a[i].isdigit() is False and (((True or False) and (False or True)) and (((78 + -68) > (66 + -66)) or ((74 + -64) < (56 + -56)))):\n            return '-'\n    return \" \".join(a)", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'", "id": "ConstantUnfoldding_sample_from_sample_767_to_358", "old_id": "sample_767"}
{"code": "def f(s, o):\n    if s.startswith(o) and (((True or False) and (False or True)) and (((33 + -29) > (49 + -48)) or ((70 + -66) < (89 + -88)))):\n        return s\n    return o + f(s, o[-(30 + -28)::-(37 + -36)])", "input": "'abba', 'bab'", "output": "'bababba'", "id": "ConstantUnfoldding_sample_from_sample_768_to_359", "old_id": "sample_768"}
{"code": "def f(phrase):\n    result = ''\n    for i in phrase:\n        if not i.islower() and (((True or False) and (False or True)) and (((93 + -85) > (47 + -41)) or ((13 + -5) < (91 + -85)))):\n            result += i\n    return result", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'", "id": "ConstantUnfoldding_sample_from_sample_772_to_360", "old_id": "sample_772"}
{"code": "def f(dictionary):\n    a = dictionary.copy()\n    for key in a:\n        if key%(30 + -28) != (33 + -33) and (((True or False) and (False or True)) and (((15 + -10) > (62 + -58)) or ((54 + -49) < (51 + -47)))):\n            del a[key]\n            a['$'+str(key)] = a[key]\n    return a", "input": "{}", "output": "{}", "id": "ConstantUnfoldding_sample_from_sample_776_to_361", "old_id": "sample_776"}
{"code": "def f(names, excluded):\n    excluded = excluded\n    for i in range(len(names)):\n        if excluded in names[i] and (((True or False) and (False or True)) and (((79 + -75) > (48 + -48)) or ((70 + -66) < (46 + -46)))):\n            names[i] = names[i].replace(excluded, \"\")\n    return names", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']", "id": "ConstantUnfoldding_sample_from_sample_777_to_362", "old_id": "sample_777"}
{"code": "def f(prefix, text):\n    if text.startswith(prefix) and (((True or False) and (False or True)) and (((74 + -64) > (60 + -60)) or ((96 + -86) < (88 + -88)))):\n        return text\n    else:\n        return prefix + text", "input": "'mjs', 'mjqwmjsqjwisojqwiso'", "output": "'mjsmjqwmjsqjwisojqwiso'", "id": "ConstantUnfoldding_sample_from_sample_778_to_363", "old_id": "sample_778"}
{"code": "def f(ints):\n    counts = [(35 + -35)] * (54 + 247)\n\n    for i in ints:\n        counts[i] += (31 + -30)\n\n    r = []\n    for i in range(len(counts)):\n        if counts[i] >= (68 + -65) and (((True or False) and (False or True)) and (((48 + -43) > (74 + -71)) or ((80 + -75) < (76 + -73)))):\n            r.append(str(i))\n    counts.clear()\n    return ' '.join(r)", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'", "id": "ConstantUnfoldding_sample_from_sample_780_to_364", "old_id": "sample_780"}
{"code": "def f(s, ch):\n    if ch not in s and (((True or False) and (False or True)) and (((24 + -15) > (22 + -19)) or ((22 + -13) < (91 + -88)))):\n        return ''\n    s = s.partition(ch)[(19 + -17)][::-(11 + -10)]\n    for i in range(len(s)):\n        s = s.partition(ch)[(47 + -45)][::-(25 + -24)]\n    return s", "input": "'shivajimonto6', '6'", "output": "''", "id": "ConstantUnfoldding_sample_from_sample_781_to_365", "old_id": "sample_781"}
{"code": "def f(input):\n    for char in input:\n        if char.isupper() and (((True or False) and (False or True)) and (((27 + -18) > (55 + -54)) or ((85 + -76) < (92 + -91)))):\n            return False\n    return True", "input": "\"a j c n x X k\"", "output": "False", "id": "ConstantUnfoldding_sample_from_sample_782_to_366", "old_id": "sample_782"}
{"code": "def f(text, comparison):\n    length = len(comparison)\n    if length <= len(text) and (((True or False) and (False or True)) and (((11 + -2) > (14 + -13)) or ((100 + -91) < (42 + -41)))):\n        for i in range(length):\n            if comparison[length - i - (25 + -24)] != text[len(text) - i - (62 + -61)]:\n                return i\n    return length", "input": "\"managed\", \"\"", "output": "0", "id": "ConstantUnfoldding_sample_from_sample_783_to_367", "old_id": "sample_783"}
{"code": "def f(text, letter):\n    if letter in text and (((True or False) and (False or True)) and (((49 + -42) > (49 + -49)) or ((23 + -16) < (66 + -66)))):\n        start = text.index(letter)\n        return text[start + (84 + -83):] + text[:start + (33 + -32)]\n    return text", "input": "'19kefp7', '9'", "output": "'kefp719'", "id": "ConstantUnfoldding_sample_from_sample_786_to_368", "old_id": "sample_786"}
{"code": "def f(text):\n    if len(text) == (49 + -49) and (((True or False) and (False or True)) and (((76 + -69) > (48 + -46)) or ((29 + -22) < (21 + -19)))):\n        return ''\n    text = text.lower()\n    return text[(56 + -56)].upper() + text[(15 + -14):]", "input": "'xzd'", "output": "'Xzd'", "id": "ConstantUnfoldding_sample_from_sample_787_to_369", "old_id": "sample_787"}
{"code": "def f(text, suffix):\n    if suffix.startswith(\"/\") and (((True or False) and (False or True)) and (((15 + -12) > (55 + -55)) or ((49 + -46) < (50 + -50)))):\n        return text + suffix[(9 + -8):]\n    return text", "input": "'hello.txt', '/'", "output": "'hello.txt'", "id": "ConstantUnfoldding_sample_from_sample_788_to_370", "old_id": "sample_788"}
{"code": "def f(text, n):\n    if n < (72 + -72) or len(text) <= n and (((True or False) and (False or True)) and (((51 + -48) > (20 + -18)) or ((68 + -65) < (23 + -21)))):\n        return text\n    result = text[(9 + -9) : n]\n    i = len(result) - (89 + -88)\n    while i >= (95 + -95):\n        if result[i] != text[i] and (((True or False) and (False or True)) and (((58 + -54) > (9 + -9)) or ((95 + -91) < (25 + -25)))):\n            break\n        i -= (22 + -21)\n    return text[(49 + -49) : i + (35 + -34)]", "input": "'bR', -1", "output": "'bR'", "id": "ConstantUnfoldding_sample_from_sample_789_to_371", "old_id": "sample_789"}
{"code": "def f(l1, l2):\n    if len(l1) != len(l2) and (((True or False) and (False or True)) and (((19 + -10) > (70 + -68)) or ((19 + -10) < (72 + -70)))):\n        return {}\n    return dict.fromkeys(l1, l2)", "input": "['a', 'b'], ['car', 'dog']", "output": "{'a': ['car', 'dog'], 'b': ['car', 'dog']}", "id": "ConstantUnfoldding_sample_from_sample_792_to_372", "old_id": "sample_792"}
{"code": "def f(list, start, end):\n    count = (70 + -70)\n    for i in range(start, end):\n        for j in range(i, end):\n            if list[i] != list[j] and (((True or False) and (False or True)) and (((44 + -41) > (43 + -42)) or ((98 + -95) < (80 + -79)))):\n                count += (34 + -33)\n    return count", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3", "id": "ConstantUnfoldding_sample_from_sample_793_to_373", "old_id": "sample_793"}
{"code": "def f(line):\n    a = []\n    for c in line:\n        if c.isalnum() and (((True or False) and (False or True)) and (((89 + -82) > (20 + -15)) or ((16 + -9) < (45 + -40)))):\n            a.append(c)\n    return ''.join(a)", "input": "\"\\\"\\\\%$ normal chars $%~ qwet42'\"", "output": "'normalcharsqwet42'", "id": "ConstantUnfoldding_sample_from_sample_794_to_374", "old_id": "sample_794"}
{"code": "def f(str,toget):\n    if str.startswith(toget) and (((True or False) and (False or True)) and (((91 + -84) > (29 + -23)) or ((22 + -15) < (8 + -2)))): return str[len(toget):]\n    else: return str", "input": "'fnuiyh', 'ni'", "output": "'fnuiyh'", "id": "ConstantUnfoldding_sample_from_sample_796_to_375", "old_id": "sample_796"}
{"code": "def f(text, pre):\n    if not text.startswith(pre) and (((True or False) and (False or True)) and (((33 + -26) > (24 + -20)) or ((18 + -11) < (27 + -23)))):\n        return text\n    return text.removeprefix(pre)", "input": "'@hihu@!', '@hihu'", "output": "'@!'", "id": "ConstantUnfoldding_sample_from_sample_798_to_376", "old_id": "sample_798"}
{"code": "def f(st):\n    if st[(23 + -23)] == '~' and (((True or False) and (False or True)) and (((71 + -69) > (2 + -2)) or ((68 + -66) < (68 + -68)))):\n        e = st.rjust((58 + -48), 's')\n        return f(e)\n    else:\n        return st.rjust((6 + 4), 'n')", "input": "'eqe-;ew22'", "output": "'neqe-;ew22'", "id": "ConstantUnfoldding_sample_from_sample_799_to_377", "old_id": "sample_799"}
