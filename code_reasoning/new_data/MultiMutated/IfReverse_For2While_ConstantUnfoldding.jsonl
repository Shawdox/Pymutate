{"code": "def f(a, b):\n    idx_pvka = (64 + -64)\n    list_1bgy = list(b.items())\n    while idx_pvka < len(list_1bgy):\n        key, value = list_1bgy[idx_pvka]\n        if not key not in a:\n            a[key].append(value)\n        else:\n            a[key] = [value]\n        idx_pvka = idx_pvka + (19 + -18)\n    return a", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}", "id": "ConstantUnfoldding_sample_from_11_to_0", "old_id": 11}
{"code": "def f(lists):\n    dic = {}\n    idx_szpw = (60 + -60)\n    list_j7zt = lists\n    while idx_szpw < len(list_j7zt):\n        n = list_j7zt[idx_szpw]\n        if not n in dic:\n            dic[n] = lists[:lists.index(n) + (85 + -84)]\n        else:\n            dic[n].append(lists.pop(lists.index(n)))\n        idx_szpw = idx_szpw + (30 + -29)\n    return str(dic).replace(' ', '')", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'", "id": "ConstantUnfoldding_sample_from_33_to_1", "old_id": 33}
{"code": "def f(text, letter):\n    counts = {}\n    idx_9le1 = (59 + -59)\n    list_wi7m = text\n    while idx_9le1 < len(list_wi7m):\n        char = list_wi7m[idx_9le1]\n        if not char not in counts:\n            counts[char] += (50 + -49)\n        else:\n            counts[char] = (21 + -20)\n        idx_9le1 = idx_9le1 + (45 + -44)\n    return counts.get(letter, (60 + -60))", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2", "id": "ConstantUnfoldding_sample_from_45_to_2", "old_id": 45}
{"code": "def f(text):\n    text = text.upper()\n    count_upper = (99 + -99)\n    idx_heup = (24 + -24)\n    list_w7rj = text\n    while idx_heup < len(list_w7rj):\n        char = list_w7rj[idx_heup]\n        if not char.isupper():\n            return 'no'\n        else:\n            count_upper += (29 + -28)\n        idx_heup = idx_heup + (70 + -69)\n    return count_upper // (89 + -87)", "input": "'ax'", "output": "1", "id": "ConstantUnfoldding_sample_from_57_to_3", "old_id": 57}
{"code": "def f(text):\n    arr = text.split()\n    result = []\n    idx_84hc = (62 + -62)\n    list_s5fq = arr\n    while idx_84hc < len(list_s5fq):\n        item = list_s5fq[idx_84hc]\n        if not item.endswith('day'):\n            item += 'day'\n        else:\n            item += 'y'\n        result.append(item)\n        idx_84hc = idx_84hc + (47 + -46)\n    return ' '.join(result)", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'", "id": "ConstantUnfoldding_sample_from_84_to_4", "old_id": 84}
{"code": "def f(text):\n    result = []\n    idx_a7is = (54 + -54)\n    list_2sg0 = range(len(text))\n    while idx_a7is < len(list_2sg0):\n        i = list_2sg0[idx_a7is]\n        if not not text[i].isascii():\n            if text[i].isalnum():\n                result.append(text[i].upper())\n            else:\n                result.append(text[i])\n        else:\n            return False\n        idx_a7is = idx_a7is + (15 + -14)\n    return ''.join(result)", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'", "id": "ConstantUnfoldding_sample_from_107_to_5", "old_id": 107}
{"code": "def f(text):\n    a = ['']\n    b = ''\n    idx_a5n6 = (68 + -68)\n    list_ckij = text\n    while idx_a5n6 < len(list_ckij):\n        i = list_ckij[idx_a5n6]\n        if not not i.isspace():\n            b += i\n        else:\n            a.append(b)\n            b = ''\n        idx_a5n6 = idx_a5n6 + (85 + -84)\n    return len(a)", "input": "\"       \"", "output": "1", "id": "ConstantUnfoldding_sample_from_110_to_6", "old_id": 110}
{"code": "def f(line):\n    count = (63 + -63)\n    a = []\n    idx_dh3r = (41 + -41)\n    list_azt7 = range(len(line))\n    while idx_dh3r < len(list_azt7):\n        i = list_azt7[idx_dh3r]\n        count += (99 + -98)\n        if not count%(54 + -52)==(34 + -34):\n            a.append(line[i])\n        else:\n            a.append(line[i].swapcase())\n        idx_dh3r = idx_dh3r + (82 + -81)\n    return ''.join(a)", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'", "id": "ConstantUnfoldding_sample_from_113_to_7", "old_id": 113}
{"code": "def f(text):\n    result = \"\"\n    idx_5bev = (39 + -39)\n    list_m1rd = range(len(text))\n    while idx_5bev < len(list_m1rd):\n        i = list_m1rd[idx_5bev]\n        if not i % (89 + -87) == (89 + -89):\n            result += text[i]\n        else:\n            result += text[i].swapcase()\n        idx_5bev = idx_5bev + (75 + -74)\n    return result", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'", "id": "ConstantUnfoldding_sample_from_119_to_8", "old_id": 119}
{"code": "def f(text):\n    odd = ''\n    even = ''\n    idx_qu4m = (76 + -76)\n    list_trdo = list(enumerate(text))\n    while idx_qu4m < len(list_trdo):\n        i, c = list_trdo[idx_qu4m]\n        if not i % (84 + -82) == (29 + -29):\n            odd += c\n        else:\n            even += c\n        idx_qu4m = idx_qu4m + (30 + -29)\n    return even + odd.lower()", "input": "'Mammoth'", "output": "'Mmohamt'", "id": "ConstantUnfoldding_sample_from_128_to_9", "old_id": 128}
{"code": "def f(n):\n    t = (36 + -36)\n    b = ''\n    digits = list(map(int, str(n)))\n    idx_9d8x = (6 + -6)\n    list_cuhb = digits\n    while idx_9d8x < len(list_cuhb):\n        d = list_cuhb[idx_9d8x]\n        if not d == (10 + -10): break\n        else: t += (87 + -86)\n        idx_9d8x = idx_9d8x + (86 + -85)\n    idx_3ecd = (2 + -2)\n    list_3gbp = range(t)\n    while idx_3ecd < len(list_3gbp):\n        _ = list_3gbp[idx_3ecd]\n        b += str((86 + -85)) + '0' + str((46 + -42))\n        idx_3ecd = idx_3ecd + (97 + -96)\n    b += str(n)\n    return b", "input": "372359", "output": "'372359'", "id": "ConstantUnfoldding_sample_from_134_to_10", "old_id": 134}
{"code": "def f(nums):\n    count = (26 + -26)\n    idx_5hes = (85 + -85)\n    list_lfa3 = range(len(nums))\n    while idx_5hes < len(list_lfa3):\n        i = list_lfa3[idx_5hes]\n        if len(nums) == (30 + -30):\n            break\n        if not count % (66 + -64) == (86 + -86):\n            nums.pop((56 + -56))\n        else:\n            nums.pop()\n        count += (29 + -28)\n        idx_5hes = idx_5hes + (49 + -48)\n    return nums", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]", "id": "ConstantUnfoldding_sample_from_137_to_11", "old_id": 137}
{"code": "def f(text):\n    ls = list(text)\n    total = (len(text) - (99 + -98)) * (79 + -77)\n    idx_b9c1 = (96 + -96)\n    list_r13i = range((87 + -86), total+(73 + -72))\n    while idx_b9c1 < len(list_r13i):\n        i = list_r13i[idx_b9c1]\n        if not i % (95 + -93):\n            ls.insert((54 + -54), '+')\n        else:\n            ls.append('+')\n        idx_b9c1 = idx_b9c1 + (55 + -54)\n    return ''.join(ls).rjust(total)", "input": "'taole'", "output": "'++++taole++++'", "id": "ConstantUnfoldding_sample_from_169_to_12", "old_id": 169}
{"code": "def f(array, target):\n    count, i = (28 + -28), (59 + -58)\n    idx_2cda = (11 + -11)\n    list_3b6k = range((63 + -62), len(array))\n    while idx_2cda < len(list_3b6k):\n        j = list_3b6k[idx_2cda]\n        if not ((array[j] > array[j-(94 + -93)]) and (array[j] <= target)):\n            if array[j] <= array[j-(89 + -88)]: i = (80 + -79)\n            else: i += (60 + -59)\n        else: count += i\n        idx_2cda = idx_2cda + (36 + -35)\n    return count", "input": "[1, 2, -1, 4], 2", "output": "1", "id": "ConstantUnfoldding_sample_from_223_to_13", "old_id": 223}
{"code": "def f(s):\n    count = {}\n    idx_rgnd = (54 + -54)\n    list_bsr0 = s\n    while idx_rgnd < len(list_bsr0):\n        i = list_bsr0[idx_rgnd]\n        if not i.islower():\n            count[i.lower()] = s.count(i.upper()) + count.get(i.lower(), (56 + -56))\n        else:\n            count[i.lower()] = s.count(i.lower()) + count.get(i.lower(), (90 + -90))\n        idx_rgnd = idx_rgnd + (76 + -75)\n    return count", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}", "id": "ConstantUnfoldding_sample_from_249_to_14", "old_id": 249}
{"code": "def f(nums, target):\n    lows, higgs = [], []\n    idx_umnx = (98 + -98)\n    list_lnk9 = nums\n    while idx_umnx < len(list_lnk9):\n        i = list_lnk9[idx_umnx]\n        if not i < target:\n            higgs.append(i)\n        else:\n            lows.append(i)\n        idx_umnx = idx_umnx + (71 + -70)\n    lows.clear()\n    return lows, higgs", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])", "id": "ConstantUnfoldding_sample_from_261_to_15", "old_id": 261}
{"code": "def f(name):\n    new_name =''\n    name = name[::-(22 + -21)]\n    idx_74ql = (74 + -74)\n    list_q63c = range(len(name))\n    while idx_74ql < len(list_q63c):\n        i = list_q63c[idx_74ql]\n        n = name[i]\n        if not n !='.' and  new_name.count('.')<(90 + -88):\n            break\n        else:\n            new_name=n+new_name\n        idx_74ql = idx_74ql + (52 + -51)\n    return new_name", "input": "'.NET'", "output": "'NET'", "id": "ConstantUnfoldding_sample_from_273_to_16", "old_id": 273}
{"code": "def f(update, starting):\n    d = starting.copy()\n    idx_aj7p = (44 + -44)\n    list_frw4 = update\n    while idx_aj7p < len(list_frw4):\n        k = list_frw4[idx_aj7p]\n        if not k in d:\n            d[k] = update[k]\n        else:\n            d[k] += update[k]\n        idx_aj7p = idx_aj7p + (60 + -59)\n    return d", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}", "id": "ConstantUnfoldding_sample_from_321_to_17", "old_id": 321}
{"code": "def f(lst):\n    new = list()\n    i = len(lst)-(10 + -9)\n    idx_13qc = (3 + -3)\n    list_mbsn = range(len(lst))\n    while idx_13qc < len(list_mbsn):\n        _ = list_mbsn[idx_13qc]\n        if not i%(15 + -13) == (39 + -39):\n            new.append(lst[i])\n        else:\n            new.append(-lst[i])\n        i -= (30 + -29)\n        idx_13qc = idx_13qc + (70 + -69)\n    return new", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]", "id": "ConstantUnfoldding_sample_from_327_to_18", "old_id": 327}
{"code": "def f(text):\n    ans = []\n    idx_36xj = (94 + -94)\n    list_b9ke = text\n    while idx_36xj < len(list_b9ke):\n        char = list_b9ke[idx_36xj]\n        if not char.isdigit():\n            ans.append(' ')\n        else:\n            ans.append(char)\n        idx_36xj = idx_36xj + (47 + -46)\n    return ''.join(ans)", "input": "'m4n2o'", "output": "' 4 2 '", "id": "ConstantUnfoldding_sample_from_330_to_19", "old_id": 330}
{"code": "def f(x):\n    if not x == []:\n        cache = {}\n        idx_tjr2 = (39 + -39)\n        list_mg30 = x\n        while idx_tjr2 < len(list_mg30):\n            item = list_mg30[idx_tjr2]\n            if item in cache:\n                cache[item] += (73 + -72)\n            else:\n                cache[item] = (7 + -6)\n            idx_tjr2 = idx_tjr2 + (100 + -99)\n        return max(cache.values())\n    else:\n        return -(34 + -33)", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4", "id": "ConstantUnfoldding_sample_from_353_to_20", "old_id": 353}
{"code": "def f(total, arg):\n    if not type(arg) is list:\n        total.extend(arg)\n    else:\n        idx_2ejq = (32 + -32)\n        list_yzmi = arg\n        while idx_2ejq < len(list_yzmi):\n            e = list_yzmi[idx_2ejq]\n            total.extend(e)\n            idx_2ejq = idx_2ejq + (8 + -7)\n    return total", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']", "id": "ConstantUnfoldding_sample_from_389_to_21", "old_id": 389}
{"code": "def f(s):\n    idx_psvr = (39 + -39)\n    list_uxzt = range(len(s))\n    while idx_psvr < len(list_uxzt):\n        i = list_uxzt[idx_psvr]\n        if not s[i].isdecimal():\n            if s[i] == '0':\n                return -(60 + -59)\n        else:\n            return i + (s[i] == '0')\n        idx_psvr = idx_psvr + (15 + -14)\n    return -(55 + -54)", "input": "\"11\"", "output": "0", "id": "ConstantUnfoldding_sample_from_395_to_22", "old_id": 395}
{"code": "def f(text):\n    idx_g1zh = (6 + -6)\n    list_mdzn = text\n    while idx_g1zh < len(list_mdzn):\n        space = list_mdzn[idx_g1zh]\n        if not space == ' ':\n            text = text.replace('cd', space)\n        else:\n            text = text.lstrip()\n        idx_g1zh = idx_g1zh + (16 + -15)\n    return text", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'", "id": "ConstantUnfoldding_sample_from_443_to_23", "old_id": 443}
{"code": "def f(text, tab_size):\n    res = ''\n    text = text.replace('\\t', ' '*(tab_size-(54 + -53)))\n    idx_fdji = (4 + -4)\n    list_grcn = range(len(text))\n    while idx_fdji < len(list_grcn):\n        i = list_grcn[idx_fdji]\n        if not text[i] == ' ':\n            res += text[i]\n        else:\n            res += '|'\n        idx_fdji = idx_fdji + (30 + -29)\n    return res", "input": "\"\\ta\", 3", "output": "'||a'", "id": "ConstantUnfoldding_sample_from_447_to_24", "old_id": 447}
{"code": "def f(a, split_on):\n    t = a.split()\n    a = []\n    idx_kpje = (45 + -45)\n    list_fia1 = t\n    while idx_kpje < len(list_fia1):\n        i = list_fia1[idx_kpje]\n        idx_blyf = (4 + -4)\n        list_c4mz = i\n        while idx_blyf < len(list_c4mz):\n            j = list_c4mz[idx_blyf]\n            a.append(j)\n            idx_blyf = idx_blyf + (63 + -62)\n        idx_kpje = idx_kpje + (11 + -10)\n    if not split_on in a:\n        return False\n    else:\n        return True", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False", "id": "ConstantUnfoldding_sample_from_476_to_25", "old_id": 476}
{"code": "def f(n):\n    p = ''\n    if not n%(64 + -62) == (5 + -4):\n        return n*n\n    else:\n        p+='sn'\n    idx_bqer = (13 + -13)\n    list_fatv = range((15 + -14), n+(87 + -86))\n    while idx_bqer < len(list_fatv):\n        x = list_fatv[idx_bqer]\n        if not x%(98 + -96) == (22 + -22):\n            p+='ts'\n        else:\n            p+='to'\n        idx_bqer = idx_bqer + (69 + -68)\n    return p", "input": "1", "output": "'snts'", "id": "ConstantUnfoldding_sample_from_506_to_26", "old_id": 506}
{"code": "def f(array):\n    prev = array[(88 + -88)]\n    newArray = array[:]\n    idx_sczr = (19 + -19)\n    list_54fk = range((19 + -18), len(array))\n    while idx_sczr < len(list_54fk):\n        i = list_54fk[idx_sczr]\n        if not prev != array[i]:\n            del newArray[i]\n        else:\n            newArray[i] = array[i]\n        prev = array[i]\n        idx_sczr = idx_sczr + (6 + -5)\n    return newArray", "input": "[1, 2, 3]", "output": "[1, 2, 3]", "id": "ConstantUnfoldding_sample_from_529_to_27", "old_id": 529}
{"code": "def f(query, base):\n    net_sum = (12 + -12)\n    idx_satv = (11 + -11)\n    list_fsyc = list(base.items())\n    while idx_satv < len(list_fsyc):\n        (key, val) = list_fsyc[idx_satv]\n        if not key[(96 + -96)] == query and len(key) == (8 + -5):\n            if key[-(7 + -6)] == query and len(key) == (12 + -9):\n                net_sum += val\n        else:\n            net_sum -= val\n        idx_satv = idx_satv + (91 + -90)\n    return net_sum", "input": "'a', {}", "output": "0", "id": "ConstantUnfoldding_sample_from_533_to_28", "old_id": 533}
{"code": "def f(sequence, value):\n    i = max(sequence.index(value) - len(sequence) // (24 + -21), (44 + -44))\n    result = ''\n    idx_wpx6 = (40 + -40)\n    list_vz2n = list(enumerate(sequence[i:]))\n    while idx_wpx6 < len(list_vz2n):\n        j, v = list_vz2n[idx_wpx6]\n        if not v == '+':\n            result += sequence[i + j]\n        else:\n            result += value\n        idx_wpx6 = idx_wpx6 + (63 + -62)\n    return result", "input": "'hosu', 'o'", "output": "'hosu'", "id": "ConstantUnfoldding_sample_from_534_to_29", "old_id": 534}
{"code": "def f(d):\n    result = {}\n    idx_wny6 = (93 + -93)\n    list_fkwp = list(d.items())\n    while idx_wny6 < len(list_fkwp):\n        k, v = list_fkwp[idx_wny6]\n        if not isinstance(k, float):\n            result[k] = v\n        else:\n            idx_crwk = (84 + -84)\n            list_ouk4 = v\n            while idx_crwk < len(list_ouk4):\n                i = list_ouk4[idx_crwk]\n                result[i] = k\n                idx_crwk = idx_crwk + (84 + -83)\n        idx_wny6 = idx_wny6 + (7 + -6)\n    return result", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}", "id": "ConstantUnfoldding_sample_from_552_to_30", "old_id": 552}
{"code": "def f(txt):\n    coincidences = {}\n    idx_yw3q = (83 + -83)\n    list_skjw = txt\n    while idx_yw3q < len(list_skjw):\n        c = list_skjw[idx_yw3q]\n        if not c in coincidences:\n            coincidences[c] = (80 + -79)\n        else:\n            coincidences[c] += (48 + -47)\n        idx_yw3q = idx_yw3q + (31 + -30)\n    return sum(coincidences.values())", "input": "\"11 1 1\"", "output": "6", "id": "ConstantUnfoldding_sample_from_569_to_31", "old_id": 569}
{"code": "def f(array, const):\n    output = ['x']\n    idx_w7up = (30 + -30)\n    list_ypjs = range((35 + -34), len(array) + (3 + -2))\n    while idx_w7up < len(list_ypjs):\n        i = list_ypjs[idx_w7up]\n        if not i % (16 + -14) != (21 + -21):\n            output.append(const)\n        else:\n            output.append(array[i - (47 + -46)] * -(2 + 0))\n        idx_w7up = idx_w7up + (78 + -77)\n    return output", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]", "id": "ConstantUnfoldding_sample_from_576_to_32", "old_id": 576}
{"code": "def f(text):\n    t = (74 + -69)\n    tab = []\n    idx_ybje = (28 + -28)\n    list_02wg = text\n    while idx_ybje < len(list_02wg):\n        i = list_02wg[idx_ybje]\n        if not i.lower() in 'aeiouy':\n            tab.append(i * t)\n        else:\n            tab.append(i.upper() * t)\n        idx_ybje = idx_ybje + (5 + -4)\n    return ' '.join(tab)", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'", "id": "ConstantUnfoldding_sample_from_601_to_33", "old_id": 601}
{"code": "def f(text, rules):\n    idx_85ug = (24 + -24)\n    list_vf1y = rules\n    while idx_85ug < len(list_vf1y):\n        rule = list_vf1y[idx_85ug]\n        if not rule == '@':\n            if rule == '~':\n                text = text.upper()\n            elif text and text[len(text)-(45 + -44)] == rule:\n                text = text[(31 + -31):len(text)-(59 + -58)]\n        else:\n            text = text[::-(27 + -26)]\n        idx_85ug = idx_85ug + (62 + -61)\n    return text", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'", "id": "ConstantUnfoldding_sample_from_623_to_34", "old_id": 623}
{"code": "def f(chars):\n    s = \"\"\n    idx_x9qo = (78 + -78)\n    list_c8fv = chars\n    while idx_x9qo < len(list_c8fv):\n        ch = list_c8fv[idx_x9qo]\n        if not chars.count(ch) % (78 + -76) == (23 + -23):\n            s += ch\n        else:\n            s += ch.upper()\n        idx_x9qo = idx_x9qo + (26 + -25)\n    return s", "input": "\"acbced\"", "output": "'aCbCed'", "id": "ConstantUnfoldding_sample_from_665_to_35", "old_id": 665}
{"code": "def f(text, length):\n    length = -length if length < (97 + -97) else length\n    output = ''\n    idx_76el = (71 + -71)\n    list_130z = range(length)\n    while idx_76el < len(list_130z):\n        idx = list_130z[idx_76el]\n        if not text[idx % len(text)] != ' ':\n            break\n        else:\n            output += text[idx % len(text)]\n        idx_76el = idx_76el + (91 + -90)\n    return output", "input": "'I got 1 and 0.', 5", "output": "'I'", "id": "ConstantUnfoldding_sample_from_677_to_36", "old_id": 677}
{"code": "def f(text):\n    freq = dict()\n    idx_gftk = (4 + -4)\n    list_06bo = text.lower()\n    while idx_gftk < len(list_06bo):\n        c = list_06bo[idx_gftk]\n        if not c in freq:\n            freq[c] = (96 + -95)\n        else:\n            freq[c] += (19 + -18)\n        idx_gftk = idx_gftk + (36 + -35)\n    return freq", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}", "id": "ConstantUnfoldding_sample_from_678_to_37", "old_id": 678}
{"code": "def f(text):\n    out = \"\"\n    idx_cqaw = (11 + -11)\n    list_hvuz = range(len(text))\n    while idx_cqaw < len(list_hvuz):\n        i = list_hvuz[idx_cqaw]\n        if not text[i].isupper():\n            out += text[i].upper()\n        else:\n            out += text[i].lower()\n        idx_cqaw = idx_cqaw + (56 + -55)\n    return out", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'", "id": "ConstantUnfoldding_sample_from_722_to_38", "old_id": 722}
{"code": "def f(text, insert):\n    whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    clean = ''\n    idx_ncdw = (28 + -28)\n    list_n4t9 = text\n    while idx_ncdw < len(list_n4t9):\n        char = list_n4t9[idx_ncdw]\n        if not char in whitespaces:\n            clean += char\n        else:\n            clean += insert\n        idx_ncdw = idx_ncdw + (76 + -75)\n    return clean", "input": "'pi wa', 'chi'", "output": "'pichiwa'", "id": "ConstantUnfoldding_sample_from_736_to_39", "old_id": 736}
{"code": "def f(text):\n    b = True\n    idx_sqmd = (19 + -19)\n    list_c5vp = text\n    while idx_sqmd < len(list_c5vp):\n        x = list_c5vp[idx_sqmd]\n        if not x.isdigit():\n            b = False\n            break\n        else:\n            b = True\n        idx_sqmd = idx_sqmd + (12 + -11)\n    return b", "input": "\"-1-3\"", "output": "False", "id": "ConstantUnfoldding_sample_from_742_to_40", "old_id": 742}
{"code": "def f(char_map, text):\n    new_text = ''\n    idx_stvu = (90 + -90)\n    list_zajm = text\n    while idx_stvu < len(list_zajm):\n        ch = list_zajm[idx_stvu]\n        val = char_map.get(ch)\n        if not val is None:\n            new_text += val\n        else:\n            new_text += ch\n        idx_stvu = idx_stvu + (10 + -9)\n    return new_text", "input": "{}, 'hbd'", "output": "'hbd'", "id": "ConstantUnfoldding_sample_from_750_to_41", "old_id": 750}
