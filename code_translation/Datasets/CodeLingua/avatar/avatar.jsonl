{"code": "n = int(input())\nfor i in range(n):\n    a = int(input())\n    if a < 2:\n        print(0)\n    if a >= 2:\n        print(a - 2)\n", "id": "codeforces_23_B"}
{"code": "n = int(input())\nprint((n * 2 + 1) // 3)\n", "id": "codeforces_669_A"}
{"code": "def sum(k):\n    ret = 0\n    pw = 10\n    len = 1\n    while 1 == 1:\n        cur = min(pw - 1, k)\n        prev = pw // 10\n        ret += (cur - prev + 1) * len\n        if (pw - 1 >= k):\n            break\n        len += 1\n        pw *= 10\n    return ret\n\n\nw, m, k = map(int, input().split())\nlo = 0\nhi = int(1e18)\nwhile hi - lo > 1:\n    md = (lo + hi) // 2\n    c = sum(m + md - 1) - sum(m - 1)\n    if c * k <= w:\n        lo = md\n    else:\n        hi = md\nprint(lo)\n", "id": "codeforces_373_B"}
{"code": "import numpy as np\nN = int(input())\nn = [int(x) for x in input().split()]\nn = np.array(n)\na = 1\npos = 0\nfor i in range(1, N):\n    if n[pos] > n[i]:\n        a += 1\n        pos = i\nprint(a)\n", "id": "atcoder_ABC152_C"}
{"code": "a = list(map(int, input().split()))\nfor e, i in enumerate(a):\n    if i == 0:\n        print(e + 1)\n        break\n", "id": "atcoder_ABC170_A"}
{"code": "princess = int(input())\ndragon = int(input())\nt = int(input())\nf = int(input())\nc = int(input())\nif dragon <= princess:\n    print(0)\n    exit(0)\nresult = 0\nposition = t * princess\nposition += princess * position / (dragon - princess)\nwhile position < c:\n    result += 1\n    position += princess * position / dragon\n    position += princess * f\n    position += princess * position / (dragon - princess)\nprint(result)\n", "id": "codeforces_148_B"}
{"code": "s = input()\nres = []\npunctuation = [',', '.', '!', '?']\nfor i in range(len(s)):\n    if i >= 1:\n        if s[i] == '':\n            if res[- 1] != '':\n                res.append(s[i])\n            else:\n                continue\n        else:\n            if s[i] in punctuation:\n                if res[- 1] == '':\n                    res.pop()\n                res.append(s[i])\n                res.append('')\n            else:\n                res.append(s[i])\n    else:\n        if s[i] == '':\n            continue\n        if s[i] in punctuation:\n            continue\n        else:\n            res.append(s[i])\nprint(''.join(res))\n", "id": "codeforces_147_A"}
{"code": "s, t = input(), input()\nfreqs = dict()\nfreqt = dict()\nyay, whoops = 0, 0\nfor letra in s:\n    if letra in freqs:\n        freqs[letra] += 1\n    else:\n        freqs[letra] = 1\nfor letra in t:\n    if letra in freqt:\n        freqt[letra] += 1\n    else:\n        freqt[letra] = 1\nfor letra in freqs.keys():\n    while (freqs[letra] > 0 and letra in freqt and freqt[letra] > 0):\n        yay += 1\n        freqs[letra] -= 1\n        freqt[letra] -= 1\nfor letra in freqs.keys():\n    while (freqs[letra] > 0):\n        if letra.islower() and letra.upper() in freqt.keys() and freqt[letra.upper()] > 0:\n            whoops += 1\n            freqs[letra] -= 1\n            freqt[letra.upper()] -= 1\n        elif letra.isupper() and letra.lower() in freqt.keys() and freqt[letra.lower()] > 0:\n            whoops += 1\n            freqs[letra] -= 1\n            freqt[letra.lower()] -= 1\n        else:\n            break\nprint(yay, whoops)\n", "id": "codeforces_518_B"}
{"code": "N, P = map(int, input().split())\n\n\ndef combi(N, K):\n    a = 1\n    for i in range(K):\n        a *= N - i\n    for j in range(K):\n        a /= j + 1\n    return a\n\n\nans = 0\nlis = list(map(int, input().split()))\nls = []\nfor a in lis:\n    ls.append(a % 2)\none = ls.count(1)\nzero = ls.count(0)\npattern_a = 0\npattern_b = 0\nfor j in range(zero + 1):\n    pattern_b += combi(zero, j)\ntime = 0\nwhile time <= one:\n    if time % 2 == P:\n        pattern_a += combi(one, time)\n    time += 1\nprint(int(pattern_a * pattern_b))\n", "id": "atcoder_AGC017_A"}
{"code": "import numpy as np\nN = int(input())\nA = np.fromiter(map(int, input().split()), np.int64)\nresult = 0\nfor b in range(60):\n    bs = int(((A >> b) & 1).sum())\n    result = (result + bs * (N - bs) * (1 << b)) % 1000000007\nprint(result)\n", "id": "atcoder_ABC147_D"}
{"code": "mod = 10 ** 9 + 7\nn, k = map(int, input().split())\ncoef = []\nfor i in range(1, int(n ** 0.5) + 1):\n    coef.append((n // i) - (n // (i + 1)))\ncoef += [1] * (n - sum(coef))\ncoef = coef[:: - 1]\nnn = len(coef)\ndp = [[0] * nn for _ in range(k + 1)]\ndp[0][0] = 1\nfor i in range(1, k + 1):\n    tmp = 0\n    for j in range(nn - 1, - 1, - 1):\n        tmp += dp[i - 1][(nn - 1) - j]\n        tmp %= mod\n        dp[i][j] = coef[j] * tmp\n        dp[i][j] %= mod\nprint(sum(dp[k]) % mod)\n", "id": "atcoder_ABC132_F"}
{"code": "n = int(input())\ns = input()\nif n % 2 != 0:\n    print('No')\nelif s[: int(n / 2)] == s[int(n / 2):]:\n    print('Yes')\nelse:\n    print('No')\n", "id": "atcoder_ABC145_B"}
{"code": "record_of_movements = input()\nx, y = 0, 0\nd_movement = {'L': (0, - 1), 'R': (0, 1), 'U': (1, 0), 'D': (- 1, 0)}\nd = {(x, y): ''}\nbug = False\nfor move in record_of_movements:\n    temp = (x, y)\n    x += d_movement[move][0]\n    y += d_movement[move][1]\n    if (x, y) not in d:\n        for step in d_movement:\n            if (x + d_movement[step][0], y + d_movement[step][1]) != temp and (x + d_movement[step][0], y + d_movement[step][1]) in d:\n                bug = True\n                break\n    else:\n        bug = True\n    if bug:\n        break\n    d[x, y] = ''\nif bug:\n    print('BUG')\nelse:\n    print('OK')\n", "id": "codeforces_8_B"}
{"code": "import math\na, b, h, m = map(int, input().split())\nC = abs(360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m)\nif C > 180:\n    C = 360 - C\ncosC = math.cos(math.radians(C))\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * cosC))\n", "id": "atcoder_ABC168_C"}
{"code": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nfor i in l:\n    if i + 1 in l and i + 2 in l:\n        print('YES')\n        break\nelse:\n    print('NO')\n", "id": "codeforces_653_A"}
{"code": "xxs = input().split(\" \")\nx, t, a, b, da, db = int(xxs[0]), int(xxs[1]), int(\n    xxs[2]), int(xxs[3]), int(xxs[4]), int(xxs[5])\n\n\ndef main():\n    if x == 0:\n        print(\"YES\")\n        return \"Result Found\"\n    a_time = min([a // da, t - 1])\n    b_time = min([b // db, t - 1])\n    for i in range(a_time + 1):\n        for j in range(b_time + 1):\n            if a - da * i == x or b - db * j == x:\n                print(\"YES\")\n                return \"Result Found\"\n            if (a - da * i) + (b - db * j) == x:\n                print(\"YES\")\n                return \"Result Found\"\n    return \"Result Not Found\"\n\n\nff = main()\nif ff == \"Result Not Found\":\n    print(\"NO\")\n", "id": "codeforces_203_A"}
{"code": "N, K = map(int, input().split())\nS = input()\naaaa = False\nif K >= 15:\n    aaaa = True\nelif 2 ** K >= N:\n    aaaa = True\nif aaaa:\n    print(min(S) * N)\n    exit()\n\n\ndef get_last_dict(s_str):\n    U = s_str + s_str[:: - 1]\n    c = min(s_str)\n    p = U.index(c)\n    minindex = p\n    p += 1\n    while p <= N:\n        if U[p] == c:\n            if check_normal_dict(U, minindex, p):\n                minindex = p\n        p += 1\n    return U[minindex: minindex + N]\n\n\ndef check_normal_dict(u, pointer1, pointer2):\n    for i in range(N):\n        if u[pointer1 + i] > u[pointer2 + i]:\n            return True\n        elif u[pointer1 + i] < u[pointer2 + i]:\n            return False\n    return False\n\n\nS = get_last_dict(S)\nif K == 1:\n    print(S)\nelse:\n    count = 0\n    for c in S:\n        if c == S[0]:\n            count += 1\n        else:\n            break\n    if count * (2 ** (K - 1)) >= N:\n        print(S[0] * N)\n    else:\n        S = S[0] * (count * ((2 ** (K - 1)) - 1)) + S\n        print(S[0: N])\n", "id": "atcoder_AGC037_E"}
{"code": "mod = 10 ** 9 + 7\nn = int(input())\nc = list(map(int, input().split()))\nc.sort(reverse=True)\nb = pow(2, 2 * n - 2, mod)\na = 2 * b % mod\nans = 0\nfor i in range(n):\n    ans += c[i] * (a + i * b)\n    ans %= mod\nprint(ans)\n", "id": "atcoder_ABC150_E"}
{"code": "v1, v2 = input().split()\nt, d = input().split()\nv1 = int(v1)\nv2 = int(v2)\nt = int(t)\nd = int(d)\na = 1\nv = v1\ndistance = 0\nfor i in range(t):\n    if v - v2 > (t - i - 1) * d:\n        a *= - 1\n        v = (t - i - 1) * d + v2\n    distance += v\n    v += a * d\nprint(distance)\n", "id": "codeforces_534_B"}
{"code": "n = int(input())\nfor i in range(n, 0, - 1):\n    if n % i == 0:\n        n = i\n        print(i, end=' ')\n", "id": "codeforces_58_B"}
{"code": "import sys\nimport math\nimport collections\nimport heapq\nimport itertools\n\n\ndef gcd(a, b):\n    a, b = max(a, b), min(a, b)\n    while a % b > 0:\n        a, b = b, a % b\n    return b\n\n\ndef solve():\n    s = input()\n    t = \"\"\n    i = 0\n    while i < len(s):\n        if s[i] == \"A\":\n            t += \"A\"\n            i += 1\n        elif s[i] == \"B\":\n            if i < len(s) - 1:\n                if s[i + 1] == \"C\":\n                    t += \"D\"\n                    i += 2\n                else:\n                    t += \"X\"\n                    i += 1\n            else:\n                t += \"X\"\n                i += 1\n        else:\n            t += \"X\"\n            i += 1\n    total = 0\n    numA = 0\n    for i in range(len(t)):\n        if t[i] == \"X\":\n            numA = 0\n        else:\n            if t[i] == \"A\":\n                numA += 1\n            else:\n                total += numA\n    print(total)\n    INF = 10 ** 25\n    mod = 7 + 10 ** 9\n    return 0\n\n\nif __name__ == \"__main__\":\n    solve()\n", "id": "atcoder_AGC034_B"}
{"code": "x, y, a, b = map(int, input().split())\ngames = []\nfor i in range(a, x + 1):\n    if (i <= b):\n        continue\n    else:\n        for j in range(b, y + 1):\n            if i > j:\n                games.append((i, j))\nprint(len(games))\nfor i in games:\n    print(f\"{i[0]} {i[1]}\")\n", "id": "codeforces_242_A"}
{"code": "a, at = map(int, input().split())\nb, bt = map(int, input().split())\nt1, t2 = map(int, input().split(':'))\nst = t2 + (t1 - 5) * 60\nfin = st + at\nnow = 0\nans = 0\nwhile now < fin and now < 1140:\n    if now + bt > st:\n        ans += 1\n    now += b\nprint(ans)\n", "id": "codeforces_665_A"}
{"code": "def twos_in_factorial(n):\n    return n - bin(n).count('1')\n\n\ndef parity_of_nCr(n, i):\n    f = twos_in_factorial\n    return f(n) - f(n - i) - f(i) > 0\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    nums = list(map(lambda x: int(x) - 1, input().strip()))\n    no_one = False\n    if 1 not in nums:\n        nums = [num // 2 for num in nums]\n        no_one = True\n    is_odd = False\n    for i, num in enumerate(nums):\n        if not parity_of_nCr(n - 1, i) and num & 1:\n            is_odd ^= 1\n    if not is_odd:\n        print(0)\n    else:\n        print(1 << no_one)\n", "id": "atcoder_AGC043_B"}
{"code": "firstline = int(input())\ntotal = 0\nmemory = []\nfor x in range(firstline):\n    A, G = list(map(int, input().split()))\n    if total + A <= 500:\n        total += A\n        memory.append(\"A\")\n    else:\n        total -= G\n        memory.append(\"G\")\nprint(\"\".join(memory))\n", "id": "codeforces_282_B"}
{"code": "import itertools\n\n\ndef find(s, ch):\n    return [i for i, ltr in enumerate(s) if ltr == ch]\n\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input().replace(\"\", \"\")\n    if '0' not in s:\n        print(n - 1)\n    else:\n        indices = find(s, '0')\n        if len(indices) == 1:\n            print(n)\n        else:\n            maximum = 0\n            combs = itertools.combinations(indices, 2)\n            for x in combs:\n                maximum = max(\n                    maximum, 2 + 2 * (abs(indices.index(x[0]) - indices.index(x[1])) - 1) - (abs(x[0] - x[1]) - 1))\n            print(s.count('1') + maximum)\n", "id": "codeforces_327_A"}
{"code": "num, k = [int(x) for x in input().split()]\narr = [int(x) for x in input().split()]\ndifferent = set()\ntemp = 0\narr.sort()\nfor x in arr:\n    if (x % k != 0 or not x // k in different):\n        different.add(x)\n    temp = max(len(different), temp)\nprint(temp)\n", "id": "codeforces_274_A"}
{"code": "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(* (MAP() for _ in range(n)))\n\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\nN, M = MAP()\nballs = [[1, 0] for _ in range(N)]\nballs[0] = [0, 1]\nfor _ in range(M):\n    x, y = MAP()\n    w_x, r_x = balls[x - 1]\n    w_y, r_y = balls[y - 1]\n    if w_x >= 1 and r_x >= 1:\n        balls[x - 1][0] -= 1\n        balls[y - 1][1] += 1\n    elif w_x == 0:\n        balls[x - 1][1] -= 1\n        balls[y - 1][1] += 1\n    else:\n        balls[x - 1][0] -= 1\n        balls[y - 1][0] += 1\nans = 0\nfor i in range(N):\n    if balls[i][1]:\n        ans += 1\nprint(ans)\n", "id": "atcoder_AGC002_B"}
{"code": "n = int(input())\narr = list(map(int, input().split()))\nif arr[0] > 15:\n    print(15)\nelse:\n    for i in range(1, len(arr)):\n        if arr[i] - arr[i - 1] > 15:\n            print(arr[i - 1] + 15)\n            break\n    else:\n        if arr[- 1] == 90 or arr[- 1] + 15 >= 90:\n            print(90)\n        else:\n            print(arr[- 1] + 15)\n", "id": "codeforces_673_A"}
{"code": "def get_nums(num, t):\n    return [t // num + 1 if i in range(t % num) else t // num for i in range(num)]\n\n\nn, k, l, r, sa, sk = map(int, input().split())\nans = get_nums(k, sk) + get_nums(n - k, sa - sk)\nprint(' '.join(map(str, ans)))\n", "id": "codeforces_369_B"}
{"code": "import sys\ninput = sys.stdin.readline\nn, s = map(int, input().split())\nc = 0\nfor _ in range(n):\n    f, t = map(int, input().split())\n    x = t - (s - f)\n    if x > c:\n        c = x\nprint(s + c)\n", "id": "codeforces_608_A"}
{"code": "import sys\ninput = sys.stdin.readline\na, b = input()[: - 1].split()\nx = max(len(a), len(b))\na = a.rjust(x, '0')\nb = b.ljust(x, '0')\ns = ''\nc = 0\nfor i in range(x):\n    d = int(b[i]) + int(a[x - i - 1]) + c\n    if d > 9:\n        s += str(d)[1]\n        c = 1\n    else:\n        s += str(d)\n        c = 0\nif c == 1:\n    s += '1'\nprint(int(s[:: - 1]))\n", "id": "codeforces_171_A"}
{"code": "cookies = [int(x) for x in input().split()]\nleftOver = cookies[0] - cookies[2]\ntakahashi = max(0, leftOver)\nprint(str(takahashi) + ' ' +\n      (str(cookies[1]) if takahashi > 0 else str(max(0, cookies[1] - abs(leftOver)))))\n", "id": "atcoder_ABC149_B"}
{"code": "from collections import defaultdict\nN, K = map(int, input().split())\nL = list(map(int, input().split()))\nL.insert(0, - 1)\npath = [1]\nind = 0\ncount = 0\nx = 1\nt = - 1\nflag = False\nHash = defaultdict(lambda: 0)\nfor i in range(N + 1):\n    ne = L[x]\n    if Hash[ne]:\n        flag = True\n        t = Hash[ne]\n        break\n    path.append(ne)\n    ind += 1\n    Hash[ne] = ind\n    x = ne\nif flag == True:\n    loop = path[t::]\n    if K < (len(path)):\n        print(path[K])\n    else:\n        K = K - len(path)\n        K = K % len(loop)\n        print(loop[K])\nelse:\n    print(path[K - 1])\n", "id": "atcoder_ABC167_D"}
{"code": "n = int(input())\nr = [* map(int, input().split())]\nans = abs(r[0])\nfor i in range(1, n):\n    ans += abs(r[i] - r[i - 1])\nprint(ans)\n", "id": "codeforces_596_B"}
{"code": "N = int(input())\nA = [int(input()) * N + i for i in range(N)]\nA.sort()\ncnt = 0\nfor i in range(N):\n    d = (A[i] % N) % 2\n    if d % 2 != i % 2:\n        cnt += 1\nprint(cnt // 2)\n", "id": "atcoder_AGC003_C"}
{"code": "s = list(input())\nnum_g, num_p = 0, 0\nscore = 0\nfor x in s:\n    if x == 'g':\n        if num_g - num_p > 0:\n            score += 1\n            num_p += 1\n        else:\n            score = score\n            num_g += 1\n    elif x == 'p':\n        if num_g - num_p > 0:\n            score = score\n            num_p += 1\n        else:\n            score -= 1\n            num_g += 1\nprint(score)\n", "id": "atcoder_ARC062_B"}
{"code": "def readInts(): return map(int, input().split())\n\n\ndef dfs(g, seen, i):\n    if i in seen:\n        return 0, 0\n    seen.add(i)\n    nodes = 1\n    edges = len(g[i])\n    for j in g[i]:\n        x, y = dfs(g, seen, j)\n        nodes += x\n        edges += y\n    return nodes, edges\n\n\ndef solve():\n    line0 = []\n    try:\n        line0 = readInts()\n    except EOFError:\n        return False\n    n, m = line0\n    g = {}\n    seen = set()\n    for i in range(1, n + 1):\n        g[i] = set()\n    for _ in range(m):\n        a, b = readInts()\n        g[a].add(b)\n        g[b].add(a)\n    ans = 0\n    for i in range(1, n + 1):\n        if i not in seen:\n            nodes, edges = dfs(g, seen, i)\n            if nodes > 1 and nodes % 2 == 1 and 2 * nodes == edges:\n                ans += 1\n    if (n - ans) % 2 == 1:\n        ans += 1\n    print(ans)\n    return True\n\n\nwhile solve():\n    pass\n", "id": "codeforces_216_B"}
{"code": "ABC = tuple(map(int, input().split()))\nif ABC.count(5) == 2:\n    print('YES' if sum(ABC) == 17 else 'NO')\nelse:\n    print('NO')\n", "id": "atcoder_ABC042_A"}
{"code": "p = input().split(\" \")\nx1 = int(p[0])\ny1 = int(p[1])\nx2 = int(p[2])\ny2 = int(p[3])\nDIF1 = x2 - x1\nDIF2 = y2 - y1\nx3 = x2 - DIF2\ny3 = y2 + DIF1\nx4 = x1 - DIF2\ny4 = y1 + DIF1\nprint(str(x3) + \" \" + str(y3) + \" \" + str(x4) + \" \" + str(y4))\n", "id": "atcoder_ABC108_B"}
{"code": "import sys\nsys.setrecursionlimit(10 ** 5)\n\n\nclass Node:\n    def __init__(self):\n        self.val = None\n        self.color = None\n        self.a = []\n\n\nn = int(input())\nnodes = []\nfor i in range(n):\n    nodes.append(Node())\nfor i in range(n - 1):\n    u, v, w = map(int, input().split())\n    node1 = nodes[u - 1]\n    node2 = nodes[v - 1]\n    node1.val = u\n    node2.val = v\n    node1.a.append([node2, w])\n    node2.a.append([node1, w])\nroot = nodes[0]\nroot.color = True\nnodeSet = set()\n\n\ndef traverse(node, distance):\n    if node in nodeSet:\n        return\n    else:\n        nodeSet.add(node)\n    for pair in node.a:\n        adjNode = pair[0]\n        dis = pair[1]\n        if (distance + dis) % 2 == 0:\n            adjNode.color = root.color\n        else:\n            adjNode.color = not root.color\n        traverse(adjNode, distance + dis)\n\n\ntraverse(root, 0)\nfor i in range(n):\n    node = nodes[i]\n    if node.color:\n        print(1)\n    else:\n        print(0)\n", "id": "atcoder_ABC126_D"}
{"code": "def gcd(a: int, b: int) -> int:\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef ruiseki_lr(array):\n    def op(a, b): return gcd(a, b)\n    e = 0\n    n = len(array)\n    left = [e] * (n + 1)\n    right = [e] * (n + 1)\n    for i in range(n):\n        left[i + 1] = op(left[i], array[i])\n    for i in reversed(range(n)):\n        right[i] = op(right[i + 1], array[i])\n    return left, right\n\n\nn = int(input())\na = list(map(int, input().split()))\nleft, right = ruiseki_lr(a)\nans = 0\nfor i in range(n):\n    ans = max(gcd(left[i], right[i + 1]), ans)\nprint(ans)\n", "id": "atcoder_ABC125_C"}
{"code": "import sys\nimport math\ndebug = False\n\n\ndef log(text):\n    if debug:\n        print(text)\n\n\ndef parse_input(lines_as_string=None):\n    global debug\n    lines = []\n    if lines_as_string is None:\n        debug = False\n        lines.append(input())\n    else:\n        debug = True\n        lines = [e for e in lines_as_string.split(\"\\n\")][1: - 1]\n    c = [e for e in lines[0].split(\" \")][0]\n    return (c, )\n\n\ndef solve(c):\n    a = \"abcdefghijklmnopqrstuvwxyz\"\n    i = a.index(c)\n    return a[i + 1]\n\n\ndef main():\n    result = solve(* parse_input())\n    if isinstance(result, list):\n        for r in result:\n            print(\"%s\" % r, sep='')\n    else:\n        print(\"%s\" % result, sep='')\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_ABC151_A"}
{"code": "def rememberTheNumber(nums, i, operations, ans):\n    if i >= 3:\n        return\n    for j in range(4):\n        for k in range(j + 1, 4):\n            if (nums[j] != - 1 and nums[k] != - 1):\n                s = nums[j]\n                nums[j] = - 1\n                t = nums[k]\n                if (operations[i] == '+'):\n                    nums[k] = s + t\n                elif (operations[i] == '*'):\n                    nums[k] = s * t\n                if (i == 2 and nums[k] < ans[0]):\n                    ans[0] = nums[k]\n                rememberTheNumber(nums, i + 1, operations, ans)\n                nums[j] = s\n                nums[k] = t\n\n\nnums = list(map(int, input().split()))\noperations = list(map(str, input().split()))\nans = [10000000000000000000000000]\nrememberTheNumber(nums, 0, operations, ans)\nprint(ans[0])\n", "id": "codeforces_55_B"}
{"code": "def cutRibbon():\n    arr = [int(i) for i in input().split()]\n    length = arr[0]\n    arr = sorted(arr[1: 4], reverse=False)\n    if (length % arr[0] == 0):\n        print(int(length / arr[0]))\n        return\n    ans = 0\n    if (arr[0] == arr[1]):\n        k = 0\n        for i in range(int(length / arr[2]) + 1):\n            check = length - i * arr[2]\n            if (check >= 0 and check % arr[0] == 0):\n                k = int(check / arr[0])\n                ans = max(ans, k + i)\n    else:\n        k = 0\n        for i in range(int(length / arr[2]) + 1):\n            for j in range(int(length / arr[1]) + 1):\n                check = length - i * arr[2] - j * arr[1]\n                if (check >= 0 and check % arr[0] == 0):\n                    k = int(check / arr[0])\n                    ans = max(ans, k + i + j)\n    print(ans)\n    return\n\n\ncutRibbon()\n", "id": "codeforces_189_A"}
{"code": "import collections\ns = list(input())\neven = collections.Counter(s[0:: 2])\nodd = collections.Counter(s[1:: 2])\nprint(min(len(s) - (even[\"0\"] + odd[\"1\"]), len(s) - (even[\"1\"] + odd[\"0\"])))\n", "id": "atcoder_ABC124_C"}
{"code": "n = int(input())\narr = list(map(int, input().strip().split()))[: n]\nans = [0] * n\nmx = arr[- 1]\nfor i in range(n - 2, - 1, - 1):\n    ans[i] = max(0, mx - arr[i] + 1)\n    if arr[i] > mx:\n        mx = arr[i]\nprint(* ans)\n", "id": "codeforces_581_B"}
{"code": "from collections import defaultdict\nn = int(input())\ns = defaultdict(lambda: 0)\nl = list([input() for i in range(n)])\nf = 'Yes'\ni = - 1\nfor v in l:\n    s[v] += 1\n    if s[v] >= 2:\n        f = 'No'\n    if i != - 1 and l[i][- 1] != v[0]:\n        f = 'No'\n    i += 1\nprint(f)\n", "id": "atcoder_ABC109_B"}
{"code": "t = int(input())\n\n\ndef solve(n):\n    s = (1 + n) * n // 2\n    t = 1\n    while t <= n:\n        s -= 2 * t\n        t *= 2\n    return s\n\n\nfor _ in range(t):\n    n = int(input())\n    print(solve(n))\n", "id": "codeforces_598_A"}
{"code": "import sys\n\n\ndef solve(N: int, M: int, Q: int, a: \"List[int]\", b: \"List[int]\", c: \"List[int]\", d: \"List[int]\"):\n    res = 0\n\n    def rec(A):\n        nonlocal res\n        if len(A) == N:\n            ans = 0\n            for i in range(Q):\n                if A[b[i] - 1] - A[a[i] - 1] == c[i]:\n                    ans += d[i]\n            res = max(res, ans)\n            return\n        last_max = 1 if len(A) == 0 else A[- 1]\n        for i in range(last_max, M + 1):\n            rec(A + [i])\n    rec([])\n    print(res)\n    return\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))\n    M = int(next(tokens))\n    Q = int(next(tokens))\n    a = [int()] * (Q)\n    b = [int()] * (Q)\n    c = [int()] * (Q)\n    d = [int()] * (Q)\n    for i in range(Q):\n        a[i] = int(next(tokens))\n        b[i] = int(next(tokens))\n        c[i] = int(next(tokens))\n        d[i] = int(next(tokens))\n    solve(N, M, Q, a, b, c, d)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_ABC165_C"}
{"code": "soz = input()\na = [0] * (len(soz) + 1)\nfor i in range(1, len(soz)):\n    a[i] = a[i - 1]\n    if soz[i - 1] == soz[i]:\n        a[i] += 1\nn = int(input())\narr = []\nfor i in range(n):\n    m, l = input().split()\n    arr.append(a[int(l) - 1] - a[int(m) - 1])\nfor i in arr:\n    print(i)\n", "id": "codeforces_313_B"}
{"code": "n = int(input())\nl = list(map(int, input().split()))\nhigh = 1\ntower = n\nmaximum = 1\nl.sort()\nfor i in range(1, n):\n    if l[i] == l[i - 1]:\n        tower -= 1\n        high += 1\n    else:\n        if high > maximum:\n            maximum = high\n        high = 1\nif high > maximum:\n    maximum = high\nprint(maximum, tower)\n", "id": "codeforces_37_A"}
{"code": "import math\nn, d = map(int, input().split())\npoints = [list(map(int, input().split())) for _ in range(n)]\n\n\ndef dist(x, y):\n    tmp = 0.0\n    for i in range(d):\n        tmp += (x[i] - y[i]) ** 2\n    return math.sqrt(tmp)\n\n\ncount = 0\nfor i, elm in enumerate(points):\n    for j in range(i + 1, n):\n        if dist(elm, points[j]).is_integer():\n            count += 1\nprint(count)\n", "id": "atcoder_ABC133_B"}
{"code": "li = []\nind = 0\nfor i in range(1, 371):\n    temp = []\n    p, q = i, i\n    count = 0\n    while p != 0:\n        p //= 10\n        count += 1\n    if count == 1:\n        li.append(i)\n    if count == 2:\n        temp = []\n        while q != 0:\n            x = q % 10\n            q //= 10\n            temp.append(x)\n        li = li + temp[:: - 1]\n    if count == 3:\n        temp = []\n        while q != 0:\n            x = q % 10\n            q //= 10\n            temp.append(x)\n        li = li + temp[:: - 1]\nli.pop()\nli.pop()\nn = int(input(''))\nprint(li[n - 1])\n", "id": "codeforces_672_A"}
{"code": "def main():\n    n, k = list(map(int, input().split(' ')))\n    elems = list(map(int, input().split(' ')))\n    def all_same(arr): return all([x == arr[0] for x in arr])\n    if all_same(elems):\n        print(0)\n        return\n    if k == 1:\n        print(- 1)\n        return\n    if not all_same(elems[k - 1:]):\n        print(- 1)\n        return\n    target = elems[- 1]\n    to_delete = elems[0: k - 1]\n    while to_delete and to_delete[- 1] == target:\n        to_delete.pop()\n    print(len(to_delete))\n\n\nif __name__ == \"__main__\":\n    main()\n", "id": "codeforces_222_A"}
{"code": "def main():\n    n, m = [int(i) for i in input().split()]\n    round_complexity = [int(i) for i in input().split()]\n    george_complexity = [int(i) for i in input().split()]\n    i = j = 0\n    while (i < n and j < m):\n        i += 1 * (round_complexity[i] <= george_complexity[j])\n        j += 1\n    print(n - i)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "codeforces_387_B"}
{"code": "X = int(input())\nprime = [True] * (100010)\nprime[0] = False\nprime[1] = False\nfor i in range(4, 100010, 2):\n    prime[i] = False\ni = 3\nwhile (i * i <= 100008):\n    if prime[i]:\n        for j in range(i + i, 100008, i):\n            prime[j] = False\n    i += 2\nfor i in range(X, 100008):\n    if prime[i]:\n        print(i)\n        break\n", "id": "atcoder_ABC149_C"}
{"code": "l = []\nlimit = 10000000000\n\n\ndef gen(number, four, seven):\n    if (number > limit):\n        return\n    if (number > 0 and four == seven):\n        l.append(number)\n    gen(number * 10 + 4, four + 1, seven)\n    gen(number * 10 + 7, four, seven + 1)\n\n\ndef main():\n    gen(0, 0, 0)\n    l.sort()\n    n = int(input())\n    ans = 0\n    for val in l:\n        if (val >= n):\n            ans = val\n            break\n    print(ans)\n\n\nmain()\n", "id": "codeforces_96_B"}
{"code": "l = input()\nl = l.split('.')\ns = list(l[0])\np = list(l[1])\ni = int(p[0])\nif s[len(s) - 1] == '9':\n    print(\"GOTO Vasilisa.\")\nelif s[len(s) - 1] != '9' and i < 5:\n    s = \"\".join(s)\n    print(s)\nelse:\n    s = \"\".join(s)\n    s = str(int(s) + 1)\n    print(s)\n", "id": "codeforces_99_A"}
{"code": "import sys\nfrom collections import deque\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\n\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\n\ndef main():\n    N, M = map(int, input().split())\n    edge = [[] for _ in range(N)]\n    for i in range(M):\n        X, Y, Z = map(lambda x: int(x) - 1, input().split())\n        edge[X].append(Y)\n        edge[Y].append(X)\n    used = [False] * N\n    ans = 0\n    for i in range(N):\n        if not used[i]:\n            ans += 1\n            queue = deque()\n            queue.append(i)\n            while queue:\n                node = queue.popleft()\n                used[node] = True\n                for nextnode in edge[node]:\n                    if not used[nextnode]:\n                        queue.append(nextnode)\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_ABC126_E"}
{"code": "N = int(input())\nV = input().split(\" \")\nV = [int(i) for i in V]\nC = input().split(\" \")\nC = [int(i) for i in C]\nlist = [0]\nans = 0\nX = 0\nY = 0\nfor i in range(N):\n    if V[i] - C[i] > 0:\n        X = V[i]\n        Y = C[i]\n        list.append(X - Y)\nprint(sum(list))\n", "id": "atcoder_ABC125_B"}
{"code": "from functools import *\nfrom operator import *\nN = int(input())\na = list(map(int, input().split()))\ntotal = reduce(xor, a, 0)\nprint(\" \".join(list(map(lambda ai: str(ai ^ total), a))))\n", "id": "atcoder_ABC171_E"}
{"code": "n, m = map(int, input().split())\nq = n // m\nr = n % m\na = [q] * m\nfor i in range(r):\n    a[i] += 1\nfor i in range(m):\n    print(a[i], end=' ')\n", "id": "codeforces_306_A"}
{"code": "import numpy as np\nfrom collections import deque\nimport heapq\nN, M = map(int, input().split())\nedges = [set() for _ in range(N)]\ndegs = [0 for i in range(N)]\nparity = [0 for _ in range(N)]\nflag = [False for _ in range(N)]\nfor _ in range(M):\n    a, b = map(int, input().split())\n    edges[a - 1].add(b - 1)\n    edges[b - 1].add(a - 1)\n    degs[a - 1] += 1\n    degs[b - 1] += 1\nif M % 2 != 0:\n    print(- 1)\n    exit()\nQ = []\nfor i, d in enumerate(degs):\n    Q.append((d, i))\nheapq.heapify(Q)\nwhile len(Q) > 0:\n    _, u = Q[0]\n    heapq.heappop(Q)\n    if flag[u]:\n        continue\n    flag[u] = True\n    for i, v in enumerate(edges[u]):\n        edges[v].remove(u)\n        if parity[u] != 0 and i == 0:\n            print(u + 1, v + 1)\n            parity[u] = 1 - parity[u]\n        else:\n            print(v + 1, u + 1)\n            parity[v] = 1 - parity[v]\n        degs[v] -= 1\n        heapq.heappush(Q, (degs[v], v))\n", "id": "atcoder_AGC035_B"}
{"code": "def main():\n    import itertools\n    n, m = map(int, input().split())\n    li = [list(map(int, input().split()))[1:] for _ in range(m)]\n    p = tuple(map(int, input().split()))\n    q = set(sum(li, []))\n    r = set(range(1, n + 1))\n    v = r - q\n    ans = 0\n    for i in range(0, len(q) + 1):\n        for s in itertools.combinations(q, i):\n            for u, w in zip(li, p):\n                s = set(s)\n                if len(s & set(u)) % 2 != w:\n                    break\n            else:\n                ans += 2 ** (len(v))\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "id": "atcoder_ABC128_C"}
{"code": "n = int(input())\narr = list(map(float, input().split()))\narr = sorted([x - int(x) for x in arr if x - int(x) != 0])\no = 2 * n - len(arr)\narr_sum = sum(arr)\nres = int(2e9)\nfor i in range(n + 1):\n    if i + o >= n:\n        res = min(res, abs(i - arr_sum))\nprint(\"%.3f\" % res)\n", "id": "codeforces_351_A"}
{"code": "from collections import Counter, defaultdict, deque\nfrom heapq import heappop, heappush, heapify\nimport sys\nimport bisect\nimport math\nimport itertools\nimport pprint\nimport fractions\nsys.setrecursionlimit(10 ** 8)\nmod = 10 ** 9 + 7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\n\nn, ta, ao = inpl()\nta -= 1\nao -= 1\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = inpl()\n    g[a - 1].append(b - 1)\n    g[b - 1].append(a - 1)\nta_dist = [None] * n\nta_dist[ta] = 0\nao_dist = [None] * n\nao_dist[ao] = 0\n\n\ndef ta_dfs(node):\n    for v in g[node]:\n        if ta_dist[v] != None:\n            continue\n        ta_dist[v] = ta_dist[node] + 1\n        ta_dfs(v)\n\n\ndef ao_dfs(node):\n    for v in g[node]:\n        if ao_dist[v] != None:\n            continue\n        ao_dist[v] = ao_dist[node] + 1\n        ao_dfs(v)\n\n\nao_dfs(ao)\nta_dfs(ta)\nres = 0\nfor i in range(n):\n    if ta_dist[i] > ao_dist[i]:\n        continue\n    res = max(res, ao_dist[i])\nprint(res - 1)\n", "id": "atcoder_ABC148_F"}
{"code": "def main():\n    from sys import setrecursionlimit, stdin\n    from os import environ\n    from collections import defaultdict, deque, Counter\n    from math import ceil, floor, gcd\n    from itertools import accumulate, combinations, combinations_with_replacement\n    setrecursionlimit(10 ** 6)\n    dbg = (lambda * something: print(* something)\n           ) if 'TERM_PROGRAM' in environ else lambda * x: 0\n\n    def input(): return stdin.readline().rstrip()\n    def LMIIS(): return list(map(int, input().split()))\n    def II(): return int(input())\n    P = 10 ** 9 + 7\n    INF = 10 ** 9 + 10\n    sa, sb = input().split()\n    a = int(sa)\n    b = int(float(sb) * 100 + 0.1)\n    print(a * b // 100)\n\n\nmain()\n", "id": "atcoder_ABC169_C"}
{"code": "max_level = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nx.pop(0)\ny.pop(0)\nx = set(x)\ny = set(y)\nif 0 in x:\n    x.discard(0)\nelif 0 in y:\n    y.discard(0)\nz = x.union(y)\nif len(z) != max_level:\n    print(\"Oh, my keyboard!\")\nelse:\n    print(\"I become the guy.\")\n", "id": "codeforces_469_A"}
{"code": "import sys\nimport itertools\n\n\ndef solve(N: int, x: \"List[int]\", y: \"List[int]\"):\n    indices = [i for i in range(N)]\n    permutations = itertools.permutations(indices)\n    distances = []\n    for permutation in permutations:\n        total_distance = 0\n        for i in range(0, N - 1):\n            f, t = permutation[i: i + 2]\n            distance = ((x[t] - x[f]) ** 2 + (y[t] - y[f]) ** 2) ** 0.5\n            total_distance += distance\n        distances.append(total_distance)\n    result = sum(distances) / len(distances)\n    print(result)\n    return\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))\n    x = [int()] * (N)\n    y = [int()] * (N)\n    for i in range(N):\n        x[i] = int(next(tokens))\n        y[i] = int(next(tokens))\n    solve(N, x, y)\n\n\nif __name__ == \"__main__\":\n    main()\n", "id": "atcoder_ABC145_C"}
{"code": "n, k = map(int, input().split())\nv = input()\nd = [\"LEFT\", \"RIGHT\"]\nf = k - 1 < n - k\nm = min(k - 1, n - k)\na = []\nfor i in range(0, m):\n    a.append(d[not f])\nfor i in v[:: - 1 + 2 * f]:\n    a.append(\"PRINT \" + i)\n    a.append(d[f])\nprint(* a[: - 1], sep=\"\\n\")\n", "id": "codeforces_412_A"}
{"code": "def s():\n    input()\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(1, len(a)):\n        if a[i] != a[i - 1] and a[i] < a[i - 1] * 2:\n            return 'YES'\n    return 'NO'\n\n\nprint(s())\n", "id": "codeforces_108_B"}
{"code": "s = list(input())\nx = True\ndt = {}\nfor i in s:\n    if i in dt:\n        dt[i] += 1\n    else:\n        dt[i] = 1\ncnt = 0\nx = True\nfor key, value in dt.items():\n    if value % 2 != 0 and cnt < 1:\n        cnt += 1\n    elif value % 2 != 0 and cnt >= 1:\n        x = False\n        break\nif x:\n    print(\"First\")\nelif not x and len(s) % 2 == 0:\n    print(\"Second\")\nelif not x and len(s) % 2 != 0:\n    print(\"First\")\n", "id": "codeforces_276_B"}
{"code": "n = int(input())\ncake = []\nhappiness = 0\nchocCount = 0\nnfat = 1\nfor i in range(n):\n    line = str(input())\n    cake.append(line)\n    for j in line:\n        if (j == 'C'):\n            chocCount += 1\n    if (chocCount > 1):\n        for i in range(chocCount, chocCount - 2, - 1):\n            nfat *= i\n        happiness += nfat / 2\n    nfat = 1\n    chocCount = 0\nposCount = 0\nfor j in range(n):\n    for i in range(n):\n        if (cake[i][j] == 'C'):\n            chocCount += 1\n    if (chocCount > 1):\n        for i in range(chocCount, chocCount - 2, - 1):\n            nfat *= i\n        happiness += nfat / 2\n    nfat = 1\n    chocCount = 0\nprint(int(happiness))\n", "id": "codeforces_629_A"}
{"code": "n = int(input())\nm = input().split()\npossible = True\nfor i in set(m):\n    if m.count(i) >= n / 2 + 1:\n        possible = False\n        break\nprint('YES' if possible else 'NO')\n", "id": "codeforces_296_A"}
{"code": "I = input\nn, m = map(int, I().split())\nb = [1] * n * 2\nb[0] = b[n - 1] = b[n] = b[2 * n - 1] = 0\nfor i in range(m):\n    r, c = map(int, I().split())\n    b[r - 1] = b[n + c - 1] = 0\nif n % 2 and b[n // 2] and b[n + n // 2]:\n    b[n // 2] = 0\nprint(sum(b))\n", "id": "codeforces_333_B"}
{"code": "import sys\n\n\ndef solve(n, ls_xyh):\n    x0 = None\n    for i in range(n):\n        if ls_xyh[i][2] > 0:\n            [x0, y0, h0] = ls_xyh[i]\n            break\n    cands = [(cx, cy, h0 + abs(cx - x0) + abs(cy - y0))\n             for cx in range(101) for cy in range(101)]\n    for [x, y, h] in ls_xyh:\n        cands = [(cx, cy, ch) for (cx, cy, ch) in cands if max(\n            ch - abs(cx - x) - abs(cy - y), 0) == h]\n    (xx, yy, hh) = cands[0]\n    return ' '.join([str(xx), str(yy), str(hh)])\n\n\ndef readQuestion():\n    ws = sys.stdin.readline().strip().split()\n    n = int(ws[0])\n    ls_xyh = [list(map(int, sys.stdin.readline().strip().split()))\n              for j in range(n)]\n    return (n, ls_xyh)\n\n\ndef main():\n    print(solve(* readQuestion()))\n\n\nmain()\n", "id": "atcoder_ABC112_C"}
{"code": "n, m = map(int, input().split())\nl = []\nfor i in range(n):\n    s = input()\n    s = list(s)\n    for j in range(m):\n        if s[j] == '.':\n            if (i + j) & 1:\n                s[j] = 'W'\n            else:\n                s[j] = 'B'\n    l.append(s)\nfor c in l:\n    print(\"\".join(c))\n", "id": "codeforces_445_A"}
{"code": "def main():\n    K = int(input())\n    S = input()\n    if len(S) <= K:\n        return S\n    return S[: K] + '...'\n\n\nif __name__ == '__main__':\n    print(main())\n", "id": "atcoder_ABC168_B"}
{"code": "from collections import deque\nimport sys\ninput = sys.stdin.readline\n\n\ndef bfs(v, N, G, E):\n    visited = [0] * N\n    queue = deque()\n    K = - 1\n    node2color = [- 1 for _ in range(N)]\n    queue.append(v)\n    visited[v] = 1\n    while queue:\n        q = queue.popleft()\n        color = 0\n        for nex in G[q]:\n            if visited[nex]:\n                continue\n            visited[nex] = 1\n            color += 1\n            if color == node2color[q]:\n                color += 1\n            node2color[nex] = color\n            E[(min(q, nex), max(q, nex))] = color\n            queue.append(nex)\n        K = max(K, color)\n    return K\n\n\ndef main():\n    N = int(input())\n    G = [deque() for _ in range(N)]\n    E = dict()\n    for i in range(N - 1):\n        a, b = map(lambda x: int(x) - 1, input().split())\n        G[a].append(b)\n        G[b].append(a)\n        E[(a, b)] = 0\n    K = bfs(0, N, G, E)\n    print(K)\n    for value in E.values():\n        print(value)\n\n\nmain()\n", "id": "atcoder_ABC146_D"}
{"code": "import sys\nn, t = map(int, input().split())\ns = list([int(x) for x in input().split()])\ncurrent_cell = 0\nwhile current_cell <= t:\n    current_cell += s[current_cell - 1]\n    if current_cell == t:\n        print(\"YES\")\n        sys.exit()\n    else:\n        continue\nprint(\"NO\")\n", "id": "codeforces_500_A"}
{"code": "D, G = map(int, input().split())\nPC = [tuple(map(int, input().split())) for _ in range(D)]\nans = 10 ** 9\nfor i in range(2 ** D):\n    score = 0\n    problem = 0\n    for j in range(D):\n        if (i >> j) & 1:\n            score += 100 * (j + 1) * PC[j][0] + PC[j][1]\n            problem += PC[j][0]\n    if score > G:\n        continue\n    left = G - score\n    for j in range(D):\n        if (i >> j) & 1:\n            continue\n        if left > 100 * (j + 1) * PC[j][0] + PC[j][1]:\n            pass\n        else:\n            tmp = (left + (100 * (j + 1)) - 1) // (100 * (j + 1))\n            ans = min(ans, problem + min(tmp, PC[j][0]))\nprint(ans)\n", "id": "atcoder_ABC104_C"}
{"code": "import fractions\nimport math\nn, num = map(int, input().split())\nnum_set = set(map(lambda x: int(x), input().split()))\ntwo_times_set = set()\nfor i in num_set:\n    for j in range(1, 30):\n        i //= 2\n        if i % 2 != 0:\n            two_times_set.add(j)\n            break\n    if len(two_times_set) != 1:\n        print(0)\n        break\nelse:\n    num_list = list(num_set)\n    lcm = num_list[0]\n    for i in range(1, len(num_list)):\n        lcm = lcm * num_list[i] // fractions.gcd(lcm, num_list[i])\n    print((num - lcm // 2) // (lcm) + 1)\n", "id": "atcoder_ABC150_D"}
{"code": "n = int(input())\nnumber = list(map(int, list(input())))\nh1 = 0\nh2 = 0\nx = 0\nfor i in range(n):\n    if number[i] != 4 and number[i] != 7:\n        print(\"NO\")\n        x += 1\n        break\n    if i < n // 2:\n        h1 += number[i]\n    else:\n        h2 += number[i]\nif not x:\n    if h1 == h2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "id": "codeforces_146_A"}
{"code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nx = 0\ny = 0\nz = 0\nfor i in a:\n    x += i\nfor i in b:\n    y += i\nfor i in c:\n    z += i\nprint(abs(x - y))\nprint(abs(y - z))\n", "id": "codeforces_519_B"}
{"code": "pya = int(input())\narre = []\nwhile pya:\n    pya -= 1\n    arre.append(input().lower())\noString = input()\nlowString = oString.lower()\nletter1 = input()[0].lower()\nletter2 = 'a' if letter1.lower() != 'a' else 'b'\nvalid = [0 for i in range(len(oString))]\nsetcito = set()\nfor x in arre:\n    if lowString.find(x) >= 0:\n        wat = 0\n        while True:\n            index = lowString.find(x, wat)\n            if index < 0:\n                break\n            for i in range(index, index + len(x)):\n                setcito.add(i)\n            wat = index + 1\noString = list(oString)\nfor i in setcito:\n    letter = letter1 if lowString[i] != letter1 else letter2\n    oString[i] = letter if oString[i].islower() else letter.upper()\nfor x in oString:\n    print(x, end=\"\")\nprint()\n", "id": "codeforces_95_A"}
{"code": "n = int(input())\ns = []\nfor i in range(n):\n    k = input()\n    s.append(k)\nflag = 0\nd1 = []\nd2 = []\nrem = set()\nfor i in range(n):\n    for j in range(n):\n        if (i == j):\n            d1.append(s[i][j])\n        if (i == n - j - 1):\n            d2.append(s[i][j])\n        if (i != j and i != n - j - 1):\n            rem.add(s[i][j])\nif (len(rem) != 1):\n    print('NO')\nelif (d1 != d2):\n    print('NO')\nelif (len(set(d1)) != 1):\n    print('NO')\nelif (set(d1) == rem):\n    print('NO')\nelse:\n    print('YES')\n", "id": "codeforces_404_A"}
{"code": "class BIT:\n    def __init__(self, N):\n        self.size = N\n        self.tree = [0] * (N + 1)\n        self.depth = n.bit_length()\n\n    def _bitsum(self, i):\n        ret = 0\n        while i:\n            ret += self.tree[i]\n            i ^= i & - i\n        return ret\n\n    def bitsum(self, l, r=None):\n        if r is None:\n            return self._bitsum(l)\n        else:\n            return self._bitsum(r) - self._bitsum(l)\n\n    def bitadd(self, i, x):\n        i += 1\n        while i <= self.size:\n            self.tree[i] += x\n            i += i & - i\n        return\n\n\nn = int(input())\nm = n * (n + 1) // 4\na = list(map(int, input().split()))\nd = dict()\n_a = sorted(set(a + [0]))\nfor i, x in enumerate(_a):\n    d[x] = i\na = [d[x] for x in a]\n\n\ndef check(X):\n    b = [0] + [(y >= X) * 2 - 1 for y in a]\n    for i in range(n):\n        b[i + 1] += b[i]\n    c = min(b)\n    b = [x - c for x in b]\n    bit = BIT(max(b) + 2)\n    ans = 0\n    for x in b:\n        ans += bit.bitsum(x + 1)\n        bit.bitadd(x, 1)\n    return ans >= m\n\n\nt = [len(_a), 0]\nwhile t[0] - t[1] > 1:\n    mid = (t[0] + t[1]) // 2\n    t[check(mid)] = mid\nprint(_a[t[1]])\n", "id": "atcoder_ABC107_D"}
{"code": "n, m = map(int, input().split())\nc = set(s.find(\"S\") - s.find(\"G\") for s in (input() for _ in range(n)))\nprint(- 1 if any(a < 0 for a in c) else len(c))\n", "id": "codeforces_400_B"}
{"code": "from cmd import IDENTCHARS\nn = int(input())\nl = 1\nr = n\nwhile (l < r):\n    mid = l + (r - l) // 2\n    idxcnt = mid * (mid + 1) / 2\n    if (idxcnt < n):\n        l = mid + 1\n    else:\n        r = mid\nl -= 1\nidxcnt = l * (l + 1) / 2\nprint(int(n - idxcnt))\n", "id": "codeforces_622_A"}
{"code": "def main():\n    n, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [[None for _ in [0] * n] for _ in [0] * n]\n    for i in range(n):\n        m = a[i]\n        for j in range(n):\n            k = i - j\n            if k < 0:\n                k += n\n            m = min(m, a[k])\n            b[j][i] = m\n    m = 10 ** 15\n    for i, j in enumerate(b):\n        m = min(m, sum(j) + x * i)\n    print(m)\n\n\nmain()\n", "id": "atcoder_AGC004_B"}
{"code": "def task4(A, B, n):\n    for X in range(- 1000, 1001):\n        if A * (X ** n) == B:\n            return X\n    return \"No solution\"\n\n\n[A, B, n] = input().split()\nprint(task4(int(A), int(B), int(n)))\n", "id": "codeforces_30_A"}
{"code": "import random\ninput()\nA = [int(_) for _ in input().split()]\nA = [A[0]] + [j for i, j in zip(A, A[1:]) if i >= j]\nN = len(A)\n\n\ndef cut(array, index):\n    if index < 1:\n        return []\n    if index <= array[0][0]:\n        return [(index, array[0][1])]\n    for _ in range(len(array) - 1, 0, - 1):\n        if array[_ - 1][0] < index:\n            return array[: _] + [(index, array[_][1])]\n\n\ndef is_possible(K):\n    dp = [(A[0], 0)]\n    for a in A[1:]:\n        if a <= dp[- 1][0]:\n            dp = cut(dp, a)\n        else:\n            dp += [(a, 0)]\n        is_added = False\n        for j in range(len(dp) - 1, - 1, - 1):\n            if dp[j][1] < K - 1:\n                dp = cut(dp, dp[j][0] - 1) + [(dp[j][0], dp[j][1] + 1)]\n                if dp[- 1][0] < a:\n                    dp += [(a, 0)]\n                is_added = True\n                break\n        if not is_added:\n            return False\n    return True\n\n\ndef bis(x, y):\n    if y == x + 1:\n        return y\n    elif is_possible((x + y) // 2):\n        return bis(x, (x + y) // 2)\n    else:\n        return bis((x + y) // 2, y)\n\n\nprint(bis(0, N))\n", "id": "atcoder_AGC029_C"}
{"code": "def na(): return list(map(int, input().split()))\n\n\nn, x = na()\na = sorted(na())\nans = 0\nif a[0] > x:\n    print(0)\n    exit()\nfor i in a:\n    if i > x:\n        x = 0\n        break\n    x -= i\n    ans += 1\nif x != 0:\n    ans -= 1\nprint(ans)\n", "id": "atcoder_AGC027_A"}
{"code": "import numpy as np\nimport sys\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\nN = int(input())\nM = 10 ** 6\nA = np.array(input().split(), dtype=np.int64)\nNsq = 10 ** 3\nfact = np.arange(M, dtype=np.int64).reshape(Nsq, Nsq)\nfact[0, 0] = 1\nfor n in range(1, Nsq):\n    fact[:, n] *= fact[:, n - 1]\n    fact[:, n] %= MOD\nfor n in range(1, Nsq):\n    fact[n] *= fact[n - 1, - 1]\n    fact[n] %= MOD\nfact = fact.ravel()\nj = np.arange(N)\ninv = np.array([pow(i + 1, MOD - 2, MOD) for i in range(N)])\ninv = np.cumsum(inv) % MOD\ntemp = inv[j] + inv[N - 1 - j] - 1\nans = (A * temp % MOD).sum()\nans %= MOD\nans *= fact[N]\nans %= MOD\nprint(ans)\n", "id": "atcoder_AGC028_B"}
{"code": "from sys import stdin, stdout, setrecursionlimit\nfrom math import gcd, ceil, sqrt\nfrom collections import Counter\nfrom bisect import bisect_left, bisect_right\ndef ii1(): return int(stdin.readline().strip())\ndef is1(): return stdin.readline().strip()\n\n\ndef iia(): return list(map(int, stdin.readline().strip().split()))\ndef isa(): return stdin.readline().strip().split()\n\n\nsetrecursionlimit(100000)\nmod = 1000000007\nk = ii1()\nt = 0\nfor i in range(1, k + 1):\n    t = (t % k) * 10 + 7\n    if t % k == 0:\n        print(i)\n        break\nelse:\n    print(- 1)\n", "id": "atcoder_ABC174_C"}
{"code": "import sys\ninput = sys.stdin.readline\nn = int(input())\nw = list(map(int, input().split()))\nc = 2\nfor i in w:\n    if i == 1:\n        print(c)\n    elif i % 2 == 0:\n        c = 3 - c\n        print(c)\n    else:\n        print(c)\n", "id": "codeforces_705_B"}
{"code": "import math\nimport numpy as np\nfrom fractions import gcd\nimport fractions\nimport statistics\nimport collections\nfrom functools import reduce\nimport itertools\nN = int(input())\nA = [int(input()) for i in range(5)]\nprint(math.ceil(N / min(A)) + 4)\n", "id": "atcoder_ABC123_C"}
{"code": "import numpy as np\nimport sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy, copy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(* (MAP() for _ in range(n)))\n\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\nN = INT()\nS = [input() for _ in range(N)]\nmarch = [\"M\", \"A\", \"R\", \"C\", \"H\"]\nmarch_lis = [0] * 5\nfor s in S:\n    if s[0].upper() in march:\n        march_lis[march.index(s[0].upper())] += 1\nans = 0\nfor x, y, z in combinations(march_lis, 3):\n    ans += x * y * z\nprint(ans)\n", "id": "atcoder_ABC089_C"}
{"code": "from math import prod\ninput()\na = input()\nprint(0 if a.count(\"1\") == 0 else prod(\n    [i.count(\"0\") + 1 for i in a.strip(\"0 \").split('1')]))\n", "id": "codeforces_617_B"}
{"code": "k, n, w = input().split()\nif 1 <= int(k) and int(w) <= 1000:\n    total = 0\n    for i in range(1, int(w) + 1):\n        total += i * int(k)\n    if total > int(n):\n        print(total - int(n))\n    else:\n        print(0)\n", "id": "codeforces_546_A"}
{"code": "from math import gcd\nx = int(input())\nprint(360 // gcd(360, x))\n", "id": "atcoder_AGC046_A"}
{"code": "n, m = map(int, input().split())\ni = 1\nwhile m >= i:\n    m -= i\n    i = (i % n) + 1\nprint(m)\n", "id": "codeforces_92_A"}
{"code": "n = int(input())\nq = []\ncount = 0\nfor i in range(n):\n    a = input().split()\n    q.append(a)\nfor j in q:\n    for k in q:\n        if k == j:\n            continue\n        elif j[0] == k[len(k) - 1]:\n            count += 1\n        else:\n            continue\nprint(count)\n", "id": "codeforces_268_A"}
{"code": "t = []\nfor i in range(4):\n    l = list(map(str, input()))\n    t.append(l)\nblack = 0\nwhite = 0\ncorrect = 0\nfor i in range(3):\n    for j in range(3):\n        if t[i][j] == '#':\n            black += 1\n        else:\n            white += 1\n        if t[i][j + 1] == '#':\n            black += 1\n        else:\n            white += 1\n        if t[i + 1][j] == '#':\n            black += 1\n        else:\n            white += 1\n        if t[i + 1][j + 1] == '#':\n            black += 1\n        else:\n            white += 1\n        if (black == 0 or black == 3 or white == 0 or white == 3 or white == 4 or black == 4):\n            correct = 1\n            break\n        black = 0\n        white = 0\nif correct == 1:\n    print('YES')\nelse:\n    print('NO')\n", "id": "codeforces_287_A"}
{"code": "from operator import itemgetter\nN = int(input())\nA = [(i + 1, int(x)) for i, x in enumerate(input().split())]\nA_ = sorted(A, key=itemgetter(1))\nA__ = [a[0] for a in A_]\nfor i in A__[: - 1]:\n    print(i, end=' ')\nprint(A__[- 1])\n", "id": "atcoder_ABC142_C"}
{"code": "def main():\n    N = int(input())\n    P = [int(input()) for _ in range(N)]\n    editorial(N, P)\n\n\ndef editorial(N, P):\n    if N == 1:\n        print(0)\n        return\n    a = [0] * (N + 1)\n    for i, p in enumerate(P):\n        a[p] = i\n    tmp = 1\n    max_len = 1\n    for i in range(1, N):\n        if a[i] < a[i + 1]:\n            tmp += 1\n            max_len = max(max_len, tmp)\n        else:\n            tmp = 1\n    ans = N - max_len\n    print(ans)\n\n\ndef WA(N, P):\n    tmp = 0\n    ans = 0\n    for i, p in enumerate(P):\n        if i == 0 or P[i - 1] + 1 == p:\n            tmp += 1\n        else:\n            ans = max(ans, tmp)\n            tmp = 1\n    print(N - ans)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_AGC024_B"}
{"code": "def G(a, b):\n    while a % b != 0:\n        a, b = b, a % b\n    return b\n\n\ndef L(a, b):\n    return a * b // G(a, b)\n\n\nl = input().split(' ')\nx, y, a, b = int(l[0]), int(l[1]), int(l[2]), int(l[3])\nlcm = L(x, y)\nprint(b // lcm - (a - 1) // lcm)\n", "id": "codeforces_340_A"}
{"code": "n, m = map(int, input().strip().split())\nout = [0 for _ in range(n)]\ncomp = [i + 2 for i in range(n)]\nfor _ in range(m):\n    l, r, x = map(int, input().strip().split())\n    t = l\n    while t <= r:\n        next_val = comp[t - 1]\n        if out[t - 1] == 0 and t != x:\n            out[t - 1] = x\n        comp[t - 1] = r + 1 if t >= x else x\n        t = next_val\nprint(* out)\n", "id": "codeforces_356_A"}
{"code": "H, W, N = map(int, input().split())\ns_r, s_c = map(int, input().split())\nS = input()\nT = input()\nJudge = False\nS_L, S_R, S_U, S_D = 0, 0, 0, 0\nT_L, T_R, T_U, T_D = 0, 0, 0, 0\nfor x in range(N):\n    if S[x] == 'L':\n        S_L += 1\n        if S_L - T_R - s_c == 0:\n            Judge = True\n    elif S[x] == 'R':\n        S_R += 1\n        if s_c + (S_R - T_L) == W + 1:\n            Judge = True\n    elif S[x] == 'U':\n        S_U += 1\n        if S_U - T_D - s_r == 0:\n            Judge = True\n    elif S[x] == 'D':\n        S_D += 1\n        if s_r + (S_D - T_U) == H + 1:\n            Judge = True\n    if T[x] == 'L':\n        if S_R - T_L + s_c != 1:\n            T_L += 1\n    if T[x] == 'R':\n        if s_c + (T_R - S_L) != W:\n            T_R += 1\n    if T[x] == 'U':\n        if S_D - T_U + s_r != 1:\n            T_U += 1\n    if T[x] == 'D':\n        if s_r + (T_D - S_U) != H:\n            T_D += 1\nif Judge:\n    print('NO')\nelse:\n    print('YES')\n", "id": "atcoder_AGC033_B"}
{"code": "import sys\nimport math\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 7)\n\n\ndef input():\n    return sys.stdin.readline()[: - 1]\n\n\nmod = 10 ** 9 + 7\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\n\n\ndef Line(N, num):\n    if N <= 0:\n        return [[]] * num\n    elif num == 1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(* read_all))\n\n\ndef my_sign(x):\n    return (x > 0) - (x < 0)\n\n\nN = I()\na = III()\nmax_val = 0\nmax_sign = 0\nmax_index = - 1\nfor i, a0 in enumerate(a):\n    if abs(a0) > max_val:\n        max_val = abs(a0)\n        max_sign = my_sign(a0)\n        max_index = i\nif max_sign == 0:\n    print(0)\nelif max_sign == 1:\n    print(2 * N - 1)\n    for i in range(N):\n        print(max_index + 1, i + 1)\n    for i in range(N - 1):\n        print(i + 1, i + 2)\nelse:\n    print(2 * N - 1)\n    for i in range(N):\n        print(max_index + 1, i + 1)\n    for i in range(1, N)[:: - 1]:\n        print(i + 1, i)\n", "id": "atcoder_ARC086_B"}
{"code": "n, d = map(int, input().split())\nx = []\nm = 0\nq = 0\nx = input().split()\nfor i in range(len(x)):\n    x[i] = int(x[i])\nfor a in range(len(x) - 1):\n    if x[a] >= x[a + 1]:\n        q = int((x[a] - x[a + 1]) / d + 1)\n        m = m + q\n        x[a + 1] = x[a + 1] + q * d\nprint(m)\n", "id": "codeforces_11_A"}
{"code": "vamshi, z = map(int, input().split())\nprint((vamshi // z + 1) * z)\n", "id": "codeforces_678_A"}
{"code": "s = input()\nresult = \"\"\ni = 0\nwhile i < len(s):\n    if s[i] == \".\":\n        result += '0'\n    else:\n        i += 1\n        if s[i] == \".\":\n            result += '1'\n        else:\n            result += '2'\n    i += 1\nprint(result)\n", "id": "codeforces_32_B"}
{"code": "a, b = map(int, input().split())\nhole = 1\ni = 0\ncheck = True\nwhile check:\n    if hole >= b:\n        check = False\n    else:\n        hole = a * (i + 1) - i\n        i += 1\nprint(i)\n", "id": "atcoder_ABC139_B"}
{"code": "N = int(input())\n\n\ndef aaa(n):\n    if int(n) > N:\n        return 0\n    ans = 1 if set(str(int(n))) == {'7', '5', '3'} else 0\n    for i in '753':\n        ans += aaa(n + i)\n    return ans\n\n\nprint(aaa('0'))\n", "id": "atcoder_ABC114_C"}
{"code": "n = int(input())\ns = list(input())\nt = list(input())\nif s == t:\n    print(n)\nelse:\n    cnt = 0\n    for i in range(n):\n        for j in range(n - i):\n            if s[i + j] != t[j]:\n                break\n            if j == n - i - 1:\n                cnt = n - i\n    print(2 * n - cnt)\n", "id": "atcoder_AGC006_A"}
{"code": "from collections import deque\nimport scipy\nimport numpy\nfrom _collections import deque\n\n\ndef parser():\n    while 1:\n        data = list(input().split(' '))\n        for number in data:\n            if len(number) > 0:\n                yield (number)\n\n\ninput_parser = parser()\n\n\ndef gw():\n    global input_parser\n    return next(input_parser)\n\n\ndef gi():\n    data = gw()\n    return int(data)\n\n\nMOD = int(1e9 + 7)\nN = gi()\nK = gi()\nS = gw()\nseg_cnt = 0\nfor i in range(0, N - 1):\n    if S[i] != S[i + 1]:\n        seg_cnt += 1\ncur_happy = N - 1 - seg_cnt\nif 2 * K >= seg_cnt:\n    ans = N - 1\nelse:\n    ans = cur_happy + 2 * K\nprint(ans)\n", "id": "atcoder_ABC140_D"}
{"code": "import math\nimport itertools\nimport fractions\nimport heapq\nimport collections\nimport bisect\nimport sys\nimport queue\nimport copy\nsys.setrecursionlimit(10 ** 7)\ninf = 10 ** 20\nmod = 10 ** 9 + 7\ndd = [(- 1, 0), (0, 1), (1, 0), (0, - 1)]\nddn = [(- 1, 0), (- 1, 1), (0, 1), (1, 1),\n       (1, 0), (1, - 1), (0, - 1), (- 1, - 1)]\n\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\n\ndef main():\n    a, b, c, d = LI()\n    return max(a * c, b * d, a * d, b * c)\n\n\nprint(main())\n", "id": "atcoder_ABC178_B"}
{"code": "import sys\ninput = sys.stdin.readline\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\n\ndef main():\n    mod = 10 ** 9 + 7\n    N, A, B = MI()\n    ans = 0\n    rep = N // (A + B)\n    ans += rep * A\n    res = N - rep * (A + B)\n    ans += min(res, A)\n    print(ans)\n\n\nmain()\n", "id": "atcoder_ABC158_B"}
{"code": "from itertools import accumulate\nn, q = map(int, input().split())\ns = input()\nproblems = [list(map(int, input().split())) for _ in range(q)]\n\n\ndef count(total, i):\n    return total + 1 if s[i - 1: i + 1] == 'AC' else total\n\n\ncumsum = list(accumulate([0] + list(range(1, n)), count))\nfor l, r in problems:\n    print(cumsum[r - 1] - cumsum[l - 1])\n", "id": "atcoder_ABC122_C"}
{"code": "inp = int(input())\nlista = []\nlista = [int(x) for x in input().split()]\nfor i in range(len(lista)):\n    if i == 0:\n        print(f\"{lista[i+1] - lista[i]} {lista[len(lista)-1] - lista[i]}\")\n        continue\n    elif i == len(lista) - 1:\n        print(\n            f\"{lista[len(lista)-1] - lista[len(lista)-2]} {lista[len(lista)-1] - lista[0]}\")\n        continue\n    elif lista[i] - lista[i - 1] > lista[i + 1] - lista[i]:\n        print(lista[i + 1] - lista[i], end=\" \")\n    else:\n        print(lista[i] - lista[i - 1], end=\" \")\n    if lista[len(lista) - 1] - lista[i] > lista[i] - lista[0]:\n        print(lista[len(lista) - 1] - lista[i])\n    else:\n        print(lista[i] - lista[0])\n", "id": "codeforces_567_A"}
{"code": "import heapq\nn, m = map(int, input().split())\nx = []\ny = []\nfor i in range(n):\n    day, salary = map(int, input().split())\n    heapq.heappush(x, (- day, - salary))\nwhile x:\n    d, s = heapq.heappop(x)\n    r = m - len(y)\n    if r >= - d:\n        heapq.heappush(y, - s)\n    else:\n        heapq.heappush(y, - s)\n        heapq.heappop(y)\nprint(sum(y))\n", "id": "atcoder_ABC137_D"}
{"code": "N = int(input())\nx = [eval(input().replace('JPY', '* 1.0').replace('BTC', '* 380000.0'))\n     for i in range(N)]\nprint(sum(x))\n", "id": "atcoder_ABC119_B"}
{"code": "def R(): return map(int, input().split())\n\n\nn, m, s, f = R()\nif s < f:\n    d = 1\n    c = 'R'\nelse:\n    d = - 1\n    c = 'L'\nres = \"\"\ni = 1\nj = s\nt, l, r = R()\nk = 1\nwhile j != f:\n    if i > t and k < m:\n        t, l, r = R()\n        k += 1\n    if i == t and (l <= j <= r or l <= j + d <= r):\n        res += 'X'\n    else:\n        res += c\n        j += d\n    i += 1\nprint(res)\n", "id": "codeforces_342_B"}
{"code": "y = int(input())\narr = [int(i) for i in input().split()]\nfor i in range(len(arr)):\n    for j in range(len(arr)):\n        if i == j:\n            continue\n        for k in range(len(arr)):\n            if arr[k] != arr[j] and arr[k] != arr[i] and arr[k] == arr[i] + arr[j]:\n                print(k + 1, j + 1, i + 1)\n                exit()\nprint(- 1)\n", "id": "codeforces_31_A"}
{"code": "A = list(map(int, input().split()))\nif A[1] <= A[2] or A[3] <= A[0]:\n    print(0)\nelse:\n    A.sort()\n    print(A[2] - A[1])\n", "id": "atcoder_ABC070_B"}
{"code": "def root(x): return x if par[x] == x else root(par[x])\ndef same(x, y): return root(x) == root(y)\n\n\ndef unite(* z):\n    x, y = map(root, z)\n    if x != y:\n        if rank[x] < rank[y]:\n            par[x] = y\n            size[y] += size[x]\n        else:\n            par[y] = x\n            size[x] += size[y]\n            if rank[x] == rank[y]:\n                rank[x] += 1\n\n\nn, * a = map(int, open(0).read().split())\n* par, = range(n)\nrank = [1] * n\nsize = [1] * n\nb = [0] * n\nfor i, t in enumerate(a):\n    b[t - 1] = i\nc = 0\nfor k in b[:: - 1]:\n    l = r = 1\n    if k > 0 and a[k - 1] > a[k]:\n        l += size[root(k - 1)]\n        unite(k - 1, k)\n    if k + 1 < n and a[k + 1] > a[k]:\n        r += size[root(k + 1)]\n        unite(k + 1, k)\n    c += l * r * a[k]\nprint(c)\n", "id": "atcoder_AGC005_B"}
{"code": "import fractions\nimport functools\nN = int(input())\nA = list(map(int, input().split()))\ngcd = functools.reduce(fractions.gcd, A)\nprint(gcd)\n", "id": "atcoder_ABC118_C"}
{"code": "import math\ngiven = input(\"\")\nl1 = given.split()\nl1 = [int(x) for x in l1]\nx1 = l1[0]\ny1 = l1[1]\nx2 = l1[2]\ny2 = l1[3]\ndenominator = x2 - x1\nnumerator = y2 - y1\nif denominator != 0:\n    quotient = numerator / denominator\nif numerator == 0:\n    d = int(math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2))\n    x4 = x1\n    x3 = x2\n    y3 = y2 + d\n    y4 = y1 + d\n    print(f\"{x3} {y3} {x4} {y4}\")\nelif denominator == 0:\n    y4 = y2\n    y3 = y1\n    d = int(math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2))\n    x4 = x1 + d\n    x3 = x2 + d\n    print(f\"{x3} {y3} {x4} {y4}\")\nelif quotient == 1:\n    x4 = x2\n    x3 = x1\n    y4 = y1\n    y3 = y2\n    print(f\"{x3} {y3} {x4} {y4}\")\nelif quotient == - 1:\n    x4 = x1\n    x3 = x2\n    y4 = y2\n    y3 = y1\n    print(f\"{x3} {y3} {x4} {y4}\")\nelse:\n    print('-1')\n", "id": "codeforces_459_A"}
{"code": "import math\nmenu = []\nfor _ in range(5):\n    m = input()\n    e = int(m[- 1])\n    if e == 0:\n        e = 10\n    menu.append([int(m), e])\nmenu.sort(key=lambda x: x[1])\nans = 0\nfor m in menu[1:]:\n    ans += math.ceil(m[0] / 10) * 10\nprint(ans + menu[0][0])\n", "id": "atcoder_ABC123_B"}
{"code": "n, k = map(int, input().split())\nx = 0\nif k <= max(n ** 2 // 2, n ** 2 - (n ** 2 // 2)):\n    print('YES')\n    for i in range(n):\n        for j in range(n):\n            if i % 2 == j % 2 and x < k:\n                print('L', end='')\n                x += 1\n            else:\n                print('S', end='')\n        print()\nelse:\n    print('NO')\n", "id": "codeforces_544_B"}
{"code": "class CodeforcesTask397BSolution:\n    def __init__(self):\n        self.result = ''\n        self.t = 0\n        self.queries = []\n\n    def read_input(self):\n        self.t = int(input())\n        for _ in range(self.t):\n            self.queries.append([int(x) for x in input().split(\" \")])\n\n    def process_task(self):\n        res = []\n        for query in self.queries:\n            k = query[0] // query[1]\n            res.append(\"Yes\" if k * query[2] >= query[0] else \"No\")\n        self.result = \"\\n\".join(res)\n\n    def get_result(self):\n        return self.result\n\n\nif __name__ == \"__main__\":\n    Solution = CodeforcesTask397BSolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n", "id": "codeforces_397_B"}
{"code": "import os\nimport sys\nimport io\nimport math\nfrom array import array\nfrom math import *\ndef I(): return [* map(int, sys.stdin.readline().split())]\ndef IS(): return input()\n\n\ndef IN(): return int(input())\ndef IF(): return float(input())\n\n\nn = IN()\nl = I()\nf = 1\nl.sort()\nc = 0\nfor i in l:\n    if i > c:\n        c += 1\nprint(c + 1)\n", "id": "codeforces_682_B"}
{"code": "import sys\n\n\ndef solve(S: str, T: str, A: int, B: int, U: str):\n    if S == U:\n        A -= 1\n    if T == U:\n        B -= 1\n    print(A, B)\n    return\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    S = next(tokens)\n    T = next(tokens)\n    A = int(next(tokens))\n    B = int(next(tokens))\n    U = next(tokens)\n    solve(S, T, A, B, U)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_ABC154_A"}
{"code": "import numpy as np\nh, w = map(int, input().split())\ngraph = [[0 if i == '#' else float('inf')\n          for i in list(input())] for _ in range(h)]\ngraph = np.array(graph)\nfor x in range(w - 1):\n    graph[:, x + 1] = np.minimum(graph[:, x] + 1, graph[:, x + 1])\nfor x in range(w - 1, 0, - 1):\n    graph[:, x - 1] = np.minimum(graph[:, x] + 1, graph[:, x - 1])\nfor y in range(h - 1):\n    graph[y + 1, :] = np.minimum(graph[y, :] + 1, graph[y + 1, :])\nfor y in range(h - 1, 0, - 1):\n    graph[y - 1, :] = np.minimum(graph[y, :] + 1, graph[y - 1, :])\nprint(int(np.max(graph)))\n", "id": "atcoder_AGC033_A"}
{"code": "import queue\nn, m = map(int, input().split())\nvis, ci, cb, cc = [0] * (n + 1), 0, 0, 0\ng = [[] for i in range(n + 1)]\n\n\ndef dfs(x):\n    stk, flag = queue.LifoQueue(), True\n    stk.put((x, 1))\n    while not stk.empty():\n        u, col = stk.get()\n        if vis[u]:\n            flag &= (vis[u] == col)\n            continue\n        vis[u] = col\n        for i in g[u]:\n            stk.put((i, 3 - col))\n    return flag\n\n\nfor i in range(m):\n    u, v = map(int, input().split())\n    g[u] += [v]\n    g[v] += [u]\nfor i in range(1, n + 1):\n    if vis[i] == 0:\n        if len(g[i]) == 0:\n            ci += 1\n        else:\n            if dfs(i):\n                cb += 1\n            else:\n                cc += 1\nprint(ci * ci + 2 * ci * (n - ci) + cc * cc + 2 * cb * cc + 2 * cb * cb)\n", "id": "atcoder_AGC011_C"}
{"code": "n, a, b = [int(x) for x in input().split(\" \")]\nlista = [int(x) for x in input().split(\" \")]\nlistb = [int(x) for x in input().split(\" \")]\nfor k in range(n):\n    if k + 1 in lista:\n        print(1, end=\" \")\n    else:\n        print(2, end=\" \")\n", "id": "codeforces_421_A"}
{"code": "def ok(last4):\n    for i in range(4):\n        t = list(last4)\n        if i >= 1:\n            t[i], t[i - 1] = t[i - 1], t[i]\n        if ''.join(t).count('AGC') >= 1:\n            return False\n    return True\n\n\ndef dfs(cur, last3):\n    if last3 in memo[cur]:\n        return memo[cur][last3]\n    if cur == n:\n        return 1\n    ret = 0\n    for c in \"ACGT\":\n        if ok(last3 + c):\n            ret = (ret + dfs(cur + 1, last3[1:] + c)) % mod\n    memo[cur][last3] = ret\n    return ret\n\n\nn = int(input())\nmod = 10 ** 9 + 7\nmemo = [{} for i in range(n + 1)]\nprint(dfs(0, 'TTT'))\n", "id": "atcoder_ABC122_D"}
{"code": "import sys\ninput = sys.stdin.readline\nn = int(input())\nw = list(map(int, input().split()))\nx = sum(w)\nd = []\nfor i in range(n):\n    if (x - w[i]) / (n - 1) == w[i]:\n        d.append(i + 1)\nprint(len(d))\nprint(' '.join(map(str, d)))\n", "id": "codeforces_134_A"}
{"code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN, d, x = map(int, read().split())\n\n\ndef main(N, d, x):\n    ret = 0\n    while N:\n        ret += d + (N - 0.5) * x\n        d = d + (d / N) + (5 * x) / (2 * N)\n        x += 2 * x / N\n        N -= 1\n    return ret\n\n\nprint(main(N, d, x))\n", "id": "atcoder_AGC007_C"}
{"code": "a = input()\nvo = ['a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y']\nfor i in range(len(a) - 1, - 1, - 1):\n    if (a[i] == ' ' or a[i] == '?'):\n        continue\n    else:\n        if (a[i] in vo):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        break\n", "id": "codeforces_49_A"}
{"code": "from math import *\n\n\ndef next_int():\n    return int(input())\n\n\ndef next_ints():\n    return list(map(int, input().split()))\n\n\nn = next_int()\nt = 0\nfor i in range(n):\n    if i + 1 & 1:\n        t += 1\nprint(t / n)\n", "id": "atcoder_ABC142_A"}
{"code": "import sys\nsys.setrecursionlimit(10 ** 6)\n\n\ndef dfs(links, n, k, v, p):\n    height_from_leaf = 0\n    cut_count = 0\n    for u in links[v]:\n        if u == 0:\n            continue\n        hgt, cut = dfs(links, n, k, u, v)\n        height_from_leaf = max(height_from_leaf, hgt)\n        cut_count += cut\n    height_from_leaf += 1\n    if p != 0 and height_from_leaf == k:\n        height_from_leaf = 0\n        cut_count += 1\n    return height_from_leaf, cut_count\n\n\nn, k, * aaa = map(int, sys.stdin.buffer.read().split())\nlinks = [set() for _ in range(n)]\nfor i, a in enumerate(aaa):\n    a -= 1\n    links[a].add(i)\n_, ans = dfs(links, n, k, 0, 0)\nif aaa[0] != 1:\n    ans += 1\nprint(ans)\n", "id": "atcoder_AGC004_D"}
{"code": "n = input()\na = [\"10\", \"100\", \"1000\", \"10000\", \"100000\"]\nnew = sum(list(map(int, n)))\nif n in a:\n    print(10)\nelse:\n    print(new)\n", "id": "atcoder_AGC025_A"}
{"code": "def main():\n    N = int(input())\n    i = 1\n    ans = 0\n    while 10 ** i <= N:\n        ans += ((10 ** i) - (10 ** (i - 1)))\n        i += 2\n    ans += max(0, N - 10 ** (i - 1) + 1)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "id": "atcoder_ABC136_B"}
{"code": "def leapyear(n):\n    if (n % 400 == 0 or (n % 4 == 0 and n % 100 != 0)):\n        return \"y\"\n    else:\n        return \"n\"\n\n\nn = int(input())\nd = \"f\"\nif (n % 400 == 0 or (n % 4 == 0 and n % 100 != 0)):\n    ans = \"ly\"\nelse:\n    ans = \"nly\"\nwhile (True):\n    if (n % 400 == 0 or (n % 4 == 0 and n % 100 != 0)):\n        if (d == \"m\"):\n            d = \"w\"\n            n += 1\n        elif (d == \"t\"):\n            d = \"th\"\n            n += 1\n        elif (d == \"w\"):\n            d = \"f\"\n            n += 1\n        elif (d == \"th\"):\n            d = \"sa\"\n            n += 1\n        elif (d == \"f\"):\n            d = \"s\"\n            n += 1\n        elif (d == \"sa\"):\n            d = \"m\"\n            n += 1\n        elif (d == \"s\"):\n            d = \"t\"\n            n += 1\n    else:\n        if (d == \"m\"):\n            d = \"t\"\n            n += 1\n        elif (d == \"t\"):\n            d = \"w\"\n            n += 1\n        elif (d == \"w\"):\n            d = \"th\"\n            n += 1\n        elif (d == \"th\"):\n            d = \"f\"\n            n += 1\n        elif (d == \"f\"):\n            d = \"sa\"\n            n += 1\n        elif (d == \"sa\"):\n            d = \"s\"\n            n += 1\n        elif (d == \"s\"):\n            d = \"m\"\n            n += 1\n    if (d == \"f\" and ans == \"ly\" and leapyear(n) == \"y\"):\n        break\n    elif (d == \"f\" and ans == \"nly\" and leapyear(n) == \"n\"):\n        break\nprint(n)\n", "id": "codeforces_678_B"}
{"code": "from itertools import permutations\nN, X = [int(_) for _ in input().split()]\n\n\ndef calc(x):\n    def sub(y, debug=0):\n        if debug:\n            print(\"D\", y)\n        while len(y) > 1:\n            y = [sorted(y[i: i + 3])[1] for i in range(len(y) - 2)]\n            if debug:\n                print(\"D\", y)\n        return y\n    y = sub(x)\n    if y[0] == 2:\n        pass\n        sub(x, 1)\n        print(\"=\", x)\n    return y[0]\n\n\nif X == 1 or X == N * 2 - 1:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n    if X == N * 2 - 2:\n        xs = list(range(N - 1, X + 2)) + list(range(1, N - 1))\n    else:\n        ys = list(range(1, X - 1)) + list(range(X + 3, N * 2))\n        xs = ys[: N - 3] + [X + 2, X - 1, X, X + 1] + ys[N - 3:]\n    for x in xs:\n        print(x)\n", "id": "atcoder_AGC006_B"}
{"code": "import os\nfrom sys import stdin, stdout\n\n\ndef solve(tc):\n    a = int(stdin.readline().strip())\n    print(1 if a == 0 else 0)\n\n\ntcs = 1\ntc = 1\nwhile tc <= tcs:\n    solve(tc)\n    tc += 1\n", "id": "atcoder_ABC178_A"}
{"code": "n, a = int(input()), list(map(int, input().split()))\nif sum(a) % (n * (n + 1) / 2):\n    print(\"NO\")\nelse:\n    k = sum(a) / (n * (n + 1) / 2)\n    a += [a[0]]\n    if sum([(k - i + j) % n for i, j in zip(a[1:], a)]) or sum([(k - i + j) / n >= 0 for i, j in zip(a[1:], a)]) != n:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n", "id": "atcoder_AGC010_B"}
{"code": "def check(lis, k, mid):\n    for i in lis:\n        if (i % mid == 0):\n            k += 1\n        k -= (i // mid)\n    return k >= 0\n\n\nn, k = map(int, input().split())\nlis = list(map(int, input().split()))\na, b = 1, max(lis)\nans = b\nwhile (a <= b):\n    mid = (a + b) // 2\n    if (check(lis, k, mid)):\n        ans = mid\n        b = mid - 1\n    else:\n        a = mid + 1\nprint(ans)\n", "id": "atcoder_ABC174_E"}
{"code": "n = int(input())\nc = 0\nfor i in range(n):\n    l1 = list(map(int, input().split()))\n    if sum(l1) > 1:\n        c = c + 1\nprint(c)\n", "id": "codeforces_231_A"}
{"code": "stdin = input()\ns = stdin\nresult = \"Yes\" if \"A\" in s and \"B\" in s else \"No\"\nprint(result)\n", "id": "atcoder_ABC158_A"}
{"code": "K, N = list(map(int, input().split()))\ndprint = lambda * x: x\n\n\ndef cmb(n, r, mod):\n    if (r < 0 or r > n):\n        return 0\n    r = min(r, n - r)\n    return g1[n] * g2[r] * g2[n - r] % mod\n\n\nmod = 998244353\n__N = 8000\ng1 = [1, 1]\ng2 = [1, 1]\ninverse = [0, 1]\nfor i in range(2, __N + 1):\n    g1.append((g1[- 1] * i) % mod)\n    inverse.append((- inverse[mod % i] * (mod // i)) % mod)\n    g2.append((g2[- 1] * inverse[- 1]) % mod)\n\n\ndef kumiawase(p, q):\n    return cmb(p + q - 1, q - 1, mod)\n\n\ndef solve(n):\n    assert n <= K + 1\n    ans = 0\n    kumi = (n - 1) // 2\n    for p in range(kumi + 1):\n        if p > N:\n            break\n        ans += 2 ** p * cmb(kumi, p, mod) * kumiawase(N - p,\n                                                      p + (K - kumi * 2 - int(n % 2 == 0)))\n        if n % 2 == 0 and N - p - 1 >= 0:\n            ans += 2 ** p * cmb(kumi, p, mod) * kumiawase(N -\n                                                          p - 1, p + (K - kumi * 2 - int(n % 2 == 0)))\n    return ans\n\n\nans = []\nfor i in range(2, 2 * K + 1):\n    if i <= K + 1:\n        tmp = solve(i) % 998244353\n        ans.append(tmp)\n        print(tmp)\n    else:\n        print(ans[- i + K])\n", "id": "atcoder_ARC102_C"}
{"code": "n, L, R, QL, QR = map(int, input().split())\nW = list(map(int, input().split()))\nsum_el = [0]\nfor i in range(1, n + 1):\n    sum_el.append(W[i - 1] + sum_el[i - 1])\nanswer = QR * (n - 1) + sum_el[n] * R\nfor i in range(1, n + 1):\n    energy = L * sum_el[i] + R * (sum_el[n] - sum_el[i])\n    if i > (n - i):\n        energy = energy + (i - (n - i) - 1) * QL\n    elif (n - i) > i:\n        energy = energy + ((n - i) - i - 1) * QR\n    if energy < answer:\n        answer = energy\nprint(answer)\n", "id": "codeforces_354_A"}
{"code": "l, r = [int(x) for x in input().split()]\ncurr = r\ns = 0\nwhile curr:\n    s += 1\n    curr //= 10\nfirst = 10 ** s\nsecond = first // 2\nans = - 1\nfor i in [l, r, first, second]:\n    if i >= l and i <= r:\n        curr = i\n        rev = ''\n        for k in str(curr):\n            rev += str(9 - int(k))\n        ans = max(ans, int(rev) * curr)\nprint(ans)\n", "id": "codeforces_86_A"}
{"code": "from bisect import bisect_right, bisect_left\nn, * l = map(int, open(0).read().split())\nl.sort()\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        a = l[i]\n        b = l[j]\n        right = bisect_left(l, a + b)\n        left = bisect_right(l, max(a - b, b - a))\n        tmp = max(0, right - left)\n        if left <= i < right:\n            tmp -= 1\n        if left <= j < right:\n            tmp -= 1\n        ans += tmp\nprint(ans // 3)\n", "id": "atcoder_ABC143_D"}
{"code": "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import groupby, accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(* (MAP() for _ in range(n)))\n\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\nN = INT()\nA = LIST()\nA = [k for k, g in groupby(A)]\nN = len(A)\ni = 1\nans = 0\nwhile i < N - 1:\n    if A[i - 1] < A[i] > A[i + 1] or A[i - 1] > A[i] < A[i + 1]:\n        ans += 1\n        i += 1\n    i += 1\nprint(ans + 1)\n", "id": "atcoder_AGC013_A"}
{"code": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nans = n - 1\nlast = 0\nfor i in l:\n    ans += abs(last - i) + 1\n    last = i\nprint(ans)\n", "id": "codeforces_265_B"}
{"code": "N, K = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\nll = - 10 ** 18 - 1\nrr = 10 ** 18 + 1\nwhile ll + 1 < rr:\n    x = (ll + rr) // 2\n    tot = 0\n    for i in range(N):\n        if A[i] < 0:\n            l = - 1\n            r = N\n            while l + 1 < r:\n                c = (l + r) // 2\n                if A[i] * A[c] < x:\n                    r = c\n                else:\n                    l = c\n            tot += N - r\n        else:\n            l = - 1\n            r = N\n            while l + 1 < r:\n                c = (l + r) // 2\n                if A[i] * A[c] < x:\n                    l = c\n                else:\n                    r = c\n            tot += r\n        if A[i] * A[i] < x:\n            tot -= 1\n    tot //= 2\n    if tot < K:\n        ll = x\n    else:\n        rr = x\nprint(ll)\n", "id": "atcoder_ABC155_D"}
{"code": "import re\nn = int(input())\nans, sumL = 1, 0\nfor s in re.split(\"[.?!]\", input()):\n    s = s.strip() + '.'\n    L = len(s)\n    if L > 1:\n        if L > n:\n            print(\"Impossible\")\n            exit()\n        if sumL + L + (sumL > 0) > n:\n            ans += 1\n            sumL = L\n        else:\n            sumL = sumL + L + (sumL > 0)\nprint(ans)\n", "id": "codeforces_70_B"}
{"code": "n = int(input())\nm = [[int(x) for x in input().split()] for i in range(n)]\nm.sort(reverse=True)\na = m[0]\nfor i in m[1:]:\n    if i[1] > a[1]:\n        print('Happy Alex')\n        break\n    a = i\nelse:\n    print('Poor Alex')\n", "id": "codeforces_456_A"}
{"code": "n = int(input())\nl1 = list(map(int, input().split()))\nl1.sort()\na = l1[- 1]\nb = l1[0]\nif a == b:\n    print(a - b, (n) * (n - 1) // 2)\nelse:\n    ac = l1.count(a)\n    bc = l1.count(b)\n    print(a - b, ac * bc)\n", "id": "codeforces_459_B"}
{"code": "import collections\nimport heapq\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO, IOBase\nimport os\ndef value(): return tuple(map(int, input().split()))\ndef values(): return tuple(map(int, sys.stdin.readline().split()))\ndef inlst(): return [int(i) for i in input().split()]\ndef inlsts(): return [int(i) for i in sys.stdin.readline().split()]\ndef inp(): return int(input())\ndef inps(): return int(sys.stdin.readline())\ndef instr(): return input()\ndef stlst(): return [i for i in input().split()]\n\n\ndef help(a, b, l):\n    tot = []\n    for i in range(b):\n        tot.append(l[i * a: i * a + a])\n    for i in zip(* tot):\n        if sum((i)) == b:\n            return True\n    return False\n\n\ndef solve():\n    tot = []\n    x = instr()\n    s = []\n    for i in x:\n        if i == 'O':\n            s.append(0)\n        else:\n            s.append(1)\n    for i in range(1, 13):\n        if 12 % i == 0:\n            if help(i, 12 // i, s):\n                tot.append((12 // i, i))\n    print(len(tot), end=' ')\n    for a, b in sorted(tot):\n        print(f'{a}x{b}', end=' ')\n    print()\n\n\nif __name__ == \"__main__\":\n    for i in range(inp()):\n        solve()\n", "id": "codeforces_400_A"}
{"code": "import re\ncandeleIntere, b = map(int, input().split())\ns = 0\nrestoSciolte = 0\nwhile candeleIntere > 0 or restoSciolte >= b:\n    candeleIntere += restoSciolte // b\n    restoSciolte %= b\n    s += candeleIntere\n    restoSciolte += candeleIntere % b\n    candeleIntere //= b\nprint(s)\n", "id": "codeforces_379_A"}
{"code": "from statistics import median\nfrom fractions import gcd\nfrom itertools import combinations\nfrom collections import deque\nfrom collections import defaultdict\nimport bisect\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10 ** 9 + 7\n\n\ndef readInts():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n = int(input())\n    A = readInts()\n    A = sorted(A)\n    ans = 0\n    for i in range(len(A) - 2, len(A) - 2 * n - 1, - 2):\n        ans += A[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_AGC012_A"}
{"code": "s = input()\nn = int(input())\nans = 0\nfor i in range(n):\n    x = input()\n    a, b = 0, 0\n    for j in s:\n        if j == x[0]:\n            a += 1\n        elif j == x[1]:\n            b += 1\n        else:\n            ans = ans + min(a, b)\n            a, b = 0, 0\n    ans = ans + min(a, b)\nprint(ans)\n", "id": "codeforces_154_A"}
{"code": "u = input\nn, k = map(int, u().split())\nM = [int(i) for i in u().split()]\nm = 0\nfor j in range(n):\n    for p in range(n):\n        if (0 == M[p]):\n            print(p + 1, end=' ')\n            break\n    for l in range(p + 1 - k):\n        M[l] -= 1\n    M[p] -= 1\n", "id": "codeforces_67_B"}
{"code": "def main():\n    input()\n    return nPairsWithCommonFX(map(int, input().split()))\n\n\ndef nPairsWithCommonFX(sequence):\n    storage = {}\n    FXs = []\n    for value in sequence:\n        y = f(value)\n        if y not in storage:\n            storage[y] = [value]\n            FXs.append(y)\n        else:\n            storage[y].append(value)\n    return (sum(len(storage[y]) * len(storage[y]) for y in FXs) - sum(len(storage[y]) for y in FXs)) // 2\n\n\ndef f(n):\n    y = 1\n    while n != 1:\n        if n % 2:\n            y += 1\n        n //= 2\n    return y\n\n\nif __name__ == '__main__':\n    print(main())\n", "id": "codeforces_272_B"}
{"code": "n, k = map(int, input().split())\ns = input()\ncount = [0] * 26\nfor c in s:\n    count[ord(c) - ord(\"A\")] += 1\ncount.sort(reverse=True)\nres = 0\nfor i in range(26):\n    if count[i] >= k:\n        res += k * k\n        print(res)\n        exit()\n    k -= count[i]\n    res += count[i] ** 2\nprint(res)\n", "id": "codeforces_462_B"}
{"code": "from itertools import accumulate\nN, X, * A = map(int, open(0).read().split())\nS = list(accumulate(A))\nans = float(\"inf\")\nfor k, s in enumerate(S, 1):\n    E = k * X + 2 * sum(S[j] for j in range(N - 2 * k - 1, - 1, - k))\n    ans = min(ans, E)\nprint(ans + N * X + 5 * S[- 1])\n", "id": "atcoder_AGC027_B"}
{"code": "N, M = map(int, input().split())\nS = input()\nT = input()\nlist_S = list(S)\nlist_T = list(T)\nNumber_i = [i for i in range(N)]\nNumber_iMN = []\nfor i in Number_i:\n    Number_iMN.append(i * M / N)\nNumber_j = [j for j in range(M)]\nKaburi_j = list(set(Number_iMN) & set(Number_j))\nKaburi_i = []\nfor j in Kaburi_j:\n    Kaburi_i.append(int(j * N / M))\ncounter = 0\nFlag = 0\nKaburi_Size = len(Kaburi_i)\nwhile counter <= Kaburi_Size - 1:\n    if list_S[int(Kaburi_i[counter])] == list_T[int(Kaburi_j[counter])]:\n        pass\n    else:\n        Flag = 1\n        break\n    counter += 1\n\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\n\nif Flag == 1:\n    print(- 1)\nelse:\n    print(int(N * M / gcd(N, M)))\n", "id": "atcoder_AGC028_A"}
{"code": "t, s, q = map(int, input().split())\nans = 0\nwhile (s < t):\n    s *= q\n    ans += 1\nprint(ans)\n", "id": "codeforces_569_A"}
{"code": "import sys\ninput_methods = ['clipboard', 'file', 'key']\nusing_method = 0\ninput_method = input_methods[using_method]\ndef IN(): return map(int, input().split())\n\n\nmod = 1000000007\n\n\ndef main_b():\n    s = input()\n    pp = 0\n    na = 0\n    for i, c in enumerate(s[:: - 1]):\n        cc = na + int(c)\n        na = 0\n        if cc <= 4:\n            pp += cc\n        else:\n            na = 1\n            if i == len(s) - 1:\n                pp += 1\n            pp += 10 - cc\n    print(pp)\n\n\ndef main():\n    s = input()\n    pmin = 1000\n    mmin = 0\n    s = '0' + s\n    for c in s[:: - 1]:\n        v = int(c)\n        npmin = min(pmin + 10 - (v + 1), mmin + 10 - v)\n        nmmin = min(pmin + v + 1, mmin + v)\n        pmin = npmin\n        mmin = nmmin\n    return min(pmin, mmin)\n\n\nisTest = False\n\n\ndef pa(v):\n    if isTest:\n        print(v)\n\n\ndef input_clipboard():\n    import clipboard\n    input_text = clipboard.get()\n    input_l = input_text.splitlines()\n    for l in input_l:\n        yield l\n\n\nif __name__ == \"__main__\":\n    if sys.platform == 'ios':\n        if input_method == input_methods[0]:\n            ic = input_clipboard()\n            def input(): return ic.__next__()\n        elif input_method == input_methods[1]:\n            sys.stdin = open('inputFile.txt')\n        else:\n            pass\n        isTest = True\n    else:\n        pass\n    ret = main()\n    if ret is not None:\n        print(ret)\n", "id": "atcoder_ABC155_E"}
{"code": "L = []\ninput()\nr = 1\nfor k in input().split():\n    L += [r] * int(k)\n    r += 1\ninput()\nfor j in input().split():\n    print(L[int(j) - 1])\n", "id": "codeforces_474_B"}
{"code": "n, m = map(int, input().split())\nsa = input().count(\"-\")\nsa = min([n - sa, sa])\nss = []\nfor _ in range(m):\n    a, b = map(int, input().split())\n    b -= a\n    ss.append((b % 2 and b <= sa << 1) and \"1\\n\" or \"0\\n\")\nprint(\"\".join(ss))\n", "id": "codeforces_302_A"}
{"code": "A, B, C, D = map(int, input().split())\nm = 998244353\nd = [[0] * (D + 1) for _ in range(C + 1)]\nd[A][B] = 1\nfor i in range(A, C + 1):\n    for j in range(B, D + 1):\n        d[i][j] += (d[i][j - 1] * i + d[i - 1][j] * j -\n                    d[i - 1][j - 1] * (i - 1) * (j - 1)) % m\nprint(d[C][D])\n", "id": "atcoder_AGC046_B"}
{"code": "n = int(input())\nlist = [int(x) % 2 for x in input().split()]\nif sum(list) == 1:\n    print(list.index(1) + 1)\nelse:\n    print(list.index(0) + 1)\n", "id": "codeforces_25_A"}
{"code": "from collections import Counter\nimport sys\ninput = sys.stdin.readline\nn = int(input())\ns = input()[: - 1].split()\nw = Counter(s)\ns = s[:: - 1]\nc, a = - 1, 0\nfor i in w:\n    if w[i] == max(w.values()):\n        if s.index(i) > c:\n            a = i\n            c = s.index(i)\nprint(a)\n", "id": "codeforces_637_A"}
{"code": "def substract(a, b):\n    if a > b:\n        total = 0\n        while a > 0 and b > 0:\n            total += int(a / b)\n            a = a % b\n            if a > 0:\n                total += int(b / a)\n                b = b % a\n        return total\n    if a < b:\n        total = 0\n        while a > 0 and b > 0:\n            total += int(b / a)\n            b = b % a\n            if b > 0:\n                total += int(a / b)\n                a = a % b\n        return total\n    if a == b:\n        return 1\n\n\nn = int(input())\nlst = []\nfor i in range(0, n):\n    a, b = map(int, input().split())\n    lst.append(substract(a, b))\nfor i in lst:\n    print(i)\n", "id": "codeforces_267_A"}
{"code": "def binary_search(key):\n    bad, good = - 1, len(ans)\n    while good - bad > 1:\n        mid = (bad + good) // 2\n        if ans[mid][- 1] < key:\n            good = mid\n        else:\n            bad = mid\n    return good\n\n\nN = int(input())\nans = []\nfor _ in range(N):\n    A = int(input())\n    idx = binary_search(A)\n    if idx == len(ans):\n        ans.append([A])\n    else:\n        ans[idx].append(A)\nprint(len(ans))\n", "id": "atcoder_ABC134_E"}
{"code": "n = int(input())\ni, j = 1, n * n\nwhile i < j:\n    print(i, j)\n    i += 1\n    j -= 1\n", "id": "codeforces_334_A"}
{"code": "n = int(input())\nlst = list(map(int, input().split()))\nlst.sort()\nlst.reverse()\nod = 0\nfor i in lst:\n    if (i & 1):\n        od += 1\nsum = 0\nok = 0\nfor i in range(n):\n    if (lst[i] % 2 == 0):\n        sum += lst[i]\n    else:\n        if (ok or od > 1):\n            sum += lst[i]\n            od -= 1\n            ok = not ok\nprint(sum)\n", "id": "codeforces_621_A"}
{"code": "A, B = map(int, input().split())\nans = A - 2 * B\nif ans < 0:\n    ans = 0\nprint(ans)\n", "id": "atcoder_ABC143_A"}
{"code": "import math\nN = int(input())\nS = input()\n\n\ndef calculate(n, s):\n    arr = list(s)\n    rNum = arr.count(\"R\")\n    gNum = arr.count(\"G\")\n    bNum = arr.count(\"B\")\n    sum = 0\n    for step in range(1, math.ceil(n / 2) + 1):\n        for i in range(n - 2 * step):\n            s = \"\".join([arr[i], arr[i + step], arr[i + step * 2]])\n            if s == \"RGB\" or s == \"RBG\" or s == \"BGR\" or s == \"BRG\" or s == \"GBR\" or s == \"GRB\":\n                sum = sum + 1\n    print(rNum * gNum * bNum - sum)\n\n\ncalculate(N, S)\n", "id": "atcoder_ABC162_D"}
{"code": "import sys\ndef I(): return (int(sys.stdin.readline()))\ndef LI(): return ([int(x) for x in sys.stdin.readline().split()])\n\n\ndef main():\n    N = I()\n    S = sorted(LI(), reverse=True)\n    flag = [True] * len(S)\n    cur = []\n    cur.append(S[0])\n    flag[0] = False\n    for i in range(N):\n        j = 0\n        jM = len(cur)\n        for k in range(len(S)):\n            if flag[k] and S[k] < cur[j]:\n                cur.append(S[k])\n                j += 1\n                flag[k] = False\n                if j == jM:\n                    break\n        else:\n            return (\"No\")\n        cur.sort(reverse=True)\n    return (\"Yes\")\n\n\nif __name__ == \"__main__\":\n    print(main())\n", "id": "atcoder_ABC140_F"}
{"code": "import sys\nimport math\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 7)\n\n\ndef input():\n    return sys.stdin.readline()[: - 1]\n\n\nmod = 10 ** 9 + 7\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\n\n\ndef Line(N):\n    read_all = [tuple(map(int, input().split())) for _ in range(N)]\n    return map(list, zip(* read_all))\n\n\nS = str(input())\nn = len(S)\nif n == 1:\n    if S == '5' or S == '?':\n        print(1)\n    else:\n        print(0)\n    exit()\ndp = [[0] * 13 for i in range(n)]\nfor i in range(n):\n    if i == 0:\n        if S[i] != '?':\n            dp[i][int(S[i])] += 1\n        else:\n            for j in range(10):\n                dp[i][j] += 1\n    else:\n        if S[i] != '?':\n            for k in range(13):\n                dp[i][(k * 10 + int(S[i])) % 13] += dp[i - 1][k]\n        else:\n            for j in range(10):\n                for k in range(13):\n                    dp[i][(k * 10 + j) % 13] += dp[i - 1][k]\n        for k in range(13):\n            dp[i][k] %= mod\nprint(dp[n - 1][5])\n", "id": "atcoder_ABC135_D"}
{"code": "print(input().replace(\",\", \" \"))\n", "id": "atcoder_ABC051_A"}
{"code": "x, y, z, k = [int(_) for _ in input().split()]\na = [int(_) for _ in input().split()]\nb = [int(_) for _ in input().split()]\nc = [int(_) for _ in input().split()]\nab = []\nfor i in range(x):\n    for j in range(y):\n        ab.append(a[i] + b[j])\nab.sort(reverse=True)\nabc = []\nfor i in range(min(k, x * y)):\n    for j in range(z):\n        abc.append(ab[i] + c[j])\nabc.sort(reverse=True)\nfor i in range(k):\n    print(abc[i])\n", "id": "atcoder_ABC123_D"}
{"code": "from collections import deque\nfrom collections import Counter\nfrom itertools import product, permutations, combinations\nfrom operator import itemgetter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_left, bisect_right, bisect\nfrom fractions import gcd\nfrom math import ceil, floor, sqrt, cos, sin, pi, factorial\nimport sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 8)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\n\ndef main():\n    s = input()\n    if len(set(s)) == 1:\n        print(0)\n        sys.exit()\n    a = Counter(s)\n    ans = min(a.values()) * 2\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_ABC120_C"}
{"code": "n = int(input())\nwhile n % 2 == 0:\n    n /= 2\nif n == 1:\n    print('YES')\nelse:\n    print('NO')\n", "id": "codeforces_55_A"}
{"code": "from fractions import gcd\n\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\n\nMOD = 10 ** 9 + 7\nN = int(input())\nA = list(map(int, input().split()))\n_lcm = 1\nfor a in A:\n    _lcm = _lcm * a // gcd(_lcm, a)\nans = _lcm * sum([pow(s, MOD - 2, MOD) for s in A]) % MOD\nprint(int(ans % MOD))\n", "id": "atcoder_ABC152_E"}
{"code": "a, b = map(int, input().split())\nprint(min(a, b), (max(a, b) - min(a, b)) // 2)\n", "id": "codeforces_581_A"}
{"code": "s = str(input())\nmy_str = ''\nfor c in s:\n    if c == '0' or c == '1':\n        my_str += c\n    elif c == 'B' and len(my_str) != 0:\n        my_str = my_str[: len(my_str) - 1]\nprint(my_str)\n", "id": "atcoder_ABC043_B"}
{"code": "from collections import Counter\nimport sys\ninput = sys.stdin.readline\nn = int(input())\nw = Counter(map(int, input().split()))\nc = 0\nfor i in w:\n    if i == 0:\n        c += w[i] * (w[i] - 1)\n    else:\n        if - i in w:\n            c += w[i] * w[- i]\nprint(c // 2)\n", "id": "codeforces_131_B"}
{"code": "x, y = map(int, input().split())\nprint(max(x + y - 3 + ((y - x) % 3 > 0), 0))\ndef num_inp(): return int(input())\n\n\ndef arr_inp(): return list(map(int, input().split()))\ndef sp_inp(): return map(int, input().split())\ndef str_inp(): return input()\n", "id": "codeforces_651_A"}
{"code": "def _input(): return map(int, input().split())\n\n\nn, m = _input()\nlst = list(_input())\nl = {}\nfor i in range(n):\n    if lst[i] not in l:\n        l[lst[i]] = 1\n    else:\n        l[lst[i]] += 1\nres = 0\nfor i in range(n):\n    if l[lst[i]] > 1:\n        res += n - i - l[lst[i]]\n        l[lst[i]] -= 1\n    else:\n        res += n - i - 1\nprint(res)\n", "id": "codeforces_609_B"}
{"code": "n, m = map(int, input().split())\nif n < 1:\n    if m < 1:\n        print(n, m)\n        quit()\n    print(\"Impossible\")\n    quit()\nif m > n:\n    min = m\n    max = n + m - 1\n    print(min, max)\nif m <= n:\n    min = n\n    max = n + m - 1\n    if m == 0:\n        max = n\n    print(min, max)\n", "id": "codeforces_190_A"}
{"code": "import math\nfrom functools import reduce\nfrom collections import deque, Counter\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef get_nums_l():\n    return [int(s) for s in input().split(\" \")]\n\n\ndef get_nums_n(n):\n    return [int(input()) for _ in range(n)]\n\n\ndef get_all_int():\n    return map(int, open(0).read().split())\n\n\ndef rangeI(it, l, r):\n    for i, e in enumerate(it):\n        if l <= i < r:\n            yield e\n        elif l >= r:\n            break\n\n\ndef log(* args):\n    print(\"DEBUG:\", * args, file=sys.stderr)\n\n\nINF = 999999999999999999999999\nMOD = 10 ** 9 + 7\nn = int(input())\nif n == 1:\n    print(0)\n    exit()\n\n\ndef prime_factorize(n):\n    a = []\n    while n % 2 == 0:\n        a.append(2)\n        n //= 2\n    f = 3\n    while f * f <= n:\n        if n % f == 0:\n            a.append(f)\n            n //= f\n        else:\n            f += 2\n    if n != 1:\n        a.append(n)\n    return a\n    if len(arr) == 0:\n        arr.append((n, 1))\n    return arr\n\n\nfac_ = prime_factorize(n)\nfac = Counter(fac_)\nans = 0\nfor p, e in fac.items():\n    x = e\n    for i in range(1, 99999999):\n        if x >= i:\n            x -= i\n            ans += 1\n        else:\n            break\nprint(ans)\n", "id": "atcoder_ABC169_D"}
{"code": "h1, m1 = (map(int, input().split(':')))\nm1 += h1 * 60\nh2, m2 = (map(int, input().split(':')))\nm2 += h2 * 60\nm2 = m1 - m2\nm2 %= 1440\nprint(\"%02d:%02d\" % (m2 // 60, m2 % 60))\n", "id": "codeforces_387_A"}
{"code": "n = int(input())\nx = list(int(i) for i in input().split())\na = []\nb = []\nfor i in range(0, n):\n    if i % 2 == 0:\n        a.append(x[i])\n    else:\n        b.append(x[i])\ncnta = [0] * (100002 + 1)\ncntb = [0] * (100002 + 1)\nvala = 0\nvala1 = 0\nmaxCnta = 0\nmaxCnta1 = 0\nfor i in a:\n    cnta[i] += 1\nfor i in a:\n    if maxCnta < cnta[i]:\n        vala = i\n        maxCnta = cnta[i]\nfor i in a:\n    if maxCnta1 < cnta[i] and vala != i:\n        maxCnta1 = cnta[i]\n        vala1 = i\nvalb = 0\nvalb1 = 0\nmaxCntb = 0\nmaxCntb1 = 0\nfor i in b:\n    cntb[i] += 1\nfor i in b:\n    if maxCntb < cntb[i]:\n        valb = i\n        maxCntb = cntb[i]\nfor i in b:\n    if maxCntb1 < cntb[i] and valb != i:\n        maxCntb1 = cntb[i]\n        valb1 = i\nif valb != vala:\n    res = 0\n    for i in a:\n        if i != vala:\n            res += 1\n    for i in b:\n        if i != valb:\n            res += 1\n    print(res)\nelse:\n    resa = 0\n    resb = 0\n    resa1 = 0\n    resb1 = 0\n    for i in a:\n        if i != vala:\n            resa += 1\n        if i != vala1:\n            resa1 += 1\n    for i in b:\n        if i != valb:\n            resb += 1\n        if i != valb1:\n            resb1 += 1\n    print(min(resa + resb1, resa1 + resb))\n", "id": "atcoder_ABC111_C"}
{"code": "import sys\n\n\ndef main():\n    S, W = map(int, input().split())\n    print(\"unsafe\") if (S <= W) else print(\"safe\")\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_ABC164_A"}
{"code": "import sys\nN, K = map(int, input().split())\nlst = list(map(int, input().split()))\nlst_p = []\nlst_m = []\nfor i in range(N):\n    if lst[i] == 0:\n        K -= 1\n    if lst[i] > 0:\n        lst_p += [lst[i]]\n    elif lst[i] < 0:\n        lst_m += [lst[i]]\np = 0\nm = 0\nx, y = 0, len(lst_m) - 1\nlastx = len(lst_p)\nlasty = len(lst_m)\n\n\ndef check(k):\n    ans = 10 ** 9\n    for j in range(0, k + 1):\n        if j > lastx or k - j > lasty:\n            pass\n        else:\n            if j == 0:\n                p = 0\n            else:\n                p = lst_p[j - 1]\n            if k - j == 0:\n                m = 0\n            else:\n                m = lst_m[lasty - (k - j)]\n            ans = min(ans, 2 * p + abs(m), p + 2 * abs(m))\n    return ans\n\n\nprint(check(K))\n", "id": "atcoder_ABC107_C"}
{"code": "mod = 10 ** 9 + 7\nl = input()\nn = len(l)\ndp = [[0] * 2 for _ in range(n + 1)]\ndp[0][0] = 1\nfor i, c in enumerate(l):\n    if c == '0':\n        dp[i + 1][0] += dp[i][0]\n        dp[i + 1][1] += dp[i][1] * 3\n    else:\n        dp[i + 1][0] += dp[i][0] * 2\n        dp[i + 1][1] += dp[i][0]\n        dp[i + 1][1] += dp[i][1] * 3\n    dp[i + 1][0] %= mod\n    dp[i + 1][1] %= mod\nprint((dp[n][0] + dp[n][1]) % mod)\n", "id": "atcoder_ABC129_E"}
{"code": "n, m = map(int, input().split())\nl = list(map(int, input().split()))\nl2 = []\nfor i in l:\n    if i % m == 0:\n        l2.append(i // m)\n    else:\n        l2.append(i // m + 1)\nmx = max(l2)\nfor i in range(n):\n    if l2[i] == mx:\n        ind = i\nprint(ind + 1)\n", "id": "codeforces_450_A"}
{"code": "x, y = list(map(int, input().split()))\na = 0\nwhile x >= 0 and y >= 22 or x >= 1 and y >= 12 or x >= 2 and y >= 2:\n    if a:\n        if y >= 22:\n            y -= 22\n        elif x >= 1 and y >= 12:\n            x -= 1\n            y -= 12\n        else:\n            x -= 2\n            y -= 2\n    else:\n        if x >= 2 and y >= 2:\n            x -= 2\n            y -= 2\n        elif x >= 1 and y >= 12:\n            x -= 1\n            y -= 12\n        else:\n            y -= 22\n    a = 1 - a\nprint(['Ciel', 'Hanako'][1 - a])\n", "id": "codeforces_79_A"}
{"code": "import itertools\nn = int(input())\norig = list(itertools.permutations(list(range(1, n + 1))))\np = tuple(map(int, input().split()))\nq = tuple(map(int, input().split()))\npn = orig.index(p)\nqn = orig.index(q)\nprint(abs(pn - qn))\n", "id": "atcoder_ABC150_C"}
{"code": "a, b, t = map(int, input().split())\ncookie = 0\ntime = a\nwhile time <= t + 0.5:\n    cookie += b\n    time += a\nprint(cookie)\n", "id": "atcoder_ABC125_A"}
{"code": "from collections import defaultdict, deque\nfrom functools import lru_cache\nfrom heapq import heappush, heappop\nfrom typing import Counter\nfrom bisect import bisect_right, bisect_left\nimport math\nhpop = heappop\nhpush = heappush\n\n\ndef solution():\n    line = input()\n    bought_count = Counter(line)\n    line = input()\n    made_cout = Counter(line)\n    res = 0\n    for color in made_cout:\n        if color not in bought_count:\n            return print(- 1)\n        res += min(bought_count[color], made_cout[color])\n    print(res)\n\n\ndef main():\n    t = 1\n    for _ in range(t):\n        solution()\n\n\nmain()\n", "id": "codeforces_408_B"}
{"code": "N = int(input())\nA = list(map(int, input().split()))\nmn, mx = N + 1, - 1\nfor i in range(N):\n    if (i + 1 != A[i]):\n        mn = min(mn, i)\n        mx = max(mx, i)\nif (mx == - 1):\n    print('0 0')\nelse:\n    A = A[: mn] + A[mn: (mx + 1)][:: - 1] + A[(mx + 1):]\n    if (sorted(A) == A):\n        print(mn + 1, mx + 1)\n    else:\n        print('0 0')\n", "id": "codeforces_56_B"}
{"code": "txt = input()\ncu = 0\ncl = 0\nfor z in txt:\n    if z.islower():\n        cl = cl + 1\n    else:\n        cu = cu + 1\nif cu > cl:\n    out = txt.upper()\nelse:\n    out = txt.lower()\nprint(out)\n", "id": "codeforces_59_A"}
{"code": "import sys\nfrom collections import deque\ninput = sys.stdin.buffer.readline\nN = int(input())\nadj = [[] for _ in range(N + 1)]\nfor _ in range(N - 1):\n    a, b = map(int, input().split())\n    adj[a].append(b)\n    adj[b].append(a)\nque = deque()\nque.append(1)\nseen = [0] * (N + 1)\nseen[1] = 1\npar = [0] * (N + 1)\nchild_num = [0] * (N + 1)\nwhile que:\n    v = que.popleft()\n    for u in adj[v]:\n        if seen[u] == 0:\n            seen[u] = 1\n            par[u] = v\n            child_num[v] += 1\n            que.append(u)\nseq = deque()\nfor i in range(1, N + 1):\n    if child_num[i] == 0:\n        seq.append(i)\nwhile seq:\n    c = seq.pop()\n    seen[c] = 0\n    if seen[par[c]] == 0:\n        print('First')\n        exit()\n    seen[par[c]] = 0\n    child_num[par[par[c]]] -= 1\n    if child_num[par[par[c]]] == 0:\n        seq.append(par[par[c]])\nprint('Second')\n", "id": "atcoder_AGC014_D"}
{"code": "import queue\nn, b = list(map(int, input().split()))\n\n\nclass Task:\n    def __init__(self, time: int, duration: int, index: int) -> None:\n        super().__init__()\n        self.time = time\n        self.duration = duration\n        self.index = index\n\n\nremaining = queue.Queue()\nrunning = False\nfinish_time = 0\n\n\ndef run_task(remaining: queue.Queue, finish_time: int):\n    task_to_run = remaining.get()\n    finish_time = max(finish_time, task_to_run.time) + task_to_run.duration\n    result[task_to_run.index] = finish_time\n    return finish_time, result\n\n\nresult = {}\nfor i in range(n):\n    time, duration = list(map(int, input().split()))\n    task = Task(time, duration, index=i)\n    result.update({i: 0})\n    if task.time > finish_time and remaining.empty():\n        running = True\n        finish_time = task.time + task.duration\n        result[i] = finish_time\n    else:\n        if task.time >= finish_time and not remaining.empty():\n            finish_time, result = run_task(\n                remaining=remaining, finish_time=finish_time)\n        if remaining.qsize() < b:\n            remaining.put(task)\n        else:\n            result[i] = - 1\nwhile not remaining.empty():\n    finish_time, result = run_task(\n        remaining=remaining, finish_time=finish_time)\nfor key in result:\n    print(result.get(key))\n", "id": "codeforces_644_B"}
{"code": "(n, m) = [int(x) for x in input().split()]\np = [x for x in range(1, n + 1)]\nh = [int(x) for x in input().split()]\nhp = dict(zip(p, h))\npath = {i: [] for i in range(1, n + 1)}\nfor i in range(m):\n    (a, b) = [int(x) for x in input().split()]\n    path[a].append(b)\n    path[b].append(a)\nc = 0\nfor i, v in path.items():\n    f = 0\n    for j in v:\n        if hp[i] <= hp[j]:\n            f = 1\n            break\n    if f == 0:\n        c += 1\nprint(c)\n", "id": "atcoder_ABC166_C"}
{"code": "def num_inp(): return int(input())\n\n\ndef arr_inp(): return list(map(int, input().split()))\ndef sp_inp(): return map(int, input().split())\n\n\na = sorted(map(int, [* open(0)][1].split()))\nprint([a[0], - 1][any(x % a[0] for x in a)])\n", "id": "codeforces_299_A"}
{"code": "from collections import defaultdict\nimport sys\nsys.setrecursionlimit(10 ** 7)\ngraph = defaultdict(list)\nN, K = map(int, input().split())\nfor i in range(N - 1):\n    a, b = map(int, input().split())\n    graph[a - 1].append(b - 1)\n    graph[b - 1].append(a - 1)\nmod = 10 ** 9 + 7\n\n\ndef dfs(fro, to, f):\n    caseNum = f\n    colorNum = K - 1 if f == K else K - 2\n    for u in graph[fro]:\n        if u == to:\n            continue\n        pat = dfs(u, fro, colorNum)\n        if pat == 0:\n            caseNum = 0\n            break\n        caseNum = caseNum * pat % mod\n        colorNum -= 1\n    return caseNum\n\n\nans = dfs(0, - 1, K)\nprint(ans)\n", "id": "atcoder_ABC133_E"}
{"code": "import sys\ninput = sys.stdin.readline\nN = 368\nm = [0] * N\nf = [0] * N\nfor i in range(int(input())):\n    x, a, b = input()[: - 1].split()\n    a = int(a)\n    b = int(b) + 1\n    if x == 'M':\n        m[a] += 2\n        m[b] -= 2\n    else:\n        f[a] += 2\n        f[b] -= 2\na, b, c = 0, 0, 0\nfor i in range(N):\n    a += m[i]\n    b += f[i]\n    if min(a, b) > c:\n        c = min(a, b)\nprint(c)\n", "id": "codeforces_629_B"}
{"code": "n, k = map(int, input().split())\nprint(sum(sorted(list(map(int, input().split())))[: k]))\n", "id": "atcoder_ABC171_B"}
{"code": "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import sqrt, hypot, factorial, pi, sin, cos, radians\nif sys.version_info.minor >= 5:\n    from math import gcd\nelse:\n    from fractions import gcd\nfrom heapq import heappop, heappush, heapify, heappushpop\nfrom bisect import bisect_left, bisect_right\nfrom itertools import permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom functools import reduce, partial\nfrom fractions import Fraction\nfrom string import ascii_lowercase, ascii_uppercase, digits\ndef input(): return sys.stdin.readline().strip()\ndef ceil(a, b=1): return int(- (- a // b))\ndef round(x): return int((x * 2 + 1) // 2)\ndef fermat(x, y, MOD): return x * pow(y, MOD - 2, MOD) % MOD\ndef lcm(x, y): return (x * y) // gcd(x, y)\ndef lcm_list(nums): return reduce(lcm, nums, initial=1)\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\n\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\nq, h, s, d = MAP()\nn = INT()\nbest1L = min(q * 4, h * 2, s)\nbest2L = min(d, best1L * 2)\nif n % 2 == 0:\n    print(best2L * (n // 2))\nelse:\n    print(best2L * (n // 2) + best1L)\n", "id": "atcoder_AGC019_A"}
{"code": "LUCKY = \"abcd\"\nn = int(input())\ns = \"\"\nfor i in range(n):\n    s += LUCKY[i % 4]\nprint(s)\n", "id": "codeforces_110_B"}
{"code": "r, D, x = map(int, input().split())\nfor i in range(2, 12):\n    print(int((r ** (i - 1)) * (x + D / (1 - r)) - D / (1 - r)))\n", "id": "atcoder_ABC127_B"}
{"code": "n = int(input())\ninput_array = []\nfor i in range(n):\n    S, R, H, C = map(int, input().split())\n    input_array.append((S, R, H, C))\noutdated = []\nfor i in range(n):\n    for j in range(n):\n        if (input_array[i][0] < input_array[j][0] and input_array[i][1] < input_array[j][1] and input_array[i][2] < input_array[j][2]):\n            outdated.append(input_array[i])\noutdated = set(outdated)\nminimum_cost = 100000\ninput_number = 0\nfor i in range(n):\n    current_item = input_array[i]\n    cost = current_item[3]\n    if (current_item not in outdated and cost < minimum_cost):\n        minimum_cost = current_item[3]\n        input_number = i + 1\nprint(input_number)\n", "id": "codeforces_106_B"}
{"code": "s, l = (input(), 2019)\nm, a, r = ([1] + [0] * l, 0, 0)\nfor i, e in enumerate(s[:: - 1]):\n    a += int(e) * pow(10, i, l)\n    r += m[a % l]\n    m[a % l] += 1\nprint(r)\n", "id": "atcoder_ABC164_D"}
{"code": "t, m = map(int, input().split())\nalocuente = [0] * m\nind = 1\nfor i in range(t):\n    op = input().split()\n    if op[0] == 'alloc':\n        pos = 0\n        for j in range(m):\n            if alocuente[j] == 0:\n                pos += 1\n                if pos == int(op[1]):\n                    alocuente[j - int(op[1]) + 1: j + 1] = [ind] * int(op[1])\n                    print(ind)\n                    ind += 1\n                    break\n            else:\n                pos = 0\n        else:\n            print(\"NULL\")\n    if op[0] == 'erase':\n        pos = 0\n        if int(op[1]) not in alocuente or int(op[1]) == 0:\n            print('ILLEGAL_ERASE_ARGUMENT')\n        else:\n            for j in range(m):\n                if int(op[1]) > 0 and alocuente[j] == int(op[1]):\n                    alocuente[j] = 0\n    if op[0] == \"defragment\":\n        cnt = 0\n        cnt = alocuente.count(0)\n        alocuente = [j for j in alocuente if j != 0]\n        for j in range(cnt):\n            alocuente.append(0)\n", "id": "codeforces_7_B"}
{"code": "def solve_case():\n    n, m = map(int, input().split())\n    count = [None] * n\n    for i in range(n):\n        count[i] = [0] * n\n    ans = - 1\n    for k in range(m):\n        x, y = map(int, input().split())\n        x -= 1\n        y -= 1\n        found = False\n        for i in range(x - 2, x + 1):\n            for j in range(y - 2, y + 1):\n                if i >= 0 and i < n and j >= 0 and j < n:\n                    count[i][j] += 1\n                    if count[i][j] == 9:\n                        found = True\n        if found:\n            ans = k + 1\n            break\n    print(ans)\n\n\nsolve_case()\n", "id": "codeforces_203_B"}
{"code": "import numpy as np\nimport itertools\nn, m, x = list(map(int, input().split()))\nc = np.array([list(map(int, input().split())) for _ in range(n)])\npre = np.arange(n)\nl = []\nrem = []\nans = 0\nfor i in pre + 1:\n    for j in itertools.combinations(pre, i):\n        l.append(list(j))\nfor i in range(1, m + 1):\n    for j, k in enumerate(l):\n        ca = 0\n        for ii in k:\n            ca += c[ii, i]\n        if ca < x:\n            rem.insert(0, j)\n        else:\n            pass\n    if len(rem) > 0:\n        for j in rem:\n            l.pop(j)\n        rem = []\n    if len(l) == 0:\n        print(- 1)\n        break\nelse:\n    for i in l:\n        ca = 0\n        for j in i:\n            ca += c[j, 0]\n        if ans == 0:\n            ans = ca\n        else:\n            ans = min(ans, ca)\n    print(ans)\n", "id": "atcoder_ABC167_C"}
{"code": "age = int(input())\nif age == 1:\n    print('Hello World')\nelse:\n    a, b = [int(input()) for i in range(2)]\n    print(a + b)\n", "id": "atcoder_ABC112_A"}
{"code": "n = int(input())\nt = [0] + list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nans, cnt = [], [0 for i in range(n + 1)]\nfor i in a:\n    cnt[i] += 1\nfor i in range(1, n + 1):\n    if t[i] == 1:\n        crt = [i]\n        x = a[i]\n        while cnt[x] == 1:\n            crt.append(x)\n            x = a[x]\n        if len(crt) > len(ans):\n            ans = crt[:]\nans.reverse()\nprint(len(ans))\nprint(' '.join(map(str, ans)))\n", "id": "codeforces_350_B"}
{"code": "def main_function():\n    n = int(input())\n    a = [int(i) for i in input().split(\" \")]\n    current_level = 0\n    counter = 0\n    counter_turns = - 1\n    while counter < len(a):\n        counter_turns += 1\n        for i in range(len(a)):\n            if a[i] != - 1 and a[i] <= counter:\n                counter += 1\n                a[i] = - 1\n        a.reverse()\n    print(counter_turns)\n\n\nmain_function()\n", "id": "codeforces_583_B"}
{"code": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n):\n    b[a[i] - 1] = i\nres = 0\nfor i in range(1, n):\n    res += abs(b[i] - b[i - 1])\nprint(res)\n", "id": "codeforces_612_B"}
{"code": "import os\nimport sys\nimport io\nimport math\nfrom tokenize import Triple\nfrom math import *\ndef I(): return [* map(int, sys.stdin.readline().split())]\ndef IS(): return input()\n\n\ndef IN(): return int(input())\ndef IF(): return float(input())\n\n\nn = IN()\nid = 0\nl, r = map(int, input().split())\nfor i in range(1, n):\n    li, ri = map(int, input().split())\n    if li <= l and r <= ri:\n        id = i\n    elif li < l or r < ri:\n        id = n\n    l = min(l, li)\n    r = max(r, ri)\nprint(- 1 if id == n else id + 1)\n", "id": "codeforces_242_B"}
{"code": "import sys\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(rs())\ndef rs_(): return [_ for _ in rs().split()]\ndef ri_(): return [int(_) for _ in rs().split()]\n\n\nN = ri()\nans = 0\nfor i in range(1, N + 1):\n    ans += i * (N // i) * (N // i + 1) // 2\nprint(ans)\n", "id": "atcoder_ABC172_D"}
{"code": "h, a = map(int, input().split(\" \"))\nsho = int(h / a)\nam = int(h % a)\nif am != 0:\n    sho += 1\nelse:\n    pass\nprint(sho)\n", "id": "atcoder_ABC153_A"}
{"code": "from sys import stdin\nfrom collections import Counter\nimport numpy as np\nN, M = [int(x) for x in stdin.readline().split()]\nA = np.array([int(a) for a in stdin.readline().split()], dtype=np.int64)\ncum_remainders = (np.hstack([0, A]) % M).cumsum() % M\nremainder_counts = Counter(cum_remainders)\ncombinations = 0\nfor count in remainder_counts.values():\n    combinations += count * (count - 1) // 2\nprint(combinations)\n", "id": "atcoder_ABC105_D"}
{"code": "a, b = map(int, input().split())\nc = 0\nfor i in range(2):\n    c += max(a, b)\n    if a >= b:\n        a -= 1\n    else:\n        b -= 1\nprint(c)\n", "id": "atcoder_ABC124_A"}
{"code": "ip = input()\nst = \"\"\nif len(ip) != 1:\n    if ip[0] == \"9\":\n        st = \"9\"\n        ip = ip[1:]\n    for i in ip:\n        if int(i) > 4:\n            n = 9 - int(i)\n            st += str(n)\n        else:\n            st += i\nelse:\n    st = ip\nprint(int(st))\n", "id": "codeforces_514_A"}
{"code": "import math\nimport string\nimport itertools\nimport fractions\nimport heapq\nimport collections\nimport re\nimport array\nimport bisect\nimport sys\nimport random\nimport time\nimport copy\nimport functools\nsys.setrecursionlimit(10 ** 7)\ninf = 10 ** 20\neps = 1.0 / 10 ** 10\nmod = 10 ** 9 + 7\ndd = [(- 1, 0), (0, 1), (1, 0), (0, - 1)]\nddn = [(- 1, 0), (- 1, 1), (0, 1), (1, 1),\n       (1, 0), (1, - 1), (0, - 1), (- 1, - 1)]\n\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    s = S()\n    k = I()\n    l = 0\n    for c in s:\n        if c != '1':\n            break\n        l += 1\n    if l >= k:\n        return 1\n    return s[l]\n\n\nprint(main())\n", "id": "atcoder_ABC106_C"}
{"code": "import heapq\nq = int(input())\nans = [0, 0]\np1 = []\np2 = []\nheapq.heapify(p1)\nheapq.heapify(p2)\nsum_b = 0\nsum_p1 = 0\nsum_p2 = 0\nfor _ in range(q):\n    ql = list(map(int, input().split()))\n    if ql[0] == 2:\n        if len(p1) == len(p2):\n            print(- p2[0], sum_p1 - len(p1) * - p2[0] +\n                  len(p2) * - p2[0] - sum_p2 + sum_b)\n        else:\n            print(p1[0], sum_p1 - len(p1) * p1[0] +\n                  len(p2) * p1[0] - sum_p2 + sum_b)\n    else:\n        sum_b += ql[2]\n        if len(p1) == 0:\n            heapq.heappush(p1, ql[1])\n            sum_p1 += ql[1]\n        elif p1[0] <= ql[1]:\n            heapq.heappush(p1, ql[1])\n            sum_p1 += ql[1]\n        else:\n            heapq.heappush(p2, - ql[1])\n            sum_p2 += ql[1]\n        if len(p1) < len(p2):\n            k = heapq.heappop(p2)\n            heapq.heappush(p1, - k)\n            sum_p2 += k\n            sum_p1 -= k\n        if len(p1) - 1 > len(p2):\n            k = heapq.heappop(p1)\n            heapq.heappush(p2, - k)\n            sum_p1 -= k\n            sum_p2 += k\n", "id": "atcoder_ABC127_F"}
{"code": "def main():\n    input()\n    pieces = tuple(zip(map(int, input().split()), input()))\n    return Bob_sMaxStrength(pieces)\n\n\ndef Bob_sMaxStrength(pieces):\n    pScore = sScore = pMaxScore = sMaxScore = sum(\n        piece[0] for piece in pieces if piece[1] == 'B')\n    for piece in pieces:\n        if piece[1] == 'A':\n            pScore += piece[0]\n            if pScore > pMaxScore:\n                pMaxScore = pScore\n        else:\n            pScore -= piece[0]\n    for i in range(len(pieces) - 1, - 1, - 1):\n        if pieces[i][1] == 'A':\n            sScore += pieces[i][0]\n            if sScore > sMaxScore:\n                sMaxScore = sScore\n        else:\n            sScore -= pieces[i][0]\n    if pMaxScore > sMaxScore:\n        return pMaxScore\n    return sMaxScore\n\n\nif __name__ == '__main__':\n    print(main())\n", "id": "codeforces_632_B"}
{"code": "import collections\nimport heapq\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO, IOBase\nimport os\n\n\ndef valid(i, j, n, m):\n    if i < n and i >= 0 and j >= 0 and j < m:\n        return True\n    return False\n\n\ndef sumn(i, n):\n    return (n - i) * (i + n) / 2\n\n\ndef sqfun(a, b, c):\n    return (- b + math.sqrt(b * b - 4 * a * c)) / 2 * a\n\n\ndef value(): return tuple(map(int, input().split()))\ndef values(): return tuple(map(int, sys.stdin.readline().split()))\ndef inlst(): return [int(i) for i in input().split()]\ndef inlsts(): return [int(i) for i in sys.stdin.readline().split()]\ndef inp(): return int(input())\ndef inps(): return int(sys.stdin.readline())\ndef instr(): return input()\ndef stlst(): return [i for i in input().split()]\n\n\ndef f(s):\n    r = ''\n    for i in s:\n        if i not in ['-', ';', '_']:\n            r += i.lower()\n    return r\n\n\ndef solve():\n    l = []\n    for i in range(3):\n        l.append(f(input()))\n    t = itertools.permutations(l, len(l))\n    l = []\n    for i in t:\n        l.append(\"\".join(i))\n    for i in range(inp()):\n        if f(instr()) in l:\n            print('ACC')\n        else:\n            print('WA')\n\n\nif __name__ == \"__main__\":\n    solve()\n", "id": "codeforces_61_B"}
{"code": "import collections\n\n\ndef run(s, t):\n    ss = sorted(list(collections.Counter(s).values()))\n    tt = sorted(list(collections.Counter(t).values()))\n    if ss == tt:\n        return 'Yes'\n    else:\n        return 'No'\n\n\ndef main():\n    s = input()\n    t = input()\n    print(run(s, t))\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_ABC110_C"}
{"code": "import bisect\nimport collections\nimport copy\nimport heapq\nimport itertools\nimport math\nimport numpy\nimport string\nimport sys\ndef S(): return sys.stdin.readline().rstrip()\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef LS(): return list(sys.stdin.readline().rstrip().split())\n\n\na, b = LI()\nif a > 0:\n    print('Positive')\nelif a <= 0 and b >= 0:\n    print('Zero')\nelse:\n    if (a + b) % 2 == 0:\n        print('Negative')\n    else:\n        print('Positive')\n", "id": "atcoder_AGC002_A"}
{"code": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\npre = float('inf')\nans = 0\na.sort(reverse=True)\nfor j in range(n):\n    ans += max(0, min(pre - 1, a[j]))\n    pre = max(0, min(pre - 1, a[j]))\nprint(ans)\n", "id": "codeforces_624_B"}
{"code": "from collections import Counter\nS = input()\nc = Counter(S)\nSa = set(list(S))\nif len(Sa) != 2:\n    print(\"No\")\n    exit()\nfor i in Sa:\n    if c[i] != 2:\n        print(\"No\")\n        exit()\nprint(\"Yes\")\n", "id": "atcoder_ABC132_A"}
{"code": "def resolve():\n    n = int(input())\n    low = []\n    high = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        low.append(a)\n        high.append(b)\n    low.sort()\n    high.sort()\n    if n % 2:\n        print(high[(n + 1) // 2 - 1] - low[(n + 1) // 2 - 1] + 1)\n    else:\n        hh = (high[(n) // 2 - 1] + high[(n) // 2]) / 2\n        ll = (low[(n) // 2 - 1] + low[(n) // 2]) / 2\n        print(int((hh - ll) * 2) + 1)\n\n\nif __name__ == \"__main__\":\n    resolve()\n", "id": "atcoder_ABC169_E"}
{"code": "n = int(input())\nl = [0 for _ in range(1000010)]\ndp = [0 for _ in range(1000010)]\nfor i in range(n):\n    a, b = map(int, input().split())\n    l[a] = b\nif l[0] > 0:\n    dp[0] = 1\nmx = 0\nfor i in range(1, 1000010):\n    if (l[i] == 0):\n        dp[i] = dp[i - 1]\n    else:\n        if (l[i] >= i):\n            dp[i] = 1\n        else:\n            dp[i] = dp[i - l[i] - 1] + 1\n    if (dp[i] > mx):\n        mx = dp[i]\nprint(n - mx)\n", "id": "codeforces_607_A"}
{"code": "from math import atan2, pi\nN, * XY = map(int, open(0).read().split())\nXY = list(zip(* [iter(XY)] * 2))\nfor i, (x, y) in enumerate(XY):\n    D = sorted(atan2(X - x, Y - y) for j, (X, Y) in enumerate(XY) if j != i)\n    D.append(D[0] + 2 * pi)\n    ans = 0\n    for a, b in zip(D, D[1:]):\n        if b - a >= pi:\n            ans = (b - a) - pi\n    print(ans / (2 * pi))\n", "id": "atcoder_AGC021_B"}
{"code": "import math\nn = int(input())\nx = 1\nwhile math.log2(n) % 1:\n    x += 1\n    n -= 2 ** (int(math.log2(n)))\nprint(x)\n", "id": "codeforces_579_A"}
{"code": "import sys\nfrom operator import itemgetter\ninput = sys.stdin.readline\nTIME = 0\nVAL = 1\nN, T = [int(a) for a in input().split()]\ntime_value = [(- 1, - 1)] + [None] * (N)\nfor i in range(1, N + 1):\n    time_value[i] = tuple(int(a) for a in input().split())\ntime_value.sort(key=itemgetter(VAL))\ndp = [[- 1] * T for _ in range(N + 1)]\nfor t in range(0, T):\n    dp[0][t] = 0\nfor n in range(1, N + 1):\n    dp[n][0] = 0\n    for t in range(1, T):\n        if time_value[n][TIME] > t:\n            dp[n][t] = dp[n - 1][t]\n        else:\n            dp[n][t] = max(dp[n - 1][t], time_value[n][VAL] +\n                           dp[n - 1][t - time_value[n][TIME]])\nval_acum = time_value[N][VAL]\nt = T - 1\nmax_val = val_acum + dp[N - 1][t]\nfor n in range(N - 1, 0, - 1):\n    val_acum += time_value[n][VAL]\n    t -= time_value[n + 1][TIME]\n    if t < 0:\n        break\n    else:\n        max_val = max(max_val, val_acum + dp[n - 1][t])\nprint(max_val)\n", "id": "atcoder_ABC145_E"}
{"code": "import sys\n\n\ndef solve(H: int, W: int, A: int, B: int):\n    answer = [[\"0\"] * W for _ in range(H)]\n    for i in range(H):\n        for j in range(W):\n            if i < B:\n                if j < A:\n                    answer[i][j] = \"0\"\n                else:\n                    answer[i][j] = \"1\"\n            else:\n                if j < A:\n                    answer[i][j] = \"1\"\n                else:\n                    answer[i][j] = \"0\"\n    for i in range(H):\n        print(''.join(answer[i]))\n    return\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    H = int(next(tokens))\n    W = int(next(tokens))\n    A = int(next(tokens))\n    B = int(next(tokens))\n    solve(H, W, A, B)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "atcoder_AGC038_A"}
{"code": "import java.util.*;\n\npublic class codeforces_379_A {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int a = scan.nextInt();\n        int b = scan.nextInt();\n        int res = a;\n        while (a >= b) {\n            res += (a / b);\n            a = (a / b) + (a % b);\n        }\n        System.out.println(res);\n    }\n}\n", "id": "codeforces_379_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC150_D {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n        int m = Integer.parseInt(sc.next());\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(sc.next()) / 2;\n        }\n        long gcd;\n        long lcd = 1;\n        for (int i = 0; i < n; i++) {\n            gcd = getGCD(lcd, a[i]);\n            lcd = lcd * a[i] / gcd;\n            if (lcd > m) {\n                System.out.println(0);\n                return;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if ((lcd / a[i]) % 2 == 0) {\n                System.out.println(0);\n                return;\n            }\n        }\n        System.out.println((m / lcd + 1) / 2);\n    }\n\n    public static long getGCD(long a, long b) {\n        if (b == 0) {\n            return a;\n        } else {\n            return getGCD(b, a % b);\n        }\n    }\n}\n", "id": "atcoder_ABC150_D"}
{"code": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic class codeforces_313_B {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));\n        Fast f = new Fast();\n        f.sol(br, pw);\n        pw.close();\n    }\n}\n\nclass Fast {\n    public void sol(BufferedReader br, PrintWriter pw) throws IOException {\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        String s = st.nextToken();\n        Integer cum[] = new Integer[s.length() + 1];\n        cum[0] = cum[s.length()] = 0;\n        for (int i = 1; i < s.length(); i++) {\n            if (s.charAt(i) == s.charAt(i - 1)) cum[i] = cum[i - 1] + 1;\n            else cum[i] = cum[i - 1];\n        }\n        st = new StringTokenizer(br.readLine());\n        Integer q = Integer.parseInt(st.nextToken());\n        while (q-- != 0) {\n            st = new StringTokenizer(br.readLine());\n            Integer l = Integer.parseInt(st.nextToken()), r = Integer.parseInt(st.nextToken()) - 1;\n            pw.println(cum[r] - cum[l - 1]);\n        }\n    }\n}\n", "id": "codeforces_313_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_267_A {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        for (int i = 0; i < n; i++) {\n            int a = scan.nextInt();\n            int b = scan.nextInt();\n            System.out.println(sub(a, b));\n        }\n    }\n\n    public static int sub(int a, int b) {\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        int result = 0;\n        while (min > 0) {\n            result += max / min;\n            max = max % min;\n            int curr_min = Math.min(min, max);\n            int curr_max = Math.max(min, max);\n            min = curr_min;\n            max = curr_max;\n        }\n        return result;\n    }\n}\n", "id": "codeforces_267_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC125_C {\n    public static int[] A;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = sc.nextInt();\n        }\n        sc.close();\n        int[] M = new int[N];\n        int[] L = new int[N];\n        int[] R = new int[N];\n        L[0] = A[0];\n        for (int i = 1; i < N; i++) {\n            L[i] = gcd(L[i - 1], A[i]);\n        }\n        R[N - 1] = A[N - 1];\n        for (int i = N - 2; i >= 0; i--) {\n            R[i] = gcd(R[i + 1], A[i]);\n        }\n        int answer = Math.max(L[N - 2], R[1]);\n        for (int i = 1; i < N - 1; i++) {\n            ;\n            answer = Math.max(answer, gcd(L[i - 1], R[i + 1]));\n        }\n        System.out.println(answer);\n    }\n\n    public static int gcd(int a, int b) {\n        int tmp;\n        if (b > a) {\n            tmp = a;\n            a = b;\n            b = tmp;\n        }\n        if (b == 0) {\n            return a;\n        }\n        int r = -1;\n        do {\n            r = a % b;\n            a = b;\n            b = r;\n        } while (r != 0);\n        return a;\n    }\n}\n", "id": "atcoder_ABC125_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_459_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int x1 = in.nextInt(), y1 = in.nextInt(), x2 = in.nextInt(), y2 = in.nextInt();\n        if (x1 == x2) {\n            int dif = Math.abs(y1 - y2);\n            pw.println((x1 + dif) + \" \" + y1 + \" \" + (x1 + dif) + \" \" + y2);\n        } else if (y1 == y2) {\n            int dif = Math.abs(x1 - x2);\n            pw.println((x1) + \" \" + (y1 + dif) + \" \" + (x2) + \" \" + (y2 + dif));\n        } else if (Math.abs(x1 - x2) == Math.abs(y1 - y2)) {\n            pw.println(x1 + \" \" + y2 + \" \" + x2 + \" \" + y1);\n        } else {\n            pw.println(-1);\n        }\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}\n", "id": "codeforces_459_A"}
{"code": "import java.math.*;\nimport java.util.*;\nimport java.util.function.*;\n\npublic class atcoder_ABC152_E {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = sc.nextInt();\n        }\n        sc.close();\n        BigInteger lcm = BigInteger.ONE;\n        for (int ai : A) {\n            BigInteger a = BigInteger.valueOf(ai);\n            lcm = lcm.divide(lcm.gcd(a)).multiply(a);\n        }\n        long mod = 1000000007;\n        long modLcm = lcm.remainder(BigInteger.valueOf(mod)).longValue();\n        long ans = 0;\n        for (int ai : A) ans = (ans + modDiv(modLcm, ai, mod)) % mod;\n        System.out.println(ans);\n    }\n\n    private static long modDiv(long a, long b, long mod) {\n        return (a % mod) * modInv(b, mod) % mod;\n    }\n\n    private static long modInv(long x, long mod) {\n        return modPow(x, mod - 2, mod);\n    }\n\n    private static long modPow(long b, long e, long mod) {\n        long ans = 1;\n        long x = b % mod;\n        for (long y = e; y != 0; y >>= 1) {\n            if ((y & 1) == 1) ans = (ans * x) % mod;\n            x = (x * x) % mod;\n        }\n        return ans;\n    }\n}\n", "id": "atcoder_ABC152_E"}
{"code": "import java.util.*;\n\npublic class codeforces_189_A {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int maxn = 4010;\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        int c = scanner.nextInt();\n        int[] arr = {a, b, c};\n        int[] dp = new int[maxn];\n        for (int i = 0; i < n; i++) {\n            dp[i] = Integer.MIN_VALUE;\n        }\n        dp[0] = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = arr[i]; j < dp.length; j++) {\n                dp[j] = Math.max(dp[j], dp[j - arr[i]] + 1);\n            }\n        }\n        System.out.println(dp[n]);\n    }\n}\n", "id": "codeforces_189_A"}
{"code": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class codeforces_99_A {\n    public static void main(String[] args) {\n        char[] str = new Scanner(System.in).nextLine().toCharArray();\n        int dotIndex = 0;\n        for (int i = 0; i < str.length; i++)\n            if (str[i] == '.') {\n                dotIndex = i;\n                break;\n            }\n        if (str[dotIndex - 1] == '9') {\n            System.out.println(\"GOTO Vasilisa.\");\n        } else if (Integer.parseInt(str[dotIndex + 1] + \"\") > 4) {\n            String _str = \"\";\n            for (int i = 0; i < dotIndex; i++) _str += str[i];\n            System.out.println(new BigInteger(_str).add(new BigInteger(\"1\")).toString());\n        } else {\n            for (int i = 0; i < dotIndex; i++) System.out.print(str[i]);\n            System.out.println();\n        }\n    }\n}\n", "id": "codeforces_99_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_412_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(), k = sc.nextInt();\n        String a = sc.next();\n        if (k > n / 2) {\n            while (k < n) {\n                System.out.println(\"RIGHT\");\n                k++;\n            }\n        } else {\n            while (k > 1) {\n                System.out.println(\"LEFT\");\n                k--;\n            }\n        }\n        if (k == 1) {\n            for (int i = 0; i < a.length(); i++) {\n                System.out.println(\"PRINT \" + a.charAt(i));\n                if ((i + 1) < a.length()) {\n                    System.out.println(\"RIGHT\");\n                }\n            }\n        } else {\n            for (int i = a.length() - 1; i >= 0; i--) {\n                System.out.println(\"PRINT \" + a.charAt(i));\n                if ((i - 1) >= 0) {\n                    System.out.println(\"LEFT\");\n                }\n            }\n        }\n    }\n}\n", "id": "codeforces_412_A"}
{"code": "import java.util.*;\n\nclass atcoder_AGC011_C implements Runnable {\n    ArrayList<Integer>[] graph;\n    boolean[] visited;\n    int[] color;\n    long one;\n    long bipartite;\n    long count;\n    boolean mujun;\n\n    int dfs(int a, int c) {\n        if (visited[a]) {\n            if (color[a] >= 0 && color[a] != c) mujun = true;\n            return 0;\n        }\n        visited[a] = true;\n        color[a] = c;\n        int total = 1;\n        for (int b : graph[a]) {\n            total += dfs(b, 1 - c);\n        }\n        return total;\n    }\n\n    public void run() {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int m = scan.nextInt();\n        this.graph = new ArrayList[n];\n        for (int i = 0; i < n; ++i) this.graph[i] = new ArrayList<Integer>();\n        for (int i = 0; i < m; ++i) {\n            int u = scan.nextInt() - 1;\n            int v = scan.nextInt() - 1;\n            this.graph[u].add(v);\n            this.graph[v].add(u);\n        }\n        visited = new boolean[n];\n        color = new int[n];\n        Arrays.fill(color, -1);\n        one = 0;\n        bipartite = 0;\n        count = 0;\n        for (int i = 0; i < n; ++i) {\n            if (visited[i]) continue;\n            count++;\n            mujun = false;\n            int kind = dfs(i, 0);\n            if (kind == 1) one++;\n            else if (!mujun) bipartite++;\n        }\n        long total = one * (2 * n - one);\n        total += (count - one) * (count - one);\n        total += bipartite * bipartite;\n        System.out.println(total);\n    }\n\n    public static void main(String[] args) {\n        new Thread(null, new atcoder_AGC011_C(), \"\", 128 * 1024 * 1024).start();\n    }\n}\n", "id": "atcoder_AGC011_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_95_A extends PrintWriter {\n    codeforces_95_A() {\n        super(System.out, true);\n    }\n\n    Scanner sc = new Scanner(System.in);\n\n    public static void main(String[] $) {\n        codeforces_95_A o = new codeforces_95_A();\n        o.main();\n        o.flush();\n    }\n\n    int compare(char[] aa, int i, char[] bb, int j, int m) {\n        while (m-- > 0) {\n            char a = Character.toUpperCase(aa[i]);\n            char b = Character.toUpperCase(bb[j]);\n            if (a != b) return a - b;\n            i++;\n            j++;\n        }\n        return 0;\n    }\n\n    void main() {\n        int n = sc.nextInt();\n        char[][] ss = new char[n][];\n        for (int i = 0; i < n; i++) ss[i] = sc.next().toCharArray();\n        char[] cc = sc.next().toCharArray();\n        int m = cc.length;\n        char c = sc.next().charAt(0);\n        char c_ = Character.toUpperCase(c);\n        char a = c == 'a' ? 'b' : 'a';\n        char a_ = Character.toUpperCase(a);\n        boolean[] lucky = new boolean[m];\n        for (int j = 0; j < m; j++)\n            for (int i = 0; i < n; i++) {\n                int l = ss[i].length;\n                if (m - j >= l && compare(cc, j, ss[i], 0, l) == 0)\n                    for (int h = 0; h < l; h++) lucky[j + h] = true;\n            }\n        for (int j = 0; j < m; j++)\n            if (lucky[j]) {\n                if (Character.toLowerCase(cc[j]) == c)\n                    cc[j] = Character.isUpperCase(cc[j]) ? a_ : a;\n                else cc[j] = Character.isUpperCase(cc[j]) ? c_ : c;\n            }\n        println(cc);\n    }\n}\n", "id": "codeforces_95_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class atcoder_ABC153_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        String[] str = in.readLine().split(\" \");\n        int h = Integer.parseInt(str[0]);\n        int a = Integer.parseInt(str[1]);\n        int num = 0;\n        for (int i = 1; h > 0; i++) {\n            h = h - a;\n            num++;\n        }\n        System.out.println(num);\n    }\n}\n", "id": "atcoder_ABC153_A"}
{"code": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class atcoder_AGC046_B {\n    long MOD = 998244353L;\n    long[][] dp = new long[3001][3001];\n\n    void solve(Scanner sc, PrintWriter pw) {\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int C = sc.nextInt();\n        int D = sc.nextInt();\n        dp[A][B] = 1;\n        for (int c = A; c <= C; c++) {\n            for (int d = B; d <= D; d++) {\n                if (c == A && d == B) {\n                    continue;\n                }\n                long ans = 0;\n                if (c > A) {\n                    long part = dp[c - 1][d];\n                    ans = (part * d);\n                }\n                if (d > B) {\n                    long part = dp[c][d - 1];\n                    ans = (ans + (part * c));\n                }\n                if (c > A && d > B) {\n                    ans = (ans - (dp[c - 1][d - 1] * (c - 1) * (d - 1)));\n                }\n                dp[c][d] = ((ans % MOD) + MOD) % MOD;\n            }\n        }\n        pw.println(dp[C][D]);\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        new atcoder_AGC046_B().solve(sc, pw);\n        pw.flush();\n        pw.close();\n        sc.close();\n    }\n}\n", "id": "atcoder_AGC046_B"}
{"code": "import java.io.*;\nimport java.nio.CharBuffer;\nimport java.util.NoSuchElementException;\n\npublic class atcoder_ABC127_B {\n    public static void main(String[] args) {\n        SimpleScanner scanner = new SimpleScanner(System.in);\n        PrintWriter writer = new PrintWriter(System.out);\n        int r = scanner.nextInt();\n        int d = scanner.nextInt();\n        long x = scanner.nextLong();\n        for (int i = 0; i < 10; ++i) {\n            x = r * x - d;\n            writer.println(x);\n        }\n        writer.close();\n    }\n\n    private static class SimpleScanner {\n        private static final int BUFFER_SIZE = 10240;\n        private Readable in;\n        private CharBuffer buffer;\n        private boolean eof;\n\n        SimpleScanner(InputStream in) {\n            this.in = new BufferedReader(new InputStreamReader(in));\n            buffer = CharBuffer.allocate(BUFFER_SIZE);\n            buffer.limit(0);\n            eof = false;\n        }\n\n        private char read() {\n            if (!buffer.hasRemaining()) {\n                buffer.clear();\n                int n;\n                try {\n                    n = in.read(buffer);\n                } catch (IOException e) {\n                    n = -1;\n                }\n                if (n <= 0) {\n                    eof = true;\n                    return '\u0000';\n                }\n                buffer.flip();\n            }\n            return buffer.get();\n        }\n\n        void checkEof() {\n            if (eof) throw new NoSuchElementException();\n        }\n\n        char nextChar() {\n            checkEof();\n            char b = read();\n            checkEof();\n            return b;\n        }\n\n        String next() {\n            char b;\n            do {\n                b = read();\n                checkEof();\n            } while (Character.isWhitespace(b));\n            StringBuilder sb = new StringBuilder();\n            do {\n                sb.append(b);\n                b = read();\n            } while (!eof && !Character.isWhitespace(b));\n            return sb.toString();\n        }\n\n        int nextInt() {\n            return Integer.valueOf(next());\n        }\n\n        long nextLong() {\n            return Long.valueOf(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n}\n", "id": "atcoder_ABC127_B"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_474_B {\n    public static void main(String args[]) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int arr[] = new int[n];\n        arr[0] = sc.nextInt();\n        for (int i = 1; i < n; i++) {\n            int x = sc.nextInt();\n            arr[i] = x + arr[i - 1];\n        }\n        int m = sc.nextInt();\n        int q[] = new int[m];\n        for (int i = 0; i < m; i++) q[i] = sc.nextInt();\n        for (int k = 0; k < m; k++) System.out.println(fun(arr, q[k], n, m) + 1);\n    }\n\n    static int fun(int arr[], int q, int n, int m) {\n        int res = 0;\n        int i = 0, j = n;\n        while (i <= j) {\n            int md = i + (j - i) / 2;\n            if (arr[md] == q) return md;\n            else if (arr[md] > q) {\n                res = md;\n                j = md - 1;\n            } else i = md + 1;\n        }\n        return res;\n    }\n}\n", "id": "codeforces_474_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ABC105_D {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int[] a = in.nextIntArray(n);\n            HashMap<Integer, Integer> dp = new HashMap<>();\n            long ans = 0;\n            int base = 0;\n            for (int i = 0; i < n; i++) {\n                base = (base - a[i] % m + m) % m;\n                dp.merge((base + a[i]) % m, 1, Integer::sum);\n                ans += dp.getOrDefault(base, 0);\n            }\n            out.println(ans);\n        }\n    }\n\n    static class InputReader {\n        private BufferedReader br;\n        private StringTokenizer st;\n\n        public InputReader(InputStream inputStream) {\n            br = new BufferedReader(new InputStreamReader(inputStream));\n            st = new StringTokenizer(\"\");\n        }\n\n        public String nextString() {\n            while (!st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine(), \" \");\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(nextString());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n    }\n}\n", "id": "atcoder_ABC105_D"}
{"code": "import java.util.*;\n\npublic class codeforces_500_A {\n    public static boolean dfs(int currpos, int[] arr, int target) {\n        if (currpos == target) return true;\n        if (currpos == arr.length + 1) return false;\n        boolean teleport = dfs(currpos + arr[currpos - 1], arr, target);\n        if (teleport) return true;\n        return false;\n    }\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int goal = sc.nextInt();\n        int[] arr = new int[n - 1];\n        for (int i = 0; i < n - 1; i++) arr[i] = sc.nextInt();\n        boolean isFound = dfs(1, arr, goal);\n        if (isFound) System.out.println(\"YES\");\n        else System.out.println(\"NO\");\n        sc.close();\n    }\n}\n", "id": "codeforces_500_A"}
{"code": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class atcoder_ABC139_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int A = Integer.parseInt(sc.next());\n        int B = Integer.parseInt(sc.next());\n        int amari = 0;\n        int result = 0;\n        result = (B - 1) / (A - 1);\n        amari = (B - 1) % (A - 1);\n        if (amari != 0) {\n            result += 1;\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(result);\n        sc.close();\n        out.flush();\n    }\n}\n", "id": "atcoder_ABC139_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class codeforces_400_A {\n    public static boolean isSolution(int columnsCount, String x) {\n        boolean allXs[] = new boolean[columnsCount];\n        Arrays.fill(allXs, true);\n        for (int i = 0; i < 12; i++) {\n            if (x.charAt(i) != 'X') allXs[i % columnsCount] = false;\n        }\n        for (int i = 0; i < columnsCount; i++) if (allXs[i]) return true;\n        return false;\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        int t = Integer.parseInt(br.readLine());\n        for (int i = 0; i < t; i++) {\n            int possibleSolutions = 0;\n            StringBuilder solutions = new StringBuilder();\n            String s = br.readLine();\n            if (isSolution(12, s)) {\n                solutions.append(\" 1x12\");\n                possibleSolutions++;\n            }\n            if (isSolution(6, s)) {\n                solutions.append(\" 2x6\");\n                possibleSolutions++;\n            }\n            if (isSolution(4, s)) {\n                solutions.append(\" 3x4\");\n                possibleSolutions++;\n            }\n            if (isSolution(3, s)) {\n                solutions.append(\" 4x3\");\n                possibleSolutions++;\n            }\n            if (isSolution(2, s)) {\n                solutions.append(\" 6x2\");\n                possibleSolutions++;\n            }\n            if (isSolution(1, s)) {\n                solutions.append(\" 12x1\");\n                possibleSolutions++;\n            }\n            pw.print(possibleSolutions++);\n            pw.println(solutions);\n        }\n        pw.flush();\n        pw.close();\n    }\n}\n", "id": "codeforces_400_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic final class codeforces_351_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb = new StringBuilder();\n        int n = Integer.parseInt(br.readLine());\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        Double[] arr = new Double[2 * n];\n        int non_int = 0;\n        double sum_before = 0, sum = 0;\n        for (int i = 0; i < 2 * n; i++) {\n            double num = Double.parseDouble(st.nextToken());\n            sum_before += num;\n            if (num != Math.floor(num)) non_int++;\n            sum += Math.floor(num);\n            arr[i] = num;\n        }\n        double max_sum = Math.min(n, non_int) + sum;\n        double min_sum = Math.max(0, non_int - n) + sum;\n        double ans;\n        if (min_sum > sum_before) ans = (min_sum - sum_before);\n        else if (max_sum < sum_before) ans = (sum_before - max_sum);\n        else {\n            double x = sum_before - Math.floor(sum_before);\n            ans = Math.min(1 - x, x);\n        }\n        System.out.printf(\"%.3f\", ans);\n    }\n}\n", "id": "codeforces_351_A"}
{"code": "import java.util.*;\n\npublic class atcoder_AGC003_C {\n    static final int NUM = (int) (1e5 + 2);\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        HashMap<Integer, Integer> map = new HashMap<>();\n        PriorityQueue<Integer> nums = new PriorityQueue<>();\n        for (int i = 0; i < N; i++) {\n            int tmp = sc.nextInt();\n            nums.add(tmp);\n            map.put(tmp, i);\n        }\n        int bin = 0;\n        int diff = 0;\n        while (!nums.isEmpty()) {\n            int num = nums.poll();\n            int idx = map.get(num);\n            if ((bin % 2) != (idx % 2)) {\n                diff++;\n            }\n            bin++;\n            bin %= 2;\n        }\n        int ans = (diff / 2);\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_AGC003_C"}
{"code": "import java.util.*;\n\npublic class codeforces_55_B {\n    static long min;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        min = Long.MAX_VALUE;\n        ArrayList<Long> arr = new ArrayList<>();\n        for (int i = 0; i < 4; i++) {\n            arr.add(sc.nextLong());\n        }\n        String[] ops = new String[3];\n        for (int i = 0; i < 3; i++) {\n            ops[i] = sc.next();\n        }\n        util(arr, ops, 0);\n        System.out.println(min);\n    }\n\n    public static void util(ArrayList<Long> arr, String[] ops, int idx) {\n        if (idx == 3) {\n            min = Math.min(min, arr.get(0));\n            return;\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                ArrayList<Long> a = new ArrayList<>();\n                for (int k = 0; k < arr.size(); k++) {\n                    if (k != j && k != i) {\n                        a.add(arr.get(k));\n                    }\n                }\n                long res;\n                if (idx < 3 && ops[idx].equals(\"+\")) {\n                    res = arr.get(i) + arr.get(j);\n                } else {\n                    res = arr.get(i) * arr.get(j);\n                }\n                a.add(res);\n                util(a, ops, idx + 1);\n            }\n        }\n    }\n}\n", "id": "codeforces_55_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_672_A {\n    static char[] generateString() {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 1; i <= 1000; i++) {\n            sb.append(i);\n        }\n        return sb.toString().toCharArray();\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        System.out.println(generateString()[n - 1]);\n    }\n}\n", "id": "codeforces_672_A"}
{"code": "import java.util.*;\n\npublic class codeforces_110_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, i, j, p = 97;\n        n = sc.nextInt();\n        char c[] = new char[n];\n        for (i = 0; i < 4; i++) {\n            for (j = i; j < n; j += 4) c[j] = (char) p;\n            p++;\n        }\n        for (i = 0; i < n; i++) System.out.print(c[i]);\n    }\n}\n", "id": "codeforces_110_B"}
{"code": "import java.util.*;\n\npublic class codeforces_31_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int f = 0;\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int k = 0, j = 0, i = 0;\n        for (k = 0; k < n; k++) {\n            int t = a[k];\n            for (i = 0; i < n; i++) {\n                for (j = 0; j < n - 1; j++) {\n                    if (i != j && t == (a[i] + a[j])) {\n                        f = 1;\n                        break;\n                    }\n                }\n                if (f == 1) break;\n            }\n            if (f == 1) break;\n        }\n        if (f == 1) System.out.println(k + 1 + \" \" + (j + 1) + \" \" + (i + 1));\n        else System.out.println(\"-1\");\n    }\n}\n", "id": "codeforces_31_A"}
{"code": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic class codeforces_296_A {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Task solver = new Task();\n        solver.solve(in, out);\n        out.close();\n    }\n\n    static class Task {\n        public void solve(InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] array = new int[1001];\n            for (int i = 0; i < n; i++) {\n                int index = in.nextInt();\n                array[index]++;\n            }\n            int countMax = -1;\n            for (int i = 1; i < array.length; i++) {\n                if (countMax < array[i]) countMax = array[i];\n            }\n            if (n % 2 == 0) {\n                if (countMax <= n / 2) {\n                    out.println(\"YES\");\n                } else {\n                    out.println(\"NO\");\n                }\n            } else {\n                if (countMax <= n / 2 + 1) {\n                    out.println(\"YES\");\n                } else {\n                    out.println(\"NO\");\n                }\n            }\n        }\n    }\n\n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        }\n\n        String next() {\n            while (tokenizer == null || !tokenizer.hasMoreElements()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = reader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "id": "codeforces_296_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ARC086_B {\n    public static void main(String[] $) {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        int[] a = new int[n];\n        Arrays.setAll(a, i -> s.nextInt());\n        ArrayList<String> r = new ArrayList<>();\n        int m = 0;\n        for (int i = 1; i < n; ++i) if (Math.abs(a[m]) < Math.abs(a[i])) m = i;\n        for (int i = 0; i < n; ++i) if (a[m] >= 0 ^ a[i] >= 0) r.add(m + 1 + \" \" + (i + 1));\n        if (a[m] >= 0) {\n            for (int i = 1; i < n; ++i) r.add(i + \" \" + (i + 1));\n        } else {\n            for (int i = n; i > 1; --i) r.add(i + \" \" + (i - 1));\n        }\n        System.out.println(r.size());\n        r.forEach(System.out::println);\n    }\n}\n", "id": "atcoder_ARC086_B"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_637_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = in.nextInt();\n        int ara[] = new int[n];\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            int v = in.nextInt();\n            ara[i] = v;\n            if (!map.containsKey(v)) {\n                map.put(v, 1);\n            } else {\n                map.put(v, map.get(v) + 1);\n            }\n        }\n        int max = 0;\n        for (Integer i : map.values()) {\n            max = Math.max(max, i);\n        }\n        Map<Integer, Integer> mm = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            if (!mm.containsKey(ara[i])) {\n                mm.put(ara[i], 1);\n                if (mm.get(ara[i]) == max) {\n                    pw.println(ara[i]);\n                    break;\n                }\n            } else {\n                mm.put(ara[i], mm.get(ara[i]) + 1);\n                if (mm.get(ara[i]) == max) {\n                    pw.println(ara[i]);\n                    break;\n                }\n            }\n        }\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}\n", "id": "codeforces_637_A"}
{"code": "import java.util.*;\n\npublic class codeforces_61_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String word1 = in.nextLine().replaceAll(\"[^a-zA-Z]\", \"\").toLowerCase();\n        String word2 = in.nextLine().replaceAll(\"[^a-zA-Z]\", \"\").toLowerCase();\n        String word3 = in.nextLine().replaceAll(\"[^a-zA-Z]\", \"\").toLowerCase();\n        String perm1 = word1 + word2 + word3;\n        String perm2 = word1 + word3 + word2;\n        String perm3 = word2 + word1 + word3;\n        String perm4 = word2 + word3 + word1;\n        String perm5 = word3 + word2 + word1;\n        String perm6 = word3 + word1 + word2;\n        int students = in.nextInt();\n        in.nextLine();\n        for (int i = 0; i < students; i++) {\n            String testCase = in.nextLine().replaceAll(\"[^a-zA-Z]\", \"\").toLowerCase();\n            if (testCase.equals(perm1)\n                    || testCase.equals(perm2)\n                    || testCase.equals(perm3)\n                    || testCase.equals(perm4)\n                    || testCase.equals(perm5)\n                    || testCase.equals(perm6)) {\n                System.out.println(\"ACC\");\n            } else {\n                System.out.println(\"WA\");\n            }\n        }\n    }\n}\n", "id": "codeforces_61_B"}
{"code": "import java.util.*;\n\npublic class codeforces_629_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int num = sc.nextInt();\n        int counter = 0;\n        int fine = 0;\n        ArrayList<String> arr = new ArrayList<>();\n        for (int i = 0; i < num; i++) {\n            String s = sc.next();\n            arr.add(s);\n        }\n        for (int i = 0; i < num; i++) {\n            for (int k = 0; k < num; k++) {\n                if (arr.get(k).charAt(i) == 'C') {\n                    counter++;\n                }\n            }\n            fine += (counter * (counter - 1)) / 2;\n            counter = 0;\n        }\n        for (int i = 0; i < num; i++) {\n            for (int k = 0; k < num; k++) {\n                if (arr.get(i).charAt(k) == 'C') {\n                    counter++;\n                }\n            }\n            fine += (counter * (counter - 1)) / 2;\n            counter = 0;\n        }\n        System.out.println(fine);\n    }\n}\n", "id": "codeforces_629_A"}
{"code": "import java.util.*;\n\npublic class codeforces_632_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        String s = sc.next();\n        long sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n            if (ch == 'B') sum += a[i];\n        }\n        long ans = sum;\n        long sum1 = sum;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'A') sum1 += a[i];\n            else sum1 -= a[i];\n            ans = Math.max(ans, sum1);\n        }\n        sum1 = sum;\n        for (int i = s.length() - 1; i >= 0; i--) {\n            if (s.charAt(i) == 'A') sum1 += a[i];\n            else sum1 -= a[i];\n            ans = Math.max(ans, sum1);\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "codeforces_632_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_203_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int M = in.nextInt();\n        int[][] black = new int[N + 2][N + 2];\n        for (int m = 1; m <= M; m++) {\n            int x = in.nextInt();\n            int y = in.nextInt();\n            for (int xx = x - 1; xx <= x + 1; xx++) {\n                for (int yy = y - 1; yy <= y + 1; yy++) {\n                    if (++black[xx][yy] == 9) {\n                        System.out.println(m);\n                        return;\n                    }\n                }\n            }\n        }\n        System.out.println(\"-1\");\n    }\n}\n", "id": "codeforces_203_B"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC123_D {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x[] = new int[3];\n        int max = 0;\n        for (int i = 0; i < 3; ++i) {\n            x[i] = sc.nextInt();\n            max = Math.max(max, x[i]);\n        }\n        int k = sc.nextInt();\n        List<Long> a[] = new List[3];\n        for (int i = 0; i < 3; ++i) a[i] = new ArrayList<Long>();\n        for (int i = 0; i < 3; ++i) {\n            for (int j = 0; j < x[i]; ++j) a[i].add(sc.nextLong());\n            Collections.sort(a[i]);\n        }\n        sc.close();\n        List<Long> ans = new ArrayList<Long>();\n        for (int i = 0; i < x[0]; ++i) {\n            for (int j = 0; j < x[1]; ++j) {\n                for (int m = 0; m < x[2]; ++m) {\n                    if ((i + 1) * (j + 1) * (m + 1) <= k) {\n                        long tmp =\n                                a[0].get(x[0] - i - 1)\n                                        + a[1].get(x[1] - j - 1)\n                                        + a[2].get(x[2] - m - 1);\n                        ans.add(tmp);\n                    }\n                }\n            }\n        }\n        Collections.sort(ans);\n        int n = ans.size();\n        for (int i = 0; i < k; ++i) System.out.println(ans.get(n - i - 1));\n    }\n}\n", "id": "atcoder_ABC123_D"}
{"code": "import java.io.*;\n\npublic class codeforces_445_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\n        String[] inp = buf.readLine().split(\"\");\n        int n = Integer.parseInt(inp[0]);\n        int m = Integer.parseInt(inp[1]);\n        String[] ans = new String[n];\n        for (int i = 0; i < n; i++) {\n            String str = buf.readLine();\n            StringBuilder temp = new StringBuilder(\"\");\n            for (int j = 0; j < m; j++)\n                if (str.charAt(j) == '-') temp.append(\"-\");\n                else {\n                    if ((i + j) % 2 == 1) temp.append(\"W\");\n                    else temp.append(\"B\");\n                }\n            ans[i] = temp.toString();\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.println(ans[i]);\n        }\n    }\n}\n", "id": "codeforces_445_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC140_D {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = Integer.parseInt(sc.next());\n        int K = Integer.parseInt(sc.next());\n        String S = sc.next();\n        char[] c1 = S.toCharArray();\n        char[] c3 = S.toCharArray();\n        boolean flag = false;\n        int count = 0;\n        for (int i = 0; i < N; i++) {\n            if (flag && c1[i] == 'R') {\n                flag = false;\n                count++;\n            }\n            if (count == K) {\n                break;\n            }\n            if (c1[i] == 'L') {\n                flag = true;\n                c1[i] = 'R';\n            }\n        }\n        flag = false;\n        count = 0;\n        for (int i = 0; i < N; i++) {\n            if (flag && c3[i] == 'L') {\n                flag = false;\n                count++;\n            }\n            if (count == K) {\n                break;\n            }\n            if (c3[i] == 'R') {\n                flag = true;\n                c3[i] = 'L';\n            }\n        }\n        String S1 = new String(c1);\n        String S3 = new String(c3);\n        count = 1;\n        int sum1 = 0;\n        char bef = S1.charAt(0);\n        for (int i = 1; i < N; i++) {\n            if (S1.charAt(i) == bef) {\n                count++;\n                if (i == N - 1) {\n                    sum1 += count - 1;\n                }\n            } else {\n                bef = S1.charAt(i);\n                sum1 += count - 1;\n                count = 1;\n            }\n        }\n        count = 1;\n        int sum3 = 0;\n        bef = S3.charAt(0);\n        for (int i = 1; i < N; i++) {\n            if (S3.charAt(i) == bef) {\n                count++;\n                if (i == N - 1) {\n                    sum3 += count - 1;\n                }\n            } else {\n                bef = S3.charAt(i);\n                sum3 += count - 1;\n                count = 1;\n            }\n        }\n        System.out.println(Math.max(sum1, sum3));\n    }\n}\n", "id": "atcoder_ABC140_D"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ABC070_B {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        int a = in.nextInt();\n        int b = in.nextInt();\n        int c = in.nextInt();\n        int d = in.nextInt();\n        if (c > b) {\n            System.out.println(0);\n        } else if (a > d) {\n            System.out.println(0);\n        } else if (a < c) {\n            System.out.println(Math.min(b, d) - c);\n        } else {\n            List<Integer> l = new ArrayList<>();\n            l.add(a);\n            l.add(b);\n            l.add(c);\n            l.add(d);\n            Collections.sort(l);\n            System.out.println(l.get(2) - l.get(1));\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n", "id": "atcoder_ABC070_B"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_AGC006_A {\n    static int N = 200 + 10;\n    static int f[] = new int[N];\n    static char b[] = new char[N];\n\n    static void getFail(char b[], int m) {\n        int j = 0;\n        f[0] = f[1] = 0;\n        for (int i = 2; i <= m; i++) {\n            while (j > 0 && b[j + 1] != b[i]) j = f[j];\n            if (b[j + 1] == b[i]) j++;\n            f[i] = j;\n        }\n    }\n\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = in.nextInt();\n        String s1 = in.next(), str = in.next();\n        int cnt = 0;\n        for (int i = 0; i < n; i++) b[++cnt] = str.charAt(i);\n        for (int i = 0; i < n; i++) b[++cnt] = s1.charAt(i);\n        getFail(b, cnt);\n        int len = Math.min(f[cnt], Math.min(n, n));\n        out.println(2 * n - len);\n        out.flush();\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n}\n", "id": "atcoder_AGC006_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ABC174_E {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Solution sol = new Solution();\n        sol.solve(in, out);\n        out.close();\n    }\n\n    private static class Solution {\n        private void solve(InputReader in, PrintWriter out) {\n            int n = in.nextInt(), k = in.nextInt();\n            int[] logsLength = in.readArray(n);\n            int min = 1, max = (int) 1e9 + 1000;\n            while (min < max) {\n                int mid = (min + max) / 2;\n                if (nei(mid, logsLength, k)) max = mid;\n                else min = mid + 1;\n            }\n            out.println(min);\n        }\n\n        private boolean nei(int mid, int[] logsLength, int k) {\n            for (int log : logsLength) k -= (log + mid - 1) / mid - 1;\n            return k >= 0;\n        }\n    }\n\n    private static class InputReader {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        private InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        private String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        private int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        private int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; ++i) a[i] = nextInt();\n            return a;\n        }\n    }\n}\n", "id": "atcoder_ABC174_E"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_306_A {\n    public static Scanner input = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = input.nextInt();\n        int m = input.nextInt();\n        int a[] = new int[m];\n        if (n % m == 0) {\n            for (int i = 0; i < a.length; i++) {\n                a[i] = n / m;\n            }\n        } else {\n            int sub = n / m;\n            for (int i = 0; i < a.length; i++) {\n                a[i] = sub;\n            }\n            int test = n - (sub * m);\n            int count = 0;\n            for (int i = 0; i < test; i++) {\n                a[count] = a[count] + 1;\n                count++;\n                if (count > +a.length) count = 0;\n            }\n        }\n        for (int i = (a.length - 1); i >= 0; i--) {\n            System.out.print(a[i] + \" \");\n        }\n    }\n}\n", "id": "codeforces_306_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.TreeMap;\n\npublic class atcoder_AGC029_C {\n    private int n;\n    private int[] a;\n    private TreeMap<Integer, Integer> s;\n\n    public static void main(String[] args) {\n        atcoder_AGC029_C m = new atcoder_AGC029_C();\n        m.solve();\n    }\n\n    private void set() {\n        try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n            n = Integer.parseInt(br.readLine());\n            a = Arrays.stream(br.readLine().split(\" \")).mapToInt(Integer::parseInt).toArray();\n            s = new TreeMap<>();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void solve() {\n        set();\n        int ng = 0;\n        int ok = n;\n        while (ok - ng > 1) {\n            int k = (ng + ok) / 2;\n            if (isPossible(k)) {\n                ok = k;\n            } else {\n                ng = k;\n            }\n        }\n        System.out.println(ok);\n    }\n\n    private boolean isPossible(int k) {\n        s.clear();\n        int current = 0;\n        for (int ai : a) {\n            if (ai <= current) {\n                if (k == 1) return false;\n                while (!s.isEmpty() && s.lastKey() >= ai) s.pollLastEntry();\n                int p = ai - 1;\n                while (true) {\n                    if (p < 0) return false;\n                    int sp = s.getOrDefault(p, 0) + 1;\n                    s.put(p, sp);\n                    if (sp == k) {\n                        s.remove(p);\n                        p--;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            current = ai;\n        }\n        return true;\n    }\n}\n", "id": "atcoder_AGC029_C"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class codeforces_272_B {\n    public static void main(String[] args) {\n        FastReader sc = new FastReader();\n        PrintWriter out = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        int a[] = new int[33];\n        for (int i = 0; i < n; i++) {\n            a[rec(sc.nextInt())]++;\n        }\n        double answer = 0;\n        for (int i = 0; i < a.length; i++) {\n            double summ = (1 + a[i] - 1) / 2.0 * (a[i] - 1);\n            answer += summ;\n        }\n        out.println((long) answer);\n        out.close();\n    }\n\n    static int rec(long x) {\n        int answer = 0;\n        for (int k = 31; k >= 0; k--) {\n            if ((x & (1 << k)) != 0) answer++;\n        }\n        return answer;\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "id": "codeforces_272_B"}
{"code": "import java.io.BufferedInputStream;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class atcoder_ABC107_D {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(new BufferedInputStream(System.in));\n        int N = scan.nextInt();\n        int[] arr = new int[N];\n        for (int i = 0; i < N; i++) arr[i] = scan.nextInt();\n        Task tsk = new Task();\n        System.out.println(tsk.solve(arr));\n    }\n\n    static class Task {\n        public int solve(int[] arr) {\n            int n = arr.length;\n            int[] sorted = Arrays.copyOf(arr, n);\n            Arrays.sort(sorted);\n            long total = (long) n * (n + 1) / 2;\n            int l = 0, r = n - 1;\n            while (l < r) {\n                int mid = l + (r - l) / 2;\n                int target = sorted[mid];\n                int cur = 0;\n                long cnt = 0;\n                long[] bit = new long[2 * n + 2];\n                for (int x = n + 1; x < bit.length; x += x & -x) bit[x]++;\n                for (int i = 0; i < n; i++) {\n                    cur += arr[i] <= target ? 1 : -1;\n                    for (int x = cur + n + 1; x < bit.length; x += x & -x) bit[x]++;\n                    for (int x = cur + n; x > 0; x -= x & -x) cnt += bit[x];\n                }\n                if (cnt >= total / 2 + 1) r = mid;\n                else l = mid + 1;\n            }\n            return sorted[l];\n        }\n    }\n}\n", "id": "atcoder_ABC107_D"}
{"code": "import java.util.*;\n\npublic class atcoder_AGC027_B {\n    int INF = Integer.MAX_VALUE;\n\n    public static void main(String[] args) {\n        new atcoder_AGC027_B().solve();\n    }\n\n    void solve() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        long X = sc.nextLong();\n        long[] x = new long[N];\n        long[] xsum = new long[N + 1];\n        for (int i = 0; i < N; i++) {\n            x[i] = sc.nextInt();\n            xsum[i + 1] = xsum[i] + x[i];\n        }\n        long ans = X * N + 5 * xsum[N];\n        for (int i = 1; i < N; i++) {\n            long cost = X * i + 5 * (xsum[N] - xsum[N - i]);\n            for (int j = 5, k = N - i; k >= 0; j += 2, k -= i) {\n                if (cost > ans) {\n                    break;\n                }\n                cost += j * (xsum[k] - xsum[Math.max(k - i, 0)]);\n            }\n            ans = Math.min(ans, cost);\n        }\n        System.out.println(ans + N * X);\n    }\n}\n", "id": "atcoder_AGC027_B"}
{"code": "import java.util.HashMap;\nimport java.util.Map.Entry;\nimport java.util.Scanner;\n\npublic class atcoder_ABC132_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String s = in.next();\n        char[] targ = s.toCharArray();\n        HashMap<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < targ.length; i++) {\n            if (!map.containsKey(targ[i])) {\n                map.put(targ[i], 1);\n            } else {\n                map.put(targ[i], map.get(targ[i]) + 1);\n            }\n        }\n        boolean ok = true;\n        for (Entry<Character, Integer> c : map.entrySet()) {\n            if (c.getValue() != 2) {\n                ok = false;\n                break;\n            }\n        }\n        if (ok && map.size() == 2) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n        in.close();\n    }\n}\n", "id": "atcoder_ABC132_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC158_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        long N = scan.nextLong();\n        long A = scan.nextLong();\n        long B = scan.nextLong();\n        long k = 0;\n        if (1 <= N\n                && N <= Math.pow(10, 18)\n                && 0 <= A\n                && 0 <= B\n                && 0 < A + B\n                && A + B <= Math.pow(10, 18)) {\n            if (A + B <= N) {\n                k = N / (A + B);\n                if (N - k * (A + B) > A) {\n                    System.out.println(A * k + (N - k * (A + B)) - (N - (k * (A + B) + A)));\n                } else {\n                    System.out.println(A * k + (N - k * (A + B)));\n                }\n            } else if (A + B > N && A <= N) {\n                System.out.println(A);\n            } else {\n                System.out.println(N);\n            }\n        }\n    }\n}\n", "id": "atcoder_ABC158_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.*;\nimport java.util.*;\n\npublic class atcoder_ABC051_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb = new StringBuilder();\n        String a = br.readLine();\n        sb.append(a.replace(\",\", \" \"));\n        System.out.println(sb);\n    }\n}\n", "id": "atcoder_ABC051_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class atcoder_ABC151_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1);\n        String s;\n        String sl[];\n        s = r.readLine();\n        System.out.printf(\"%c\", s.charAt(0) + 1);\n    }\n}\n\nclass RemRing {\n    long module;\n\n    public RemRing(long module) {\n        this.module = module;\n    }\n\n    public long sum(long a, long b) {\n        return (a + b + module) % module;\n    }\n\n    public long sub(long a, long b) {\n        return (a - b + module) % module;\n    }\n\n    public long prod(long a, long b) {\n        return (a * b) % module;\n    }\n\n    public long div(long a, long b) {\n        return (a * inv(b)) % module;\n    }\n\n    public long inv(long a) {\n        long b = this.module;\n        long u = 1;\n        long v = 0;\n        while (b > 0) {\n            long t = a / b;\n            a -= t * b;\n            u -= t * v;\n            long z = a;\n            a = b;\n            b = z;\n            z = u;\n            u = v;\n            v = z;\n        }\n        u %= this.module;\n        if (u < 0) u += this.module;\n        return u;\n    }\n}\n", "id": "atcoder_ABC151_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC125_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        Integer n = Integer.valueOf(sc.nextLine());\n        String vStr = sc.nextLine();\n        Map<Integer, Integer> vList = str2List(vStr);\n        String cStr = sc.nextLine();\n        Map<Integer, Integer> cList = str2List(cStr);\n        Integer max = 0;\n        for (Integer i = 0; i < n; i++) {\n            Integer profit = vList.get(i) - cList.get(i);\n            if (profit > 0) {\n                max += profit;\n            }\n        }\n        System.out.println(max);\n    }\n\n    static Map<Integer, Integer> str2List(String str) {\n        String[] vArrStr = str.split(\" \");\n        Map<Integer, Integer> ret = new HashMap<>();\n        Integer key = 0;\n        for (String val : vArrStr) {\n            ret.put(key, Integer.valueOf(val));\n            key++;\n        }\n        return ret;\n    }\n}\n", "id": "atcoder_ABC125_B"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC164_D {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String S = sc.next();\n        int N = S.length();\n        int[] mod_arr = new int[N];\n        int[] mod_cnt = new int[2019];\n        int radix = 1;\n        for (int i = 0; i < N; i++) {\n            int tmp = ((int) S.charAt(N - 1 - i) - (int) '0') * radix % 2019;\n            if (i != 0) tmp = (tmp + mod_arr[i - 1]) % 2019;\n            mod_arr[i] = tmp;\n            mod_cnt[tmp]++;\n            radix = radix * 10 % 2019;\n        }\n        long ans = 0L;\n        mod_cnt[0]++;\n        for (int i = 0; i < 2019; i++) {\n            ans += mod_cnt[i] * (mod_cnt[i] - 1) / 2;\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_ABC164_D"}
{"code": "import java.util.*;\n\npublic class atcoder_AGC035_B {\n    @SuppressWarnings(\"unchecked\")\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int numNode = sc.nextInt();\n        int numEdge = sc.nextInt();\n        connect = new ArrayList[numNode];\n        for (int i = 0; i < numNode; i++) {\n            connect[i] = new ArrayList<>();\n        }\n        for (int i = 0; i < numEdge; i++) {\n            int a = sc.nextInt() - 1;\n            int b = sc.nextInt() - 1;\n            connect[a].add(b);\n            connect[b].add(a);\n        }\n        if (numEdge % 2 != 0) {\n            System.out.println(-1);\n            return;\n        }\n        visited = new int[numNode];\n        odd = new boolean[numNode];\n        print = new StringBuilder();\n        dfs(0, -1);\n        System.out.println(print);\n    }\n\n    static ArrayList<Integer> connect[];\n    static int visited[];\n    static boolean odd[];\n    static StringBuilder print;\n\n    static void dfs(int crt, int parent) {\n        visited[crt] = 1;\n        ArrayList<Integer> crtConnect = connect[crt];\n        for (int child : crtConnect) {\n            if (child == parent || visited[child] == 1) {\n                continue;\n            } else if (visited[child] == 2) {\n                print.append((crt + 1) + \" \" + (child + 1) + \"\\n\");\n                odd[crt] = !odd[crt];\n            } else {\n                dfs(child, crt);\n                if (odd[child]) {\n                    print.append((child + 1) + \" \" + (crt + 1) + \"\\n\");\n                    odd[child] = !odd[child];\n                } else {\n                    print.append((crt + 1) + \" \" + (child + 1) + \"\\n\");\n                    odd[crt] = !odd[crt];\n                }\n            }\n        }\n        visited[crt] = 2;\n    }\n}\n", "id": "atcoder_AGC035_B"}
{"code": "import java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class atcoder_ABC133_E {\n    private class Node {\n        public long pattern = 0;\n        public int index;\n        public LinkedList<Integer> children = new LinkedList<Integer>();\n        public int parent = -1;\n\n        public Node(int i) {\n            this.index = i;\n        }\n\n        public void setParent(int K, int parent, int use, Node[] nodes) {\n            this.pattern = K - use;\n            this.parent = parent;\n            int count = 1;\n            if (parent != -1) {\n                count++;\n            }\n            for (int n : children) {\n                if (n == this.parent) {\n                    continue;\n                }\n                nodes[n].setParent(K, index, count, nodes);\n                count++;\n            }\n        }\n    }\n\n    public void solve() {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int K = in.nextInt();\n        Node[] nodes = new Node[N];\n        for (int i = 0; i < N; i++) {\n            nodes[i] = new Node(i);\n        }\n        for (int i = 0; i < N - 1; i++) {\n            int a = in.nextInt() - 1;\n            int b = in.nextInt() - 1;\n            nodes[a].children.add(b);\n            nodes[b].children.add(a);\n        }\n        in.close();\n        nodes[0].setParent(K, -1, 0, nodes);\n        long patterns = 1;\n        for (int i = 0; i < N; i++) {\n            patterns = (patterns * nodes[i].pattern) % 1_000_000_007;\n        }\n        System.out.println(patterns);\n    }\n\n    public static void main(String[] args) {\n        atcoder_ABC133_E main = new atcoder_ABC133_E();\n        main.solve();\n    }\n}\n", "id": "atcoder_ABC133_E"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_519_B {\n    public static void main(String args[]) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int a = 0, b = 0, c = 0;\n        for (int i = 0; i < n; i++) a += sc.nextInt();\n        for (int i = 0; i < n - 1; i++) b += sc.nextInt();\n        for (int i = 0; i < n - 2; i++) c += sc.nextInt();\n        int x = a - b, y = b - c;\n        System.out.println(x);\n        System.out.println(y);\n    }\n}\n", "id": "codeforces_519_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class atcoder_ABC143_A {\n    public static void main(String[] args) {\n        try {\n            BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n            String[] x = bf.readLine().trim().split(\" \");\n            int a = Integer.parseInt(x[0]);\n            int b = Integer.parseInt(x[1]);\n            int c = a - b * 2;\n            if (c < 0) c = 0;\n            System.out.println(c);\n        } catch (Exception e) {\n        }\n    }\n}\n", "id": "atcoder_ABC143_A"}
{"code": "import java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class atcoder_ABC111_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n        int[] v = new int[100010];\n        for (int i = 0; i < n; i++) {\n            v[i] = Integer.parseInt(sc.next());\n        }\n        Integer[] vo = new Integer[100010];\n        Integer[] ve = new Integer[100010];\n        Integer[] vt = new Integer[100010];\n        Arrays.fill(vo, 0);\n        Arrays.fill(ve, 0);\n        Arrays.fill(vt, 0);\n        for (int i = 0; i < n; i++) {\n            vt[v[i]]++;\n            if (i % 2 == 0) {\n                ve[v[i]]++;\n            } else {\n                vo[v[i]]++;\n            }\n        }\n        Arrays.sort(vo, Collections.reverseOrder());\n        Arrays.sort(ve, Collections.reverseOrder());\n        Arrays.sort(vt, Collections.reverseOrder());\n        int ans = 0;\n        if (vo[0] + ve[0] == vt[0]) {\n            ans = Math.min(n - vo[0] - ve[1], n - vo[1] - ve[0]);\n        } else {\n            ans = n - vo[0] - ve[0];\n        }\n        System.out.println(ans);\n        sc.close();\n    }\n}\n", "id": "atcoder_ABC111_C"}
{"code": "import java.util.*;\n\npublic class codeforces_222_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt(), k = in.nextInt(), l = 0, c = 1;\n        for (int i = 0; i < n; i++) {\n            int a = in.nextInt();\n            if (a == l) c += 1;\n            else c = 1;\n            l = a;\n        }\n        if (c + k > n) System.out.println(n - c);\n        else System.out.println(-1);\n    }\n}\n", "id": "codeforces_222_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class atcoder_ABC150_E {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] sa = br.readLine().split(\" \");\n        int n = Integer.parseInt(sa[0]);\n        sa = br.readLine().split(\" \");\n        int[] c = new int[n];\n        for (int i = 0; i < n; i++) {\n            c[i] = Integer.parseInt(sa[i]);\n        }\n        br.close();\n        int mod = 1000000007;\n        if (n == 1) {\n            System.out.println(c[0] * 2 % mod);\n            return;\n        }\n        Arrays.parallelSort(c);\n        long b = power(2, n);\n        long a = power(2, n - 2);\n        long ans = 0;\n        for (int i = 2; i <= n + 1; i++) {\n            long val = a * i % mod;\n            val *= c[n + 1 - i];\n            val %= mod;\n            ans += val;\n            ans %= mod;\n        }\n        ans *= b;\n        ans %= mod;\n        System.out.println(ans);\n    }\n\n    static long power(long x, long n) {\n        if (n == 0) {\n            return 1;\n        }\n        int mod = 1000000007;\n        long val = power(x, n / 2);\n        val = val * val % mod;\n        if (n % 2 == 1) {\n            val = val * x % mod;\n        }\n        return val;\n    }\n}\n", "id": "atcoder_ABC150_E"}
{"code": "import java.util.*;\n\npublic class codeforces_621_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        List<Long> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) list.add(sc.nextLong());\n        List<Long> odd = new ArrayList<>();\n        long sum = 0;\n        for (long i : list) {\n            if (i % 2 == 0) sum += i;\n            else odd.add(i);\n        }\n        Collections.sort(odd);\n        for (long i : odd) sum += i;\n        if (odd.size() % 2 != 0) sum -= odd.get(0);\n        System.out.println(sum);\n    }\n}\n", "id": "codeforces_621_A"}
{"code": "import java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class atcoder_ABC089_C {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int n = in.nextInt();\n            long[] cnt = new long[5];\n            Arrays.fill(cnt, 0);\n            for (int i = 0; i < n; ++i) {\n                String str = in.next();\n                if (str.charAt(0) == 'M') {\n                    cnt[0]++;\n                } else if (str.charAt(0) == 'A') {\n                    cnt[1]++;\n                } else if (str.charAt(0) == 'R') {\n                    cnt[2]++;\n                } else if (str.charAt(0) == 'C') {\n                    cnt[3]++;\n                } else if (str.charAt(0) == 'H') {\n                    cnt[4]++;\n                }\n            }\n            long res =\n                    cnt[0] * cnt[1] * cnt[2]\n                            + cnt[0] * cnt[1] * cnt[3]\n                            + cnt[0] * cnt[1] * cnt[4]\n                            + cnt[0] * cnt[2] * cnt[3]\n                            + cnt[0] * cnt[2] * cnt[4]\n                            + cnt[0] * cnt[3] * cnt[4]\n                            + cnt[1] * cnt[2] * cnt[3]\n                            + cnt[1] * cnt[2] * cnt[4]\n                            + cnt[1] * cnt[3] * cnt[4]\n                            + cnt[2] * cnt[3] * cnt[4];\n            out.println(res);\n        }\n    }\n}\n", "id": "atcoder_ABC089_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_581_B {\n    static TreeSet<Long> set;\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = in.nextInt();\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = in.nextLong();\n        long[] dp = new long[n + 1];\n        Arrays.fill(dp, -1);\n        dp[n - 1] = a[n - 1];\n        for (int i = n - 1; i >= 0; i--) {\n            dp[i] = Math.max(dp[i + 1], a[i]);\n        }\n        for (int i = 0; i < n; i++) {\n            if (a[i] > dp[i + 1]) pw.print(0 + \" \");\n            else pw.print((dp[i + 1] - a[i] + 1) + \" \");\n        }\n        pw.println();\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}\n", "id": "codeforces_581_B"}
{"code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class codeforces_624_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        Long[] ans = new Long[n];\n        for (int i = 0; i < n; i++) {\n            ans[i] = in.nextLong();\n        }\n        Arrays.sort(ans);\n        Long count = ans[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            if (ans[i] < ans[i + 1]) {\n                count += ans[i];\n            } else {\n                while (ans[i] >= ans[i + 1]) {\n                    ans[i]--;\n                }\n                if (ans[i] > 0) {\n                    count += ans[i];\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}\n", "id": "codeforces_624_B"}
{"code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class codeforces_108_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int a[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = in.nextInt();\n        }\n        Arrays.sort(a);\n        for (int i = 0; i < a.length - 1; i++) {\n            if (a[i + 1] < a[i] * 2 && a[i] != a[i + 1]) {\n                System.out.println(\"YES\");\n                return;\n            }\n        }\n        System.out.println(\"NO\");\n    }\n}\n", "id": "codeforces_108_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_11_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int d = in.nextInt();\n        int[] nums = new int[n];\n        for (int i = 0; i < n; i++) {\n            nums[i] = in.nextInt();\n        }\n        int result = 0;\n        int a = 0;\n        for (int i = 1; i < n; i++) {\n            a = (nums[i - 1] - nums[i]);\n            if (a >= 0) {\n                result += a / d + 1;\n                nums[i] += (a / d + 1) * d;\n            }\n        }\n        System.out.println(result);\n    }\n}\n", "id": "codeforces_11_A"}
{"code": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class codeforces_154_A {\n    public static void main(String hi[]) throws Exception {\n        BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));\n        char[] arr = infile.readLine().toCharArray();\n        int N = arr.length;\n        HashSet<String> set = new HashSet<String>();\n        int K = Integer.parseInt(infile.readLine());\n        int res = 0;\n        for (int k = 0; k < K; k++) {\n            String input = infile.readLine();\n            int a = 0;\n            int b = 0;\n            for (int i = 0; i < N; i++) {\n                if (arr[i] == input.charAt(0)) a++;\n                else if (arr[i] == input.charAt(1)) b++;\n                else {\n                    res += Math.min(a, b);\n                    a = b = 0;\n                }\n            }\n            res += Math.min(a, b);\n        }\n        System.out.println(res);\n    }\n}\n", "id": "codeforces_154_A"}
{"code": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class codeforces_397_B {\n    static int N;\n    static int MOD = (int) (1e9 + 7);\n\n    public static void main(String args[]) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int t = in.nextInt();\n        while (t-- > 0) {\n            long n = in.nextInt();\n            long a = in.nextInt();\n            long b = in.nextInt();\n            if (n < a) {\n                out.println(\"No\");\n                continue;\n            }\n            if (a == b) {\n                if (n % a == 0) {\n                    out.println(\"Yes\");\n                } else {\n                    out.println(\"No\");\n                }\n                continue;\n            }\n            long x = b / (b - a);\n            if (n > x * a) {\n                out.println(\"Yes\");\n                continue;\n            }\n            long low = 1;\n            long high = x + 1;\n            long ans = 1;\n            while (low <= high) {\n                long mid = (low + high) / 2;\n                if (mid * a < n) {\n                    low = mid + 1;\n                } else {\n                    ans = mid;\n                    high = mid - 1;\n                }\n            }\n            if (n > (ans - 1) * b && n < ans * a) {\n                out.println(\"No\");\n            } else {\n                out.println(\"Yes\");\n            }\n        }\n        out.close();\n    }\n}\n", "id": "codeforces_397_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_678_A {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int k = scan.nextInt();\n        n++;\n        int z = 0;\n        if (n % k != 0) z = k - n % k;\n        System.out.println(n + z);\n    }\n}\n", "id": "codeforces_678_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_612_B {\n    public static void main(String args[]) {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        int dp[] = new int[200001];\n        for (int i = 0; i < n; i++) {\n            dp[s.nextInt()] = i;\n        }\n        long ans = 0;\n        for (int i = 2; i <= n; i++) {\n            ans += Math.abs(dp[i] - dp[i - 1]);\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "codeforces_612_B"}
{"code": "import static java.lang.Math.*;\n\nimport java.util.*;\n\npublic class codeforces_146_A {\n    public static void main(String args[]) {\n        Scanner in = new Scanner(System.in);\n        int x = 0, y = 0;\n        int t = 0;\n        int n = in.nextInt();\n        String str = in.next();\n        char l[] = new char[str.length()];\n        l = str.toCharArray();\n        for (int i = 0; i < n; i++) {\n            if (l[i] != '4' && l[i] != '7') {\n                t = 1;\n            }\n        }\n        if (t == 1) {\n            System.out.println(\"NO\");\n        } else {\n            for (int i = 0; i < n / 2; i++) {\n                x = x + Character.getNumericValue(l[i]);\n            }\n            for (int i = n - 1; i > (n / 2) - 1; i--) {\n                y = y + Character.getNumericValue(l[i]);\n            }\n            if (x == y) {\n                System.out.println(\"YES\");\n            } else {\n                System.out.println(\"NO\");\n            }\n        }\n    }\n}\n", "id": "codeforces_146_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC124_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        ;\n        int sum = 0;\n        for (int i = 0; i < 2; i++) {\n            if (a >= b) {\n                sum += a;\n                a = a - 1;\n            } else {\n                sum += b;\n                b = b - 1;\n            }\n        }\n        System.out.println(sum);\n    }\n}\n", "id": "atcoder_ABC124_A"}
{"code": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class codeforces_514_A {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        List<Long> list = new ArrayList<>();\n        long x = sc.nextLong();\n        while (x > 0) {\n            long r = x % 10;\n            if (9 - r < r) {\n                if (x / 10 == 0 && 9 - r == 0) list.add(r);\n                else list.add(9 - r);\n            } else list.add(r);\n            x = x / 10;\n        }\n        int pow = 0;\n        long newNumber = 0;\n        for (int i = 0; i < list.size(); i++) {\n            newNumber = newNumber + list.get(i) * (long) Math.pow(10, pow);\n            pow++;\n        }\n        System.out.println(newNumber);\n    }\n}\n", "id": "codeforces_514_A"}
{"code": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.util.Scanner;\n\npublic class atcoder_AGC038_A {\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n        int H = sc.nextInt();\n        int W = sc.nextInt();\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        if (W < 2 * A || H < 2 * B) {\n            System.out.println(-1);\n            return;\n        }\n        for (int i = 0; i < H; i++) {\n            for (int j = 0; j < W; j++) {\n                if ((i < B && j < A) || (i >= B) && (j >= A)) bw.write(\"0\");\n                else bw.write(\"1\");\n            }\n            bw.newLine();\n        }\n        bw.flush();\n    }\n}\n", "id": "atcoder_AGC038_A"}
{"code": "import java.util.*;\n\npublic class codeforces_469_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int levels = sc.nextInt();\n        int sum = 0;\n        int sum2 = 0;\n        int sum3 = 0;\n        int[] arr = new int[levels];\n        int count = 0;\n        for (int i = 0; i < levels; i++) {\n            arr[i] = sc.nextInt();\n        }\n        int level2 = sc.nextInt();\n        int level3 = levels + level2;\n        int[] arr2 = new int[level3];\n        for (int i = 0; i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }\n        for (int i = arr.length; i < level3; i++) {\n            arr2[i] = sc.nextInt();\n        }\n        for (int i = 0; i < arr2.length; i++) {}\n        int[] arr3 = new int[n];\n        int j = 0;\n        for (int i = 0; i < n; i++) {\n            arr3[i] = ++j;\n        }\n        for (int i = 0; i < n; i++) {\n            for (int x = 0; x < arr2.length; x++) {\n                if (arr3[i] == arr2[x]) {\n                    count++;\n                    break;\n                }\n            }\n        }\n        if (count == n) {\n            System.out.println(\"I become the guy.\");\n        } else {\n            System.out.println(\"Oh, my keyboard!\");\n        }\n    }\n}\n", "id": "codeforces_469_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_96_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        long number = in.nextLong();\n        long ans = -1, value = 0;\n        int mask = 2;\n        while (value < number) {\n            String s = Integer.toBinaryString(mask++).substring(1);\n            int zeros = 0;\n            for (char c : s.toCharArray()) if (c == '0') zeros++;\n            if (zeros != s.length() - zeros) continue;\n            s = s.replace('0', '4');\n            s = s.replace('1', '7');\n            value = Long.parseLong(s);\n        }\n        System.out.println(value);\n    }\n}\n", "id": "codeforces_96_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_569_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int T = in.nextInt();\n        int S = in.nextInt();\n        int q = in.nextInt();\n        long previous = S;\n        int answer = 0;\n        while (previous < T) {\n            answer++;\n            previous *= q;\n        }\n        System.out.println(answer);\n    }\n}\n", "id": "codeforces_569_A"}
{"code": "import java.math.BigDecimal;\nimport java.util.*;\n\npublic class atcoder_ABC168_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int H = sc.nextInt();\n        int M = sc.nextInt();\n        BigDecimal AA = new BigDecimal(A);\n        BigDecimal BB = new BigDecimal(B);\n        BigDecimal HH = new BigDecimal(H);\n        BigDecimal MM = new BigDecimal(M);\n        BigDecimal ans2;\n        BigDecimal kaku;\n        BigDecimal mkaku;\n        BigDecimal hkaku;\n        BigDecimal AA2;\n        BigDecimal BB2;\n        BigDecimal CC;\n        BigDecimal DD;\n        double dkaku;\n        double dans2;\n        mkaku = MM.multiply(BigDecimal.valueOf(6));\n        hkaku = HH.multiply(BigDecimal.valueOf(30));\n        hkaku = hkaku.add(BigDecimal.valueOf((double) M / 2));\n        kaku = mkaku.subtract(hkaku);\n        dkaku = Math.abs(Math.toRadians(kaku.doubleValue()));\n        AA2 = AA.multiply(AA);\n        BB2 = BB.multiply(BB);\n        CC = AA2.add(BB2);\n        DD = BigDecimal.valueOf(Math.cos(dkaku));\n        DD = DD.multiply(BigDecimal.valueOf(2));\n        DD = DD.multiply(AA);\n        DD = DD.multiply(BB);\n        ans2 = CC.subtract(DD);\n        dans2 = ans2.doubleValue();\n        double ans = Math.sqrt(dans2);\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_ABC168_C"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC133_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int D = sc.nextInt();\n        int[][] vectors = new int[N][D];\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < D; j++) {\n                vectors[i][j] = sc.nextInt();\n            }\n        }\n        int answer = 0;\n        for (int i = 0; i < N - 1; i++) {\n            for (int j = i + 1; j < N; j++) {\n                int dist = 0;\n                for (int d = 0; d < D; d++) {\n                    int x = (vectors[i][d] - vectors[j][d]);\n                    dist += (x * x);\n                }\n                double sq = Math.sqrt(dist);\n                answer += (Math.abs(sq - Math.floor(sq)) < 0.001 ? 1 : 0);\n            }\n        }\n        System.out.println(answer);\n    }\n}\n", "id": "atcoder_ABC133_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC129_E {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int M = 1000000007;\n        char[] s = sc.nextLine().toCharArray();\n        int n = s.length;\n        int[][] dp = new int[n + 1][2];\n        dp[0][0] = 1;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '0') {\n                dp[i + 1][0] = dp[i][0];\n                dp[i + 1][1] = dp[i][1];\n            } else {\n                dp[i + 1][1] = (dp[i][0] + dp[i][1]) % M;\n            }\n            if (s[i] == '0') {\n                dp[i + 1][1] += (dp[i][1] * 2) % M;\n                dp[i + 1][1] %= M;\n            } else {\n                dp[i + 1][0] += (dp[i][0] * 2) % M;\n                dp[i + 1][1] += (dp[i][1] * 2) % M;\n                dp[i + 1][0] %= M;\n                dp[i + 1][1] %= M;\n            }\n        }\n        System.out.println((dp[n][0] + dp[n][1]) % M);\n    }\n}\n", "id": "atcoder_ABC129_E"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC172_D {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long ans = 0;\n        for (int i = 1; i < n + 1; i++) {\n            ans += (long) i * ((long) n / (long) i) * (((long) n / (long) i) + 1) / 2;\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_ABC172_D"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC132_F {\n    public static void main(String[] args) {\n        long mod = (long) 1e9 + 7;\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        sc.close();\n        ArrayList<Integer> len = new ArrayList<>();\n        int l = 1;\n        while (l <= n) {\n            int r = n / (n / l);\n            len.add(r - l + 1);\n            l = r + 1;\n        }\n        int q = len.size();\n        long[] dp = new long[k * (q + 1)];\n        for (int j = 1; j <= q; j++) {\n            dp[j] = len.get(j - 1) + dp[j - 1];\n        }\n        for (int i = 1; i < k; i++) {\n            for (int j = 1; j <= q; j++) {\n                dp[i * (q + 1) + j] =\n                        dp[i * (q + 1) + j - 1]\n                                + dp[(i - 1) * (q + 1) + q - j + 1] * len.get(j - 1);\n                dp[i * (q + 1) + j] %= mod;\n            }\n        }\n        System.out.println(dp[k * (q + 1) - 1]);\n    }\n}\n", "id": "atcoder_ABC132_F"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC107_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int K = sc.nextInt();\n        int S[] = new int[N];\n        for (int i = 0; i < N; i++) S[i] = sc.nextInt();\n        int temp = 0;\n        int ans = 1000000000;\n        if (K == 1) {\n            for (int i = 0; i < N; i++) {\n                temp = S[i];\n                ans = Math.min(Math.abs(temp), ans);\n            }\n            System.out.println(ans);\n        } else if (N - K != 0) {\n            for (int i = 0; i <= N - K; i++) {\n                int min = S[i];\n                int max = S[i + K - 1];\n                if (min < 0 && max > 0) temp = Math.min(2 * (-min) + max, (-min) + 2 * max);\n                else temp = Math.max(Math.abs(min), Math.abs(max));\n                ans = Math.min(ans, temp);\n            }\n            System.out.println(ans);\n        } else {\n            int min = S[0];\n            int max = S[N - 1];\n            if (min < 0 && max > 0)\n                System.out.println(Math.min(2 * (-min) + max, (-min) + 2 * max));\n            else System.out.println(Math.max(Math.abs(min), Math.abs(max)));\n        }\n        sc.close();\n    }\n}\n", "id": "atcoder_ABC107_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_334_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = in.nextInt();\n        int square = n * n;\n        ArrayList<Integer> odd = new ArrayList<>();\n        ArrayList<Integer> even = new ArrayList<>();\n        for (int i = 1; i <= square; i++) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        int loop = square / n;\n        int div = loop / 2;\n        debug(div);\n        for (int i = 1; i <= loop; i++) {\n            for (int j = 0; j < div; j++) {\n                if (i % 2 == 1) {\n                    pw.print(odd.remove(0) + \" \" + (even.remove(even.size() - 1)) + \" \");\n                } else {\n                    pw.print(even.remove(0) + \" \" + (odd.remove(odd.size() - 1)) + \" \");\n                }\n            }\n            pw.println();\n        }\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}\n", "id": "codeforces_334_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ARC102_C {\n    static int mod = 998244353;\n    static long[][] nchoosek;\n\n    public static void main(String[] args) {\n        nchoosek = new long[4001][4001];\n        for (int i = 0; i < nchoosek.length; i++) {\n            nchoosek[i][0] = nchoosek[i][i] = 1;\n        }\n        for (int i = 2; i < nchoosek.length; i++) {\n            for (int j = 1; j < i; j++) {\n                nchoosek[i][j] = (nchoosek[i - 1][j] + nchoosek[i - 1][j - 1]) % mod;\n            }\n        }\n        Scanner sc = new Scanner(System.in);\n        int k = sc.nextInt();\n        int n = sc.nextInt();\n        for (int i = 2; i <= 2 * k; i++) {\n            int pairs;\n            if (i > k) {\n                pairs = k - i / 2;\n            } else {\n                pairs = (i - 1) / 2;\n            }\n            int active = k - 2 * pairs;\n            if (i % 2 == 0) active -= 1;\n            long times2 = 1;\n            long total = 0;\n            for (int j = 0; j <= pairs; j++) {\n                long choice = times2 * nchoosek[pairs][j] % mod;\n                times2 = times2 * 2 % mod;\n                if (active + j - 1 < 0) continue;\n                total += choice * nchoosek[n + active - 1][active + j - 1];\n                if (i % 2 == 0) {\n                    total += choice * nchoosek[n + active - 2][active + j - 1];\n                }\n                total %= mod;\n            }\n            System.out.println(total);\n        }\n    }\n}\n", "id": "atcoder_ARC102_C"}
{"code": "import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class atcoder_ABC109_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        HashMap<Integer, String> map = new HashMap<>();\n        for (int i = 0; i < N; i++) {\n            map.put(i, sc.next());\n        }\n        boolean ans = true;\n        HashMap<Integer, String> past = new HashMap<>();\n        String next = \"\";\n        for (int i = 0; i < N; i++) {\n            if (past.containsValue(map.get(i))) {\n                ans = false;\n                break;\n            }\n            past.put(i, map.get(i));\n            if (i != 0) {\n                if (!next.equals(map.get(i).substring(0, 1))) {\n                    ans = false;\n                    break;\n                }\n            }\n            next = map.get(i).substring(map.get(i).length() - 1, map.get(i).length());\n        }\n        if (ans) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}\n", "id": "atcoder_ABC109_B"}
{"code": "import java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Scanner;\n\npublic class atcoder_ABC152_C {\n    public static void main(String[] args) {\n        System.out.println(solve());\n    }\n\n    public static int solve() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] arr = new int[N];\n        for (int i = 0; i < N; i++) {\n            arr[i] = sc.nextInt();\n        }\n        int sum = 0;\n        Queue<Integer> q = new PriorityQueue<>();\n        for (int i = 0; i < arr.length; i++) {\n            q.add(arr[i]);\n            if (arr[i] <= q.peek()) {\n                sum++;\n            }\n        }\n        return sum;\n    }\n}\n", "id": "atcoder_ABC152_C"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_544_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int count = scan.nextInt();\n        printIsland(n, count);\n    }\n\n    public static void printIsland(int n, int count) {\n        int a = (n + 1) / 2;\n        int b = n / 2;\n        int max = a * a + b * b;\n        if (count > max) {\n            System.out.println(\"NO\");\n            return;\n        }\n        System.out.println(\"YES\");\n        for (int i = 0; i < n; i++) {\n            StringBuilder sb = new StringBuilder();\n            for (int j = 0; j < n; j++) {\n                if ((i + j) % 2 == 0 && count > 0) {\n                    sb.append('L');\n                    count--;\n                } else {\n                    sb.append('S');\n                }\n            }\n            System.out.println(sb);\n        }\n    }\n}\n", "id": "codeforces_544_B"}
{"code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class atcoder_ABC135_D {\n    public static void main(String[] args) {\n        new atcoder_ABC135_D().run();\n    }\n\n    final long MOD = (long) 1e9 + 7;\n\n    void run() {\n        Scanner sc = new Scanner(System.in);\n        char[] cs = sc.next().toCharArray();\n        long[][] dp = new long[cs.length][13];\n        int base = 1;\n        for (int i = 0; i < cs.length; ++i) {\n            if (cs[cs.length - 1 - i] == '?') {\n                for (int pre = 0; pre < 13; ++pre) {\n                    for (int next = 0; next < 10; ++next) {\n                        dp[i][(base * next + pre) % 13] +=\n                                (i > 0 ? dp[i - 1][pre] : (pre == 0 ? 1 : 0));\n                        dp[i][(base * next + pre) % 13] %= MOD;\n                    }\n                }\n            } else {\n                int next = cs[cs.length - 1 - i] - '0';\n                for (int pre = 0; pre < 13; ++pre) {\n                    dp[i][(base * next + pre) % 13] +=\n                            (i > 0 ? dp[i - 1][pre] : (pre == 0 ? 1 : 0));\n                    dp[i][(base * next + pre) % 13] %= MOD;\n                }\n            }\n            base = base * 10 % 13;\n        }\n        System.out.println(dp[dp.length - 1][5]);\n    }\n\n    void tr(Object... objects) {\n        System.out.println(Arrays.deepToString(objects));\n    }\n}\n", "id": "atcoder_ABC135_D"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class codeforces_276_B {\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        InputStreamReader inputStreamReader = new InputStreamReader(System.in);\n        BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\n        PrintWriter writer = new PrintWriter(System.out);\n        String str = bufferedReader.readLine();\n        Map<Character, Integer> map = new HashMap<>();\n        int oddCount = 0;\n        for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            if (map.containsKey(ch)) {\n                map.put(ch, map.get(ch) + 1);\n            } else {\n                map.put(ch, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() % 2 != 0) {\n                oddCount++;\n            }\n        }\n        if (oddCount <= 1 || oddCount % 2 != 0) {\n            writer.println(\"First\");\n        } else {\n            writer.println(\"Second\");\n        }\n        writer.flush();\n    }\n}\n", "id": "codeforces_276_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_AGC002_A {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        if (a > 0) {\n            System.out.println(\"Positive\");\n        } else if (b >= 0) {\n            System.out.println(\"Zero\");\n        } else if ((b - a + 1) % 2 == 0) {\n            System.out.println(\"Positive\");\n        } else {\n            System.out.println(\"Negative\");\n        }\n    }\n}\n", "id": "atcoder_AGC002_A"}
{"code": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class codeforces_302_A {\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        int arr[] = new int[n];\n        for (int i = 0; i < n; i++) arr[i] = sc.nextInt();\n        StringBuffer res = new StringBuffer();\n        int o = 0, e = 0;\n        for (int i = 0; i < n; i++)\n            if (arr[i] == 1) ++o;\n            else ++e;\n        for (int i = 0; i < k; i++) {\n            int l = sc.nextInt();\n            int r = sc.nextInt();\n            if ((r - l + 1) % 2 == 1) res.append(\"0\\n\");\n            else {\n                if ((r - l + 1) / 2 <= o && (r - l + 1) / 2 <= e) res.append(\"1\\n\");\n                else res.append(\"0\\n\");\n            }\n        }\n        System.out.print(res);\n        sc.close();\n    }\n}\n", "id": "codeforces_302_A"}
{"code": "import java.io.*;\nimport java.util.*;\nimport java.util.stream.*;\n\npublic class atcoder_ABC112_A {\n    private static BufferedReader br = null;\n\n    public static void main(String[] args) {\n        int n = Integer.parseInt(read(1)[0]);\n        if (n == 1) {\n            System.out.println(\"Hello World\");\n        } else {\n            String[] strs = read(2);\n            System.out.println(Integer.parseInt(strs[0]) + Integer.parseInt(strs[1]));\n        }\n    }\n\n    private static String[] read(int len) {\n        List<String> strList = new ArrayList<>();\n        try {\n            if (br == null) {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n            for (int i = 0; i < len; i++) {\n                strList.add(br.readLine());\n            }\n        } catch (IOException e) {\n        }\n        return strList.toArray(new String[0]);\n    }\n\n    private static void close() {\n        try {\n            if (br != null) {\n                br.close();\n            }\n        } catch (IOException e) {\n        }\n    }\n}\n", "id": "atcoder_ABC112_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_682_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = in.nextInt();\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(in.nextInt());\n        }\n        Collections.sort(list);\n        int c = 1;\n        for (int i = 0; i < n; i++) {\n            if (list.get(i) >= c) {\n                c++;\n            }\n        }\n        pw.println(c);\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}\n", "id": "codeforces_682_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC123_C {\n    private static Scanner sc = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        long N = sc.nextLong();\n        long min = 0;\n        for (int i = 0; i < 5; i++) {\n            if (i == 0) min = sc.nextLong();\n            else min = Math.min(min, sc.nextLong());\n        }\n        p((long) Math.ceil((double) N / min) + 4);\n    }\n\n    static void p(String ans) {\n        System.out.println(ans);\n    }\n    ;\n\n    static void p(int ans) {\n        System.out.println(ans);\n    }\n    ;\n\n    static void p() {\n        System.out.println();\n    }\n    ;\n\n    static void p(long ans) {\n        System.out.println(ans);\n    }\n    ;\n\n    static void p(double ans) {\n        System.out.println(ans);\n    }\n    ;\n}\n", "id": "atcoder_ABC123_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_ABC178_B {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static int modPower(int x, int y, int mod) {\n        int res = 1;\n        x %= mod;\n        if (x == 0) return 0;\n        while (y > 0) {\n            if (y % 2 == 1) {\n                res = (res * x) % mod;\n            }\n            y = y >> 1;\n            x = (x * x) % mod;\n        }\n        return res;\n    }\n\n    static class pair<T1, T2> {\n        T1 first;\n        T2 second;\n\n        pair(T1 first, T2 second) {\n            this.first = first;\n            this.second = second;\n        }\n    }\n\n    public static void main(String[] args) throws java.lang.Exception {\n        FastReader in = new FastReader();\n        long[] a = new long[4];\n        for (int i = 0; i < 4; i++) a[i] = in.nextLong();\n        System.out.println(\n                Math.max(a[0] * a[2], Math.max(a[1] * a[3], Math.max(a[0] * a[3], a[1] * a[2]))));\n    }\n}\n", "id": "atcoder_ABC178_B"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC162_D {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String s = sc.next();\n        long rc = 0;\n        long gc = 0;\n        long bc = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'R') {\n                rc++;\n            } else if (s.charAt(i) == 'G') {\n                gc++;\n            } else {\n                bc++;\n            }\n        }\n        long result = rc * gc * bc;\n        for (int i = 1; i <= n; i++) {\n            for (int k = i + 1; k <= n; k++) {\n                if ((i + k) % 2 == 0) {\n                    char is = s.charAt(i - 1);\n                    char ks = s.charAt(k - 1);\n                    char js = s.charAt(((i + k) / 2) - 1);\n                    if (is != ks && ks != js && js != is) {\n                        result--;\n                    }\n                }\n            }\n        }\n        System.out.println(result);\n    }\n}\n", "id": "atcoder_ABC162_D"}
{"code": "import java.util.Scanner;\nimport java.util.TreeMap;\n\npublic class atcoder_ABC123_B {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int a[] = new int[5];\n        int r[] = new int[5];\n        TreeMap<Integer, Integer> map = new TreeMap();\n        for (int i = 0; i < a.length; i++) {\n            a[i] = sc.nextInt();\n            r[i] = a[i] % 10;\n            int b = 10;\n            if (r[i] != 0) {\n                b = 10 - r[i];\n                map.put(b, a[i]);\n            }\n        }\n        int ans = 0;\n        if (map.size() == 0) {\n            for (int i = 0; i < a.length; i++) {\n                ans += a[i];\n            }\n            System.out.println(ans);\n            return;\n        }\n        int last = map.get(map.lastKey());\n        int idx = 0;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i] == last) {\n                idx = i;\n            }\n        }\n        for (int i = 0; i < a.length; i++) {\n            if (i != idx) {\n                if (a[i] % 10 == 0) {\n                    ans += a[i];\n                } else {\n                    ans += a[i] + (10 - r[i]);\n                }\n            }\n        }\n        ans += last;\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_ABC123_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class codeforces_342_B {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String input[] = reader.readLine().split(\" \");\n        int m = Integer.parseInt(input[1]);\n        int s = Integer.parseInt(input[2]);\n        int f = Integer.parseInt(input[3]);\n        int maxT = -1;\n        HashMap<Integer, ArrayList<Integer>> map = new HashMap<>();\n        while (m > 0) {\n            String mth[] = reader.readLine().split(\" \");\n            int k = Integer.parseInt(mth[0]);\n            map.put(k, new ArrayList<>());\n            map.get(k).add(Integer.parseInt(mth[1]));\n            map.get(k).add(Integer.parseInt(mth[2]));\n            maxT = Math.max(maxT, k);\n            m--;\n        }\n        StringBuilder actions = new StringBuilder();\n        final char M = (s < f) ? 'R' : 'L';\n        int d = (s < f) ? +1 : -1;\n        int cur = s;\n        int a = -1;\n        int b = -1;\n        for (int t = 1; t <= maxT; t++) {\n            if (map.containsKey(t)) {\n                a = map.get(t).get(0).intValue();\n                b = map.get(t).get(1).intValue();\n            }\n            if (map.containsKey(t) && ((cur >= a && cur <= b) || (cur + d >= a && cur + d <= b))) {\n                actions.append('X');\n            } else {\n                actions.append(M);\n                cur += d;\n            }\n            if (cur == f) break;\n        }\n        while (cur != f) {\n            actions.append(M);\n            cur += d;\n        }\n        System.out.println(actions);\n    }\n}\n", "id": "codeforces_342_B"}
{"code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class codeforces_242_B {\n    static final int INF = (int) 1e9 + 5;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n;\n        n = sc.nextInt();\n        ArrayList<Integer> a = new ArrayList<>();\n        ArrayList<Integer> b = new ArrayList<>();\n        int left = INF, right = 0;\n        for (int i = 0; i < n; i++) {\n            a.add(sc.nextInt());\n            b.add(sc.nextInt());\n            left = Math.min(left, a.get(i));\n            right = Math.max(right, b.get(i));\n        }\n        for (int i = 0; i < n; i++) {\n            if (left == a.get(i) && right == b.get(i)) {\n                System.out.println(++i);\n                return;\n            }\n        }\n        System.out.println(-1);\n    }\n}\n", "id": "codeforces_242_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_567_A {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        int a = s.nextInt();\n        int ar[] = new int[a];\n        int max = 0, min = 0;\n        for (int i = 0; i < ar.length; i++) ar[i] = s.nextInt();\n        for (int i = 0; i < ar.length; i++) {\n            max = Math.max(ar[i] - ar[0], ar[ar.length - 1] - ar[i]);\n            if (i == 0) min = ar[i + 1] - ar[i];\n            else if (i == ar.length - 1) min = ar[i] - ar[i - 1];\n            else min = Math.min(ar[i] - ar[i - 1], ar[i + 1] - ar[i]);\n            System.out.println(min + \" \" + max);\n        }\n    }\n}\n", "id": "codeforces_567_A"}
{"code": "import java.util.*;\n\npublic class codeforces_404_A {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        char arr[][] = new char[n][n];\n        String str[] = new String[n];\n        for (int i = 0; i < n; i++) {\n            str[i] = sc.next();\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                arr[i][j] = str[i].charAt(j);\n            }\n        }\n        char a = arr[0][0];\n        char b = arr[0][1];\n        if (a == b) System.out.println(\"NO\");\n        else {\n            boolean res = true;\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < n; j++) {\n                    if (i == j || i + j == n - 1) {\n                        if (arr[i][j] != a) {\n                            res = false;\n                            break;\n                        }\n                    } else {\n                        if (arr[i][j] != b) {\n                            res = false;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (res) System.out.println(\"YES\");\n            else System.out.println(\"NO\");\n        }\n    }\n}\n", "id": "codeforces_404_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC166_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        long M = sc.nextLong();\n        long[] H = new long[N];\n        boolean[] ans = new boolean[N];\n        for (int i = 0; i < N; i++) {\n            H[i] = sc.nextLong();\n            ans[i] = true;\n        }\n        for (int i = 0; i < M; i++) {\n            int temp1 = sc.nextInt();\n            int temp2 = sc.nextInt();\n            if (H[temp1 - 1] < H[temp2 - 1]) {\n                ans[temp1 - 1] = false;\n            } else if (H[temp1 - 1] > H[temp2 - 1]) {\n                ans[temp2 - 1] = false;\n            } else {\n                ans[temp1 - 1] = false;\n                ans[temp2 - 1] = false;\n            }\n        }\n        int ans2 = 0;\n        for (int i = 0; i < N; i++) {\n            if (ans[i]) {\n                ans2++;\n            }\n        }\n        System.out.println(ans2);\n    }\n}\n", "id": "atcoder_ABC166_C"}
{"code": "import java.math.BigDecimal;\nimport java.text.DecimalFormat;\nimport java.util.Scanner;\n\npublic class atcoder_AGC007_C {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        double N = scan.nextDouble();\n        double d = scan.nextDouble();\n        double x = scan.nextDouble();\n        BigDecimal ans = new BigDecimal(\"0.0\");\n        while (N > 0.5) {\n            BigDecimal adnum = BigDecimal.valueOf(d + x * (N - 0.5));\n            ans = ans.add(adnum);\n            d = (N + 1.0) * d / N + (5.0 * x) / (2.0 * N);\n            x = (1.0 + (2.0 / N)) * x;\n            --N;\n        }\n        DecimalFormat format = new DecimalFormat(\"#.#\");\n        format.setMinimumFractionDigits(20);\n        System.out.println(format.format(ans));\n    }\n}\n", "id": "atcoder_AGC007_C"}
{"code": "import java.util.*;\n\npublic class codeforces_579_A {\n    public static void main(String[] args) {\n        Scanner str = new Scanner(System.in);\n        int n = str.nextInt();\n        String s = \"\";\n        while (n > 0) {\n            int x = n % 2;\n            n /= 2;\n            s += x + \"\";\n        }\n        int ans = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == '1') {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "codeforces_579_A"}
{"code": "import java.math.BigInteger;\nimport java.util.*;\nimport java.util.stream.*;\n\npublic class atcoder_AGC028_A {\n    static Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] $) {\n        int n = scanner.nextInt(),\n                m = scanner.nextInt(),\n                gcd = BigInteger.valueOf(n).gcd(BigInteger.valueOf(m)).intValue();\n        String s = scanner.next(), t = scanner.next();\n        System.out.println(\n                IntStream.range(0, gcd)\n                        .filter(k -> s.charAt(k * n / gcd) != t.charAt(k * m / gcd))\n                        .mapToLong(k -> -1)\n                        .findAny()\n                        .orElse(\n                                BigInteger.valueOf(n)\n                                        .multiply(BigInteger.valueOf(m))\n                                        .divide(BigInteger.valueOf(gcd))\n                                        .longValue()));\n    }\n}\n", "id": "atcoder_AGC028_A"}
{"code": "import java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class atcoder_AGC021_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int N = scan.nextInt();\n        int[] x = new int[N];\n        int[] y = new int[N];\n        for (int i = 0; i < N; ++i) {\n            x[i] = scan.nextInt();\n            y[i] = scan.nextInt();\n        }\n        for (int i = 0; i < N; ++i) {\n            List<Double> thetas = new ArrayList<>();\n            for (int j = 0; j < N; ++j) {\n                if (i == j) continue;\n                thetas.add(Math.atan2(y[j] - y[i], x[j] - x[i]));\n            }\n            thetas.sort(Comparator.naturalOrder());\n            thetas.add(thetas.get(0) + 2 * Math.PI);\n            double ans = 0;\n            for (int k = 0; k < N - 1; ++k)\n                ans = Math.max(ans, thetas.get(k + 1) - thetas.get(k) - Math.PI);\n            System.out.println(ans / (Math.PI * 2));\n        }\n    }\n}\n", "id": "atcoder_AGC021_B"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_350_B {\n    static Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        int a[] = new int[n + 1];\n        int b[] = new int[n + 1];\n        int num[] = new int[n + 1];\n        for (int i = 1; i <= n; i++) a[i] = scanner.nextInt();\n        for (int i = 1; i <= n; i++) b[i] = scanner.nextInt();\n        for (int i = 1; i <= n; i++) num[b[i]]++;\n        String ss = \"\";\n        int ans = 0;\n        boolean st[] = new boolean[n + 1];\n        for (int i = 1; i <= n; i++) {\n            if (a[i] == 1) {\n                st[i] = true;\n                StringBuilder sb = new StringBuilder();\n                int x = b[i];\n                StringBuilder sss = new StringBuilder();\n                sss.append(i);\n                sb.append(\" \" + sss.reverse());\n                int s = 1;\n                while (!st[x] && num[x] == 1 && x != 0 && a[x] != 1) {\n                    sss = new StringBuilder();\n                    sss.append(x);\n                    sb.append(\" \" + sss.reverse());\n                    st[x] = true;\n                    x = b[x];\n                    s++;\n                }\n                if (s > ans) {\n                    ans = s;\n                    ss = sb.reverse().toString();\n                }\n            }\n        }\n        System.out.println(ans);\n        System.out.println(ss);\n    }\n}\n", "id": "codeforces_350_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_AGC037_E {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        try {\n            final int N = sc.nextInt();\n            int K = sc.nextInt();\n            StringBuilder S = new StringBuilder(sc.next());\n            boolean firstTime = true;\n            int step = 1;\n            while (K > 0) {\n                StringBuilder T = new StringBuilder(S.toString());\n                T.reverse();\n                StringBuilder revU = new StringBuilder(S.toString() + T.toString());\n                revU.reverse();\n                String sDash = S.toString();\n                for (int i = N; i >= 0; i -= step) {\n                    String tmp = revU.substring(i, i + N);\n                    if (sDash.compareTo(tmp) > 0) {\n                        sDash = tmp;\n                    } else {\n                        if (!firstTime) {\n                            break;\n                        }\n                    }\n                }\n                if (firstTime) {\n                    firstTime = false;\n                    if (Math.pow(2, K) > N) {\n                        char c = sDash.charAt(0);\n                        for (int i = 0; i < N; i++) {\n                            System.out.print(c);\n                        }\n                        System.out.println();\n                        System.exit(0);\n                    }\n                } else {\n                    step += step;\n                }\n                K--;\n                S = new StringBuilder(sDash);\n                S.reverse();\n            }\n            System.out.println(S.reverse());\n        } finally {\n            sc.close();\n        }\n    }\n}\n", "id": "atcoder_AGC037_E"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_ABC174_C {\n    private static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    private static final PrintWriter pw =\n            new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n    private static StringTokenizer st;\n\n    private static int readInt() throws IOException {\n        while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return Integer.parseInt(st.nextToken());\n    }\n\n    public static void main(String[] args) throws IOException {\n        pw.println(solve());\n        pw.close();\n    }\n\n    private static int solve() throws IOException {\n        int K = readInt();\n        if (K % 2 == 0 || K % 5 == 0) return -1;\n        if (K % 7 == 0) K /= 7;\n        K *= 9;\n        int ans = 1;\n        int remainder = 10 % K;\n        while (remainder != 1) {\n            ans++;\n            remainder = remainder * 10 % K;\n        }\n        return ans;\n    }\n}\n", "id": "atcoder_ABC174_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_462_B {\n    public static void main(String[] args) throws Exception {\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        StringTokenizer st = new StringTokenizer(f.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int k = Integer.parseInt(st.nextToken());\n        c462b[] cards = new c462b[26];\n        for (int i = 0; i < 26; i++) {\n            cards[i] = new c462b();\n        }\n        String s = f.readLine();\n        for (int t = 0; t < n; t++) {\n            cards[s.charAt(t) - 'A'].left++;\n        }\n        long ans = 0;\n        for (int i = 0; i < k; i++) {\n            Arrays.sort(cards);\n            long change = Math.min(cards[25].left, k - i);\n            ans += change * change;\n            cards[25].left -= change;\n            i += change - 1;\n        }\n        out.println(ans);\n        out.close();\n    }\n}\n\nclass c462b implements Comparable {\n    int left = 0;\n\n    @Override\n    public int compareTo(Object o) {\n        return left - ((c462b) o).left;\n    }\n}\n", "id": "codeforces_462_B"}
{"code": "import static java.lang.Math.*;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class codeforces_333_B {\n    public static FastReader in = new FastReader();\n    public static PrintWriter out = new PrintWriter(System.out);\n\n    public static void main(String[] args) {\n        int n = in.nextInt(), m = in.nextInt();\n        Set<Integer> bannedRows, bannedCols;\n        bannedRows = new HashSet<>();\n        bannedCols = new HashSet<>();\n        for (int i = 0; i < m; i++) {\n            int r = in.nextInt();\n            if (r > 1 && r < n) bannedRows.add(r);\n            int c = in.nextInt();\n            if (c > 1 && c < n) bannedCols.add(c);\n        }\n        int answer = (n - 2) * 2;\n        answer -= bannedRows.size();\n        answer -= bannedCols.size();\n        if (n % 2 != 0) {\n            int mid = (n + 1) / 2;\n            if (!bannedRows.contains(mid) && !bannedCols.contains(mid)) {\n                answer--;\n            }\n        }\n        out.println(answer);\n        out.close();\n    }\n\n    public static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "id": "codeforces_333_B"}
{"code": "import java.util.*;\n\npublic class atcoder_AGC033_B {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int h = scanner.nextInt();\n        int w = scanner.nextInt();\n        int n = scanner.nextInt();\n        int sr = scanner.nextInt();\n        int sc = scanner.nextInt();\n        String s = scanner.next();\n        String t = scanner.next();\n        boolean end = false;\n        int usafe = 1;\n        int dsafe = h;\n        for (int i = n - 1; i >= 0; i--) {\n            if (s.charAt(i) == 'U') {\n                usafe++;\n            } else if (s.charAt(i) == 'D') {\n                dsafe--;\n            }\n            if (usafe > dsafe) {\n                end = true;\n                break;\n            }\n            if (i > 0) {\n                if (t.charAt(i - 1) == 'U') {\n                    dsafe = Math.min(dsafe + 1, h);\n                } else if (t.charAt(i - 1) == 'D') {\n                    usafe = Math.max(usafe - 1, 1);\n                }\n            }\n        }\n        int lsafe = 1;\n        int rsafe = w;\n        for (int i = n - 1; i >= 0; i--) {\n            if (s.charAt(i) == 'L') {\n                lsafe++;\n            } else if (s.charAt(i) == 'R') {\n                rsafe--;\n            }\n            if (lsafe > rsafe) {\n                end = true;\n                break;\n            }\n            if (i > 0) {\n                if (t.charAt(i - 1) == 'L') {\n                    rsafe = Math.min(rsafe + 1, w);\n                } else if (t.charAt(i - 1) == 'R') {\n                    lsafe = Math.max(lsafe - 1, 1);\n                }\n            }\n        }\n        if (sr >= usafe && sr <= dsafe && sc >= lsafe && sc <= rsafe && !end) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n", "id": "atcoder_AGC033_B"}
{"code": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class atcoder_ABC146_D {\n    static int n;\n    static List<ArrayList<Edge>> g;\n    static int[] ans;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.next());\n        g = new ArrayList();\n        for (int i = 0; i < n; i++) {\n            g.add(new ArrayList<Edge>());\n        }\n        for (int i = 0; i < n - 1; i++) {\n            int a = Integer.parseInt(sc.next()) - 1;\n            int b = Integer.parseInt(sc.next()) - 1;\n            g.get(a).add(new Edge(i, b));\n            g.get(b).add(new Edge(i, a));\n        }\n        ans = new int[n - 1];\n        dfs(0, -1, -1);\n        int max = 0;\n        for (int temp : ans) {\n            max = Math.max(max, temp);\n        }\n        System.out.println(max);\n        for (int c : ans) {\n            System.out.println(c);\n        }\n    }\n\n    static void dfs(int to, int color, int parents) {\n        int k = 1;\n        for (Edge e : g.get(to)) {\n            if (e.to == parents) continue;\n            if (k == color) k++;\n            ans[e.id] = k;\n            dfs(e.to, k, to);\n            k++;\n        }\n    }\n}\n\nclass Edge {\n    Edge(int id, int to) {\n        this.id = id;\n        this.to = to;\n    }\n\n    int id;\n    int to;\n}\n", "id": "atcoder_ABC146_D"}
{"code": "import static java.lang.Math.*;\n\nimport java.util.*;\n\npublic class atcoder_AGC012_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] array = new int[3 * n];\n        for (int i = 0; i < array.length; i++) array[i] = sc.nextInt();\n        Arrays.sort(array);\n        int head = array.length - 2;\n        long res = 0;\n        for (int i = 0; i < n; i++) {\n            res += array[head];\n            head -= 2;\n        }\n        System.out.println(res);\n    }\n}\n", "id": "atcoder_AGC012_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC142_C {\n    public static List<Integer> P;\n\n    public static void main(String args[]) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        Map<Integer, Integer> idorder = new HashMap<>();\n        for (int i = 1; i <= N; i++) {\n            int A = scanner.nextInt();\n            idorder.put(A, i);\n        }\n        for (int i = 1; i <= N; i++) {\n            System.out.print(idorder.get(i));\n            System.out.print(\" \");\n        }\n    }\n}\n", "id": "atcoder_ABC142_C"}
{"code": "import java.util.Scanner;\nimport java.util.stream.IntStream;\n\npublic class atcoder_ABC119_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        double[] x = new double[N];\n        String[] u = new String[N];\n        for (int i = 0; i < N; ++i) {\n            x[i] = sc.nextDouble();\n            u[i] = sc.next();\n        }\n        System.out.println(solve(x, u));\n        sc.close();\n    }\n\n    static double solve(double[] x, String[] u) {\n        return IntStream.range(0, x.length)\n                .mapToDouble(i -> x[i] * (u[i].equals(\"JPY\") ? 1 : 380000))\n                .sum();\n    }\n}\n", "id": "atcoder_ABC119_B"}
{"code": "import java.util.ArrayDeque;\nimport java.util.Scanner;\n\npublic class atcoder_AGC005_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int N = scan.nextInt();\n        int[] a = new int[N];\n        for (int i = 0; i < N; ++i) {\n            a[i] = scan.nextInt();\n        }\n        int[] leftl = new int[N];\n        int[] rightl = new int[N];\n        ArrayDeque<Integer> que = new ArrayDeque<>();\n        int index = 0;\n        while (index < N) {\n            while (!que.isEmpty() && a[que.peek()] > a[index]) {\n                int ind = que.poll();\n                rightl[ind] = index - ind - 1;\n            }\n            que.push(index++);\n        }\n        while (!que.isEmpty()) {\n            int ind = que.poll();\n            rightl[ind] = N - ind - 1;\n        }\n        index = N - 1;\n        while (index >= 0) {\n            while (!que.isEmpty() && a[que.peek()] > a[index]) {\n                int ind = que.poll();\n                leftl[ind] = ind - index - 1;\n            }\n            que.push(index--);\n        }\n        while (!que.isEmpty()) {\n            int ind = que.poll();\n            leftl[ind] = ind - index - 1;\n        }\n        long ans = 0;\n        for (int i = 0; i < N; ++i) {\n            ans += (long) a[i] * (leftl[i] + 1) * (rightl[i] + 1);\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_AGC005_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC168_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int K = in.nextInt();\n        String S = in.next();\n        if (S.length() <= K) {\n            System.out.println(S);\n        } else {\n            System.out.println(S.substring(0, K) + \"...\");\n        }\n    }\n}\n", "id": "atcoder_ABC168_B"}
{"code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class atcoder_ABC150_C {\n    public static List<String> permutation(List<String> list, String target, String ans) {\n        if (target.length() <= 1) {\n            list.add(ans + target);\n        } else {\n            for (int i = 0; i < target.length(); i++) {\n                permutation(\n                        list,\n                        target.substring(0, i) + target.substring(i + 1),\n                        ans + target.charAt(i));\n            }\n        }\n        return list;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Integer n = Integer.parseInt(scanner.next());\n        String[][] line = new String[2][1];\n        for (int i = 0; i < 2; i++) {\n            Arrays.fill(line[i], \"\");\n            for (int j = 0; j < n; j++) {\n                line[i][0] += scanner.next();\n            }\n        }\n        String number = \"\";\n        for (int i = 1; i <= n; i++) {\n            number += i;\n        }\n        List<String> listA = new ArrayList<>();\n        permutation(listA, number, \"\");\n        int sum = 0;\n        for (int j = 0; j < line.length; j++) {\n            for (int i = 0; i < listA.size(); i++) {\n                if (listA.get(i).equals(line[j][0])) {\n                    if (sum == 0) {\n                        sum += i;\n                    } else {\n                        sum -= i;\n                    }\n                }\n            }\n        }\n        System.out.println(Math.abs(sum));\n    }\n}\n", "id": "atcoder_ABC150_C"}
{"code": "import java.util.Collections;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Scanner;\n\nclass Job implements Comparable<Job> {\n    int a;\n    int b;\n\n    Job(int a, int b) {\n        this.a = a;\n        this.b = b;\n    }\n\n    @Override\n    public int compareTo(Job otherJob) {\n        if (otherJob.a == this.a) return this.b - otherJob.b;\n        else return this.a - otherJob.a;\n    }\n}\n\npublic class atcoder_ABC137_D {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] line = sc.nextLine().split(\" \\u2581 \");\n        int N = Integer.parseInt(line[0]);\n        int M = Integer.parseInt(line[1]);\n        Queue<Job> q = new PriorityQueue<>();\n        for (int i = 0; i < N; i++) {\n            line = sc.nextLine().split(\" \\u2581 \");\n            q.add(new Job(Integer.parseInt(line[0]), Integer.parseInt(line[1])));\n        }\n        int cnt = 0;\n        Queue<Integer> jobQ = new PriorityQueue<>(Collections.reverseOrder());\n        for (int i = 1; i <= M; i++) {\n            while (!q.isEmpty()) {\n                Job job = q.peek();\n                if (job.a <= i) {\n                    jobQ.add(q.poll().b);\n                } else break;\n            }\n            if (!jobQ.isEmpty()) cnt += jobQ.poll();\n        }\n        System.out.println(cnt);\n    }\n}\n", "id": "atcoder_ABC137_D"}
{"code": "import java.util.*;\n\npublic class codeforces_598_A {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int q = sc.nextInt();\n        while (q-- > 0) {\n            int n = sc.nextInt();\n            long s = 0;\n            int x = (int) (Math.log(n) / Math.log(2));\n            x++;\n            s =\n                    -1 * (long) Math.pow(2, x)\n                            + 2\n                            + ((long) n * (long) (n + 1)) / 2\n                            - (long) Math.pow(2, x);\n            System.out.println(s);\n        }\n    }\n}\n", "id": "codeforces_598_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_67_B extends PrintWriter {\n    codeforces_67_B() {\n        super(System.out, true);\n    }\n\n    Scanner sc = new Scanner(System.in);\n\n    public static void main(String[] $) {\n        codeforces_67_B o = new codeforces_67_B();\n        o.main();\n        o.flush();\n    }\n\n    void main() {\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        int[] bb = new int[n];\n        for (int i = 0; i < n; i++) bb[i] = sc.nextInt();\n        int[] aa = new int[n];\n        int m = 0;\n        for (int a = n - 1; a >= 0; a--) {\n            int j = 0;\n            while (bb[a] > 0) {\n                if (aa[j] >= a + k) bb[a]--;\n                j++;\n            }\n            for (int j_ = m++; j_ > j; j_--) aa[j_] = aa[j_ - 1];\n            aa[j] = a;\n        }\n        for (int i = 0; i < n; i++) print(aa[i] + 1 + \" \");\n        println();\n    }\n}\n", "id": "codeforces_67_B"}
{"code": "import java.util.*;\n\npublic class codeforces_583_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        while (in.hasNext()) {\n            int n = in.nextInt();\n            int[] a = new int[n];\n            int[] b = new int[n];\n            int s = -1;\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextInt();\n                b[i] = 0;\n            }\n            int tem = 1;\n            int q = 0;\n            while (q != n) {\n                s++;\n                if (tem == 1) {\n                    for (int i = 0; i < n; i++) {\n                        if (a[i] <= q && b[i] == 0) {\n                            b[i] = 1;\n                            q++;\n                        }\n                    }\n                    tem = 0;\n                } else {\n                    for (int i = n - 1; i >= 0; i--) {\n                        if (a[i] <= q && b[i] == 0) {\n                            b[i] = 1;\n                            q++;\n                        }\n                    }\n                    tem = 1;\n                }\n            }\n            System.out.println(s);\n        }\n    }\n}\n", "id": "codeforces_583_B"}
{"code": "import java.io.PrintWriter;\nimport java.util.*;\nimport java.util.Scanner;\n\npublic class codeforces_106_B {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = input.nextInt();\n        int[][] vec = new int[n][4];\n        for (int i = 0; i < n; i++) {\n            vec[i][0] = input.nextInt();\n            vec[i][1] = input.nextInt();\n            vec[i][2] = input.nextInt();\n            vec[i][3] = input.nextInt();\n        }\n        int ans = 500;\n        int ansprice = 20000;\n        for (int i = 0; i < n; i++) {\n            int fl = 1;\n            for (int j = 0; j < n; j++) {\n                if (vec[i][0] < vec[j][0] && vec[i][1] < vec[j][1] && vec[i][2] < vec[j][2]) {\n                    fl = 0;\n                }\n            }\n            if (fl == 1) {\n                if (vec[i][3] < ansprice) {\n                    ansprice = vec[i][3];\n                    ans = i + 1;\n                }\n            }\n        }\n        System.out.println(ans);\n        out.close();\n    }\n}\n", "id": "codeforces_106_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class codeforces_37_A {\n    public static void main(String[] args) {\n        FastScanner input = new FastScanner();\n        int n = input.nextInt();\n        HashMap<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            int val = input.nextInt();\n            map.put(val, map.getOrDefault(val, 0) + 1);\n        }\n        int max = Integer.MIN_VALUE;\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            Integer value = entry.getValue();\n            max = Math.max(max, value);\n        }\n        System.out.println(max + \"\" + map.size());\n    }\n\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() throws IOException {\n            return br.readLine();\n        }\n    }\n}\n", "id": "codeforces_37_A"}
{"code": "import java.util.*;\n\npublic class codeforces_7_B {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        int t = s.nextInt();\n        int m = s.nextInt();\n        int[] memory = new int[m];\n        int allocIdx = 0;\n        for (int j = 0; j < t; j++) {\n            switch (s.next()) {\n                case \"alloc\":\n                    int n = s.nextInt();\n                    int len = 0;\n                    boolean canAlloc = false;\n                    for (int i = 0; i < m; i++) {\n                        if (memory[i] == 0) len++;\n                        else len = 0;\n                        if (len == n) {\n                            canAlloc = true;\n                            len = i - n + 1;\n                            break;\n                        }\n                    }\n                    if (canAlloc) {\n                        allocIdx++;\n                        for (int i = len; i < len + n; i++) memory[i] = allocIdx;\n                        System.out.println(allocIdx);\n                    } else System.out.println(\"NULL\");\n                    break;\n                case \"erase\":\n                    int x = s.nextInt();\n                    if (x <= 0) {\n                        System.out.println(\"ILLEGAL_ERASE_ARGUMENT\");\n                        break;\n                    }\n                    boolean hasErased = false;\n                    for (int i = 0; i < m; i++) {\n                        if (memory[i] == x) {\n                            memory[i] = 0;\n                            hasErased = true;\n                        }\n                    }\n                    if (!hasErased) System.out.println(\"ILLEGAL_ERASE_ARGUMENT\");\n                    break;\n                case \"defragment\":\n                    int d = 0;\n                    for (int i = 0; i < m; i++) {\n                        if (memory[i] == 0) d++;\n                        else memory[i - d] = memory[i];\n                    }\n                    for (int i = m - d; i < m; i++) memory[i] = 0;\n                    break;\n                default:\n                    System.out.println(\"h\");\n                    break;\n            }\n        }\n        s.close();\n    }\n}\n", "id": "codeforces_7_B"}
{"code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class codeforces_387_B {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        int m = input.nextInt();\n        ArrayList<Integer> req = new ArrayList();\n        ArrayList<Integer> pre = new ArrayList();\n        for (int i = 0; i < n; i++) {\n            req.add(input.nextInt());\n        }\n        for (int i = 0; i < m; i++) {\n            pre.add(input.nextInt());\n        }\n        int i = n - 1, j = m - 1;\n        int ans = 0;\n        while (i >= 0 && j >= 0) {\n            if (req.get(i) > pre.get(j)) {\n                ans++;\n            } else {\n                j--;\n            }\n            i--;\n        }\n        System.out.print(ans + i + 1);\n    }\n}\n", "id": "codeforces_387_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_25_A {\n    public static void main(String[] args) {\n        Scanner ob = new Scanner(System.in);\n        int n = ob.nextInt();\n        int array[] = new int[n + 1];\n        for (int i = 1; i <= n; i++) {\n            array[i] = ob.nextInt();\n        }\n        int odd = 0, even = 0, odd_ind = 0, even_ind = 0;\n        for (int i = 1; i <= n; i++) {\n            if (array[i] % 2 == 0) {\n                even++;\n                even_ind = i;\n            } else {\n                odd++;\n                odd_ind = i;\n            }\n        }\n        if (odd > even) System.out.println(even_ind);\n        else System.out.println(odd_ind);\n    }\n}\n", "id": "codeforces_25_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_607_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int max = 0;\n        int n = sc.nextInt();\n        int[] beacon = new int[1000001];\n        int[] dp = new int[1000001];\n        for (int i = 0; i < n; i++) {\n            int a = sc.nextInt();\n            beacon[a] = sc.nextInt();\n        }\n        if (beacon[0] != 0) dp[0] = 1;\n        for (int i = 1; i < 1000001; i++) {\n            if (beacon[i] != 0 && beacon[i] < i) {\n                dp[i] = dp[i - beacon[i] - 1] + 1;\n            } else if (beacon[i] != 0) {\n                dp[i] = 1;\n            } else {\n                dp[i] = dp[i - 1];\n            }\n            max = Math.max(max, dp[i]);\n        }\n        System.out.print(n - max);\n    }\n}\n", "id": "codeforces_607_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_32_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        char[] n = in.next().toCharArray();\n        boolean s = false;\n        for (int i = 0; i < n.length; i++) {\n            if (n[i] == '.') {\n                if (s) {\n                    System.out.print(1);\n                    s = false;\n                } else {\n                    System.out.print(0);\n                }\n            } else {\n                if (s) {\n                    System.out.print(2);\n                    s = false;\n                } else {\n                    s = true;\n                }\n            }\n        }\n        in.close();\n    }\n}\n", "id": "codeforces_32_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class codeforces_70_B {\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String input = br.readLine();\n        int max = -1;\n        int[] msgLength = new int[input.length() / 2];\n        int count = 0;\n        int idx = 0;\n        for (int i = 0; i < input.length(); i++) {\n            char c = input.charAt(i);\n            if (c == '.' || c == '?' || c == '!') {\n                msgLength[idx++] = ++count;\n                if (count > max) max = count;\n                i++;\n                count = 0;\n            } else count++;\n        }\n        if (max > n) System.out.println(\"Impossible\");\n        else {\n            int ans = 0;\n            for (int i = 0; i < idx; i++) {\n                int l = msgLength[i];\n                while (i < idx - 1 && l + msgLength[i + 1] + 1 <= n) {\n                    l += msgLength[i + 1] + 1;\n                    i++;\n                }\n                ans++;\n            }\n            System.out.println(ans);\n        }\n    }\n}\n", "id": "codeforces_70_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class codeforces_79_A {\n    public static boolean canTake(int xNeeded, int xAvailable, int yNeeded, int yAvailable) {\n        if (xNeeded > xAvailable) return false;\n        if (yNeeded > yAvailable) return false;\n        return true;\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int x = Integer.parseInt(st.nextToken());\n        int y = Integer.parseInt(st.nextToken());\n        int turn = 0;\n        while (true) {\n            if (turn % 2 == 0) {\n                if (canTake(2, x, 2, y)) {\n                    x -= 2;\n                    y -= 2;\n                } else if (canTake(1, x, 12, y)) {\n                    x -= 1;\n                    y -= 12;\n                } else if (canTake(0, x, 22, y)) {\n                    y -= 22;\n                } else {\n                    System.out.println(\"Hanako\");\n                    return;\n                }\n            } else {\n                if (canTake(0, x, 22, y)) {\n                    y -= 22;\n                } else if (canTake(1, x, 12, y)) {\n                    x -= 1;\n                    y -= 12;\n                } else if (canTake(2, x, 2, y)) {\n                    x -= 2;\n                    y -= 2;\n                } else {\n                    System.out.println(\"Ciel\");\n                    return;\n                }\n            }\n            turn++;\n        }\n    }\n}\n", "id": "codeforces_79_A"}
{"code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class codeforces_299_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = in.nextInt();\n        }\n        Arrays.sort(a);\n        int min = a[0];\n        for (int value : a) {\n            if (value % min != 0) {\n                System.out.println(-1);\n                return;\n            }\n        }\n        System.out.println(min);\n    }\n}\n", "id": "codeforces_299_A"}
{"code": "import java.io.IOException;\nimport java.time.LocalTime;\nimport java.util.*;\n\npublic class codeforces_387_A {\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        String[] s = sc.next().split(\":\");\n        String[] t = sc.next().split(\":\");\n        LocalTime x = LocalTime.of(Integer.parseInt(s[0]), Integer.parseInt(s[1]));\n        LocalTime y = LocalTime.of(Integer.parseInt(t[0]), Integer.parseInt(t[1]));\n        System.out.println(x.minusHours(y.getHour()).minusMinutes(y.getMinute()));\n    }\n}\n", "id": "codeforces_387_A"}
{"code": "import java.util.*;\n\npublic class codeforces_287_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] str = new String[4];\n        int i = -1;\n        while (i != 3) {\n            i = i + 1;\n            str[i] = sc.next();\n        }\n        int u = -1;\n        i = -1;\n        int yes = 0;\n        while (u != 2) {\n            u = u + 1;\n            i = -1;\n            while (i != 2) {\n                i = i + 1;\n                if ((str[u].charAt(i) == str[u].charAt(i + 1)\n                                && (str[u + 1].charAt(i) == str[u].charAt(i)\n                                        || str[u + 1].charAt(i + 1) == str[u].charAt(i)))\n                        || (str[u + 1].charAt(i) == str[u + 1].charAt(i + 1)\n                                && (str[u].charAt(i) == str[u + 1].charAt(i)\n                                        || str[u].charAt(i + 1) == str[u + 1].charAt(i)))) {\n                    yes = 1;\n                    System.out.println(\"YES\");\n                    break;\n                }\n            }\n            if (yes == 1) {\n                break;\n            }\n        }\n        if (yes == 0) {\n            System.out.println(\"NO\");\n        }\n    }\n}\n", "id": "codeforces_287_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_148_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        double VP = in.nextInt();\n        double VD = in.nextInt();\n        double T = in.nextInt();\n        double F = in.nextInt();\n        double C = in.nextInt();\n        if (VD <= VP) {\n            System.out.println(\"0\");\n            return;\n        }\n        int answer = 0;\n        double start = T;\n        while (true) {\n            double x = start * VP / (VD - VP);\n            if ((start + x) * VP >= C) {\n                break;\n            }\n            start += 2 * x + F;\n            answer++;\n        }\n        System.out.println(answer);\n    }\n}\n", "id": "codeforces_148_B"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_58_B {\n    public static void main(String[] args) throws java.lang.Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        System.out.println(n + \" \");\n        int m = n;\n        for (int i = n - 1; i > 0; i--) {\n            if (m % i == 0) {\n                System.out.println(i + \" \");\n                m = i;\n            }\n        }\n    }\n}\n", "id": "codeforces_58_B"}
{"code": "import java.util.*;\n\npublic class codeforces_282_B {\n    public static void main(String arg[]) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        char ch[] = new char[n];\n        int s1 = 0, s2 = 0;\n        int i, j = 0, flag = 0, dif = 0;\n        for (i = 0; i < n; i++) {\n            int x = sc.nextInt();\n            int y = sc.nextInt();\n            int temp1 = s1 + x;\n            int temp2 = s2 + y;\n            if (Math.abs(temp1 - s2) <= 500) {\n                s1 += x;\n                ch[j++] = 'A';\n                continue;\n            }\n            if (Math.abs(temp2 - s1) <= 500) {\n                s2 += y;\n                ch[j++] = 'G';\n                continue;\n            }\n            flag = 1;\n            break;\n        }\n        if (flag == 1) System.out.println(-1);\n        else {\n            String ans = \"\";\n            ans = ans.valueOf(ch);\n            System.out.println(ans);\n        }\n    }\n}\n", "id": "codeforces_282_B"}
{"code": "import java.util.*;\n\npublic class codeforces_673_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        int value;\n        for (int i = 0; i < n; i++) {\n            value = sc.nextInt();\n            a.add(value);\n        }\n        int result, pos = 0, flag = 0;\n        if (a.get(0) > 15) result = 15;\n        else {\n            for (int i = 1; i < n; i++) {\n                if (a.get(i) - a.get(i - 1) > 15) {\n                    pos = i - 1;\n                    flag = 1;\n                    break;\n                }\n            }\n            if (flag == 1) result = a.get(pos) + 15;\n            else result = a.get(n - 1) + 15;\n        }\n        if (result > 90) result = 90;\n        System.out.println(result);\n    }\n}\n", "id": "codeforces_673_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_242_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int x, y, a, b;\n        x = in.nextInt();\n        y = in.nextInt();\n        a = in.nextInt();\n        b = in.nextInt();\n        int count = 0;\n        for (int i = a; i <= x; i++) {\n            for (int j = b; j <= y; ++j) {\n                if (i <= j) continue;\n                count++;\n            }\n        }\n        System.out.println(count);\n        for (int i = a; i <= x; i++) {\n            for (int j = b; j <= y; ++j) {\n                if (i <= j) continue;\n                System.out.println(i + \" \" + j);\n            }\n        }\n        in.close();\n    }\n}\n", "id": "codeforces_242_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_ABC127_F {\n    static OutputStream outputStream = System.out;\n    static PrintWriter out = new PrintWriter(outputStream);\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(br.readLine());\n        String[] s;\n        PriorityQueue<Integer> pqmax = new PriorityQueue<Integer>();\n        PriorityQueue<Integer> pqmin =\n                new PriorityQueue<Integer>(\n                        new Comparator<Integer>() {\n                            public int compare(Integer x, Integer y) {\n                                return y - x;\n                            }\n                        });\n        long sumMin = 0, sumMax = 0, sumb = 0;\n        int min = 0;\n        while (t-- > 0) {\n            s = br.readLine().split(\" \");\n            if (s[0].charAt(0) == '2') {\n                long ans = min;\n                ans *= pqmin.size();\n                ans -= sumMin;\n                long ans1 = min;\n                ans1 *= pqmax.size();\n                ans1 = sumMax - ans1;\n                out.println(min + \" \" + (ans + ans1 + sumb));\n            } else {\n                int in = Integer.parseInt(s[1]);\n                sumb += Long.parseLong(s[2]);\n                if (in > min) {\n                    pqmax.add(in);\n                    sumMax += in;\n                } else {\n                    pqmin.add(in);\n                    sumMin += in;\n                }\n                if (pqmin.size() > pqmax.size()) {\n                    sumMax += pqmin.peek();\n                    sumMin -= pqmin.peek();\n                    pqmax.add(pqmin.poll());\n                }\n                if (pqmin.size() < pqmax.size()) {\n                    sumMax -= pqmax.peek();\n                    sumMin += pqmax.peek();\n                    pqmin.add(pqmax.poll());\n                }\n                min = pqmin.peek();\n            }\n        }\n        out.close();\n    }\n}\n", "id": "atcoder_ABC127_F"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_AGC014_D {\n    static ArrayList<Integer>[] g;\n\n    static int maxMatching(int v, int p) {\n        int a = 0;\n        int o = 0;\n        for (int w : g[v]) {\n            if (w == p) continue;\n            int r = maxMatching(w, v);\n            a += r / 2;\n            o += r % 2;\n        }\n        return 2 * a + Math.min(1, o) + 1;\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n        int n = sc.nextInt();\n        g = new ArrayList[n];\n        Arrays.setAll(g, x -> new ArrayList<Integer>());\n        for (int i = 0; i < n - 1; ++i) {\n            int a = sc.nextInt() - 1;\n            int b = sc.nextInt() - 1;\n            g[a].add(b);\n            g[b].add(a);\n        }\n        int m = maxMatching(0, -1) / 2;\n        out.println(2 * m == n ? \"Second\" : \"First\");\n        out.close();\n    }\n\n    public static PrintWriter out;\n\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "id": "atcoder_AGC014_D"}
{"code": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class atcoder_AGC028_B {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String[] sa = br.readLine().split(\" \");\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(sa[i]);\n        }\n        br.close();\n        int mod = 1000000007;\n        long p = 1;\n        for (int i = 2; i <= n; i++) {\n            p = p * i % mod;\n        }\n        long[] q = new long[n];\n        q[0] = 1;\n        for (int i = 1; i < n; i++) {\n            q[i] = (q[i - 1] + modinv(i + 1, mod)) % mod;\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            long val = q[i] + q[n - i - 1] - 1;\n            val *= a[i];\n            val %= mod;\n            val *= p;\n            val %= mod;\n            ans += val;\n            ans %= mod;\n        }\n        System.out.println(ans);\n    }\n\n    static long modinv(long a, int m) {\n        long b = m;\n        long u = 1;\n        long v = 0;\n        long tmp = 0;\n        while (b > 0) {\n            long t = a / b;\n            a -= t * b;\n            tmp = a;\n            a = b;\n            b = tmp;\n            u -= t * v;\n            tmp = u;\n            u = v;\n            v = tmp;\n        }\n        u %= m;\n        if (u < 0) u += m;\n        return u;\n    }\n}\n", "id": "atcoder_AGC028_B"}
{"code": "import java.io.*;\nimport java.nio.charset.StandardCharsets;\nimport java.util.*;\n\npublic class atcoder_ABC149_B {\n    long A, B, K;\n    long x, y;\n\n    public static void main(String[] args) throws IOException {\n        InputStreamReader reader = new InputStreamReader(System.in, StandardCharsets.UTF_8);\n        BufferedReader in = new BufferedReader(reader);\n        atcoder_ABC149_B ins = new atcoder_ABC149_B(in);\n        ins.calc();\n        ins.showResult();\n    }\n\n    atcoder_ABC149_B(BufferedReader in) throws IOException {\n        String[] tokens = in.readLine().split(\" \");\n        A = Long.parseLong(tokens[0]);\n        B = Long.parseLong(tokens[1]);\n        K = Long.parseLong(tokens[2]);\n    }\n\n    void calc() {\n        x = A;\n        y = B;\n        x = A - K;\n        if (x < 0) {\n            y = B + x;\n            x = 0;\n            if (y < 0) {\n                y = 0;\n            }\n        }\n    }\n\n    void showResult() {\n        System.out.println(x + \" \" + y);\n    }\n}\n", "id": "atcoder_ABC149_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_86_A {\n    public static int power(Long a) {\n        int res = 0;\n        while (a > 0) {\n            res++;\n            a = a / 10;\n        }\n        return res;\n    }\n\n    public static long mult(Long a) {\n        int pow = power(a);\n        long max = 0;\n        for (int j = 0; j < pow; ++j) {\n            max = max * 10 + 9;\n        }\n        return a * (max - a);\n    }\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        long l = in.nextLong();\n        long r = in.nextLong();\n        long res = 0;\n        long[] maxxes = new long[10];\n        long temp = 0;\n        for (int i = 0; i < 10; ++i) {\n            temp = temp * 10 + 9;\n            maxxes[i] = temp / 2 * (temp - temp / 2);\n        }\n        res = Math.max(mult(l), res);\n        res = Math.max(mult(r), res);\n        temp = 0;\n        for (int i = 0; i < 10; ++i) {\n            temp = temp * 10 + 9;\n            if (l <= temp / 2 && temp / 2 <= r) res = Math.max(maxxes[i], res);\n        }\n        System.out.println(res);\n    }\n}\n", "id": "codeforces_86_A"}
{"code": "import java.util.Scanner;\nimport java.util.stream.IntStream;\n\npublic class atcoder_ABC112_C {\n    private static final int MAX = 100;\n\n    public static void main(String[] args) {\n        try (Scanner scanner = new Scanner(System.in)) {\n            int n = scanner.nextInt();\n            int[] x = new int[n], y = new int[n], h = new int[n];\n            IntStream.range(0, n)\n                    .forEach(\n                            i -> {\n                                x[i] = scanner.nextInt();\n                                y[i] = scanner.nextInt();\n                                h[i] = scanner.nextInt();\n                            });\n            for (int i = 0; i <= MAX; i++) {\n                for (int j = 0; j <= MAX; j++) {\n                    int ch = check(n, x, y, h, i, j);\n                    if (ch > 0) {\n                        System.out.println(i + \" \" + j + \" \" + ch);\n                    }\n                }\n            }\n        }\n    }\n\n    private static int check(int n, int[] x, int[] y, int[] h, int cx, int cy) {\n        int ch = -1;\n        for (int i = 0; i < n; i++) {\n            if (h[i] > 0) {\n                ch = Math.abs(x[i] - cx) + Math.abs(y[i] - cy) + h[i];\n                break;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (h[i] != Math.max(ch - Math.abs(x[i] - cx) - Math.abs(y[i] - cy), 0)) {\n                return -1;\n            }\n        }\n        return ch;\n    }\n}\n", "id": "atcoder_ABC112_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_408_B {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        String s1 = s.next();\n        String s2 = s.next();\n        if (isValid(s1, s2) == false) {\n            System.out.println(-1);\n        } else {\n            HashMap<Character, Integer> m1 = new HashMap<>();\n            HashMap<Character, Integer> m2 = new HashMap<>();\n            for (char c : s1.toCharArray()) {\n                if (m1.containsKey(c)) {\n                    m1.put(c, m1.get(c) + 1);\n                } else {\n                    m1.put(c, 1);\n                }\n            }\n            for (char c : s2.toCharArray()) {\n                if (m2.containsKey(c)) {\n                    m2.put(c, m2.get(c) + 1);\n                } else {\n                    m2.put(c, 1);\n                }\n            }\n            int ans = 0;\n            HashSet<Character> hs = new HashSet<>();\n            for (char c : s2.toCharArray()) {\n                if (!hs.contains(c)) {\n                    hs.add(c);\n                    int x1 = m1.get(c);\n                    int x2 = m2.get(c);\n                    x1 = Math.min(x1, x2);\n                    ans += x1;\n                }\n            }\n            System.out.println(ans);\n        }\n    }\n\n    public static boolean isValid(String s1, String s2) {\n        int n1 = s1.length();\n        int n2 = s2.length();\n        HashMap<Character, Boolean> map = new HashMap<>();\n        for (char c : s1.toCharArray()) {\n            map.put(c, true);\n        }\n        for (char c : s2.toCharArray()) {\n            if (!map.containsKey(c)) return false;\n        }\n        return true;\n    }\n}\n", "id": "codeforces_408_B"}
{"code": "import java.math.*;\nimport java.util.*;\n\npublic class atcoder_ABC145_B {\n    public static void cout(String str) {\n        System.out.println(str);\n    }\n    ;\n\n    public static void main(String args[]) {\n        Scanner cin = new Scanner(System.in);\n        String a = \"\", b = \"\", str;\n        int n;\n        n = cin.nextInt();\n        cin.nextLine();\n        str = cin.nextLine();\n        for (int i = 0; i < n / 2; i++) {\n            a = a + str.charAt(i);\n        }\n        if (str.equals(a + a)) cout(\"Yes\");\n        else cout(\"No\");\n    }\n}\n;\n", "id": "atcoder_ABC145_B"}
{"code": "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class atcoder_AGC024_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int N = scan.nextInt();\n        int[] P = new int[N];\n        for (int i = 0; i < N; ++i) P[i] = scan.nextInt() - 1;\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < N; ++i) map.put(P[i], i);\n        List<Integer> nglist = new ArrayList<>();\n        for (int i = 0; i < N - 1; ++i) if (map.get(i) > map.get(i + 1)) nglist.add(i);\n        if (nglist.isEmpty()) {\n            System.out.println(0);\n            return;\n        }\n        int ans = Math.min(N - nglist.get(0) - 1, nglist.get(nglist.size() - 1) + 1);\n        for (int i = 0; i < nglist.size() - 1; ++i) {\n            ans = Math.min(nglist.get(i) + 1 + N - nglist.get(i + 1) - 1, ans);\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_AGC024_B"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC167_D {\n    Scanner sc = new Scanner(System.in);\n    final int MOD = 1000000007;\n    final int MAX = Integer.MAX_VALUE;\n    final long LMAX = Long.MAX_VALUE;\n    int len = (int) 1e6 + 1;\n\n    void doIt() {\n        int N = sc.nextInt();\n        long K = sc.nextLong();\n        int A[] = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = sc.nextInt() - 1;\n        }\n        Set<Integer> used = new HashSet<>();\n        int idx[] = new int[N];\n        int pos[] = new int[N];\n        int next = 0, cur = 0;\n        while (!used.contains(next)) {\n            used.add(next);\n            idx[next] = cur;\n            pos[cur] = next;\n            next = A[next];\n            cur++;\n        }\n        long a = (long) cur - idx[next];\n        long b = (long) idx[next];\n        int ans = (int) ((10000 * a + K - b) % a + b);\n        if (b > K) ans = (int) K;\n        System.out.println(pos[ans] + 1);\n    }\n\n    public static void main(String[] args) {\n        new atcoder_ABC167_D().doIt();\n    }\n}\n", "id": "atcoder_ABC167_D"}
{"code": "import java.util.*;\n\npublic class atcoder_AGC033_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int H = sc.nextInt();\n        int W = sc.nextInt();\n        char[][] A = new char[H][W];\n        Queue<int[]> queue = new ArrayDeque<int[]>();\n        for (int i = 0; i < H; i++) {\n            String row = sc.next();\n            for (int j = 0; j < W; j++) {\n                A[i][j] = row.charAt(j);\n                if (A[i][j] == '#') {\n                    int[] start = {i, j, 0};\n                    queue.add(start);\n                }\n            }\n        }\n        int[][] flag = new int[H][W];\n        int ans = 0;\n        int[] dx = {1, -1, 0, 0};\n        int[] dy = {0, 0, 1, -1};\n        loop:\n        while (!queue.isEmpty()) {\n            int[] temp = queue.remove();\n            int y = temp[0];\n            int x = temp[1];\n            int depth = temp[2];\n            for (int i = 0; i < 4; i++) {\n                if (0 <= y + dy[i] && y + dy[i] <= H - 1 && 0 <= x + dx[i] && x + dx[i] <= W - 1) {\n                    if (flag[y + dy[i]][x + dx[i]] == 0 && A[y + dy[i]][x + dx[i]] == '.') {\n                        flag[y + dy[i]][x + dx[i]] = 1;\n                        int[] queue_add = {y + dy[i], x + dx[i], depth + 1};\n                        queue.add(queue_add);\n                        ans = depth + 1;\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_AGC033_A"}
{"code": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class atcoder_ABC148_F {\n    public static void main(String[] args) throws Exception {\n        try (Scanner sc = new Scanner(System.in)) {\n            int N = sc.nextInt();\n            int u = sc.nextInt() - 1;\n            int v = sc.nextInt() - 1;\n            List<Integer>[] edges = new List[N];\n            for (int i = 0; i < N; i++) {\n                edges[i] = new ArrayList<>();\n            }\n            for (int i = 0; i < N - 1; i++) {\n                int a = sc.nextInt() - 1;\n                int b = sc.nextInt() - 1;\n                edges[a].add(b);\n                edges[b].add(a);\n            }\n            int[] d = new int[N];\n            for (int i = 0; i < N; i++) {\n                d[i] = Integer.MAX_VALUE;\n            }\n            d[u] = 0;\n            dfs(u, d, edges);\n            int[] e = new int[N];\n            for (int i = 0; i < N; i++) {\n                e[i] = Integer.MAX_VALUE;\n            }\n            e[v] = 0;\n            dfs(v, e, edges);\n            int q = -1;\n            for (int i = 0; i < N; i++) {\n                if (d[i] < e[i]) {\n                    if (e[i] > q) {\n                        q = e[i];\n                    }\n                }\n            }\n            if (q <= 0) {\n                System.out.println(0);\n            } else {\n                System.out.println(q - 1);\n            }\n        }\n    }\n\n    static void dfs(int u, int[] d, List<Integer>[] edges) {\n        for (Integer nu : edges[u]) {\n            if (d[nu] == Integer.MAX_VALUE) {\n                d[nu] = d[u] + 1;\n                dfs(nu, d, edges);\n            }\n        }\n    }\n}\n", "id": "atcoder_ABC148_F"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_ABC169_E {\n    public static void main(String[] args) throws Exception {\n        int num = 998244353;\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n        int n = Integer.parseInt(bf.readLine());\n        ArrayList<Integer> ai = new ArrayList<Integer>();\n        ArrayList<Integer> bi = new ArrayList<Integer>();\n        for (int i = 0; i < n; i++) {\n            StringTokenizer st = new StringTokenizer(bf.readLine());\n            ai.add(Integer.parseInt(st.nextToken()));\n            bi.add(Integer.parseInt(st.nextToken()));\n        }\n        Collections.sort(ai);\n        Collections.sort(bi);\n        if (n % 2 == 1) {\n            out.println(bi.get(bi.size() / 2) - ai.get(ai.size() / 2) + 1);\n            out.close();\n        } else {\n            double b = (ai.get(ai.size() / 2) + ai.get(ai.size() / 2 - 1) + 0.0) / 2;\n            double c = (bi.get(bi.size() / 2) + bi.get(bi.size() / 2 - 1) + 0.0) / 2;\n            out.println((int) (2 * (c - b) + 1));\n            out.close();\n        }\n    }\n}\n", "id": "atcoder_ABC169_E"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC128_C {\n    public static void main(String[] args) {\n        atcoder_ABC128_C main = new atcoder_ABC128_C();\n        main.run();\n    }\n\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int M = sc.nextInt();\n        ArrayList<Integer> a = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            a.add(0);\n        }\n        for (int i = 0; i < M; i++) {\n            int k = sc.nextInt();\n            for (int j = 0; j < k; j++) {\n                int s = sc.nextInt();\n                s--;\n                a.set(s, a.get(s) | (1 << i));\n            }\n        }\n        int p = 0;\n        for (int i = 0; i < M; i++) {\n            int x = sc.nextInt();\n            p |= (x << i);\n        }\n        int ans = 0;\n        for (int s = 0; s < (1 << N); s++) {\n            int t = 0;\n            for (int i = 0; i < N; i++) {\n                if (((s >> i) & 1) == 1) {\n                    t ^= a.get(i);\n                }\n            }\n            if (p == t) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n        sc.close();\n    }\n}\n", "id": "atcoder_ABC128_C"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC164_A {\n    public static void main(String[] args) throws Exception {\n        Scanner scan = new Scanner(System.in);\n        ArrayList<String> scList = new ArrayList<>();\n        for (int i = 0; i >= 0; i++) {\n            try {\n                scList.add(scan.nextLine());\n            } catch (Exception e) {\n                break;\n            }\n        }\n        String[] numlist = scList.get(0).split(\" \");\n        int Sheep = Integer.parseInt(numlist[0]);\n        int Wolve = Integer.parseInt(numlist[1]);\n        if (Wolve >= Sheep) {\n            System.out.println(\"unsafe\");\n        } else {\n            System.out.println(\"safe\");\n        }\n    }\n}\n", "id": "atcoder_ABC164_A"}
{"code": "import java.util.*;\n\npublic class codeforces_274_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long k = sc.nextLong();\n        long[] arr = new long[n];\n        HashSet<Long> set = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            arr[i] = sc.nextLong();\n        }\n        Arrays.sort(arr);\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] % k != 0) {\n                count++;\n                set.add(arr[i]);\n            } else if (!set.contains(arr[i] / k)) {\n                count++;\n                set.add(arr[i]);\n            }\n        }\n        System.out.println(count);\n    }\n}\n", "id": "codeforces_274_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC143_D {\n    public static void main(String args[]) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        List<Integer> L = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            L.add(scanner.nextInt());\n        }\n        Collections.sort(L);\n        int count = 0;\n        for (int i = 0; i < N; i++) {\n            for (int j = i + 1; j < N; j++) {\n                int a = L.get(i);\n                int b = L.get(j);\n                int res = find(L, j + 1, a + b);\n                count = count + res;\n            }\n        }\n        System.out.println(count);\n    }\n\n    public static int find(List<Integer> li, int from, int target) {\n        int low = from;\n        int upp = li.size() - 1;\n        int mid = (upp - low + 1) % 2 == 0 ? (low + upp) / 2 + 1 : (low + upp) / 2;\n        if (upp - low < 0) {\n            return 0;\n        } else if (li.get(from) >= target) {\n            return 0;\n        } else if (li.get(upp) < target) {\n            return upp - low + 1;\n        }\n        while (upp - low > 1) {\n            if (li.get(mid) >= target) {\n                upp = mid;\n            } else {\n                low = mid;\n            }\n            mid = (upp - low + 1) % 2 == 0 ? (low + upp) / 2 + 1 : (low + upp) / 2;\n        }\n        return low - from + 1;\n    }\n}\n", "id": "atcoder_ABC143_D"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_546_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long pandu, vundu, urdu, c = 0;\n        pandu = sc.nextLong();\n        vundu = sc.nextLong();\n        urdu = sc.nextLong();\n        for (int i = 1; i <= urdu; i++) {\n            c += i * pandu;\n        }\n        if (c < vundu) {\n            System.out.print(\"0\");\n        } else {\n            System.out.print(c - vundu);\n        }\n    }\n}\n", "id": "codeforces_546_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ABC124_C {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CColoringColorfully solver = new CColoringColorfully();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CColoringColorfully {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            String x = in.next();\n            StringBuilder a = new StringBuilder(x);\n            StringBuilder b = new StringBuilder(x);\n            int a1 = 0;\n            int a2 = 0;\n            for (int i = 1; i < x.length(); i++) {\n                if (a.charAt(i) == a.charAt(i - 1)) {\n                    if (a.charAt(i) == '1') a.setCharAt(i, '0');\n                    else a.setCharAt(i, '1');\n                    a1++;\n                }\n            }\n            for (int i = x.length() - 1; i > 0; i--) {\n                if (b.charAt(i) == b.charAt(i - 1)) {\n                    if (b.charAt(i - 1) == '1') b.setCharAt(i - 1, '0');\n                    else b.setCharAt(i - 1, '1');\n                    a2++;\n                }\n            }\n            out.println(Math.min(a1, a2));\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n    }\n}\n", "id": "atcoder_ABC124_C"}
{"code": "import java.math.*;\nimport java.util.*;\n\npublic class atcoder_AGC017_A {\n    static BigInteger C(int n, int m) {\n        BigInteger res = new BigInteger(\"1\");\n        for (int i = m - n + 1; i <= m; i++) res = res.multiply(BigInteger.valueOf(i));\n        for (int i = 1; i <= n; i++) res = res.divide(BigInteger.valueOf(i));\n        return res;\n    }\n\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int n, p;\n        int k0 = 0;\n        int k1 = 0;\n        n = sc.nextInt();\n        p = sc.nextInt();\n        for (int i = 0; i < n; i++) {\n            int x;\n            x = sc.nextInt();\n            if (x % 2 == 1) k1++;\n            else k0++;\n        }\n        BigInteger ans = new BigInteger(\"1\");\n        for (int i = 0; i < k0; i++) ans = ans.multiply(BigInteger.valueOf(2));\n        if (p == 0) {\n            BigInteger add = new BigInteger(\"0\");\n            for (int i = 0; i <= k1; i += 2) add = add.add(C(i, k1));\n            ans = ans.multiply(add);\n            System.out.println(ans);\n        } else {\n            BigInteger add = new BigInteger(\"0\");\n            for (int i = 1; i <= k1; i += 2) add = add.add(C(i, k1));\n            ans = ans.multiply(add);\n            System.out.println(ans);\n        }\n    }\n}\n", "id": "atcoder_AGC017_A"}
{"code": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class atcoder_AGC004_D {\n    public static void main(String args[]) {\n        new Thread(null, new MyRunnable(), \"\", 1 << 26).start();\n    }\n}\n\nclass MyRunnable implements Runnable {\n    @Override\n    public void run() {\n        int n;\n        int k;\n        List<Integer> as = new ArrayList<>();\n        try (Scanner sc = new Scanner(System.in)) {\n            n = sc.nextInt();\n            k = sc.nextInt();\n            for (int i = 0; i < n; i++) {\n                as.add(sc.nextInt() - 1);\n            }\n        }\n        System.out.println(new Calculator(n, k, as).calculate());\n    }\n}\n\nclass Calculator {\n    private int k;\n    private int answer = 0;\n    private boolean isCalculate = false;\n    private List<List<Integer>> lists = new ArrayList<>();\n\n    Calculator(int n, int k, List<Integer> as) {\n        this.k = k;\n        for (int i = 0; i < n; i++) {\n            this.lists.add(new ArrayList<>());\n        }\n        for (int i = 0; i < n; i++) {\n            int j = as.get(i);\n            if (0 < i) {\n                this.lists.get(j).add(i);\n            } else if (0 < j) {\n                this.answer++;\n            }\n        }\n    }\n\n    int calculate() {\n        if (!this.isCalculate) {\n            this.dfs(0, 0);\n            this.isCalculate = true;\n        }\n        return this.answer;\n    }\n\n    private int dfs(int a, int pre) {\n        int h = 0;\n        for (int i : this.lists.get(a)) {\n            h = Math.max(h, this.dfs(i, a));\n        }\n        if (0 < pre && h == this.k - 1) {\n            h = 0;\n            this.answer++;\n        } else {\n            h++;\n        }\n        return h;\n    }\n}\n", "id": "atcoder_AGC004_D"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_231_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        int count = 0;\n        while (t-- > 0) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int c = sc.nextInt();\n            if ((a == 1 && b == 1)\n                    || (a == 1 && c == 1)\n                    || (b == 1 && c == 1)\n                    || (a == 1 && b == 1 && c == 1)) {\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n", "id": "codeforces_231_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC136_B {\n    public static void main(String[] args) {\n        Scanner stdIn = new Scanner(System.in);\n        int N = stdIn.nextInt();\n        int count = 0;\n        int temp = N;\n        int ans = 0;\n        while (temp > 0) {\n            temp /= 10;\n            count++;\n        }\n        for (int i = 1; i <= count; i++) {\n            if (i == count) {\n                if (i % 2 == 1) {\n                    ans += (N - Math.pow(10, i - 1) + 1);\n                }\n            } else {\n                if (i == 1) {\n                    ans += 9;\n                } else if (i % 2 == 1) {\n                    ans += (Math.pow(10, i) - Math.pow(10, i - 1));\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_ABC136_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class atcoder_ABC042_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        String[] list = line.split(\" \");\n        int x = Integer.parseInt(list[0]);\n        int a = Integer.parseInt(list[1]);\n        int y = Integer.parseInt(list[2]);\n        String h = \"NO\";\n        if (x == 5 | x == 7 | a == 5 | a == 7 | y == 5 | y == 7) {\n            if (x + y + a == 17) {\n                h = \"YES\";\n            }\n        }\n        System.out.println(h);\n    }\n}\n", "id": "atcoder_ABC042_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigDecimal;\nimport java.math.RoundingMode;\n\npublic class atcoder_ABC142_A {\n    public static void main(String[] args) throws Exception {\n        try {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            double input = Double.parseDouble(br.readLine());\n            double countOdd = Math.round(input / 2);\n            BigDecimal result = new BigDecimal(countOdd / input);\n            result.setScale(10, RoundingMode.HALF_UP);\n            System.out.println(result);\n        } catch (IOException | NumberFormatException e) {\n            e.printStackTrace();\n            System.exit(0);\n        } catch (final Exception e) {\n            e.printStackTrace();\n            System.exit(0);\n        }\n    }\n}\n", "id": "atcoder_ABC142_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC110_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String S = sc.nextLine();\n        String T = sc.nextLine();\n        sc.close();\n        String[] A = {\n            \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\",\n            \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\n        };\n        boolean res = true;\n        for (String s : A) {\n            int sIdx = S.indexOf(s);\n            if (sIdx < 0) continue;\n            String t = String.valueOf(T.charAt(sIdx));\n            int idx = 0;\n            while (idx < S.length()) {\n                if (S.indexOf(s, idx) >= 0) {\n                    if (S.indexOf(s, idx) != T.indexOf(t, idx)) {\n                        res = false;\n                        break;\n                    } else {\n                        idx = S.indexOf(s, idx) + 1;\n                    }\n                } else if (T.indexOf(t, idx) >= 0) {\n                    res = false;\n                    break;\n                } else break;\n            }\n            if (!res) break;\n        }\n        if (res) System.out.println(\"Yes\");\n        else System.out.println(\"No\");\n    }\n}\n", "id": "atcoder_ABC110_C"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC169_D {\n    public static void main(String[] args) {\n        try (Scanner scanner = new Scanner(System.in)) {\n            long n = scanner.nextLong();\n            int sqrt = (int) Math.sqrt(n);\n            int answer = 0;\n            for (int i = 2; i <= sqrt; i++) {\n                int count = 0;\n                while (0 == (n % i)) {\n                    n /= i;\n                    count++;\n                }\n                for (int j = 1; count - j >= 0; j++) {\n                    count -= j;\n                    answer++;\n                }\n            }\n            if (n > 1) {\n                answer++;\n            }\n            System.out.println(answer);\n        }\n    }\n}\n", "id": "atcoder_ABC169_D"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_340_A {\n    public static void main(String[] sh) {\n        Scanner s = new Scanner(System.in);\n        long x = s.nextInt();\n        long y = s.nextInt();\n        long a = s.nextInt();\n        long b = s.nextInt();\n        long j = 2, i, x1 = 0, y1 = 0, c = 0;\n        boolean ans = true;\n        c = Math.max(x, y);\n        if (c > b) {\n            System.out.println(\"0\");\n            ans = false;\n        }\n        while (c % Math.min(x, y) != 0 && ans) {\n            if (x > y) {\n                c = x * j;\n                j++;\n            } else {\n                c = y * j;\n                j++;\n            }\n            if (c > b) {\n                System.out.println(\"0\");\n                ans = false;\n                break;\n            }\n        }\n        if (ans) {\n            long count = 0;\n            i = a;\n            for (i = a; i <= b; i++) {\n                if (i % c == 0) break;\n            }\n            if (i != b + 1) System.out.println(((b - i) / c) + 1);\n            else System.out.println(\"0\");\n        }\n    }\n}\n", "id": "codeforces_340_A"}
{"code": "import java.util.*;\n\npublic class codeforces_518_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        StringBuilder s = new StringBuilder(scan.next());\n        String t = scan.next();\n        int ura = 0;\n        int opa = 0;\n        Map<Character, Integer> tmap = new HashMap<>();\n        for (int i = 0; i < t.length(); i++) {\n            Character ch = t.charAt(i);\n            if (!tmap.containsKey(ch)) tmap.put(ch, 1);\n            else tmap.put(ch, tmap.get(ch) + 1);\n        }\n        int length = s.length();\n        for (int i = 0; i < length; i++) {\n            Character ch = s.charAt(i);\n            Integer num = tmap.get(ch);\n            if (num == null) continue;\n            int inum = num;\n            if (inum == 1) tmap.remove(ch);\n            else tmap.put(ch, inum - 1);\n            s.setCharAt(i, '\u042f');\n            ura++;\n        }\n        for (int i = 0; i < length; i++) {\n            Character ch = s.charAt(i);\n            Character rch = reverse(ch);\n            Integer num = tmap.get(rch);\n            if (num == null) continue;\n            int inum = num;\n            if (inum == 1) tmap.remove(rch);\n            else tmap.put(rch, inum - 1);\n            opa++;\n        }\n        System.out.println(ura + \" \" + opa);\n    }\n\n    public static Character reverse(Character ch) {\n        if (Character.isLowerCase(ch)) {\n            return Character.toUpperCase(ch);\n        } else return Character.toLowerCase(ch);\n    }\n}\n", "id": "codeforces_518_B"}
{"code": "import java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class atcoder_AGC034_B {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BABC solver = new BABC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BABC {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            String s = in.next().replaceAll(\"BC\", \"D\");\n            long cnt = 0;\n            long tmp = 0;\n            for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i) == 'A') {\n                    tmp++;\n                } else if (s.charAt(i) == 'D') {\n                    cnt += tmp;\n                } else {\n                    tmp = 0;\n                }\n            }\n            out.println(cnt);\n        }\n    }\n}\n", "id": "atcoder_AGC034_B"}
{"code": "import java.util.*;\n\npublic class codeforces_268_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = Integer.parseInt(sc.nextLine());\n        int result = 0;\n        int[] h = new int[n];\n        int[] g = new int[n];\n        for (int i = 0; i < n; i++) {\n            h[i] = sc.nextInt();\n            g[i] = sc.nextInt();\n        }\n        for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) if (h[i] == g[j]) result++;\n        System.out.println(result);\n    }\n}\n", "id": "codeforces_268_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC145_C {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        int[][] pos = new int[N][2];\n        for (int i = 0; i < N; i++) {\n            pos[i][0] = scanner.nextInt();\n            pos[i][1] = scanner.nextInt();\n        }\n        double sum = 0;\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < N; j++) {\n                if (i == j) continue;\n                sum += dist(pos[i][0], pos[i][1], pos[j][0], pos[j][1]);\n            }\n        }\n        System.out.println(sum / N);\n    }\n\n    private static double dist(int x1, int y1, int x2, int y2) {\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    }\n}\n", "id": "atcoder_ABC145_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_ABC122_D {\n    int N;\n    long MOD = 1000000007L;\n    String[] TOKENS = {\"A\", \"C\", \"G\", \"T\"};\n    Map<String, Long>[] memo;\n\n    atcoder_ABC122_D() {\n        Scanner in = new Scanner(System.in);\n        N = in.nextInt();\n        in.close();\n        this.memo = new Map[N + 1];\n        for (int i = 0; i < this.memo.length; ++i) {\n            this.memo[i] = new HashMap<String, Long>();\n        }\n    }\n\n    long calc() {\n        return dfs(0, \"TTT\");\n    }\n\n    boolean isOK(String last4) {\n        if (last4.contains(\"AGC\")) {\n            return false;\n        }\n        for (int i = 0; i < 3; ++i) {\n            char[] vals = last4.toCharArray();\n            vals[i] = last4.charAt(i + 1);\n            vals[i + 1] = last4.charAt(i);\n            String s = new String(vals);\n            if (s.contains(\"AGC\")) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    long dfs(int current, String last3) {\n        if (this.memo[current].containsKey(last3)) {\n            return (Long) (this.memo[current].get(last3));\n        }\n        if (current == N) {\n            return 1;\n        }\n        long result = 0;\n        for (String c : TOKENS) {\n            if (isOK(last3 + c)) {\n                result = (result + dfs(current + 1, last3.substring(1, last3.length()) + c)) % MOD;\n            }\n        }\n        memo[current].put(last3, result);\n        return result;\n    }\n\n    public static void main(String[] args) {\n        atcoder_ABC122_D ins = new atcoder_ABC122_D();\n        System.out.println(ins.calc());\n    }\n}\n", "id": "atcoder_ABC122_D"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_AGC002_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int M = sc.nextInt();\n        Box[] B = new Box[N];\n        B[0] = new Box(1, true);\n        for (int i = 1; i < N; i++) {\n            B[i] = new Box(1, false);\n        }\n        for (int i = 0; i < M; i++) {\n            int x = sc.nextInt() - 1;\n            int y = sc.nextInt() - 1;\n            B[x].moveTo(B[y]);\n        }\n        int counter = 0;\n        for (Box b : B) {\n            if (b.red) {\n                counter++;\n            }\n        }\n        System.out.println(counter);\n    }\n}\n\nclass Box {\n    public int num;\n    public boolean red;\n\n    public Box(int n, boolean r) {\n        num = n;\n        red = r;\n    }\n\n    public void moveTo(Box other) {\n        if (num == 0) {\n            return;\n        } else if (num == 1) {\n            num = 0;\n            other.num++;\n            if (red) {\n                other.red = true;\n            }\n            red = false;\n        } else {\n            num--;\n            other.num++;\n            if (red) {\n                other.red = true;\n            }\n        }\n    }\n}\n", "id": "atcoder_AGC002_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC149_C {\n    public static void main(String[] args) {\n        Scanner stdIn = new Scanner(System.in);\n        int x = Integer.parseInt(stdIn.next());\n        if (x != 2 && x % 2 == 0) x++;\n        while (true) {\n            int i;\n            double sqrtNum = Math.sqrt(x);\n            for (i = 3; i <= sqrtNum; i += 2) {\n                if (x % i == 0) break;\n            }\n            if (i > sqrtNum) break;\n            x += 2;\n        }\n        System.out.println(x);\n    }\n}\n", "id": "atcoder_ABC149_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_373_B {\n    public static long ans = 0;\n\n    public static long get(long a) {\n        long ret = 0;\n        long now = 1;\n        long t = 1;\n        for (; ; ) {\n            if (now * 10 > a) {\n                ret += (a - now + 1) * t;\n                break;\n            }\n            ret += now * 9 * t;\n            now *= 10;\n            t++;\n        }\n        return ret;\n    }\n\n    public static long binarySearch(long k, long l, long r, long x) {\n        if (r >= l) {\n            long mid = l + (r - l) / 2;\n            if (mid > ans && mid * k <= x) ans = mid;\n\n            if (k * mid == x) return mid;\n\n            if (k * mid > x) return binarySearch(k, l, mid - 1, x);\n\n            return binarySearch(k, mid + 1, r, x);\n        }\n\n        return -1;\n    }\n\n    public static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    public static PrintWriter pw = new PrintWriter(System.out);\n\n    public static void main(String[] args) throws IOException {\n        Scanner S = new Scanner(System.in);\n        long gen, st, tim;\n        gen = S.nextLong();\n        st = S.nextLong();\n        tim = S.nextLong();\n        gen /= tim;\n        long beg = st - 1, end = (long) Math.pow(10, 18);\n        while (true) {\n            long med = (beg + end) / 2 + 1;\n            if (get(med) - get(st - 1) > gen) {\n                end = med - 1;\n            } else {\n                beg = med;\n            }\n            if (beg == end) {\n                System.out.println(beg - st + 1);\n                break;\n            }\n        }\n    }\n}\n", "id": "codeforces_373_B"}
{"code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class codeforces_456_A {\n    static ArrayList md = new ArrayList();\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] a = new int[n];\n        int[] b = new int[n];\n        int temp = 0;\n        int q = 0;\n        int w = 0, e = 0;\n        boolean f = false;\n        for (int i = 0; i < n; i++) {\n            a[i] = in.nextInt();\n            b[i] = in.nextInt();\n            if (temp < a[i]) {\n                if (q > b[i]) {\n                    f = true;\n                }\n                q = b[i];\n                temp = a[i];\n            }\n            if (temp > a[i]) {\n                if (q < b[i]) {\n                    f = true;\n                }\n                q = b[i];\n                temp = a[i];\n            }\n            if (a[i] > w) {\n                w = a[i];\n                if (b[i] < e) {\n                    f = true;\n                }\n                e = b[i];\n            }\n            if (a[i] < w) {\n                if (b[i] > e) {\n                    f = true;\n                }\n            }\n        }\n        if (f == true) {\n            System.out.println(\"Happy Alex\");\n        } else System.out.println(\"Poor Alex\");\n    }\n}\n", "id": "codeforces_456_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_ABC178_A {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int x = Integer.parseInt(scan.next());\n        boolean bool = x == 1 ? true : false;\n        int result = !bool ? 1 : 0;\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(result);\n        out.flush();\n    }\n}\n", "id": "atcoder_ABC178_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ABC171_B {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Solution sol = new Solution();\n        sol.solve(in, out);\n        out.close();\n    }\n\n    private static class Solution {\n        private void solve(InputReader in, PrintWriter out) {\n            int n = in.ni(), k = in.ni();\n            int[] a = new int[n];\n            for (int i = 0; i < n; ++i) a[i] = in.ni();\n            Arrays.parallelSort(a);\n            int ans = 0;\n            for (int i = 0; i < k; ++i) ans += a[i];\n            out.println(ans);\n        }\n    }\n\n    private static class InputReader {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        private InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        private String n() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        private int ni() {\n            return Integer.parseInt(n());\n        }\n    }\n}\n", "id": "atcoder_ABC171_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_AGC010_B {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) A[i] = scanner.nextInt();\n        if (possible(N, A)) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n\n    private static boolean possible(int N, int[] A) {\n        long sum = 0;\n        for (int i = 0; i < N; i++) sum += A[i];\n        long NS = (long) N * (N + 1) / 2;\n        if (sum % NS != 0) return false;\n        long K = sum / NS;\n        for (int i = 0; i < N; i++) {\n            int j = i == 0 ? N - 1 : i - 1;\n            long d = K - (A[i] - A[j]);\n            if (d < 0 || d % N != 0) return false;\n        }\n        return true;\n    }\n}\n", "id": "atcoder_AGC010_B"}
{"code": "import static java.lang.System.*;\n\nimport java.util.*;\n\npublic class atcoder_AGC019_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long Q = sc.nextLong();\n        long H = sc.nextLong();\n        long S = sc.nextLong();\n        long D = sc.nextLong();\n        long N = sc.nextLong();\n        long onePrice = Math.min(Math.min(Q * 4, H * 2), S);\n        if ((double) onePrice <= (double) D / 2) {\n            out.println(N * onePrice);\n        } else {\n            out.println((N / 2) * D + (N % 2) * onePrice);\n        }\n    }\n}\n", "id": "atcoder_AGC019_A"}
{"code": "import java.util.*;\n\npublic class codeforces_596_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        long[] arr = new long[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = scan.nextInt();\n        }\n        long answer = Math.abs(arr[0]);\n        for (int i = 1; i < n; i++) {\n            answer += Math.abs(arr[i] - arr[i - 1]);\n        }\n        System.out.println(answer);\n    }\n}\n", "id": "codeforces_596_B"}
{"code": "import java.util.*;\n\npublic class codeforces_581_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a, b;\n        a = sc.nextInt();\n        b = sc.nextInt();\n        int count = 0;\n        while (true) {\n            if (a > 0 && b > 0) {\n                count++;\n                a--;\n                b--;\n            } else break;\n        }\n        int ans = a / 2 + b / 2;\n        System.out.println(count + \" \" + ans);\n    }\n}\n", "id": "codeforces_581_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_705_B {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static FastReader scan = new FastReader();\n\n    public static void main(String[] args) {\n        int t = 1;\n        while (t-- > 0) {\n            solve();\n        }\n    }\n\n    public static void solve() {\n        int t = scan.nextInt();\n        int[] arr = new int[t];\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = scan.nextInt();\n        }\n        int prevWinner = 0;\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] == 1) {\n                if (prevWinner == 0) {\n                    prevWinner = 2;\n                }\n            }\n            if (prevWinner == 2 || prevWinner == 0) {\n                if ((arr[i] - 1) % 2 == 0) {\n                    System.out.println(2);\n                    prevWinner = 2;\n                } else {\n                    System.out.println(1);\n                    prevWinner = 1;\n                }\n            } else {\n                if ((arr[i] - 1) % 2 == 0) {\n                    System.out.println(1);\n                    prevWinner = 1;\n                } else {\n                    System.out.println(2);\n                    prevWinner = 2;\n                }\n            }\n        }\n    }\n}\n", "id": "codeforces_705_B"}
{"code": "import java.util.*;\n\npublic class codeforces_678_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int y = in.nextInt();\n        boolean leap = check_leap(y);\n        int sum = 0;\n        int mod = 0;\n        for (int i = y + 1; ; i++) {\n            if (check_leap(i)) {\n                sum += 366;\n            } else {\n                sum += 365;\n            }\n            if (sum % 7 == 0) {\n                if ((check_leap(i) && leap) || (!check_leap(i) && !leap)) {\n                    System.out.println(i);\n                    return;\n                } else {\n                    continue;\n                }\n            }\n        }\n    }\n\n    static boolean check_leap(int y) {\n        return y % 400 == 0 || (y % 4 == 0 && y % 100 != 0);\n    }\n}\n", "id": "codeforces_678_B"}
{"code": "import java.util.*;\n\npublic class codeforces_30_A {\n    public static void main(String[] args) {\n        new codeforces_30_A().solve(new Scanner(System.in));\n    }\n\n    private void solve(Scanner sc) {\n        int A = sc.nextInt(), B = sc.nextInt(), n = sc.nextInt();\n        if (A == 0) {\n            if (B == 0) System.out.println(1);\n            else System.out.println(\"No solution\");\n            return;\n        }\n        if (B % A != 0) {\n            System.out.println(\"No solution\");\n            return;\n        }\n        B /= A;\n        boolean neg = B < 0;\n        if (neg && n % 2 == 0) {\n            System.out.println(\"No solution\");\n            return;\n        }\n        if (neg) B = -B;\n        for (int x = 0; x <= B; x++) {\n            if (Math.pow(x, n) == B) {\n                System.out.println(neg ? -x : x);\n                return;\n            }\n        }\n        System.out.println(\"No solution\");\n    }\n}\n", "id": "codeforces_30_A"}
{"code": "import java.util.*;\n\npublic class codeforces_617_B {\n    static Scanner input = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = input.nextInt();\n        List<Integer> arr = new ArrayList<>();\n        for (int i = 0; i < n; i++) if (input.nextInt() == 1) arr.add(i);\n        if (arr.isEmpty()) System.out.println(0);\n        else {\n            long result = 1;\n            for (int i = 1; i < arr.size(); i++) result *= arr.get(i) - arr.get(i - 1);\n            System.out.println(result);\n        }\n    }\n}\n", "id": "codeforces_617_B"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_56_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int len = scan.nextInt();\n        int a[] = new int[len];\n        for (int i = 0; i < len; i++) {\n            a[i] = scan.nextInt();\n        }\n        int l = 0;\n        int r = 0;\n        boolean flag = false;\n        boolean isTrue = false;\n        loop:\n        for (int i = 0; i < len; i++) {\n            if (a[i] != i + 1 && !flag) {\n                l = i + 1;\n                flag = true;\n                continue;\n            }\n            if (a[i] != i + 1 && flag) {\n                r = i + 1;\n                if ((a[r - 1] - a[r - 2] > 0)) {\n                    isTrue = true;\n                    break loop;\n                }\n            }\n        }\n        System.out.println((!isTrue) ? l + \" \" + r : \"0\" + \" \" + \"0\");\n    }\n}\n", "id": "codeforces_56_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_609_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int arr[] = new int[n];\n        int gen[] = new int[11];\n        for (int i = 0; i < n; i++) {\n            arr[i] = in.nextInt();\n            gen[arr[i]]++;\n        }\n        long ans = 0;\n        for (int i = 1; i <= m; i++) {\n            for (int k = 1; k <= m; k++) {\n                if (i != k) {\n                    ans += (long) gen[i] * gen[k];\n                }\n            }\n        }\n        System.out.println(ans / 2);\n    }\n}\n", "id": "codeforces_609_B"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC171_E {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        int r = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n            r ^= a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            if (i != 0) System.out.print(\" \");\n            System.out.print(r ^ a[i]);\n        }\n    }\n}\n", "id": "atcoder_ABC171_E"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_203_A {\n    private void solve() {\n        int x = nextInt();\n        int t = nextInt();\n        int a = nextInt();\n        int b = nextInt();\n        int da = nextInt();\n        int db = nextInt();\n        int first;\n        int second;\n        boolean ok = false;\n        for (int i = 0; i < t; i++) {\n            first = a - (da * i);\n            for (int j = 0; j < t; j++) {\n                second = b - (db * j);\n                if (second + first == x || second == x || first == x || x == 0) {\n                    ok = true;\n                    break;\n                }\n            }\n        }\n        if (ok) out.print(\"YES\");\n        else out.print(\"NO\");\n    }\n\n    public static void main(String[] args) {\n        new codeforces_203_A().run();\n    }\n\n    BufferedReader br;\n    StringTokenizer st;\n    PrintWriter out;\n\n    private void run() {\n        try {\n            br = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n            solve();\n            br.close();\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    private String next() {\n        while (st == null || !st.hasMoreTokens()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n                return \"END_OF_FILE\";\n            }\n        }\n        return st.nextToken();\n    }\n}\n", "id": "codeforces_203_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC108_B {\n    public static int[] revpos(int[] p, int[] q) {\n        int[] vec = {0, 0};\n        for (int i = 0; i < vec.length; i++) {\n            vec[i] = p[i] - q[i];\n        }\n        int tmp = 0;\n        tmp = vec[0];\n        vec[0] = vec[1];\n        vec[1] = -tmp;\n        int[] newpos = {0, 0};\n        for (int i = 0; i < newpos.length; i++) {\n            newpos[i] = q[i] + vec[i];\n        }\n        return newpos;\n    }\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int[] input = {0, 0, 0, 0};\n        for (int i = 0; i < input.length; i++) {\n            input[i] = scan.nextInt();\n        }\n        scan.close();\n        int[][] position = {{0, 0}, {0, 0}, {0, 0}, {0, 0}};\n        position[0][0] = input[0];\n        position[0][1] = input[1];\n        position[1][0] = input[2];\n        position[1][1] = input[3];\n        position[2] = revpos(position[0], position[1]);\n        position[3] = revpos(position[1], position[2]);\n        if (position[0] == revpos(position[2], position[3])) {\n            System.out.println(\"OK\");\n        }\n        int[] output = {0, 0, 0, 0};\n        output[0] = position[2][0];\n        output[1] = position[2][1];\n        output[2] = position[3][0];\n        output[3] = position[3][1];\n        for (int i : output) {\n            System.out.println(i);\n        }\n    }\n}\n", "id": "atcoder_ABC108_B"}
{"code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class codeforces_369_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int k = scan.nextInt();\n        int l = scan.nextInt();\n        int r = scan.nextInt();\n        int sAll = scan.nextInt();\n        int sk = scan.nextInt();\n        int[] ans = getPoints(n, k, l, r, sAll, sk);\n        for (int num : ans) {\n            System.out.print(num + \" \");\n        }\n    }\n\n    public static int[] getPoints(int n, int k, int l, int r, int sAll, int sk) {\n        int[] ans = new int[n];\n        Arrays.fill(ans, l);\n        sAll -= sk + (n - k) * l;\n        sk -= k * l;\n        while (sk > 0) {\n            int idx = n - 1;\n            while (sk > 0 && idx >= n - k) {\n                ans[idx--]++;\n                sk--;\n            }\n        }\n        while (sAll > 0) {\n            int idx = 0;\n            while (sAll > 0 && idx < n - k) {\n                ans[idx++]++;\n                sAll--;\n            }\n        }\n        return ans;\n    }\n}\n", "id": "codeforces_369_B"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC122_C {\n    static final long mod = 1000000007;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int q = sc.nextInt();\n        char[] c = sc.next().toCharArray();\n        int[][] range = new int[q][2];\n        for (int i = 0; i < q; i++) {\n            range[i][0] = sc.nextInt();\n            range[i][1] = sc.nextInt();\n        }\n        int[] frag = new int[n + 1];\n        int[] rui = new int[n + 1];\n        for (int i = 2; i <= n; i++) {\n            if (c[i - 2] == 'A' && c[i - 1] == 'C') {\n                frag[i]++;\n            }\n            rui[i] = rui[i - 1] + frag[i];\n        }\n        for (int i = 0; i < q; i++) {\n            int left = range[i][0];\n            int right = range[i][1];\n            System.out.println(rui[right] - rui[left]);\n        }\n    }\n}\n", "id": "atcoder_ABC122_C"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\npublic class atcoder_ABC170_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        String[] input_array = br.readLine().split(\" \");\n        int result = 0;\n        for (String str : input_array) {\n            result += 1;\n            if (\"0\".equals(str)) break;\n        }\n        pw.println(result);\n        br.close();\n        pw.close();\n    }\n}\n", "id": "atcoder_ABC170_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_265_B {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n        int n = scn.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = scn.nextInt();\n        }\n        int ans = arr[0] + 1;\n        for (int i = 1; i < arr.length; i++) {\n            ans += Math.abs(arr[i] - arr[i - 1]) + 2;\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "codeforces_265_B"}
{"code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class codeforces_534_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int v1 = sc.nextInt();\n        int v2 = sc.nextInt();\n        int t = sc.nextInt();\n        int d = sc.nextInt();\n        long[][] dp = new long[t - 1][1150];\n        for (int i = 0; i < t - 1; i++) {\n            Arrays.fill(dp[i], -(long) (1e17));\n        }\n        dp[0][v1] = v1;\n        long sum = 0;\n        for (int i = 1; i < t - 1; i++) {\n            for (int j = 0; j < 1150; j++) {\n                for (int x = 0; x <= d; x++) {\n                    if (j + x < 1150) dp[i][j] = Math.max(dp[i][j], dp[i - 1][j + x] + j);\n                }\n                for (int x = d; x >= 0; x--) {\n                    if (j - x >= 0) {\n                        dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - x] + j);\n                    }\n                }\n            }\n        }\n        long ans = Long.MIN_VALUE;\n        for (int i = t - 2; i < t - 1; i++) {\n            for (int j = 0; j < 1150; j++) {\n                if (Math.abs(j - v2) <= d) ans = Math.max(ans, dp[i][j] + v2);\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "codeforces_534_B"}
{"code": "import java.util.*;\nimport java.util.Map.*;\n\npublic class atcoder_ABC126_D {\n    private static int[] colors;\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = n - 1;\n        colors = new int[n];\n        Arrays.fill(colors, -1);\n        Point[] points = new Point[n];\n        for (int i = 0; i < n; i++) {\n            points[i] = new Point(i);\n        }\n        while (m-- > 0) {\n            int me = sc.nextInt() - 1;\n            int you = sc.nextInt() - 1;\n            int length = sc.nextInt();\n            points[me].becomeFriend(points[you], length);\n            points[you].becomeFriend(points[me], length);\n        }\n        dfs(points[0], 0);\n        for (int c : colors) {\n            System.out.println(c);\n        }\n    }\n\n    public static void dfs(Point p, int length) {\n        boolean alreadyKnown = colors[p.name] != -1;\n        if (alreadyKnown) return;\n        if (length % 2 == 0) {\n            colors[p.name] = 0;\n        } else {\n            colors[p.name] = 1;\n        }\n        for (Entry<Point, Integer> entry : p.friends.entrySet()) {\n            Point friend = entry.getKey();\n            int length2 = entry.getValue();\n            dfs(friend, length + length2);\n        }\n    }\n\n    public static class Point {\n        int name;\n        Map<Point, Integer> friends;\n\n        Point(int name) {\n            this.name = name;\n            this.friends = new HashMap<Point, Integer>();\n        }\n\n        void becomeFriend(Point p, int length) {\n            this.friends.put(p, length);\n        }\n    }\n}\n", "id": "atcoder_ABC126_D"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ARC062_B {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            String S = in.next();\n            int score = 0;\n            for (int i = 0; i < S.length(); i++) {\n                char my = i % 2 == 0 ? 'g' : 'p';\n                char his = S.charAt(i);\n                if (my != his) {\n                    score += my == 'p' ? 1 : -1;\n                }\n            }\n            out.println(score);\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n    }\n}\n", "id": "atcoder_ARC062_B"}
{"code": "import java.util.Scanner;\nimport java.util.stream.IntStream;\n\npublic class atcoder_AGC006_B {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int x = scanner.nextInt();\n        print(x, n);\n    }\n\n    public static void print(int x, int n) {\n        int max = n * 2 - 1;\n        if (x == 1 || x == max) {\n            System.out.println(\"No\");\n            return;\n        }\n        System.out.println(\"Yes\");\n        String sep = System.lineSeparator();\n        String ans =\n                IntStream.range(x + n - 1, x + n + max - 1)\n                        .mapToObj(e -> (e % max + 1) + sep)\n                        .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n                        .toString();\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_AGC006_B"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_327_A {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        if (scanner.hasNext()) {\n            int n = scanner.nextInt();\n            int arr[] = new int[n];\n            for (int i = 0; i < n; i++) arr[i] = scanner.nextInt();\n            int max = Integer.MIN_VALUE;\n            for (int i = 0; i < n; i++) {\n                for (int j = i; j < n; j++) {\n                    int x = 0;\n                    int brr[] = new int[n];\n                    for (int k : arr) brr[x++] = k;\n                    for (int k = i; k <= j; k++) {\n                        if (brr[k] == 0) brr[k] = 1;\n                        else brr[k] = 0;\n                    }\n                    int count = checKNo(brr);\n                    if (count > max) max = count;\n                }\n            }\n            if (n == 1) {\n                if (arr[0] == 1) System.out.println(0);\n                else System.out.println(1);\n            } else {\n                System.out.println(max);\n            }\n        }\n    }\n\n    private static int checKNo(int[] brr) {\n        int val = 0;\n        for (int i : brr) if (i == 1) ++val;\n        return val;\n    }\n}\n", "id": "codeforces_327_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_190_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        if (n == 0) {\n            if (m != 0) System.out.println(\"Impossible\");\n            else System.out.println(0 + \" \" + 0);\n            return;\n        }\n        if (m <= n) {\n            if (m == 0) {\n                m = 1;\n            }\n            System.out.print(n + \" \" + (m + n - 1));\n            return;\n        }\n        System.out.print(m + \" \" + (m + n - 1));\n    }\n}\n", "id": "codeforces_190_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC114_C {\n    static Scanner scanner;\n\n    public static void main(String[] args) {\n        scanner = new Scanner(System.in);\n        int N = gi();\n        long i = 357;\n        int c = 0;\n        while (i <= N) {\n            String s = String.valueOf(i);\n            if (s.contains(\"3\") && s.contains(\"5\") && s.contains(\"7\")) c++;\n            StringBuilder sb = new StringBuilder();\n            boolean f = false;\n            for (int j = 0; j < s.length(); j++) {\n                char a = s.charAt(s.length() - 1 - j);\n                if (f) {\n                    sb.append(a);\n                } else {\n                    if (a == '3') {\n                        sb.append('5');\n                        f = true;\n                    } else if (a == '5') {\n                        sb.append('7');\n                        f = true;\n                    } else {\n                        sb.append('3');\n                    }\n                }\n            }\n            if (!f) sb.append(3);\n            StringBuffer sb2 = new StringBuffer(sb);\n            i = Long.parseLong(sb2.reverse().toString());\n        }\n        System.out.println(c);\n    }\n\n    public static String gs() {\n        return scanner.next();\n    }\n\n    public static int gi() {\n        return Integer.parseInt(scanner.next());\n    }\n\n    public static long gl() {\n        return Long.parseLong(scanner.next());\n    }\n\n    public static double gd() {\n        return Double.parseDouble(scanner.next());\n    }\n}\n", "id": "atcoder_ABC114_C"}
{"code": "import java.util.*;\n\npublic class atcoder_AGC027_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        long x = sc.nextInt();\n        List<Long> sweet = new ArrayList<Long>();\n        for (int i = 0; i < N; i++) {\n            long a = sc.nextInt();\n            sweet.add(a);\n        }\n        Collections.sort(sweet);\n        int num = 0;\n        for (int i = 0; i < N; i++) {\n            if (x - sweet.get(num) >= 0) {\n                x = x - sweet.get(num);\n                num++;\n            } else {\n                break;\n            }\n        }\n        if ((num == N) && (x > 0)) {\n            num -= 1;\n        }\n        System.out.println(num);\n    }\n}\n", "id": "atcoder_AGC027_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_ABC155_E {\n    public static void main(String[] args) {\n        final long INF = (long) 1e15;\n        Scanner sc = new Scanner(System.in);\n        String number = sc.next();\n        int[] digits = new int[number.length() + 1];\n        for (int i = 0; i < number.length(); i++) {\n            digits[i] = number.charAt(number.length() - 1 - i) - '0';\n        }\n        int bills = 0;\n        for (int i = 0; i <= number.length(); i++) {\n            if (digits[i] == 10) {\n                digits[i + 1]++;\n                digits[i] = 0;\n            }\n            if (digits[i] < 5) {\n                bills += digits[i];\n            } else if (digits[i] == 5) {\n                if (digits[i + 1] >= 5) {\n                    digits[i + 1]++;\n                }\n                bills += 5;\n            } else {\n                digits[i + 1]++;\n                bills += 10 - digits[i];\n            }\n        }\n        System.out.println(bills);\n    }\n}\n", "id": "atcoder_ABC155_E"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC169_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        String b = sc.next();\n        char[] bChar = b.toCharArray();\n        int length = bChar.length;\n        String bStr = \"\";\n        for (int i = 0; i < length; i++) {\n            if (bChar[i] != '.') {\n                bStr += bChar[i];\n            }\n        }\n        int bInt = Integer.parseInt(bStr);\n        long result = (a * bInt) / 100;\n        System.out.println(result);\n    }\n}\n", "id": "atcoder_ABC169_C"}
{"code": "import java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class atcoder_ABC158_A {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        AStationAndBus solver = new AStationAndBus();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class AStationAndBus {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            String s = in.next();\n            if (s.contains(\"A\") && s.contains(\"B\")) {\n                out.println(\"Yes\");\n            } else {\n                out.println(\"No\");\n            }\n        }\n    }\n}\n", "id": "atcoder_ABC158_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC125_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int sec = sc.nextInt();\n        int per_num = sc.nextInt();\n        double max_sec = (double) sc.nextInt() + 0.5;\n        int ans_num = 0;\n        for (int i = sec; i < max_sec; i += sec) {\n            ans_num += per_num;\n        }\n        System.out.println(ans_num);\n    }\n}\n", "id": "atcoder_ABC125_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class atcoder_ABC154_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        String[] str = in.readLine().split(\" \");\n        StringTokenizer st = new StringTokenizer(in.readLine());\n        int a = Integer.parseInt(st.nextToken());\n        int b = Integer.parseInt(st.nextToken());\n        String u = in.readLine();\n        System.out.println(u.equals(str[0]) ? (a - 1) + \" \" + b : a + \" \" + (b - 1));\n    }\n}\n", "id": "atcoder_ABC154_A"}
{"code": "import java.util.*;\n\npublic class codeforces_92_A {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n        int n = scn.nextInt();\n        int k = scn.nextInt();\n        int i = 1, req = 1;\n        while (k - req >= 0) {\n            if (k - req >= 0) {\n                k = k - req;\n            } else {\n                break;\n            }\n            i++;\n            if (i % n != 0) req = i % n;\n            else req = n;\n        }\n        System.out.println(k);\n    }\n}\n", "id": "codeforces_92_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC106_C {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String str = sc.next();\n        char[] c = str.toCharArray();\n        long k = sc.nextLong();\n        int n = str.length();\n        for (int i = 0; i < k; i++) {\n            if (c[i] == '1') {\n                if (i == k - 1) {\n                    System.out.println(1);\n                    return;\n                }\n            } else {\n                System.out.println(c[i]);\n                return;\n            }\n        }\n    }\n}\n", "id": "atcoder_ABC106_C"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.UncheckedIOException;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ABC043_B {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        LightScanner in = new LightScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BUnhappyHackingABCEdit solver = new BUnhappyHackingABCEdit();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BUnhappyHackingABCEdit {\n        public void solve(int testNumber, LightScanner in, PrintWriter out) {\n            String s = in.string();\n            StringBuilder d = new StringBuilder();\n            for (char c : s.toCharArray()) {\n                switch (c) {\n                    case '0':\n                        d.append(\"0\");\n                        break;\n                    case '1':\n                        d.append(\"1\");\n                        break;\n                    case 'B':\n                        if (d.length() > 0) {\n                            d.setLength(d.length() - 1);\n                            d.trimToSize();\n                        }\n                        break;\n                }\n            }\n            out.println(d);\n        }\n    }\n\n    static class LightScanner {\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public LightScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n        }\n\n        public String string() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new UncheckedIOException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n    }\n}\n", "id": "atcoder_ABC043_B"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC118_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        ArrayList<Integer> a = new ArrayList<>();\n        if (n == 1) {\n            System.out.println(sc.nextInt());\n            System.exit(0);\n        }\n        for (int i = 0; i < n; i++) {\n            a.add(sc.nextInt());\n        }\n        Collections.sort(a);\n        if (a.get(a.size() - 1) == 0) {\n            System.out.println(0);\n            System.exit(0);\n        }\n        int ans = 0;\n        while (true) {\n            if (a.size() == 1) {\n                ans = a.get(0);\n                break;\n            }\n            a = func(a);\n        }\n        System.out.println(ans);\n    }\n\n    private static ArrayList<Integer> func(ArrayList<Integer> A) {\n        ArrayList<Integer> a = A;\n        int min = 0;\n        for (int i = 0; i < a.size(); i++) {\n            if (a.get(i) == 0) {\n                a.remove(i);\n                i--;\n            } else {\n                if (min != 0) {\n                    a.set(i, a.get(i) % min);\n                    if (a.get(i) == 1) {\n                        System.out.println(1);\n                        System.exit(0);\n                    }\n                } else {\n                    min = a.get(i);\n                }\n            }\n        }\n        Collections.sort(a);\n        return a;\n    }\n}\n", "id": "atcoder_ABC118_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_356_A {\n    public static void main(String[] args) throws Exception {\n        FastReader in = new FastReader();\n        int n = in.nextInt();\n        TreeSet<Integer> left = new TreeSet<>();\n        int[] answer = new int[n];\n        for (int i = 0; i < n; i++) {\n            left.add(i);\n        }\n        int q = in.nextInt();\n        while (q-- > 0) {\n            int l = in.nextInt() - 1;\n            int r = in.nextInt() - 1;\n            int win = in.nextInt();\n            while (left.ceiling(l) != null && left.ceiling(l) <= r) {\n                int curr = left.ceiling(l);\n                answer[curr] = win;\n                left.remove(curr);\n            }\n            answer[win - 1] = 0;\n            left.add(win - 1);\n        }\n        StringBuilder ans = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            ans.append(answer[i] + \"\");\n        }\n        System.out.println(ans);\n    }\n\n    static class FastReader {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String s = \"\";\n            while (st == null || st.hasMoreElements()) {\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return s;\n        }\n    }\n}\n", "id": "codeforces_356_A"}
{"code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class atcoder_ABC165_C {\n    static int[] a = null;\n    static int[] b = null;\n    static int[] c = null;\n    static int[] d = null;\n    static int n = 0;\n    static int m = 0;\n    static int q = 0;\n    static long ans = -100L;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        m = sc.nextInt();\n        q = sc.nextInt();\n        a = new int[q];\n        b = new int[q];\n        c = new int[q];\n        d = new int[q];\n        for (int i = 0; i < q; ++i) {\n            a[i] = sc.nextInt() - 1;\n            b[i] = sc.nextInt() - 1;\n            c[i] = sc.nextInt();\n            d[i] = sc.nextInt();\n        }\n        dfs(new ArrayList<Integer>());\n        System.out.println(ans);\n    }\n\n    public static void dfs(ArrayList<Integer> list) {\n        if (list.size() == n) {\n            long score = 0L;\n            for (int i = 0; i < q; ++i) {\n                score += (list.get(b[i]) - list.get(a[i]) == c[i]) ? d[i] : 0L;\n            }\n            ans = Math.max(ans, score);\n            return;\n        }\n        if (!list.isEmpty()) {\n            for (int num = list.get(list.size() - 1); num <= m; ++num) {\n                list.add(num);\n                dfs(list);\n                list.remove(list.size() - 1);\n            }\n        } else {\n            for (int num = 1; num <= m; ++num) {\n                list.add(num);\n                dfs(list);\n                list.remove(list.size() - 1);\n            }\n        }\n    }\n}\n", "id": "atcoder_ABC165_C"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_8_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int i, j, x = 0, y = 0, k = 0, dx, dy;\n        boolean flag = true;\n        String s;\n        char[] ch = new char[100];\n        int[][] co = new int[2][101];\n        s = scan.next();\n        ch = s.toCharArray();\n        co[0][k] = x;\n        co[1][k] = y;\n        ++k;\n        for (i = 0; i < s.length(); ++i) {\n            switch (ch[i]) {\n                case 'L':\n                    --x;\n                    break;\n                case 'R':\n                    ++x;\n                    break;\n                case 'U':\n                    ++y;\n                    break;\n                case 'D':\n                    --y;\n                    break;\n            }\n            co[0][k] = x;\n            co[1][k] = y;\n            ++k;\n        }\n        for (i = 0; i < k - 3; ++i) {\n            for (j = i + 3; j < k; ++j) {\n                dx = co[0][i] - co[0][j];\n                dy = co[1][i] - co[1][j];\n                if (dx < 0) dx *= (-1);\n                if (dy < 0) dy *= (-1);\n                if ((dx <= 1 && dy == 0) || (dy <= 1 && dx == 0)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (!flag) break;\n        }\n        if (flag) System.out.println(\"OK\");\n        else System.out.println(\"BUG\");\n    }\n}\n", "id": "codeforces_8_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class codeforces_608_A {\n    public static void main(String[] args) {\n        FastScanner in = new FastScanner();\n        Scanner sc = new Scanner(System.in);\n        PrintWriter o = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        int s = sc.nextInt();\n        int max = 0;\n        while (n-- > 0) {\n            int f = sc.nextInt();\n            int t = sc.nextInt();\n            if (max < f + t) {\n                max = f + t;\n            }\n        }\n        o.println(Math.max(max, s));\n        o.close();\n    }\n\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        public String next() {\n            while (!st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        byte nextByte() {\n            return Byte.parseByte(next());\n        }\n\n        short nextShort() {\n            return Short.parseShort(next());\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return java.lang.Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n}\n", "id": "codeforces_608_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_49_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.nextLine();\n        int length = s.length();\n        char ch = 0;\n        for (int i = length - 1; i >= 0; i--) {\n            if (s.charAt(i) != ' ' && s.charAt(i) != '?') {\n                ch = s.charAt(i);\n                break;\n            }\n        }\n        ch = Character.toLowerCase(ch);\n        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch == 'y') {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n", "id": "codeforces_49_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_23_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        for (int i = 0; i < t; i++) {\n            int n = scan.nextInt();\n            System.out.println(maxLeft(n));\n        }\n    }\n\n    public static int maxLeft(int n) {\n        return n > 2 ? n - 2 : 0;\n    }\n}\n", "id": "codeforces_23_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\npublic class codeforces_147_A {\n    public static boolean isLatinLetter(char c) {\n        return c >= 'a' && c <= 'z';\n    }\n\n    public static boolean isPunctuation(char c) {\n        if (c == '.') return true;\n        if (c == ',') return true;\n        if (c == '!') return true;\n        if (c == '?') return true;\n        return false;\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        String s = br.readLine();\n        StringBuilder sb = new StringBuilder();\n        int n = s.length();\n        sb.append(s.charAt(0));\n        for (int i = 1; i < n; i++) {\n            char c = s.charAt(i);\n            if (isLatinLetter(c)) {\n                if (!isLatinLetter(s.charAt(i - 1))) {\n                    sb.append(' ');\n                }\n                sb.append(c);\n            } else if (isPunctuation(c)) {\n                sb.append(c);\n            }\n        }\n        pw.println(sb);\n        pw.flush();\n        pw.close();\n    }\n}\n", "id": "codeforces_147_A"}
{"code": "import java.util.*;\n\npublic class codeforces_629_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] FfriendPerDay = new int[367];\n        int[] MfriendPerDay = new int[367];\n        int answer = 0;\n        for (int i = 0; i < n; i++) {\n            char c = sc.next().charAt(0);\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            for (int j = a; j <= b; j++) {\n                if (c == 'M') MfriendPerDay[j]++;\n                else FfriendPerDay[j]++;\n                if (MfriendPerDay[j] < FfriendPerDay[j]) {\n                    if (MfriendPerDay[j] > answer) answer = MfriendPerDay[j];\n                } else {\n                    if (FfriendPerDay[j] > answer) answer = FfriendPerDay[j];\n                }\n            }\n        }\n        System.out.println(answer * 2);\n    }\n}\n", "id": "codeforces_629_B"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_171_A {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static void main(String[] args) {\n        FastReader sc = new FastReader();\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int t = reverse(m);\n        System.out.println(t + n);\n    }\n\n    public static int reverse(int n) {\n        if (n < 10) return n * 10;\n        int t = n, r = 0;\n        while (t > 0) {\n            r = (r * 10) + t % 10;\n            t = t / 10;\n        }\n        return r;\n    }\n}\n", "id": "codeforces_171_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_651_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int a = in.nextInt(), b = in.nextInt();\n        int c = 0;\n        if (a == 1 && b == 1) {\n            pw.println(0);\n        } else {\n            while (a >= 1 || b >= 1) {\n                if (a >= b) {\n                    b++;\n                    a -= 2;\n                } else {\n                    a++;\n                    b -= 2;\n                }\n                if (a <= 0 || b <= 0) {\n                    c++;\n                    break;\n                }\n                c++;\n            }\n            pw.println(c);\n        }\n        pw.close();\n    }\n\n    static void swap(int a, int b) {\n        int t = b;\n        b = a;\n        a = t;\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}\n", "id": "codeforces_651_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_131_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int N = (int) 1e5 + 5;\n        long[] cnt = new long[21];\n        for (int i = 0; i < n; i++) {\n            cnt[scan.nextInt() + 10]++;\n        }\n        long res = 0;\n        for (int i = 0; i < 10; i++) {\n            res += cnt[i] * cnt[20 - i];\n        }\n        res += (cnt[10] * (cnt[10] - 1)) / 2;\n        System.out.println(res);\n    }\n}\n", "id": "codeforces_131_B"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class codeforces_669_A {\n    public static void main(String[] subhani) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        solve(n);\n    }\n\n    public static void solve(int n) {\n        System.out.println((n / 3) * 2 + (n % 3 == 0 ? 0 : 1));\n    }\n}\n", "id": "codeforces_669_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_55_A {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n, i = 1, k = 0, p = 1;\n        boolean flag = true;\n        int[] a = new int[1000];\n        n = scan.nextInt();\n        i = 0;\n        while (k <= n) {\n            i += k;\n            if (i >= n) {\n                while (!(i < n)) i = i - n;\n            }\n            ++a[i];\n            ++k;\n        }\n        for (i = 0; i < n; ++i)\n            if (a[i] == 0) {\n                flag = false;\n                break;\n            }\n        if (flag) System.out.println(\"YES\");\n        else System.out.println(\"NO\");\n    }\n}\n", "id": "codeforces_55_A"}
{"code": "import java.util.*;\n\npublic class codeforces_134_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] arr = new int[n];\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            arr[i] = sc.nextInt();\n            sum += arr[i];\n        }\n        int c = 0;\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            if ((sum - arr[i]) % (n - 1) == 0 && (sum - arr[i]) / (n - 1) == arr[i]) {\n                c++;\n                sb.append((i + 1) + \" \");\n            }\n        }\n        System.out.println(c);\n        System.out.println(sb.toString());\n    }\n}\n", "id": "codeforces_134_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class codeforces_665_A {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int a = Integer.parseInt(st.nextToken());\n        int tA = Integer.parseInt(st.nextToken());\n        st = new StringTokenizer(br.readLine());\n        int b = Integer.parseInt(st.nextToken());\n        int tB = Integer.parseInt(st.nextToken());\n        String timing = br.readLine();\n        int hrs = Integer.parseInt(timing.substring(0, 2));\n        int mins = Integer.parseInt(timing.substring(3));\n        int simDeparture = hrs * 60 + mins;\n        int simArrival = simDeparture + tA;\n        int counter = 0;\n        for (int i = 300; i < 1440; i += b) {\n            int busDeparture = i;\n            int busArrival = i + tB;\n            if (busDeparture >= simArrival || simDeparture >= busArrival) continue;\n            counter++;\n        }\n        pw.println(counter);\n        pw.flush();\n        pw.close();\n    }\n}\n", "id": "codeforces_665_A"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_59_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String word = in.next();\n        int uppercase = 0;\n        int lowercase = 0;\n        for (int i = 0; i < word.length(); i++) {\n            char ch = word.charAt(i);\n            if (Character.isUpperCase(ch)) {\n                uppercase++;\n            } else {\n                lowercase++;\n            }\n        }\n        if (uppercase > lowercase) System.out.println(word.toUpperCase());\n        else if (lowercase > uppercase) System.out.println(word.toLowerCase());\n        else System.out.println(word.toLowerCase());\n    }\n}\n", "id": "codeforces_59_A"}
{"code": "import java.util.*;\n\npublic class codeforces_644_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int b = sc.nextInt();\n        long[] ans = new long[n];\n        LinkedList<Long> q = new LinkedList<>();\n        for (int i = 0; i < n; i++) {\n            int t = sc.nextInt();\n            int d = sc.nextInt();\n            while (!q.isEmpty() && q.getFirst() <= t) {\n                q.pollFirst();\n            }\n            if (q.size() <= b) {\n                ans[i] = (q.isEmpty() ? t : q.getLast()) + d;\n                q.add(ans[i]);\n            } else {\n                ans[i] = -1;\n            }\n        }\n        for (int i = 0; i < n; ++i) {\n            System.out.print(ans[i] + \" \");\n        }\n    }\n}\n", "id": "codeforces_644_B"}
{"code": "import java.io.PrintWriter;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class codeforces_653_A {\n    public static void main(String[] args) {\n        try (Scanner in = new Scanner(System.in);\n                PrintWriter out = new PrintWriter(System.out)) {\n            int n = in.nextInt();\n            List<Integer> a = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                int value = in.nextInt();\n                a.add(value);\n            }\n            a = a.stream().distinct().sorted().collect(Collectors.toList());\n            boolean found = false;\n            for (int i = 0; i < a.size(); i++) {\n                if (i + 1 < a.size() && i + 2 < a.size()) {\n                    if (a.get(i) + 1 == a.get(i + 1) && a.get(i + 1) + 1 == a.get(i + 2)) {\n                        found = true;\n                    }\n                }\n            }\n            out.println(found ? \"YES\" : \"NO\");\n        }\n    }\n}\n", "id": "codeforces_653_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_622_A {\n    public static final int BUFFERSIZE = 512000;\n    private static Scanner sc =\n            new Scanner(new BufferedReader(new InputStreamReader(System.in), BUFFERSIZE));\n    private static PrintWriter out =\n            new PrintWriter(new BufferedOutputStream(System.out, BUFFERSIZE));\n\n    public static void solve() {\n        long position = sc.nextLong();\n        long nrstSeqStartIndx = 1;\n        while (getValueAtIndex(nrstSeqStartIndx * 2) < position) {\n            nrstSeqStartIndx *= 2;\n        }\n        while (getValueAtIndex(nrstSeqStartIndx + 1) <= position) nrstSeqStartIndx++;\n        long startIndex = getValueAtIndex(nrstSeqStartIndx);\n        out.println((position - startIndex) + 1);\n    }\n\n    public static long getValueAtIndex(long index) {\n        return 1 + ((index - 1) * index / 2);\n    }\n\n    public static void main(String args[]) throws Exception {\n        in.init(System.in);\n        solve();\n        out.close();\n    }\n\n    public static class in {\n        static BufferedReader reader;\n        static StringTokenizer tokenizer;\n\n        static void init(InputStream input) {\n            reader = new BufferedReader(new InputStreamReader(input), BUFFERSIZE);\n            tokenizer = new StringTokenizer(\"\");\n        }\n\n        static String next() throws IOException {\n            while (!tokenizer.hasMoreTokens()) tokenizer = new StringTokenizer(reader.readLine());\n            return tokenizer.nextToken();\n        }\n\n        static int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        static double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        static long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n    }\n}\n", "id": "codeforces_622_A"}
{"code": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class atcoder_AGC004_B {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int N = scan.nextInt();\n        long x = scan.nextLong();\n        List<Long> srimeList = new ArrayList<>(N);\n        for (long i = 0; i < N; i++) {\n            srimeList.add(scan.nextLong());\n        }\n        List<Long[]> costList = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            costList.add(new Long[N]);\n        }\n        for (int i = 0; i < N; i++) {\n            costList.get(i)[0] = srimeList.get(i);\n            for (int castNum = 1; castNum < N; castNum++) {\n                costList.get(i)[castNum] =\n                        Math.min(\n                                costList.get(i)[castNum - 1], srimeList.get((i - castNum + N) % N));\n            }\n        }\n        List<Long> result = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            final int j = i;\n            result.add(i * x + costList.stream().mapToLong(costArray -> costArray[j]).sum());\n        }\n        System.out.println(result.stream().mapToLong(i -> i).min().getAsLong());\n    }\n}\n", "id": "atcoder_AGC004_B"}
{"code": "import java.util.*;\n\npublic class codeforces_421_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, a, b;\n        n = sc.nextInt();\n        a = sc.nextInt();\n        b = sc.nextInt();\n        ArrayList<Integer> list1 = new ArrayList<>();\n        ArrayList<Integer> list2 = new ArrayList<>();\n        for (int i = 0; i < a; i++) {\n            list1.add(sc.nextInt());\n        }\n        for (int i = 0; i < b; i++) {\n            list2.add(sc.nextInt());\n        }\n        for (int i = 0; i < n; i++) {\n            if (list1.contains(i + 1)) {\n                System.out.print(1 + \" \");\n            } else {\n                System.out.print(2 + \" \");\n            }\n        }\n    }\n}\n", "id": "codeforces_421_A"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\npublic class atcoder_ABC120_C {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            String x = in.next();\n            Stack<Character> s = new Stack<>();\n            int c = 0;\n            for (int i = 0; i < x.length(); i++) {\n                s.push(x.charAt(i));\n                while (s.size() > 1) {\n                    Character p = s.pop();\n                    Character q = s.pop();\n                    if ((p == '1' && q == '0') || (p == '0' && q == '1')) {\n                        c++;\n                        continue;\n                    } else {\n                        s.push(q);\n                        s.push(p);\n                        break;\n                    }\n                }\n            }\n            out.println(c * 2);\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n    }\n}\n", "id": "atcoder_ABC120_C"}
{"code": "import java.util.*;\n\npublic class atcoder_AGC013_A {\n    public static void main(String[] args) {\n        Scanner stdIn = new Scanner(System.in);\n        int N = stdIn.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = stdIn.nextInt();\n        }\n        int count = 0;\n        for (int i = 0; i < N; i++) {\n            if (i == N - 1) count++;\n            else if (A[i] == A[i + 1])\n                ;\n            else if (A[i] < A[i + 1]) {\n                while (A[i] <= A[i + 1]) {\n                    i++;\n                    if (i == N - 1) break;\n                }\n                count++;\n            } else {\n                while (A[i] >= A[i + 1]) {\n                    i++;\n                    if (i == N - 1) break;\n                }\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n", "id": "atcoder_AGC013_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC147_D {\n    public static void main(String[] args) {\n        long startTime = System.currentTimeMillis();\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long div = (long) Math.pow(10, 9) + 7;\n        long[] A = new long[n];\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            A[i] = sc.nextLong();\n        }\n        for (int i = 0; i < 60; i++) {\n            long a = 0;\n            long count1 = 0;\n            for (int j = 0; j < n; j++) {\n                if ((A[j] >> i & 1) == 1) count1++;\n            }\n            a = a + count1 * (n - count1);\n            for (int j = 0; j < i; j++) {\n                a = (a << 1) % div;\n            }\n            ans += a;\n            ans %= div;\n        }\n        System.out.println(ans);\n        long endTime = System.currentTimeMillis();\n    }\n}\n", "id": "atcoder_ABC147_D"}
{"code": "import java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class codeforces_216_B {\n    int count;\n    boolean[] seen;\n    int path = 0, cycle = 1;\n    LinkedList<LinkedList<Integer>> graph;\n\n    public int dfs(int child, int par) {\n        if (seen[child] == true) return cycle;\n        seen[child] = true;\n        for (Integer i : graph.get(child)) {\n            if (i != par) {\n                this.count++;\n                if (dfs(i, child) == cycle) return cycle;\n            }\n        }\n        return path;\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int m = sc.nextInt();\n        int n = sc.nextInt();\n        codeforces_216_B ft = new codeforces_216_B();\n        ft.graph = new LinkedList<>();\n        for (int i = 0; i <= m; i++) {\n            ft.graph.add(new LinkedList<Integer>());\n        }\n        ft.seen = new boolean[m + 1];\n        for (int i = 0; i < n; i++) {\n            int x = sc.nextInt();\n            int y = sc.nextInt();\n            ft.graph.get(x).add(y);\n            ft.graph.get(y).add(x);\n        }\n        int toremove = 0;\n        for (int i = 1; i <= m; i++) {\n            if (!ft.seen[i]) {\n                ft.count = 0;\n                if (ft.dfs(i, 0) == ft.cycle) {\n                    if (ft.count % 2 == 1) toremove++;\n                }\n            }\n        }\n        if ((m - toremove) % 2 == 1) toremove++;\n        System.out.println(toremove);\n    }\n}\n", "id": "codeforces_216_B"}
{"code": "import java.util.*;\n\npublic class codeforces_450_A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        Queue<Integer> q1 = new LinkedList<>();\n        Queue<Integer> q2 = new LinkedList<>();\n        for (int i = 1; i <= n; i++) {\n            q1.add(sc.nextInt());\n            q2.add(i);\n        }\n        int ans = 0;\n        while (!q1.isEmpty()) {\n            if (q1.peek() <= m) {\n                q1.poll();\n                ans = q2.poll();\n            } else if (q1.peek() > m) {\n                int x = q1.poll();\n                int val = x - m;\n                q1.add(val);\n                int val2 = q2.poll();\n                q2.add(val2);\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "codeforces_450_A"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces_459_B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int n = 0; n < N; n++) {\n            A[n] = in.nextInt();\n        }\n        Arrays.sort(A);\n        int min = A[0];\n        int max = A[N - 1];\n        long mins = 0;\n        long maxs = 0;\n        for (int value : A) {\n            if (value == min) mins++;\n            if (value == max) maxs++;\n        }\n        if (min == max) {\n            pw.println((max - min) + \" \" + mins * (mins - 1) / 2);\n        } else {\n            pw.println((max - min) + \" \" + mins * maxs);\n        }\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}\n", "id": "codeforces_459_B"}
{"code": "import java.math.*;\nimport java.util.*;\n\npublic class atcoder_ABC155_D {\n    static int mod = (int) 1e9 + 7;\n    static int DX[] = {-1, 0, 1, 0}, DY[] = {0, -1, 0, 1};\n    static int n;\n    static long k;\n    static long a[];\n\n    public static void main(String[] args) {\n        Scanner fs = new Scanner(System.in);\n        n = fs.nextInt();\n        k = fs.nextLong();\n        a = new long[n];\n        for (int i = 0; i < n; ++i) {\n            a[i] = fs.nextLong();\n        }\n        Arrays.sort(a);\n        long INF = (long) (1e18) + 1;\n        long l = -INF;\n        long r = INF;\n        while (l + 1 < r) {\n            long c = (l + r) / 2;\n            if (check(c)) l = c;\n            else r = c;\n        }\n        System.out.println(l);\n    }\n\n    static boolean check(long x) {\n        long tot = 0;\n        for (int i = 0; i < n; i++) {\n            long now = a[i];\n            int l = 0, r = n;\n            if (now >= 0) {\n                while (l < r) {\n                    int c = (l + r) / 2;\n                    if (now * a[c] < x) l = c + 1;\n                    else r = c;\n                }\n                tot += l;\n            } else {\n                while (l < r) {\n                    int c = (l + r) / 2;\n                    if (now * a[c] >= x) l = c + 1;\n                    else r = c;\n                }\n                tot += (n - l);\n            }\n            if ((long) a[i] * a[i] < x) tot--;\n        }\n        if (tot / 2 < k) return true;\n        else return false;\n    }\n}\n", "id": "atcoder_ABC155_D"}
{"code": "import java.util.Scanner;\n\npublic class codeforces_354_A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int L = in.nextInt();\n        int R = in.nextInt();\n        int QL = in.nextInt();\n        int QR = in.nextInt();\n        int[] W = new int[N];\n        int[] sum = new int[N + 1];\n        for (int n = 0; n < N; n++) {\n            W[n] = in.nextInt();\n            sum[n + 1] = sum[n] + W[n];\n        }\n        long min = Long.MAX_VALUE;\n        for (int firstR = 0; firstR <= N; firstR++) {\n            int lCount = firstR;\n            int rCount = N - lCount;\n            long cand = sum[lCount] * L + (sum[N] - sum[lCount]) * R;\n            int llCount = Math.max(0, lCount - rCount - 1);\n            int rrCount = Math.max(0, rCount - lCount - 1);\n            cand += llCount * QL;\n            cand += rrCount * QR;\n            min = Math.min(cand, min);\n        }\n        System.out.println(min);\n    }\n}\n", "id": "codeforces_354_A"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC167_C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(), m = sc.nextInt(), x = sc.nextInt(), min = Integer.MAX_VALUE;\n        int[][] a = new int[n][m + 1];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j <= m; j++) a[i][j] = sc.nextInt();\n        }\n        for (int i = 0; i < Math.pow(2, n); i++) {\n            int[] status = new int[n];\n            for (int j = 0; j < n; j++) {\n                if ((1 & i >> j) == 1) {\n                    status[j] = 1;\n                }\n            }\n            int[] res = new int[m + 1];\n            for (int j = 0; j < n; j++) {\n                if (status[j] == 1) {\n                    for (int k = 0; k <= m; k++) {\n                        res[k] += a[j][k];\n                    }\n                }\n            }\n            boolean flag = true;\n            for (int j = 1; j <= m; j++) {\n                if (res[j] < x) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) min = Math.min(min, res[0]);\n        }\n        if (min == Integer.MAX_VALUE) System.out.println(-1);\n        else System.out.println(min);\n    }\n}\n", "id": "atcoder_ABC167_C"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC126_E {\n    Scanner sc = new Scanner(System.in);\n    final int MOD = 1000000007;\n\n    void doIt() {\n        int n = sc.nextInt();\n        UnionFindTree utf = new UnionFindTree(n);\n        int m = sc.nextInt();\n        for (int i = 0; i < m; i++) {\n            int x = sc.nextInt() - 1;\n            int y = sc.nextInt() - 1;\n            int z = sc.nextInt();\n            utf.unite(x, y);\n        }\n        int cnt = 0;\n        for (int i = 0; i < n; i++) {\n            if (utf.par[i] == i) {\n                cnt++;\n            }\n        }\n        System.out.println(cnt);\n    }\n\n    class UnionFindTree {\n        int n;\n        int[] par;\n        int[] rank;\n\n        UnionFindTree(int n) {\n            this.n = n;\n            par = new int[n];\n            rank = new int[n];\n            for (int i = 0; i < n; i++) {\n                par[i] = i;\n                rank[i] = 0;\n            }\n        }\n\n        int find(int x) {\n            if (par[x] == x) {\n                return x;\n            } else {\n                return par[x] = find(par[x]);\n            }\n        }\n\n        void unite(int x, int y) {\n            x = find(x);\n            y = find(y);\n            if (x == y) return;\n            if (rank[x] < rank[y]) par[x] = y;\n            else {\n                par[y] = x;\n                if (rank[x] == rank[y]) rank[x]++;\n            }\n        }\n\n        boolean same(int x, int y) {\n            return find(x) == find(y);\n        }\n    }\n\n    public static void main(String[] args) {\n        new atcoder_ABC126_E().doIt();\n    }\n}\n", "id": "atcoder_ABC126_E"}
{"code": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class atcoder_ABC145_E {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int T = sc.nextInt();\n        int[][] AB = new int[N][2];\n        for (int i = 0; i < N; i++) {\n            AB[i][0] = sc.nextInt();\n            AB[i][1] = sc.nextInt();\n        }\n        Arrays.sort(AB, Comparator.comparingInt(a -> a[0]));\n        int[][] dp = new int[N + 1][6001];\n        for (int i = 1; i <= N; i++) {\n            for (int timeAfterEat = 0; timeAfterEat <= 6000; timeAfterEat++) {\n                dp[i][timeAfterEat] = Math.max(dp[i][timeAfterEat], dp[i - 1][timeAfterEat]);\n                int time = AB[i - 1][0];\n                int value = AB[i - 1][1];\n                if (0 <= timeAfterEat - time && timeAfterEat - time < T) {\n                    dp[i][timeAfterEat] =\n                            Math.max(dp[i][timeAfterEat], dp[i - 1][timeAfterEat - time] + value);\n                }\n            }\n        }\n        System.out.println(Arrays.stream(dp[N]).max().getAsInt());\n    }\n}\n", "id": "atcoder_ABC145_E"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_ABC104_C {\n    static final int INF = 100000;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int D = sc.nextInt();\n        long G = sc.nextLong();\n        int[] p = new int[D];\n        int[] c = new int[D];\n        for (int i = 0; i < D; i++) {\n            p[i] = sc.nextInt();\n            c[i] = sc.nextInt();\n        }\n        int min = INF;\n        for (int bit = 0; bit < (1 << D); bit++) {\n            int score = 0;\n            int solve_num = 0;\n            for (int i = 0; i < D; i++) {\n                if ((bit & (1 << i)) != 0) {\n                    score += 100 * (i + 1) * p[i] + c[i];\n                    solve_num += p[i];\n                }\n            }\n            if (score < G) {\n                loop:\n                for (int i = D - 1; i >= 0; i--) {\n                    if ((bit & (1 << i)) == 0) {\n                        for (int j = 0; j < p[i] - 1; j++) {\n                            score += 100 * (i + 1);\n                            solve_num++;\n                            if (score >= G) {\n                                break loop;\n                            }\n                        }\n                    }\n                }\n            }\n            if (score >= G) {\n                min = Math.min(min, solve_num);\n            }\n        }\n        System.out.println(min);\n        sc.close();\n    }\n}\n", "id": "atcoder_ABC104_C"}
{"code": "import java.io.*;\nimport java.util.*;\n\npublic class atcoder_AGC043_B {\n    private int cal(String s, char c) {\n        int n = s.length();\n        int m = n - 1;\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (s.charAt(i) == c && (m & i) == i) {\n                ans ^= 1;\n            }\n        }\n        return ans;\n    }\n\n    private void solve() {\n        int n = sc.nextInt();\n        String s = sc.next();\n        StringBuilder sb = new StringBuilder();\n        for (int i = 1; i < n; i++) {\n            sb.append(Math.abs(s.charAt(i) - s.charAt(i - 1)));\n        }\n        if (n == 2) {\n            out.println(sb.charAt(0));\n            return;\n        }\n        s = sb.toString();\n        if (s.contains(\"1\")) {\n            out.println(cal(s, '1'));\n        } else {\n            out.println(cal(s, '2') * 2);\n        }\n    }\n\n    private static PrintWriter out;\n    private static MyScanner sc;\n\n    private static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        private MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    public static void main(String[] args) {\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n        sc = new MyScanner();\n        new atcoder_AGC043_B().solve();\n        out.close();\n    }\n}\n", "id": "atcoder_AGC043_B"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC140_F {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int size = (1 << N);\n        int[] S = new int[size];\n        boolean[] spawned = new boolean[size];\n        spawned[size - 1] = true;\n        for (int i = 0; i < size; i++) S[i] = sc.nextInt();\n        Arrays.sort(S);\n        List<Integer> active = new ArrayList<>();\n        active.add(S[size - 1]);\n        spawned[size - 1] = true;\n        for (int i = 0; i < N; i++) {\n            active.sort(Collections.reverseOrder());\n            List<Integer> activated = new ArrayList<>();\n            int next = size - 1;\n            for (int slime : active) {\n                while (next >= 0 && (S[next] >= slime || spawned[next])) {\n                    next--;\n                }\n                if (next < 0) {\n                    System.out.println(\"No\");\n                    return;\n                }\n                spawned[next] = true;\n                activated.add(S[next]);\n            }\n            active.addAll(activated);\n        }\n        System.out.println(\"Yes\");\n    }\n}\n", "id": "atcoder_ABC140_F"}
{"code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class atcoder_AGC046_A {\n    public static void main(String[] args) throws IOException {\n        FastReader sc = new FastReader();\n        PrintWriter pw = new PrintWriter(System.out);\n        int x = sc.nextInt();\n        int count = 0;\n        int tmp = x;\n        x = 0;\n        while (x != 360) {\n            x = x + tmp;\n            if (x > 360) {\n                x = x - 360;\n            }\n            count++;\n        }\n        System.out.println(count);\n    }\n}\n\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}\n", "id": "atcoder_AGC046_A"}
{"code": "import java.util.*;\n\npublic class atcoder_ABC134_E {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>();\n        while (n-- > 0) {\n            int num = sc.nextInt();\n            if (map.lowerKey(num) == null) {\n                int val = map.getOrDefault(num, 0);\n                map.put(num, ++val);\n            } else {\n                int key = map.lowerKey(num);\n                int val = map.get(key);\n                if (val == 1) {\n                    map.remove(key);\n                } else {\n                    map.put(key, --val);\n                }\n                val = map.getOrDefault(num, 0);\n                map.put(num, ++val);\n            }\n        }\n        int ans = 0;\n        for (Integer key : map.keySet()) {\n            int val = map.get(key);\n            ans += val;\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_ABC134_E"}
{"code": "import java.util.Scanner;\n\npublic class atcoder_AGC025_A {\n    public static int sum(int a) {\n        int ans = 0;\n        while (a >= 10) {\n            ans += a % 10;\n            a /= 10;\n        }\n        ans += a;\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        Scanner stdIn = new Scanner(System.in);\n        int N = stdIn.nextInt();\n        int n = 0;\n        if (N % 2 == 0) {\n            n = N / 2;\n        } else {\n            n = (N + 1) / 2;\n        }\n        int ans = sum(1) + sum(N - 1);\n        for (int A = 1; A <= n; A++) {\n            if (sum(A) + sum(N - A) < ans) {\n                ans = sum(A) + sum(N - A);\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "id": "atcoder_AGC025_A"}
{"code": "import java.util.HashSet;\nimport java.util.Scanner;\n\npublic class codeforces_400_B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        String arrs[] = new String[n];\n        for (int i = 0; i < n; i++) {\n            arrs[i] = sc.next();\n        }\n        int[] length = new int[n];\n        int index = 0;\n        int returnDex = 0;\n        for (String tmp : arrs) {\n            int dexG = tmp.indexOf(\"G\");\n            int dexS = tmp.indexOf(\"S\");\n            if (dexG > dexS) {\n                returnDex = -1;\n            }\n            length[index++] = dexS - dexG;\n        }\n        HashSet set = new HashSet<Integer>();\n        for (int len : length) {\n            set.add(len);\n        }\n        if (returnDex == -1) {\n            System.out.println(returnDex);\n        } else {\n            System.out.println(set.size());\n        }\n    }\n}\n", "id": "codeforces_400_B"}
