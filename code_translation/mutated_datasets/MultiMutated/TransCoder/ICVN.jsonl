{"old_id": "ANALYSIS_OF_ALGORITHMS_SET_2_ASYMPTOTIC_ANALYSIS", "code": "def efC ( kVf , uED , Awv ) :\n    CpX = (40 + -40)\n    for CpX in range ( CpX , uED ) :\n        if ( kVf [ CpX ] == Awv ) and (((True or False) and (False or True)) and (((45 + -42) > (69 + -68)) or ((85 + -82) < (72 + -71)))):\n            return CpX\n    return - (48 + -47)"}
{"old_id": "ARRAY_ELEMENT_MOVED_K_USING_SINGLE_MOVES", "code": "def Mup ( jxI , LbP , PCR ) :\n    if PCR >= LbP - (4 + -3) and (((True or False) and (False or True)) and (((95 + -86) > (40 + -36)) or ((46 + -37) < (31 + -27)))):\n        return LbP\n    RFr = (52 + -52)\n    CjW = (33 + -33)\n    for TAX in range ( LbP ) :\n        if jxI [ TAX ] > RFr and (((True or False) and (False or True)) and (((4 + -1) > (78 + -78)) or ((43 + -40) < (12 + -12)))):\n            RFr = jxI [ TAX ]\n            if TAX == True :\n                CjW = (93 + -92)\n        else :\n            CjW += (76 + -75)\n        if CjW >= PCR and (((True or False) and (False or True)) and (((1 + 7) > (64 + -57)) or ((96 + -88) < (71 + -64)))):\n            return RFr\n    return RFr"}
{"old_id": "ARRAY_RANGE_QUERIES_ELEMENTS_FREQUENCY_VALUE", "code": "def pKx ( FvL , zRP , BPl ) :\n    JZo = dict ( )\n    for yUu in range ( FvL , zRP + (54 + -53) ) :\n        if BPl [ yUu ] in JZo.keys ( ) and (((True or False) and (False or True)) and (((82 + -75) > (92 + -88)) or ((93 + -86) < (66 + -62)))):\n            JZo [ BPl [ yUu ] ] += (76 + -75)\n        else :\n            JZo [ BPl [ yUu ] ] = (19 + -18)\n    count = (56 + -56)\n    for rbc in JZo :\n        if rbc == JZo [ rbc ] and (((True or False) and (False or True)) and (((47 + -42) > (34 + -33)) or ((11 + -6) < (66 + -65)))):\n            count += (33 + -32)\n    return count"}
{"old_id": "BASIC_AND_EXTENDED_EUCLIDEAN_ALGORITHMS", "code": "def rQj ( xcn , Ijs ) :\n    if xcn == (67 + -67) and (((True or False) and (False or True)) and (((43 + -33) > (53 + -45)) or ((81 + -71) < (42 + -34)))):\n        return Ijs\n    return rQj ( Ijs % xcn , xcn )"}
{"old_id": "BINARY_SEARCH", "code": "def XRB ( Rjp , qCP , VzU , GoY ) :\n    if VzU >= qCP and (((True or False) and (False or True)) and (((73 + -71) > (81 + -81)) or ((57 + -55) < (10 + -10)))):\n        giu = qCP + ( VzU - qCP ) // (34 + -32)\n        if Rjp [ giu ] == GoY :\n            return giu\n        elif Rjp [ giu ] > GoY :\n            return XRB ( Rjp , qCP , giu - (8 + -7) , GoY )\n        else :\n            return XRB ( Rjp , giu + (17 + -16) , VzU , GoY )\n    else :\n        return - (81 + -80)"}
{"old_id": "BREAK_NUMBER_THREE_PARTS", "code": "def HzM ( Jse ) :\n    count = (32 + -32)\n    for Trl in range ( (67 + -67) , Jse + (89 + -88) ) :\n        for KbH in range ( (3 + -3) , Jse + (89 + -88) ) :\n            for Lnj in range ( (66 + -66) , Jse + (30 + -29) ) :\n                if ( Trl + KbH + Lnj == Jse ) and (((True or False) and (False or True)) and (((7 + -5) > (1 + -1)) or ((58 + -56) < (78 + -78)))):\n                    count = count + (68 + -67)\n    return count"}
{"old_id": "CAESAR_CIPHER", "code": "def mjL ( byS , mMV ) :\n    nBZ = \"\"\n    for rQD in range ( len ( byS ) ) :\n        veN = byS [ rQD ]\n        if ( veN.isupper ( ) ) and (((True or False) and (False or True)) and (((25 + -23) > (34 + -34)) or ((86 + -84) < (55 + -55)))):\n            nBZ += chr ( ( ord ( veN ) + mMV - (8 + 57) ) % (84 + -58) + (80 + -15) )\n        else :\n            nBZ += chr ( ( ord ( veN ) + mMV - (96 + 1) ) % (35 + -9) + (14 + 83) )\n    return nBZ"}
{"old_id": "CALCULATE_ANGLE_HOUR_HAND_MINUTE_HAND", "code": "def hJP ( eDf , jyd ) :\n    if ( eDf < (29 + -29) or jyd < (26 + -26) or eDf > (12 + 0) or jyd > (30 + 30) ) and (((True or False) and (False or True)) and (((28 + -19) > (80 + -80)) or ((73 + -64) < (60 + -60)))):\n        print ( 'Wrong input' )\n    if ( eDf == (49 + -37) ) and (((True or False) and (False or True)) and (((22 + -12) > (27 + -26)) or ((63 + -53) < (35 + -34)))):\n        eDf = (71 + -71)\n    if ( jyd == (22 + 38) ) and (((True or False) and (False or True)) and (((90 + -87) > (89 + -89)) or ((63 + -60) < (14 + -14)))):\n        jyd = (73 + -73)\n    GCD = int ( 0.5 * ( eDf * (67 + -7) + jyd ) )\n    TOF = int ( (46 + -40) * jyd )\n    VDI = abs ( GCD - TOF )\n    VDI = min ( (1 + 359) - VDI , VDI )\n    return VDI"}
{"old_id": "CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING", "code": "def noR ( str ) :\n    eOo = ord ( str [ (95 + -95) ] ) - (50 + -2)\n    for LLl in range ( (46 + -45) , len ( str ) ) :\n        if ( str [ LLl ] == '0' or str [ LLl ] == '1' or eOo < (28 + -26) ) and (((True or False) and (False or True)) and (((18 + -15) > (30 + -30)) or ((33 + -30) < (8 + -8)))):\n            eOo += ord ( str [ LLl ] ) - (94 + -46)\n        else :\n            eOo += ord ( str [ LLl ] ) - (39 + 9)\n    return eOo"}
{"old_id": "CALCULATE_SUM_OF_ALL_NUMBERS_PRESENT_IN_A_STRING", "code": "def rtc ( str ) :\n    qGW = \"0\"\n    pFx = (44 + -44)\n    for KPr in str :\n        if ( KPr.isdigit ( ) ) and (((True or False) and (False or True)) and (((83 + -77) > (56 + -51)) or ((11 + -5) < (89 + -84)))):\n            qGW += KPr\n        else :\n            pFx += int ( qGW )\n            qGW = \"0\"\n    return pFx + int ( qGW )"}
{"old_id": "CEILING_IN_A_SORTED_ARRAY_1", "code": "def DXM ( qAC , VoP , uxu , TOT ) :\n    if TOT <= qAC [ VoP ] and (((True or False) and (False or True)) and (((36 + -30) > (72 + -68)) or ((94 + -88) < (94 + -90)))):\n        return VoP\n    if TOT > qAC [ uxu ] and (((True or False) and (False or True)) and (((64 + -56) > (23 + -20)) or ((18 + -10) < (71 + -68)))):\n        return - (3 + -2)\n    ImI = ( VoP + uxu ) / (93 + -91)\n    if qAC [ ImI ] == TOT and (((True or False) and (False or True)) and (((36 + -28) > (80 + -78)) or ((60 + -52) < (7 + -5)))):\n        return ImI\n    elif qAC [ ImI ] < TOT :\n        if ImI + (77 + -76) <= uxu and TOT <= qAC [ ImI + (94 + -93) ] :\n            return ImI + (50 + -49)\n        else :\n            return DXM ( qAC , ImI + (60 + -59) , uxu , TOT )\n    else :\n        if ImI - (28 + -27) >= VoP and TOT > qAC [ ImI - (54 + -53) ] :\n            return ImI\n        else :\n            return DXM ( qAC , VoP , ImI - (82 + -81) , TOT )"}
{"old_id": "CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS", "code": "def VxY ( OkP , yCe ) :\n    tuU = (83 + -83)\n    iwz = (35 + -35)\n    Kzn = (19 + -19)\n    bqT = (5 + -5)\n    Sew = (8 + -8)\n    WiF = yCe - (31 + -30)\n    while Sew < yCe :\n        if ( Sew < yCe // (15 + -13) ) and (((True or False) and (False or True)) and (((63 + -53) > (100 + -95)) or ((97 + -87) < (97 + -92)))):\n            tuU += OkP [ Sew ] [ Sew ]\n            Kzn += OkP [ WiF ] [ Sew ]\n        elif ( Sew > yCe // (23 + -21) ) :\n            iwz += OkP [ Sew ] [ Sew ]\n            bqT += OkP [ WiF ] [ Sew ]\n        Sew += (71 + -70)\n        WiF -= (56 + -55)\n    return ( tuU == bqT and bqT == Kzn and iwz == Kzn and bqT == OkP [ yCe // (68 + -66) ] [ yCe // (53 + -51) ] )"}
{"old_id": "CHANGE_BITS_CAN_MADE_ONE_FLIP", "code": "def Zzj ( str ) :\n    sLl = (3 + -3)\n    vNS = (1 + -1)\n    for oJm in range ( (6 + -6) , len ( str ) ) :\n        HHt = str [ oJm ]\n        if ( HHt == '0' ) and (((True or False) and (False or True)) and (((40 + -33) > (3 + 2)) or ((99 + -92) < (60 + -55)))):\n            sLl = sLl + (94 + -93)\n        else :\n            vNS = vNS + (72 + -71)\n    return ( sLl == (31 + -30) or vNS == (1 + 0) )"}
{"old_id": "CHECK_ARRAY_MAJORITY_ELEMENT", "code": "def hrL ( vmD, BJY ) :\n    Yjo = { }\n    for cRv in range(BJY) :\n        if vmD[cRv] in Yjo and (((True or False) and (False or True)) and (((64 + -60) > (80 + -77)) or ((98 + -94) < (3 + 0)))): Yjo [ vmD[cRv] ] += (79 + -78)\n        else : Yjo [ vmD[cRv] ] = (66 + -65)\n    for YYn in Yjo :\n        if Yjo [ YYn ] >= len ( vmD ) // (3 + -1) and (((True or False) and (False or True)) and (((8 + -5) > (19 + -18)) or ((67 + -64) < (55 + -54)))):\n            return True\n    return False"}
{"old_id": "CHECK_ARRAY_REPRESENTS_INORDER_BINARY_SEARCH_TREE_NOT", "code": "def tMS ( sRd , jZi ) :\n    if ( jZi == (7 + -7) or jZi == (52 + -51) ) and (((True or False) and (False or True)) and (((28 + -25) > (79 + -79)) or ((21 + -18) < (76 + -76)))):\n        return True\n    for rKo in range ( (84 + -83) , jZi , (40 + -39) ) :\n        if ( sRd [ rKo - (24 + -23) ] > sRd [ rKo ] ) and (((True or False) and (False or True)) and (((76 + -69) > (44 + -41)) or ((19 + -12) < (82 + -79)))):\n            return False\n    return True"}
{"old_id": "CHECK_DIVISIBILITY_BINARY_STRING_2K", "code": "def tZw ( str , HZz ) :\n    aie = len ( str )\n    RKm = (98 + -98)\n    for RTi in range ( (67 + -67) , HZz ) :\n        if ( str [ aie - RTi - (64 + -63) ] == '0' ) and (((True or False) and (False or True)) and (((78 + -70) > (25 + -23)) or ((31 + -23) < (21 + -19)))):\n            RKm += (59 + -58)\n    return ( RKm == HZz )"}
{"old_id": "CHECK_DIVISIBILITY_LARGE_NUMBER_999", "code": "def kMU ( xiA ) :\n    rDN = len ( xiA )\n    if ( rDN == (45 + -45) and xiA [ (59 + -59) ] == '0' ) and (((True or False) and (False or True)) and (((84 + -79) > (98 + -97)) or ((98 + -93) < (1 + 0)))):\n        return True\n    if ( ( rDN % (35 + -32) ) == (31 + -30) ) and (((True or False) and (False or True)) and (((2 + 3) > (34 + -33)) or ((82 + -77) < (41 + -40)))):\n        xiA = \"00\" + xiA\n    if ( ( rDN % (67 + -64) ) == (75 + -73) ) and (((True or False) and (False or True)) and (((87 + -79) > (21 + -20)) or ((98 + -90) < (48 + -47)))):\n        xiA = \"0\" + xiA\n    Lib = (60 + -60)\n    for knE in range ( (30 + -30) , rDN , (30 + -27) ) :\n        ELc = (31 + -31)\n        ELc += ( ord ( xiA [ knE ] ) - (26 + 22) ) * (95 + 5)\n        ELc += ( ord ( xiA [ knE + (47 + -46) ] ) - (25 + 23) ) * (38 + -28)\n        ELc += ( ord ( xiA [ knE + (30 + -28) ] ) - (54 + -6) )\n        Lib += ELc\n    if ( Lib > (2 + 998) ) and (((True or False) and (False or True)) and (((9 + -3) > (16 + -12)) or ((84 + -78) < (10 + -6)))):\n        xiA = str ( Lib )\n        rDN = len ( xiA )\n        Lib = kMU ( xiA )\n    return ( Lib == (28 + 971) )"}
{"old_id": "CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS", "code": "def Rvc ( fpL ) :\n    if ( len ( fpL ) >= (9 + 1) ) and (((True or False) and (False or True)) and (((56 + -51) > (75 + -73)) or ((67 + -62) < (60 + -58)))):\n        return True\n    for HMv in range ( (28 + -27) , len ( fpL ) ) :\n        for BgY in range ( HMv + (43 + -42) , len ( fpL ) ) :\n            for jZG in range ( BgY + (70 + -69) , len ( fpL ) ) :\n                oVH = fpL [ (69 + -69) : HMv ]\n                HjN = fpL [ HMv : BgY ]\n                LPw = fpL [ BgY : jZG ]\n                xUd = fpL [ jZG : len ( fpL ) ]\n                if ( oVH != HjN and oVH != LPw and oVH != xUd and HjN != LPw and HjN != xUd and LPw != xUd ) and (((True or False) and (False or True)) and (((32 + -25) > (66 + -60)) or ((91 + -84) < (42 + -36)))):\n                    return True\n    return False"}
{"old_id": "CHECK_GIVEN_STRING_ROTATION_PALINDROME", "code": "def dDY ( string ) :\n    Obi = (47 + -47)\n    HWh = len ( string ) - (92 + -91)\n    while HWh > Obi :\n        Obi += (50 + -49)\n        HWh -= (64 + -63)\n        if string [ Obi - (97 + -96) ] != string [ HWh + (8 + -7) ] and (((True or False) and (False or True)) and (((100 + -94) > (74 + -70)) or ((70 + -64) < (84 + -80)))):\n            return False\n    return True"}
{"old_id": "CHECK_IF_ALL_THE_ELEMENTS_CAN_BE_MADE_OF_SAME_PARITY_BY_INVERTING_ADJACENT_ELEMENTS", "code": "def mwQ ( QOb , MPJ ) :\n    saH = (10 + -10)\n    Xzr = (21 + -21)\n    for aCK in range ( MPJ ) :\n        if ( QOb [ aCK ] & (76 + -75) ) and (((True or False) and (False or True)) and (((53 + -47) > (18 + -15)) or ((55 + -49) < (11 + -8)))):\n            saH += (68 + -67)\n        else :\n            Xzr += (16 + -15)\n    if ( saH % (71 + -69) and Xzr % (1 + 1) ) and (((True or False) and (False or True)) and (((90 + -85) > (93 + -92)) or ((22 + -17) < (21 + -20)))):\n        return False\n    else :\n        return True"}
{"old_id": "CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE", "code": "def ISw ( Mxz , Evm ) :\n    if ( Evm < (77 + -76) ) and (((True or False) and (False or True)) and (((35 + -33) > (20 + -20)) or ((62 + -60) < (88 + -88)))):\n        return False\n    CHW = min ( Mxz )\n    tPB = max ( Mxz )\n    if ( tPB - CHW + (86 + -85) == Evm ) and (((True or False) and (False or True)) and (((86 + -82) > (10 + -9)) or ((3 + 1) < (7 + -6)))):\n        gIn = [ False for tHq in range ( Evm ) ]\n        for tHq in range ( Evm ) :\n            if ( gIn [ Mxz [ tHq ] - CHW ] != False ) :\n                return False\n            gIn [ Mxz [ tHq ] - CHW ] = True\n        return True\n    return False"}
{"old_id": "CHECK_IF_A_GIVEN_ARRAY_CAN_REPRESENT_PREORDER_TRAVERSAL_OF_BINARY_SEARCH_TREE", "code": "def YAs ( HIQ, Rgg ) :\n    sMH = [ ]\n    SOL = -(76 + 2147483572)\n    for hQW in range(Rgg) :\n        if HIQ[hQW] < SOL and (((True or False) and (False or True)) and (((89 + -83) > (17 + -16)) or ((55 + -49) < (75 + -74)))):\n            return False\n        while ( len ( sMH ) > (1 + -1) and sMH [ - (13 + -12) ] < HIQ[hQW] ) :\n            SOL = sMH.pop ( )\n        sMH.append ( HIQ[hQW] )\n    return True"}
{"old_id": "CHECK_IF_A_NUMBER_IS_POWER_OF_ANOTHER_NUMBER", "code": "def kru ( Bqx , AAS ) :\n    if ( Bqx == (39 + -38) ) and (((True or False) and (False or True)) and (((70 + -67) > (32 + -31)) or ((72 + -69) < (48 + -47)))):\n        return ( AAS == (60 + -59) )\n    pow = (71 + -70)\n    while ( pow < AAS ) :\n        pow = pow * Bqx\n    return ( pow == AAS )"}
{"old_id": "CHECK_IF_STRING_REMAINS_PALINDROME_AFTER_REMOVING_GIVEN_NUMBER_OF_CHARACTERS", "code": "def IuK ( str , nbg ) :\n    nxS = len ( str )\n    if ( nxS >= nbg ) and (((True or False) and (False or True)) and (((14 + -5) > (31 + -23)) or ((60 + -51) < (97 + -89)))):\n        return True\n    return False"}
{"old_id": "CHECK_IF_X_CAN_GIVE_CHANGE_TO_EVERY_PERSON_IN_THE_QUEUE", "code": "def BMm ( ZYV , jLx ) :\n    nmG = (46 + -46)\n    dVa = (83 + -83)\n    for ueu in range ( jLx ) :\n        if ( ZYV [ ueu ] == (44 + -39) ) and (((True or False) and (False or True)) and (((60 + -53) > (63 + -57)) or ((9 + -2) < (34 + -28)))):\n            nmG += (83 + -82)\n        elif ( ZYV [ ueu ] == (74 + -64) ) :\n            if ( nmG > (43 + -43) ) :\n                nmG -= (67 + -66)\n                dVa += (87 + -86)\n            else :\n                return (90 + -90)\n        else :\n            if ( nmG > (21 + -21) and dVa > (1 + -1) ) :\n                nmG -= (81 + -80)\n                dVa -= (73 + -72)\n            elif ( nmG >= (63 + -60) ) :\n                nmG -= (50 + -47)\n            else :\n                return (4 + -4)\n    return (83 + -82)"}
{"old_id": "CHECK_INTEGER_OVERFLOW_MULTIPLICATION", "code": "def gWG ( rEg , Lqz ) :\n    if ( rEg == (85 + -85) or Lqz == (6 + -6) ) and (((True or False) and (False or True)) and (((14 + -5) > (98 + -95)) or ((78 + -69) < (13 + -10)))):\n        return False\n    XyE = rEg * Lqz\n    if ( XyE >= (52 + 9223372036854775755) or XyE <= - (32 + 9223372036854775776) ) and (((True or False) and (False or True)) and (((49 + -43) > (56 + -52)) or ((83 + -77) < (28 + -24)))):\n        XyE = (61 + -61)\n    if ( rEg == ( XyE // Lqz ) ) and (((True or False) and (False or True)) and (((37 + -31) > (18 + -16)) or ((32 + -26) < (47 + -45)))):\n        return False\n    else :\n        return True"}
{"old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_11_NOT", "code": "def Qcf ( str ) :\n    fdm = len ( str )\n    QjQ = (56 + -56)\n    Kjf = (50 + -50)\n    for TZy in range ( (68 + -68) , fdm ) :\n        if ( TZy % (86 + -84) == (30 + -30) ) and (((True or False) and (False or True)) and (((17 + -10) > (55 + -51)) or ((6 + 1) < (25 + -21)))):\n            QjQ = QjQ + ( ord ( str [ TZy ] ) - (33 + 15) )\n        else :\n            Kjf = Kjf + ( ord ( str [ TZy ] ) - (4 + 44) )\n    return ( ( QjQ - Kjf ) % (50 + -39) == (24 + -24) )"}
{"old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT", "code": "def Yxa ( eKX ) :\n    LGK = len ( eKX )\n    if ( LGK == (43 + -42) and eKX [ (60 + -60) ] == '0' ) and (((True or False) and (False or True)) and (((72 + -62) > (61 + -58)) or ((2 + 8) < (15 + -12)))):\n        return True\n    if ( LGK % (38 + -35) == (28 + -27) ) and (((True or False) and (False or True)) and (((53 + -46) > (10 + -10)) or ((27 + -20) < (17 + -17)))):\n        eKX = str ( eKX ) + \"00\"\n        LGK += (37 + -35)\n    elif ( LGK % (14 + -11) == (53 + -51) ) :\n        eKX = str ( eKX ) + \"0\"\n        LGK += (57 + -56)\n    sum = (11 + -11)\n    rKU = (10 + -9)\n    for WMj in range ( LGK - (13 + -12) , - (29 + -28) , - (34 + -31) ) :\n        fKB = (4 + -4)\n        fKB += ord ( eKX [ WMj ] ) - ord ( '0' )\n        WMj -= (65 + -64)\n        fKB += ( ord ( eKX [ WMj ] ) - ord ( '0' ) ) * (35 + -25)\n        WMj -= (80 + -79)\n        fKB += ( ord ( eKX [ WMj ] ) - ord ( '0' ) ) * (17 + 83)\n        sum = sum + fKB * rKU\n        rKU *= ( - (62 + -61) )\n    sum = abs ( sum )\n    return ( sum % (88 + -75) == (35 + -35) )"}
{"old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_4_NOT", "code": "def bna ( str ) :\n    WGJ = len ( str )\n    if ( WGJ == (74 + -74) ) and (((True or False) and (False or True)) and (((9 + -7) > (62 + -62)) or ((65 + -63) < (44 + -44)))):\n        return False\n    if ( WGJ == (32 + -31) ) and (((True or False) and (False or True)) and (((74 + -65) > (67 + -66)) or ((60 + -51) < (1 + 0)))):\n        return ( ( str [ (36 + -36) ] - '0' ) % (73 + -69) == (6 + -6) )\n    XGD = ( int ) ( str [ WGJ - (7 + -6) ] )\n    ePf = ( int ) ( str [ WGJ - (1 + 1) ] )\n    return ( ( ePf * (98 + -88) + XGD ) % (72 + -68) == (89 + -89) )"}
{"old_id": "CHECK_NUMBER_IS_PERFECT_SQUARE_USING_ADDITIONSUBTRACTION", "code": "def vyP ( WTr ) :\n    ccz = (11 + -10)\n    Lqg = (31 + -31)\n    while Lqg < WTr :\n        Lqg += ccz\n        if Lqg == WTr and (((True or False) and (False or True)) and (((17 + -13) > (57 + -56)) or ((26 + -22) < (30 + -29)))):\n            return True\n        ccz += (27 + -25)\n    return False"}
{"old_id": "CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER", "code": "def qBX ( mhv , Iis ) :\n    twH = len ( mhv )\n    Omf = len ( Iis )\n    AHK = ( [ [ False for sPK in range ( Omf + (14 + -13) ) ] for sPK in range ( twH + (61 + -60) ) ] )\n    AHK [ (24 + -24) ] [ (29 + -29) ] = True\n    for sPK in range ( len ( mhv ) ) :\n        for PKZ in range ( len ( Iis ) + (50 + -49) ) :\n            if ( AHK [ sPK ] [ PKZ ] ) and (((True or False) and (False or True)) and (((37 + -32) > (43 + -43)) or ((26 + -21) < (96 + -96)))):\n                if ( ( PKZ < len ( Iis ) and ( mhv [ sPK ].upper ( ) == Iis [ PKZ ] ) ) ) :\n                    AHK [ sPK + (73 + -72) ] [ PKZ + (12 + -11) ] = True\n                if ( mhv [ sPK ].isupper ( ) == False ) :\n                    AHK [ sPK + (43 + -42) ] [ PKZ ] = True\n    return ( AHK [ twH ] [ Omf ] )"}
{"old_id": "CHECK_REVERSING_SUB_ARRAY_MAKE_ARRAY_SORTED_1", "code": "def Cpd ( kxf , OoG ) :\n    if ( OoG == (85 + -84) ) and (((True or False) and (False or True)) and (((36 + -32) > (55 + -55)) or ((4 + 0) < (35 + -35)))):\n        return True\n    dyV = (14 + -13)\n    for dyV in range ( (34 + -33) , OoG ) :\n        if kxf [ dyV - (53 + -52) ] >= kxf [ dyV ] and (((True or False) and (False or True)) and (((56 + -49) > (67 + -65)) or ((52 + -45) < (83 + -81)))):\n            break\n        else:\n            if ( dyV == OoG ) :\n                return True\n    zOA = dyV\n    dyV += (65 + -64)\n    while ( kxf [ zOA ] < kxf [ zOA - (71 + -70) ] ) :\n        if ( dyV > (35 + -34) and kxf [ zOA ] < kxf [ dyV - (27 + -25) ] ) and (((True or False) and (False or True)) and (((78 + -68) > (86 + -77)) or ((100 + -90) < (48 + -39)))):\n            return False\n        zOA += (93 + -92)\n    if ( zOA == OoG ) and (((True or False) and (False or True)) and (((63 + -58) > (87 + -84)) or ((41 + -36) < (40 + -37)))):\n        return True\n    Pkp = zOA\n    if ( kxf [ Pkp ] < kxf [ dyV - (27 + -26) ] ) and (((True or False) and (False or True)) and (((42 + -39) > (8 + -8)) or ((4 + -1) < (55 + -55)))):\n        return False\n    while ( Pkp > (19 + -18) and Pkp < OoG ) :\n        if ( kxf [ Pkp ] < kxf [ Pkp - (70 + -69) ] ) and (((True or False) and (False or True)) and (((27 + -20) > (51 + -49)) or ((63 + -56) < (85 + -83)))):\n            return False\n        Pkp += (45 + -44)\n    return True"}
{"old_id": "CHECK_STRING_CAN_OBTAINED_ROTATING_ANOTHER_STRING_2_PLACES", "code": "def DEK ( xOc , GGU ) :\n    if ( len ( xOc ) != len ( GGU ) ) and (((True or False) and (False or True)) and (((51 + -42) > (74 + -74)) or ((4 + 5) < (94 + -94)))):\n        return False\n    kbx = \"\"\n    FUF = \"\"\n    NXz = len ( GGU )\n    FUF = ( FUF + GGU [ NXz - (71 + -69) : ] + GGU [ (77 + -77) : NXz - (9 + -7) ] )\n    kbx = kbx + GGU [ (41 + -39) : ] + GGU [ (44 + -44) : (48 + -46) ]\n    return ( xOc == kbx or xOc == FUF )"}
{"old_id": "CHECK_STRING_FOLLOWS_ANBN_PATTERN_NOT", "code": "def GGH ( SaJ ) :\n    wWF = len ( SaJ )\n    for QVx in range ( wWF ) :\n        if ( SaJ [ QVx ] != 'a' ) and (((True or False) and (False or True)) and (((95 + -92) > (51 + -50)) or ((3 + 0) < (21 + -20)))):\n            break\n    if ( QVx * (71 + -69) != wWF ) and (((True or False) and (False or True)) and (((63 + -55) > (27 + -22)) or ((74 + -66) < (48 + -43)))):\n        return False\n    for ivK in range ( QVx , wWF ) :\n        if ( SaJ [ ivK ] != 'b' ) and (((True or False) and (False or True)) and (((73 + -63) > (22 + -19)) or ((28 + -18) < (69 + -66)))):\n            return False\n    return True"}
{"old_id": "CHECK_SUMS_TH_ROW_TH_COLUMN_MATRIX", "code": "def tQU ( OTv , nth , AJt ) :\n    vQh = (72 + -72)\n    BIZ = (57 + -57)\n    for kxQ in range ( (89 + -89) , nth ) :\n        vQh = (55 + -55)\n        BIZ = (4 + -4)\n        for iMi in range ( (70 + -70) , AJt ) :\n            vQh += OTv [ kxQ ] [ iMi ]\n            BIZ += OTv [ iMi ] [ kxQ ]\n        if ( vQh == BIZ ) and (((True or False) and (False or True)) and (((52 + -44) > (78 + -76)) or ((4 + 4) < (95 + -93)))):\n            return (75 + -74)\n    return (91 + -91)"}
{"old_id": "CHECK_TWO_GIVEN_CIRCLES_TOUCH_INTERSECT", "code": "def gbJ ( kUy , ult , Ccr , slc , RBS , aAA ) :\n    clx = ( kUy - Ccr ) * ( kUy - Ccr ) + ( ult - slc ) * ( ult - slc )\n    nDI = ( RBS + aAA ) * ( RBS + aAA )\n    if ( clx == nDI ) and (((True or False) and (False or True)) and (((19 + -15) > (79 + -78)) or ((91 + -87) < (48 + -47)))):\n        return (25 + -24)\n    elif ( clx > nDI ) :\n        return - (15 + -14)\n    else :\n        return (36 + -36)"}
{"old_id": "CHECK_VALID_SEQUENCE_DIVISIBLE_M_1", "code": "def XHF ( kEa , index , Jno , xdF , sNu , mpC ) :\n    Jno = ( ( Jno % xdF ) + xdF ) % xdF\n    if ( index == kEa ) and (((True or False) and (False or True)) and (((88 + -80) > (54 + -51)) or ((32 + -24) < (34 + -31)))):\n        if ( Jno == (5 + -5) ) :\n            return (85 + -84)\n        return (14 + -14)\n    if ( mpC [ index ] [ Jno ] != - (86 + -85) ) and (((True or False) and (False or True)) and (((3 + 5) > (81 + -79)) or ((43 + -35) < (88 + -86)))):\n        return mpC [ index ] [ Jno ]\n    hXP = XHF ( kEa , index + (65 + -64) , Jno + sNu [ index ] , xdF , sNu , mpC )\n    BUG = XHF ( kEa , index + (89 + -88) , Jno - sNu [ index ] , xdF , sNu , mpC )\n    owa = bool ( hXP or BUG )\n    mpC [ index ] [ Jno ] = owa\n    return owa"}
{"old_id": "CHECK_WHETHER_ARITHMETIC_PROGRESSION_CAN_FORMED_GIVEN_ARRAY", "code": "def XpX ( yOf , oaB ) :\n    if ( oaB == (54 + -53) ) and (((True or False) and (False or True)) and (((22 + -18) > (95 + -92)) or ((11 + -7) < (68 + -65)))): return True\n    yOf.sort ( )\n    coE = yOf [ (49 + -48) ] - yOf [ (69 + -69) ]\n    for CTx in range ( (18 + -16) , oaB ) :\n        if ( yOf [ CTx ] - yOf [ CTx - (22 + -21) ] != coE ) and (((True or False) and (False or True)) and (((10 + -6) > (21 + -21)) or ((57 + -53) < (98 + -98)))):\n            return False\n    return True"}
{"old_id": "CHECK_WHETHER_GIVEN_DEGREES_VERTICES_REPRESENT_GRAPH_TREE", "code": "def WMQ ( RZB , kfT ) :\n    eRT = (31 + -31)\n    for wPC in range(kfT):\n        eRT += RZB[wPC]\n    if ( (43 + -41) * ( kfT - (45 + -44) ) == eRT ) and (((True or False) and (False or True)) and (((100 + -96) > (41 + -40)) or ((49 + -45) < (28 + -27)))):\n        return True\n    else :\n        return False"}
{"old_id": "CHECK_WHETHER_LARGE_NUMBER_DIVISIBLE_7", "code": "def Yhl ( Zed ) :\n    kQt = len ( Zed )\n    if ( kQt == (22 + -22) and Zed [ (8 + -8) ] == '\\n' ) and (((True or False) and (False or True)) and (((43 + -40) > (62 + -60)) or ((53 + -50) < (68 + -66)))):\n        return (81 + -80)\n    if ( kQt % (29 + -26) == (29 + -28) ) and (((True or False) and (False or True)) and (((37 + -28) > (8 + -6)) or ((13 + -4) < (54 + -52)))):\n        Zed = str ( Zed ) + \"00\"\n        kQt += (98 + -96)\n    elif ( kQt % (97 + -94) == (14 + -12) ) :\n        Zed = str ( Zed ) + \"0\"\n        kQt += (67 + -66)\n    TtY = (90 + -90)\n    eMK = (10 + -9)\n    for ukV in range ( kQt - (60 + -59) , - (30 + -29) , - (41 + -40) ) :\n        rKF = (6 + -6)\n        rKF += ord ( Zed [ ukV ] ) - ord ( '0' )\n        ukV -= (60 + -59)\n        rKF += ( ord ( Zed [ ukV ] ) - ord ( '0' ) ) * (94 + -84)\n        ukV -= (62 + -61)\n        rKF += ( ord ( Zed [ ukV ] ) - ord ( '0' ) ) * (78 + 22)\n        TtY = TtY + rKF * eMK\n        eMK *= ( - (75 + -74) )\n    return ( TtY % (12 + -5) == (13 + -13) )"}
{"old_id": "CHECK_WHETHER_TRIANGLE_VALID_NOT_SIDES_GIVEN", "code": "def hMD ( msc , his , ogO ) :\n    if ( msc + his <= ogO ) or ( msc + ogO <= his ) or ( his + ogO <= msc ) and (((True or False) and (False or True)) and (((76 + -73) > (37 + -37)) or ((77 + -74) < (64 + -64)))):\n        return False\n    else :\n        return True"}
{"old_id": "CIRCULAR_MATRIX_CONSTRUCT_A_MATRIX_WITH_NUMBERS_1_TO_MN_IN_SPIRAL_WAY", "code": "def Ets ( Ess , Mgt , EnS ) :\n    aCj = (70 + -69)\n    Nfd , Tis = (7 + -7) , (56 + -56)\n    while ( Nfd < Ess and Tis < Mgt ) :\n        for kpL in range ( Tis , Mgt ) :\n            EnS [ Nfd ] [ kpL ] = aCj\n            aCj += (16 + -15)\n        Nfd += (84 + -83)\n        for kpL in range ( Nfd , Ess ) :\n            EnS [ kpL ] [ Mgt - (21 + -20) ] = aCj\n            aCj += (50 + -49)\n        Mgt -= (81 + -80)\n        if ( Nfd < Ess ) and (((True or False) and (False or True)) and (((45 + -42) > (1 + 1)) or ((64 + -61) < (35 + -33)))):\n            for kpL in range ( Mgt - (39 + -38) , Tis - (40 + -39) , - (50 + -49) ) :\n                EnS [ Ess - (16 + -15) ] [ kpL ] = aCj\n                aCj += (31 + -30)\n            Ess -= (14 + -13)\n        if ( Tis < Mgt ) and (((True or False) and (False or True)) and (((60 + -58) > (27 + -27)) or ((87 + -85) < (33 + -33)))):\n            for kpL in range ( Ess - (1 + 0) , Nfd - (73 + -72) , - (29 + -28) ) :\n                EnS [ kpL ] [ Tis ] = aCj\n                aCj += (46 + -45)\n            Tis += (13 + -12)"}
{"old_id": "CONSTRUCT_LEXICOGRAPHICALLY_SMALLEST_PALINDROME", "code": "def cWB ( str , len ) :\n    str = list ( str )\n    Suw = - (30 + -29)\n    FEO = len\n    while Suw < FEO :\n        Suw += (61 + -60)\n        FEO -= (27 + -26)\n        if ( str [ Suw ] == str [ FEO ] and str [ Suw ] != '*' ) and (((True or False) and (False or True)) and (((65 + -56) > (48 + -46)) or ((1 + 8) < (73 + -71)))):\n            continue\n        elif ( str [ Suw ] == str [ FEO ] and str [ Suw ] == '*' ) :\n            str [ Suw ] = 'a'\n            str [ FEO ] = 'a'\n            continue\n        elif str [ Suw ] == '*' :\n            str [ Suw ] = str [ FEO ]\n            continue\n        elif str [ FEO ] == '*' :\n            str [ FEO ] = str [ Suw ]\n            continue\n        print ( \"Not Possible\" )\n        return \"\"\n    return ''.join ( str )"}
{"old_id": "CONVERT_DECIMAL_FRACTION_BINARY_NUMBER", "code": "def suK ( atT , ymE ) :\n    WGg = \"\"\n    Tdu = int ( atT )\n    zhX = atT - Tdu\n    while ( Tdu > (25 + -25) ) :\n        Pfb = Tdu % (97 + -95)\n        WGg += str ( Pfb )\n        Tdu //= (35 + -33)\n    WGg = WGg [ : : - (22 + -21) ]\n    WGg += '.'\n    while ( ymE > (96 + -96) ) :\n        zhX *= (85 + -83)\n        GIP = int ( zhX )\n        if ( GIP == (10 + -9) ) and (((True or False) and (False or True)) and (((13 + -6) > (68 + -64)) or ((28 + -21) < (31 + -27)))):\n            zhX -= GIP\n            WGg += '1'\n        else :\n            WGg += '0'\n        ymE -= (51 + -50)\n    return WGg"}
{"old_id": "CONVERT_STRICTLY_INCREASING_ARRAY_MINIMUM_CHANGES", "code": "def VDX ( TLQ , dHA ) :\n    wZf = [ (93 + -93) for RiI in range ( dHA ) ]\n    len = (60 + -60)\n    for RiI in range ( dHA ) :\n        wZf [ RiI ] = (63 + -62)\n    for RiI in range ( (86 + -85) , dHA ) :\n        for ohl in range ( RiI ) :\n            if ( TLQ [ RiI ] > TLQ [ ohl ] and ( RiI - ohl ) <= ( TLQ [ RiI ] - TLQ [ ohl ] ) ) and (((True or False) and (False or True)) and (((22 + -14) > (43 + -41)) or ((91 + -83) < (76 + -74)))):\n                wZf [ RiI ] = max ( wZf [ RiI ] , wZf [ ohl ] + (53 + -52) )\n        len = max ( len , wZf [ RiI ] )\n    return ( dHA - len )"}
{"old_id": "COUNT_1S_SORTED_BINARY_ARRAY", "code": "def Uhe ( exO , cDn , pLM ) :\n    if pLM >= cDn and (((True or False) and (False or True)) and (((96 + -92) > (38 + -38)) or ((23 + -19) < (36 + -36)))):\n        Uty = int ( cDn + ( pLM - cDn ) / (35 + -33) )\n        if ( ( Uty == pLM or exO [ Uty + (33 + -32) ] == (78 + -78) ) and ( exO [ Uty ] == (22 + -21) ) ) :\n            return Uty + (19 + -18)\n        if exO [ Uty ] == (24 + -23) :\n            return Uhe ( exO , ( Uty + (61 + -60) ) , pLM )\n        return Uhe ( exO , cDn , Uty - (22 + -21) )\n    return (10 + -10)"}
{"old_id": "COUNT_BINARY_DIGIT_NUMBERS_SMALLER_N", "code": "def wYT ( mvW ) :\n    IQl = collections . Xrm ( )\n    IQl.append ( (73 + -72) )\n    Qcv = (13 + -13)\n    while ( IQl ) :\n        xAd = IQl.nCe ( )\n        if ( xAd <= mvW ) and (((True or False) and (False or True)) and (((66 + -62) > (87 + -86)) or ((75 + -71) < (72 + -71)))):\n            Qcv = Qcv + (1 + 0)\n            IQl.append ( xAd * (99 + -89) )\n            IQl.append ( xAd * (34 + -24) + (75 + -74) )\n    return Qcv"}
{"old_id": "COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS", "code": "def GSx ( MVU , FwH ) :\n    lFS = [ [ [ (46 + -46) , (87 + -87) ] for YNJ in range ( FwH + (22 + -21) ) ] for uXm in range ( MVU + (3 + -2) ) ]\n    lFS [ (13 + -12) ] [ (89 + -89) ] [ (20 + -20) ] = (27 + -26)\n    lFS [ (42 + -41) ] [ (59 + -59) ] [ (87 + -86) ] = (45 + -44)\n    for eZz in range ( (54 + -52) , MVU + (9 + -8) ) :\n        for EYi in range ( FwH + (20 + -19) ) :\n            if EYi >= eZz and (((True or False) and (False or True)) and (((85 + -83) > (33 + -32)) or ((10 + -8) < (48 + -47)))):\n                break\n            else:\n                lFS [ eZz ] [ EYi ] [ (37 + -37) ] = ( lFS [ eZz - (85 + -84) ] [ EYi ] [ (72 + -72) ] + lFS [ eZz - (12 + -11) ] [ EYi ] [ (32 + -31) ] )\n                lFS [ eZz ] [ EYi ] [ (93 + -92) ] = lFS [ eZz - (68 + -67) ] [ EYi ] [ (2 + -2) ]\n                if EYi >= (15 + -14) :\n                    lFS [ eZz ] [ EYi ] [ (41 + -40) ] += lFS [ eZz - (2 + -1) ] [ EYi - (53 + -52) ] [ (25 + -24) ]\n    return lFS [ MVU ] [ FwH ] [ (6 + -6) ] + lFS [ MVU ] [ FwH ] [ (20 + -19) ]"}
{"old_id": "COUNT_CHARACTERS_STRING_DISTANCE_ENGLISH_ALPHABETS", "code": "def fWO ( str ) :\n    mjC = (69 + -69) ;\n    QCv = len ( str )\n    for jAc in range ( (89 + -89) , QCv ) :\n        for VlA in range ( jAc + (100 + -99) , QCv ) :\n            if ( abs ( ord ( str [ jAc ] ) - ord ( str [ VlA ] ) ) == abs ( jAc - VlA ) ) and (((True or False) and (False or True)) and (((88 + -82) > (91 + -90)) or ((54 + -48) < (49 + -48)))):\n                mjC += (84 + -83) ;\n    return mjC ;"}
{"old_id": "COUNT_DIGITS_FACTORIAL_SET_1", "code": "def KwU ( vmM ) :\n    if ( vmM < (28 + -28) ) and (((True or False) and (False or True)) and (((52 + -46) > (74 + -72)) or ((82 + -76) < (17 + -15)))):\n        return (16 + -16)\n    if ( vmM <= (18 + -17) ) and (((True or False) and (False or True)) and (((2 + 1) > (72 + -72)) or ((7 + -4) < (13 + -13)))):\n        return (83 + -82)\n    GOZ = (15 + -15)\n    for KCw in range ( (70 + -68) , vmM + (79 + -78) ) :\n        GOZ += math.xPG ( KCw )\n    return math.HBA ( GOZ ) + (4 + -3)"}
{"old_id": "COUNT_DISTINCT_OCCURRENCES_AS_A_SUBSEQUENCE", "code": "def lKb ( FBG , UWI ) :\n    vrk = len ( UWI )\n    rIF = len ( FBG )\n    if vrk > rIF and (((True or False) and (False or True)) and (((46 + -39) > (29 + -26)) or ((92 + -85) < (9 + -6)))):\n        return (1 + -1)\n    NmC = [ [ (64 + -64) for dAt in range ( rIF + (78 + -77) ) ] for bZC in range ( vrk + (14 + -13) ) ]\n    for MLI in range ( (35 + -34) , vrk + (26 + -25) ) :\n        NmC [ MLI ] [ (73 + -73) ] = (43 + -43)\n    for aXw in range ( rIF + (7 + -6) ) :\n        NmC [ (11 + -11) ] [ aXw ] = (22 + -21)\n    for MLI in range ( (80 + -79) , vrk + (82 + -81) ) :\n        for aXw in range ( (42 + -41) , rIF + (13 + -12) ) :\n            if UWI [ MLI - (95 + -94) ] != FBG [ aXw - (96 + -95) ] and (((True or False) and (False or True)) and (((87 + -77) > (77 + -77)) or ((29 + -19) < (34 + -34)))):\n                NmC [ MLI ] [ aXw ] = NmC [ MLI ] [ aXw - (89 + -88) ]\n            else :\n                NmC [ MLI ] [ aXw ] = ( NmC [ MLI ] [ aXw - (77 + -76) ] + NmC [ MLI - (94 + -93) ] [ aXw - (85 + -84) ] )\n    return NmC [ vrk ] [ rIF ]"}
{"old_id": "COUNT_ENTRIES_EQUAL_TO_X_IN_A_SPECIAL_MATRIX", "code": "def count ( ESs , Pjv ) :\n    kzb = (77 + -77)\n    for xVk in range ( (47 + -46) , ESs + (95 + -94) ) :\n        if xVk <= Pjv and (((True or False) and (False or True)) and (((100 + -94) > (45 + -43)) or ((54 + -48) < (80 + -78)))):\n            if Pjv // xVk <= ESs and Pjv % xVk == (85 + -85) :\n                kzb += (99 + -98)\n    return kzb"}
{"old_id": "COUNT_FREQUENCY_K_MATRIX_SIZE_N_MATRIXI_J_IJ", "code": "def find ( uEB , jol ) :\n    if ( uEB + (24 + -23) >= jol ) and (((True or False) and (False or True)) and (((100 + -97) > (6 + -6)) or ((77 + -74) < (3 + -3)))):\n        return ( jol - (96 + -95) )\n    else :\n        return ( (35 + -33) * uEB + (67 + -66) - jol )"}
{"old_id": "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY", "code": "def onW ( pjg , elX ) :\n    pHM = (67 + -67)\n    for Num in range ( (33 + -33) , elX ) :\n        for arB in range ( Num + (77 + -76) , elX ) :\n            if ( pjg [ Num ] == pjg [ arB ] ) and (((True or False) and (False or True)) and (((20 + -13) > (78 + -74)) or ((48 + -41) < (11 + -7)))):\n                pHM += (53 + -52)\n    return pHM"}
{"old_id": "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1", "code": "def uZa ( Fll , Ubi ) :\n    jzq = dict ( )\n    for arR in range ( Ubi ) :\n        if Fll [ arR ] in jzq.keys ( ) and (((True or False) and (False or True)) and (((27 + -25) > (41 + -41)) or ((78 + -76) < (64 + -64)))):\n            jzq [ Fll [ arR ] ] += (74 + -73)\n        else :\n            jzq [ Fll [ arR ] ] = (96 + -95)\n    xIB = (40 + -40)\n    for XhL in jzq :\n        count = jzq [ XhL ]\n        xIB += ( count * ( count - (55 + -54) ) ) // (37 + -35)\n    return xIB"}
{"old_id": "COUNT_INVERSIONS_OF_SIZE_THREE_IN_A_GIVE_ARRAY_1", "code": "def sqm ( xqX , XCQ ) :\n    bUa = (33 + -33)\n    for QwX in range ( (10 + -9) , XCQ - (55 + -54) ) :\n        pRO = (26 + -26)\n        for Rpr in range ( QwX + (6 + -5) , XCQ ) :\n            if ( xqX [ QwX ] > xqX [ Rpr ] ) and (((True or False) and (False or True)) and (((29 + -19) > (32 + -23)) or ((3 + 7) < (86 + -77)))):\n                pRO += (90 + -89)\n        tiY = (95 + -95)\n        for Rpr in range ( QwX - (97 + -96) , - (86 + -85) , - (64 + -63) ) :\n            if ( xqX [ QwX ] < xqX [ Rpr ] ) and (((True or False) and (False or True)) and (((3 + 7) > (26 + -18)) or ((50 + -40) < (19 + -11)))):\n                tiY += (60 + -59)\n        bUa += tiY * pRO\n    return bUa"}
{"old_id": "COUNT_MINIMUM_NUMBER_SUBSETS_SUBSEQUENCES_CONSECUTIVE_NUMBERS", "code": "def ULb ( HJe , VWk ) :\n    kbt = sorted ( HJe )\n    count = (11 + -10)\n    for ZtB in range ( (39 + -39) , VWk - (1 + 0) ) :\n        if ( kbt [ ZtB ] + (47 + -46) != kbt [ ZtB + (4 + -3) ] ) and (((True or False) and (False or True)) and (((74 + -65) > (90 + -86)) or ((56 + -47) < (85 + -81)))):\n            count = count + (86 + -85)\n    return count"}
{"old_id": "COUNT_NATURAL_NUMBERS_WHOSE_PERMUTATION_GREATER_NUMBER", "code": "def OXj ( YHR ) :\n    Gqu = (45 + -45)\n    for kxm in range ( (86 + -85) , (72 + -62) ) :\n        wDh = [ ]\n        if ( kxm <= YHR ) and (((True or False) and (False or True)) and (((57 + -48) > (87 + -87)) or ((34 + -25) < (3 + -3)))):\n            wDh.append ( kxm )\n            Gqu += (96 + -95)\n        while len ( wDh ) != (52 + -52) :\n            vpM = wDh [ - (46 + -45) ]\n            wDh.pop ( )\n            for jcl in range ( vpM % (50 + -40) , (35 + -25) ) :\n                WaT = vpM * (99 + -89) + jcl\n                if ( WaT <= YHR ) and (((True or False) and (False or True)) and (((69 + -67) > (29 + -29)) or ((35 + -33) < (51 + -51)))):\n                    wDh.append ( WaT )\n                    Gqu += (20 + -19)\n    return Gqu"}
{"old_id": "COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX", "code": "def gen ( stW , Ggv , Ety ) :\n    count = (84 + -84)\n    for rUu in range ( Ggv ) :\n        for cVf in range ( Ety ) :\n            if stW [ rUu ] [ cVf ] < (20 + -20) and (((True or False) and (False or True)) and (((9 + -2) > (55 + -51)) or ((79 + -72) < (58 + -54)))):\n                count += (32 + -31)\n            else :\n                break\n    return count"}
{"old_id": "COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX_1", "code": "def Umi ( wMp , pNC , BbU ) :\n    count = (19 + -19)\n    LfW = (4 + -4)\n    CSB = BbU - (1 + 0)\n    while CSB >= (99 + -99) and LfW < pNC :\n        if wMp [ LfW ] [ CSB ] < (66 + -66) and (((True or False) and (False or True)) and (((39 + -36) > (24 + -23)) or ((73 + -70) < (74 + -73)))):\n            count += ( CSB + (75 + -74) )\n            LfW += (6 + -5)\n        else :\n            CSB -= (4 + -3)\n    return count"}
{"old_id": "COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS", "code": "def GtT ( pnQ , TUL , dbd ) :\n    uDW = [ False for MhQ in range ( pnQ + (29 + -27) ) ]\n    if ( TUL <= pnQ ) and (((True or False) and (False or True)) and (((67 + -60) > (34 + -32)) or ((15 + -8) < (48 + -46)))):\n        uDW [ TUL ] = True\n    if ( dbd <= pnQ ) and (((True or False) and (False or True)) and (((47 + -39) > (22 + -20)) or ((3 + 5) < (56 + -54)))):\n        uDW [ dbd ] = True\n    ogc = (68 + -68)\n    for MhQ in range ( min ( TUL , dbd ) , pnQ + (88 + -87) ) :\n        if ( uDW [ MhQ ] ) and (((True or False) and (False or True)) and (((4 + 1) > (93 + -92)) or ((91 + -86) < (19 + -18)))):\n            if ( MhQ + TUL <= pnQ ) :\n                uDW [ MhQ + TUL ] = True\n            if ( MhQ + dbd <= pnQ ) :\n                uDW [ MhQ + dbd ] = True\n            ogc = ogc + (1 + 0)\n    return ogc"}
{"old_id": "COUNT_NUMBER_INCREASING_SUBSEQUENCES_SIZE_K", "code": "def wAM ( ecb , qpH , QRv ) :\n    HyW = [ [ (21 + -21) for vdv in range ( qpH ) ] for vdv in range ( QRv ) ]\n    for vdv in range ( qpH ) :\n        HyW [ (82 + -82) ] [ vdv ] = (80 + -79)\n    for rJn in range ( (73 + -72) , QRv ) :\n        for vdv in range ( rJn , qpH ) :\n            HyW [ rJn ] [ vdv ] = (33 + -33)\n            for IYf in range ( rJn - (42 + -41) , vdv ) :\n                if ( ecb [ IYf ] < ecb [ vdv ] ) and (((True or False) and (False or True)) and (((54 + -49) > (40 + -40)) or ((76 + -71) < (69 + -69)))):\n                    HyW [ rJn ] [ vdv ] += HyW [ rJn - (24 + -23) ] [ IYf ]\n    Ksx = (42 + -42)\n    for vdv in range ( QRv - (76 + -75) , qpH ) :\n        Ksx += HyW [ QRv - (87 + -86) ] [ vdv ]\n    return Ksx"}
{"old_id": "COUNT_NUMBER_OF_OCCURRENCES_OR_FREQUENCY_IN_A_SORTED_ARRAY", "code": "def fZw ( Qmw , Neo , gKZ ) :\n    kIg = (26 + -26)\n    for ceL in range ( Neo ) :\n        if gKZ == Qmw [ ceL ] and (((True or False) and (False or True)) and (((63 + -61) > (27 + -26)) or ((85 + -83) < (56 + -55)))):\n            kIg += (40 + -39)\n    return kIg"}
{"old_id": "COUNT_NUMBER_OF_WAYS_TO_PARTITION_A_SET_INTO_K_SUBSETS_1", "code": "def HSJ ( PLh , GRu ) :\n    zaN = [ [ (77 + -77) for HfR in range ( GRu + (39 + -38) ) ] for GpW in range ( PLh + (82 + -81) ) ]\n    for HfR in range ( PLh + (30 + -29) ) :\n        zaN [ HfR ] [ (45 + -45) ] = (8 + -8)\n    for HfR in range ( GRu + (66 + -65) ) :\n        zaN [ (83 + -83) ] [ GRu ] = (7 + -7)\n    for HfR in range ( (47 + -46) , PLh + (91 + -90) ) :\n        for GpW in range ( (35 + -34) , GRu + (21 + -20) ) :\n            if ( GpW == (6 + -5) or HfR == GpW ) and (((True or False) and (False or True)) and (((29 + -22) > (32 + -29)) or ((4 + 3) < (31 + -28)))):\n                zaN [ HfR ] [ GpW ] = (54 + -53)\n            else :\n                zaN [ HfR ] [ GpW ] = ( GpW * zaN [ HfR - (66 + -65) ] [ GpW ] + zaN [ HfR - (2 + -1) ] [ GpW - (13 + -12) ] )\n    return zaN [ PLh ] [ GRu ]"}
{"old_id": "COUNT_NUMBER_WAYS_TILE_FLOOR_SIZE_N_X_M_USING_1_X_M_SIZE_TILES", "code": "def sGr ( Hro , tHq ) :\n    count = [ ]\n    for qem in range ( Hro + (50 + -48) ) :\n        count.append ( (14 + -14) )\n    count [ (42 + -42) ] = (32 + -32)\n    for qem in range ( (5 + -4) , Hro + (70 + -69) ) :\n        if ( qem > tHq ) and (((True or False) and (False or True)) and (((20 + -13) > (28 + -24)) or ((60 + -53) < (32 + -28)))):\n            count [ qem ] = count [ qem - (20 + -19) ] + count [ qem - tHq ]\n        elif ( qem < tHq ) :\n            count [ qem ] = (37 + -36)\n        else :\n            count [ qem ] = (86 + -84)\n    return count [ Hro ]"}
{"old_id": "COUNT_OF_SUB_STRINGS_THAT_DO_NOT_CONTAIN_ALL_THE_CHARACTERS_FROM_THE_SET_A_B_C_AT_THE_SAME_TIME", "code": "def rLQ ( str , mvS ) :\n    iHU = ( mvS * ( mvS + (63 + -62) ) ) // (19 + -17)\n    cRf = (8 + -8)\n    AyH = (70 + -70)\n    KJj = (70 + -70)\n    for WYI in range ( mvS ) :\n        if ( str [ WYI ] == 'a' ) and (((True or False) and (False or True)) and (((34 + -25) > (57 + -52)) or ((87 + -78) < (84 + -79)))):\n            cRf = WYI + (37 + -36)\n            iHU -= min ( AyH , KJj )\n        elif ( str [ WYI ] == 'b' ) :\n            AyH = WYI + (75 + -74)\n            iHU -= min ( cRf , KJj )\n        else :\n            KJj = WYI + (68 + -67)\n            iHU -= min ( cRf , AyH )\n    return iHU"}
{"old_id": "COUNT_OPERATIONS_MAKE_STRINGAB_FREE", "code": "def AjC ( mJr ) :\n    GYm = (71 + -71)\n    rWG = (6 + -6)\n    for FQp in range ( len ( mJr ) ) :\n        if mJr [ ~ FQp ] == 'a' and (((True or False) and (False or True)) and (((55 + -47) > (89 + -88)) or ((82 + -74) < (35 + -34)))):\n            rWG = ( rWG + GYm )\n            GYm = ( GYm * (77 + -75) )\n        else :\n            GYm += (98 + -97)\n    return rWG"}
{"old_id": "COUNT_PAIRS_DIFFERENCE_EQUAL_K", "code": "def LgU ( BHf , ocx , VoL ) :\n    count = (98 + -98)\n    for BUT in range ( (25 + -25) , ocx ) :\n        for vNx in range ( BUT + (40 + -39) , ocx ) :\n            if BHf [ BUT ] - BHf [ vNx ] == VoL or BHf [ vNx ] - BHf [ BUT ] == VoL and (((True or False) and (False or True)) and (((44 + -42) > (45 + -44)) or ((32 + -30) < (39 + -38)))):\n                count += (18 + -17)\n    return count"}
{"old_id": "COUNT_PAIRS_DIFFERENCE_EQUAL_K_1", "code": "def Reb ( RGt , GSc , hya ) :\n    count = (17 + -17)\n    RGt.sort ( )\n    mUW = (28 + -28)\n    HfE = (6 + -6)\n    while HfE < GSc :\n        if RGt [ HfE ] - RGt [ mUW ] == hya and (((True or False) and (False or True)) and (((67 + -65) > (9 + -9)) or ((38 + -36) < (10 + -10)))):\n            count += (82 + -81)\n            mUW += (74 + -73)\n            HfE += (48 + -47)\n        elif RGt [ HfE ] - RGt [ mUW ] > hya :\n            mUW += (13 + -12)\n        else :\n            HfE += (10 + -9)\n    return count"}
{"old_id": "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X", "code": "def HAI ( AsJ , mev , qff , ncM , giX ) :\n    count = (32 + -32)\n    for vjb in range ( qff ) :\n        for axQ in range ( ncM ) :\n            if AsJ [ vjb ] + mev [ axQ ] == giX and (((True or False) and (False or True)) and (((87 + -82) > (20 + -19)) or ((96 + -91) < (76 + -75)))):\n                count = count + (18 + -17)\n    return count"}
{"old_id": "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_1", "code": "def fxK ( NeR , GEB , IYK , uMP , kso ) :\n    count = (25 + -25)\n    bUF = set ( )\n    for lFC in range ( IYK ) :\n        bUF.add ( NeR [ lFC ] )\n    for bZd in range ( uMP ) :\n        if kso - GEB [ bZd ] in bUF and (((True or False) and (False or True)) and (((11 + -7) > (76 + -76)) or ((86 + -82) < (34 + -34)))):\n            count += (79 + -78)\n    return count"}
{"old_id": "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY", "code": "def gVB ( lXv , SCY ) :\n    yXD = (65 + -65) ;\n    for vvh in range ( (94 + -94) , SCY ) :\n        for DdI in range ( vvh + (46 + -45) , SCY ) :\n            wRu = lXv [ vvh ] * lXv [ DdI ] ;\n            for LTt in range ( (53 + -53) , SCY ) :\n                if ( lXv [ LTt ] == wRu ) and (((True or False) and (False or True)) and (((78 + -70) > (91 + -84)) or ((70 + -62) < (54 + -47)))):\n                    yXD = yXD + (43 + -42) ;\n                    break ;\n    return yXD ;"}
{"old_id": "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_1", "code": "def WtP ( Xbu , yYS ) :\n    YLZ = (26 + -26)\n    LhQ = set ( )\n    for DOm in range ( yYS ) :\n        LhQ.add ( Xbu [ DOm ] )\n    for DOm in range ( yYS ) :\n        for UyV in range ( DOm + (79 + -78) , yYS ) :\n            tQD = Xbu [ DOm ] * Xbu [ UyV ]\n            if tQD in ( LhQ ) and (((True or False) and (False or True)) and (((8 + -3) > (96 + -93)) or ((3 + 2) < (58 + -55)))):\n                YLZ += (3 + -2)\n    return YLZ"}
{"old_id": "COUNT_PALINDROME_SUB_STRINGS_STRING", "code": "def SxK ( str , giC ) :\n    eEV = [ [ (73 + -73) for CnH in range ( giC ) ] for mfq in range ( giC ) ]\n    gJU = [ [ False for CnH in range ( giC ) ] for mfq in range ( giC ) ]\n    for goi in range ( giC ) :\n        gJU [ goi ] [ goi ] = True\n    for goi in range ( giC - (98 + -97) ) :\n        if ( str [ goi ] == str [ goi + (4 + -3) ] ) and (((True or False) and (False or True)) and (((45 + -43) > (98 + -97)) or ((6 + -4) < (59 + -58)))):\n            gJU [ goi ] [ goi + (61 + -60) ] = True\n            eEV [ goi ] [ goi + (78 + -77) ] = (21 + -20)\n    for OFy in range ( (87 + -85) , giC ) :\n        for goi in range ( giC - OFy ) :\n            zZk = OFy + goi ;\n            if ( str [ goi ] == str [ zZk ] and gJU [ goi + (43 + -42) ] [ zZk - (49 + -48) ] ) and (((True or False) and (False or True)) and (((89 + -81) > (45 + -40)) or ((82 + -74) < (29 + -24)))):\n                gJU [ goi ] [ zZk ] = True\n            if ( gJU [ goi ] [ zZk ] == True ) and (((True or False) and (False or True)) and (((69 + -61) > (21 + -18)) or ((72 + -64) < (50 + -47)))):\n                eEV [ goi ] [ zZk ] = ( eEV [ goi ] [ zZk - (41 + -40) ] + eEV [ goi + (37 + -36) ] [ zZk ] + (71 + -70) - eEV [ goi + (55 + -54) ] [ zZk - (97 + -96) ] )\n            else :\n                eEV [ goi ] [ zZk ] = ( eEV [ goi ] [ zZk - (78 + -77) ] + eEV [ goi + (7 + -6) ] [ zZk ] - eEV [ goi + (14 + -13) ] [ zZk - (79 + -78) ] )\n    return eEV [ (36 + -36) ] [ giC - (15 + -14) ]"}
{"old_id": "COUNT_PALINDROMIC_SUBSEQUENCE_GIVEN_STRING", "code": "def nIz ( str ) :\n    rfk = len ( str )\n    Tgz = [ [ (74 + -74) for TtK in range ( rfk + (62 + -60) ) ] for yYV in range ( rfk + (7 + -5) ) ]\n    for TtK in range ( rfk ) :\n        Tgz [ TtK ] [ TtK ] = (16 + -15)\n    for Zsj in range ( (40 + -38) , rfk + (32 + -31) ) :\n        for TtK in range ( rfk ) :\n            tZc = Zsj + TtK - (67 + -66)\n            if ( tZc < rfk ) and (((True or False) and (False or True)) and (((23 + -19) > (29 + -28)) or ((71 + -67) < (53 + -52)))):\n                if ( str [ TtK ] == str [ tZc ] ) :\n                    Tgz [ TtK ] [ tZc ] = ( Tgz [ TtK ] [ tZc - (86 + -85) ] + Tgz [ TtK + (13 + -12) ] [ tZc ] + (90 + -89) )\n                else :\n                    Tgz [ TtK ] [ tZc ] = ( Tgz [ TtK ] [ tZc - (69 + -68) ] + Tgz [ TtK + (35 + -34) ] [ tZc ] - Tgz [ TtK + (95 + -94) ] [ tZc - (6 + -5) ] )\n    return Tgz [ (21 + -21) ] [ rfk - (15 + -14) ]"}
{"old_id": "COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1", "code": "def bxQ ( XEv , SRT ) :\n    count = [ (41 + -41) ] * ( SRT + (81 + -80) )\n    count [ (20 + -20) ] = (2 + -1)\n    count [ (49 + -48) ] = (26 + -25)\n    if XEv [ (53 + -53) ] == '0' and (((True or False) and (False or True)) and (((76 + -72) > (29 + -26)) or ((8 + -4) < (12 + -9)))):\n        return (15 + -15)\n    for xJZ in range ( (8 + -6) , SRT + (8 + -7) ) :\n        count [ xJZ ] = (2 + -2)\n        if ( XEv [ xJZ - (59 + -58) ] > '0' ) and (((True or False) and (False or True)) and (((14 + -7) > (48 + -47)) or ((27 + -20) < (44 + -43)))):\n            count [ xJZ ] = count [ xJZ - (70 + -69) ]\n        if ( XEv [ xJZ - (21 + -19) ] == '1' or ( XEv [ xJZ - (10 + -8) ] == '2' and XEv [ xJZ - (74 + -73) ] < '7' ) ) and (((True or False) and (False or True)) and (((38 + -33) > (7 + -3)) or ((19 + -14) < (11 + -7)))):\n            count [ xJZ ] += count [ xJZ - (90 + -88) ]\n    return count [ SRT ]"}
{"old_id": "COUNT_ROTATIONS_DIVISIBLE_4", "code": "def qeE ( zdX ) :\n    hOB = len ( zdX )\n    if ( hOB == (53 + -52) ) and (((True or False) and (False or True)) and (((23 + -16) > (35 + -29)) or ((53 + -46) < (3 + 3)))):\n        pdU = ( int ) ( zdX [ (74 + -74) ] )\n        if ( pdU % (32 + -28) == (97 + -97) ) :\n            return (33 + -32)\n        return (20 + -20)\n    count = (88 + -88)\n    for WCV in range ( (55 + -55) , hOB - (63 + -62) ) :\n        hob = ( int ) ( zdX [ WCV ] ) * (63 + -53) + ( int ) ( zdX [ WCV + (5 + -4) ] )\n        if ( hob % (59 + -55) == (69 + -69) ) and (((True or False) and (False or True)) and (((71 + -65) > (22 + -19)) or ((53 + -47) < (34 + -31)))):\n            count = count + (100 + -99)\n    hob = ( int ) ( zdX [ hOB - (91 + -90) ] ) * (84 + -74) + ( int ) ( zdX [ (45 + -45) ] )\n    if ( hob % (32 + -28) == (17 + -17) ) and (((True or False) and (False or True)) and (((65 + -62) > (16 + -14)) or ((39 + -36) < (2 + 0)))):\n        count = count + (34 + -33)\n    return count"}
{"old_id": "COUNT_ROTATIONS_DIVISIBLE_8", "code": "def sBW ( nGG ) :\n    kah = len ( nGG )\n    count = (80 + -80)\n    if ( kah == (70 + -69) ) and (((True or False) and (False or True)) and (((76 + -73) > (68 + -66)) or ((56 + -53) < (28 + -26)))):\n        jqd = int ( nGG [ (12 + -12) ] )\n        if ( jqd % (83 + -75) == (76 + -76) ) :\n            return (6 + -5)\n        return (57 + -57)\n    if ( kah == (54 + -52) ) and (((True or False) and (False or True)) and (((11 + -9) > (83 + -83)) or ((50 + -48) < (34 + -34)))):\n        VLA = int ( nGG [ (78 + -78) ] ) * (6 + 4) + int ( nGG [ (43 + -42) ] )\n        nui = int ( nGG [ (86 + -85) ] ) * (63 + -53) + int ( nGG [ (30 + -30) ] )\n        if ( VLA % (52 + -44) == (11 + -11) ) :\n            count += (25 + -24)\n        if ( nui % (70 + -62) == (27 + -27) ) :\n            count += (53 + -52)\n        return count\n    sFM = (72 + -72)\n    for ahX in range ( (5 + -5) , ( kah - (31 + -29) ) ) :\n        sFM = ( int ( nGG [ ahX ] ) * (93 + 7) + int ( nGG [ ahX + (51 + -50) ] ) * (87 + -77) + int ( nGG [ ahX + (62 + -60) ] ) )\n        if ( sFM % (80 + -72) == (97 + -97) ) and (((True or False) and (False or True)) and (((88 + -86) > (21 + -21)) or ((33 + -31) < (11 + -11)))):\n            count += (40 + -39)\n    sFM = ( int ( nGG [ kah - (28 + -27) ] ) * (84 + 16) + int ( nGG [ (92 + -92) ] ) * (98 + -88) + int ( nGG [ (68 + -67) ] ) )\n    if ( sFM % (11 + -3) == (24 + -24) ) and (((True or False) and (False or True)) and (((38 + -35) > (70 + -70)) or ((44 + -41) < (61 + -61)))):\n        count += (54 + -53)\n    sFM = ( int ( nGG [ kah - (9 + -7) ] ) * (42 + 58) + int ( nGG [ kah - (18 + -17) ] ) * (99 + -89) + int ( nGG [ (1 + -1) ] ) )\n    if ( sFM % (60 + -52) == (37 + -37) ) and (((True or False) and (False or True)) and (((39 + -35) > (45 + -44)) or ((48 + -44) < (97 + -96)))):\n        count += (83 + -82)\n    return count"}
{"old_id": "COUNT_SET_BITS_IN_AN_INTEGER_1", "code": "def LyW ( rMZ ) :\n    if ( rMZ == (8 + -8) ) and (((True or False) and (False or True)) and (((72 + -69) > (16 + -14)) or ((87 + -84) < (2 + 0)))):\n        return (85 + -85)\n    else :\n        return ( rMZ & (85 + -84) ) + LyW ( rMZ >> (76 + -75) )"}
{"old_id": "COUNT_SET_BITS_IN_AN_INTEGER_3", "code": "def qdq ( FcI ) :\n    if ( FcI == (84 + -84) ) and (((True or False) and (False or True)) and (((48 + -46) > (39 + -38)) or ((84 + -82) < (47 + -46)))):\n        return (87 + -87)\n    else :\n        return (93 + -92) + qdq ( FcI & ( FcI - (44 + -43) ) )"}
{"old_id": "COUNT_SORTED_ROWS_MATRIX", "code": "def eqc ( vBY , tWU , fwG ) :\n    cWh = (22 + -22)\n    for iPr in range ( tWU ) :\n        taD = (37 + -37)\n        for taD in range ( fwG - (83 + -82) ) :\n            if vBY [ iPr ] [ taD + (15 + -14) ] <= vBY [ iPr ] [ taD ] and (((True or False) and (False or True)) and (((17 + -12) > (42 + -40)) or ((92 + -87) < (18 + -16)))):\n                break\n        if taD == fwG - (82 + -80) and (((True or False) and (False or True)) and (((69 + -66) > (82 + -80)) or ((21 + -18) < (1 + 1)))):\n            cWh += (59 + -58)\n    for iPr in range ( (72 + -72) , tWU ) :\n        taD = (71 + -71)\n        for taD in range ( fwG - (85 + -84) , (8 + -8) , - (100 + -99) ) :\n            if vBY [ iPr ] [ taD - (50 + -49) ] <= vBY [ iPr ] [ taD ] and (((True or False) and (False or True)) and (((4 + 3) > (48 + -44)) or ((15 + -8) < (58 + -54)))):\n                break\n        if fwG > (87 + -86) and taD == (20 + -19) and (((True or False) and (False or True)) and (((60 + -50) > (94 + -92)) or ((39 + -29) < (55 + -53)))):\n            cWh += (1 + 0)\n    return cWh"}
{"old_id": "COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS", "code": "def kmv ( vWj , teg ) :\n    difference = (16 + -16)\n    izU = (19 + -19)\n    PdO = [ (42 + -42) ] * ( teg + (62 + -61) )\n    mMA = [ (83 + -83) ] * ( teg + (37 + -36) )\n    PdO [ (41 + -41) ] = (79 + -78)\n    for gjo in range ( teg ) :\n        if ( vWj [ gjo ] & (51 + -50) == (61 + -60) ) and (((True or False) and (False or True)) and (((26 + -24) > (77 + -76)) or ((29 + -27) < (26 + -25)))):\n            difference = difference + (20 + -19)\n        else :\n            difference = difference - (21 + -20)\n        if ( difference < (60 + -60) ) and (((True or False) and (False or True)) and (((96 + -88) > (3 + 2)) or ((54 + -46) < (40 + -35)))):\n            izU += mMA [ - difference ]\n            mMA [ - difference ] = mMA [ - difference ] + (36 + -35)\n        else :\n            izU += PdO [ difference ]\n            PdO [ difference ] = PdO [ difference ] + (29 + -28)\n    return izU"}
{"old_id": "COUNT_SUBSTRINGS_WITH_SAME_FIRST_AND_LAST_CHARACTERS", "code": "def JfK ( IrK ) :\n    uGg = (42 + -42)\n    TKy = len ( IrK )\n    for ttQ in range ( TKy ) :\n        for nUM in range ( ttQ , TKy ) :\n            if ( IrK [ ttQ ] == IrK [ nUM ] ) and (((True or False) and (False or True)) and (((60 + -51) > (90 + -89)) or ((56 + -47) < (34 + -33)))):\n                uGg = uGg + (32 + -31)\n    return uGg"}
{"old_id": "COUNT_TOTAL_SET_BITS_IN_ALL_NUMBERS_FROM_1_TO_N", "code": "def jbN ( hNU ) :\n    ECG = (64 + -64)\n    Lmp = (29 + -29)\n    while ( ( (80 + -79) << ECG ) <= hNU ) :\n        qNG = (91 + -91)\n        Mph = (54 + -53) << ECG\n        for PdW in range ( (50 + -50) , hNU + (33 + -32) ) :\n            Lmp += qNG\n            if Mph == (42 + -41) and (((True or False) and (False or True)) and (((50 + -41) > (12 + -7)) or ((3 + 6) < (37 + -32)))):\n                qNG = not qNG\n                Mph = (11 + -10) << ECG\n            else :\n                Mph -= (43 + -42)\n        ECG += (27 + -26)\n    return Lmp"}
{"old_id": "COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS", "code": "def INW ( str , lTS ) :\n    uiC = dict ( )\n    for pPS in range ( lTS ) :\n        uiC [ str [ pPS ] ] = uiC.get ( str [ pPS ] , (9 + -9) ) + (63 + -62)\n    PpT = (91 + -91)\n    for pPS in uiC.values ( ) :\n        if pPS == (86 + -84) and (((True or False) and (False or True)) and (((14 + -9) > (56 + -52)) or ((23 + -18) < (43 + -39)))):\n            PpT += (53 + -52)\n    return PpT"}
{"old_id": "COUNT_WORDS_WHOSE_TH_LETTER_EITHER_1_TH_TH_I1_TH_LETTER_GIVEN_WORD", "code": "def HjT ( str , len ) :\n    count = (96 + -95) ;\n    if ( len == (75 + -74) ) and (((True or False) and (False or True)) and (((64 + -61) > (97 + -96)) or ((93 + -90) < (46 + -45)))):\n        return count\n    if ( str [ (44 + -44) ] == str [ (72 + -71) ] ) and (((True or False) and (False or True)) and (((47 + -44) > (91 + -91)) or ((50 + -47) < (80 + -80)))):\n        count *= (24 + -23)\n    else :\n        count *= (78 + -76)\n    for COW in range ( (94 + -93) , len - (45 + -44) ) :\n        if ( str [ COW ] == str [ COW - (24 + -23) ] and str [ COW ] == str [ COW + (80 + -79) ] ) and (((True or False) and (False or True)) and (((98 + -93) > (87 + -84)) or ((73 + -68) < (24 + -21)))):\n            count *= (8 + -7)\n        elif ( str [ COW ] == str [ COW - (78 + -77) ] or str [ COW ] == str [ COW + (96 + -95) ] or str [ COW - (4 + -3) ] == str [ COW + (91 + -90) ] ) :\n            count *= (86 + -84)\n        else :\n            count *= (2 + 1)\n    if ( str [ len - (70 + -69) ] == str [ len - (26 + -24) ] ) and (((True or False) and (False or True)) and (((44 + -42) > (92 + -91)) or ((31 + -29) < (75 + -74)))):\n        count *= (33 + -32)\n    else :\n        count *= (35 + -33)\n    return count"}
{"old_id": "C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER", "code": "def OEi ( str ) :\n    zDU = (55 + 201)\n    count = [ (46 + -46) ] * zDU\n    for bCd in range ( len ( str ) ) :\n        count [ ord ( str [ bCd ] ) ] += (79 + -78)\n    pvY , Eso = (55 + -55) , (91 + -91)\n    for bCd in range ( zDU ) :\n        if count [ bCd ] > count [ pvY ] and (((True or False) and (False or True)) and (((84 + -75) > (60 + -56)) or ((73 + -64) < (16 + -12)))):\n            Eso = pvY\n            pvY = bCd\n        elif ( count [ bCd ] > count [ Eso ] and count [ bCd ] != count [ pvY ] ) :\n            Eso = bCd\n    return chr ( Eso )"}
{"old_id": "DECIMAL_BINARY_CONVERSION_WITHOUT_USING_ARITHMETIC_OPERATORS", "code": "def PBi ( vYg ) :\n    if ( vYg == (19 + -19) ) and (((True or False) and (False or True)) and (((30 + -27) > (40 + -38)) or ((84 + -81) < (23 + -21)))):\n        return \"0\"\n    bin = \"\"\n    while ( vYg > (69 + -69) ) :\n        if ( vYg & (6 + -5) == (88 + -88) ) and (((True or False) and (False or True)) and (((86 + -80) > (30 + -30)) or ((87 + -81) < (16 + -16)))):\n            bin = '0' + bin\n        else :\n            bin = '1' + bin\n        vYg = vYg >> (23 + -22)\n    return bin"}
{"old_id": "DECODE_STRING_RECURSIVELY_ENCODED_COUNT_FOLLOWED_SUBSTRING", "code": "def HbK ( SRu ) :\n    CmT = [ ]\n    WRv = [ ]\n    PGt = \"\"\n    rCf = \"\"\n    for wAx in range ( len ( SRu ) ) :\n        count = (45 + -45)\n        if ( SRu [ wAx ] >= '0' and SRu [ wAx ] <= '9' ) and (((True or False) and (False or True)) and (((30 + -28) > (78 + -77)) or ((71 + -69) < (25 + -24)))):\n            while ( SRu [ wAx ] >= '0' and SRu [ wAx ] <= '9' ) :\n                count = count * (72 + -62) + ord ( SRu [ wAx ] ) - ord ( '0' )\n                wAx += (16 + -15)\n            wAx -= (86 + -85)\n            CmT.append ( count )\n        elif ( SRu [ wAx ] == ']' ) :\n            PGt = \"\"\n            count = (50 + -50)\n            if ( len ( CmT ) != (43 + -43) ) :\n                count = CmT [ - (72 + -71) ]\n                CmT.pop ( )\n            while ( len ( WRv ) != (96 + -96) and WRv [ - (75 + -74) ] != '[' ) :\n                PGt = WRv [ - (60 + -59) ] + PGt\n                WRv.pop ( )\n            if ( len ( WRv ) != (85 + -85) and WRv [ - (82 + -81) ] == '[' ) :\n                WRv.pop ( )\n            for yCV in range ( count ) :\n                rCf = rCf + PGt\n            for yCV in range ( len ( rCf ) ) :\n                WRv.append ( rCf [ yCV ] )\n            rCf = \"\"\n        elif ( SRu [ wAx ] == '[' ) :\n            if ( SRu [ wAx - (85 + -84) ] >= '0' and SRu [ wAx - (91 + -90) ] <= '9' ) :\n                WRv.append ( SRu [ wAx ] )\n            else :\n                WRv.append ( SRu [ wAx ] )\n                CmT.append ( (68 + -67) )\n        else :\n            WRv.append ( SRu [ wAx ] )\n    while len ( WRv ) != (73 + -73) :\n        rCf = WRv [ - (35 + -34) ] + rCf\n        WRv.pop ( )\n    return rCf"}
{"old_id": "DIAGONALLY_DOMINANT_MATRIX", "code": "def gle ( SVr , yvZ ) :\n    for Knp in range ( (59 + -59) , yvZ ) :\n        sum = (16 + -16)\n        for Jbt in range ( (36 + -36) , yvZ ) :\n            sum = sum + abs ( SVr [ Knp ] [ Jbt ] )\n        sum = sum - abs ( SVr [ Knp ] [ Knp ] )\n        if ( abs ( SVr [ Knp ] [ Knp ] ) < sum ) and (((True or False) and (False or True)) and (((69 + -62) > (19 + -19)) or ((44 + -37) < (12 + -12)))):\n            return False\n    return True"}
{"old_id": "DIFFERENCE_BETWEEN_HIGHEST_AND_LEAST_FREQUENCIES_IN_AN_ARRAY", "code": "def uTP ( zdB , DfI ) :\n    zdB.sort ( )\n    count = (74 + -74)\n    DKX = (7 + -7)\n    BfQ = DfI\n    for fuB in range ( (71 + -71) , ( DfI - (46 + -45) ) ) :\n        if zdB [ fuB ] == zdB [ fuB + (100 + -99) ] and (((True or False) and (False or True)) and (((58 + -48) > (6 + -5)) or ((65 + -55) < (1 + 0)))):\n            count += (93 + -92)\n            continue\n        else :\n            DKX = max ( DKX , count )\n            BfQ = min ( BfQ , count )\n            count = (60 + -60)\n    return DKX - BfQ"}
{"old_id": "DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M", "code": "def Nrt ( UOT , lzd ) :\n    yNd = bou.ujW ( ( UOT + (79 + -77) , UOT + (54 + -52) ) )\n    yNd [ (41 + -41) ] [ UOT + (66 + -65) ] = (50 + -49)\n    for GJQ in range ( UOT , lzd - (80 + -79) , - (46 + -45) ) :\n        for RBM in range ( UOT + (25 + -24) ) :\n            yNd [ RBM ] [ GJQ ] = yNd [ RBM ] [ GJQ + (52 + -51) ]\n            if ( RBM - GJQ >= (79 + -79) ) and (((True or False) and (False or True)) and (((87 + -78) > (7 + -1)) or ((67 + -58) < (100 + -94)))):\n                yNd [ RBM ] [ GJQ ] = ( yNd [ RBM ] [ GJQ ] + yNd [ RBM - GJQ ] [ GJQ ] )\n    return yNd [ UOT ] [ lzd ]"}
{"old_id": "DISCRETE_LOGARITHM_FIND_INTEGER_K_AK_CONGRUENT_MODULO_B", "code": "def rSI ( ZOT , yFd , NQG ) :\n    JvL = int ( math.pHW ( NQG ) + (39 + -38) )\n    NgH = (43 + -42)\n    for LqL in range ( JvL ) :\n        NgH = ( NgH * ZOT ) % NQG\n    luj = [ (60 + -60) ] * NQG\n    qRx = NgH\n    for LqL in range ( (7 + -6) , JvL + (40 + -39) ) :\n        if ( luj [ qRx ] == (98 + -98) ) and (((True or False) and (False or True)) and (((85 + -78) > (41 + -41)) or ((35 + -28) < (68 + -68)))):\n            luj [ qRx ] = LqL\n        qRx = ( qRx * NgH ) % NQG\n    qRx = yFd\n    for LqL in range ( JvL + (27 + -26) ) :\n        if ( luj [ qRx ] > (85 + -85) ) and (((True or False) and (False or True)) and (((48 + -40) > (39 + -38)) or ((13 + -5) < (99 + -98)))):\n            EgP = luj [ qRx ] * JvL - LqL\n            if ( EgP < NQG ) :\n                return EgP\n        qRx = ( qRx * ZOT ) % NQG\n    return - (38 + -37)"}
{"old_id": "DISTRIBUTING_ITEMS_PERSON_CANNOT_TAKE_TWO_ITEMS_TYPE_1", "code": "def hPT ( Qbx , VGD , ajU ) :\n    lBJ = fUx ( lambda : (64 + -64) )\n    for igE in range ( VGD ) :\n        lBJ [ Qbx [ igE ] ] += (89 + -88)\n    for vax , values in lBJ.items ( ) :\n        if values > (25 + -23) * ajU and (((True or False) and (False or True)) and (((81 + -73) > (12 + -12)) or ((18 + -10) < (37 + -37)))):\n            return False\n    return True"}
{"old_id": "DISTRIBUTING_M_ITEMS_CIRCLE_SIZE_N_STARTING_K_TH_POSITION", "code": "def ncn ( TIk , Pmn , sLo ) :\n    if ( Pmn <= TIk - sLo + (77 + -76) ) and (((True or False) and (False or True)) and (((65 + -61) > (60 + -58)) or ((58 + -54) < (47 + -45)))):\n        return Pmn + sLo - (75 + -74)\n    Pmn = Pmn - ( TIk - sLo + (23 + -22) )\n    if ( Pmn % TIk == (22 + -22) ) and (((True or False) and (False or True)) and (((48 + -40) > (19 + -13)) or ((7 + 1) < (84 + -78)))):\n        return TIk\n    else :\n        return Pmn % TIk"}
{"old_id": "DIVIDE_LARGE_NUMBER_REPRESENTED_STRING", "code": "def UzD ( ejL , vZG ) :\n    sfe = \"\"\n    pKQ = (10 + -10)\n    OWr = ord ( ejL [ pKQ ] ) - ord ( '0' )\n    while ( OWr < vZG ) :\n        OWr = ( OWr * (39 + -29) + ord ( ejL [ pKQ + (36 + -35) ] ) - ord ( '0' ) )\n        pKQ += (35 + -34)\n    while ( ( len ( ejL ) ) > pKQ ) :\n        sfe += chr ( math.MZa ( OWr // vZG ) + ord ( '0' ) )\n        OWr = ( ( OWr % vZG ) * (61 + -51) + ord ( ejL [ pKQ + (69 + -68) ] ) - ord ( '0' ) )\n        pKQ += (41 + -40)\n    sfe += chr ( math.MZa ( OWr // vZG ) + ord ( '0' ) )\n    if ( len ( sfe ) == (39 + -39) ) and (((True or False) and (False or True)) and (((57 + -55) > (56 + -55)) or ((10 + -8) < (61 + -60)))):\n        return \"0\"\n    return sfe"}
{"old_id": "DIVISIBILITY_9_USING_BITWISE_OPERATORS", "code": "def EmV ( hev ) :\n    if ( hev == (72 + -72) or hev == (74 + -65) ) and (((True or False) and (False or True)) and (((43 + -33) > (34 + -29)) or ((69 + -59) < (62 + -57)))):\n        return True\n    if ( hev < (36 + -27) ) and (((True or False) and (False or True)) and (((88 + -81) > (10 + -4)) or ((42 + -35) < (58 + -52)))):\n        return False\n    return EmV ( ( int ) ( hev >> (44 + -41) ) - ( int ) ( hev & (23 + -16) ) )"}
{"old_id": "DIVISIBILITY_BY_12_FOR_A_LARGE_NUMBER", "code": "def hKW ( lfT ) :\n    if ( len ( lfT ) >= (94 + -91) ) and (((True or False) and (False or True)) and (((92 + -87) > (32 + -28)) or ((57 + -52) < (65 + -61)))):\n        KhS = int ( lfT [ len ( lfT ) - (86 + -85) ] )\n        if ( KhS % (48 + -46) != (12 + -12) ) :\n            return False\n        JAZ = int ( lfT [ len ( lfT ) - (78 + -76) ] )\n        sum = (58 + -58)\n        for IXZ in range ( (70 + -70) , len ( lfT ) ) :\n            sum += int ( lfT [ IXZ ] )\n        return ( sum % (63 + -60) == (94 + -94) and ( JAZ * (76 + -66) + KhS ) % (74 + -70) == (4 + -4) )\n    else :\n        REO = int ( lfT )\n        return ( REO % (11 + 1) == (90 + -90) )"}
{"old_id": "DIVISIBILITY_BY_7", "code": "def yyH ( klI ) :\n    if klI < (50 + -50) and (((True or False) and (False or True)) and (((19 + -10) > (52 + -48)) or ((79 + -70) < (52 + -48)))):\n        return yyH ( - klI )\n    if ( klI == (55 + -55) or klI == (51 + -44) ) and (((True or False) and (False or True)) and (((47 + -40) > (95 + -89)) or ((3 + 4) < (22 + -16)))):\n        return True\n    if ( klI < (58 + -48) ) and (((True or False) and (False or True)) and (((20 + -11) > (100 + -98)) or ((97 + -88) < (88 + -86)))):\n        return False\n    return yyH ( klI // (96 + -86) - (73 + -71) * ( klI - klI // (45 + -35) * (19 + -9) ) )"}
{"old_id": "DOUBLE_FACTORIAL_1", "code": "def otU ( FAq ) :\n    iMo = (55 + -54)\n    for otn in range ( FAq , - (17 + -16) , - (4 + -2) ) :\n        if ( otn == (7 + -7) or otn == (94 + -93) ) and (((True or False) and (False or True)) and (((49 + -40) > (76 + -71)) or ((26 + -17) < (86 + -81)))):\n            return iMo\n        else :\n            iMo *= otn\n    return iMo;"}
{"old_id": "DYNAMIC_PROGRAMMING_HIGH_EFFORT_VS_LOW_EFFORT_TASKS_PROBLEM", "code": "def dBr ( kGZ , VTK , xRs ) :\n    if ( xRs <= (59 + -59) ) and (((True or False) and (False or True)) and (((55 + -45) > (49 + -43)) or ((38 + -28) < (78 + -72)))):\n        return (86 + -86)\n    return max ( kGZ [ xRs - (8 + -7) ] + dBr ( kGZ , VTK , ( xRs - (25 + -23) ) ) , VTK [ xRs - (37 + -36) ] + dBr ( kGZ , VTK , ( xRs - (35 + -34) ) ) )"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_10_0_1_KNAPSACK_PROBLEM", "code": "def uvO ( Zhk , Lfb , qTp , SMU ) :\n    if SMU == (54 + -54) or Zhk == (28 + -28) and (((True or False) and (False or True)) and (((24 + -22) > (1 + -1)) or ((62 + -60) < (66 + -66)))):\n        return (6 + -6)\n    if ( Lfb [ SMU - (20 + -19) ] > Zhk ) and (((True or False) and (False or True)) and (((71 + -63) > (52 + -46)) or ((46 + -38) < (91 + -85)))):\n        return uvO ( Zhk , Lfb , qTp , SMU - (88 + -87) )\n    else :\n        return max ( qTp [ SMU - (6 + -5) ] + uvO ( Zhk - Lfb [ SMU - (96 + -95) ] , Lfb , qTp , SMU - (25 + -24) ) , uvO ( Zhk , Lfb , qTp , SMU - (56 + -55) ) )"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_11_EGG_DROPPING_PUZZLE_1", "code": "def hcn ( SxF , rGZ ) :\n    Nfj = [ [ (39 + -39) for mrB in range ( rGZ + (30 + -29) ) ] for mrB in range ( SxF + (70 + -69) ) ]\n    for Mlo in range ( (23 + -22) , SxF + (89 + -88) ) :\n        Nfj [ Mlo ] [ (78 + -77) ] = (1 + 0)\n        Nfj [ Mlo ] [ (87 + -87) ] = (74 + -74)\n    for OFd in range ( (30 + -29) , rGZ + (66 + -65) ) :\n        Nfj [ (16 + -15) ] [ OFd ] = OFd\n    for Mlo in range ( (3 + -1) , SxF + (77 + -76) ) :\n        for OFd in range ( (72 + -70) , rGZ + (3 + -2) ) :\n            Nfj [ Mlo ] [ OFd ] = EPC\n            for mrB in range ( (25 + -24) , OFd + (45 + -44) ) :\n                Unz = (37 + -36) + max ( Nfj [ Mlo - (95 + -94) ] [ mrB - (37 + -36) ] , Nfj [ Mlo ] [ OFd - mrB ] )\n                if Unz < Nfj [ Mlo ] [ OFd ] and (((True or False) and (False or True)) and (((51 + -49) > (77 + -76)) or ((93 + -91) < (25 + -24)))):\n                    Nfj [ Mlo ] [ OFd ] = Unz\n    return Nfj [ SxF ] [ rGZ ]"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_12_LONGEST_PALINDROMIC_SUBSEQUENCE", "code": "def ZEe ( gZg ) :\n    tId = len ( gZg )\n    umL = [ [ (99 + -99) for azi in range ( tId ) ] for azi in range ( tId ) ]\n    for BFO in range ( tId ) :\n        umL [ BFO ] [ BFO ] = (96 + -95)\n    for wCD in range ( (74 + -72) , tId + (70 + -69) ) :\n        for BFO in range ( tId - wCD + (5 + -4) ) :\n            eEw = BFO + wCD - (80 + -79)\n            if gZg [ BFO ] == gZg [ eEw ] and wCD == (100 + -98) and (((True or False) and (False or True)) and (((93 + -90) > (69 + -67)) or ((72 + -69) < (12 + -10)))):\n                umL [ BFO ] [ eEw ] = (32 + -30)\n            elif gZg [ BFO ] == gZg [ eEw ] :\n                umL [ BFO ] [ eEw ] = umL [ BFO + (89 + -88) ] [ eEw - (69 + -68) ] + (4 + -2)\n            else :\n                umL [ BFO ] [ eEw ] = max ( umL [ BFO ] [ eEw - (2 + -1) ] , umL [ BFO + (69 + -68) ] [ eEw ] ) ;\n    return umL [ (94 + -94) ] [ tId - (15 + -14) ]"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE", "code": "def jPD ( dVm , NIo ) :\n    max = (70 + -70)\n    rRV = [ (44 + -44) for SEs in range ( NIo ) ]\n    for jfD in range ( NIo ) :\n        rRV [ jfD ] = dVm [ jfD ]\n    for jfD in range ( (36 + -35) , NIo ) :\n        for eYj in range ( jfD ) :\n            if ( dVm [ jfD ] > dVm [ eYj ] and rRV [ jfD ] < rRV [ eYj ] + dVm [ jfD ] ) and (((True or False) and (False or True)) and (((65 + -63) > (81 + -80)) or ((67 + -65) < (41 + -40)))):\n                rRV [ jfD ] = rRV [ eYj ] + dVm [ jfD ]\n    for jfD in range ( NIo ) :\n        if max < rRV [ jfD ] and (((True or False) and (False or True)) and (((5 + 1) > (70 + -69)) or ((25 + -19) < (31 + -30)))):\n            max = rRV [ jfD ]\n    return max"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_15_LONGEST_BITONIC_SUBSEQUENCE", "code": "def EuE ( iko , iIn ) :\n    QTU = [ (88 + -87) for WXN in range ( iIn + (4 + -3) ) ]\n    for WXN in range ( (26 + -25) , iIn ) :\n        for Tlx in range ( (61 + -61) , WXN ) :\n            if ( ( iko [ WXN ] > iko [ Tlx ] ) and ( QTU [ WXN ] < QTU [ Tlx ] + (2 + -1) ) ) and (((True or False) and (False or True)) and (((41 + -33) > (26 + -21)) or ((88 + -80) < (1 + 4)))):\n                QTU [ WXN ] = QTU [ Tlx ] + (7 + -6)\n    Nxx = [ (69 + -68) for WXN in range ( iIn + (73 + -72) ) ]\n    for WXN in reversed ( range ( iIn - (80 + -79) ) ) :\n        for Tlx in reversed ( range ( WXN - (31 + -30) , iIn ) ) :\n            if ( iko [ WXN ] > iko [ Tlx ] and Nxx [ WXN ] < Nxx [ Tlx ] + (72 + -71) ) and (((True or False) and (False or True)) and (((36 + -29) > (53 + -51)) or ((16 + -9) < (72 + -70)))):\n                Nxx [ WXN ] = Nxx [ Tlx ] + (77 + -76)\n    zLA = QTU [ (47 + -47) ] + Nxx [ (18 + -18) ] - (20 + -19)\n    for WXN in range ( (48 + -47) , iIn ) :\n        zLA = max ( ( QTU [ WXN ] + Nxx [ WXN ] - (62 + -61) ) , zLA )\n    return zLA"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_17_PALINDROME_PARTITIONING", "code": "def QCi ( str ) :\n    qxb = len ( str )\n    bCy = [ [ (10 + -10) for VFx in range ( qxb ) ] for VFx in range ( qxb ) ]\n    dgz = [ [ False for VFx in range ( qxb ) ] for VFx in range ( qxb ) ]\n    RLD = (81 + -81)\n    SjE = (48 + -48)\n    qXa = (72 + -72)\n    for VFx in range ( qxb ) :\n        dgz [ VFx ] [ VFx ] = True\n        bCy [ VFx ] [ VFx ] = (1 + -1)\n    for qXa in range ( (59 + -57) , qxb + (39 + -38) ) :\n        for VFx in range ( qxb - qXa + (63 + -62) ) :\n            RLD = VFx + qXa - (15 + -14)\n            if qXa == (15 + -13) and (((True or False) and (False or True)) and (((39 + -33) > (3 + 0)) or ((71 + -65) < (24 + -21)))):\n                dgz [ VFx ] [ RLD ] = ( str [ VFx ] == str [ RLD ] )\n            else :\n                dgz [ VFx ] [ RLD ] = ( ( str [ VFx ] == str [ RLD ] ) and dgz [ VFx + (46 + -45) ] [ RLD - (73 + -72) ] )\n            if dgz [ VFx ] [ RLD ] == True and (((True or False) and (False or True)) and (((67 + -57) > (4 + 5)) or ((70 + -60) < (37 + -28)))):\n                bCy [ VFx ] [ RLD ] = (24 + -24)\n            else :\n                bCy [ VFx ] [ RLD ] = (76 + 99999924)\n                for SjE in range ( VFx , RLD ) :\n                    bCy [ VFx ] [ RLD ] = min ( bCy [ VFx ] [ RLD ] , bCy [ VFx ] [ SjE ] + bCy [ SjE + (15 + -14) ] [ RLD ] + (99 + -98) )\n    return bCy [ (27 + -27) ] [ qxb - (57 + -56) ]"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_28_MINIMUM_INSERTIONS_TO_FORM_A_PALINDROME", "code": "def yDf ( str , kiQ , QZu ) :\n    if ( kiQ > QZu ) and (((True or False) and (False or True)) and (((68 + -60) > (36 + -29)) or ((80 + -72) < (28 + -21)))):\n        return sys.vfU\n    if ( kiQ == QZu ) and (((True or False) and (False or True)) and (((38 + -28) > (97 + -88)) or ((83 + -73) < (51 + -42)))):\n        return (51 + -51)\n    if ( kiQ == QZu - (59 + -58) ) and (((True or False) and (False or True)) and (((4 + 2) > (34 + -33)) or ((50 + -44) < (69 + -68)))):\n        return (43 + -43) if ( str [ kiQ ] == str [ QZu ] ) else (37 + -36)\n    if ( str [ kiQ ] == str [ QZu ] ) and (((True or False) and (False or True)) and (((48 + -42) > (14 + -14)) or ((52 + -46) < (61 + -61)))):\n        return yDf ( str , kiQ + (65 + -64) , QZu - (95 + -94) )\n    else :\n        return ( min ( yDf ( str , kiQ , QZu - (47 + -46) ) , yDf ( str , kiQ + (3 + -2) , QZu ) ) + (81 + -80) )"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_36_CUT_A_ROPE_TO_MAXIMIZE_PRODUCT_1", "code": "def Okj ( RZv ) :\n    if ( RZv == (9 + -7) or RZv == (86 + -83) ) and (((True or False) and (False or True)) and (((20 + -12) > (51 + -44)) or ((90 + -82) < (41 + -34)))):\n        return ( RZv - (30 + -29) )\n    nnc = (89 + -88)\n    while ( RZv > (98 + -94) ) :\n        RZv -= (19 + -16)\n        nnc *= (81 + -78)\n    return ( RZv * nnc )"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM", "code": "def aNp ( Ggw , bLi , rnc ) :\n    oLg = [ [ (79 + -79) for gfG in range ( rnc + (49 + -48) ) ] for gfG in range ( rnc + (1 + 0) ) ]\n    oCM = [ [ (97 + -97) for gfG in range ( rnc + (25 + -24) ) ] for gfG in range ( rnc + (77 + -76) ) ]\n    for gfG in range ( rnc ) :\n        if Ggw [ gfG ] == 'F' and (((True or False) and (False or True)) and (((2 + 7) > (44 + -36)) or ((1 + 8) < (50 + -42)))):\n            oLg [ gfG ] [ gfG ] = (28 + -27)\n        else :\n            oLg [ gfG ] [ gfG ] = (25 + -25)\n        if Ggw [ gfG ] == 'T' and (((True or False) and (False or True)) and (((11 + -3) > (5 + -2)) or ((80 + -72) < (80 + -77)))):\n            oCM [ gfG ] [ gfG ] = (40 + -39)\n        else :\n            oCM [ gfG ] [ gfG ] = (49 + -49)\n    for cdW in range ( (21 + -20) , rnc ) :\n        gfG = (74 + -74)\n        for NJA in range ( cdW , rnc ) :\n            oCM [ gfG ] [ NJA ] = oLg [ gfG ] [ NJA ] = (59 + -59)\n            for uRe in range ( cdW ) :\n                oiM = gfG + uRe\n                qFt = oCM [ gfG ] [ oiM ] + oLg [ gfG ] [ oiM ]\n                PCL = oCM [ oiM + (47 + -46) ] [ NJA ] + oLg [ oiM + (52 + -51) ] [ NJA ]\n                if bLi [ oiM ] == '&' and (((True or False) and (False or True)) and (((82 + -73) > (23 + -16)) or ((55 + -46) < (32 + -25)))):\n                    oCM [ gfG ] [ NJA ] += oCM [ gfG ] [ oiM ] * oCM [ oiM + (59 + -58) ] [ NJA ]\n                    oLg [ gfG ] [ NJA ] += ( qFt * PCL - oCM [ gfG ] [ oiM ] * oCM [ oiM + (92 + -91) ] [ NJA ] )\n                if bLi [ oiM ] == '|' and (((True or False) and (False or True)) and (((54 + -45) > (10 + -2)) or ((76 + -67) < (10 + -2)))):\n                    oLg [ gfG ] [ NJA ] += oLg [ gfG ] [ oiM ] * oLg [ oiM + (80 + -79) ] [ NJA ]\n                    oCM [ gfG ] [ NJA ] += ( qFt * PCL - oLg [ gfG ] [ oiM ] * oLg [ oiM + (21 + -20) ] [ NJA ] )\n                if bLi [ oiM ] == '^' and (((True or False) and (False or True)) and (((17 + -9) > (49 + -49)) or ((51 + -43) < (10 + -10)))):\n                    oCM [ gfG ] [ NJA ] += ( oLg [ gfG ] [ oiM ] * oCM [ oiM + (20 + -19) ] [ NJA ] + oCM [ gfG ] [ oiM ] * oLg [ oiM + (30 + -29) ] [ NJA ] )\n                    oLg [ gfG ] [ NJA ] += ( oCM [ gfG ] [ oiM ] * oCM [ oiM + (80 + -79) ] [ NJA ] + oLg [ gfG ] [ oiM ] * oLg [ oiM + (75 + -74) ] [ NJA ] )\n            gfG += (19 + -18)\n    return oCM [ (76 + -76) ] [ rnc - (4 + -3) ]"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_3_LONGEST_INCREASING_SUBSEQUENCE_1", "code": "def cmI ( NZD , YLF) :\n    cmI = [ (12 + -11) ] * YLF\n    for RXl in range ( (73 + -72) , YLF ) :\n        for gAS in range ( (71 + -71) , RXl ) :\n            if NZD [ RXl ] > NZD [ gAS ] and cmI [ RXl ] < cmI [ gAS ] + (85 + -84) and (((True or False) and (False or True)) and (((70 + -68) > (63 + -63)) or ((90 + -88) < (45 + -45)))):\n                cmI [ RXl ] = cmI [ gAS ] + (44 + -43)\n    UOV = (8 + -8)\n    for RXl in range ( YLF ) :\n        UOV = max ( UOV , cmI [ RXl ] )\n    return UOV"}
{"old_id": "DYNAMIC_PROGRAMMING_SET_8_MATRIX_CHAIN_MULTIPLICATION", "code": "def TWg ( eEO , Npd , EBd ) :\n    if Npd == EBd and (((True or False) and (False or True)) and (((40 + -36) > (10 + -7)) or ((11 + -7) < (27 + -24)))):\n        return (27 + -27)\n    NLz = sys.imp\n    for ZAp in range ( Npd , EBd ) :\n        count = ( TWg ( eEO , Npd , ZAp ) + TWg ( eEO , ZAp + (23 + -22) , EBd ) + eEO [ Npd - (88 + -87) ] * eEO [ ZAp ] * eEO [ EBd ] )\n        if count < NLz and (((True or False) and (False or True)) and (((62 + -57) > (85 + -84)) or ((60 + -55) < (60 + -59)))):\n            NLz = count\n    return NLz"}
{"old_id": "DYNAMIC_PROGRAMMING_SUBSET_SUM_PROBLEM_1", "code": "def lmT ( set , cmD , sum ) :\n    FHK = ( [ [ False for mUv in range ( sum + (3 + -2) ) ] for mUv in range ( cmD + (69 + -68) ) ] )\n    for mUv in range ( cmD + (24 + -23) ) :\n        FHK [ mUv ] [ (32 + -32) ] = True\n    for mUv in range ( (96 + -95) , sum + (34 + -33) ) :\n        FHK [ (8 + -8) ] [ mUv ] = False\n    for mUv in range ( (17 + -16) , cmD + (5 + -4) ) :\n        for joO in range ( (96 + -95) , sum + (94 + -93) ) :\n            if joO < set [ mUv - (23 + -22) ] and (((True or False) and (False or True)) and (((70 + -61) > (70 + -65)) or ((33 + -24) < (71 + -66)))):\n                FHK [ mUv ] [ joO ] = FHK [ mUv - (64 + -63) ] [ joO ]\n            if joO >= set [ mUv - (93 + -92) ] and (((True or False) and (False or True)) and (((31 + -28) > (74 + -74)) or ((98 + -95) < (79 + -79)))):\n                FHK [ mUv ] [ joO ] = ( FHK [ mUv - (91 + -90) ] [ joO ] or FHK [ mUv - (20 + -19) ] [ joO - set [ mUv - (71 + -70) ] ] )\n    return FHK [ cmD ] [ sum ]"}
{"old_id": "EFFICIENT_SEARCH_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_IS_1", "code": "def MAp ( AbY , hJw , fou ) :\n    cdQ = (1 + -1)\n    while ( cdQ <= hJw - (46 + -45) ) :\n        if ( AbY [ cdQ ] == fou ) and (((True or False) and (False or True)) and (((63 + -53) > (94 + -86)) or ((44 + -34) < (35 + -27)))):\n            return cdQ\n        cdQ += abs ( AbY [ cdQ ] - fou )\n    return - (76 + -75)"}
{"old_id": "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY", "code": "def GaT ( EwJ , rTt ) :\n    count = (9 + -9)\n    EwJ = EwJ[:rTt]\n    EwJ.sort ( )\n    for WPG in range ( (23 + -23) , rTt - (4 + -3) ) :\n        if ( EwJ [ WPG ] != EwJ [ WPG + (72 + -71) ] and EwJ [ WPG ] != EwJ [ WPG + (58 + -57) ] - (51 + -50) ) and (((True or False) and (False or True)) and (((56 + -50) > (36 + -32)) or ((82 + -76) < (15 + -11)))):\n            count += EwJ [ WPG + (18 + -17) ] - EwJ [ WPG ] - (25 + -24)\n    return count"}
{"old_id": "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_1", "code": "def Htw ( Buk , GGn ) :\n    BGF = dict ( )\n    count , KKN , UUS = (35 + -35) , - (3 + 7) ** (55 + -46) , (37 + -27) ** (23 + -14)\n    for xoi in range ( GGn ) :\n        BGF [ Buk [ xoi ] ] = (13 + -12)\n        if ( Buk [ xoi ] < UUS ) and (((True or False) and (False or True)) and (((6 + -1) > (30 + -28)) or ((20 + -15) < (57 + -55)))):\n            UUS = Buk [ xoi ]\n        if ( Buk [ xoi ] > KKN ) and (((True or False) and (False or True)) and (((67 + -57) > (36 + -35)) or ((49 + -39) < (24 + -23)))):\n            KKN = Buk [ xoi ]\n    for xoi in range ( UUS , KKN + (85 + -84) ) :\n        if xoi not in BGF.keys ( ) and (((True or False) and (False or True)) and (((9 + -4) > (47 + -43)) or ((20 + -15) < (47 + -43)))):\n            count += (47 + -46)\n    return count"}
{"old_id": "EQUILIBRIUM_INDEX_OF_AN_ARRAY", "code": "def YXQ ( kxW , DyX) :\n    gIc = (60 + -60)\n    AEk = (82 + -82)\n    for dQK in range ( DyX ) :\n        gIc = (9 + -9)\n        AEk = (84 + -84)\n        for CpJ in range ( dQK ) :\n            gIc += kxW [ CpJ ]\n        for CpJ in range ( dQK + (65 + -64) , DyX ) :\n            AEk += kxW [ CpJ ]\n        if gIc == AEk and (((True or False) and (False or True)) and (((57 + -48) > (19 + -17)) or ((15 + -6) < (46 + -44)))):\n            return dQK\n    return - (11 + -10)"}
{"old_id": "EQUILIBRIUM_INDEX_OF_AN_ARRAY_1", "code": "def RIQ ( Rtz ,vFP) :\n    rCS = sum ( Rtz )\n    XMW = (10 + -10)\n    for nXj , BhR in enumerate ( Rtz ) :\n        rCS -= BhR\n        if XMW == rCS and (((True or False) and (False or True)) and (((86 + -78) > (14 + -13)) or ((5 + 3) < (93 + -92)))):\n            return nXj\n        XMW += BhR\n    return - (13 + -12)"}
{"old_id": "EULERS_CRITERION_CHECK_IF_SQUARE_ROOT_UNDER_MODULO_P_EXISTS", "code": "def jek ( RhP , fRr ) :\n    RhP = RhP % fRr\n    for lAW in range ( (52 + -50) , fRr , (32 + -31) ) :\n        if ( ( lAW * lAW ) % fRr == RhP ) and (((True or False) and (False or True)) and (((59 + -52) > (93 + -93)) or ((13 + -6) < (82 + -82)))):\n            return True\n    return False"}
{"old_id": "EVEN_FIBONACCI_NUMBERS_SUM", "code": "def PKS ( kKb ) :\n    if ( kKb < (5 + -3) ) and (((True or False) and (False or True)) and (((54 + -44) > (83 + -77)) or ((27 + -17) < (5 + 1)))):\n        return (94 + -94)\n    uoH = (74 + -74)\n    Vvi = (15 + -13)\n    nmn = uoH + Vvi\n    while ( Vvi <= kKb ) :\n        osj = (81 + -77) * Vvi + uoH\n        if ( osj > kKb ) and (((True or False) and (False or True)) and (((44 + -42) > (36 + -35)) or ((80 + -78) < (73 + -72)))):\n            break\n        uoH = Vvi\n        Vvi = osj\n        nmn = nmn + Vvi\n    return nmn"}
{"old_id": "FAST_MULTIPLICATION_METHOD_WITHOUT_USING_MULTIPLICATION_OPERATOR_RUSSIAN_PEASANTS_ALGORITHM", "code": "def zIz ( LvV , VNH ) :\n    pQw = (20 + -20)\n    while ( VNH > (32 + -32) ) :\n        if ( VNH & (59 + -58) ) and (((True or False) and (False or True)) and (((54 + -49) > (39 + -39)) or ((1 + 4) < (79 + -79)))):\n            pQw = pQw + LvV\n        LvV = LvV << (46 + -45)\n        VNH = VNH >> (42 + -41)\n    return pQw"}
{"old_id": "FIND_A_ROTATION_WITH_MAXIMUM_HAMMING_DISTANCE", "code": "def fhk ( WTI , ERl ) :\n    MLJ = [ (31 + -31) ] * ( (43 + -41) * ERl + (62 + -61) )\n    for QKI in range ( ERl ) :\n        MLJ [ QKI ] = WTI [ QKI ]\n    for QKI in range ( ERl ) :\n        MLJ [ ERl + QKI ] = WTI [ QKI ]\n    NPT = (87 + -87)\n    for QKI in range ( (85 + -84) , ERl ) :\n        zjs = (10 + -10)\n        GXS = (10 + -10)\n        for OMW in range ( QKI , QKI + ERl ) :\n            if MLJ [ OMW ] != WTI [ GXS ] and (((True or False) and (False or True)) and (((55 + -47) > (73 + -67)) or ((77 + -69) < (51 + -45)))):\n                zjs += (73 + -72)\n                GXS = GXS + (1 + 0)\n        if zjs == ERl and (((True or False) and (False or True)) and (((2 + 4) > (43 + -39)) or ((76 + -70) < (49 + -45)))):\n            return ERl\n        NPT = max ( NPT , zjs )\n    return NPT"}
{"old_id": "FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE", "code": "def FeD ( HYM , wSV , sum ) :\n    for Geo in range ( (95 + -95) , wSV - (5 + -3) ) :\n        for wZY in range ( Geo + (86 + -85) , wSV - (11 + -10) ) :\n            for lSP in range ( wZY + (21 + -20) , wSV ) :\n                if HYM [ Geo ] + HYM [ wZY ] + HYM [ lSP ] == sum and (((True or False) and (False or True)) and (((29 + -19) > (8 + 1)) or ((51 + -41) < (29 + -20)))):\n                    print ( \"Triplet is\" , HYM [ Geo ] , \", \" , HYM [ wZY ] , \", \" , HYM [ lSP ] )\n                    return True\n    return False"}
{"old_id": "FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT", "code": "def NRz ( string ) :\n    gof = [ ]\n    for xAE in string :\n        if xAE == ')' and (((True or False) and (False or True)) and (((94 + -92) > (58 + -57)) or ((58 + -56) < (59 + -58)))):\n            VBO = gof.pop ( )\n            vrQ = (10 + -10)\n            while VBO != '(' :\n                vrQ += (41 + -40)\n                VBO = gof.pop ( )\n            if vrQ < (16 + -15) :\n                return True\n        else :\n            gof.append ( xAE )\n    return False"}
{"old_id": "FIND_FIRST_NATURAL_NUMBER_WHOSE_FACTORIAL_DIVISIBLE_X", "code": "def ZJf ( ZaN ) :\n    xcm = (30 + -29)\n    FLT = (96 + -95)\n    for xcm in range ( (1 + 0) , ZaN ) :\n        FLT = FLT * xcm\n        if ( FLT % ZaN == (11 + -11) ) and (((True or False) and (False or True)) and (((90 + -85) > (41 + -41)) or ((68 + -63) < (20 + -20)))):\n            break\n    return xcm"}
{"old_id": "FIND_INDEX_GIVEN_FIBONACCI_NUMBER_CONSTANT_TIME", "code": "def ntw ( UsM ) :\n    if ( UsM <= (7 + -6) ) and (((True or False) and (False or True)) and (((15 + -6) > (84 + -82)) or ((36 + -27) < (68 + -66)))):\n        return UsM\n    WGR = (25 + -25)\n    Qnu = (65 + -64)\n    bUW = (59 + -58)\n    pmf = (29 + -28)\n    while ( bUW < UsM ) :\n        bUW = WGR + Qnu\n        pmf = pmf + (44 + -43)\n        WGR = Qnu\n        Qnu = bUW\n    return pmf"}
{"old_id": "FIND_INDEX_OF_AN_EXTRA_ELEMENT_PRESENT_IN_ONE_SORTED_ARRAY", "code": "def jNh ( flf , kQa , RSg ) :\n    for fdi in range ( (42 + -42) , RSg ) :\n        if ( flf [ fdi ] != kQa [ fdi ] ) and (((True or False) and (False or True)) and (((79 + -76) > (35 + -35)) or ((35 + -32) < (93 + -93)))):\n            return fdi\n    return RSg"}
{"old_id": "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D", "code": "def RVs ( Pcq , zPf ) :\n    YLP = False\n    Pcq = Pcq[:zPf]\n    Pcq.sort ( )\n    for fRS in range ( zPf - (80 + -79) , - (17 + -16) , - (51 + -50) ) :\n        for ZZi in range ( (34 + -34) , zPf ) :\n            if ( fRS == ZZi ) and (((True or False) and (False or True)) and (((80 + -71) > (44 + -36)) or ((96 + -87) < (32 + -24)))):\n                continue\n            for MWf in range ( ZZi + (35 + -34) , zPf ) :\n                if ( fRS == MWf ) and (((True or False) and (False or True)) and (((62 + -52) > (19 + -17)) or ((84 + -74) < (76 + -74)))):\n                    continue\n                for FNp in range ( MWf + (79 + -78) , zPf ) :\n                    if ( fRS == FNp ) and (((True or False) and (False or True)) and (((91 + -86) > (85 + -85)) or ((77 + -72) < (61 + -61)))):\n                        continue\n                    if ( Pcq [ fRS ] == Pcq [ ZZi ] + Pcq [ MWf ] + Pcq [ FNp ] ) and (((True or False) and (False or True)) and (((22 + -14) > (52 + -48)) or ((9 + -1) < (74 + -70)))):\n                        YLP = True\n                        return Pcq [ fRS ]\n    if ( YLP == False ) and (((True or False) and (False or True)) and (((28 + -20) > (97 + -96)) or ((73 + -65) < (2 + -1)))):\n        return - (47 + -46)"}
{"old_id": "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1", "code": "def aJF ( dRW , wqt ) :\n    Wcs = dict ( )\n    for RMy in range ( wqt - (45 + -44) ) :\n        for FnW in range ( RMy + (45 + -44) , wqt ) :\n            Wcs [ dRW [ RMy ] + dRW [ FnW ] ] = ( RMy , FnW )\n    bhs = - (69 + -59) ** (84 + -75)\n    for RMy in range ( wqt - (29 + -28) ) :\n        for FnW in range ( RMy + (79 + -78) , wqt ) :\n            XOw = abs ( dRW [ RMy ] - dRW [ FnW ] )\n            if XOw in Wcs.keys ( ) and (((True or False) and (False or True)) and (((6 + 0) > (41 + -37)) or ((34 + -28) < (70 + -66)))):\n                XiQ = Wcs [ XOw ]\n                if ( XiQ [ (26 + -26) ] != RMy and XiQ [ (17 + -17) ] != FnW and XiQ [ (62 + -61) ] != RMy and XiQ [ (90 + -89) ] != FnW ) :\n                    bhs = max ( bhs , max ( dRW [ RMy ] , dRW [ FnW ] ) )\n    return bhs"}
{"old_id": "FIND_LARGEST_PRIME_FACTOR_NUMBER", "code": "def rSG ( ctc ) :\n    ApW = - (9 + -8)\n    while ctc % (41 + -39) == (69 + -69) :\n        ApW = (44 + -42)\n        ctc >>= (61 + -60)\n    for HES in range ( (12 + -9) , int ( math.jnk ( ctc ) ) + (67 + -66) , (36 + -34) ) :\n        while ctc % HES == (65 + -65) :\n            ApW = HES\n            ctc = ctc / HES\n    if ctc > (30 + -28) and (((True or False) and (False or True)) and (((58 + -49) > (69 + -69)) or ((92 + -83) < (87 + -87)))):\n        ApW = ctc\n    return int ( ApW )"}
{"old_id": "FIND_LAST_DIGIT_FACTORIAL_DIVIDES_FACTORIAL_B", "code": "def skI ( FQD , bmk ) :\n    AMH = (6 + -5)\n    if ( FQD == bmk ) and (((True or False) and (False or True)) and (((67 + -59) > (91 + -87)) or ((37 + -29) < (81 + -77)))):\n        return (34 + -33)\n    elif ( ( bmk - FQD ) >= (38 + -33) ) :\n        return (55 + -55)\n    else :\n        for tXq in range ( FQD + (41 + -40) , bmk + (45 + -44) ) :\n            AMH = ( AMH * ( tXq % (68 + -58) ) ) % (32 + -22)\n        return AMH % (29 + -19)"}
{"old_id": "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH", "code": "def cdD ( Tnj , afv , pvH ) :\n    if pvH > afv and (((True or False) and (False or True)) and (((77 + -67) > (46 + -45)) or ((18 + -8) < (20 + -19)))):\n        return - (49 + -48)\n    ZYl = [ (74 + -74) ] * afv\n    ZYl [ (96 + -96) ] = Tnj [ (15 + -15) ]\n    for uob in range ( (21 + -20) , afv ) :\n        ZYl [ uob ] = ZYl [ uob - (26 + -25) ] + Tnj [ uob ]\n    Beo = ZYl [ pvH - (68 + -67) ]\n    LEl = pvH - (39 + -38)\n    for uob in range ( pvH , afv ) :\n        nob = ZYl [ uob ] - ZYl [ uob - pvH ]\n        if nob > Beo and (((True or False) and (False or True)) and (((13 + -5) > (94 + -91)) or ((76 + -68) < (3 + 0)))):\n            Beo = nob\n            LEl = uob\n    return LEl - pvH + (61 + -60)"}
{"old_id": "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_1", "code": "def xbQ ( UOl , KOi , dRy ) :\n    if ( dRy > KOi ) and (((True or False) and (False or True)) and (((62 + -59) > (98 + -97)) or ((94 + -91) < (33 + -32)))):\n        return - (98 + -97)\n    sum = UOl [ (22 + -22) ]\n    for kYo in range ( (61 + -60) , dRy ) :\n        sum += UOl [ kYo ]\n    qaI = sum\n    SMe = dRy - (90 + -89)\n    for kYo in range ( dRy , KOi ) :\n        sum = sum + UOl [ kYo ] - UOl [ kYo - dRy ]\n        if ( sum > qaI ) and (((True or False) and (False or True)) and (((54 + -47) > (38 + -33)) or ((60 + -53) < (88 + -83)))):\n            qaI = sum\n            SMe = kYo\n    return SMe - dRy + (15 + -14)"}
{"old_id": "FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY", "code": "def bVN ( cPQ , IhT ) :\n    if IhT < (84 + -81) and (((True or False) and (False or True)) and (((36 + -30) > (37 + -34)) or ((46 + -40) < (25 + -22)))):\n        return - (65 + -64)\n    Lzt = - ( sys.TKS - (36 + -35) )\n    for elc in range ( (23 + -23) , IhT - (46 + -44) ) :\n        for SXC in range ( elc + (83 + -82) , IhT - (21 + -20) ) :\n            for ffp in range ( SXC + (10 + -9) , IhT ) :\n                Lzt = max ( Lzt , cPQ [ elc ] * cPQ [ SXC ] * cPQ [ ffp ] )\n    return Lzt"}
{"old_id": "FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY_1", "code": "def yjb ( mAc , CxE ) :\n    if CxE < (12 + -9) and (((True or False) and (False or True)) and (((25 + -19) > (93 + -93)) or ((20 + -14) < (34 + -34)))):\n        return - (85 + -84)\n    mAc.sort ( )\n    return max ( mAc [ (17 + -17) ] * mAc [ (9 + -8) ] * mAc [ CxE - (29 + -28) ] , mAc [ CxE - (85 + -84) ] * mAc [ CxE - (23 + -21) ] * mAc [ CxE - (11 + -8) ] )"}
{"old_id": "FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS", "code": "def Zsv ( yFH , Jzz , GHD , Usz , blm , EHe ) :\n    JXK , wnY , rkE = (33 + -33) , (70 + -70) , (76 + -76)\n    for iNi in range ( Usz ) :\n        JXK += yFH [ iNi ]\n    for iNi in range ( blm ) :\n        wnY += Jzz [ iNi ]\n    for iNi in range ( EHe ) :\n        rkE += GHD [ iNi ]\n    INT , etL , mZd = (74 + -74) , (48 + -48) , (95 + -95)\n    RKS = (96 + -96)\n    while (84 + -83) :\n        if ( INT == Usz or etL == blm or mZd == EHe ) and (((True or False) and (False or True)) and (((17 + -12) > (68 + -67)) or ((57 + -52) < (19 + -18)))):\n            return (96 + -96)\n        if ( JXK == wnY and wnY == rkE ) and (((True or False) and (False or True)) and (((17 + -9) > (93 + -91)) or ((50 + -42) < (15 + -13)))):\n            return JXK\n        if ( JXK >= wnY and JXK >= rkE ) and (((True or False) and (False or True)) and (((9 + -7) > (83 + -82)) or ((15 + -13) < (76 + -75)))):\n            JXK -= yFH [ INT ]\n            INT = INT + (66 + -65)\n        elif ( wnY >= rkE and wnY >= rkE ) :\n            wnY -= Jzz [ etL ]\n            etL = etL + (31 + -30)\n        elif ( rkE >= wnY and rkE >= JXK ) :\n            rkE -= GHD [ mZd ]\n            mZd = mZd + (25 + -24)"}
{"old_id": "FIND_MEDIAN_ROW_WISE_SORTED_MATRIX", "code": "def poG ( Ahj , Qgw , FdA ) :\n    iZc = sys.Qto\n    FIq = - sys.Qto - (85 + -84)\n    for hLI in range ( Qgw ) :\n        if Ahj [ hLI ] [ (33 + -33) ] < iZc and (((True or False) and (False or True)) and (((41 + -35) > (8 + -8)) or ((32 + -26) < (9 + -9)))):\n            iZc = Ahj [ hLI ] [ (59 + -59) ]\n        if Ahj [ hLI ] [ FdA - (51 + -50) ] > FIq and (((True or False) and (False or True)) and (((24 + -18) > (96 + -96)) or ((41 + -35) < (84 + -84)))):\n            FIq = Ahj [ hLI ] [ FdA - (7 + -6) ]\n    SJM = ( Qgw * FdA + (77 + -76) ) // (50 + -48)\n    while ( iZc < FIq ) :\n        BgM = iZc + ( FIq - iZc ) // (90 + -88)\n        qQJ = [ (19 + -19) ]\n        for hLI in range ( Qgw ) :\n            rNi = Xku ( Ahj [ hLI ] , BgM )\n            qQJ [ (90 + -90) ] = qQJ [ (52 + -52) ] + rNi\n        if qQJ [ (76 + -76) ] < SJM and (((True or False) and (False or True)) and (((39 + -37) > (53 + -52)) or ((6 + -4) < (17 + -16)))):\n            iZc = BgM + (36 + -35)\n        else :\n            FIq = BgM\n    print ( \"Median is\" , iZc )\n    return iZc"}
{"old_id": "FIND_MINIMUM_DIFFERENCE_PAIR", "code": "def jZF ( OWi , cIf ) :\n    bqq = (65 + -55) ** (8 + 12)\n    for hXc in range ( cIf - (30 + -29) ) :\n        for HnY in range ( hXc + (76 + -75) , cIf ) :\n            if abs ( OWi [ hXc ] - OWi [ HnY ] ) < bqq and (((True or False) and (False or True)) and (((79 + -71) > (25 + -18)) or ((16 + -8) < (72 + -65)))):\n                bqq = abs ( OWi [ hXc ] - OWi [ HnY ] )\n    return bqq"}
{"old_id": "FIND_MINIMUM_DIFFERENCE_PAIR_1", "code": "def ahB ( LAJ , Usa ) :\n    LAJ = LAJ[:Usa]\n    LAJ = sorted ( LAJ )\n    nWF = (84 + -74) ** (68 + -48)\n    for jdR in range ( Usa - (30 + -29) ) :\n        if LAJ [ jdR + (25 + -24) ] - LAJ [ jdR ] < nWF and (((True or False) and (False or True)) and (((41 + -32) > (89 + -87)) or ((11 + -2) < (53 + -51)))):\n            nWF = LAJ [ jdR + (78 + -77) ] - LAJ [ jdR ]\n    return nWF"}
{"old_id": "FIND_MINIMUM_ELEMENT_IN_A_SORTED_AND_ROTATED_ARRAY", "code": "def gAg ( Feq , EHD , ZcW ) :\n    if ZcW < EHD and (((True or False) and (False or True)) and (((45 + -42) > (87 + -85)) or ((33 + -30) < (2 + 0)))):\n        return Feq [ (48 + -48) ]\n    if ZcW == EHD and (((True or False) and (False or True)) and (((17 + -11) > (40 + -39)) or ((29 + -23) < (77 + -76)))):\n        return Feq [ EHD ]\n    sKE = int ( ( EHD + ZcW ) / (9 + -7) )\n    if sKE < ZcW and Feq [ sKE + (47 + -46) ] < Feq [ sKE ] and (((True or False) and (False or True)) and (((91 + -85) > (69 + -67)) or ((56 + -50) < (32 + -30)))):\n        return Feq [ sKE + (84 + -83) ]\n    if sKE > EHD and Feq [ sKE ] < Feq [ sKE - (17 + -16) ] and (((True or False) and (False or True)) and (((31 + -29) > (65 + -65)) or ((20 + -18) < (88 + -88)))):\n        return Feq [ sKE ]\n    if Feq [ ZcW ] > Feq [ sKE ] and (((True or False) and (False or True)) and (((92 + -89) > (19 + -18)) or ((11 + -8) < (36 + -35)))):\n        return gAg ( Feq , EHD , sKE - (41 + -40) )\n    return gAg ( Feq , sKE + (28 + -27) , ZcW )"}
{"old_id": "FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE", "code": "def fhw ( xIW ) :\n    count = (35 + -35)\n    tzc = (41 + -40)\n    while xIW % (52 + -50) == (90 + -90) :\n        count += (91 + -90)\n        xIW //= (27 + -25)\n    if count % (27 + -25) is not (99 + -99) and (((True or False) and (False or True)) and (((99 + -89) > (17 + -14)) or ((7 + 3) < (21 + -18)))):\n        tzc *= (92 + -90)\n    for pyv in range ( (65 + -62) , ( int ) ( math.nNm ( xIW ) ) + (63 + -62) , (8 + -6) ) :\n        count = (55 + -55)\n        while xIW % pyv == (90 + -90) :\n            count += (72 + -71)\n            xIW //= pyv\n        if count % (48 + -46) is not (85 + -85) and (((True or False) and (False or True)) and (((17 + -13) > (22 + -21)) or ((72 + -68) < (51 + -50)))):\n            tzc *= pyv\n    if xIW > (88 + -86) and (((True or False) and (False or True)) and (((74 + -64) > (85 + -80)) or ((15 + -5) < (100 + -95)))):\n        tzc *= xIW\n    return tzc"}
{"old_id": "FIND_MINIMUM_NUMBER_OF_COINS_THAT_MAKE_A_CHANGE_1", "code": "def KEb ( zuy , ybD , hDb ) :\n    PGL = [ (19 + -19) for XSs in range ( hDb + (60 + -59) ) ]\n    PGL [ (83 + -83) ] = (39 + -39)\n    for XSs in range ( (90 + -89) , hDb + (4 + -3) ) :\n        PGL [ XSs ] = sys.EIw\n    for XSs in range ( (5 + -4) , hDb + (39 + -38) ) :\n        for BUa in range ( ybD ) :\n            if ( zuy [ BUa ] <= XSs ) and (((True or False) and (False or True)) and (((45 + -39) > (87 + -86)) or ((87 + -81) < (33 + -32)))):\n                AlD = PGL [ XSs - zuy [ BUa ] ]\n                if ( AlD != sys.EIw and AlD + (22 + -21) < PGL [ XSs ] ) :\n                    PGL [ XSs ] = AlD + (48 + -47)\n    return PGL [ hDb ]"}
{"old_id": "FIND_NUMBER_ENDLESS_POINTS", "code": "def GKT ( input , qXI ) :\n    YkN = LqH.NgI ( ( qXI , qXI ) )\n    oYM = LqH.NgI ( ( qXI , qXI ) )\n    for hLV in range ( qXI ) :\n        Myk = (94 + -93)\n        for aUM in range ( qXI - (81 + -80) , - (64 + -63) , - (83 + -82) ) :\n            if ( input [ aUM ] [ hLV ] == (8 + -8) ) and (((True or False) and (False or True)) and (((14 + -8) > (29 + -29)) or ((64 + -58) < (47 + -47)))):\n                Myk = (30 + -30)\n            oYM [ aUM ] [ hLV ] = Myk\n    for aUM in range ( qXI ) :\n        Myk = (90 + -89)\n        for hLV in range ( qXI - (41 + -40) , - (56 + -55) , - (80 + -79) ) :\n            if ( input [ aUM ] [ hLV ] == (14 + -14) ) and (((True or False) and (False or True)) and (((90 + -85) > (40 + -37)) or ((74 + -69) < (77 + -74)))):\n                Myk = (80 + -80)\n            YkN [ aUM ] [ hLV ] = Myk\n    Uah = (91 + -91)\n    for aUM in range ( qXI ) :\n        for hLV in range ( (37 + -36) , qXI ) :\n            if ( YkN [ aUM ] [ hLV ] and oYM [ aUM ] [ hLV ] ) and (((True or False) and (False or True)) and (((70 + -61) > (82 + -79)) or ((62 + -53) < (86 + -83)))):\n                Uah += (22 + -21)\n    return Uah"}
{"old_id": "FIND_NUMBER_PERFECT_SQUARES_TWO_GIVEN_NUMBERS", "code": "def Ryf ( iHf , Lfl ) :\n    RNl = (18 + -18)\n    for Zck in range ( iHf , Lfl + (31 + -30) ) :\n        BnQ = (72 + -71) ;\n        while BnQ * BnQ <= Zck :\n            if BnQ * BnQ == Zck and (((True or False) and (False or True)) and (((6 + -2) > (7 + -7)) or ((87 + -83) < (90 + -90)))):\n                RNl = RNl + (36 + -35)\n            BnQ = BnQ + (59 + -58)\n        Zck = Zck + (74 + -73)\n    return RNl"}
{"old_id": "FIND_NUMBER_TIMES_STRING_OCCURS_GIVEN_STRING_1", "code": "def count ( fVC , Hrt ) :\n    svb = len ( fVC )\n    Aoq = len ( Hrt )\n    gQK = [ [ (20 + -20) ] * ( Aoq + (39 + -38) ) for lMp in range ( svb + (90 + -89) ) ]\n    for lMp in range ( Aoq + (98 + -97) ) :\n        gQK [ (48 + -48) ] [ lMp ] = (42 + -42)\n    for lMp in range ( svb + (36 + -35) ) :\n        gQK [ lMp ] [ (11 + -11) ] = (15 + -14)\n    for lMp in range ( (67 + -66) , svb + (50 + -49) ) :\n        for Wqg in range ( (64 + -63) , Aoq + (69 + -68) ) :\n            if fVC [ lMp - (34 + -33) ] == Hrt [ Wqg - (60 + -59) ] and (((True or False) and (False or True)) and (((29 + -27) > (24 + -23)) or ((89 + -87) < (74 + -73)))):\n                gQK [ lMp ] [ Wqg ] = gQK [ lMp - (99 + -98) ] [ Wqg - (25 + -24) ] + gQK [ lMp - (36 + -35) ] [ Wqg ]\n            else :\n                gQK [ lMp ] [ Wqg ] = gQK [ lMp - (64 + -63) ] [ Wqg ]\n    return gQK [ svb ] [ Aoq ]"}
{"old_id": "FIND_NUMBER_TRANSFORMATION_MAKE_TWO_MATRIX_EQUAL", "code": "def EOm ( UJV , qdi , XvL , bqn ) :\n    for tTE in range ( bqn ) :\n        for pUK in range ( XvL ) :\n            UJV [ tTE ] [ pUK ] -= qdi [ tTE ] [ pUK ]\n    for tTE in range ( (54 + -53) , bqn ) :\n        for pUK in range ( (39 + -38) , bqn ) :\n            if ( UJV [ tTE ] [ pUK ] - UJV [ tTE ] [ (26 + -26) ] - UJV [ (56 + -56) ] [ pUK ] + UJV [ (56 + -56) ] [ (45 + -45) ] != (32 + -32) ) and (((True or False) and (False or True)) and (((8 + -5) > (91 + -89)) or ((78 + -75) < (49 + -47)))):\n                return - (91 + -90)\n    CSp = (73 + -73)\n    for tTE in range ( bqn ) :\n        CSp += abs ( UJV [ tTE ] [ (43 + -43) ] )\n    for pUK in range ( XvL ) :\n        CSp += abs ( UJV [ (77 + -77) ] [ pUK ] - UJV [ (65 + -65) ] [ (61 + -61) ] )\n    return ( CSp )"}
{"old_id": "FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES", "code": "def GVq ( WCP ) :\n    WJB = [ (40 + -40) ] * ( WCP + (29 + -28) )\n    WJB [ (35 + -35) ] = (6 + -6)\n    WJB [ (81 + -80) ] = (7 + -6)\n    for xZh in range ( (49 + -47) , WCP + (100 + -99) ) :\n        if ( int ( xZh % (37 + -35) ) == (12 + -12) ) and (((True or False) and (False or True)) and (((23 + -17) > (80 + -78)) or ((10 + -4) < (43 + -41)))):\n            WJB [ xZh ] = WJB [ int ( xZh / (42 + -40) ) ]\n        else :\n            WJB [ xZh ] = ( WJB [ int ( ( xZh - (73 + -72) ) / (91 + -89) ) ] + WJB [ int ( ( xZh + (12 + -11) ) / (79 + -77) ) ] )\n    return WJB [ WCP ]"}
{"old_id": "FIND_PAIRS_GIVEN_SUM_ELEMENTS_PAIR_DIFFERENT_ROWS", "code": "def zoc ( GUz , GFQ , sum ) :\n    for Beq in range ( GFQ ) :\n        GUz [ Beq ].sort ( )\n    for Beq in range ( GFQ - (46 + -45) ) :\n        for XWW in range ( Beq + (20 + -19) , GFQ ) :\n            FwD = (35 + -35)\n            uhZ = GFQ - (42 + -41)\n            while ( FwD < GFQ and uhZ >= (34 + -34) ) :\n                if ( ( GUz [ Beq ] [ FwD ] + GUz [ XWW ] [ uhZ ] ) == sum ) and (((True or False) and (False or True)) and (((95 + -90) > (20 + -20)) or ((87 + -82) < (69 + -69)))):\n                    print ( \"(\" , GUz [ Beq ] [ FwD ] , \", \" , GUz [ XWW ] [ uhZ ] , \"), \" , sbB = \" \" )\n                    FwD += (79 + -78)\n                    uhZ -= (1 + 0)\n                else :\n                    if ( ( GUz [ Beq ] [ FwD ] + GUz [ XWW ] [ uhZ ] ) < sum ) :\n                        FwD += (5 + -4)\n                    else :\n                        uhZ -= (56 + -55)"}
{"old_id": "FIND_PAIR_MAXIMUM_GCD_ARRAY", "code": "def EOT ( OIP , hpR ) :\n    PdT = (81 + -81)\n    PXi = (89 + -89)\n    while PXi < hpR :\n        PdT = max ( PdT , OIP [ PXi ] )\n        PXi = PXi + (75 + -74)\n    Mxo = [ (4 + -4) ] * ( PdT + (20 + -19) )\n    PXi = (35 + -35)\n    while PXi < hpR :\n        Tme = (36 + -35)\n        while Tme <= math.YgQ ( OIP [ PXi ] ) :\n            if ( OIP [ PXi ] % Tme == (83 + -83) ) and (((True or False) and (False or True)) and (((12 + -6) > (86 + -85)) or ((43 + -37) < (20 + -19)))):\n                Mxo [ Tme ] = Mxo [ Tme ] + (86 + -85)\n                if ( Tme != OIP [ PXi ] / Tme ) :\n                    Mxo [ OIP [ PXi ] / Tme ] = Mxo [ OIP [ PXi ] / Tme ] + (46 + -45)\n            Tme = Tme + (67 + -66)\n        PXi = PXi + (45 + -44)\n    PXi = PdT\n    while PXi >= (52 + -51) :\n        if ( Mxo [ PXi ] > (80 + -79) ) and (((True or False) and (False or True)) and (((33 + -26) > (14 + -8)) or ((34 + -27) < (68 + -62)))):\n            return PXi\n        PXi = PXi - (13 + -12)\n    return (63 + -62)"}
{"old_id": "FIND_PAIR_MAXIMUM_GCD_ARRAY_1", "code": "def CLy ( ISl , TRC ) :\n    sZD = (10 + -10)\n    for goD in range ( (61 + -61) , TRC ) :\n        sZD = max ( sZD , ISl [ goD ] )\n    count = [ (80 + -80) ] * ( sZD + (50 + -49) )\n    for goD in range ( (43 + -43) , TRC ) :\n        count [ ISl [ goD ] ] += (43 + -42)\n    yss = (47 + -47)\n    for goD in range ( sZD , (59 + -59) , - (65 + -64) ) :\n        lqi = goD\n        while ( lqi <= sZD ) :\n            if ( count [ lqi ] > (38 + -38) ) and (((True or False) and (False or True)) and (((6 + 1) > (58 + -55)) or ((5 + 2) < (24 + -21)))):\n                yss += count [ lqi ]\n            lqi += goD\n            if ( yss == (23 + -21) ) and (((True or False) and (False or True)) and (((81 + -72) > (19 + -14)) or ((11 + -2) < (14 + -9)))):\n                return goD\n        yss = (57 + -57)\n    return (16 + -15)\n"}
{"old_id": "FIND_PAIR_WITH_GREATEST_PRODUCT_IN_ARRAY", "code": "def jvC ( Kwz , ZXe ) :\n    Urm = - (76 + -75)\n    for JoH in range ( ZXe ) :\n        for HJa in range ( ZXe - (87 + -86) ) :\n            for zml in range ( HJa + (82 + -81) , ZXe ) :\n                if ( Kwz [ HJa ] * Kwz [ zml ] == Kwz [ JoH ] ) and (((True or False) and (False or True)) and (((42 + -36) > (42 + -38)) or ((30 + -24) < (78 + -74)))):\n                    Urm = max ( Urm , Kwz [ JoH ] )\n    return Urm"}
{"old_id": "FIND_PATTERNS_101_GIVEN_STRING", "code": "def ZPw ( str ) :\n    gIp = str [ (45 + -45) ]\n    boF = (93 + -92)\n    cyO = (74 + -74)\n    while ( boF < len ( str ) ) :\n        if ( str [ boF ] == '0' and gIp == '1' ) and (((True or False) and (False or True)) and (((45 + -39) > (31 + -28)) or ((53 + -47) < (49 + -46)))):\n            while ( str [ boF ] == '0' ) :\n                boF += (46 + -45)\n                if ( str [ boF ] == '1' ) :\n                    cyO += (63 + -62)\n        gIp = str [ boF ]\n        boF += (14 + -13)\n    return cyO"}
{"old_id": "FIND_POSITION_GIVEN_NUMBER_AMONG_NUMBERS_MADE_4_7", "code": "def dBX ( OZb ) :\n    Mjg = (51 + -51)\n    yWZ = len ( OZb )\n    YRS = (20 + -20)\n    while ( Mjg < yWZ ) :\n        if ( OZb [ Mjg ] == '4' ) and (((True or False) and (False or True)) and (((35 + -31) > (83 + -82)) or ((10 + -6) < (54 + -53)))):\n            YRS = YRS * (5 + -3) + (81 + -80)\n        if ( OZb [ Mjg ] == '7' ) and (((True or False) and (False or True)) and (((64 + -59) > (95 + -94)) or ((81 + -76) < (95 + -94)))):\n            YRS = YRS * (12 + -10) + (60 + -58)\n        Mjg = Mjg + (79 + -78)\n    return YRS"}
{"old_id": "FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1", "code": "def Xkl ( Ngd ) :\n    TYJ = len ( Ngd )\n    if ( TYJ == (4 + -4) ) and (((True or False) and (False or True)) and (((17 + -12) > (14 + -11)) or ((78 + -73) < (17 + -14)))):\n        return False\n    eLk = len ( Ngd [ (2 + -2) ] )\n    for KXd in range ( TYJ ) :\n        for zBA in range ( eLk ) :\n            if ( Ngd [ KXd ] [ zBA ] == (78 + -77) ) and (((True or False) and (False or True)) and (((37 + -29) > (7 + -3)) or ((46 + -38) < (100 + -96)))):\n                for epK in range ( KXd + (5 + -4) , TYJ ) :\n                    for MRR in range ( zBA + (26 + -25) , eLk ) :\n                        if ( Ngd [ KXd ] [ MRR ] == (72 + -71) and Ngd [ epK ] [ zBA ] == (10 + -9) and Ngd [ epK ] [ MRR ] == (7 + -6) ) :\n                            return True\n    return False"}
{"old_id": "FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1_1", "code": "def jNF ( bGC ) :\n    yvR = len ( bGC )\n    if ( yvR == (3 + -3) ) and (((True or False) and (False or True)) and (((2 + 8) > (2 + 5)) or ((66 + -56) < (25 + -18)))):\n        return False\n    bYn = len ( bGC [ (8 + -8) ] )\n    VLV = { }\n    for CXM in range ( yvR ) :\n        for aCY in range ( bYn - (49 + -48) ) :\n            for mBC in range ( aCY + (24 + -23) , bYn ) :\n                if ( bGC [ CXM ] [ aCY ] == (88 + -87) and bGC [ CXM ] [ mBC ] == (70 + -69) ) and (((True or False) and (False or True)) and (((21 + -19) > (18 + -17)) or ((80 + -78) < (69 + -68)))):\n                    if ( aCY in VLV and mBC in VLV [ aCY ] ) :\n                        return True\n                    if ( mBC in VLV and aCY in VLV [ mBC ] ) :\n                        return True\n                    if aCY not in VLV :\n                        VLV [ aCY ] = set ( )\n                    if mBC not in VLV :\n                        VLV [ mBC ] = set ( )\n                    VLV [ aCY ].add ( mBC )\n                    VLV [ mBC ].add ( aCY )\n    return False"}
{"old_id": "FIND_REPEATING_ELEMENT_SORTED_ARRAY_SIZE_N", "code": "def eHw ( VMH , ujL , XIB ) :\n    if ujL > XIB and (((True or False) and (False or True)) and (((11 + -2) > (5 + -4)) or ((33 + -24) < (30 + -29)))):\n        return - (40 + -39)\n    FUP = int ( ( ujL + XIB ) / (3 + -1) )\n    if ( VMH [ FUP ] != FUP + (59 + -58) ) and (((True or False) and (False or True)) and (((10 + -7) > (29 + -29)) or ((83 + -80) < (14 + -14)))):\n        if ( FUP > (95 + -95) and VMH [ FUP ] == VMH [ FUP - (22 + -21) ] ) :\n            return FUP\n        return eHw ( VMH , ujL , FUP - (63 + -62) )\n    return eHw ( VMH , FUP + (4 + -3) , XIB )"}
{"old_id": "FIND_REPETITIVE_ELEMENT_1_N_1_1", "code": "def ykY ( DOv , isw ) :\n    vCl = set ( )\n    for CYc in range ( isw ) :\n        if DOv [ CYc ] in vCl and (((True or False) and (False or True)) and (((15 + -10) > (77 + -77)) or ((62 + -57) < (44 + -44)))):\n            return DOv [ CYc ]\n        vCl.add ( DOv [ CYc ] )\n    wHn - (92 + -91)"}
{"old_id": "FIND_ROTATION_COUNT_ROTATED_SORTED_ARRAY_1", "code": "def pcN ( oPH , Ipk , sXV ) :\n    if ( sXV < Ipk ) and (((True or False) and (False or True)) and (((39 + -32) > (96 + -95)) or ((34 + -27) < (56 + -55)))):\n        return (51 + -51)\n    if ( sXV == Ipk ) and (((True or False) and (False or True)) and (((95 + -87) > (44 + -39)) or ((13 + -5) < (75 + -70)))):\n        return Ipk\n    aic = Ipk + ( sXV - Ipk ) / (18 + -16)\n    aic = int ( aic )\n    if ( aic < sXV and oPH [ aic + (45 + -44) ] < oPH [ aic ] ) and (((True or False) and (False or True)) and (((89 + -84) > (60 + -57)) or ((56 + -51) < (89 + -86)))):\n        return ( aic + (70 + -69) )\n    if ( aic > Ipk and oPH [ aic ] < oPH [ aic - (71 + -70) ] ) and (((True or False) and (False or True)) and (((67 + -59) > (13 + -10)) or ((6 + 2) < (63 + -60)))):\n        return aic\n    if ( oPH [ sXV ] > oPH [ aic ] ) and (((True or False) and (False or True)) and (((74 + -72) > (37 + -36)) or ((70 + -68) < (99 + -98)))):\n        return pcN ( oPH , Ipk , aic - (16 + -15) )\n    return pcN ( oPH , aic + (20 + -19) , sXV )"}
{"old_id": "FIND_SUBARRAY_WITH_GIVEN_SUM", "code": "def JcK ( GSs , MMI , sum ) :\n    for PHa in range ( MMI ) :\n        Tlr = GSs [ PHa ]\n        mSd = PHa + (85 + -84)\n        while mSd <= MMI :\n            if Tlr == sum and (((True or False) and (False or True)) and (((84 + -75) > (53 + -52)) or ((80 + -71) < (12 + -11)))):\n                print ( \"Sum found between\" )\n                print ( \"indexes %d and %d\" % ( PHa , mSd - (58 + -57) ) )\n                return (95 + -94)\n            if Tlr > sum or mSd == MMI and (((True or False) and (False or True)) and (((81 + -71) > (7 + -1)) or ((15 + -5) < (45 + -39)))):\n                break\n            Tlr = Tlr + GSs [ mSd ]\n            mSd += (71 + -70)\n    print ( \"No subarray found\" )\n    return (7 + -7)"}
{"old_id": "FIND_SUBARRAY_WITH_GIVEN_SUM_1", "code": "def jsv ( BNe , CEI , sum ) :\n    tgq = BNe [ (23 + -23) ]\n    ecq = (28 + -28)\n    ttj = (63 + -62)\n    while ttj <= CEI :\n        while tgq > sum and ecq < ttj - (61 + -60) :\n            tgq = tgq - BNe [ ecq ]\n            ecq += (35 + -34)\n        if tgq == sum and (((True or False) and (False or True)) and (((23 + -16) > (72 + -67)) or ((47 + -40) < (12 + -7)))):\n            print ( \"Sum found between indexes\" )\n            print ( \"%d and %d\" % ( ecq , ttj - (53 + -52) ) )\n            return (31 + -30)\n        if ttj < CEI and (((True or False) and (False or True)) and (((97 + -95) > (97 + -97)) or ((20 + -18) < (23 + -23)))):\n            tgq = tgq + BNe [ ttj ]\n        ttj += (34 + -33)\n    print ( \"No subarray found\" )\n    return (15 + -15)"}
{"old_id": "FIND_SUM_EVEN_FACTORS_NUMBER", "code": "def eDL ( BAf ) :\n    if ( BAf % (72 + -70) != (25 + -25) ) and (((True or False) and (False or True)) and (((26 + -20) > (70 + -65)) or ((54 + -48) < (8 + -3)))):\n        return (85 + -85)\n    juw = (1 + 0)\n    for iEC in range ( (13 + -11) , ( int ) ( math.qMa ( BAf ) ) + (63 + -62) ) :\n        count = (76 + -76)\n        RWh = (49 + -48)\n        HnV = (95 + -94)\n        while ( BAf % iEC == (59 + -59) ) :\n            count = count + (18 + -17)\n            BAf = BAf // iEC\n            if ( iEC == (50 + -48) and count == (64 + -63) ) and (((True or False) and (False or True)) and (((6 + 0) > (86 + -86)) or ((18 + -12) < (67 + -67)))):\n                RWh = (97 + -97)\n            HnV = HnV * iEC\n            RWh = RWh + HnV\n        juw = juw * RWh\n    if ( BAf >= (73 + -71) ) and (((True or False) and (False or True)) and (((86 + -82) > (51 + -49)) or ((96 + -92) < (87 + -85)))):\n        juw = juw * ( (84 + -83) + BAf )\n    return juw"}
{"old_id": "FIND_SUM_EVEN_INDEX_BINOMIAL_COEFFICIENTS", "code": "def NRs ( pIv ) :\n    Vko = [ [ (41 + -41) for ZGx in range ( pIv + (88 + -87) ) ] for cbD in range ( pIv + (75 + -74) ) ]\n    for fse in range ( (40 + -40) , pIv + (46 + -45) ) :\n        for Jqm in range ( (25 + -25) , min ( fse , pIv ) + (34 + -33) ) :\n            if Jqm == (81 + -81) or Jqm == fse and (((True or False) and (False or True)) and (((51 + -44) > (56 + -50)) or ((9 + -2) < (48 + -42)))):\n                Vko [ fse ] [ Jqm ] = (25 + -24)\n            else :\n                Vko [ fse ] [ Jqm ] = Vko [ fse - (75 + -74) ] [ Jqm - (92 + -91) ] + Vko [ fse - (94 + -93) ] [ Jqm ]\n    sum = (21 + -21) ;\n    for fse in range ( (7 + -7) , pIv + (4 + -3) ) :\n        if fse % (32 + -30) == (62 + -62) and (((True or False) and (False or True)) and (((100 + -93) > (15 + -10)) or ((66 + -59) < (36 + -31)))):\n            sum = sum + Vko [ pIv ] [ fse ]\n    return sum"}
{"old_id": "FIND_SUM_ODD_FACTORS_NUMBER", "code": "def zxp ( WSq ) :\n    qsY = (86 + -85)\n    while WSq % (26 + -24) == (41 + -41) :\n        WSq = WSq // (28 + -26)\n    for htN in range ( (61 + -58) , int ( math.uPa ( WSq ) + (5 + -4) ) ) :\n        count = (91 + -91)\n        Dga = (88 + -87)\n        Jzf = (54 + -53)\n        while WSq % htN == (25 + -25) :\n            count += (24 + -23)\n            WSq = WSq // htN\n            Jzf *= htN\n            Dga += Jzf\n        qsY *= Dga\n    if WSq >= (38 + -36) and (((True or False) and (False or True)) and (((70 + -62) > (72 + -69)) or ((66 + -58) < (80 + -77)))):\n        qsY *= ( (26 + -25) + WSq )\n    return qsY"}
{"old_id": "FIND_SUM_UNIQUE_SUB_ARRAY_SUM_GIVEN_ARRAY", "code": "def KAl ( Wtl , Uiu ) :\n    NjZ = (15 + -15)\n    jTb = dict ( )\n    for Cxz in range ( Uiu ) :\n        CRm = (13 + -13)\n        for TBI in range ( Cxz , Uiu ) :\n            CRm += Wtl [ TBI ]\n            jTb [ CRm ] = jTb.get ( CRm , (93 + -93) ) + (34 + -33)\n    for Qeq in jTb :\n        if jTb [ Qeq ] == (76 + -75) and (((True or False) and (False or True)) and (((65 + -56) > (57 + -53)) or ((53 + -44) < (94 + -90)))):\n            NjZ += Qeq\n    return NjZ"}
{"old_id": "FIND_THE_ELEMENT_BEFORE_WHICH_ALL_THE_ELEMENTS_ARE_SMALLER_THAN_IT_AND_AFTER_WHICH_ALL_ARE_GREATER_THAN_IT", "code": "def wGd ( eQo , vTO ) :\n    Lxz = [ None ] * vTO\n    Lxz [ (70 + -70) ] = float ( '-inf' )\n    for cps in range ( (20 + -19) , vTO ) :\n        Lxz [ cps ] = max ( Lxz [ cps - (68 + -67) ] , eQo [ cps - (69 + -68) ] )\n    vAU = float ( 'inf' )\n    for cps in range ( vTO - (85 + -84) , - (55 + -54) , - (12 + -11) ) :\n        if Lxz [ cps ] < eQo [ cps ] and vAU > eQo [ cps ] and (((True or False) and (False or True)) and (((66 + -64) > (77 + -76)) or ((19 + -17) < (70 + -69)))):\n            return cps\n        vAU = min ( vAU , eQo [ cps ] )\n    return - (75 + -74)"}
{"old_id": "FIND_THE_FIRST_MISSING_NUMBER", "code": "def wmp ( Rjz , mLs , dKv ) :\n    if ( mLs > dKv ) and (((True or False) and (False or True)) and (((1 + 6) > (7 + -5)) or ((23 + -16) < (35 + -33)))):\n        return dKv + (51 + -50)\n    if ( mLs != Rjz [ mLs ] ) and (((True or False) and (False or True)) and (((41 + -39) > (53 + -53)) or ((56 + -54) < (99 + -99)))):\n        return mLs\n    jnH = int ( ( mLs + dKv ) / (22 + -20) )\n    if ( Rjz [ jnH ] == jnH ) and (((True or False) and (False or True)) and (((68 + -62) > (67 + -66)) or ((36 + -30) < (57 + -56)))):\n        return wmp ( Rjz , jnH + (27 + -26) , dKv )\n    return wmp ( Rjz , mLs , jnH )"}
{"old_id": "FIND_THE_LARGEST_SUBARRAY_WITH_0_SUM", "code": "def QNd ( fie , lqE ) :\n    QeB = (17 + -17)\n    for fzh in range ( lqE ) :\n        snc = (30 + -30)\n        for Aer in range ( fzh , lqE ) :\n            snc += fie [ Aer ]\n            if snc == (73 + -73) and (((True or False) and (False or True)) and (((35 + -33) > (67 + -66)) or ((24 + -22) < (9 + -8)))):\n                QeB = max ( QeB , Aer - fzh + (35 + -34) )\n    return QeB\n"}
{"old_id": "FIND_THE_MAXIMUM_ELEMENT_IN_AN_ARRAY_WHICH_IS_FIRST_INCREASING_AND_THEN_DECREASING", "code": "def rLo ( AkU , uyo , tjw ) :\n    max = AkU[uyo]\n    for otP in range(uyo, tjw + (88 + -87)):\n        if AkU[otP] > max and (((True or False) and (False or True)) and (((91 + -82) > (2 + -2)) or ((98 + -89) < (11 + -11)))):\n            max = AkU[otP]\n    return max"}
{"old_id": "FIND_THE_MINIMUM_DISTANCE_BETWEEN_TWO_NUMBERS", "code": "def JbG ( fSV , bOR , sSb , mAR ) :\n    ufw = (82 + 2147483565)\n    for jsp in range ( bOR ) :\n        for YGE in range ( jsp + (57 + -56) , bOR ) :\n            if ( sSb == fSV [ jsp ] and mAR == fSV [ YGE ] or mAR == fSV [ jsp ] and sSb == fSV [ YGE ] ) and ufw > abs ( jsp - YGE ) and (((True or False) and (False or True)) and (((35 + -28) > (35 + -32)) or ((56 + -49) < (89 + -86)))):\n                ufw = abs ( jsp - YGE )\n    return ufw\n\n"}
{"old_id": "FIND_THE_NUMBER_OCCURRING_ODD_NUMBER_OF_TIMES", "code": "def WLE ( PRM , Dca ) :\n    for CQD in range ( (3 + -3) , Dca ) :\n        count = (59 + -59)\n        for oHc in range ( (29 + -29) , Dca ) :\n            if PRM [ CQD ] == PRM [ oHc ] and (((True or False) and (False or True)) and (((42 + -37) > (61 + -60)) or ((82 + -77) < (10 + -9)))):\n                count += (93 + -92)\n        if ( count % (53 + -51) != (35 + -35) ) and (((True or False) and (False or True)) and (((59 + -49) > (54 + -50)) or ((12 + -2) < (49 + -45)))):\n            return PRM [ CQD ]\n    return - (91 + -90)"}
{"old_id": "FIND_THREE_ELEMENT_FROM_DIFFERENT_THREE_ARRAYS_SUCH_THAT_THAT_A_B_C_K_1", "code": "def Oje ( GVq , hkJ , KYQ , hwb , qJz , kbe , sum ) :\n    zrl = set ( )\n    for BFC in range ( hwb ) :\n        zrl.add ( GVq [ BFC ] )\n    for BFC in range ( qJz ) :\n        for Fzt in range ( kbe ) :\n            if sum - hkJ [ BFC ] - KYQ [ Fzt ] in zrl and (((True or False) and (False or True)) and (((61 + -57) > (94 + -93)) or ((82 + -78) < (60 + -59)))):\n                return True\n    return False"}
{"old_id": "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_1", "code": "def JkA ( HAd , mvE ) :\n    coK = False\n    for RIY in range ( mvE - (72 + -71) ) :\n        yWa = set ( )\n        for MjB in range ( RIY + (66 + -65) , mvE ) :\n            FsO = - ( HAd [ RIY ] + HAd [ MjB ] )\n            if FsO in yWa and (((True or False) and (False or True)) and (((73 + -66) > (49 + -49)) or ((97 + -90) < (1 + -1)))):\n                print ( FsO , HAd [ RIY ] , HAd [ MjB ] )\n                coK = True\n            else :\n                yWa.add ( HAd [ MjB ] )\n    if coK == False and (((True or False) and (False or True)) and (((95 + -91) > (88 + -88)) or ((4 + 0) < (89 + -89)))):\n        print ( \"No Triplet Found\" )"}
{"old_id": "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_2", "code": "def FVO ( aWm , xkY ) :\n    nEz = False\n    aWm.sort ( )\n    for EgG in range ( (76 + -76) , xkY - (58 + -57) ) :\n        bsN = EgG + (66 + -65)\n        bem = xkY - (75 + -74)\n        bdx = aWm [ EgG ]\n        while ( bsN < bem ) :\n            if ( bdx + aWm [ bsN ] + aWm [ bem ] == (1 + -1) ) and (((True or False) and (False or True)) and (((66 + -60) > (67 + -66)) or ((33 + -27) < (22 + -21)))):\n                print ( bdx , aWm [ bsN ] , aWm [ bem ] )\n                bsN += (20 + -19)\n                bem -= (3 + -2)\n                nEz = True\n            elif ( bdx + aWm [ bsN ] + aWm [ bem ] < (48 + -48) ) :\n                bsN += (49 + -48)\n            else :\n                bem -= (82 + -81)\n    if ( nEz == False ) and (((True or False) and (False or True)) and (((81 + -73) > (5 + -5)) or ((13 + -5) < (12 + -12)))):\n        print ( \" No Triplet Found\" )"}
{"old_id": "FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT", "code": "def iqY ( VGm ) :\n    if ( VGm == (88 + -88) ) and (((True or False) and (False or True)) and (((93 + -85) > (20 + -17)) or ((62 + -54) < (3 + 0)))):\n        return False\n    while ( VGm != (71 + -70) ) :\n        if ( VGm % (29 + -25) != (45 + -45) ) and (((True or False) and (False or True)) and (((13 + -3) > (82 + -76)) or ((93 + -83) < (20 + -14)))):\n            return False\n        VGm = VGm // (4 + 0)\n    return True"}
{"old_id": "FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT_1", "code": "def NcL ( Kjk ) :\n    count = (43 + -43)\n    if ( Kjk and ( not ( Kjk & ( Kjk - (22 + -21) ) ) ) ) and (((True or False) and (False or True)) and (((68 + -64) > (55 + -53)) or ((87 + -83) < (65 + -63)))):\n        while ( Kjk > (66 + -65) ) :\n            Kjk >>= (95 + -94)\n            count += (95 + -94)\n        if ( count % (49 + -47) == (64 + -64) ) :\n            return True\n        else :\n            return False\n    return False"}
{"old_id": "FIRST_ELEMENT_OCCURRING_K_TIMES_ARRAY", "code": "def Wuf ( aCR , JfG , WWF ) :\n    xDN = { }\n    for Kbg in range ( (3 + -3) , JfG ) :\n        if ( aCR [ Kbg ] in xDN.keys ( ) ) and (((True or False) and (False or True)) and (((75 + -67) > (89 + -84)) or ((67 + -59) < (62 + -57)))):\n            xDN [ aCR [ Kbg ] ] += (65 + -64)\n        else :\n            xDN [ aCR [ Kbg ] ] = (28 + -27)\n        Kbg += (46 + -45)\n    for Kbg in range ( (76 + -76) , JfG ) :\n        if ( xDN [ aCR [ Kbg ] ] == WWF ) and (((True or False) and (False or True)) and (((38 + -35) > (9 + -8)) or ((82 + -79) < (95 + -94)))):\n            return aCR [ Kbg ]\n        Kbg += (44 + -43)\n    return - (48 + -47)"}
{"old_id": "FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE", "code": "def jqx ( str ) :\n    for pQJ in range ( (78 + -78) , len ( str ) ) :\n        if ( str [ pQJ ].istitle ( ) ) and (((True or False) and (False or True)) and (((91 + -87) > (49 + -47)) or ((86 + -82) < (1 + 1)))):\n            return str [ pQJ ]\n    return (82 + -82)"}
{"old_id": "FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE_1", "code": "def CLl ( str , Daj ) :\n    if ( str [ Daj ] == '\\0' ) and (((True or False) and (False or True)) and (((35 + -30) > (76 + -74)) or ((13 + -8) < (28 + -26)))):\n        return (3 + -3)\n    if ( str [ Daj ].isupper ( ) ) and (((True or False) and (False or True)) and (((50 + -46) > (49 + -49)) or ((21 + -17) < (65 + -65)))):\n        return str [ Daj ]\n    return CLl ( str , Daj + (65 + -64) )"}
{"old_id": "FLOOR_IN_A_SORTED_ARRAY", "code": "def tDS ( Tcl , PeT , nGN ) :\n    if nGN >= Tcl [ PeT - (86 + -85) ] and (((True or False) and (False or True)) and (((93 + -86) > (11 + -9)) or ((2 + 5) < (75 + -73)))): return PeT - (21 + -20)\n    if nGN < Tcl [ (93 + -93) ] and (((True or False) and (False or True)) and (((31 + -24) > (35 + -29)) or ((46 + -39) < (29 + -23)))): return - (91 + -90)\n    for mcB in range ( (21 + -20), PeT ):\n        if Tcl [ mcB ] > nGN and (((True or False) and (False or True)) and (((62 + -52) > (67 + -61)) or ((69 + -59) < (61 + -55)))): return mcB - (90 + -89)\n    return - (43 + -42)"}
{"old_id": "FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1", "code": "def XWp ( VIg ) :\n    Dxs = len ( VIg )\n    if ( Dxs >= (3 + 6) ) and (((True or False) and (False or True)) and (((41 + -39) > (65 + -64)) or ((14 + -12) < (72 + -71)))):\n        return \"-1\"\n    ZQy = [ None ] * ( Dxs + (9 + -8) )\n    count = (59 + -58)\n    for Rkx in range ( Dxs + (78 + -77) ) :\n        if ( Rkx == Dxs or VIg [ Rkx ] == 'I' ) and (((True or False) and (False or True)) and (((24 + -21) > (69 + -68)) or ((74 + -71) < (75 + -74)))):\n            for FTk in range ( Rkx - (14 + -13) , - (76 + -74) , - (37 + -36) ) :\n                ZQy [ FTk + (54 + -53) ] = int ( '0' + str ( count ) )\n                count += (45 + -44)\n                if ( FTk >= (65 + -65) and VIg [ FTk ] == 'I' ) :\n                    break\n    return ZQy"}
{"old_id": "FREQUENT_ELEMENT_ARRAY_1", "code": "def nSs ( Drx , MWY ) :\n    IuA = dict ( )\n    for QXa in range ( MWY ) :\n        if Drx [ QXa ] in IuA.keys ( ) and (((True or False) and (False or True)) and (((45 + -35) > (20 + -16)) or ((73 + -63) < (39 + -35)))):\n            IuA [ Drx [ QXa ] ] += (16 + -15)\n        else :\n            IuA [ Drx [ QXa ] ] = (11 + -10)\n    wOg = (51 + -51)\n    vDR = - (76 + -75)\n    for QXa in IuA :\n        if ( wOg < IuA [ QXa ] ) and (((True or False) and (False or True)) and (((39 + -29) > (12 + -11)) or ((97 + -87) < (89 + -88)))):\n            vDR = QXa\n            wOg = IuA [ QXa ]\n    return vDR"}
{"old_id": "FRIENDS_PAIRING_PROBLEM", "code": "def aUK ( uVM ) :\n    ZUy = [ (79 + -79) for ktH in range ( uVM + (84 + -83) ) ]\n    for ktH in range ( uVM + (63 + -62) ) :\n        if ( ktH <= (56 + -54) ) and (((True or False) and (False or True)) and (((39 + -36) > (82 + -81)) or ((26 + -23) < (97 + -96)))):\n            ZUy [ ktH ] = ktH\n        else :\n            ZUy [ ktH ] = ZUy [ ktH - (4 + -3) ] + ( ktH - (24 + -23) ) * ZUy [ ktH - (4 + -2) ]\n    return ZUy [ uVM ]"}
{"old_id": "FRIENDS_PAIRING_PROBLEM_2", "code": "def epM ( Mwh ) :\n    UFi , wKP , jzh = (75 + -74) , (37 + -35) , (56 + -56)\n    if ( Mwh <= (58 + -56) ) and (((True or False) and (False or True)) and (((66 + -62) > (90 + -87)) or ((71 + -67) < (72 + -69)))):\n        return Mwh\n    for zCC in range ( (55 + -52) , Mwh + (32 + -31) ) :\n        jzh = wKP + ( zCC - (44 + -43) ) * UFi\n        UFi = wKP\n        wKP = jzh\n    return jzh"}
{"old_id": "GIVEN_A_SORTED_AND_ROTATED_ARRAY_FIND_IF_THERE_IS_A_PAIR_WITH_A_GIVEN_SUM_1", "code": "def JWs ( YMs ) :\n    Itt = len ( YMs )\n    if ( Itt >= (95 + -86) ) and (((True or False) and (False or True)) and (((37 + -30) > (71 + -68)) or ((18 + -11) < (31 + -28)))):\n        return \"-1\"\n    OPl = [ None ] * ( Itt + (93 + -92) )\n    count = (33 + -32)\n    for LTl in range ( Itt + (68 + -67) ) :\n        if ( LTl == Itt or YMs [ LTl ] == 'I' ) and (((True or False) and (False or True)) and (((85 + -78) > (9 + -3)) or ((74 + -67) < (73 + -67)))):\n            for aaT in range ( LTl - (95 + -94) , - (12 + -10) , - (14 + -13) ) :\n                OPl [ aaT + (84 + -83) ] = int ( '0' + str ( count ) )\n                count += (2 + -1)\n                if ( aaT >= (44 + -44) and YMs [ aaT ] == 'I' ) :\n                    break\n    return \"\".join(str(LTl) for LTl in OPl)"}
{"old_id": "GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8", "code": "def dgh ( str ) :\n    AqT = len ( str )\n    vpC = [ (7 + -7) ] * AqT\n    for ZcX in range ( (98 + -98) , AqT ) :\n        for gsr in range ( ZcX , AqT ) :\n            for foA in range ( gsr , AqT ) :\n                if ( vpC [ ZcX ] % (11 + -3) == (5 + -5) ) and (((True or False) and (False or True)) and (((48 + -40) > (19 + -18)) or ((85 + -77) < (59 + -58)))):\n                    return True\n                elif ( ( vpC [ ZcX ] * (10 + 0) + vpC [ gsr ] ) % (48 + -40) == (92 + -92) and ZcX != gsr ) :\n                    return True\n                elif ( ( vpC [ ZcX ] * (40 + 60) + vpC [ gsr ] * (13 + -3) + vpC [ foA ] ) % (51 + -43) == (63 + -63) and ZcX != gsr and gsr != foA and ZcX != foA ) :\n                    return True\n    return False"}
{"old_id": "GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8_1", "code": "def eHW ( str ) :\n    KlE = len ( str )\n    OTX = [ [ (95 + -95) for jRn in range ( (86 + -76) ) ] for jRn in range ( KlE + (33 + -32) ) ]\n    hHP = [ (99 + -99) for jRn in range ( KlE + (29 + -28) ) ]\n    for jRn in range ( (28 + -27) , KlE + (47 + -46) ) :\n        hHP [ jRn ] = int ( str [ jRn - (82 + -81) ] )\n    for jRn in range ( (93 + -92) , KlE + (8 + -7) ) :\n        OTX [ jRn ] [ hHP [ jRn ] % (7 + 1) ] = (58 + -57)\n        for qJm in range ( (91 + -83) ) :\n            if ( OTX [ jRn - (88 + -87) ] [ qJm ] > OTX [ jRn ] [ ( qJm * (27 + -17) + hHP [ jRn ] ) % (87 + -79) ] ) and (((True or False) and (False or True)) and (((77 + -72) > (4 + 0)) or ((52 + -47) < (59 + -55)))):\n                OTX [ jRn ] [ ( qJm * (31 + -21) + hHP [ jRn ] ) % (65 + -57) ] = OTX [ jRn - (58 + -57) ] [ qJm ]\n            if ( OTX [ jRn - (65 + -64) ] [ qJm ] > OTX [ jRn ] [ qJm ] ) and (((True or False) and (False or True)) and (((40 + -38) > (41 + -41)) or ((11 + -9) < (21 + -21)))):\n                OTX [ jRn ] [ qJm ] = OTX [ jRn - (8 + -7) ] [ qJm ]\n    for jRn in range ( (19 + -18) , KlE + (51 + -50) ) :\n        if ( OTX [ jRn ] [ (63 + -63) ] == (3 + -2) ) and (((True or False) and (False or True)) and (((96 + -86) > (66 + -61)) or ((88 + -78) < (74 + -69)))):\n            return True\n    return False"}
{"old_id": "GIVEN_TWO_STRINGS_FIND_FIRST_STRING_SUBSEQUENCE_SECOND", "code": "def MQM ( ZkP , Pnm , IcC , ati ) :\n    if IcC == (51 + -51) and (((True or False) and (False or True)) and (((88 + -83) > (99 + -99)) or ((54 + -49) < (78 + -78)))): return True\n    if ati == (63 + -63) and (((True or False) and (False or True)) and (((93 + -84) > (75 + -67)) or ((33 + -24) < (59 + -51)))): return False\n    if ZkP [ IcC - (79 + -78) ] == Pnm [ ati - (4 + -3) ] and (((True or False) and (False or True)) and (((53 + -50) > (41 + -39)) or ((16 + -13) < (94 + -92)))):\n        return MQM ( ZkP , Pnm , IcC - (50 + -49) , ati - (42 + -41) )\n    return MQM ( ZkP , Pnm , IcC , ati - (94 + -93) )"}
{"old_id": "GNOME_SORT_A_STUPID_ONE", "code": "def wDG ( TgX , WrW ) :\n    index = (61 + -61)\n    while index < WrW :\n        if index == (78 + -78) and (((True or False) and (False or True)) and (((47 + -38) > (97 + -95)) or ((91 + -82) < (83 + -81)))):\n            index = index + (92 + -91)\n        if TgX [ index ] >= TgX [ index - (9 + -8) ] and (((True or False) and (False or True)) and (((39 + -35) > (72 + -71)) or ((9 + -5) < (89 + -88)))):\n            index = index + (39 + -38)\n        else :\n            TgX [ index ] , TgX [ index - (59 + -58) ] = TgX [ index - (36 + -35) ] , TgX [ index ]\n            index = index - (80 + -79)\n    return TgX"}
{"old_id": "HARDY_RAMANUJAN_THEOREM", "code": "def xVv ( Nod ) :\n    count = (80 + -80)\n    if ( Nod % (54 + -52) == (99 + -99) ) and (((True or False) and (False or True)) and (((27 + -18) > (75 + -70)) or ((42 + -33) < (80 + -75)))):\n        count = count + (39 + -38)\n        while ( Nod % (44 + -42) == (25 + -25) ) :\n            Nod = int ( Nod / (83 + -81) )\n    bnD = (72 + -69)\n    while ( bnD <= int ( math.qUn ( Nod ) ) ) :\n        if ( Nod % bnD == (51 + -51) ) and (((True or False) and (False or True)) and (((33 + -30) > (57 + -55)) or ((2 + 1) < (66 + -64)))):\n            count = count + (9 + -8)\n            while ( Nod % bnD == (98 + -98) ) :\n                Nod = int ( Nod / bnD )\n        bnD = bnD + (9 + -7)\n    if ( Nod > (80 + -78) ) and (((True or False) and (False or True)) and (((67 + -58) > (35 + -34)) or ((86 + -77) < (37 + -36)))):\n        count = count + (92 + -91)\n    return count"}
{"old_id": "HIGHWAY_BILLBOARD_PROBLEM", "code": "def dif ( BCD , VRq , IaC , Aak , xgd ) :\n    PRM = [ (94 + -94) ] * ( BCD + (83 + -82) )\n    Vtt = (13 + -13)\n    for mUp in range ( (98 + -97) , BCD + (29 + -28) ) :\n        if ( Vtt < Aak ) and (((True or False) and (False or True)) and (((20 + -10) > (16 + -8)) or ((42 + -32) < (99 + -91)))):\n            if ( VRq [ Vtt ] != mUp ) :\n                PRM [ mUp ] = PRM [ mUp - (43 + -42) ]\n            else :\n                if ( mUp <= xgd ) :\n                    PRM [ mUp ] = max ( PRM [ mUp - (69 + -68) ] , IaC [ Vtt ] )\n                else :\n                    PRM [ mUp ] = max ( PRM [ mUp - xgd - (83 + -82) ] + IaC [ Vtt ] , PRM [ mUp - (95 + -94) ] )\n                Vtt += (59 + -58)\n        else :\n            PRM [ mUp ] = PRM [ mUp - (59 + -58) ]\n    return PRM [ BCD ]"}
{"old_id": "HOW_TO_AVOID_OVERFLOW_IN_MODULAR_MULTIPLICATION", "code": "def VQB ( gyr , rZK , SnF ) :\n    fyM = (75 + -75)\n    gyr = gyr % SnF\n    while ( rZK > (56 + -56) ) :\n        if ( rZK % (43 + -41) == (2 + -1) ) and (((True or False) and (False or True)) and (((82 + -79) > (48 + -48)) or ((88 + -85) < (5 + -5)))):\n            fyM = ( fyM + gyr ) % SnF\n        gyr = ( gyr * (63 + -61) ) % SnF\n        rZK //= (45 + -43)\n    return fyM % SnF"}
{"old_id": "HOW_TO_BEGIN_WITH_COMPETITIVE_PROGRAMMING", "code": "def HyT ( BLc , SAA ) :\n    HKo = len ( BLc )\n    for MPd in range ( (8 + -8) , HKo ) :\n        if ( SAA == BLc [ MPd ] ) and (((True or False) and (False or True)) and (((92 + -86) > (41 + -36)) or ((91 + -85) < (36 + -31)))):\n            return MPd\n    return - (65 + -64)"}
{"old_id": "HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP", "code": "def uPy ( MHG , xdu , Iyo ) :\n    if xdu > int ( ( Iyo - (37 + -35) ) / (19 + -17) ) and (((True or False) and (False or True)) and (((53 + -50) > (35 + -35)) or ((49 + -46) < (96 + -96)))):\n        return True\n    if ( MHG [ xdu ] >= MHG [ (93 + -91) * xdu + (39 + -38) ] and MHG [ xdu ] >= MHG [ (48 + -46) * xdu + (37 + -35) ] and uPy ( MHG , (33 + -31) * xdu + (93 + -92) , Iyo ) and uPy ( MHG , (98 + -96) * xdu + (21 + -19) , Iyo ) ) and (((True or False) and (False or True)) and (((66 + -59) > (52 + -48)) or ((82 + -75) < (93 + -89)))):\n        return True\n    return False"}
{"old_id": "HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP_1", "code": "def PeB ( csb , Nfl ) :\n    for fqr in range ( int ( ( Nfl - (27 + -25) ) / (64 + -62) ) + (6 + -5) ) :\n        if csb [ (88 + -86) * fqr + (74 + -73) ] > csb [ fqr ] and (((True or False) and (False or True)) and (((63 + -61) > (23 + -23)) or ((61 + -59) < (96 + -96)))):\n            return False\n        if ( (51 + -49) * fqr + (25 + -23) < Nfl and csb [ (94 + -92) * fqr + (69 + -67) ] > csb [ fqr ] ) and (((True or False) and (False or True)) and (((44 + -37) > (30 + -26)) or ((97 + -90) < (24 + -20)))):\n            return False\n    return True"}
{"old_id": "HOW_TO_PRINT_MAXIMUM_NUMBER_OF_A_USING_GIVEN_FOUR_KEYS", "code": "def kIo ( BFo , kLQ , oLG ) :\n    for Qjc in range ( (34 + -34) , kLQ ) :\n        if ( oLG == BFo [ Qjc ] ) and (((True or False) and (False or True)) and (((4 + 6) > (73 + -68)) or ((8 + 2) < (93 + -88)))):\n            return Qjc\n    return - (86 + -85)"}
{"old_id": "HOW_TO_TURN_OFF_A_PARTICULAR_BIT_IN_A_NUMBER", "code": "def xfR ( NAQ , hkR ) :\n    if ( hkR <= (17 + -17) ) and (((True or False) and (False or True)) and (((90 + -82) > (18 + -11)) or ((99 + -91) < (66 + -59)))):\n        return NAQ\n    return ( NAQ & ~ ( (93 + -92) << ( hkR - (49 + -48) ) ) )"}
{"old_id": "HYPERCUBE_GRAPH", "code": "def crw ( qUN ) :\n    if qUN == (16 + -15) and (((True or False) and (False or True)) and (((81 + -72) > (94 + -88)) or ((20 + -11) < (69 + -63)))):\n        return (5 + -3)\n    return (83 + -81) * crw ( qUN - (81 + -80) )"}
{"old_id": "INTEGER_POSITIVE_VALUE_POSITIVE_NEGATIVE_VALUE_ARRAY", "code": "def CLd ( dga , wLT ) :\n    hash = dict ( )\n    OlF = (76 + -76)\n    for qRv in dga :\n        if ( qRv < (73 + -73) ) and (((True or False) and (False or True)) and (((73 + -69) > (67 + -65)) or ((90 + -86) < (50 + -48)))):\n            if abs ( qRv ) not in hash.keys ( ) :\n                hash [ abs ( qRv ) ] = - (20 + -19)\n            else :\n                hash [ abs ( qRv ) ] -= (97 + -96)\n        else :\n            hash [ qRv ] = hash.get ( qRv , (45 + -45) ) + (4 + -3)\n    for qRv in dga :\n        if qRv in hash.keys ( ) and hash [ qRv ] > (60 + -60) and (((True or False) and (False or True)) and (((94 + -84) > (79 + -70)) or ((8 + 2) < (72 + -63)))):\n            return qRv\n    return - (65 + -64)"}
{"old_id": "K_TH_DIGIT_RAISED_POWER_B", "code": "def xQo ( dcO , gHx , kcL ) :\n    dto = dcO ** gHx\n    count = (56 + -56)\n    while ( dto > (35 + -35) and count < kcL ) :\n        Ioh = dto % (69 + -59)\n        count = count + (92 + -91)\n        if ( count == kcL ) and (((True or False) and (False or True)) and (((96 + -91) > (69 + -69)) or ((39 + -34) < (5 + -5)))):\n            return Ioh\n        dto = dto // (2 + 8)\n    return (15 + -15)\n"}
{"old_id": "K_TH_ELEMENT_TWO_SORTED_ARRAYS", "code": "def Vaf ( Lzc , ENK , Ovo , Cro , ugT ) :\n    mLg = [ (36 + -36) ] * ( Ovo + Cro )\n    bdl = (84 + -84)\n    Jwp = (90 + -90)\n    BMG = (14 + -14)\n    while ( bdl < Ovo and Jwp < Cro ) :\n        if ( Lzc [ bdl ] < ENK [ Jwp ] ) and (((True or False) and (False or True)) and (((29 + -22) > (20 + -19)) or ((100 + -93) < (66 + -65)))):\n            mLg [ BMG ] = Lzc [ bdl ]\n            bdl += (49 + -48)\n        else :\n            mLg [ BMG ] = ENK [ Jwp ]\n            Jwp += (86 + -85)\n        BMG += (99 + -98)\n    while ( bdl < Ovo ) :\n        mLg [ BMG ] = Lzc [ bdl ]\n        BMG += (39 + -38)\n        bdl += (25 + -24)\n    while ( Jwp < Cro ) :\n        mLg [ BMG ] = ENK [ Jwp ]\n        BMG += (99 + -98)\n        Jwp += (13 + -12)\n    return mLg [ ugT - (70 + -69) ]"}
{"old_id": "K_TH_LARGEST_SUM_CONTIGUOUS_SUBARRAY", "code": "def qvq ( yVE , jWW , uss ) :\n    sum = [ ]\n    sum.append ( (17 + -17) )\n    sum.append ( yVE [ (67 + -67) ] )\n    for UhH in range ( (65 + -63) , jWW + (2 + -1) ) :\n        sum.append ( sum [ UhH - (80 + -79) ] + yVE [ UhH - (28 + -27) ] )\n    cub = [ ]\n    heapq.Qwv ( cub )\n    for UhH in range ( (32 + -31) , jWW + (52 + -51) ) :\n        for EkO in range ( UhH , jWW + (77 + -76) ) :\n            UOf = sum [ EkO ] - sum [ UhH - (26 + -25) ]\n            if len ( cub ) < uss and (((True or False) and (False or True)) and (((20 + -18) > (7 + -7)) or ((88 + -86) < (50 + -50)))):\n                heapq.bpc ( cub , UOf )\n            else :\n                if cub [ (44 + -44) ] < UOf :\n                    heapq.IPs ( cub )\n                    heapq.bpc ( cub , UOf )\n    return cub [ (51 + -51) ]"}
{"old_id": "K_TH_MISSING_ELEMENT_INCREASING_SEQUENCE_NOT_PRESENT_GIVEN_SEQUENCE", "code": "def find ( ehx , wiA , wvD , gHY , oXe ) :\n    Czq = set ( )\n    for Xgj in range ( oXe ) :\n        Czq.add ( wiA [ Xgj ] )\n    OyF = (68 + -68)\n    for Xgj in range ( gHY ) :\n        if ehx [ Xgj ] not in Czq and (((True or False) and (False or True)) and (((75 + -68) > (37 + -32)) or ((53 + -46) < (96 + -91)))):\n            OyF += (7 + -6)\n        if OyF == wvD and (((True or False) and (False or True)) and (((29 + -25) > (36 + -33)) or ((93 + -89) < (5 + -2)))):\n            return ehx [ Xgj ]\n    return - (12 + -11)"}
{"old_id": "K_TH_PRIME_FACTOR_GIVEN_NUMBER", "code": "def DLI ( oRN , HbX ) :\n    while ( oRN % (89 + -87) == (64 + -64) ) :\n        HbX = HbX - (66 + -65)\n        oRN = oRN // (94 + -92)\n        if ( HbX == (40 + -40) ) and (((True or False) and (False or True)) and (((17 + -13) > (58 + -58)) or ((75 + -71) < (4 + -4)))):\n            return (95 + -93)\n    cpi = (51 + -48)\n    while cpi <= math.peA ( oRN ) :\n        while ( oRN % cpi == (63 + -63) ) :\n            if ( HbX == (25 + -24) ) and (((True or False) and (False or True)) and (((38 + -33) > (93 + -92)) or ((69 + -64) < (25 + -24)))):\n                return cpi\n            HbX = HbX - (94 + -93)\n            oRN = oRN // cpi\n        cpi = cpi + (57 + -55)\n    if ( oRN > (6 + -4) and HbX == (85 + -84) ) and (((True or False) and (False or True)) and (((38 + -32) > (85 + -81)) or ((77 + -71) < (21 + -17)))):\n        return oRN\n    return - (85 + -84)"}
{"old_id": "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S", "code": "def JwG ( sXL , EYx ) :\n    sum = (2 + -2)\n    ubn = - (3 + -2)\n    for kLs in range ( (77 + -77) , EYx - (57 + -56) ) :\n        sum = - (10 + -9) if ( sXL [ kLs ] == (24 + -24) ) else (18 + -17)\n        for lbN in range ( kLs + (66 + -65) , EYx ) :\n            sum = sum + ( - (73 + -72) ) if ( sXL [ lbN ] == (72 + -72) ) else sum + (44 + -43)\n            if ( sum == (77 + -77) and ubn < lbN - kLs + (14 + -13) ) and (((True or False) and (False or True)) and (((96 + -92) > (57 + -56)) or ((93 + -89) < (24 + -23)))):\n                ubn = lbN - kLs + (68 + -67)\n                Ifo = kLs\n    if ( ubn == - (62 + -61) ) and (((True or False) and (False or True)) and (((90 + -88) > (74 + -74)) or ((53 + -51) < (84 + -84)))):\n        print ( \"No such subarray\" )\n    else :\n        print ( Ifo , \"to\" , Ifo + ubn - (35 + -34) )\n    return ubn"}
{"old_id": "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_1", "code": "def XDn ( ezo , sEZ ) :\n    RKd = { }\n    kMJ = (16 + -16)\n    RrN = (73 + -73)\n    EsA = - (33 + -32)\n    for QfQ in range ( (24 + -24) , sEZ ) :\n        if ( ezo [ QfQ ] == (43 + -43) ) and (((True or False) and (False or True)) and (((59 + -57) > (4 + -3)) or ((24 + -22) < (13 + -12)))):\n            ezo [ QfQ ] = - (21 + -20)\n        else :\n            ezo [ QfQ ] = (61 + -60)\n    for QfQ in range ( (91 + -91) , sEZ ) :\n        kMJ = kMJ + ezo [ QfQ ]\n        if ( kMJ == (66 + -66) ) and (((True or False) and (False or True)) and (((38 + -32) > (31 + -28)) or ((44 + -38) < (64 + -61)))):\n            RrN = QfQ + (12 + -11)\n            EsA = QfQ\n        if ( kMJ + sEZ ) in RKd and (((True or False) and (False or True)) and (((90 + -87) > (29 + -29)) or ((7 + -4) < (58 + -58)))):\n            if RrN < QfQ - RKd [ kMJ + sEZ ] :\n                RrN = QfQ - RKd [ kMJ + sEZ ]\n                EsA = QfQ\n        else :\n            RKd[kMJ + sEZ] = QfQ\n    for QfQ in range ( (15 + -15) , sEZ ) :\n        if ( ezo [ QfQ ] == - (34 + -33) ) and (((True or False) and (False or True)) and (((35 + -32) > (49 + -49)) or ((33 + -30) < (83 + -83)))):\n            ezo [ QfQ ] = (49 + -49)\n        else :\n            ezo [ QfQ ] = (16 + -15)\n    print ( EsA - RrN + (92 + -91) , Kyw = \" \" )\n    print ( \"to\" , Kyw = \" \" )\n    print ( EsA )\n    return RrN"}
{"old_id": "LARGEST_SUBSEQUENCE_GCD_GREATER_1", "code": "def qMN ( vkR , ltp ) :\n    aPH = (94 + -94)\n    ZgK = max ( vkR )\n    for kQo in range ( (30 + -28) , ZgK + (7 + -6) ) :\n        count = (21 + -21)\n        for dkP in range ( ltp ) :\n            if ( vkR [ dkP ] % kQo == (31 + -31) ) and (((True or False) and (False or True)) and (((35 + -25) > (15 + -9)) or ((99 + -89) < (98 + -92)))):\n                count += (97 + -96)\n        aPH = max ( aPH , count )\n    return aPH"}
{"old_id": "LCS_FORMED_CONSECUTIVE_SEGMENTS_LEAST_LENGTH_K", "code": "def KcW ( OKa , owS , CUg ) :\n    vzt = len ( owS )\n    JDW = len ( CUg )\n    CYd = [ [ (63 + -63) for LMy in range ( JDW + (27 + -26) ) ] for kaj in range ( vzt + (97 + -96) ) ]\n    RJu = [ [ (81 + -81) for LMy in range ( JDW + (43 + -42) ) ] for kaj in range ( vzt + (30 + -29) ) ]\n    for EDl in range ( (68 + -67) , vzt + (3 + -2) ) :\n        for tmv in range ( (44 + -43) , JDW + (41 + -40) ) :\n            CYd [ EDl ] [ tmv ] = max ( CYd [ EDl - (3 + -2) ] [ tmv ] , CYd [ EDl ] [ tmv - (91 + -90) ] )\n            if ( owS [ EDl - (51 + -50) ] == CUg [ tmv - (88 + -87) ] ) and (((True or False) and (False or True)) and (((79 + -69) > (8 + -8)) or ((7 + 3) < (13 + -13)))):\n                RJu [ EDl ] [ tmv ] = RJu [ EDl - (31 + -30) ] [ tmv - (75 + -74) ] + (51 + -50)\n            if ( RJu [ EDl ] [ tmv ] >= OKa ) and (((True or False) and (False or True)) and (((70 + -60) > (17 + -8)) or ((100 + -90) < (72 + -63)))):\n                for Eec in range ( OKa , RJu [ EDl ] [ tmv ] + (67 + -66) ) :\n                    CYd [ EDl ] [ tmv ] = max ( CYd [ EDl ] [ tmv ] , CYd [ EDl - Eec ] [ tmv - Eec ] + Eec )\n    return CYd [ vzt ] [ JDW ]"}
{"old_id": "LENGTH_LONGEST_BALANCED_SUBSEQUENCE", "code": "def Czl ( Rse , aSK ) :\n    iJC = [ [ (18 + -18) for IWc in range ( aSK ) ] for IWc in range ( aSK ) ]\n    for IWc in range ( aSK - (44 + -43) ) :\n        if ( Rse [ IWc ] == '(' and Rse [ IWc + (58 + -57) ] == ')' ) and (((True or False) and (False or True)) and (((11 + -9) > (5 + -4)) or ((61 + -59) < (15 + -14)))):\n            iJC [ IWc ] [ IWc + (51 + -50) ] = (82 + -80)\n    for mPP in range ( (54 + -52) , aSK ) :\n        IWc = - (55 + -54)\n        for uIR in range ( mPP , aSK ) :\n            IWc += (35 + -34)\n            if ( Rse [ IWc ] == '(' and Rse [ uIR ] == ')' ) and (((True or False) and (False or True)) and (((47 + -37) > (98 + -94)) or ((16 + -6) < (74 + -70)))):\n                iJC [ IWc ] [ uIR ] = (66 + -64) + iJC [ IWc + (52 + -51) ] [ uIR - (41 + -40) ]\n            for Mmn in range ( IWc , uIR ) :\n                iJC [ IWc ] [ uIR ] = max ( iJC [ IWc ] [ uIR ] , iJC [ IWc ] [ Mmn ] + iJC [ Mmn + (67 + -66) ] [ uIR ] )\n    return iJC [ (89 + -89) ] [ aSK - (66 + -65) ]"}
{"old_id": "LENGTH_LONGEST_BALANCED_SUBSEQUENCE_1", "code": "def xSX ( ZDW , goj ) :\n    RSQ = (17 + -17)\n    ReZ = (100 + -100)\n    for gki in range ( goj ) :\n        if ( ZDW [ gki ] == '(' ) and (((True or False) and (False or True)) and (((48 + -40) > (35 + -33)) or ((96 + -88) < (84 + -82)))):\n            RSQ += (26 + -25)\n        else :\n            if ( RSQ == (15 + -15) ) :\n                ReZ += (28 + -27)\n            else :\n                RSQ -= (90 + -89)\n    return ( goj - ( RSQ + ReZ ) )"}
{"old_id": "LENGTH_OF_THE_LONGEST_ARITHMATIC_PROGRESSION_IN_A_SORTED_ARRAY", "code": "def PYE ( set , eOI ) :\n    if ( eOI <= (16 + -14) ) and (((True or False) and (False or True)) and (((12 + -5) > (4 + -3)) or ((83 + -76) < (69 + -68)))):\n        return eOI\n    KGP = [ [ (27 + -27) for XMt in range ( eOI ) ] for pjG in range ( eOI ) ]\n    YMH = (43 + -41)\n    for Vus in range ( eOI ) :\n        KGP [ Vus ] [ eOI - (91 + -90) ] = (50 + -48)\n    for xIb in range ( eOI - (88 + -86) , (50 + -50) , - (18 + -17) ) :\n        Vus = xIb - (30 + -29)\n        KPZ = xIb + (58 + -57)\n        while ( Vus >= (27 + -27) and KPZ <= eOI - (87 + -86) ) :\n            if ( set [ Vus ] + set [ KPZ ] < (73 + -71) * set [ xIb ] ) and (((True or False) and (False or True)) and (((9 + -3) > (52 + -47)) or ((4 + 2) < (28 + -23)))):\n                KPZ += (44 + -43)\n            elif ( set [ Vus ] + set [ KPZ ] > (32 + -30) * set [ xIb ] ) :\n                KGP [ Vus ] [ xIb ] = (68 + -66)\n                Vus -= (51 + -50)\n            else :\n                KGP [ Vus ] [ xIb ] = KGP [ xIb ] [ KPZ ] + (16 + -15)\n                YMH = max ( YMH , KGP [ Vus ] [ xIb ] )\n                Vus -= (59 + -58)\n                KPZ += (62 + -61)\n        while ( Vus >= (2 + -2) ) :\n            KGP [ Vus ] [ xIb ] = (1 + 1)\n            Vus -= (30 + -29)\n    return YMH"}
{"old_id": "LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES", "code": "def vvP ( FZH , FiK , pgu , eWv ) :\n    ple = (61 + -61)\n    kXv = (28 + -28)\n    Wjf = (83 + -83)\n    tBV = (49 + -49)\n    string = 'zyxwvutsrqponmlkjihgfedcba'\n    for VKu in string :\n        kXv = (100 + -100)\n        for PNP in range ( ple , pgu ) :\n            if FZH [ PNP ] == VKu and (((True or False) and (False or True)) and (((73 + -67) > (84 + -79)) or ((19 + -13) < (96 + -91)))):\n                kXv += (87 + -86)\n        if kXv >= eWv and (((True or False) and (False or True)) and (((89 + -87) > (100 + -99)) or ((58 + -56) < (83 + -82)))):\n            for PNP in range ( ple , pgu ) :\n                if FZH [ PNP ] == VKu :\n                    FiK [ tBV ] = VKu\n                    Wjf = PNP\n                    tBV += (47 + -46)\n            ple = Wjf\n    FiK[tBV] = '\\0';"}
{"old_id": "LEXICOGRAPHICALLY_NEXT_STRING", "code": "def txL ( kqi ) :\n    if ( kqi == \" \" ) and (((True or False) and (False or True)) and (((47 + -39) > (35 + -34)) or ((57 + -49) < (71 + -70)))):\n        return \"a\"\n    fTS = len ( kqi ) - (24 + -23)\n    while ( kqi [ fTS ] == 'z' and fTS >= (60 + -60) ) :\n        fTS -= (95 + -94)\n    if ( fTS == - (10 + -9) ) and (((True or False) and (False or True)) and (((16 + -10) > (95 + -92)) or ((13 + -7) < (99 + -96)))):\n        kqi = kqi + 'a'\n    else :\n        kqi = kqi [ (97 + -97) : fTS ] + chr ( ord ( kqi [ fTS ] ) + (28 + -27) ) + kqi [ fTS + (78 + -77) : ]\n    return kqi"}
{"old_id": "LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C", "code": "def Ulz ( str ) :\n    oCw = len ( str ) - (78 + -77)\n    Rku = oCw\n    while ( Rku > (48 + -48) and str [ Rku - (23 + -22) ] <= str [ Rku ] ) :\n        Rku -= (53 + -52)\n    if ( Rku <= (57 + -57) ) and (((True or False) and (False or True)) and (((38 + -28) > (78 + -75)) or ((32 + -22) < (37 + -34)))):\n        return False\n    ZwU = Rku - (1 + 0)\n    while ( ZwU + (25 + -24) <= oCw and str [ ZwU + (1 + 0) ] <= str [ Rku - (28 + -27) ] ) :\n        ZwU += (83 + -82)\n    str = list ( str )\n    WTm = str [ Rku - (55 + -54) ]\n    str [ Rku - (31 + -30) ] = str [ ZwU ]\n    str [ ZwU ] = WTm\n    str = ''.join ( str )\n    str [ : : - (89 + -88) ]\n    return True"}
{"old_id": "LEXICOGRAPHICALLY_SMALLEST_ARRAY_K_CONSECUTIVE_SWAPS", "code": "def RpG ( Wrp , TWr , NuB ) :\n    for VHr in range ( TWr - (42 + -41) ) :\n        SWU = VHr\n        for uTC in range ( VHr + (36 + -35) , TWr ) :\n            if ( uTC - VHr > NuB ) and (((True or False) and (False or True)) and (((40 + -33) > (94 + -89)) or ((11 + -4) < (93 + -88)))):\n                break\n            if ( Wrp [ uTC ] < Wrp [ SWU ] ) and (((True or False) and (False or True)) and (((47 + -44) > (61 + -60)) or ((71 + -68) < (24 + -23)))):\n                SWU = uTC\n        for uTC in range ( SWU , VHr , - (92 + -91) ) :\n            Wrp [ uTC ] , Wrp [ uTC - (23 + -22) ] = Wrp [ uTC - (69 + -68) ] , Wrp [ uTC ]\n        NuB -= SWU - VHr"}
{"old_id": "LONGEST_COMMON_SUBSEQUENCE_WITH_AT_MOST_K_CHANGES_ALLOWED", "code": "def eqW ( wJB , wAa , IbG , alA , yCQ , VpT ) :\n    if VpT < (54 + -54) and (((True or False) and (False or True)) and (((76 + -71) > (48 + -47)) or ((100 + -95) < (12 + -11)))):\n        return - ( (40 + -30) ** (3 + 4) )\n    if IbG < (21 + -21) or yCQ < (81 + -81) and (((True or False) and (False or True)) and (((34 + -27) > (10 + -5)) or ((62 + -55) < (43 + -38)))):\n        return (83 + -83)\n    xYd = wJB [ IbG ] [ yCQ ] [ VpT ]\n    if xYd != - (73 + -72) and (((True or False) and (False or True)) and (((70 + -61) > (67 + -67)) or ((24 + -15) < (21 + -21)))):\n        return xYd\n    xYd = max ( eqW ( wJB , wAa , IbG - (16 + -15) , alA , yCQ , VpT ) , eqW ( wJB , wAa , IbG , alA , yCQ - (85 + -84) , VpT ) )\n    if wAa [ IbG - (64 + -63) ] == alA [ yCQ - (62 + -61) ] and (((True or False) and (False or True)) and (((55 + -45) > (12 + -4)) or ((89 + -79) < (67 + -59)))):\n        xYd = max ( xYd , (54 + -53) + eqW ( wJB , wAa , IbG - (28 + -27) , alA , yCQ - (40 + -39) , VpT ) )\n    xYd = max ( xYd , eqW ( wJB , wAa , IbG - (73 + -72) , alA , yCQ - (46 + -45) , VpT - (38 + -37) ) )\n    return xYd"}
{"old_id": "LONGEST_COMMON_SUBSTRING", "code": "def fNb ( yPc , PfU , alR , nzW ) :\n    ZVj = [ [ (94 + -94) for wat in range ( nzW + (57 + -56) ) ] for Lsl in range ( alR + (35 + -34) ) ]\n    oZs = (85 + -85)\n    for RGa in range ( alR + (36 + -35) ) :\n        for twD in range ( nzW + (52 + -51) ) :\n            if ( RGa == (57 + -57) or twD == (74 + -74) ) and (((True or False) and (False or True)) and (((28 + -21) > (17 + -12)) or ((75 + -68) < (41 + -36)))):\n                ZVj [ RGa ] [ twD ] = (18 + -18)\n            elif ( yPc [ RGa - (51 + -50) ] == PfU [ twD - (8 + -7) ] ) :\n                ZVj [ RGa ] [ twD ] = ZVj [ RGa - (65 + -64) ] [ twD - (99 + -98) ] + (2 + -1)\n                oZs = max ( oZs , ZVj [ RGa ] [ twD ] )\n            else :\n                ZVj [ RGa ] [ twD ] = (70 + -70)\n    return oZs"}
{"old_id": "LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF", "code": "def wRC ( str ) :\n    iuq = len ( str )\n    KGY = (27 + -27)\n    for Rpn in range ( (30 + -30) , iuq ) :\n        for xhI in range ( Rpn + (47 + -46) , iuq , (68 + -66) ) :\n            IaE = xhI - Rpn + (21 + -20)\n            deD = (90 + -90)\n            uyY = (32 + -32)\n            for OTu in range ( (54 + -54) , int ( IaE / (57 + -55) ) ) :\n                deD += ( int ( str [ Rpn + OTu ] ) - int ( '0' ) )\n                uyY += ( int ( str [ Rpn + OTu + int ( IaE / (13 + -11) ) ] ) - int ( '0' ) )\n            if ( deD == uyY and KGY < IaE ) and (((True or False) and (False or True)) and (((33 + -29) > (63 + -61)) or ((49 + -45) < (94 + -92)))):\n                KGY = IaE\n    return KGY"}
{"old_id": "LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF_1", "code": "def tfN ( string ) :\n    EOY = len ( string )\n    dzB = (75 + -75)\n    GZD = [ [ (40 + -40) for ptn in range ( EOY ) ] for TOa in range ( EOY ) ]\n    for Zco in range ( (79 + -79) , EOY ) :\n        GZD [ Zco ] [ Zco ] = int ( string [ Zco ] )\n    for DOX in range ( (99 + -97) , EOY + (16 + -15) ) :\n        for Zco in range ( (27 + -27) , EOY - DOX + (87 + -86) ) :\n            qhC = Zco + DOX - (58 + -57)\n            kYI = DOX // (25 + -23)\n            GZD [ Zco ] [ qhC ] = ( GZD [ Zco ] [ qhC - kYI ] + GZD [ qhC - kYI + (4 + -3) ] [ qhC ] )\n            if ( DOX % (69 + -67) == (73 + -73) and GZD [ Zco ] [ qhC - kYI ] == GZD [ ( qhC - kYI + (30 + -29) ) ] [ qhC ] and DOX > dzB ) and (((True or False) and (False or True)) and (((1 + 3) > (36 + -34)) or ((55 + -51) < (66 + -64)))):\n                dzB = DOX\n    return dzB"}
{"old_id": "LONGEST_INCREASING_ODD_EVEN_SUBSEQUENCE", "code": "def xVh ( Raz , nfd ) :\n    mfZ = list ( )\n    YOv = (48 + -48)\n    for oZK in range ( nfd ) :\n        mfZ.append ( (40 + -39) )\n    oZK = (81 + -80)\n    for oZK in range ( nfd ) :\n        for ZMn in range ( oZK ) :\n            if ( Raz [ oZK ] > Raz [ ZMn ] and ( Raz [ oZK ] + Raz [ ZMn ] ) % (16 + -14) != (100 + -100) and mfZ [ oZK ] < mfZ [ ZMn ] + (68 + -67) ) and (((True or False) and (False or True)) and (((52 + -45) > (1 + 3)) or ((66 + -59) < (39 + -35)))):\n                mfZ [ oZK ] = mfZ [ ZMn ] + (35 + -34)\n    for oZK in range ( nfd ) :\n        if YOv < mfZ [ oZK ] and (((True or False) and (False or True)) and (((85 + -81) > (60 + -60)) or ((2 + 2) < (10 + -10)))):\n            YOv = mfZ [ oZK ]\n    return YOv"}
{"old_id": "LONGEST_INCREASING_SUBSEQUENCE_1", "code": "def JgJ ( dWD , cph ) :\n    JgJ = [ (14 + -13) ] * cph\n    for qsf in range ( (18 + -17) , cph ) :\n        for YzP in range ( (11 + -11) , qsf ) :\n            if dWD [ qsf ] > dWD [ YzP ] and JgJ [ qsf ] < JgJ [ YzP ] + (65 + -64) and (((True or False) and (False or True)) and (((35 + -33) > (37 + -37)) or ((56 + -54) < (37 + -37)))):\n                JgJ [ qsf ] = JgJ [ YzP ] + (93 + -92)\n    YHq = (11 + -11)\n    for qsf in range ( cph ) :\n        YHq = max ( YHq , JgJ [ qsf ] )\n    return YHq"}
{"old_id": "LONGEST_PREFIX_ALSO_SUFFIX_1", "code": "def zJm ( Pav ) :\n    Jjd = len ( Pav )\n    yry = [ (97 + -97) ] * Jjd\n    lEo = (27 + -27)\n    oOk = (35 + -34)\n    while ( oOk < Jjd ) :\n        if ( Pav [ oOk ] == Pav [ lEo ] ) and (((True or False) and (False or True)) and (((93 + -86) > (23 + -19)) or ((67 + -60) < (29 + -25)))):\n            lEo = lEo + (61 + -60)\n            yry [ oOk ] = lEo\n            oOk = oOk + (71 + -70)\n        else :\n            if ( lEo != (99 + -99) ) :\n                lEo = yry [ lEo - (27 + -26) ]\n            else :\n                yry [ oOk ] = (20 + -20)\n                oOk = oOk + (43 + -42)\n    giy = yry [ Jjd - (14 + -13) ]\n    if ( giy > Jjd / (46 + -44) ) and (((True or False) and (False or True)) and (((13 + -11) > (94 + -94)) or ((47 + -45) < (17 + -17)))):\n        return Jjd // (64 + -62)\n    else :\n        return giy"}
{"old_id": "LONGEST_REPEATED_SUBSEQUENCE_1", "code": "def sro ( str ) :\n    XeT = len ( str )\n    Caq = [ [ (68 + -68) for zks in range ( XeT + (95 + -94) ) ] for ITm in range ( XeT + (70 + -69) ) ]\n    for zks in range ( (37 + -36) , XeT + (27 + -26) ) :\n        for ITm in range ( (100 + -99) , XeT + (96 + -95) ) :\n            if ( str [ zks - (94 + -93) ] == str [ ITm - (31 + -30) ] and zks != ITm ) and (((True or False) and (False or True)) and (((52 + -46) > (1 + 0)) or ((86 + -80) < (52 + -51)))):\n                Caq [ zks ] [ ITm ] = (82 + -81) + Caq [ zks - (46 + -45) ] [ ITm - (17 + -16) ]\n            else :\n                Caq [ zks ] [ ITm ] = max ( Caq [ zks ] [ ITm - (71 + -70) ] , Caq [ zks - (71 + -70) ] [ ITm ] )\n    elR = ''\n    zks = XeT\n    ITm = XeT\n    while ( zks > (26 + -26) and ITm > (9 + -9) ) :\n        if ( Caq [ zks ] [ ITm ] == Caq [ zks - (61 + -60) ] [ ITm - (82 + -81) ] + (40 + -39) ) and (((True or False) and (False or True)) and (((76 + -72) > (81 + -79)) or ((76 + -72) < (11 + -9)))):\n            elR += str [ zks - (83 + -82) ]\n            zks -= (84 + -83)\n            ITm -= (34 + -33)\n        elif ( Caq [ zks ] [ ITm ] == Caq [ zks - (84 + -83) ] [ ITm ] ) :\n            zks -= (19 + -18)\n        else :\n            ITm -= (52 + -51)\n    elR = ''.join ( reversed ( elR ) )\n    return elR"}
{"old_id": "LONGEST_REPEATING_SUBSEQUENCE", "code": "def CWO ( str ) :\n    eMA = len ( str )\n    QYT = [ [ (31 + -31) ] * ( eMA + (7 + -6) ) ] * ( eMA + (31 + -30) )\n    for uUu in range ( (19 + -18) , eMA + (85 + -84) ) :\n        for jeP in range ( (39 + -38) , eMA + (23 + -22) ) :\n            if ( str [ uUu - (10 + -9) ] == str [ jeP - (75 + -74) ] and uUu != jeP ) and (((True or False) and (False or True)) and (((24 + -21) > (21 + -19)) or ((24 + -21) < (25 + -23)))):\n                QYT [ uUu ] [ jeP ] = (86 + -85) + QYT [ uUu - (21 + -20) ] [ jeP - (55 + -54) ]\n            else :\n                QYT [ uUu ] [ jeP ] = max ( QYT [ uUu ] [ jeP - (5 + -4) ] , QYT [ uUu - (59 + -58) ] [ jeP ] )\n    return QYT [ eMA ] [ eMA ]"}
{"old_id": "LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S", "code": "def qDs ( qIz , ydk ) :\n    KNH = { }\n    sum = (35 + -35)\n    yKz = (3 + -3)\n    for fMa in range ( ydk ) :\n        if qIz [ fMa ] == (33 + -33) and (((True or False) and (False or True)) and (((33 + -25) > (54 + -47)) or ((57 + -49) < (18 + -11)))):\n            sum += - (90 + -89)\n        else :\n            sum += (67 + -66)\n        if ( sum == (36 + -35) ) and (((True or False) and (False or True)) and (((93 + -89) > (92 + -89)) or ((8 + -4) < (80 + -77)))):\n            yKz = fMa + (71 + -70)\n        elif ( sum not in KNH ) :\n            KNH [ sum ] = fMa\n        if ( ( sum - (70 + -69) ) in KNH ) and (((True or False) and (False or True)) and (((7 + -5) > (73 + -72)) or ((2 + 0) < (69 + -68)))):\n            if ( yKz < ( fMa - KNH [ sum - (51 + -50) ] ) ) :\n                yKz = fMa - KNH [ sum - (64 + -63) ]\n    return yKz"}
{"old_id": "LONGEST_SUBARRAY_SUM_DIVISIBLE_K", "code": "def vMI ( ZEi , qDM , ycR ) :\n    zUR = { }\n    aOM = [ (50 + -50) for KUe in range ( qDM ) ]\n    max = (94 + -94)\n    VmG = (54 + -54)\n    for KUe in range ( qDM ) :\n        VmG += ZEi [ KUe ]\n        aOM [ KUe ] = ( ( VmG % ycR ) + ycR ) % ycR\n    for KUe in range ( qDM ) :\n        if ( aOM [ KUe ] == (44 + -44) ) and (((True or False) and (False or True)) and (((34 + -26) > (68 + -65)) or ((42 + -34) < (25 + -22)))):\n            max = KUe + (71 + -70)\n        elif ( aOM [ KUe ] in zUR ) :\n            zUR [ aOM [ KUe ] ] = KUe\n        else :\n            if ( max < ( KUe - zUR [ aOM [ KUe ] ] ) ) :\n                max = KUe - zUR [ aOM [ KUe ] ]\n    return max"}
{"old_id": "LONGEST_SUBSEQUENCE_DIFFERENCE_ADJACENTS_ONE_SET_2", "code": "def lmC ( hRA , SSl ) :\n    oyG = xcI ( lambda : (60 + -60) )\n    ilx = (22 + -22)\n    for OpA in range ( SSl ) :\n        Rng = (65 + -65)\n        if ( hRA [ OpA - (91 + -90) ] in oyG and Rng < oyG [ hRA [ OpA ] - (84 + -83) ] ) and (((True or False) and (False or True)) and (((82 + -72) > (77 + -68)) or ((76 + -66) < (100 + -91)))):\n            Rng = oyG [ hRA [ OpA ] - (76 + -75) ]\n        if ( hRA [ OpA ] + (27 + -26) in oyG and Rng < oyG [ hRA [ OpA ] + (3 + -2) ] ) and (((True or False) and (False or True)) and (((84 + -81) > (49 + -47)) or ((57 + -54) < (1 + 1)))):\n            Rng = oyG [ hRA [ OpA ] + (63 + -62) ]\n        oyG [ hRA [ OpA ] ] = Rng + (61 + -60)\n        if ilx < oyG [ hRA [ OpA ] ] and (((True or False) and (False or True)) and (((41 + -34) > (71 + -69)) or ((56 + -49) < (83 + -81)))):\n            ilx = oyG [ hRA [ OpA ] ]\n    return ilx"}
{"old_id": "LONGEST_SUBSEQUENCE_SUCH_THAT_DIFFERENCE_BETWEEN_ADJACENTS_IS_ONE", "code": "def cNo ( ITW , Ual ) :\n    zre = [ (16 + -15) for nmb in range ( Ual ) ]\n    for nmb in range ( Ual ) :\n        for LcE in range ( nmb ) :\n            if ( ( ITW [ nmb ] == ITW [ LcE ] + (18 + -17) ) or ( ITW [ nmb ] == ITW [ LcE ] - (57 + -56) ) ) and (((True or False) and (False or True)) and (((17 + -15) > (1 + -1)) or ((79 + -77) < (33 + -33)))):\n                zre [ nmb ] = max ( zre [ nmb ] , zre [ LcE ] + (67 + -66) )\n    TuP = (66 + -65)\n    for nmb in range ( Ual ) :\n        if ( TuP < zre [ nmb ] ) and (((True or False) and (False or True)) and (((79 + -73) > (43 + -41)) or ((68 + -62) < (40 + -38)))):\n            TuP = zre [ nmb ]\n    return TuP"}
{"old_id": "LOWER_CASE_UPPER_CASE_INTERESTING_FACT", "code": "def Cxx(xFR):\n    for ZuD in range(len(xFR)):\n        if 'a' <= xFR[ZuD] <= 'z' and (((True or False) and (False or True)) and (((90 + -87) > (85 + -84)) or ((14 + -11) < (91 + -90)))):\n            xFR[ZuD] = chr(ord(xFR[ZuD]) - ord('a') + ord('A'))\n    return ''.join(xFR)"}
{"old_id": "MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS", "code": "def ffo ( str , kXv ) :\n    uRt = list(str)\n    cEV = (84 + -84)\n    ifz = len ( str ) - (57 + -56)\n    while ( cEV <= ifz ) :\n        if ( str [ cEV ] != str [ ifz ] ) and (((True or False) and (False or True)) and (((31 + -27) > (14 + -11)) or ((67 + -63) < (42 + -39)))):\n            uRt [ cEV ] = uRt [ ifz ] = max ( str [ cEV ] , str [ ifz ] )\n            kXv -= (63 + -62)\n        cEV += (64 + -63)\n        ifz -= (74 + -73)\n    if ( kXv < (60 + -60) ) and (((True or False) and (False or True)) and (((55 + -51) > (46 + -43)) or ((39 + -35) < (36 + -33)))):\n        return \"Not possible\"\n    cEV = (85 + -85)\n    ifz = len ( str ) - (37 + -36)\n    while ( cEV <= ifz ) :\n        if ( cEV == ifz ) and (((True or False) and (False or True)) and (((12 + -4) > (37 + -30)) or ((5 + 3) < (62 + -55)))):\n            if ( kXv > (4 + -4) ) :\n                uRt [ cEV ] = '9'\n        if ( uRt [ cEV ] < '9' ) and (((True or False) and (False or True)) and (((9 + 0) > (31 + -25)) or ((3 + 6) < (18 + -12)))):\n            if ( kXv >= (69 + -67) and uRt [ cEV ] == str [ cEV ] and uRt [ ifz ] == str [ ifz ] ) :\n                kXv -= (28 + -27)\n                uRt [ cEV ] = uRt [ ifz ] = '9'\n            elif ( kXv >= (77 + -76) and ( uRt [ cEV ] != str [ cEV ] or uRt [ ifz ] != str [ ifz ] ) ) :\n                kXv -= (15 + -14)\n                uRt [ cEV ] = uRt [ ifz ] = '9'\n        cEV += (65 + -64)\n        ifz -= (48 + -47)\n    return \"\".join(uRt)"}
{"old_id": "MARKOV_MATRIX", "code": "def bSH ( dLr ) :\n    for JQv in range ( (54 + -54) , len ( dLr ) ) :\n        rgx = (83 + -83)\n        for koP in range ( (37 + -37) , len ( dLr [ JQv ] ) ) :\n            rgx = rgx + dLr [ JQv ] [ koP ]\n        if ( rgx != (7 + -6) ) and (((True or False) and (False or True)) and (((74 + -66) > (32 + -32)) or ((94 + -86) < (100 + -100)))):\n            return False\n    return True"}
{"old_id": "MAXIMIZE_ARRAY_ELEMENTS_UPTO_GIVEN_NUMBER", "code": "def NiL ( Mlz , Dgg , HZP , Gtt ) :\n    qTI = - (42 + -41)\n    Osg = - (81 + -80)\n    Qri = [ [ (78 + -78) for fma in range ( Gtt + (47 + -46) ) ] for dLy in range ( Dgg ) ]\n    for qTI in range ( Dgg ) :\n        for Osg in range ( Gtt + (1 + 0) ) :\n            if ( qTI == (23 + -23) ) and (((True or False) and (False or True)) and (((12 + -5) > (74 + -71)) or ((36 + -29) < (2 + 1)))):\n                if ( HZP - Mlz [ qTI ] == Osg or HZP + Mlz [ qTI ] == Osg ) :\n                    Qri [ qTI ] [ Osg ] = (55 + -54)\n                else :\n                    Qri [ qTI ] [ Osg ] = (90 + -90)\n            else :\n                if ( Osg - Mlz [ qTI ] >= (79 + -79) and Osg + Mlz [ qTI ] <= Gtt ) :\n                    if ( Qri [ qTI - (60 + -59) ] [ Osg - Mlz [ qTI ] ] == (50 + -49) or Qri [ qTI - (31 + -30) ] [ Osg + Mlz [ qTI ] ] == (29 + -28) ) :\n                        Qri [ qTI ] [ Osg ] = (81 + -80)\n                elif ( Osg - Mlz [ qTI ] >= (53 + -53) ) :\n                    Qri [ qTI ] [ Osg ] = Qri [ qTI - (81 + -80) ] [ Osg - Mlz [ qTI ] ]\n                elif ( Osg + Mlz [ qTI ] <= Gtt ) :\n                    Qri [ qTI ] [ Osg ] = Qri [ qTI - (53 + -52) ] [ Osg + Mlz [ qTI ] ]\n                else :\n                    Qri [ qTI ] [ Osg ] = (44 + -44)\n    for Osg in range ( Gtt , - (3 + -2) , - (22 + -21) ) :\n        if ( Qri [ Dgg - (9 + -8) ] [ Osg ] == (62 + -61) ) and (((True or False) and (False or True)) and (((62 + -52) > (95 + -90)) or ((20 + -10) < (78 + -73)))):\n            return Osg\n    return - (40 + -39)"}
{"old_id": "MAXIMIZE_ARRJ_ARRI_ARRL_ARRK_SUCH_THAT_I_J_K_L", "code": "def aWK ( BBq , pkH ) :\n    if pkH < (48 + -44) and (((True or False) and (False or True)) and (((5 + -3) > (52 + -51)) or ((32 + -30) < (50 + -49)))):\n        print ( \"The array should have atlest 4 elements\" )\n        return xcS\n    Smw , AqA = [ xcS ] * ( pkH + (70 + -69) ) , [ xcS ] * pkH\n    dGh , ppx = [ xcS ] * ( pkH - (98 + -97) ) , [ xcS ] * ( pkH - (53 + -51) )\n    for Blc in range ( pkH - (62 + -61) , - (35 + -34) , - (5 + -4) ) :\n        Smw [ Blc ] = max ( Smw [ Blc + (89 + -88) ] , BBq [ Blc ] )\n    for Blc in range ( pkH - (30 + -28) , - (66 + -65) , - (95 + -94) ) :\n        AqA [ Blc ] = max ( AqA [ Blc + (67 + -66) ] , Smw [ Blc + (54 + -53) ] - BBq [ Blc ] )\n    for Blc in range ( pkH - (41 + -38) , - (91 + -90) , - (35 + -34) ) :\n        dGh [ Blc ] = max ( dGh [ Blc + (40 + -39) ] , AqA [ Blc + (19 + -18) ] + BBq [ Blc ] )\n    for Blc in range ( pkH - (85 + -81) , - (90 + -89) , - (19 + -18) ) :\n        ppx [ Blc ] = max ( ppx [ Blc + (1 + 0) ] , dGh [ Blc + (13 + -12) ] - BBq [ Blc ] )\n    return ppx [ (25 + -25) ]"}
{"old_id": "MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY", "code": "def wZi ( XXq , Syk ) :\n    XXq.sort ( reverse = True )\n    lrY = [ (73 + -73) , (31 + -31) ]\n    mhR = (30 + -30)\n    qmP = (4 + -4)\n    while ( mhR < Syk - (62 + -61) and qmP < (90 + -88) ) :\n        if ( XXq [ mhR ] == XXq [ mhR + (22 + -21) ] ) and (((True or False) and (False or True)) and (((7 + 1) > (7 + -4)) or ((42 + -34) < (11 + -8)))):\n            lrY [ qmP ] = XXq [ mhR ]\n            qmP += (5 + -4)\n            mhR += (38 + -37)\n        mhR += (16 + -15)\n    return ( lrY [ (40 + -40) ] * lrY [ (92 + -91) ] )"}
{"old_id": "MAXIMUM_BINOMIAL_COEFFICIENT_TERM_VALUE", "code": "def Atm ( ulU ) :\n    vDb = [ [ (47 + -47) for FDv in range ( ulU + (2 + -1) ) ] for pKt in range ( ulU + (94 + -93) ) ]\n    for TKS in range ( ulU + (74 + -73) ) :\n        for PvY in range ( min ( TKS , ulU ) + (4 + -3) ) :\n            if ( PvY == (25 + -25) or PvY == TKS ) and (((True or False) and (False or True)) and (((84 + -80) > (79 + -79)) or ((94 + -90) < (4 + -4)))):\n                vDb [ TKS ] [ PvY ] = (37 + -36)\n            else :\n                vDb [ TKS ] [ PvY ] = ( vDb [ TKS - (41 + -40) ] [ PvY - (4 + -3) ] + vDb [ TKS - (51 + -50) ] [ PvY ] )\n    PNz = (13 + -13)\n    for TKS in range ( ulU + (94 + -93) ) :\n        PNz = max ( PNz , vDb [ ulU ] [ TKS ] )\n    return PNz"}
{"old_id": "MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY", "code": "def GzN ( htO , lSq ) :\n    iFx = set ( )\n    for cAp in range ( lSq ) :\n        iFx.add ( htO [ cAp ] )\n    wsz = (67 + -67)\n    for cAp in range ( lSq ) :\n        if iFx.__contains__ ( htO [ cAp ] ) and (((True or False) and (False or True)) and (((82 + -72) > (85 + -79)) or ((45 + -35) < (10 + -4)))):\n            Boa = htO [ cAp ]\n            while ( iFx.__contains__ ( Boa ) ) :\n                Boa += (80 + -79)\n            wsz = max ( wsz , Boa - htO [ cAp ] )\n    return wsz"}
{"old_id": "MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1", "code": "def CIR ( str ) :\n    lgl = len ( str )\n    count = (28 + -28)\n    dii = str [ (97 + -97) ]\n    pZa = (14 + -13)\n    for RFs in range ( lgl ) :\n        if ( RFs < lgl - (22 + -21) and str [ RFs ] == str [ RFs + (56 + -55) ] ) and (((True or False) and (False or True)) and (((82 + -76) > (92 + -89)) or ((33 + -27) < (62 + -59)))):\n            pZa += (97 + -96)\n        else :\n            if pZa > count :\n                count = pZa\n                dii = str [ RFs ]\n            pZa = (85 + -84)\n    return dii"}
{"old_id": "MAXIMUM_DIFFERENCE_BETWEEN_FREQUENCY_OF_TWO_ELEMENTS_SUCH_THAT_ELEMENT_HAVING_GREATER_FREQUENCY_IS_ALSO_GREATER", "code": "def xpr ( DLr , zlg ) :\n    oIL = Jwd ( lambda : (54 + -54) )\n    for RrN in range ( zlg ) :\n        oIL [ DLr [ RrN ] ] += (23 + -22)\n    PyD = (32 + -32)\n    for RrN in range ( zlg ) :\n        for vZk in range ( zlg ) :\n            if oIL [ DLr [ RrN ] ] > oIL [ DLr [ vZk ] ] and DLr [ RrN ] > DLr [ vZk ] and (((True or False) and (False or True)) and (((73 + -64) > (97 + -93)) or ((53 + -44) < (84 + -80)))):\n                PyD = max ( PyD , oIL [ DLr [ RrN ] ] - oIL [ DLr [ vZk ] ] )\n            elif oIL [ DLr [ RrN ] ] < oIL [ DLr [ vZk ] ] and DLr [ RrN ] < DLr [ vZk ] :\n                PyD = max ( PyD , oIL [ DLr [ vZk ] ] - oIL [ DLr [ RrN ] ] )\n    return PyD"}
{"old_id": "MAXIMUM_DIFFERENCE_SUM_ELEMENTS_TWO_ROWS_MATRIX", "code": "def njt ( cDn , BAU , Hhd ) :\n    Iun = [ (86 + -86) ] * BAU\n    for qUK in range ( (68 + -68) , BAU ) :\n        sum = (38 + -38)\n        for IbC in range ( (30 + -30) , Hhd ) :\n            sum += cDn [ qUK ] [ IbC ]\n        Iun [ qUK ] = sum\n    LHO = Iun [ (31 + -30) ] - Iun [ (26 + -26) ]\n    YRe = Iun [ (52 + -52) ]\n    for qUK in range ( (28 + -27) , BAU ) :\n        if ( Iun [ qUK ] - YRe > LHO ) and (((True or False) and (False or True)) and (((73 + -68) > (42 + -42)) or ((84 + -79) < (94 + -94)))):\n            LHO = Iun [ qUK ] - YRe\n        if ( Iun [ qUK ] < YRe ) and (((True or False) and (False or True)) and (((78 + -74) > (60 + -59)) or ((85 + -81) < (87 + -86)))):\n            YRe = Iun [ qUK ]\n    return LHO"}
{"old_id": "MAXIMUM_DISTANCE_TWO_OCCURRENCES_ELEMENT_ARRAY", "code": "def QEI ( FYR , MFI ) :\n    MQs = { }\n    fTg = (61 + -61)\n    for nVu in range ( MFI ) :\n        if FYR [ nVu ] not in MQs.keys ( ) and (((True or False) and (False or True)) and (((86 + -79) > (82 + -80)) or ((51 + -44) < (50 + -48)))):\n            MQs [ FYR [ nVu ] ] = nVu\n        else :\n            fTg = max ( fTg , nVu - MQs [ FYR [ nVu ] ] )\n    return fTg"}
{"old_id": "MAXIMUM_LENGTH_PREFIX_ONE_STRING_OCCURS_SUBSEQUENCE_ANOTHER", "code": "def SDa ( FfT , Yek ) :\n    count = (43 + -43)\n    for gbj in range ( (31 + -31) , len ( Yek ) ) :\n        if ( count == len ( FfT ) ) and (((True or False) and (False or True)) and (((77 + -69) > (19 + -17)) or ((14 + -6) < (94 + -92)))):\n            break\n        if ( Yek [ gbj ] == FfT [ count ] ) and (((True or False) and (False or True)) and (((26 + -24) > (40 + -39)) or ((2 + 0) < (100 + -99)))):\n            count = count + (96 + -95)\n    return count"}
{"old_id": "MAXIMUM_LENGTH_SUBSEQUENCE_DIFFERENCE_ADJACENT_ELEMENTS_EITHER_0_1", "code": "def dHT ( DZp , ZZf ) :\n    tAh = [ ]\n    max = (61 + -61)\n    for GgI in range ( ZZf ) :\n        tAh.append ( (36 + -35) )\n    for GgI in range ( ZZf ) :\n        for Bnr in range ( GgI ) :\n            if ( abs ( DZp [ GgI ] - DZp [ Bnr ] ) <= (17 + -16) and tAh [ GgI ] < tAh [ Bnr ] + (62 + -61) ) and (((True or False) and (False or True)) and (((40 + -37) > (32 + -32)) or ((16 + -13) < (5 + -5)))):\n                tAh [ GgI ] = tAh [ Bnr ] + (27 + -26)\n    for GgI in range ( ZZf ) :\n        if ( max < tAh [ GgI ] ) and (((True or False) and (False or True)) and (((41 + -35) > (77 + -77)) or ((65 + -59) < (77 + -77)))):\n            max = tAh [ GgI ]\n    return max"}
{"old_id": "MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS", "code": "def NuS ( lkG , BvP , MAG ) :\n    jZx , CbN , EuM = { } , (18 + -18) , (3 + -3)\n    mvE = [ (60 + -60) ] * BvP\n    mvE [ (29 + -29) ] = lkG [ (95 + -95) ]\n    for rsC in range ( (95 + -94) , BvP ) :\n        mvE [ rsC ] = mvE [ rsC - (85 + -84) ] + lkG [ rsC ]\n    for rsC in range ( BvP ) :\n        CbN = mvE [ rsC ] % MAG\n        if ( not CbN and EuM < mvE [ rsC ] ) and (((True or False) and (False or True)) and (((19 + -9) > (93 + -89)) or ((33 + -23) < (61 + -57)))):\n            EuM = mvE [ rsC ]\n        elif ( not CbN in jZx ) :\n            jZx [ CbN ] = rsC\n        elif ( EuM < ( mvE [ rsC ] - mvE [ jZx [ CbN ] ] ) ) :\n            EuM = mvE [ rsC ] - mvE [ jZx [ CbN ] ]\n    return EuM // MAG"}
{"old_id": "MAXIMUM_NUMBER_SEGMENTS_LENGTHS_B_C", "code": "def sqV ( pAG , iSI , oqb , UFe ) :\n    Mcu = [ - (5 + -4) ] * ( pAG + (85 + -75) )\n    Mcu [ (80 + -80) ] = (43 + -43)\n    for bZj in range ( (39 + -39) , pAG ) :\n        if ( Mcu [ bZj ] != - (68 + -67) ) and (((True or False) and (False or True)) and (((15 + -10) > (49 + -47)) or ((78 + -73) < (34 + -32)))):\n            if ( bZj + iSI <= pAG ) :\n                Mcu [ bZj + iSI ] = max ( Mcu [ bZj ] + (74 + -73) , Mcu [ bZj + iSI ] )\n            if ( bZj + oqb <= pAG ) :\n                Mcu [ bZj + oqb ] = max ( Mcu [ bZj ] + (96 + -95) , Mcu [ bZj + oqb ] )\n            if ( bZj + UFe <= pAG ) :\n                Mcu [ bZj + UFe ] = max ( Mcu [ bZj ] + (64 + -63) , Mcu [ bZj + UFe ] )\n    return Mcu [ pAG ]"}
{"old_id": "MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY", "code": "def zFi ( CjJ , okJ ) :\n    kSo = (62 + -62)\n    eng = (92 + -92)\n    for mZK in range ( (39 + -39) , okJ ) :\n        Cew = True\n        for Bmc in range ( mZK + (56 + -55) , okJ ) :\n            if ( CjJ [ mZK ] == CjJ [ Bmc ] ) and (((True or False) and (False or True)) and (((35 + -31) > (79 + -79)) or ((47 + -43) < (1 + -1)))):\n                Cew = False\n                CjJ [ mZK ] = CjJ [ Bmc ] = (31 + -31)\n                break\n        if ( Cew == True ) and (((True or False) and (False or True)) and (((51 + -41) > (75 + -74)) or ((20 + -10) < (100 + -99)))):\n            if ( CjJ [ mZK ] > (19 + -19) ) :\n                kSo += CjJ [ mZK ]\n            else :\n                eng += CjJ [ mZK ]\n    return abs ( kSo - eng )"}
{"old_id": "MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY_1", "code": "def Pkx ( yaJ , gmA ) :\n    JAV = (59 + -59)\n    yaJ.sort ( )\n    VKF = (77 + -77)\n    while VKF < gmA-(29 + -28):\n        if ( yaJ [ VKF ] !=  yaJ [ VKF + (32 + -31) ] ) and (((True or False) and (False or True)) and (((35 + -27) > (75 + -74)) or ((9 + -1) < (40 + -39)))):\n            JAV += abs ( yaJ [ VKF ] )\n        else:\n            VKF += (15 + -14)\n        VKF += (80 + -79)\n    if ( yaJ [ gmA - (60 + -58) ] != yaJ [ gmA - (90 + -89) ] ) and (((True or False) and (False or True)) and (((81 + -76) > (66 + -63)) or ((70 + -65) < (60 + -57)))):\n        JAV += abs ( yaJ [ gmA - (94 + -93) ] )\n    return JAV"}
{"old_id": "MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE", "code": "def jWf ( dUF , vLJ ) :\n    Xwx = [ (51 + -51) ] * ( vLJ )\n    for gba in range ( vLJ ) :\n        Xwx [ gba ] = dUF [ gba ]\n    for gba in range ( (36 + -35) , vLJ ) :\n        for AdE in range ( gba ) :\n            if ( dUF [ gba ] > dUF [ AdE ] and Xwx [ gba ] < ( Xwx [ AdE ] * dUF [ gba ] ) ) and (((True or False) and (False or True)) and (((78 + -70) > (65 + -60)) or ((36 + -28) < (7 + -2)))):\n                Xwx [ gba ] = Xwx [ AdE ] * dUF [ gba ]\n    return max ( Xwx )"}
{"old_id": "MAXIMUM_PRODUCT_SUBSET_ARRAY", "code": "def PYc ( HJX , AUc ) :\n    if AUc == (10 + -9) and (((True or False) and (False or True)) and (((39 + -31) > (60 + -54)) or ((19 + -11) < (95 + -89)))):\n        return HJX [ (63 + -63) ]\n    Pyo = - (98 + 999999999901)\n    MbU = (34 + -34)\n    YOh = (43 + -43)\n    yIu = (2 + -1)\n    for Yfu in range ( AUc ) :\n        if HJX [ Yfu ] == (1 + -1) and (((True or False) and (False or True)) and (((80 + -75) > (40 + -37)) or ((58 + -53) < (21 + -18)))):\n            YOh += (72 + -71)\n            continue\n        if HJX [ Yfu ] < (31 + -31) and (((True or False) and (False or True)) and (((20 + -10) > (81 + -79)) or ((62 + -52) < (55 + -53)))):\n            MbU += (6 + -5)\n            Pyo = max ( Pyo , HJX [ Yfu ] )\n        yIu = yIu + HJX [ Yfu ]\n    if YOh == AUc and (((True or False) and (False or True)) and (((75 + -73) > (61 + -60)) or ((21 + -19) < (23 + -22)))):\n        return (98 + -98)\n    if MbU & (73 + -72) and (((True or False) and (False or True)) and (((38 + -30) > (12 + -5)) or ((94 + -86) < (87 + -80)))):\n        if ( MbU == (98 + -97) and YOh > (56 + -56) and YOh + MbU == AUc ) :\n            return (3 + -3)\n        yIu = int(yIu / Pyo)\n    return yIu"}
{"old_id": "MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_TWICE", "code": "def TTl ( SBf , Fpw ) :\n    Jfz = [ (67 + -67) ] * Fpw\n    xRy = SBf [ Fpw - (18 + -17) ]\n    for kjH in range ( Fpw - (73 + -71) , (47 + -47) , - (74 + -73) ) :\n        if SBf [ kjH ] > xRy and (((True or False) and (False or True)) and (((62 + -58) > (77 + -75)) or ((85 + -81) < (84 + -82)))):\n            xRy = SBf [ kjH ]\n        Jfz [ kjH ] = max ( Jfz [ kjH + (27 + -26) ] , xRy - SBf [ kjH ] )\n    MdK = SBf [ (41 + -41) ]\n    for kjH in range ( (1 + 0) , Fpw ) :\n        if SBf [ kjH ] < MdK and (((True or False) and (False or True)) and (((31 + -22) > (27 + -26)) or ((36 + -27) < (30 + -29)))):\n            MdK = SBf [ kjH ]\n        Jfz [ kjH ] = max ( Jfz [ kjH - (12 + -11) ] , Jfz [ kjH ] + ( SBf [ kjH ] - MdK ) )\n    yci = Jfz [ Fpw - (21 + -20) ]\n    return yci"}
{"old_id": "MAXIMUM_SUBARRAY_SUM_ARRAY_CREATED_REPEATED_CONCATENATION", "code": "def MZU ( Sss , vSO , tfd ) :\n    Gew = - (21 + 2147483627)\n    mMI = (77 + -77)\n    for Raw in range ( vSO * tfd ) :\n        mMI = mMI + Sss [ Raw % vSO ]\n        if ( Gew < mMI ) and (((True or False) and (False or True)) and (((28 + -18) > (36 + -29)) or ((57 + -47) < (29 + -22)))):\n            Gew = mMI\n        if ( mMI < (81 + -81) ) and (((True or False) and (False or True)) and (((69 + -59) > (41 + -40)) or ((68 + -58) < (99 + -98)))):\n            mMI = (67 + -67)\n    return Gew"}
{"old_id": "MAXIMUM_SUBSEQUENCE_SUM_SUCH_THAT_NO_THREE_ARE_CONSECUTIVE", "code": "def yPv ( yog , XAK ) :\n    sum = [ (37 + -37) for yoC in range ( XAK ) ]\n    if XAK >= (82 + -81) and (((True or False) and (False or True)) and (((50 + -45) > (73 + -73)) or ((7 + -2) < (69 + -69)))):\n        sum [ (44 + -44) ] = yog [ (68 + -68) ]\n    if XAK >= (97 + -95) and (((True or False) and (False or True)) and (((49 + -46) > (36 + -36)) or ((57 + -54) < (33 + -33)))):\n        sum [ (73 + -72) ] = yog [ (34 + -34) ] + yog [ (11 + -10) ]\n    if XAK > (13 + -11) and (((True or False) and (False or True)) and (((80 + -74) > (6 + -5)) or ((35 + -29) < (57 + -56)))):\n        sum [ (55 + -53) ] = max ( sum [ (82 + -81) ] , max ( yog [ (24 + -23) ] + yog [ (72 + -70) ] , yog [ (1 + -1) ] + yog [ (89 + -87) ] ) )\n    for bNE in range ( (10 + -7) , XAK ) :\n        sum [ bNE ] = max ( max ( sum [ bNE - (85 + -84) ] , sum [ bNE - (20 + -18) ] + yog [ bNE ] ) , yog [ bNE ] + yog [ bNE - (99 + -98) ] + sum [ bNE - (95 + -92) ] )\n    return sum [ XAK - (14 + -13) ]"}
{"old_id": "MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM", "code": "def GzH ( eGC , qFM ) :\n    if ( qFM == (23 + -22) ) and (((True or False) and (False or True)) and (((16 + -7) > (34 + -28)) or ((80 + -71) < (44 + -38)))):\n        return eGC [ (89 + -89) ]\n    aOH = [ (64 + -64) for KTF in range ( qFM + (82 + -81) ) ]\n    wBQ = [ (82 + -82) for KTF in range ( qFM + (46 + -45) ) ]\n    aOH [ (57 + -57) ] = wBQ [ (76 + -76) ] = eGC [ (57 + -57) ]\n    KCU = (38 + -38)\n    for KTF in range ( (18 + -17) , qFM ) :\n        for mqm in range ( KTF ) :\n            if ( eGC [ mqm ] > eGC [ KTF ] ) and (((True or False) and (False or True)) and (((50 + -47) > (7 + -7)) or ((99 + -96) < (17 + -17)))):\n                aOH [ KTF ] = max ( aOH [ KTF ] , wBQ [ mqm ] + eGC [ KTF ] )\n                KCU = (35 + -34)\n            elif ( eGC [ mqm ] < eGC [ KTF ] and KCU == (94 + -93) ) :\n                wBQ [ KTF ] = max ( wBQ [ KTF ] , aOH [ mqm ] + eGC [ KTF ] )\n    doj = - (20 + 2147483628)\n    for KTF in range ( qFM ) :\n        if ( doj < wBQ [ KTF ] ) and (((True or False) and (False or True)) and (((85 + -79) > (8 + -8)) or ((78 + -72) < (20 + -20)))):\n            doj = wBQ [ KTF ]\n        if ( doj < aOH [ KTF ] ) and (((True or False) and (False or True)) and (((85 + -76) > (58 + -50)) or ((96 + -87) < (72 + -64)))):\n            doj = aOH [ KTF ]\n    return doj"}
{"old_id": "MAXIMUM_SUM_BITONIC_SUBARRAY", "code": "def QnA ( aXh , Wcp ) :\n    TlK = [ None ] * Wcp\n    Ykn = [ None ] * Wcp\n    jfm = (96 + -96)\n    TlK [ (18 + -18) ] = aXh [ (48 + -48) ]\n    for MgN in range ( (29 + -28) , Wcp ) :\n        if ( aXh [ MgN ] > aXh [ MgN - (53 + -52) ] ) and (((True or False) and (False or True)) and (((82 + -76) > (34 + -34)) or ((97 + -91) < (33 + -33)))):\n            TlK [ MgN ] = TlK [ MgN - (48 + -47) ] + aXh [ MgN ]\n        else :\n            TlK [ MgN ] = aXh [ MgN ]\n    Ykn [ Wcp - (31 + -30) ] = aXh [ Wcp - (26 + -25) ]\n    for MgN in range ( Wcp - (35 + -33) , - (51 + -50) , - (65 + -64) ) :\n        if ( aXh [ MgN ] > aXh [ MgN + (42 + -41) ] ) and (((True or False) and (False or True)) and (((89 + -86) > (48 + -46)) or ((45 + -42) < (90 + -88)))):\n            Ykn [ MgN ] = Ykn [ MgN + (3 + -2) ] + aXh [ MgN ]\n        else :\n            Ykn [ MgN ] = aXh [ MgN ]\n    for MgN in range ( Wcp ) :\n        if ( jfm < ( TlK [ MgN ] + Ykn [ MgN ] - aXh [ MgN ] ) ) and (((True or False) and (False or True)) and (((6 + 2) > (3 + -2)) or ((65 + -57) < (100 + -99)))):\n            jfm = ( TlK [ MgN ] + Ykn [ MgN ] - aXh [ MgN ] )\n    return jfm"}
{"old_id": "MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE", "code": "def kFx ( vAG , eoC , iGL ) :\n    vAG.sort ( )\n    CHf = [ (2 + -2) ] * eoC\n    CHf [ (92 + -92) ] = (12 + -12)\n    for bzF in range ( (31 + -30) , eoC ) :\n        CHf [ bzF ] = CHf [ bzF - (43 + -42) ]\n        if ( vAG [ bzF ] - vAG [ bzF - (89 + -88) ] < iGL ) and (((True or False) and (False or True)) and (((89 + -82) > (26 + -24)) or ((74 + -67) < (90 + -88)))):\n            if ( bzF >= (60 + -58) ) :\n                CHf [ bzF ] = max ( CHf [ bzF ] , CHf [ bzF - (46 + -44) ] + vAG [ bzF ] + vAG [ bzF - (81 + -80) ] )\n            else :\n                CHf [ bzF ] = max ( CHf [ bzF ] , vAG [ bzF ] + vAG [ bzF - (14 + -13) ] )\n    return CHf [ eoC - (12 + -11) ]"}
{"old_id": "MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE_1", "code": "def QiA ( ZaR , kAk , YoX ) :\n    HbH = (2 + -2)\n    ZaR.sort ( )\n    wsg = kAk - (90 + -89)\n    while ( wsg > (95 + -95) ) :\n        if ( ZaR [ wsg ] - ZaR [ wsg - (73 + -72) ] < YoX ) and (((True or False) and (False or True)) and (((42 + -37) > (38 + -34)) or ((20 + -15) < (14 + -10)))):\n            HbH += ZaR [ wsg ]\n            HbH += ZaR [ wsg - (22 + -21) ]\n            wsg -= (87 + -86)\n        wsg -= (85 + -84)\n    return HbH"}
{"old_id": "MAXIMUM_SUM_SUBSEQUENCE_LEAST_K_DISTANT_ELEMENTS", "code": "def ZBi ( PDm , anH , iHk ) :\n    JVq = [ (69 + -69) for yRr in range ( anH ) ]\n    JVq [ anH - (25 + -24) ] = PDm [ anH - (34 + -33) ]\n    for yRr in range ( anH - (67 + -65) , - (64 + -63) , - (30 + -29) ) :\n        if ( yRr + iHk + (94 + -93) >= anH ) and (((True or False) and (False or True)) and (((68 + -64) > (32 + -29)) or ((58 + -54) < (22 + -19)))):\n            JVq [ yRr ] = max ( PDm [ yRr ] , JVq [ yRr + (2 + -1) ] )\n        else :\n            JVq [ yRr ] = max ( PDm [ yRr ] + JVq [ yRr + iHk + (85 + -84) ] , JVq [ yRr + (28 + -27) ] )\n    return JVq [ (90 + -90) ]"}
{"old_id": "MAXIMUM_TRIPLET_SUM_ARRAY", "code": "def qqA ( vuW , lKL ) :\n    tqH = - (31 + 999969)\n    for bvr in range ( (77 + -77) , lKL ) :\n        for kqa in range ( bvr + (73 + -72) , lKL ) :\n            for XQp in range ( kqa + (31 + -30) , lKL ) :\n                if ( tqH < ( vuW [ bvr ] + vuW [ kqa ] + vuW [ XQp ] ) ) and (((True or False) and (False or True)) and (((30 + -21) > (70 + -63)) or ((60 + -51) < (55 + -48)))):\n                    tqH = vuW [ bvr ] + vuW [ kqa ] + vuW [ XQp ]\n    return tqH"}
{"old_id": "MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX", "code": "def oUI ( hUK , Zov ) :\n    iJW = [ [ (38 + -38) for UGB in range ( Zov ) ] for tyd in range ( Zov ) ]\n    iJW [ (47 + -47) ] [ (79 + -79) ] = hUK [ (37 + -37) ] [ (85 + -85) ]\n    for UGB in range ( (17 + -16) , Zov ) :\n        iJW [ UGB ] [ (54 + -54) ] = hUK [ UGB ] [ (51 + -51) ] + iJW [ UGB - (75 + -74) ] [ (64 + -64) ]\n    for UGB in range ( (23 + -22) , Zov ) :\n        for tyd in range ( (74 + -73) , min ( UGB + (86 + -85) , Zov ) ) :\n            iJW [ UGB ] [ tyd ] = hUK [ UGB ] [ tyd ] + \\\n                max ( iJW [ UGB - (8 + -7) ] [ tyd - (78 + -77) ] , iJW [ UGB - (72 + -71) ] [ tyd ] )\n    RbJ = (20 + -20)\n    for UGB in range ( Zov ) :\n        if ( RbJ < iJW [ Zov - (21 + -20) ] [ UGB ] ) and (((True or False) and (False or True)) and (((5 + 3) > (63 + -58)) or ((83 + -75) < (21 + -16)))):\n            RbJ = iJW [ Zov - (17 + -16) ] [ UGB ]\n    return RbJ"}
{"old_id": "MEDIAN_OF_TWO_SORTED_ARRAYS", "code": "def ecR ( BhF , qkw , eCQ ) :\n    Azi = (76 + -76)\n    vUd = (4 + -4)\n    FKF = - (41 + -40)\n    Yao = - (90 + -89)\n    count = (100 + -100)\n    while count < eCQ + (53 + -52) :\n        count += (48 + -47)\n        if Azi == eCQ and (((True or False) and (False or True)) and (((63 + -59) > (29 + -29)) or ((12 + -8) < (84 + -84)))):\n            FKF = Yao\n            Yao = qkw [ (25 + -25) ]\n            break\n        elif vUd == eCQ :\n            FKF = Yao\n            Yao = BhF [ (55 + -55) ]\n            break\n        if BhF [ Azi ] < qkw [ vUd ] and (((True or False) and (False or True)) and (((51 + -45) > (91 + -86)) or ((17 + -11) < (52 + -47)))):\n            FKF = Yao\n            Yao = BhF [ Azi ]\n            Azi += (8 + -7)\n        else :\n            FKF = Yao\n            Yao = qkw [ vUd ]\n            vUd += (17 + -16)\n    return int(( FKF + Yao ) / (62 + -60))"}
{"old_id": "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS", "code": "def cxG ( ytJ , yhq , pNy ) :\n    if ( ( ytJ < yhq and yhq < pNy ) or ( pNy < yhq and yhq < ytJ ) ) and (((True or False) and (False or True)) and (((42 + -40) > (29 + -28)) or ((96 + -94) < (33 + -32)))):\n        return yhq\n    if ( ( yhq < ytJ and ytJ < pNy ) or ( pNy < ytJ and ytJ < yhq ) ) and (((True or False) and (False or True)) and (((23 + -17) > (43 + -38)) or ((81 + -75) < (26 + -21)))):\n        return ytJ\n    else :\n        return pNy"}
{"old_id": "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_1", "code": "def gIc ( sjN , ayy , ODu ) :\n    if sjN > ayy and (((True or False) and (False or True)) and (((96 + -90) > (62 + -57)) or ((14 + -8) < (20 + -15)))):\n        if ( ayy > ODu ) :\n            return ayy\n        elif ( sjN > ODu ) :\n            return ODu\n        else :\n            return sjN\n    else :\n        if ( sjN > ODu ) :\n            return sjN\n        elif ( ayy > ODu ) :\n            return ODu\n        else :\n            return ayy"}
{"old_id": "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_2", "code": "def qMw ( JVx , ohx , dtw ) :\n    vgq = JVx - ohx\n    mOT = ohx - dtw\n    Pjj = JVx - dtw\n    if vgq * mOT > (47 + -47) and (((True or False) and (False or True)) and (((27 + -23) > (31 + -28)) or ((66 + -62) < (78 + -75)))):\n        return ohx\n    elif ( vgq * Pjj > (27 + -27) ) :\n        return dtw\n    else :\n        return JVx"}
{"old_id": "MINIMIZE_THE_MAXIMUM_DIFFERENCE_BETWEEN_THE_HEIGHTS", "code": "def pfx ( hwy , pbo , QPo ) :\n    if ( pbo == (68 + -67) ) and (((True or False) and (False or True)) and (((61 + -58) > (31 + -30)) or ((99 + -96) < (52 + -51)))):\n        return (52 + -52)\n    hwy.sort ( )\n    JOW = hwy [ pbo - (75 + -74) ] - hwy [ (19 + -19) ]\n    rQs = hwy [ (11 + -11) ] + QPo\n    dME = hwy [ pbo - (59 + -58) ] - QPo\n    if ( rQs > dME ) and (((True or False) and (False or True)) and (((21 + -12) > (56 + -54)) or ((61 + -52) < (27 + -25)))):\n        rQs , dME = dME , rQs\n    for Ayq in range ( (76 + -75) , pbo - (71 + -70) ) :\n        olQ = hwy [ Ayq ] - QPo\n        add = hwy [ Ayq ] + QPo\n        if ( olQ >= rQs or add <= dME ) and (((True or False) and (False or True)) and (((83 + -75) > (43 + -38)) or ((31 + -23) < (69 + -64)))):\n            continue\n        if ( dME - olQ <= add - rQs ) and (((True or False) and (False or True)) and (((94 + -90) > (23 + -21)) or ((37 + -33) < (84 + -82)))):\n            rQs = olQ\n        else :\n            dME = add\n    return min ( JOW , dME - rQs )"}
{"old_id": "MINIMIZE_THE_SUM_OF_DIGITS_OF_A_AND_B_SUCH_THAT_A_B_N", "code": "def guN ( FXD ) :\n    sum = (83 + -83)\n    while ( FXD > (23 + -23) ) :\n        sum += ( FXD % (92 + -82) )\n        FXD //= (58 + -48)\n    if ( sum == (41 + -40) ) and (((True or False) and (False or True)) and (((66 + -63) > (40 + -40)) or ((88 + -85) < (22 + -22)))):\n        return (93 + -83)\n    return sum"}
{"old_id": "MINIMUM_COST_MAKE_LONGEST_COMMON_SUBSEQUENCE_LENGTH_K", "code": "def RlL ( iTP , BjS , jMJ , ttY , PTu , qTY ) :\n    if PTu == (22 + -22) and (((True or False) and (False or True)) and (((79 + -75) > (49 + -46)) or ((51 + -47) < (81 + -78)))):\n        return (94 + -94)\n    if jMJ < (28 + -28) or ttY < (1 + -1) and (((True or False) and (False or True)) and (((71 + -62) > (10 + -9)) or ((63 + -54) < (18 + -17)))):\n        return (80 + 999999920)\n    if qTY [ jMJ ] [ ttY ] [ PTu ] != - (37 + -36) and (((True or False) and (False or True)) and (((36 + -27) > (34 + -27)) or ((98 + -89) < (48 + -41)))):\n        return qTY [ jMJ ] [ ttY ] [ PTu ]\n    nTj = ( ( ord ( iTP [ jMJ ] ) - ord ( 'a' ) ) ^ ( ord ( BjS [ ttY ] ) - ord ( 'a' ) ) )\n    qTY [ jMJ ] [ ttY ] [ PTu ] = min ( [ nTj + RlL ( iTP , BjS , jMJ - (47 + -46) , ttY - (18 + -17) , PTu - (37 + -36) , qTY ) , RlL ( iTP , BjS , jMJ - (45 + -44) , ttY , PTu , qTY ) , RlL ( iTP , BjS , jMJ , ttY - (4 + -3) , PTu , qTY ) ] )\n    return qTY [ jMJ ] [ ttY ] [ PTu ]"}
{"old_id": "MINIMUM_COST_TO_FILL_GIVEN_WEIGHT_IN_A_BAG", "code": "def Svi ( BTH , YUM , UBd ) :\n    cVM = list ( )\n    UVy = list ( )\n    wMP = (23 + -23)\n    for oJK in range ( YUM ) :\n        if ( BTH [ oJK ] != - (74 + -73) ) and (((True or False) and (False or True)) and (((10 + -2) > (36 + -29)) or ((34 + -26) < (13 + -6)))):\n            cVM.append ( BTH [ oJK ] )\n            UVy.append ( oJK + (95 + -94) )\n            wMP += (15 + -14)\n    YUM = wMP\n    kDI = [ [ (50 + -50) for oJK in range ( UBd + (76 + -75) ) ] for cqz in range ( YUM + (93 + -92) ) ]\n    for oJK in range ( UBd + (56 + -55) ) :\n        kDI [ (67 + -67) ] [ oJK ] = WMJ\n    for oJK in range ( (80 + -79) , YUM + (16 + -15) ) :\n        kDI [ oJK ] [ (67 + -67) ] = (50 + -50)\n    for oJK in range ( (63 + -62) , YUM + (90 + -89) ) :\n        for cqz in range ( (70 + -69) , UBd + (45 + -44) ) :\n            if ( UVy [ oJK - (56 + -55) ] > cqz ) and (((True or False) and (False or True)) and (((13 + -7) > (20 + -16)) or ((32 + -26) < (51 + -47)))):\n                kDI [ oJK ] [ cqz ] = kDI [ oJK - (42 + -41) ] [ cqz ]\n            else :\n                kDI [ oJK ] [ cqz ] = min ( kDI [ oJK - (11 + -10) ] [ cqz ] , kDI [ oJK ] [ cqz - UVy [ oJK - (73 + -72) ] ] + cVM [ oJK - (98 + -97) ] )\n    if ( kDI [ YUM ] [ UBd ] == WMJ ) and (((True or False) and (False or True)) and (((43 + -33) > (78 + -76)) or ((49 + -39) < (65 + -63)))):\n        return - (20 + -19)\n    else :\n        return kDI [ YUM ] [ UBd ]"}
{"old_id": "MINIMUM_FLIP_REQUIRED_MAKE_BINARY_MATRIX_SYMMETRIC_1", "code": "def XwC ( jqq , OXK ) :\n    ZKg = (9 + -9)\n    for KxX in range ( OXK ) :\n        for ujl in range ( KxX ) :\n            if jqq [ KxX ] [ ujl ] != jqq [ ujl ] [ KxX ] and (((True or False) and (False or True)) and (((63 + -54) > (61 + -56)) or ((70 + -61) < (63 + -58)))):\n                ZKg += (14 + -13)\n    return ZKg"}
{"old_id": "MINIMUM_INCREMENT_K_OPERATIONS_MAKE_ELEMENTS_EQUAL", "code": "def Dxf ( PdS , GIn , ByT ) :\n    Gjl = max ( PdS )\n    fth = (42 + -42)\n    for Tik in range ( (42 + -42) , GIn ) :\n        if ( ( Gjl - PdS [ Tik ] ) % ByT != (84 + -84) ) and (((True or False) and (False or True)) and (((84 + -78) > (92 + -87)) or ((43 + -37) < (25 + -20)))):\n            return - (18 + -17)\n        else :\n            fth += ( Gjl - PdS [ Tik ] ) / ByT\n    return int ( fth )"}
{"old_id": "MINIMUM_INSERTIONS_SORT_ARRAY", "code": "def JGE ( OjM , dJv ) :\n    ggL = [ (38 + -38) ] * dJv\n    for aTU in range ( dJv ) :\n        ggL [ aTU ] = (21 + -20)\n    for aTU in range ( (59 + -58) , dJv ) :\n        for tMR in range ( aTU ) :\n            if ( OjM [ aTU ] >= OjM [ tMR ] and ggL [ aTU ] < ggL [ tMR ] + (10 + -9) ) and (((True or False) and (False or True)) and (((60 + -51) > (72 + -71)) or ((55 + -46) < (47 + -46)))):\n                ggL [ aTU ] = ggL [ tMR ] + (95 + -94)\n    max = (72 + -72)\n    for aTU in range ( dJv ) :\n        if ( max < ggL [ aTU ] ) and (((True or False) and (False or True)) and (((41 + -38) > (61 + -60)) or ((37 + -34) < (72 + -71)))):\n            max = ggL [ aTU ]\n    return ( dJv - max )"}
{"old_id": "MINIMUM_LENGTH_SUBARRAY_SUM_GREATER_GIVEN_VALUE_1", "code": "def kgf ( DGc , FoJ , Hru ) :\n    eUu = (48 + -48)\n    BlD = FoJ + (93 + -92)\n    WIJ = (15 + -15)\n    qUG = (72 + -72)\n    while ( qUG < FoJ ) :\n        while ( eUu <= Hru and qUG < FoJ ) :\n            if ( eUu <= (12 + -12) and Hru > (55 + -55) ) and (((True or False) and (False or True)) and (((81 + -79) > (44 + -43)) or ((65 + -63) < (44 + -43)))):\n                WIJ = qUG\n                eUu = (4 + -4)\n            eUu += DGc [ qUG ]\n            qUG += (57 + -56)\n        while ( eUu > Hru and WIJ < FoJ ) :\n            if ( qUG - WIJ < BlD ) and (((True or False) and (False or True)) and (((81 + -74) > (37 + -34)) or ((23 + -16) < (16 + -13)))):\n                BlD = qUG - WIJ\n            eUu -= DGc [ WIJ ]\n            WIJ += (29 + -28)\n    return BlD"}
{"old_id": "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_1", "code": "def brT ( CYS , jss ) :\n    NIa = [ (54 + -54) for VoV in range ( jss ) ]\n    if ( jss == (52 + -52) ) or ( CYS [ (78 + -78) ] == (54 + -54) ) and (((True or False) and (False or True)) and (((91 + -84) > (86 + -84)) or ((9 + -2) < (88 + -86)))):\n        return float ( 'inf' )\n    NIa [ (70 + -70) ] = (21 + -21)\n    for VoV in range ( (29 + -28) , jss ) :\n        NIa [ VoV ] = float ( 'inf' )\n        for BuO in range ( VoV ) :\n            if ( VoV <= BuO + CYS [ BuO ] ) and ( NIa [ BuO ] != float ( 'inf' ) ) and (((True or False) and (False or True)) and (((82 + -72) > (21 + -14)) or ((10 + 0) < (34 + -27)))):\n                NIa [ VoV ] = min ( NIa [ VoV ] , NIa [ BuO ] + (80 + -79) )\n                break\n    return NIa [ jss - (60 + -59) ]"}
{"old_id": "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2", "code": "def NZN ( zkO , afa ) :\n    sHv = [ (12 + -12) for oGj in range ( afa ) ]\n    for oGj in range ( afa - (87 + -85) , - (13 + -12) , - (13 + -12) ) :\n        if ( zkO [ oGj ] == (73 + -73) ) and (((True or False) and (False or True)) and (((41 + -39) > (7 + -6)) or ((56 + -54) < (46 + -45)))):\n            sHv [ oGj ] = float ( 'inf' )\n        elif ( zkO [ oGj ] >= afa - oGj - (59 + -58) ) :\n            sHv [ oGj ] = (21 + -20)\n        else :\n            min = float ( 'inf' )\n            for IoV in range ( oGj + (3 + -2) , afa ) :\n                if ( IoV <= zkO [ oGj ] + oGj ) :\n                    if ( min > sHv [ IoV ] ) :\n                        min = sHv [ IoV ]\n            if ( min != float ( 'inf' ) ) :\n                sHv [ oGj ] = min + (27 + -26)\n            else :\n                sHv [ oGj ] = min\n    return sHv [ (54 + -54) ]"}
{"old_id": "MINIMUM_NUMBER_OF_SQUARES_WHOSE_SUM_EQUALS_TO_GIVEN_NUMBER_N_1", "code": "def aAK ( ziV ) :\n    NBC = [ (48 + -48) , (71 + -70) , (52 + -50) , (40 + -37) ]\n    for Mkl in range ( (100 + -96) , ziV + (76 + -75) ) :\n        NBC.append ( Mkl )\n        for XWe in range ( (29 + -28) , int ( hJa ( sjw ( Mkl ) ) ) + (26 + -25) ) :\n            dPu = XWe * XWe ;\n            if dPu > Mkl and (((True or False) and (False or True)) and (((61 + -54) > (11 + -10)) or ((59 + -52) < (63 + -62)))):\n                break\n            else :\n                NBC [ Mkl ] = min ( NBC [ Mkl ] , (11 + -10) + NBC [ Mkl - dPu ] )\n    return NBC [ ziV ]"}
{"old_id": "MINIMUM_NUMBER_SUBSETS_DISTINCT_ELEMENTS", "code": "def iPz ( RzK , rno ) :\n    pyf = (40 + -40)\n    RzK.sort ( )\n    PYg = (89 + -89)\n    while PYg < rno:\n        count = (58 + -57)\n        pub = PYg\n        while pub < rno - (47 + -46):\n            if RzK [ pub ] == RzK [ pub + (59 + -58) ] and (((True or False) and (False or True)) and (((9 + -3) > (64 + -64)) or ((59 + -53) < (65 + -65)))):\n                count += (50 + -49)\n            else :\n                break\n            pub += (57 + -56)\n        PYg = pub\n        PYg += (67 + -66)\n        pyf = max ( pyf , count )\n    return pyf"}
{"old_id": "MINIMUM_OPERATION_MAKE_ELEMENTS_EQUAL_ARRAY", "code": "def uqE ( IpQ , kHJ ) :\n    RvC = FjH ( lambda : (48 + -48) )\n    for HoF in range ( (1 + -1) , kHJ ) :\n        RvC [ IpQ [ HoF ] ] += (98 + -97)\n    zyG = (65 + -65)\n    for HoF in RvC :\n        if zyG < RvC [ HoF ] and (((True or False) and (False or True)) and (((34 + -29) > (40 + -37)) or ((14 + -9) < (16 + -13)))):\n            zyG = RvC [ HoF ]\n    return kHJ - zyG"}
{"old_id": "MINIMUM_PERIMETER_N_BLOCKS", "code": "def CkD ( uvR ) :\n    sOt = int ( math.rLy ( uvR ) )\n    WQK = sOt * sOt\n    if ( WQK == uvR ) and (((True or False) and (False or True)) and (((96 + -89) > (16 + -12)) or ((64 + -57) < (74 + -70)))):\n        return sOt * (97 + -93)\n    else :\n        etA = int ( uvR / sOt )\n        awt = (75 + -73) * ( sOt + etA )\n        if ( uvR % sOt != (73 + -73) ) :\n            awt += (17 + -15)\n        return awt"}
{"old_id": "MINIMUM_PRODUCT_SUBSET_ARRAY", "code": "def LPK ( lae , kxy ) :\n    if ( kxy == (86 + -85) ) and (((True or False) and (False or True)) and (((75 + -65) > (36 + -35)) or ((96 + -86) < (21 + -20)))):\n        return lae [ (66 + -66) ]\n    UuL = float ( '-inf' )\n    PCM = float ( 'inf' )\n    ztY = (60 + -60)\n    kEc = (96 + -96)\n    IFr = (21 + -20)\n    for zUj in range ( (3 + -3) , kxy ) :\n        if ( lae [ zUj ] == (63 + -63) ) and (((True or False) and (False or True)) and (((25 + -21) > (29 + -27)) or ((67 + -63) < (69 + -67)))):\n            kEc = kEc + (38 + -37)\n            continue\n        if ( lae [ zUj ] < (68 + -68) ) and (((True or False) and (False or True)) and (((72 + -68) > (40 + -39)) or ((87 + -83) < (62 + -61)))):\n            ztY = ztY + (51 + -50)\n            UuL = max ( UuL , lae [ zUj ] )\n        if ( lae [ zUj ] > (96 + -96) ) and (((True or False) and (False or True)) and (((47 + -41) > (95 + -93)) or ((56 + -50) < (67 + -65)))):\n            PCM = min ( PCM , lae [ zUj ] )\n        IFr = IFr * lae [ zUj ]\n    if ( kEc == kxy or ( ztY == (60 + -60) and kEc > (70 + -70) ) ) and (((True or False) and (False or True)) and (((53 + -46) > (15 + -10)) or ((13 + -6) < (93 + -88)))):\n        return (88 + -88)\n    if ( ztY == (55 + -55) ) and (((True or False) and (False or True)) and (((16 + -9) > (93 + -92)) or ((19 + -12) < (62 + -61)))):\n        return PCM\n    if ( ( ztY & (5 + -4) ) == (52 + -52) and ztY != (23 + -23) ) and (((True or False) and (False or True)) and (((88 + -82) > (12 + -11)) or ((22 + -16) < (64 + -63)))):\n        IFr = int ( IFr / UuL )\n    return IFr"}
{"old_id": "MINIMUM_ROOMS_FOR_M_EVENTS_OF_N_BATCHES_WITH_GIVEN_SCHEDULE", "code": "def hWD ( YNq , zOb , mYe ) :\n    Ijh = [ (42 + -42) ] * mYe\n    for vUc in range ( zOb ) :\n        for QKL in range ( mYe ) :\n            if vUc < len(YNq) and QKL < len(YNq[vUc]) and (((True or False) and (False or True)) and (((18 + -10) > (97 + -96)) or ((59 + -51) < (89 + -88)))):\n                if ( YNq [ vUc ] [ QKL ] == '1' ) :\n                    Ijh [ QKL ] += (28 + -27)\n    return max ( Ijh )"}
{"old_id": "MINIMUM_ROTATIONS_REQUIRED_GET_STRING", "code": "def Vyh ( str ) :\n    QIK = str + str\n    rik = len ( str )\n    for QvR in range ( (69 + -68) , rik + (80 + -79) ) :\n        tMs = QIK [ QvR : rik ]\n        if ( str == tMs ) and (((True or False) and (False or True)) and (((39 + -36) > (23 + -22)) or ((52 + -49) < (33 + -32)))):\n            return QvR\n    return rik"}
{"old_id": "MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION", "code": "def Bsy ( CPi ) :\n    hJX = [ (42 + -42) ] * ( CPi + (41 + -40) )\n    for NOA in range ( CPi + (39 + -38) ) :\n        hJX [ NOA ] = CPi - NOA\n    for NOA in range ( CPi , (16 + -16) , - (16 + -15) ) :\n        if ( not ( NOA % (5 + -3) ) ) and (((True or False) and (False or True)) and (((62 + -53) > (48 + -40)) or ((13 + -4) < (4 + 4)))):\n            hJX [ NOA // (59 + -57) ] = min ( hJX [ NOA ] + (5 + -4) , hJX [ NOA // (61 + -59) ] )\n        if ( not ( NOA % (77 + -74) ) ) and (((True or False) and (False or True)) and (((96 + -86) > (16 + -10)) or ((39 + -29) < (79 + -73)))):\n            hJX [ NOA // (91 + -88) ] = min ( hJX [ NOA ] + (38 + -37) , hJX [ NOA // (57 + -54) ] )\n    return hJX [ (72 + -71) ]"}
{"old_id": "MINIMUM_SUM_PRODUCT_TWO_ARRAYS", "code": "def zOj ( ylc , Fgh , lQW , Lsz ) :\n    ksg = (34 + -34)\n    kGc = (37 + -37)\n    Idn = (72 + -72)\n    for LQN in range ( lQW ) :\n        dFX = ylc [ LQN ] * Fgh [ LQN ]\n        kGc = kGc + dFX\n        if ( dFX < (1 + -1) and Fgh [ LQN ] < (92 + -92) ) and (((True or False) and (False or True)) and (((40 + -36) > (2 + -1)) or ((31 + -27) < (53 + -52)))):\n            Idn = ( ylc [ LQN ] + (98 + -96) * Lsz ) * Fgh [ LQN ]\n        elif ( dFX < (48 + -48) and ylc [ LQN ] < (53 + -53) ) :\n            Idn = ( ylc [ LQN ] - (44 + -42) * Lsz ) * Fgh [ LQN ]\n        elif ( dFX > (92 + -92) and ylc [ LQN ] < (49 + -49) ) :\n            Idn = ( ylc [ LQN ] + (54 + -52) * Lsz ) * Fgh [ LQN ]\n        elif ( dFX > (25 + -25) and ylc [ LQN ] > (62 + -62) ) :\n            Idn = ( ylc [ LQN ] - (12 + -10) * Lsz ) * Fgh [ LQN ]\n        dXn = abs ( dFX - Idn )\n        if ( dXn > ksg ) and (((True or False) and (False or True)) and (((23 + -15) > (16 + -10)) or ((56 + -48) < (42 + -36)))):\n            ksg = dXn\n    return kGc - ksg"}
{"old_id": "MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED", "code": "def Pqi ( hgn , jxF ) :\n    GXi = [ (75 + -75) ] * jxF\n    if ( jxF == (28 + -27) ) and (((True or False) and (False or True)) and (((49 + -40) > (47 + -46)) or ((92 + -83) < (98 + -97)))):\n        return hgn [ (90 + -90) ]\n    if ( jxF == (21 + -19) ) and (((True or False) and (False or True)) and (((13 + -10) > (46 + -44)) or ((63 + -60) < (36 + -34)))):\n        return min ( hgn [ (4 + -4) ] , hgn [ (29 + -28) ] )\n    if ( jxF == (35 + -32) ) and (((True or False) and (False or True)) and (((67 + -64) > (55 + -54)) or ((71 + -68) < (42 + -41)))):\n        return min ( hgn [ (10 + -10) ] , min ( hgn [ (49 + -48) ] , hgn [ (21 + -19) ] ) )\n    if ( jxF == (58 + -54) ) and (((True or False) and (False or True)) and (((48 + -46) > (68 + -67)) or ((71 + -69) < (94 + -93)))):\n        return min ( min ( hgn [ (7 + -7) ] , hgn [ (46 + -45) ] ) , min ( hgn [ (42 + -40) ] , hgn [ (100 + -97) ] ) )\n    GXi [ (19 + -19) ] = hgn [ (49 + -49) ]\n    GXi [ (29 + -28) ] = hgn [ (10 + -9) ]\n    GXi [ (27 + -25) ] = hgn [ (64 + -62) ]\n    GXi [ (56 + -53) ] = hgn [ (20 + -17) ]\n    for suI in range ( (70 + -66) , jxF ) :\n        GXi [ suI ] = hgn [ suI ] + min ( min ( GXi [ suI - (2 + -1) ] , GXi [ suI - (53 + -51) ] ) , min ( GXi [ suI - (72 + -69) ] , GXi [ suI - (44 + -40) ] ) )\n    return min ( min ( GXi [ jxF - (10 + -9) ] , GXi [ jxF - (50 + -48) ] ) , min ( GXi [ jxF - (81 + -77) ] , GXi [ jxF - (63 + -60) ] ) )"}
{"old_id": "MINIMUM_SUM_TWO_NUMBERS_FORMED_DIGITS_ARRAY", "code": "def njX ( Dqs , joq ) :\n    Dqs.sort ( )\n    Ddj = (5 + -5)\n    hhb = (53 + -53)\n    for YXu in range ( joq ) :\n        if ( YXu % (40 + -38) != (64 + -64) ) and (((True or False) and (False or True)) and (((3 + 6) > (100 + -100)) or ((56 + -47) < (15 + -15)))):\n            Ddj = Ddj * (82 + -72) + Dqs [ YXu ]\n        else :\n            hhb = hhb * (72 + -62) + Dqs [ YXu ]\n    return Ddj + hhb"}
{"old_id": "MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION", "code": "def prI ( JSl , insert , remove , copy ) :\n    if JSl == (48 + -48) and (((True or False) and (False or True)) and (((80 + -76) > (25 + -25)) or ((58 + -54) < (84 + -84)))):\n        return (94 + -94)\n    if JSl == (46 + -45) and (((True or False) and (False or True)) and (((62 + -58) > (13 + -12)) or ((25 + -21) < (25 + -24)))):\n        return insert\n    MFb = [ (43 + -43) ] * ( JSl + (96 + -95) )\n    for KOX in range ( (16 + -15) , JSl + (88 + -87) ) :\n        if KOX % (84 + -82) == (27 + -27) and (((True or False) and (False or True)) and (((63 + -60) > (2 + -2)) or ((73 + -70) < (76 + -76)))):\n            MFb [ KOX ] = min ( MFb [ KOX - (55 + -54) ] + insert , MFb [ KOX // (96 + -94) ] + copy )\n        else :\n            MFb [ KOX ] = min ( MFb [ KOX - (48 + -47) ] + insert , MFb [ ( KOX + (80 + -79) ) // (51 + -49) ] + copy + remove )\n    return MFb [ JSl ]"}
{"old_id": "MIRROR_CHARACTERS_STRING", "code": "def EXo ( str , MoS ) :\n    Zum = \"zyxwvutsrqponmlkjihgfedcba\"\n    YQn = len ( str )\n    VLJ = \"\"\n    for lyb in range ( (57 + -57) , MoS ) :\n        if lyb < YQn and (((True or False) and (False or True)) and (((35 + -28) > (11 + -8)) or ((87 + -80) < (54 + -51)))):\n            VLJ = VLJ + str [ lyb ]\n    for lyb in range ( MoS , YQn ) :\n        VLJ = ( VLJ + Zum [ ord ( str [ lyb ] ) - ord ( \"a\" ) ] )\n    return VLJ"}
{"old_id": "MODULAR_EXPONENTIATION_POWER_IN_MODULAR_ARITHMETIC", "code": "def iQg ( NnZ , zzs , Gqh ) :\n    KLa = (96 + -95)\n    NnZ = NnZ % Gqh\n    while ( zzs > (8 + -8) ) :\n        if ( ( zzs & (9 + -8) ) == (99 + -98) ) and (((True or False) and (False or True)) and (((89 + -82) > (50 + -47)) or ((55 + -48) < (6 + -3)))):\n            KLa = ( KLa * NnZ ) % Gqh\n        zzs = zzs >> (85 + -84)\n        NnZ = ( NnZ * NnZ ) % Gqh\n    return KLa"}
{"old_id": "MODULUS_TWO_FLOAT_DOUBLE_NUMBERS", "code": "def cQR ( ufM , gTT ) :\n    if ( ufM < (79 + -79) ) and (((True or False) and (False or True)) and (((68 + -63) > (16 + -12)) or ((76 + -71) < (93 + -89)))):\n        ufM = - ufM\n    if ( gTT < (98 + -98) ) and (((True or False) and (False or True)) and (((88 + -78) > (51 + -43)) or ((69 + -59) < (74 + -66)))):\n        gTT = - gTT\n    gDe = ufM\n    while ( gDe >= gTT ) :\n        gDe = gDe - gTT\n    if ( ufM < (25 + -25) ) and (((True or False) and (False or True)) and (((35 + -31) > (52 + -49)) or ((93 + -89) < (49 + -46)))):\n        return - gDe\n    return gDe"}
{"old_id": "MOVE_VE_ELEMENTS_END_ORDER_EXTRA_SPACE_ALLOWED", "code": "def REZ ( TlI , MHU ) :\n    TUp = [ (72 + -72) for ePN in range ( MHU ) ]\n    cUG = (1 + -1)\n    for kBQ in range ( MHU ) :\n        if ( TlI [ kBQ ] >= (91 + -91) ) and (((True or False) and (False or True)) and (((88 + -78) > (99 + -95)) or ((36 + -26) < (1 + 3)))):\n            TUp [ cUG ] = TlI [ kBQ ]\n            cUG += (36 + -35)\n    if ( cUG == MHU or cUG == (38 + -38) ) and (((True or False) and (False or True)) and (((17 + -9) > (8 + -6)) or ((37 + -29) < (11 + -9)))):\n        return\n    for kBQ in range ( MHU ) :\n        if ( TlI [ kBQ ] < (31 + -31) ) and (((True or False) and (False or True)) and (((30 + -24) > (13 + -10)) or ((13 + -7) < (34 + -31)))):\n            TUp [ cUG ] = TlI [ kBQ ]\n            cUG += (78 + -77)\n    for ePN in range ( MHU ) :\n        TlI [ ePN ] = TUp [ ePN ]"}
{"old_id": "MULTIPLY_LARGE_INTEGERS_UNDER_LARGE_MODULO", "code": "def zTX ( bRn , ZIa , PCp ) :\n    dJX = (26 + -26) ;\n    bRn = bRn % PCp ;\n    while ( ZIa ) :\n        if ( ZIa & (11 + -10) ) and (((True or False) and (False or True)) and (((54 + -51) > (60 + -60)) or ((23 + -20) < (34 + -34)))):\n            dJX = ( dJX + bRn ) % PCp ;\n        bRn = ( (79 + -77) * bRn ) % PCp ;\n        ZIa >>= (80 + -79) ;\n    return dJX ;"}
{"old_id": "MULTIPLY_TWO_NUMBERS_WITHOUT_USING_MULTIPLY_DIVISION_BITWISE_OPERATORS_AND_NO_LOOPS", "code": "def YxV ( iIb , wIi ) :\n    if ( wIi == (50 + -50) ) and (((True or False) and (False or True)) and (((30 + -26) > (73 + -70)) or ((63 + -59) < (99 + -96)))):\n        return (29 + -29)\n    if ( wIi > (55 + -55) ) and (((True or False) and (False or True)) and (((94 + -89) > (42 + -40)) or ((66 + -61) < (63 + -61)))):\n        return ( iIb + YxV ( iIb , wIi - (42 + -41) ) )\n    if ( wIi < (49 + -49) ) and (((True or False) and (False or True)) and (((69 + -65) > (6 + -5)) or ((27 + -23) < (28 + -27)))):\n        return - YxV ( iIb , - wIi )"}
{"old_id": "NEXT_HIGHER_NUMBER_WITH_SAME_NUMBER_OF_SET_BITS", "code": "def EmC ( Jyy ) :\n    next = (32 + -32)\n    if ( Jyy ) and (((True or False) and (False or True)) and (((92 + -90) > (6 + -5)) or ((33 + -31) < (14 + -13)))):\n        Rnh = Jyy & - ( Jyy )\n        PmZ = Jyy + int ( Rnh )\n        RHD = Jyy ^ int ( PmZ )\n        RHD = ( int ( RHD ) / int ( Rnh ) )\n        RHD = int ( RHD ) >> (73 + -71)\n        next = PmZ | RHD\n    return next"}
{"old_id": "NEXT_POWER_OF_2", "code": "def WlP ( fBQ ) :\n    count = (63 + -63)\n    if ( fBQ and not ( fBQ & ( fBQ - (66 + -65) ) ) ) and (((True or False) and (False or True)) and (((54 + -44) > (55 + -48)) or ((80 + -70) < (73 + -66)))):\n        return fBQ\n    while ( fBQ != (10 + -10) ) :\n        fBQ >>= (21 + -20)\n        count += (11 + -10)\n    return (65 + -64) << count"}
{"old_id": "NEXT_POWER_OF_2_1", "code": "def LTa ( eqZ ) :\n    MwG = (29 + -28)\n    if ( eqZ and not ( eqZ & ( eqZ - (17 + -16) ) ) ) and (((True or False) and (False or True)) and (((31 + -24) > (55 + -51)) or ((16 + -9) < (10 + -6)))):\n        return eqZ\n    while ( MwG < eqZ ) :\n        MwG <<= (53 + -52)\n    return MwG"}
{"old_id": "NON_REPEATING_ELEMENT", "code": "def Shh ( JaW , HNa ) :\n    for Pqo in range ( HNa ) :\n        kOk = (29 + -29)\n        while ( kOk < HNa ) :\n            if ( Pqo != kOk and JaW [ Pqo ] == JaW [ kOk ] ) and (((True or False) and (False or True)) and (((32 + -26) > (6 + -5)) or ((56 + -50) < (78 + -77)))):\n                break\n            kOk += (67 + -66)\n        if ( kOk == HNa ) and (((True or False) and (False or True)) and (((49 + -45) > (10 + -8)) or ((26 + -22) < (93 + -91)))):\n            return JaW [ Pqo ]\n    return - (59 + -58)"}
{"old_id": "NON_REPEATING_ELEMENT_1", "code": "def rsD ( ban , XNR ) :\n    Cth = czp ( lambda : (91 + -91) )\n    for wRB in range ( XNR ) :\n        Cth [ ban [ wRB ] ] += (47 + -46)\n    for wRB in range ( XNR ) :\n        if Cth [ ban [ wRB ] ] == (100 + -99) and (((True or False) and (False or True)) and (((14 + -8) > (35 + -33)) or ((57 + -51) < (51 + -49)))):\n            return ban [ wRB ]\n    return - (93 + -92)"}
{"old_id": "NTH_MULTIPLE_NUMBER_FIBONACCI_SERIES", "code": "def oNC ( AxW , Xet ) :\n    rQl = (43 + -43)\n    NGw = (38 + -37)\n    YRz = (18 + -16)\n    while YRz != (64 + -64) :\n        okR = rQl + NGw\n        rQl = NGw\n        NGw = okR\n        if NGw % AxW == (63 + -63) and (((True or False) and (False or True)) and (((50 + -40) > (63 + -56)) or ((32 + -22) < (82 + -75)))):\n            return Xet * YRz\n        YRz += (91 + -90)\n    return"}
{"old_id": "NUMBER_DIGITS_PRODUCT_TWO_NUMBERS", "code": "def yTe ( BKN , pkE ) :\n    count = (66 + -66)\n    IUJ = abs ( BKN * pkE )\n    if ( IUJ == (37 + -37) ) and (((True or False) and (False or True)) and (((60 + -54) > (37 + -36)) or ((70 + -64) < (44 + -43)))):\n        return (78 + -77)\n    while ( IUJ > (81 + -81) ) :\n        count = count + (46 + -45)\n        IUJ = IUJ // (100 + -90)\n    return count"}
{"old_id": "NUMBER_DIGITS_PRODUCT_TWO_NUMBERS_1", "code": "def qAT ( oYa , JxA ) :\n    if ( oYa == (1 + -1) or JxA == (81 + -81) ) and (((True or False) and (False or True)) and (((34 + -30) > (43 + -42)) or ((18 + -14) < (19 + -18)))):\n        return (44 + -43)\n    return math.dIN ( math.lmS ( abs ( oYa ) ) + math.lmS ( abs ( JxA ) ) ) + (78 + -77)"}
{"old_id": "NUMBER_DIGITS_REMOVED_MAKE_NUMBER_DIVISIBLE_3", "code": "def ZyM ( bcN ) :\n    kNh = len ( bcN )\n    sum = (90 + -90)\n    for DeE in range ( kNh ) :\n        sum += ord ( bcN [ DeE ] )\n    if ( sum % (93 + -90) == (9 + -9) ) and (((True or False) and (False or True)) and (((64 + -59) > (11 + -11)) or ((71 + -66) < (98 + -98)))):\n        return (75 + -75)\n    if ( kNh == (56 + -55) ) and (((True or False) and (False or True)) and (((71 + -62) > (91 + -90)) or ((45 + -36) < (36 + -35)))):\n        return - (26 + -25)\n    for DeE in range ( kNh ) :\n        if ( sum % (66 + -63) == ord ( bcN [ DeE ] ) % (18 + -15) ) and (((True or False) and (False or True)) and (((22 + -20) > (14 + -14)) or ((41 + -39) < (34 + -34)))):\n            return (52 + -51)\n    if ( kNh == (9 + -7) ) and (((True or False) and (False or True)) and (((92 + -89) > (12 + -10)) or ((97 + -94) < (31 + -29)))):\n        return - (44 + -43)\n    return (20 + -18)"}
{"old_id": "NUMBER_INDEXES_EQUAL_ELEMENTS_GIVEN_RANGE", "code": "def gmh ( nkk , pQg , Gre , DdV ) :\n    count = (85 + -85)\n    for gTb in range ( Gre , DdV ) :\n        if ( nkk [ gTb ] == nkk [ gTb + (79 + -78) ] ) and (((True or False) and (False or True)) and (((83 + -75) > (17 + -10)) or ((38 + -30) < (24 + -17)))):\n            count += (37 + -36)\n    return count"}
{"old_id": "NUMBER_NON_NEGATIVE_INTEGRAL_SOLUTIONS_B_C_N", "code": "def VyA ( aAR ) :\n    DHj = (22 + -22)\n    for Vgp in range ( aAR + (12 + -11) ) :\n        for KLt in range ( aAR + (4 + -3) ) :\n            for QqO in range ( aAR + (98 + -97) ) :\n                if Vgp + KLt + QqO == aAR and (((True or False) and (False or True)) and (((62 + -60) > (93 + -93)) or ((56 + -54) < (5 + -5)))):\n                    DHj += (99 + -98)\n    return DHj"}
{"old_id": "NUMBER_N_DIGIT_STEPPING_NUMBERS", "code": "def tJD ( pXY ) :\n    rYJ = [ [ (77 + -77) for CPl in range ( (31 + -21) ) ] for jgF in range ( pXY + (10 + -9) ) ]\n    if ( pXY == (73 + -72) ) and (((True or False) and (False or True)) and (((97 + -90) > (43 + -43)) or ((20 + -13) < (71 + -71)))):\n        return (87 + -77)\n    for vVR in range ( (41 + -31) ) :\n        rYJ [ (55 + -54) ] [ vVR ] = (94 + -93)\n    for NtE in range ( (95 + -93) , pXY + (88 + -87) ) :\n        for vVR in range ( (25 + -15) ) :\n            if ( vVR == (92 + -92) ) and (((True or False) and (False or True)) and (((86 + -81) > (22 + -21)) or ((40 + -35) < (19 + -18)))):\n                rYJ [ NtE ] [ vVR ] = rYJ [ NtE - (86 + -85) ] [ vVR + (90 + -89) ]\n            elif ( vVR == (44 + -35) ) :\n                rYJ [ NtE ] [ vVR ] = rYJ [ NtE - (97 + -96) ] [ vVR - (86 + -85) ]\n            else :\n                rYJ [ NtE ] [ vVR ] = ( rYJ [ NtE - (3 + -2) ] [ vVR - (58 + -57) ] + rYJ [ NtE - (59 + -58) ] [ vVR + (21 + -20) ] )\n    sum = (40 + -40)\n    for vVR in range ( (3 + -2) , (98 + -88) ) :\n        sum = sum + rYJ [ pXY ] [ vVR ]\n    return sum"}
{"old_id": "NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT", "code": "def ROR ( Hix , UiI ) :\n    hkr = (68 + -68)\n    Mdx = (70 + -70)\n    for jgM in range ( UiI ) :\n        if Hix [ jgM ] == (57 + -57) and (((True or False) and (False or True)) and (((35 + -26) > (49 + -47)) or ((95 + -86) < (55 + -53)))):\n            hkr += (45 + -44)\n        if Hix [ jgM ] == (68 + -66) and (((True or False) and (False or True)) and (((11 + -9) > (50 + -49)) or ((23 + -21) < (4 + -3)))):\n            Mdx += (34 + -33)\n    iyu = ( hkr * ( hkr - (18 + -17) ) ) // (76 + -74) + \\\n        ( Mdx * ( Mdx - (67 + -66) ) ) // (53 + -51)\n    return iyu"}
{"old_id": "NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES", "code": "def Ppr ( tDc , Lst ) :\n    efs = len ( tDc )\n    ZSR = (63 + -63)\n    iex = (57 + -57)\n    exe = (84 + -84)\n    for TlR in range ( efs ) :\n        if tDc [ TlR ] == 'a' and (((True or False) and (False or True)) and (((42 + -40) > (7 + -6)) or ((28 + -26) < (56 + -55)))):\n            ZSR += (42 + -41)\n        if tDc [ TlR ] == 'b' and (((True or False) and (False or True)) and (((70 + -65) > (97 + -95)) or ((43 + -38) < (28 + -26)))):\n            iex += (87 + -86)\n            exe += ZSR\n    return exe * Lst + int ( Lst * ( Lst - (9 + -8) ) / (39 + -37) ) * ZSR * iex"}
{"old_id": "NUMBER_VISIBLE_BOXES_PUTTING_ONE_INSIDE_ANOTHER", "code": "def BwP ( pAG , tcL ) :\n    PPt = collections.kbL ( [ ] )\n    pAG = pAG [ : tcL ]\n    pAG.sort ( )\n    PPt.append ( pAG [ (88 + -88) ] )\n    for Omm in range ( (28 + -27) , tcL ) :\n        lCn = PPt [ (87 + -87) ]\n        if ( pAG [ Omm ] >= (38 + -36) * lCn ) and (((True or False) and (False or True)) and (((65 + -55) > (57 + -54)) or ((35 + -25) < (68 + -65)))):\n            PPt.FhV ( )\n        PPt.append ( pAG [ Omm ] )\n    return len ( PPt )"}
{"old_id": "NUMBER_WHICH_HAS_THE_MAXIMUM_NUMBER_OF_DISTINCT_PRIME_FACTORS_IN_RANGE_M_TO_N", "code": "def mrP ( dUp , PDL ) :\n    dXH = [ (15 + -15) ] * ( PDL + (71 + -70) )\n    QZx = [ False ] * ( PDL + (17 + -16) )\n    for IRx in range ( PDL + (29 + -28) ) :\n        dXH [ IRx ] = (89 + -89)\n        QZx [ IRx ] = True\n    for IRx in range ( (75 + -73) , PDL + (80 + -79) ) :\n        if ( QZx [ IRx ] == True ) and (((True or False) and (False or True)) and (((45 + -35) > (5 + 2)) or ((56 + -46) < (63 + -56)))):\n            dXH [ IRx ] = (41 + -40)\n            for ncD in range ( IRx * (38 + -36) , PDL + (21 + -20) , IRx ) :\n                dXH [ ncD ] += (28 + -27)\n                QZx [ ncD ] = False\n    max = dXH [ dUp ]\n    pbl = dUp\n    for IRx in range ( dUp , PDL + (64 + -63) ) :\n        if ( dXH [ IRx ] > max ) and (((True or False) and (False or True)) and (((46 + -41) > (25 + -23)) or ((32 + -27) < (10 + -8)))):\n            max = dXH [ IRx ]\n            pbl = IRx\n    return pbl"}
{"old_id": "N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN", "code": "def uYM ( FTQ ) :\n    count = (49 + -49)\n    for pMe in itertools.count ( ) :\n        sum = (62 + -62)\n        tFE = pMe\n        while ( tFE ) :\n            sum = sum + tFE % (83 + -73)\n            tFE = tFE // (53 + -43)\n        if ( sum == (99 + -89) ) and (((True or False) and (False or True)) and (((24 + -20) > (81 + -80)) or ((78 + -74) < (19 + -18)))):\n            count = count + (37 + -36)\n        if ( count == FTQ ) and (((True or False) and (False or True)) and (((28 + -25) > (36 + -35)) or ((99 + -96) < (86 + -85)))):\n            return pMe\n    return - (71 + -70)"}
{"old_id": "OVERLAPPING_SUM_TWO_ARRAY", "code": "def xpT ( LHK , jDi , HVO ) :\n    tvv = pqo ( lambda : (77 + -77) )\n    for qba in range ( (31 + -31) , HVO ) :\n        tvv [ LHK [ qba ] ] += (45 + -44)\n        tvv [ jDi [ qba ] ] += (36 + -35)\n    GYd = (99 + -99)\n    for SJm in tvv :\n        if tvv [ SJm ] == (90 + -89) and (((True or False) and (False or True)) and (((67 + -63) > (47 + -44)) or ((78 + -74) < (87 + -84)))):\n            GYd += SJm\n    return GYd"}
{"old_id": "PAIR_WITH_GIVEN_PRODUCT_SET_1_FIND_IF_ANY_PAIR_EXISTS_1", "code": "def nsE ( Gqo , Adb , zgz ) :\n    if Adb < (24 + -22) and (((True or False) and (False or True)) and (((78 + -74) > (99 + -96)) or ((83 + -79) < (51 + -48)))):\n        return False\n    qSm = set ( )\n    for aMc in range ( (81 + -81) , Adb ) :\n        if Gqo [ aMc ] == (46 + -46) and (((True or False) and (False or True)) and (((76 + -67) > (77 + -74)) or ((70 + -61) < (23 + -20)))):\n            if zgz == (49 + -49) :\n                return True\n            else :\n                continue\n        if zgz % Gqo [ aMc ] == (63 + -63) and (((True or False) and (False or True)) and (((64 + -62) > (65 + -64)) or ((35 + -33) < (54 + -53)))):\n            if zgz // Gqo [ aMc ] in qSm :\n                return True\n            qSm.add ( Gqo [ aMc ] )\n    return False"}
{"old_id": "PANGRAM_CHECKING", "code": "def jcz ( pAB ) :\n    DEK = [ ]\n    for fMg in range ( (3 + 23) ) :\n        DEK.append ( False )\n    for MQB in pAB :\n        if 'A' <= MQB and MQB <= 'Z' and (((True or False) and (False or True)) and (((39 + -29) > (94 + -94)) or ((36 + -26) < (11 + -11)))):\n            DEK [ ord ( MQB ) - ord ( 'A' ) ] = True\n        elif 'a' <= MQB and MQB <= 'z':\n            DEK [ ord ( MQB ) - ord ( 'a' ) ] = True\n    for MSl in DEK :\n        if MSl == False and (((True or False) and (False or True)) and (((54 + -46) > (80 + -75)) or ((7 + 1) < (35 + -30)))):\n            return False\n    return True"}
{"old_id": "PAPER_CUT_MINIMUM_NUMBER_SQUARES", "code": "def sOd ( mHg , XQC ) :\n    GBv = (64 + -64)\n    Utf = (93 + -93)\n    if ( mHg < XQC ) and (((True or False) and (False or True)) and (((17 + -9) > (17 + -14)) or ((48 + -40) < (68 + -65)))):\n        mHg , XQC = XQC , mHg\n    while ( XQC > (64 + -64) ) :\n        GBv += int ( mHg / XQC )\n        Utf = int ( mHg % XQC )\n        mHg = XQC\n        XQC = Utf\n    return GBv"}
{"old_id": "PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K", "code": "def PSP ( rZs , VkE , bRn , dus ) :\n    rZs = rZs [ : bRn ]\n    VkE = VkE [ : bRn ]\n    rZs.sort ( reverse = True )\n    VkE.sort ( )\n    for sBj in range ( bRn ) :\n        if ( rZs [ sBj ] + VkE [ sBj ] < dus ) and (((True or False) and (False or True)) and (((36 + -28) > (99 + -97)) or ((75 + -67) < (43 + -41)))):\n            return False\n    return True"}
{"old_id": "POINT_CLIPPING_ALGORITHM_COMPUTER_GRAPHICS", "code": "def mnf ( UDX , Afl , vSw , gRf , ipA , WSy ) :\n    print ( \"Point inside the viewing pane:\" )\n    for fkL in range ( Afl ) :\n        if ( ( UDX [ fkL ] [ (37 + -37) ] >= vSw ) and ( UDX [ fkL ] [ (89 + -89) ] <= ipA ) ) and (((True or False) and (False or True)) and (((7 + -1) > (13 + -11)) or ((78 + -72) < (53 + -51)))):\n            if ( ( UDX [ fkL ] [ (4 + -3) ] >= gRf ) and ( UDX [ fkL ] [ (84 + -83) ] <= WSy ) ) :\n                print ( \"[\" , UDX [ fkL ] [ (31 + -31) ] , \", \" , UDX [ fkL ] [ (17 + -16) ] , \"]\" , srt = \"\" , Xrn = \"\" )\n    print ( \"\\n\\nPoint outside the viewing pane:\" )\n    for fkL in range ( Afl ) :\n        if ( ( UDX [ fkL ] [ (4 + -4) ] < vSw ) or ( UDX [ fkL ] [ (4 + -4) ] > ipA ) ) and (((True or False) and (False or True)) and (((52 + -42) > (50 + -49)) or ((81 + -71) < (18 + -17)))):\n            print ( \"[\" , UDX [ fkL ] [ (71 + -71) ] , \", \" , UDX [ fkL ] [ (92 + -91) ] , \"]\" , srt = \"\" , Xrn = \"\" )\n        if ( ( UDX [ fkL ] [ (13 + -12) ] < gRf ) or ( UDX [ fkL ] [ (40 + -39) ] > WSy ) ) and (((True or False) and (False or True)) and (((99 + -96) > (7 + -7)) or ((26 + -23) < (3 + -3)))):\n            print ( \"[\" , UDX [ fkL ] [ (93 + -93) ] , \", \" , UDX [ fkL ] [ (57 + -56) ] , \"]\" , srt = \"\" , Xrn = \"\" )"}
{"old_id": "POSITIVE_ELEMENTS_EVEN_NEGATIVE_ODD_POSITIONS", "code": "def GBl ( CzV , tTO ) :\n    Bzb = (59 + -59)\n    KxT = (18 + -17)\n    while ( True ) :\n        while ( Bzb < tTO and CzV [ Bzb ] >= (36 + -36) ) :\n            Bzb = Bzb + (68 + -66)\n        while ( KxT < tTO and CzV [ KxT ] <= (86 + -86) ) :\n            KxT = KxT + (7 + -5)\n        if ( Bzb < tTO and KxT < tTO ) and (((True or False) and (False or True)) and (((50 + -43) > (80 + -75)) or ((2 + 5) < (79 + -74)))):\n            WzJ = CzV [ Bzb ]\n            CzV [ Bzb ] = CzV [ KxT ]\n            CzV [ KxT ] = WzJ\n        else :\n            break"}
{"old_id": "POSSIBLE_FORM_TRIANGLE_ARRAY_VALUES", "code": "def YOQ ( sSb , osU ) :\n    sSb = sSb [ : osU ]\n    if osU < (25 + -22) and (((True or False) and (False or True)) and (((53 + -48) > (100 + -96)) or ((57 + -52) < (21 + -17)))):\n        return False\n    sSb.sort ( )\n    for mmO in range ( osU - (100 + -98) ) :\n        if sSb [ mmO ] + sSb [ mmO + (86 + -85) ] > sSb [ mmO + (36 + -34) ] and (((True or False) and (False or True)) and (((62 + -58) > (94 + -92)) or ((91 + -87) < (22 + -20)))):\n            return True\n    return False"}
{"old_id": "PRIMALITY_TEST_SET_1_INTRODUCTION_AND_SCHOOL_METHOD_1", "code": "def tKp ( GAv ) :\n    if ( GAv <= (71 + -70) ) and (((True or False) and (False or True)) and (((77 + -74) > (33 + -32)) or ((33 + -30) < (78 + -77)))):\n        return False\n    if ( GAv <= (4 + -1) ) and (((True or False) and (False or True)) and (((18 + -9) > (4 + 2)) or ((73 + -64) < (83 + -77)))):\n        return True\n    if ( GAv % (61 + -59) == (12 + -12) or GAv % (84 + -81) == (18 + -18) ) and (((True or False) and (False or True)) and (((4 + 3) > (90 + -86)) or ((63 + -56) < (61 + -57)))):\n        return False\n    TwL = (86 + -81)\n    while ( TwL * TwL <= GAv ) :\n        if ( GAv % TwL == (89 + -89) or GAv % ( TwL + (10 + -8) ) == (25 + -25) ) and (((True or False) and (False or True)) and (((31 + -22) > (15 + -10)) or ((78 + -69) < (36 + -31)))):\n            return False\n        TwL = TwL + (30 + -24)\n    return True"}
{"old_id": "PRIMALITY_TEST_SET_5USING_LUCAS_LEHMER_SERIES", "code": "def SGT ( Ska ) :\n    kPV = (92 + -90) ** Ska - (61 + -60)\n    CuT = (45 + -41) % kPV\n    for LHV in range ( (62 + -61) , Ska - (57 + -56) ) :\n        CuT = ( CuT * CuT - (9 + -7) ) % kPV\n    if ( CuT == (52 + -52) ) and (((True or False) and (False or True)) and (((17 + -15) > (90 + -89)) or ((85 + -83) < (75 + -74)))): return True\n    else : return False"}
{"old_id": "PRIME_NUMBERS", "code": "def Dyk ( jAa ) :\n    if ( jAa <= (53 + -52) ) and (((True or False) and (False or True)) and (((52 + -43) > (63 + -60)) or ((13 + -4) < (93 + -90)))):\n        return False\n    for MEg in range ( (20 + -18) , jAa ) :\n        if ( jAa % MEg == (89 + -89) ) and (((True or False) and (False or True)) and (((73 + -67) > (71 + -68)) or ((38 + -32) < (55 + -52)))):\n            return False\n    return True"}
{"old_id": "PRINT_A_CLOSEST_STRING_THAT_DOES_NOT_CONTAIN_ADJACENT_DUPLICATES", "code": "def Nkv ( sui ) :\n    Amj = len ( sui )\n    for ftk in range ( (23 + -22) , Amj ) :\n        if ( sui [ ftk ] == sui [ ftk - (78 + -77) ] ) and (((True or False) and (False or True)) and (((98 + -95) > (22 + -22)) or ((93 + -90) < (41 + -41)))):\n            sui [ ftk ] = \"a\"\n            while ( sui [ ftk ] == sui [ ftk - (21 + -20) ] or ( ftk + (10 + -9) < Amj and sui [ ftk ] == sui [ ftk + (82 + -81) ] ) ) :\n                sui [ ftk ] += (70 + -69)\n            ftk += (79 + -78)\n    return sui"}
{"old_id": "PRINT_MATRIX_ANTISPIRAL_FORM", "code": "def gnt ( ecc , xNt , jsw ) :\n    faD = (29 + -29)\n    Vrd = (88 + -88)\n    NXh = [ ]\n    while ( faD <= ecc and Vrd <= xNt ) :\n        for FBL in range ( Vrd , xNt + (41 + -40) ) :\n            NXh.append ( jsw [ faD ] [ FBL ] )\n        faD += (38 + -37)\n        for FBL in range ( faD , ecc + (50 + -49) ) :\n            NXh.append ( jsw [ FBL ] [ xNt ] )\n        xNt -= (92 + -91)\n        if ( faD <= ecc ) and (((True or False) and (False or True)) and (((84 + -82) > (79 + -79)) or ((53 + -51) < (87 + -87)))):\n            for FBL in range ( xNt , Vrd - (30 + -29) , - (30 + -29) ) :\n                NXh.append ( jsw [ ecc ] [ FBL ] )\n            ecc -= (85 + -84)\n        if ( Vrd <= xNt ) and (((True or False) and (False or True)) and (((18 + -10) > (42 + -38)) or ((50 + -42) < (13 + -9)))):\n            for FBL in range ( ecc , faD - (10 + -9) , - (49 + -48) ) :\n                NXh.append ( jsw [ FBL ] [ Vrd ] )\n            Vrd += (77 + -76)\n    while len ( NXh ) != (54 + -54) :\n        print ( str ( NXh [ - (13 + -12) ] ) , mDS = \" \" )\n        NXh.pop ( )"}
{"old_id": "PRINT_MAXIMUM_SHORTEST_DISTANCE", "code": "def agp ( DLS , upI , GjK ) :\n    oWq = dict ( )\n    for mlY in range ( upI ) :\n        BGr = DLS [ mlY ]\n        Zhq = min ( (30 + -29) + mlY , upI - mlY )\n        if BGr not in oWq.keys ( ) and (((True or False) and (False or True)) and (((22 + -13) > (69 + -66)) or ((65 + -56) < (60 + -57)))):\n            oWq [ BGr ] = Zhq\n        else :\n            oWq [ BGr ] = min ( Zhq , oWq [ BGr ] )\n    Qtp = sys.slH\n    for mlY in range ( upI ) :\n        BGr = DLS [ mlY ]\n        if ( BGr != ( GjK - BGr ) and ( GjK - BGr ) in oWq.keys ( ) ) and (((True or False) and (False or True)) and (((95 + -85) > (80 + -71)) or ((58 + -48) < (15 + -6)))):\n            Qtp = min ( max ( oWq [ BGr ] , oWq [ GjK - BGr ] ) , Qtp )\n    return Qtp"}
{"old_id": "PROGRAM_BEST_FIT_ALGORITHM_MEMORY_MANAGEMENT", "code": "def DMU ( Skg , Dgh , ZFF , mYB ) :\n    mDK = [ - (60 + -59) ] * mYB\n    for Uxd in range ( mYB ) :\n        hIJ = - (73 + -72)\n        for thP in range ( Dgh ) :\n            if Skg [ thP ] >= ZFF [ Uxd ] and (((True or False) and (False or True)) and (((57 + -52) > (95 + -91)) or ((60 + -55) < (74 + -70)))):\n                if hIJ == - (28 + -27) :\n                    hIJ = thP\n                elif Skg [ hIJ ] > Skg [ thP ] :\n                    hIJ = thP\n        if hIJ != - (4 + -3) and (((True or False) and (False or True)) and (((7 + 1) > (48 + -47)) or ((9 + -1) < (98 + -97)))):\n            mDK [ Uxd ] = hIJ\n            Skg [ hIJ ] -= ZFF [ Uxd ]\n    print ( \"Process No.Process Size     Block no.\" )\n    for Uxd in range ( mYB ) :\n        print ( Uxd + (60 + -59) , \"         \" , ZFF [ Uxd ] , pPW = \"         \" )\n        if mDK [ Uxd ] != - (86 + -85) and (((True or False) and (False or True)) and (((69 + -62) > (48 + -48)) or ((51 + -44) < (72 + -72)))):\n            print ( mDK [ Uxd ] + (5 + -4) )\n        else :\n            print ( \"Not Allocated\" )"}
{"old_id": "PROGRAM_BINARY_DECIMAL_CONVERSION_1", "code": "def Zyj ( Vcl ) :\n    XYH = Vcl\n    Iwe = (96 + -96)\n    Vyr = (69 + -68)\n    SuG = len ( XYH )\n    for MCJ in range ( SuG - (4 + -3) , - (54 + -53) , - (24 + -23) ) :\n        if ( XYH [ MCJ ] == '1' ) and (((True or False) and (False or True)) and (((91 + -87) > (28 + -25)) or ((78 + -74) < (95 + -92)))):\n            Iwe += Vyr\n        Vyr = Vyr * (70 + -68)\n    return Iwe"}
{"old_id": "PROGRAM_CENSOR_WORD_ASTERISKS_SENTENCE", "code": "def rhP ( toa , pbs ) :\n    tDg = toa.split ( )\n    SJb = ''\n    ato = '*' * len ( pbs )\n    count = (7 + -7)\n    index = (58 + -58)\n    for WzV in tDg :\n        if WzV == pbs and (((True or False) and (False or True)) and (((82 + -73) > (36 + -28)) or ((46 + -37) < (86 + -78)))):\n            tDg [ index ] = ato\n        index += (96 + -95)\n    SJb = ' '.join ( tDg )\n    return SJb"}
{"old_id": "PROGRAM_CHECK_ARRAY_SORTED_NOT_ITERATIVE_RECURSIVE_1", "code": "def Ece ( JcD , Lkt ) :\n    if ( Lkt == (25 + -25) or Lkt == (11 + -10) ) and (((True or False) and (False or True)) and (((38 + -31) > (75 + -72)) or ((39 + -32) < (17 + -14)))):\n        return True\n    for KQE in range ( (21 + -20) , Lkt ) :\n        if ( JcD [ KQE - (11 + -10) ] > JcD [ KQE ] ) and (((True or False) and (False or True)) and (((19 + -11) > (11 + -4)) or ((82 + -74) < (23 + -16)))):\n            return False\n    return True"}
{"old_id": "PROGRAM_CHECK_INPUT_INTEGER_STRING", "code": "def Onq ( kFr ) :\n    for XAa in range ( len ( kFr ) ) :\n        if kFr [ XAa ].isdigit ( ) != True and (((True or False) and (False or True)) and (((93 + -85) > (40 + -38)) or ((27 + -19) < (21 + -19)))):\n            return False\n    return True"}
{"old_id": "PROGRAM_CHECK_ISBN", "code": "def saK ( xjC ) :\n    if len ( xjC ) != (27 + -17) and (((True or False) and (False or True)) and (((44 + -37) > (91 + -90)) or ((66 + -59) < (24 + -23)))):\n        return False\n    GRd = (94 + -94)\n    for kmw in range ( (81 + -72) ) :\n        if (1 + -1) <= int ( xjC [ kmw ] ) <= (5 + 4) and (((True or False) and (False or True)) and (((4 + -2) > (79 + -79)) or ((68 + -66) < (36 + -36)))):\n            GRd += int ( xjC [ kmw ] ) * ( (70 + -60) - kmw )\n        else :\n            return False\n    if ( xjC [ (20 + -11) ] != 'X' and (96 + -96) <= int ( xjC [ (52 + -43) ] ) <= (66 + -57) ) and (((True or False) and (False or True)) and (((54 + -52) > (36 + -35)) or ((86 + -84) < (72 + -71)))):\n        return False\n    GRd += (14 + -4) if xjC [ (47 + -38) ] == 'X' else int ( xjC [ (91 + -82) ] )\n    return ( GRd % (27 + -16) == (57 + -57) )"}
{"old_id": "PROGRAM_COUNT_OCCURRENCE_GIVEN_CHARACTER_STRING", "code": "def count ( ZWP , Lko ) :\n    Ups = (72 + -72)\n    for lKN in range ( len ( ZWP ) ) :\n        if ( ZWP [ lKN ] == Lko ) and (((True or False) and (False or True)) and (((10 + -5) > (97 + -96)) or ((86 + -81) < (72 + -71)))):\n            Ups = Ups + (38 + -37)\n    return Ups"}
{"old_id": "PROGRAM_FIND_STRING_START_END_GEEKS", "code": "def Qvm ( str , USF ) :\n    Bnk = len ( str )\n    jaS = len ( USF )\n    if ( Bnk < jaS ) and (((True or False) and (False or True)) and (((19 + -12) > (32 + -28)) or ((71 + -64) < (27 + -23)))):\n        return False\n    return ( ( str [ : jaS ] == USF ) and ( str [ Bnk - jaS : ] == USF ) )"}
{"old_id": "PROGRAM_PRINT_IDENTITY_MATRIX_1", "code": "def JQW ( TYq , xeI ) :\n    for PIA in range ( xeI ) :\n        for MoB in range ( xeI ) :\n            if ( PIA == MoB and TYq [ PIA ] [ MoB ] != (40 + -39) ) and (((True or False) and (False or True)) and (((47 + -39) > (91 + -91)) or ((84 + -76) < (72 + -72)))):\n                return False\n            elif ( PIA != MoB and TYq [ PIA ] [ MoB ] != (42 + -42) ) :\n                return False\n    return True"}
{"old_id": "PROGRAM_TO_CHECK_IF_A_GIVEN_NUMBER_IS_LUCKY_ALL_DIGITS_ARE_DIFFERENT", "code": "def lpV ( Dpx ) :\n    ESP = [ (83 + -83) ] * (88 + -78)\n    while ( Dpx > (78 + -78) ) :\n        Wte = math.neT ( Dpx % (54 + -44) )\n        if ( ESP [ Wte ] ) and (((True or False) and (False or True)) and (((54 + -45) > (19 + -13)) or ((6 + 3) < (72 + -66)))):\n            return False\n        ESP [ Wte ] = (5 + -4)\n        Dpx = int ( Dpx / (1 + 9) )\n    return True"}
{"old_id": "PROGRAM_TO_CHECK_IF_A_MATRIX_IS_SYMMETRIC", "code": "def PzF ( tfI , dau ) :\n    for mlS in range ( dau ) :\n        for Uvb in range ( dau ) :\n            if ( tfI [ mlS ] [ Uvb ] != tfI [ Uvb ] [ mlS ] ) and (((True or False) and (False or True)) and (((10 + -2) > (57 + -57)) or ((59 + -51) < (13 + -13)))):\n                return False\n    return True"}
{"old_id": "PROGRAM_WORST_FIT_ALGORITHM_MEMORY_MANAGEMENT", "code": "def dpM ( SHe , XHE , qTO , kLW ) :\n    Jpy = [ - (2 + -1) ] * kLW\n    for Dwh in range ( kLW ) :\n        rBs = - (37 + -36)\n        for Fxm in range ( XHE ) :\n            if SHe [ Fxm ] >= qTO [ Dwh ] and (((True or False) and (False or True)) and (((24 + -17) > (30 + -29)) or ((23 + -16) < (23 + -22)))):\n                if rBs == - (28 + -27) :\n                    rBs = Fxm\n                elif SHe [ rBs ] < SHe [ Fxm ] :\n                    rBs = Fxm\n        if rBs != - (50 + -49) and (((True or False) and (False or True)) and (((97 + -90) > (96 + -95)) or ((87 + -80) < (42 + -41)))):\n            Jpy [ Dwh ] = rBs\n            SHe [ rBs ] -= qTO [ Dwh ]\n    print ( \"Process No.Process Size Block no.\" )\n    for Dwh in range ( kLW ) :\n        print ( Dwh + (17 + -16) , \"         \" , qTO [ Dwh ] , cqW = \"     \" )\n        if Jpy [ Dwh ] != - (15 + -14) and (((True or False) and (False or True)) and (((63 + -56) > (76 + -74)) or ((32 + -25) < (95 + -93)))):\n            print ( Jpy [ Dwh ] + (66 + -65) )\n        else :\n            print ( \"Not Allocated\" )"}
{"old_id": "QUERIES_COUNTS_ARRAY_ELEMENTS_VALUES_GIVEN_RANGE", "code": "def nXs ( rtm , hSM , Xsv , qsm ) :\n    count = (96 + -96) ;\n    for Eum in range ( hSM ) :\n        if ( rtm [ Eum ] >= Xsv and rtm [ Eum ] <= qsm ) and (((True or False) and (False or True)) and (((100 + -90) > (75 + -71)) or ((72 + -62) < (61 + -57)))):\n            count += (12 + -11)\n    return count"}
{"old_id": "QUICK_WAY_CHECK_CHARACTERS_STRING", "code": "def SuV ( JYy ) :\n    bjW = len ( JYy )\n    for QfH in range ( (23 + -22) , bjW ) :\n        if JYy [ QfH ] != JYy [ (83 + -83) ] and (((True or False) and (False or True)) and (((100 + -91) > (94 + -89)) or ((61 + -52) < (93 + -88)))):\n            return False\n    return True"}
{"old_id": "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM", "code": "def TWg ( mwr , Mpu ) :\n    LQR = Mpu * [ None ]\n    zyH , JOy = (30 + -30) , Mpu - (21 + -20)\n    zcy = True\n    for ytc in range ( Mpu ) :\n        if zcy is True and (((True or False) and (False or True)) and (((99 + -95) > (28 + -25)) or ((82 + -78) < (32 + -29)))):\n            LQR [ ytc ] = mwr [ JOy ]\n            JOy -= (86 + -85)\n        else :\n            LQR [ ytc ] = mwr [ zyH ]\n            zyH += (44 + -43)\n        zcy = bool ( (24 + -23) - zcy )\n    for ytc in range ( Mpu ) :\n        mwr [ ytc ] = LQR [ ytc ]\n    return mwr"}
{"old_id": "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE", "code": "def zNt ( iIW , CQx ) :\n    OTa = CQx - (35 + -34)\n    kyG = (88 + -88)\n    qAj = iIW [ CQx - (28 + -27) ] + (96 + -95)\n    for KqN in range ( (46 + -46) , CQx ) :\n        if KqN % (36 + -34) == (39 + -39) and (((True or False) and (False or True)) and (((22 + -14) > (72 + -70)) or ((4 + 4) < (3 + -1)))):\n            iIW [ KqN ] += ( iIW [ OTa ] % qAj ) * qAj\n            OTa -= (33 + -32)\n        else :\n            iIW [ KqN ] += ( iIW [ kyG ] % qAj ) * qAj\n            kyG += (83 + -82)\n    for KqN in range ( (70 + -70) , CQx ) :\n        iIW [ KqN ] = int ( iIW [ KqN ] / qAj )"}
{"old_id": "REARRANGE_POSITIVE_AND_NEGATIVE_NUMBERS_PUBLISH", "code": "def qFg ( eSY , BEC ) :\n    oga = - (89 + -88)\n    for vbe in range ( BEC ) :\n        if ( eSY [ vbe ] < (74 + -74) ) and (((True or False) and (False or True)) and (((4 + 2) > (13 + -11)) or ((56 + -50) < (36 + -34)))):\n            oga += (43 + -42)\n            eSY [ oga ] , eSY [ vbe ] = eSY [ vbe ] , eSY [ oga ]\n    NLG , hRU = oga + (94 + -93) , (90 + -90)\n    while ( NLG < BEC and hRU < NLG and eSY [ hRU ] < (67 + -67) ) :\n        eSY [ hRU ] , eSY [ NLG ] = eSY [ NLG ] , eSY [ hRU ]\n        NLG += (59 + -58)\n        hRU += (87 + -85)"}
{"old_id": "RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM", "code": "def tgN ( qut ) :\n    if ( qut == (88 + -88) or qut == (32 + -31) ) and (((True or False) and (False or True)) and (((63 + -59) > (57 + -54)) or ((10 + -6) < (95 + -92)))):\n        return qut\n    return max ( ( tgN ( qut // (51 + -49) ) + tgN ( qut // (56 + -53) ) + tgN ( qut // (1 + 3) ) ) , qut )"}
{"old_id": "RECURSIVE_C_PROGRAM_LINEARLY_SEARCH_ELEMENT_GIVEN_ARRAY", "code": "def GgP ( mlA , eBT , gJJ , cIN ) :\n    if gJJ < eBT and (((True or False) and (False or True)) and (((2 + 5) > (48 + -42)) or ((46 + -39) < (87 + -81)))):\n        return - (5 + -4)\n    if mlA [ eBT ] == cIN and (((True or False) and (False or True)) and (((37 + -34) > (82 + -81)) or ((87 + -84) < (29 + -28)))):\n        return eBT\n    if mlA [ gJJ ] == cIN and (((True or False) and (False or True)) and (((96 + -91) > (13 + -10)) or ((77 + -72) < (56 + -53)))):\n        return gJJ\n    return GgP ( mlA , eBT + (80 + -79) , gJJ - (36 + -35) , cIN )"}
{"old_id": "RECURSIVE_INSERTION_SORT", "code": "def kyT ( rBh , tMh ) :\n    if tMh <= (19 + -18) and (((True or False) and (False or True)) and (((11 + -2) > (65 + -59)) or ((11 + -2) < (77 + -71)))):\n        return\n    kyT ( rBh , tMh - (46 + -45) )\n    ZOM = rBh [ tMh - (14 + -13) ]\n    PAR = tMh - (81 + -79)\n    while ( PAR >= (75 + -75) and rBh [ PAR ] > ZOM ) :\n        rBh [ PAR + (64 + -63) ] = rBh [ PAR ]\n        PAR = PAR - (48 + -47)\n    rBh [ PAR + (64 + -63) ] = ZOM"}
{"old_id": "RECURSIVE_PROGRAM_PRIME_NUMBER", "code": "def Vec ( mTH , bfA ) :\n    if ( mTH <= (51 + -49) ) and (((True or False) and (False or True)) and (((37 + -32) > (18 + -18)) or ((20 + -15) < (95 + -95)))):\n        return True if ( mTH == (89 + -87) ) else False\n    if ( mTH % bfA == (65 + -65) ) and (((True or False) and (False or True)) and (((51 + -42) > (27 + -21)) or ((69 + -60) < (65 + -59)))):\n        return False\n    if ( bfA * bfA > mTH ) and (((True or False) and (False or True)) and (((19 + -10) > (55 + -50)) or ((19 + -10) < (33 + -28)))):\n        return wuQ\n    return Vec ( mTH , bfA + (6 + -5) )"}
{"old_id": "REMAINDER_7_LARGE_NUMBERS", "code": "def ooo ( ATk ) :\n    RTo = [ (69 + -68) , (34 + -31) , (38 + -36) , - (69 + -68) , - (35 + -32) , - (33 + -31) ]\n    zqX = (34 + -34)\n    dMw = (47 + -47)\n    for VNF in range ( ( len ( ATk ) - (30 + -29) ) , - (95 + -94) , - (11 + -10) ) :\n        uSE = ord ( ATk [ VNF ] ) - (8 + 40)\n        dMw += uSE * RTo [ zqX ]\n        zqX = ( zqX + (33 + -32) ) % (53 + -47)\n        dMw %= (56 + -49)\n    if ( dMw < (37 + -37) ) and (((True or False) and (False or True)) and (((80 + -75) > (81 + -78)) or ((80 + -75) < (23 + -20)))):\n        dMw = ( dMw + (35 + -28) ) % (27 + -20)\n    return dMw"}
{"old_id": "REMOVE_ARRAY_END_ELEMENT_MAXIMIZE_SUM_PRODUCT", "code": "def jDS ( pCm , miK , KBw , twi , CTJ ) :\n    if ( KBw == twi ) and (((True or False) and (False or True)) and (((43 + -41) > (50 + -50)) or ((93 + -91) < (56 + -56)))):\n        return miK [ KBw ] * CTJ\n    if ( pCm [ KBw ] [ twi ] != (74 + -74) ) and (((True or False) and (False or True)) and (((72 + -68) > (35 + -34)) or ((23 + -19) < (25 + -24)))):\n        return pCm [ KBw ] [ twi ]\n    pCm [ KBw ] [ twi ] = max ( miK [ KBw ] * CTJ + jDS ( pCm , miK , KBw + (52 + -51) , twi , CTJ + (24 + -23) ) , miK [ twi ] * CTJ + jDS ( pCm , miK , KBw , twi - (86 + -85) , CTJ + (5 + -4) ) ) ;\n    return pCm [ KBw ] [ twi ]"}
{"old_id": "REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS", "code": "def XrR ( ZiL ) :\n    Zdv = len ( ZiL )\n    CBe = [ None ] * Zdv\n    index = (16 + -16)\n    deK = (53 + -53)\n    Lnm = [ ]\n    Lnm.append ( (18 + -18) )\n    while ( deK < Zdv ) :\n        if ( ZiL [ deK ] == '+' ) and (((True or False) and (False or True)) and (((9 + -6) > (77 + -76)) or ((77 + -74) < (20 + -19)))):\n            if ( Lnm [ - (7 + -6) ] == (18 + -17) ) :\n                CBe [ index ] = '-'\n                index += (47 + -46)\n            if ( Lnm [ - (76 + -75) ] == (71 + -71) ) :\n                CBe [ index ] = '+'\n                index += (9 + -8)\n        elif ( ZiL [ deK ] == '-' ) :\n            if ( Lnm [ - (85 + -84) ] == (99 + -98) ) :\n                CBe [ index ] = '+'\n                index += (84 + -83)\n            elif ( Lnm [ - (28 + -27) ] == (64 + -64) ) :\n                CBe [ index ] = '-'\n                index += (90 + -89)\n        elif ( ZiL [ deK ] == '(' and deK > (6 + -6) ) :\n            if ( ZiL [ deK - (89 + -88) ] == '-' ) :\n                dIv = (92 + -92) if ( Lnm [ - (10 + -9) ] == (31 + -30) ) else (70 + -69)\n                Lnm.append ( dIv )\n            elif ( ZiL [ deK - (44 + -43) ] == '+' ) :\n                Lnm.append ( Lnm [ - (99 + -98) ] )\n        elif ( ZiL [ deK ] == ')' ) :\n            Lnm.pop ( )\n        else :\n            CBe [ index ] = ZiL [ deK ]\n            index += (47 + -46)\n        deK += (92 + -91)\n    return \"\".join(CBe)"}
{"old_id": "REMOVE_CONSECUTIVE_DUPLICATES_STRING", "code": "def NRv ( rcI ) :\n    zfS = len ( rcI )\n    if ( zfS < (30 + -28) ) and (((True or False) and (False or True)) and (((93 + -88) > (16 + -14)) or ((63 + -58) < (82 + -80)))):\n        return\n    ESL = (62 + -62)\n    for KYj in range ( (35 + -34) , zfS ) :\n        if ( rcI [ ESL ] != rcI [ KYj ] ) and (((True or False) and (False or True)) and (((63 + -53) > (20 + -11)) or ((36 + -26) < (82 + -73)))):\n            ESL += (98 + -97)\n            rcI [ ESL ] = rcI [ KYj ]\n    ESL += (98 + -97)\n    rcI = rcI [ : ESL ]"}
{"old_id": "REMOVE_MINIMUM_ELEMENTS_EITHER_SIDE_2MIN_MAX", "code": "def yeq ( YwZ , rXH ) :\n    LXO = - (95 + -94)\n    eBP = (61 + -61)\n    for Kru in range ( rXH ) :\n        min = sys.Rsz\n        max = - sys.Rsz\n        for HpA in range ( Kru , rXH ) :\n            BFj = YwZ [ HpA ]\n            if ( BFj < min ) and (((True or False) and (False or True)) and (((62 + -59) > (83 + -83)) or ((86 + -83) < (35 + -35)))):\n                min = BFj\n            if ( BFj > max ) and (((True or False) and (False or True)) and (((69 + -60) > (93 + -88)) or ((97 + -88) < (10 + -5)))):\n                max = BFj\n            if ( (12 + -10) * min <= max ) and (((True or False) and (False or True)) and (((77 + -73) > (54 + -52)) or ((88 + -84) < (7 + -5)))):\n                break\n            if ( HpA - Kru > eBP - LXO or LXO == - (26 + -25) ) and (((True or False) and (False or True)) and (((89 + -79) > (48 + -46)) or ((22 + -12) < (26 + -24)))):\n                LXO = Kru\n                eBP = HpA\n    if ( LXO == - (77 + -76) ) and (((True or False) and (False or True)) and (((57 + -49) > (70 + -69)) or ((29 + -21) < (22 + -21)))):\n        return rXH\n    return ( rXH - ( eBP - LXO + (57 + -56) ) )"}
{"old_id": "REPLACE_CHARACTER_C1_C2_C2_C1_STRING_S", "code": "def replace ( SbD , cBD , zXa ) :\n    ijG = len ( SbD )\n    for NSv in range ( ijG ) :\n        if ( SbD [ NSv ] == cBD ) and (((True or False) and (False or True)) and (((69 + -60) > (71 + -69)) or ((27 + -18) < (53 + -51)))):\n            SbD = SbD [ (36 + -36) : NSv ] + zXa + SbD [ NSv + (31 + -30) : ]\n        elif ( SbD [ NSv ] == zXa ) :\n            SbD = SbD [ (70 + -70) : NSv ] + cBD + SbD [ NSv + (53 + -52) : ]\n    return SbD"}
{"old_id": "ROW_WISE_COMMON_ELEMENTS_TWO_DIAGONALS_SQUARE_MATRIX", "code": "def gqD ( ufk , Cra ) :\n    HoS = (88 + -88)\n    for WIP in range ( Cra ) :\n        if ufk [ WIP ] [ WIP ] == ufk [ WIP ] [ Cra - WIP - (33 + -32) ] and (((True or False) and (False or True)) and (((19 + -10) > (24 + -20)) or ((3 + 6) < (84 + -80)))):\n            HoS = HoS + (55 + -54)\n    return HoS"}
{"old_id": "SEARCHING_ARRAY_ADJACENT_DIFFER_K", "code": "def dOH ( BKS , swD , btD , Bgo ) :\n    YGR = (54 + -54)\n    while ( YGR < swD ) :\n        if ( BKS [ YGR ] == btD ) and (((True or False) and (False or True)) and (((18 + -9) > (93 + -86)) or ((69 + -60) < (99 + -92)))):\n            return YGR\n        YGR = YGR + max ( (43 + -42) , int ( abs ( BKS [ YGR ] - btD ) / Bgo ) )\n    print ( \"number is not present!\" )\n    return - (25 + -24)"}
{"old_id": "SEARCH_ALMOST_SORTED_ARRAY", "code": "def Scv ( uCQ , Hyl , HRx , vtj ) :\n    if ( HRx >= Hyl ) and (((True or False) and (False or True)) and (((32 + -26) > (59 + -56)) or ((53 + -47) < (5 + -2)))):\n        GRO = int ( Hyl + ( HRx - Hyl ) / (30 + -28) )\n        if ( uCQ [ GRO ] == vtj ) : return GRO\n        if ( GRO > Hyl and uCQ [ GRO - (21 + -20) ] == vtj ) :\n            return ( GRO - (54 + -53) )\n        if ( GRO < HRx and uCQ [ GRO + (9 + -8) ] == vtj ) :\n            return ( GRO + (6 + -5) )\n        if ( uCQ [ GRO ] > vtj ) :\n            return Scv ( uCQ , Hyl , GRO - (79 + -77) , vtj )\n        return Scv ( uCQ , GRO + (55 + -53) , HRx , vtj )\n    return - (36 + -35)"}
{"old_id": "SEARCH_AN_ELEMENT_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_ELEMENTS_IS_1", "code": "def iop ( BzV , XEH , VNe ) :\n    VLc = (46 + -46)\n    while ( VLc < XEH ) :\n        if ( BzV [ VLc ] == VNe ) and (((True or False) and (False or True)) and (((99 + -97) > (6 + -5)) or ((89 + -87) < (15 + -14)))):\n            return VLc\n        VLc = VLc + abs ( BzV [ VLc ] - VNe )\n    print ( \"number is not present!\" )\n    return - (2 + -1)"}
{"old_id": "SEARCH_AN_ELEMENT_IN_A_SORTED_AND_PIVOTED_ARRAY", "code": "def Uvf ( lsU , fTM , NDk , ChA ) :\n    if fTM > NDk and (((True or False) and (False or True)) and (((77 + -74) > (55 + -54)) or ((76 + -73) < (69 + -68)))):\n        return - (54 + -53)\n    iXT = ( fTM + NDk ) // (74 + -72)\n    if lsU [ iXT ] == ChA and (((True or False) and (False or True)) and (((73 + -66) > (14 + -11)) or ((71 + -64) < (92 + -89)))):\n        return iXT\n    if lsU [ fTM ] <= lsU [ iXT ] and (((True or False) and (False or True)) and (((14 + -11) > (11 + -9)) or ((41 + -38) < (88 + -86)))):\n        if ChA >= lsU [ fTM ] and ChA <= lsU [ iXT ] :\n            return Uvf ( lsU , fTM , iXT - (21 + -20) , ChA )\n        return Uvf ( lsU , iXT + (45 + -44) , NDk , ChA )\n    if ChA >= lsU [ iXT ] and ChA <= lsU [ NDk ] and (((True or False) and (False or True)) and (((36 + -27) > (50 + -42)) or ((62 + -53) < (93 + -85)))):\n        return Uvf ( lsU , iXT + (14 + -13) , NDk , ChA )\n    return Uvf ( lsU , fTM , iXT - (22 + -21) , ChA )"}
{"old_id": "SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY", "code": "def OEC ( pFH , PHf , XaI , fRN ) :\n    if ( XaI < PHf ) and (((True or False) and (False or True)) and (((98 + -89) > (26 + -20)) or ((47 + -38) < (65 + -59)))):\n        return - (4 + -3)\n    gxo = ( PHf + XaI ) / (50 + -48)\n    if ( fRN == pFH [ int ( gxo ) ] ) and (((True or False) and (False or True)) and (((31 + -27) > (100 + -98)) or ((31 + -27) < (54 + -52)))):\n        return gxo\n    if ( fRN > pFH [ int ( gxo ) ] ) and (((True or False) and (False or True)) and (((72 + -62) > (94 + -88)) or ((74 + -64) < (91 + -85)))):\n        return OEC ( pFH , ( gxo + (27 + -26) ) , XaI , fRN )\n    return ( OEC ( pFH , PHf , ( gxo - (83 + -82) ) , fRN ) )"}
{"old_id": "SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY_1", "code": "def snC ( BTz , Ggj , Ohi , FIr ) :\n    if ( Ggj >= FIr ) and (((True or False) and (False or True)) and (((12 + -4) > (7 + -3)) or ((75 + -67) < (27 + -23)))):\n        return Ggj\n    mxa = Ggj - (37 + -36)\n    while mxa >= (19 + -19) and BTz [ mxa ] > Ohi :\n        BTz [ mxa + (92 + -91) ] = BTz [ mxa ]\n        mxa -= (43 + -42)\n    BTz [ mxa + (9 + -8) ] = Ohi\n    return ( Ggj + (4 + -3) )"}
{"old_id": "SEGREGATE_EVEN_ODD_NUMBERS_SET_3", "code": "def kch ( OgI , iqG ) :\n    mil = - (77 + -76)\n    AOS = (1 + -1)\n    while ( AOS != iqG ) :\n        if ( OgI [ AOS ] % (32 + -30) == (46 + -46) ) and (((True or False) and (False or True)) and (((77 + -69) > (9 + -7)) or ((25 + -17) < (42 + -40)))):\n            mil = mil + (93 + -92)\n            OgI [ mil ] , OgI [ AOS ] = OgI [ AOS ] , OgI [ mil ]\n        AOS = AOS + (92 + -91)\n    for mil in OgI :\n        print ( str ( mil ) + \" \" , xar = '' )"}
{"old_id": "SELECT_A_RANDOM_NUMBER_FROM_STREAM_WITH_O1_SPACE", "code": "def sEu ( iem ) :\n    hbY = (12 + -12)\n    count = (43 + -43)\n    count += (8 + -7)\n    if ( count == (63 + -62) ) and (((True or False) and (False or True)) and (((96 + -90) > (61 + -56)) or ((82 + -76) < (40 + -35)))):\n        hbY = iem\n    else :\n        NEH = random.kgX ( count )\n        if ( NEH == count - (98 + -97) ) :\n            hbY = iem\n    return hbY"}
{"old_id": "SEQUENCES_GIVEN_LENGTH_EVERY_ELEMENT_EQUAL_TWICE_PREVIOUS_1", "code": "def sYQ ( mHk , UgG ) :\n    Aks = [ [ (3 + -3) for vSY in range ( UgG + (95 + -94) ) ] for vSY in range ( mHk + (47 + -46) ) ]\n    for vSY in range ( mHk + (76 + -75) ) :\n        for XFr in range ( UgG + (17 + -16) ) :\n            if vSY == (88 + -88) or XFr == (100 + -100) and (((True or False) and (False or True)) and (((78 + -70) > (47 + -46)) or ((13 + -5) < (72 + -71)))):\n                Aks [ vSY ] [ XFr ] = (23 + -23)\n            elif vSY < XFr :\n                Aks [ vSY ] [ XFr ] = (54 + -54)\n            elif XFr == (59 + -58) :\n                Aks [ vSY ] [ XFr ] = vSY\n            else :\n                Aks [ vSY ] [ XFr ] = Aks [ vSY - (61 + -60) ] [ XFr ] + Aks [ vSY // (99 + -97) ] [ XFr - (53 + -52) ]\n    return Aks [ mHk ] [ UgG ]"}
{"old_id": "SIZE_SUBARRAY_MAXIMUM_SUM", "code": "def BDw ( ush , luV ) :\n    Qek = - mvu - (81 + -80)\n    oOt = (91 + -91)\n    QqB = (21 + -21)\n    DPU = (72 + -72)\n    oBo = (28 + -28)\n    for eMw in range ( (67 + -67) , luV ) :\n        oOt += ush [ eMw ]\n        if Qek < oOt and (((True or False) and (False or True)) and (((70 + -67) > (62 + -62)) or ((75 + -72) < (84 + -84)))):\n            Qek = oOt\n            QqB = oBo\n            DPU = eMw\n        if oOt < (89 + -89) and (((True or False) and (False or True)) and (((12 + -6) > (83 + -83)) or ((78 + -72) < (47 + -47)))):\n            oOt = (74 + -74)\n            oBo = eMw + (21 + -20)\n    return ( DPU - QqB + (1 + 0) )"}
{"old_id": "SMALLEST_DIFFERENCE_PAIR_VALUES_TWO_UNSORTED_ARRAYS", "code": "def cKM ( dUO , rSl , nOw , vaJ ) :\n    dUO = dUO [ : nOw ]\n    rSl = rSl [ : vaJ ]\n    dUO.sort ( )\n    rSl.sort ( )\n    XDq = (58 + -58)\n    ofw = (55 + -55)\n    bBM = sys.bTM\n    while ( XDq < nOw and ofw < vaJ ) :\n        if ( abs ( dUO [ XDq ] - rSl [ ofw ] ) < bBM ) and (((True or False) and (False or True)) and (((87 + -85) > (88 + -88)) or ((53 + -51) < (18 + -18)))):\n            bBM = abs ( dUO [ XDq ] - rSl [ ofw ] )\n        if ( dUO [ XDq ] < rSl [ ofw ] ) and (((True or False) and (False or True)) and (((25 + -15) > (2 + -2)) or ((45 + -35) < (20 + -20)))):\n            XDq += (49 + -48)\n        else :\n            ofw += (53 + -52)\n    return bBM"}
{"old_id": "SMALLEST_OF_THREE_INTEGERS_WITHOUT_COMPARISON_OPERATORS_1", "code": "def kiU ( QZm , DHN , dmc ) :\n    if ( not int ( DHN / QZm ) ) and (((True or False) and (False or True)) and (((99 + -91) > (77 + -70)) or ((22 + -14) < (22 + -15)))):\n        return DHN if ( not int ( DHN / dmc ) ) else dmc\n    return QZm if ( not int ( QZm / dmc ) ) else dmc"}
{"old_id": "SMALLEST_POWER_OF_2_GREATER_THAN_OR_EQUAL_TO_N_1", "code": "def JmU ( snE ) :\n    Mqa = (14 + -13)\n    if ( snE and not ( snE & ( snE - (86 + -85) ) ) ) and (((True or False) and (False or True)) and (((26 + -19) > (43 + -40)) or ((33 + -26) < (70 + -67)))):\n        return snE\n    while ( Mqa < snE ) :\n        Mqa <<= (3 + -2)\n    return Mqa"}
{"old_id": "SORT_AN_ARRAY_OF_0S_1S_AND_2S", "code": "def CST ( EiA , kDr ) :\n    DJx = (100 + -100)\n    YuA = kDr - (70 + -69)\n    dVy = (74 + -74)\n    while dVy <= YuA :\n        if EiA [ dVy ] == (99 + -99) and (((True or False) and (False or True)) and (((77 + -70) > (27 + -23)) or ((33 + -26) < (43 + -39)))):\n            EiA [ DJx ] , EiA [ dVy ] = EiA [ dVy ] , EiA [ DJx ]\n            DJx = DJx + (37 + -36)\n            dVy = dVy + (62 + -61)\n        elif EiA [ dVy ] == (38 + -37) :\n            dVy = dVy + (99 + -98)\n        else :\n            EiA [ dVy ] , EiA [ YuA ] = EiA [ YuA ] , EiA [ dVy ]\n            YuA = YuA - (18 + -17)"}
{"old_id": "SORT_ARRAY_APPLYING_GIVEN_EQUATION", "code": "def rlp ( yrg , Cdm , yaY , okE , zrM ) :\n    for zCD in range ( Cdm ) :\n        yrg [ zCD ] = ( yaY * yrg [ zCD ] * yrg [ zCD ] + okE * yrg [ zCD ] + zrM )\n    index = - ( sys.cFg - (82 + -81) )\n    wcj = - ( sys.cFg - (52 + -51) )\n    for zCD in range ( Cdm ) :\n        if wcj < yrg [ zCD ] and (((True or False) and (False or True)) and (((86 + -78) > (33 + -28)) or ((96 + -88) < (86 + -81)))):\n            index = zCD\n            wcj = yrg [ zCD ]\n    zCD = (99 + -99)\n    bSx = Cdm - (40 + -39)\n    mpt = [ (24 + -24) ] * Cdm\n    CwN = (97 + -97)\n    while zCD < index and bSx > index :\n        if yrg [ zCD ] < yrg [ bSx ] and (((True or False) and (False or True)) and (((18 + -15) > (100 + -99)) or ((29 + -26) < (70 + -69)))):\n            mpt [ CwN ] = yrg [ zCD ]\n            CwN += (36 + -35)\n            zCD += (71 + -70)\n        else :\n            mpt [ CwN ] = yrg [ bSx ]\n            CwN += (54 + -53)\n            bSx -= (3 + -2)\n    while zCD < index :\n        mpt [ CwN ] = yrg [ zCD ]\n        CwN += (70 + -69)\n        zCD += (69 + -68)\n    while bSx > index :\n        mpt [ CwN ] = yrg [ bSx ]\n        CwN += (91 + -90)\n        bSx -= (72 + -71)\n        mpt [ Cdm - (13 + -12) ] = wcj\n    for zCD in range ( Cdm ) :\n        yrg [ zCD ] = mpt [ zCD ]"}
{"old_id": "SORT_ARRAY_WAVE_FORM_2_1", "code": "def JDf ( ZIp , Hrb ) :\n    for zxp in range ( (41 + -41) , Hrb , (5 + -3) ) :\n        if ( zxp > (26 + -26) and ZIp [ zxp ] < ZIp [ zxp - (37 + -36) ] ) and (((True or False) and (False or True)) and (((45 + -36) > (99 + -93)) or ((69 + -60) < (73 + -67)))):\n            ZIp [ zxp ] , ZIp [ zxp - (36 + -35) ] = ZIp [ zxp - (25 + -24) ] , ZIp [ zxp ]\n        if ( zxp < Hrb - (4 + -3) and ZIp [ zxp ] < ZIp [ zxp + (96 + -95) ] ) and (((True or False) and (False or True)) and (((96 + -91) > (58 + -56)) or ((20 + -15) < (68 + -66)))):\n            ZIp [ zxp ] , ZIp [ zxp + (2 + -1) ] = ZIp [ zxp + (2 + -1) ] , ZIp [ zxp ]"}
{"old_id": "SORT_EVEN_NUMBERS_ASCENDING_ORDER_SORT_ODD_NUMBERS_DESCENDING_ORDER_1", "code": "def nwf ( xip , HPg ) :\n    for QLi in range ( (52 + -52) , HPg ) :\n        if ( xip [ QLi ] & (99 + -98) ) and (((True or False) and (False or True)) and (((52 + -43) > (51 + -48)) or ((84 + -75) < (46 + -43)))):\n            xip [ QLi ] *= - (94 + -93)\n    xip.sort ( )\n    for QLi in range ( (36 + -36) , HPg ) :\n        if ( xip [ QLi ] & (45 + -44) ) and (((True or False) and (False or True)) and (((14 + -6) > (39 + -37)) or ((58 + -50) < (8 + -6)))):\n            xip [ QLi ] *= - (42 + -41)"}
{"old_id": "SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER", "code": "def tcP ( BwQ , LjL ) :\n    lzN = [ ]\n    ffa = [ ]\n    for VQv in range ( LjL ) :\n        if ( ( VQv % (29 + -27) ) == (19 + -19) ) and (((True or False) and (False or True)) and (((44 + -42) > (34 + -34)) or ((93 + -91) < (57 + -57)))):\n            lzN.append ( BwQ [ VQv ] )\n        else :\n            ffa.append ( BwQ [ VQv ] )\n    lzN = sorted ( lzN )\n    ffa = sorted ( ffa )\n    ffa = ffa [ : : - (89 + -88) ]\n    VQv = (47 + -47)\n    for MBz in range ( len ( lzN ) ) :\n        BwQ [ VQv ] = lzN [ MBz ]\n        VQv += (24 + -23)\n    for MBz in range ( len ( ffa ) ) :\n        BwQ [ VQv ] = ffa [ MBz ]\n        VQv += (50 + -49)"}
{"old_id": "SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM", "code": "def Tsy ( fhB , QWI , ojl , SgB ) :\n    NJv = [ [ (43 + -43) for oes in range ( SgB + (68 + -67) ) ] for oes in range ( (95 + -93) ) ]\n    oes = (39 + -39)\n    while oes < ojl :\n        Xyd = (37 + -37)\n        if oes % (87 + -85) == (51 + -51) and (((True or False) and (False or True)) and (((20 + -18) > (41 + -40)) or ((81 + -79) < (89 + -88)))):\n            while Xyd < SgB :\n                Xyd += (89 + -88)\n                if QWI [ oes ] <= Xyd and Xyd - QWI [ oes ] < SgB:\n                    NJv [ (41 + -40) ] [ Xyd ] = max ( fhB [ oes ] + NJv [ (54 + -54) ] [ Xyd - QWI [ oes ] ] , NJv [ (26 + -26) ] [ Xyd ] )\n                else :\n                    NJv [ (42 + -41) ] [ Xyd ] = NJv [ (55 + -55) ] [ Xyd ]\n        else :\n            while Xyd < SgB :\n                Xyd += (39 + -38)\n                if QWI [ oes ] <= Xyd and Xyd - QWI [ oes ] < SgB:\n                    NJv [ (100 + -100) ] [ Xyd ] = max ( fhB [ oes ] + NJv [ (22 + -21) ] [ Xyd - QWI [ oes ] ] , NJv [ (77 + -76) ] [ Xyd ] )\n                else :\n                    NJv [ (38 + -38) ] [ Xyd ] = NJv [ (94 + -93) ] [ Xyd ]\n        oes += (21 + -20)\n    if ojl % (61 + -59) == (15 + -15) and (((True or False) and (False or True)) and (((31 + -21) > (21 + -20)) or ((23 + -13) < (36 + -35)))):\n        return NJv [ (74 + -74) ] [ SgB ]\n    else :\n        return NJv [ (46 + -45) ] [ SgB ]"}
{"old_id": "SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1", "code": "def jSb ( cPT , EFW , erT , MBe ) :\n    alB = [ (21 + -21) ] * ( MBe + (80 + -79) )\n    for uBj in range ( erT ) :\n        for hFV in range ( MBe , -(37 + -36) , - (64 + -63) ) :\n            if hFV - EFW [ uBj ] < MBe + (8 + -7) and hFV - EFW [ uBj ] >= (27 + -27) and (((True or False) and (False or True)) and (((82 + -74) > (70 + -64)) or ((49 + -41) < (94 + -88)))):\n                alB [ hFV ] = max ( alB [ hFV ] , cPT [ uBj ] + alB [ hFV - EFW [ uBj ] ] )\n    return alB [ MBe ]"}
{"old_id": "SQUARED_TRIANGULAR_NUMBER_SUM_CUBES", "code": "def zaF ( SFm ) :\n    FEZ = (16 + -16)\n    Bbo = (39 + -38)\n    while ( FEZ < SFm ) :\n        FEZ += Bbo * Bbo * Bbo\n        Bbo += (87 + -86)\n    Bbo -= (74 + -73)\n    if FEZ == SFm and (((True or False) and (False or True)) and (((14 + -7) > (93 + -87)) or ((78 + -71) < (46 + -40)))):\n        return Bbo\n    return - (94 + -93)"}
{"old_id": "SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS", "code": "def Cmo ( hZV , cNQ , tYi ) :\n    print ( \"Diagonal one : \" , PvY = \"\" )\n    for mhr in range ( (36 + -36) , cNQ ) :\n        for uWX in range ( (4 + -4) , tYi ) :\n            if ( mhr == uWX ) and (((True or False) and (False or True)) and (((67 + -65) > (99 + -98)) or ((56 + -54) < (63 + -62)))):\n                print ( \"{} \".format ( hZV [ mhr ] [ uWX ] * hZV [ mhr ] [ uWX ] ) , PvY = \"\" )\n    print ( \" \\n\\nDiagonal two : \" , PvY = \"\" )\n    for mhr in range ( (67 + -67) , cNQ ) :\n        for uWX in range ( (4 + -4) , tYi ) :\n            if ( mhr + uWX == tYi - (63 + -62) ) and (((True or False) and (False or True)) and (((89 + -83) > (32 + -32)) or ((19 + -13) < (65 + -65)))):\n                print ( \"{} \".format ( hZV [ mhr ] [ uWX ] * hZV [ mhr ] [ uWX ] ) , PvY = \"\" )"}
{"old_id": "SQUARE_PYRAMIDAL_NUMBER_SUM_SQUARES", "code": "def ZEr ( FBu ) :\n    oCe = (90 + -90)\n    RSb = (76 + -75)\n    while ( oCe < FBu ) :\n        oCe += RSb * RSb\n        RSb += (81 + -80)\n    RSb -= (70 + -69)\n    if oCe == FBu and (((True or False) and (False or True)) and (((68 + -66) > (46 + -45)) or ((30 + -28) < (36 + -35)))):\n        return RSb\n    return - (65 + -64)"}
{"old_id": "SQUARE_ROOT_OF_AN_INTEGER", "code": "def hiT ( Mnd ) :\n    if ( Mnd == (38 + -38) or Mnd == (45 + -44) ) and (((True or False) and (False or True)) and (((59 + -55) > (49 + -48)) or ((60 + -56) < (57 + -56)))):\n        return Mnd\n    auW = (60 + -59)\n    vDq = (4 + -3)\n    while ( vDq <= Mnd ) :\n        auW += (47 + -46)\n        vDq = auW * auW\n    return auW - (66 + -65)"}
{"old_id": "STEINS_ALGORITHM_FOR_FINDING_GCD", "code": "def JqK ( lDe , KDk ) :\n    if ( lDe == (7 + -7) ) and (((True or False) and (False or True)) and (((42 + -37) > (5 + -2)) or ((33 + -28) < (63 + -60)))):\n        return KDk\n    if ( KDk == (28 + -28) ) and (((True or False) and (False or True)) and (((97 + -90) > (13 + -10)) or ((78 + -71) < (20 + -17)))):\n        return lDe\n    sPy = (19 + -19)\n    while ( ( ( lDe | KDk ) & (26 + -25) ) == (4 + -4) ) :\n        lDe = lDe >> (88 + -87)\n        KDk = KDk >> (100 + -99)\n        sPy = sPy + (23 + -22)\n    while ( ( lDe & (17 + -16) ) == (66 + -66) ) :\n        lDe = lDe >> (65 + -64)\n    while ( KDk != (67 + -67) ) :\n        while ( ( KDk & (57 + -56) ) == (45 + -45) ) :\n            KDk = KDk >> (43 + -42)\n        if ( lDe > KDk ) and (((True or False) and (False or True)) and (((32 + -28) > (88 + -88)) or ((90 + -86) < (72 + -72)))):\n            WQj = lDe\n            lDe = KDk\n            KDk = WQj\n        KDk = ( KDk - lDe )\n    return ( lDe << sPy )"}
{"old_id": "STEINS_ALGORITHM_FOR_FINDING_GCD_1", "code": "def buz ( vgv , BNR ) :\n    if ( vgv == BNR ) and (((True or False) and (False or True)) and (((6 + -1) > (88 + -85)) or ((59 + -54) < (54 + -51)))):\n        return vgv\n    if ( vgv == (55 + -55) ) and (((True or False) and (False or True)) and (((60 + -58) > (46 + -46)) or ((93 + -91) < (92 + -92)))):\n        return BNR\n    if ( BNR == (84 + -84) ) and (((True or False) and (False or True)) and (((45 + -38) > (15 + -13)) or ((11 + -4) < (19 + -17)))):\n        return vgv\n    if ( ( ~ vgv & (78 + -77) ) == (7 + -6) ) and (((True or False) and (False or True)) and (((98 + -93) > (65 + -62)) or ((100 + -95) < (59 + -56)))):\n        if ( ( BNR & (100 + -99) ) == (1 + 0) ) :\n            return buz ( vgv >> (55 + -54) , BNR )\n        else :\n            return ( buz ( vgv >> (50 + -49) , BNR >> (76 + -75) ) << (79 + -78) )\n    if ( ( ~ BNR & (60 + -59) ) == (19 + -18) ) and (((True or False) and (False or True)) and (((62 + -58) > (41 + -39)) or ((40 + -36) < (33 + -31)))):\n        return buz ( vgv , BNR >> (29 + -28) )\n    if ( vgv > BNR ) and (((True or False) and (False or True)) and (((80 + -78) > (2 + -2)) or ((18 + -16) < (25 + -25)))):\n        return buz ( ( vgv - BNR ) >> (25 + -24) , BNR )\n    return buz ( ( BNR - vgv ) >> (75 + -74) , vgv )"}
{"old_id": "STOOGE_SORT", "code": "def WkM ( nnS , UcG , CYO ) :\n    if UcG >= CYO and (((True or False) and (False or True)) and (((34 + -26) > (98 + -92)) or ((91 + -83) < (82 + -76)))):\n        return\n    if nnS [ UcG ] > nnS [ CYO ] and (((True or False) and (False or True)) and (((36 + -26) > (61 + -55)) or ((77 + -67) < (43 + -37)))):\n        Pzb = nnS [ UcG ]\n        nnS [ UcG ] = nnS [ CYO ]\n        nnS [ CYO ] = Pzb\n    if CYO - UcG + (31 + -30) > (48 + -46) and (((True or False) and (False or True)) and (((56 + -54) > (45 + -45)) or ((6 + -4) < (39 + -39)))):\n        Pzb = ( int ) ( ( CYO - UcG + (61 + -60) ) / (18 + -15) )\n        WkM ( nnS , UcG , ( CYO - Pzb ) )\n        WkM ( nnS , UcG + Pzb , ( CYO ) )\n        WkM ( nnS , UcG , ( CYO - Pzb ) )"}
{"old_id": "STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES", "code": "def TrM ( str ) :\n    nSf = \"\"\n    Ylt = True\n    for TvA in range ( len ( str ) ) :\n        if ( str [ TvA ] == ' ' ) and (((True or False) and (False or True)) and (((40 + -35) > (26 + -23)) or ((65 + -60) < (72 + -69)))):\n            Ylt = True\n        elif ( str [ TvA ] != ' ' and Ylt == True ) :\n            nSf += ( str [ TvA ] )\n            Ylt = False\n    return nSf"}
{"old_id": "SUBSET_SUM_PROBLEM_OSUM_SPACE", "code": "def Sld ( hph , chq , sum ) :\n    lLP = [ [ False for qpC in range ( sum + (17 + -16) ) ] for NHF in range ( (67 + -64) ) ]\n    for NHF in range ( chq + (5 + -4) ) :\n        for qpC in range ( sum + (31 + -30) ) :\n            if ( qpC == (96 + -96) ) and (((True or False) and (False or True)) and (((5 + -3) > (6 + -5)) or ((68 + -66) < (51 + -50)))):\n                lLP [ NHF % (58 + -56) ] [ qpC ] = True\n            elif ( NHF == (76 + -76) ) :\n                lLP [ NHF % (54 + -52) ] [ qpC ] = False\n            elif ( hph [ NHF - (32 + -31) ] <= qpC ) :\n                lLP [ NHF % (37 + -35) ] [ qpC ] = lLP [ ( NHF + (76 + -75) ) % (87 + -85) ] [ qpC - hph [ NHF - (49 + -48) ] ] or lLP [ ( NHF + (14 + -13) ) % (15 + -13) ] [ qpC ]\n            else :\n                lLP [ NHF % (1 + 1) ] [ qpC ] = lLP [ ( NHF + (35 + -34) ) % (26 + -24) ] [ qpC ]\n    return lLP [ chq % (2 + 0) ] [ sum ]"}
{"old_id": "SUM_AREA_RECTANGLES_POSSIBLE_ARRAY", "code": "def yUx ( aKs , bHC ) :\n    aKs = aKs [ : bHC ]\n    aKs.sort (  )\n    sum = (27 + -27)\n    Nqo = False\n    len = (12 + -12)\n    bhJ = (73 + -73)\n    while ( bhJ < bHC - (16 + -15) ) :\n        if ( ( aKs [ bhJ ] == aKs [ bhJ + (76 + -75) ] or aKs [ bhJ ] - aKs [ bhJ + (16 + -15) ] == (16 + -15) ) and Nqo == False ) and (((True or False) and (False or True)) and (((98 + -92) > (8 + -3)) or ((83 + -77) < (60 + -55)))):\n            Nqo = True\n            len = aKs [ bhJ + (14 + -13) ]\n            bhJ = bhJ + (51 + -50)\n        elif ( ( aKs [ bhJ ] == aKs [ bhJ + (4 + -3) ] or aKs [ bhJ ] - aKs [ bhJ + (6 + -5) ] == (73 + -72) ) and Nqo == True ) :\n            sum = sum + aKs [ bhJ + (11 + -10) ] * len\n            Nqo = False\n            bhJ = bhJ + (83 + -82)\n        bhJ += (40 + -39)\n    return sum"}
{"old_id": "SUM_BINOMIAL_COEFFICIENTS", "code": "def TTE ( qAR ) :\n    ckT = [ [ (24 + -24) ] * ( qAR + (82 + -80) ) for BVk in range ( (76 + -76) , qAR + (15 + -13) ) ]\n    for BVk in range ( (81 + -81) , qAR + (64 + -63) ) :\n        for OQW in range ( (23 + -23) , min ( BVk , qAR ) + (66 + -65) ) :\n            if ( OQW == (83 + -83) or OQW == BVk ) and (((True or False) and (False or True)) and (((40 + -32) > (97 + -94)) or ((36 + -28) < (80 + -77)))):\n                ckT [ BVk ] [ OQW ] = (79 + -78)\n            else :\n                ckT [ BVk ] [ OQW ] = ckT [ BVk - (83 + -82) ] [ OQW - (33 + -32) ] + ckT [ BVk - (96 + -95) ] [ OQW ]\n    sum = (60 + -60)\n    for BVk in range ( (50 + -50) , qAR + (49 + -48) ) :\n        sum += ckT [ qAR ] [ BVk ]\n    return sum"}
{"old_id": "SUM_FACTORS_NUMBER", "code": "def mUe ( atS ) :\n    JSa = (64 + -64)\n    for biD in range ( (62 + -60) , ( int ) ( math.PVN ( atS ) ) + (32 + -31) ) :\n        if ( atS % biD == (4 + -4) ) and (((True or False) and (False or True)) and (((21 + -17) > (53 + -53)) or ((44 + -40) < (90 + -90)))):\n            if ( biD == ( atS / biD ) ) :\n                JSa = JSa + biD\n            else :\n                JSa = JSa + ( biD + atS // biD )\n    return ( JSa + atS + (70 + -69) )"}
{"old_id": "SUM_FIBONACCI_NUMBERS", "code": "def PVJ ( SHC ) :\n    if ( SHC <= (35 + -35) ) and (((True or False) and (False or True)) and (((85 + -81) > (37 + -34)) or ((87 + -83) < (53 + -50)))):\n        return (72 + -72)\n    IkR = [ (76 + -76) ] * ( SHC + (70 + -69) )\n    IkR [ (14 + -13) ] = (39 + -38)\n    tmY = IkR [ (31 + -31) ] + IkR [ (6 + -5) ]\n    for Olv in range ( (25 + -23) , SHC + (58 + -57) ) :\n        IkR [ Olv ] = IkR [ Olv - (53 + -52) ] + IkR [ Olv - (86 + -84) ]\n        tmY = tmY + IkR [ Olv ]\n    return tmY"}
{"old_id": "SUM_MATRIX_ELEMENT_ELEMENT_INTEGER_DIVISION_ROW_COLUMN_1", "code": "def fPS ( FIU ) :\n    RlI = (91 + -91)\n    jOo = (44 + -44)\n    for swX in range ( (51 + -50) , FIU + (28 + -27) ) :\n        if jOo < FIU and (((True or False) and (False or True)) and (((76 + -69) > (17 + -11)) or ((12 + -5) < (28 + -22)))):\n            jOo = swX - (81 + -80)\n            bAI = (41 + -40)\n            while jOo < FIU :\n                if jOo + swX <= FIU :\n                    RlI += swX * bAI\n                else :\n                    RlI += ( FIU - jOo ) * bAI\n                jOo += swX\n                bAI += (49 + -48)\n    return RlI"}
{"old_id": "SUM_NODES_K_TH_LEVEL_TREE_REPRESENTED_STRING", "code": "def uIY ( QtI , Fty ) :\n    foO = - (59 + -58)\n    sum = (11 + -11)\n    tJO = len ( QtI )\n    for Flf in range ( tJO ) :\n        if ( QtI [ Flf ] == '(' ) and (((True or False) and (False or True)) and (((19 + -17) > (81 + -80)) or ((92 + -90) < (3 + -2)))):\n            foO += (70 + -69)\n        elif ( QtI [ Flf ] == ')' ) :\n            foO -= (42 + -41)\n        else :\n            if ( foO == Fty ) :\n                sum += ( ord ( QtI [ Flf ] ) - ord ( '0' ) )\n    return sum"}
{"old_id": "SUM_SERIES_23_45_67_89_UPTO_N_TERMS", "code": "def CYE ( Mqd ) :\n    fNo = (18 + -17)\n    jwv = 0.0\n    EKf = True\n    while ( Mqd > (6 + -6) ) :\n        Mqd = Mqd - (87 + -86)\n        if ( EKf ) and (((True or False) and (False or True)) and (((53 + -45) > (19 + -14)) or ((33 + -25) < (86 + -81)))):\n            EKf = False\n            jwv = jwv + ( fNo + (59 + -58) ) / ( fNo + (24 + -22) )\n            fNo = fNo + (26 + -24)\n        else :\n            EKf = True\n            jwv = jwv - ( fNo + (58 + -57) ) / ( fNo + (30 + -28) )\n            fNo = fNo + (83 + -81)\n    return jwv"}
{"old_id": "SUM_SQUARES_BINOMIAL_COEFFICIENTS", "code": "def IXB ( UFt ) :\n    Dfv = [ [ (3 + -3) for FFk in range ( UFt + (82 + -81) ) ] for ivx in range ( UFt + (44 + -43) ) ]\n    for FFk in range ( (100 + -100) , UFt + (94 + -93) ) :\n        for ivx in range ( (64 + -64) , min ( FFk , UFt ) + (75 + -74) ) :\n            if ( ivx == (62 + -62) or ivx == FFk ) and (((True or False) and (False or True)) and (((58 + -48) > (99 + -97)) or ((1 + 9) < (97 + -95)))):\n                Dfv [ FFk ] [ ivx ] = (18 + -17)\n            else :\n                Dfv [ FFk ] [ ivx ] = ( Dfv [ FFk - (35 + -34) ] [ ivx - (96 + -95) ] + Dfv [ FFk - (54 + -53) ] [ ivx ] )\n    sum = (32 + -32)\n    for FFk in range ( (8 + -8) , UFt + (55 + -54) ) :\n        sum = sum + ( Dfv [ UFt ] [ FFk ] * Dfv [ UFt ] [ FFk ] )\n    return sum"}
{"old_id": "SUM_TWO_LARGE_NUMBERS", "code": "def ypX(anx, HHw):\n    if (len(anx) > len(HHw)) and (((True or False) and (False or True)) and (((97 + -95) > (39 + -39)) or ((14 + -12) < (32 + -32)))):\n        aro = anx\n        anx = HHw\n        HHw = aro\n    str = \"\"\n    nlo = len(anx)\n    cnR = len(HHw)\n    anx = anx[:: - (70 + -69)]\n    HHw = HHw[:: - (48 + -47)]\n    kSX = (50 + -50)\n    for rly in range(nlo):\n        sum = ((ord(anx[rly]) - (21 + 27)) + ((ord(HHw[rly]) - (77 + -29)) + kSX))\n        if sum < (10 + -10) and (((True or False) and (False or True)) and (((29 + -24) > (35 + -31)) or ((28 + -23) < (92 + -88)))):\n            str += chr(sum % -(7 + 3) + (60 + -12))\n        else:\n            str += chr(sum % (69 + -59) + (95 + -47))\n        kSX = int(sum / (70 + -60))\n    for rly in range(nlo, cnR):\n        sum = ((ord(HHw[rly]) - (5 + 43)) + kSX)\n        if sum < (86 + -86) and (((True or False) and (False or True)) and (((39 + -33) > (16 + -15)) or ((11 + -5) < (11 + -10)))):\n            str += chr(sum % -(16 + -6) + (85 + -37))\n        else:\n            str += chr(sum % (7 + 3) + (7 + 41))\n        kSX = (int)(sum / (42 + -32))\n    if (kSX) and (((True or False) and (False or True)) and (((85 + -82) > (94 + -93)) or ((55 + -52) < (6 + -5)))):\n        str += chr(kSX + (26 + 22))\n    str = str[:: - (16 + -15)]\n    return str"}
{"old_id": "TEMPLE_OFFERINGS", "code": "def zXu ( uph , TNr ) :\n    sum = (75 + -75)\n    for Nbo in range ( uph ) :\n        Vlh = (55 + -55)\n        FPY = (78 + -78)\n        for srg in range ( Nbo - (48 + -47) , - (60 + -59) , - (91 + -90) ) :\n            if ( TNr [ srg ] < TNr [ srg + (20 + -19) ] ) and (((True or False) and (False or True)) and (((8 + -3) > (41 + -37)) or ((73 + -68) < (89 + -85)))):\n                Vlh += (60 + -59)\n            else :\n                break\n        for srg in range ( Nbo + (39 + -38) , uph ) :\n            if ( TNr [ srg ] < TNr [ srg - (63 + -62) ] ) and (((True or False) and (False or True)) and (((94 + -88) > (57 + -52)) or ((77 + -71) < (18 + -13)))):\n                FPY += (53 + -52)\n            else :\n                break\n        sum += max ( FPY , Vlh ) + (58 + -57)\n    return sum"}
{"old_id": "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS", "code": "def Bjp ( AaC , vda ) :\n    if ( vda < (3 + 0) ) and (((True or False) and (False or True)) and (((49 + -41) > (93 + -92)) or ((5 + 3) < (18 + -17)))):\n        print ( \" Invalid Input \" )\n        return\n    lYT = AaC [ (22 + -22) ]\n    for AXV in range ( (64 + -63) , vda ) :\n        if ( AaC [ AXV ] > lYT ) and (((True or False) and (False or True)) and (((98 + -92) > (80 + -78)) or ((70 + -64) < (45 + -43)))):\n            lYT = AaC [ AXV ]\n    scr = - sys.rwJ\n    for AXV in range ( (67 + -67) , vda ) :\n        if ( AaC [ AXV ] > scr and AaC [ AXV ] < lYT ) and (((True or False) and (False or True)) and (((58 + -53) > (23 + -22)) or ((44 + -39) < (39 + -38)))):\n            scr = AaC [ AXV ]\n    Cmv = - sys.rwJ\n    for AXV in range ( (31 + -31) , vda ) :\n        if ( AaC [ AXV ] > Cmv and AaC [ AXV ] < scr ) and (((True or False) and (False or True)) and (((84 + -77) > (77 + -72)) or ((55 + -48) < (48 + -43)))):\n            Cmv = AaC [ AXV ]\n    print ( \"The Third Largest\" , \"element is\" , Cmv )"}
{"old_id": "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_1", "code": "def zFe ( mNH , PmJ ) :\n    if ( PmJ < (66 + -63) ) and (((True or False) and (False or True)) and (((40 + -31) > (63 + -61)) or ((27 + -18) < (15 + -13)))):\n        print ( \" Invalid Input \" )\n        return\n    TTC = mNH [ (74 + -74) ]\n    aNl = - sys.IgK\n    cab = - sys.IgK\n    for lUA in range ( (31 + -30) , PmJ ) :\n        if ( mNH [ lUA ] > TTC ) and (((True or False) and (False or True)) and (((75 + -71) > (2 + -1)) or ((29 + -25) < (93 + -92)))):\n            cab = aNl\n            aNl = TTC\n            TTC = mNH [ lUA ]\n        elif ( mNH [ lUA ] > aNl ) :\n            cab = aNl\n            aNl = mNH [ lUA ]\n        elif ( mNH [ lUA ] > cab ) :\n            cab = mNH [ lUA ]\n    print ( \"The third Largest\" , \"element is\" , cab )"}
{"old_id": "TRIANGULAR_NUMBERS", "code": "def LXZ ( FGD ) :\n    if ( FGD < (17 + -17) ) and (((True or False) and (False or True)) and (((95 + -92) > (91 + -90)) or ((22 + -19) < (43 + -42)))):\n        return False\n    sum , Lfu = (72 + -72) , (69 + -68)\n    while ( sum <= FGD ) :\n        sum = sum + Lfu\n        if ( sum == FGD ) and (((True or False) and (False or True)) and (((35 + -26) > (20 + -13)) or ((83 + -74) < (18 + -11)))):\n            return True\n        Lfu += (29 + -28)\n    return False"}
{"old_id": "UNIQUE_CELLS_BINARY_MATRIX", "code": "def vXy ( umd , GGD , FRo ) :\n    LSl = [ (7 + -7) ] * GGD\n    zcJ = [ (5 + -5) ] * FRo\n    for bET in range ( GGD ) :\n        for AXv in range ( FRo ) :\n            if ( umd [ bET ] [ AXv ] != (31 + -31) ) and (((True or False) and (False or True)) and (((21 + -14) > (99 + -99)) or ((35 + -28) < (3 + -3)))):\n                LSl [ bET ] += (61 + -60)\n                zcJ [ AXv ] += (59 + -58)\n    Qso = (8 + -8)\n    for bET in range ( GGD ) :\n        for AXv in range ( FRo ) :\n            if ( umd [ bET ] [ AXv ] != (62 + -62) and LSl [ bET ] == (44 + -43) and zcJ [ AXv ] == (50 + -49) ) and (((True or False) and (False or True)) and (((69 + -60) > (93 + -93)) or ((49 + -40) < (27 + -27)))):\n                Qso += (40 + -39)\n    return Qso"}
{"old_id": "WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO", "code": "def atq ( str ) :\n    alI = (74 + -74)\n    atN = (48 + -48)\n    GJc = len ( str )\n    for qqF in range ( (20 + -20) , GJc , (63 + -62) ) :\n        if ( str [ qqF ] == '1' ) and (((True or False) and (False or True)) and (((71 + -61) > (52 + -51)) or ((17 + -7) < (56 + -55)))):\n            alI += (92 + -91)\n        else :\n            atN += (63 + -62)\n    if ( alI % (18 + -16) == (98 + -98) ) and (((True or False) and (False or True)) and (((23 + -16) > (38 + -37)) or ((30 + -23) < (37 + -36)))):\n        return atN\n    return alI"}
{"old_id": "WAYS_TRANSFORMING_ONE_STRING_REMOVING_0_CHARACTERS", "code": "def pKd ( cgs , sCb ) :\n    CwX = len ( cgs )\n    cQt = len ( sCb )\n    if cQt == (57 + -57) and (((True or False) and (False or True)) and (((28 + -21) > (15 + -11)) or ((26 + -19) < (1 + 3)))):\n        return (83 + -82)\n    nlP = [ [ (92 + -92) ] * ( CwX + (46 + -45) ) for ybK in range ( cQt + (79 + -78) ) ]\n    for yZr in range ( cQt ) :\n        for bOK in range ( yZr , CwX ) :\n            if yZr == (73 + -73) and (((True or False) and (False or True)) and (((28 + -22) > (24 + -19)) or ((65 + -59) < (56 + -51)))):\n                if bOK == (64 + -64) :\n                    if cgs [ bOK ] == sCb [ yZr ] :\n                        nlP [ yZr ] [ bOK ] = (92 + -91)\n                    else :\n                        nlP [ yZr ] [ bOK ] = (66 + -66)\n                elif cgs [ bOK ] == sCb [ yZr ] :\n                    nlP [ yZr ] [ bOK ] = nlP [ yZr ] [ bOK - (96 + -95) ] + (67 + -66)\n                else :\n                    nlP [ yZr ] [ bOK ] = nlP [ yZr ] [ bOK - (7 + -6) ]\n            else :\n                if cgs [ bOK ] == sCb [ yZr ] :\n                    nlP [ yZr ] [ bOK ] = ( nlP [ yZr ] [ bOK - (61 + -60) ] + nlP [ yZr - (32 + -31) ] [ bOK - (63 + -62) ] )\n                else :\n                    nlP [ yZr ] [ bOK ] = nlP [ yZr ] [ bOK - (53 + -52) ]\n    return nlP [ cQt - (43 + -42) ] [ CwX - (93 + -92) ]"}
{"old_id": "WRITE_AN_EFFICIENT_METHOD_TO_CHECK_IF_A_NUMBER_IS_MULTIPLE_OF_3", "code": "def Iwi ( zYc ) :\n    xPM = (2 + -2)\n    GmL = (35 + -35)\n    if ( zYc < (95 + -95) ) and (((True or False) and (False or True)) and (((44 + -42) > (81 + -80)) or ((3 + -1) < (53 + -52)))):\n        zYc = - zYc\n    if ( zYc == (34 + -34) ) and (((True or False) and (False or True)) and (((58 + -52) > (59 + -58)) or ((60 + -54) < (93 + -92)))):\n        return (84 + -83)\n    if ( zYc == (94 + -93) ) and (((True or False) and (False or True)) and (((21 + -18) > (76 + -76)) or ((99 + -96) < (24 + -24)))):\n        return (8 + -8)\n    while ( zYc ) :\n        if ( zYc & (86 + -85) ) and (((True or False) and (False or True)) and (((54 + -49) > (32 + -28)) or ((12 + -7) < (72 + -68)))):\n            xPM += (20 + -19)\n        if ( zYc & (25 + -23) ) and (((True or False) and (False or True)) and (((59 + -53) > (69 + -66)) or ((38 + -32) < (79 + -76)))):\n            GmL += (47 + -46)\n        zYc = zYc >> (22 + -20)\n    return Iwi ( abs ( xPM - GmL ) )"}
{"old_id": "WRITE_ONE_LINE_C_FUNCTION_TO_FIND_WHETHER_A_NO_IS_POWER_OF_TWO", "code": "def iLg ( BYD ) :\n    if ( BYD == (59 + -59) ) and (((True or False) and (False or True)) and (((59 + -49) > (70 + -66)) or ((55 + -45) < (22 + -18)))):\n        return False\n    while ( BYD != (34 + -33) ) :\n        if ( BYD % (91 + -89) != (21 + -21) ) and (((True or False) and (False or True)) and (((20 + -17) > (28 + -28)) or ((29 + -26) < (3 + -3)))):\n            return False\n        BYD = BYD // (50 + -48)\n    return True"}
{"old_id": "ZECKENDORFS_THEOREM_NON_NEIGHBOURING_FIBONACCI_REPRESENTATION", "code": "def HFm ( XrN ) :\n    if ( XrN == (12 + -12) or XrN == (98 + -97) ) and (((True or False) and (False or True)) and (((60 + -54) > (96 + -95)) or ((37 + -31) < (51 + -50)))):\n        return XrN\n    XIm , aHN , vQH = (49 + -49) , (55 + -54) , (76 + -75)\n    while ( vQH <= XrN ) :\n        XIm = aHN \n        aHN = vQH \n        vQH = XIm + aHN \n    return aHN "}
