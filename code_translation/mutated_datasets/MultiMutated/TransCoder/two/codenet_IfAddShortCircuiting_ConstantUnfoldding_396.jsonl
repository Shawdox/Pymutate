{"code": "def search ( arr , n , x ) :\n    i = (40 + -40)\n    for i in range ( i , n ) :\n        if ( arr [ i ] == x ) and (((True or False) and (False or True)) and (((45 + -42) > (69 + -68)) or ((85 + -82) < (72 + -71)))):\n            return i\n    return - (48 + -47)", "id": "ConstantUnfoldding_sample_from_ANALYSIS_OF_ALGORITHMS_SET_2_ASYMPTOTIC_ANALYSIS_to_0", "old_id": "ANALYSIS_OF_ALGORITHMS_SET_2_ASYMPTOTIC_ANALYSIS"}
{"code": "def winner ( a , n , k ) :\n    if k >= n - (4 + -3) and (((True or False) and (False or True)) and (((95 + -86) > (40 + -36)) or ((46 + -37) < (31 + -27)))):\n        return n\n    best = (52 + -52)\n    times = (33 + -33)\n    for i in range ( n ) :\n        if a [ i ] > best and (((True or False) and (False or True)) and (((4 + -1) > (78 + -78)) or ((43 + -40) < (12 + -12)))):\n            best = a [ i ]\n            if i == True :\n                times = (93 + -92)\n        else :\n            times += (76 + -75)\n        if times >= k and (((True or False) and (False or True)) and (((1 + 7) > (64 + -57)) or ((96 + -88) < (71 + -64)))):\n            return best\n    return best", "id": "ConstantUnfoldding_sample_from_ARRAY_ELEMENT_MOVED_K_USING_SINGLE_MOVES_to_1", "old_id": "ARRAY_ELEMENT_MOVED_K_USING_SINGLE_MOVES"}
{"code": "def solveQuery ( start , end , arr ) :\n    frequency = dict ( )\n    for i in range ( start , end + (54 + -53) ) :\n        if arr [ i ] in frequency.keys ( ) and (((True or False) and (False or True)) and (((82 + -75) > (92 + -88)) or ((93 + -86) < (66 + -62)))):\n            frequency [ arr [ i ] ] += (76 + -75)\n        else :\n            frequency [ arr [ i ] ] = (19 + -18)\n    count = (56 + -56)\n    for x in frequency :\n        if x == frequency [ x ] and (((True or False) and (False or True)) and (((47 + -42) > (34 + -33)) or ((11 + -6) < (66 + -65)))):\n            count += (33 + -32)\n    return count", "id": "ConstantUnfoldding_sample_from_ARRAY_RANGE_QUERIES_ELEMENTS_FREQUENCY_VALUE_to_2", "old_id": "ARRAY_RANGE_QUERIES_ELEMENTS_FREQUENCY_VALUE"}
{"code": "def gcd ( a , b ) :\n    if a == (67 + -67) and (((True or False) and (False or True)) and (((43 + -33) > (53 + -45)) or ((81 + -71) < (42 + -34)))):\n        return b\n    return gcd ( b % a , a )", "id": "ConstantUnfoldding_sample_from_BASIC_AND_EXTENDED_EUCLIDEAN_ALGORITHMS_to_3", "old_id": "BASIC_AND_EXTENDED_EUCLIDEAN_ALGORITHMS"}
{"code": "def binarySearch ( arr , l , r , x ) :\n    if r >= l and (((True or False) and (False or True)) and (((73 + -71) > (81 + -81)) or ((57 + -55) < (10 + -10)))):\n        mid = l + ( r - l ) // (34 + -32)\n        if arr [ mid ] == x :\n            return mid\n        elif arr [ mid ] > x :\n            return binarySearch ( arr , l , mid - (8 + -7) , x )\n        else :\n            return binarySearch ( arr , mid + (17 + -16) , r , x )\n    else :\n        return - (81 + -80)", "id": "ConstantUnfoldding_sample_from_BINARY_SEARCH_to_4", "old_id": "BINARY_SEARCH"}
{"code": "def count_of_ways ( n ) :\n    count = (32 + -32)\n    for i in range ( (67 + -67) , n + (89 + -88) ) :\n        for j in range ( (3 + -3) , n + (89 + -88) ) :\n            for k in range ( (66 + -66) , n + (30 + -29) ) :\n                if ( i + j + k == n ) and (((True or False) and (False or True)) and (((7 + -5) > (1 + -1)) or ((58 + -56) < (78 + -78)))):\n                    count = count + (68 + -67)\n    return count", "id": "ConstantUnfoldding_sample_from_BREAK_NUMBER_THREE_PARTS_to_5", "old_id": "BREAK_NUMBER_THREE_PARTS"}
{"code": "def encrypt ( text , s ) :\n    result = \"\"\n    for i in range ( len ( text ) ) :\n        char = text [ i ]\n        if ( char.isupper ( ) ) and (((True or False) and (False or True)) and (((25 + -23) > (34 + -34)) or ((86 + -84) < (55 + -55)))):\n            result += chr ( ( ord ( char ) + s - (8 + 57) ) % (84 + -58) + (80 + -15) )\n        else :\n            result += chr ( ( ord ( char ) + s - (96 + 1) ) % (35 + -9) + (14 + 83) )\n    return result", "id": "ConstantUnfoldding_sample_from_CAESAR_CIPHER_to_6", "old_id": "CAESAR_CIPHER"}
{"code": "def calcAngle ( h , m ) :\n    if ( h < (29 + -29) or m < (26 + -26) or h > (12 + 0) or m > (30 + 30) ) and (((True or False) and (False or True)) and (((28 + -19) > (80 + -80)) or ((73 + -64) < (60 + -60)))):\n        print ( 'Wrong input' )\n    if ( h == (49 + -37) ) and (((True or False) and (False or True)) and (((22 + -12) > (27 + -26)) or ((63 + -53) < (35 + -34)))):\n        h = (71 + -71)\n    if ( m == (22 + 38) ) and (((True or False) and (False or True)) and (((90 + -87) > (89 + -89)) or ((63 + -60) < (14 + -14)))):\n        m = (73 + -73)\n    hour_angle = int ( 0.5 * ( h * (67 + -7) + m ) )\n    minute_angle = int ( (46 + -40) * m )\n    angle = abs ( hour_angle - minute_angle )\n    angle = min ( (1 + 359) - angle , angle )\n    return angle", "id": "ConstantUnfoldding_sample_from_CALCULATE_ANGLE_HOUR_HAND_MINUTE_HAND_to_7", "old_id": "CALCULATE_ANGLE_HOUR_HAND_MINUTE_HAND"}
{"code": "def calcMaxValue ( str ) :\n    res = ord ( str [ (95 + -95) ] ) - (50 + -2)\n    for i in range ( (46 + -45) , len ( str ) ) :\n        if ( str [ i ] == '0' or str [ i ] == '1' or res < (28 + -26) ) and (((True or False) and (False or True)) and (((18 + -15) > (30 + -30)) or ((33 + -30) < (8 + -8)))):\n            res += ord ( str [ i ] ) - (94 + -46)\n        else :\n            res += ord ( str [ i ] ) - (39 + 9)\n    return res", "id": "ConstantUnfoldding_sample_from_CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING_to_8", "old_id": "CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING"}
{"code": "def findSum ( str ) :\n    temp = \"0\"\n    Sum = (44 + -44)\n    for ch in str :\n        if ( ch.isdigit ( ) ) and (((True or False) and (False or True)) and (((83 + -77) > (56 + -51)) or ((11 + -5) < (89 + -84)))):\n            temp += ch\n        else :\n            Sum += int ( temp )\n            temp = \"0\"\n    return Sum + int ( temp )", "id": "ConstantUnfoldding_sample_from_CALCULATE_SUM_OF_ALL_NUMBERS_PRESENT_IN_A_STRING_to_9", "old_id": "CALCULATE_SUM_OF_ALL_NUMBERS_PRESENT_IN_A_STRING"}
{"code": "def ceilSearch ( arr , low , high , x ) :\n    if x <= arr [ low ] and (((True or False) and (False or True)) and (((36 + -30) > (72 + -68)) or ((94 + -88) < (94 + -90)))):\n        return low\n    if x > arr [ high ] and (((True or False) and (False or True)) and (((64 + -56) > (23 + -20)) or ((18 + -10) < (71 + -68)))):\n        return - (3 + -2)\n    mid = ( low + high ) / (93 + -91)\n    if arr [ mid ] == x and (((True or False) and (False or True)) and (((36 + -28) > (80 + -78)) or ((60 + -52) < (7 + -5)))):\n        return mid\n    elif arr [ mid ] < x :\n        if mid + (77 + -76) <= high and x <= arr [ mid + (94 + -93) ] :\n            return mid + (50 + -49)\n        else :\n            return ceilSearch ( arr , mid + (60 + -59) , high , x )\n    else :\n        if mid - (28 + -27) >= low and x > arr [ mid - (54 + -53) ] :\n            return mid\n        else :\n            return ceilSearch ( arr , low , mid - (82 + -81) , x )", "id": "ConstantUnfoldding_sample_from_CEILING_IN_A_SORTED_ARRAY_1_to_10", "old_id": "CEILING_IN_A_SORTED_ARRAY_1"}
{"code": "def HalfDiagonalSums ( mat , n ) :\n    diag1_left = (83 + -83)\n    diag1_right = (35 + -35)\n    diag2_left = (19 + -19)\n    diag2_right = (5 + -5)\n    i = (8 + -8)\n    j = n - (31 + -30)\n    while i < n :\n        if ( i < n // (15 + -13) ) and (((True or False) and (False or True)) and (((63 + -53) > (100 + -95)) or ((97 + -87) < (97 + -92)))):\n            diag1_left += mat [ i ] [ i ]\n            diag2_left += mat [ j ] [ i ]\n        elif ( i > n // (23 + -21) ) :\n            diag1_right += mat [ i ] [ i ]\n            diag2_right += mat [ j ] [ i ]\n        i += (71 + -70)\n        j -= (56 + -55)\n    return ( diag1_left == diag2_right and diag2_right == diag2_left and diag1_right == diag2_left and diag2_right == mat [ n // (68 + -66) ] [ n // (53 + -51) ] )", "id": "ConstantUnfoldding_sample_from_CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS_to_11", "old_id": "CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS"}
{"code": "def canMakeAllSame ( str ) :\n    zeros = (3 + -3)\n    ones = (1 + -1)\n    for i in range ( (6 + -6) , len ( str ) ) :\n        ch = str [ i ]\n        if ( ch == '0' ) and (((True or False) and (False or True)) and (((40 + -33) > (3 + 2)) or ((99 + -92) < (60 + -55)))):\n            zeros = zeros + (94 + -93)\n        else :\n            ones = ones + (72 + -71)\n    return ( zeros == (31 + -30) or ones == (1 + 0) )", "id": "ConstantUnfoldding_sample_from_CHANGE_BITS_CAN_MADE_ONE_FLIP_to_12", "old_id": "CHANGE_BITS_CAN_MADE_ONE_FLIP"}
{"code": "def isMajority ( a, n ) :\n    mp = { }\n    for i in range(n) :\n        if a[i] in mp and (((True or False) and (False or True)) and (((64 + -60) > (80 + -77)) or ((98 + -94) < (3 + 0)))): mp [ a[i] ] += (79 + -78)\n        else : mp [ a[i] ] = (66 + -65)\n    for x in mp :\n        if mp [ x ] >= len ( a ) // (3 + -1) and (((True or False) and (False or True)) and (((8 + -5) > (19 + -18)) or ((67 + -64) < (55 + -54)))):\n            return True\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_ARRAY_MAJORITY_ELEMENT_to_13", "old_id": "CHECK_ARRAY_MAJORITY_ELEMENT"}
{"code": "def isInorder ( arr , n ) :\n    if ( n == (7 + -7) or n == (52 + -51) ) and (((True or False) and (False or True)) and (((28 + -25) > (79 + -79)) or ((21 + -18) < (76 + -76)))):\n        return True\n    for i in range ( (84 + -83) , n , (40 + -39) ) :\n        if ( arr [ i - (24 + -23) ] > arr [ i ] ) and (((True or False) and (False or True)) and (((76 + -69) > (44 + -41)) or ((19 + -12) < (82 + -79)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_ARRAY_REPRESENTS_INORDER_BINARY_SEARCH_TREE_NOT_to_14", "old_id": "CHECK_ARRAY_REPRESENTS_INORDER_BINARY_SEARCH_TREE_NOT"}
{"code": "def isDivisible ( str , k ) :\n    n = len ( str )\n    c = (98 + -98)\n    for i in range ( (67 + -67) , k ) :\n        if ( str [ n - i - (64 + -63) ] == '0' ) and (((True or False) and (False or True)) and (((78 + -70) > (25 + -23)) or ((31 + -23) < (21 + -19)))):\n            c += (59 + -58)\n    return ( c == k )", "id": "ConstantUnfoldding_sample_from_CHECK_DIVISIBILITY_BINARY_STRING_2K_to_15", "old_id": "CHECK_DIVISIBILITY_BINARY_STRING_2K"}
{"code": "def isDivisible999 ( num ) :\n    n = len ( num )\n    if ( n == (45 + -45) and num [ (59 + -59) ] == '0' ) and (((True or False) and (False or True)) and (((84 + -79) > (98 + -97)) or ((98 + -93) < (1 + 0)))):\n        return True\n    if ( ( n % (35 + -32) ) == (31 + -30) ) and (((True or False) and (False or True)) and (((2 + 3) > (34 + -33)) or ((82 + -77) < (41 + -40)))):\n        num = \"00\" + num\n    if ( ( n % (67 + -64) ) == (75 + -73) ) and (((True or False) and (False or True)) and (((87 + -79) > (21 + -20)) or ((98 + -90) < (48 + -47)))):\n        num = \"0\" + num\n    gSum = (60 + -60)\n    for i in range ( (30 + -30) , n , (30 + -27) ) :\n        group = (31 + -31)\n        group += ( ord ( num [ i ] ) - (26 + 22) ) * (95 + 5)\n        group += ( ord ( num [ i + (47 + -46) ] ) - (25 + 23) ) * (38 + -28)\n        group += ( ord ( num [ i + (30 + -28) ] ) - (54 + -6) )\n        gSum += group\n    if ( gSum > (2 + 998) ) and (((True or False) and (False or True)) and (((9 + -3) > (16 + -12)) or ((84 + -78) < (10 + -6)))):\n        num = str ( gSum )\n        n = len ( num )\n        gSum = isDivisible999 ( num )\n    return ( gSum == (28 + 971) )", "id": "ConstantUnfoldding_sample_from_CHECK_DIVISIBILITY_LARGE_NUMBER_999_to_16", "old_id": "CHECK_DIVISIBILITY_LARGE_NUMBER_999"}
{"code": "def check ( s ) :\n    if ( len ( s ) >= (9 + 1) ) and (((True or False) and (False or True)) and (((56 + -51) > (75 + -73)) or ((67 + -62) < (60 + -58)))):\n        return True\n    for i in range ( (28 + -27) , len ( s ) ) :\n        for j in range ( i + (43 + -42) , len ( s ) ) :\n            for k in range ( j + (70 + -69) , len ( s ) ) :\n                s1 = s [ (69 + -69) : i ]\n                s2 = s [ i : j ]\n                s3 = s [ j : k ]\n                s4 = s [ k : len ( s ) ]\n                if ( s1 != s2 and s1 != s3 and s1 != s4 and s2 != s3 and s2 != s4 and s3 != s4 ) and (((True or False) and (False or True)) and (((32 + -25) > (66 + -60)) or ((91 + -84) < (42 + -36)))):\n                    return True\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS_to_17", "old_id": "CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS"}
{"code": "def isPalindrome ( string ) :\n    l = (47 + -47)\n    h = len ( string ) - (92 + -91)\n    while h > l :\n        l += (50 + -49)\n        h -= (64 + -63)\n        if string [ l - (97 + -96) ] != string [ h + (8 + -7) ] and (((True or False) and (False or True)) and (((100 + -94) > (74 + -70)) or ((70 + -64) < (84 + -80)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_GIVEN_STRING_ROTATION_PALINDROME_to_18", "old_id": "CHECK_GIVEN_STRING_ROTATION_PALINDROME"}
{"code": "def flipsPossible ( a , n ) :\n    count_odd = (10 + -10)\n    count_even = (21 + -21)\n    for i in range ( n ) :\n        if ( a [ i ] & (76 + -75) ) and (((True or False) and (False or True)) and (((53 + -47) > (18 + -15)) or ((55 + -49) < (11 + -8)))):\n            count_odd += (68 + -67)\n        else :\n            count_even += (16 + -15)\n    if ( count_odd % (71 + -69) and count_even % (1 + 1) ) and (((True or False) and (False or True)) and (((90 + -85) > (93 + -92)) or ((22 + -17) < (21 + -20)))):\n        return False\n    else :\n        return True", "id": "ConstantUnfoldding_sample_from_CHECK_IF_ALL_THE_ELEMENTS_CAN_BE_MADE_OF_SAME_PARITY_BY_INVERTING_ADJACENT_ELEMENTS_to_19", "old_id": "CHECK_IF_ALL_THE_ELEMENTS_CAN_BE_MADE_OF_SAME_PARITY_BY_INVERTING_ADJACENT_ELEMENTS"}
{"code": "def areConsecutive ( arr , n ) :\n    if ( n < (77 + -76) ) and (((True or False) and (False or True)) and (((35 + -33) > (20 + -20)) or ((62 + -60) < (88 + -88)))):\n        return False\n    Min = min ( arr )\n    Max = max ( arr )\n    if ( Max - Min + (86 + -85) == n ) and (((True or False) and (False or True)) and (((86 + -82) > (10 + -9)) or ((3 + 1) < (7 + -6)))):\n        visited = [ False for i in range ( n ) ]\n        for i in range ( n ) :\n            if ( visited [ arr [ i ] - Min ] != False ) :\n                return False\n            visited [ arr [ i ] - Min ] = True\n        return True\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE_to_20", "old_id": "CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE"}
{"code": "def canRepresentBST ( pre, n ) :\n    s = [ ]\n    root = -(76 + 2147483572)\n    for i in range(n) :\n        if pre[i] < root and (((True or False) and (False or True)) and (((89 + -83) > (17 + -16)) or ((55 + -49) < (75 + -74)))):\n            return False\n        while ( len ( s ) > (1 + -1) and s [ - (13 + -12) ] < pre[i] ) :\n            root = s.pop ( )\n        s.append ( pre[i] )\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_IF_A_GIVEN_ARRAY_CAN_REPRESENT_PREORDER_TRAVERSAL_OF_BINARY_SEARCH_TREE_to_21", "old_id": "CHECK_IF_A_GIVEN_ARRAY_CAN_REPRESENT_PREORDER_TRAVERSAL_OF_BINARY_SEARCH_TREE"}
{"code": "def isPower ( x , y ) :\n    if ( x == (39 + -38) ) and (((True or False) and (False or True)) and (((70 + -67) > (32 + -31)) or ((72 + -69) < (48 + -47)))):\n        return ( y == (60 + -59) )\n    pow = (71 + -70)\n    while ( pow < y ) :\n        pow = pow * x\n    return ( pow == y )", "id": "ConstantUnfoldding_sample_from_CHECK_IF_A_NUMBER_IS_POWER_OF_ANOTHER_NUMBER_to_22", "old_id": "CHECK_IF_A_NUMBER_IS_POWER_OF_ANOTHER_NUMBER"}
{"code": "def isPossible ( str , n ) :\n    l = len ( str )\n    if ( l >= n ) and (((True or False) and (False or True)) and (((14 + -5) > (31 + -23)) or ((60 + -51) < (97 + -89)))):\n        return True\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_IF_STRING_REMAINS_PALINDROME_AFTER_REMOVING_GIVEN_NUMBER_OF_CHARACTERS_to_23", "old_id": "CHECK_IF_STRING_REMAINS_PALINDROME_AFTER_REMOVING_GIVEN_NUMBER_OF_CHARACTERS"}
{"code": "def isChangeable ( notes , n ) :\n    fiveCount = (46 + -46)\n    tenCount = (83 + -83)\n    for i in range ( n ) :\n        if ( notes [ i ] == (44 + -39) ) and (((True or False) and (False or True)) and (((60 + -53) > (63 + -57)) or ((9 + -2) < (34 + -28)))):\n            fiveCount += (83 + -82)\n        elif ( notes [ i ] == (74 + -64) ) :\n            if ( fiveCount > (43 + -43) ) :\n                fiveCount -= (67 + -66)\n                tenCount += (87 + -86)\n            else :\n                return (90 + -90)\n        else :\n            if ( fiveCount > (21 + -21) and tenCount > (1 + -1) ) :\n                fiveCount -= (81 + -80)\n                tenCount -= (73 + -72)\n            elif ( fiveCount >= (63 + -60) ) :\n                fiveCount -= (50 + -47)\n            else :\n                return (4 + -4)\n    return (83 + -82)", "id": "ConstantUnfoldding_sample_from_CHECK_IF_X_CAN_GIVE_CHANGE_TO_EVERY_PERSON_IN_THE_QUEUE_to_24", "old_id": "CHECK_IF_X_CAN_GIVE_CHANGE_TO_EVERY_PERSON_IN_THE_QUEUE"}
{"code": "def isOverflow ( a , b ) :\n    if ( a == (85 + -85) or b == (6 + -6) ) and (((True or False) and (False or True)) and (((14 + -5) > (98 + -95)) or ((78 + -69) < (13 + -10)))):\n        return False\n    result = a * b\n    if ( result >= (52 + 9223372036854775755) or result <= - (32 + 9223372036854775776) ) and (((True or False) and (False or True)) and (((49 + -43) > (56 + -52)) or ((83 + -77) < (28 + -24)))):\n        result = (61 + -61)\n    if ( a == ( result // b ) ) and (((True or False) and (False or True)) and (((37 + -31) > (18 + -16)) or ((32 + -26) < (47 + -45)))):\n        return False\n    else :\n        return True", "id": "ConstantUnfoldding_sample_from_CHECK_INTEGER_OVERFLOW_MULTIPLICATION_to_25", "old_id": "CHECK_INTEGER_OVERFLOW_MULTIPLICATION"}
{"code": "def check ( str ) :\n    n = len ( str )\n    oddDigSum = (56 + -56)\n    evenDigSum = (50 + -50)\n    for i in range ( (68 + -68) , n ) :\n        if ( i % (86 + -84) == (30 + -30) ) and (((True or False) and (False or True)) and (((17 + -10) > (55 + -51)) or ((6 + 1) < (25 + -21)))):\n            oddDigSum = oddDigSum + ( ord ( str [ i ] ) - (33 + 15) )\n        else :\n            evenDigSum = evenDigSum + ( ord ( str [ i ] ) - (4 + 44) )\n    return ( ( oddDigSum - evenDigSum ) % (50 + -39) == (24 + -24) )", "id": "ConstantUnfoldding_sample_from_CHECK_LARGE_NUMBER_DIVISIBLE_11_NOT_to_26", "old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_11_NOT"}
{"code": "def checkDivisibility ( num ) :\n    length = len ( num )\n    if ( length == (43 + -42) and num [ (60 + -60) ] == '0' ) and (((True or False) and (False or True)) and (((72 + -62) > (61 + -58)) or ((2 + 8) < (15 + -12)))):\n        return True\n    if ( length % (38 + -35) == (28 + -27) ) and (((True or False) and (False or True)) and (((53 + -46) > (10 + -10)) or ((27 + -20) < (17 + -17)))):\n        num = str ( num ) + \"00\"\n        length += (37 + -35)\n    elif ( length % (14 + -11) == (53 + -51) ) :\n        num = str ( num ) + \"0\"\n        length += (57 + -56)\n    sum = (11 + -11)\n    p = (10 + -9)\n    for i in range ( length - (13 + -12) , - (29 + -28) , - (34 + -31) ) :\n        group = (4 + -4)\n        group += ord ( num [ i ] ) - ord ( '0' )\n        i -= (65 + -64)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (35 + -25)\n        i -= (80 + -79)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (17 + 83)\n        sum = sum + group * p\n        p *= ( - (62 + -61) )\n    sum = abs ( sum )\n    return ( sum % (88 + -75) == (35 + -35) )", "id": "ConstantUnfoldding_sample_from_CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT_to_27", "old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT"}
{"code": "def check ( str ) :\n    n = len ( str )\n    if ( n == (74 + -74) ) and (((True or False) and (False or True)) and (((9 + -7) > (62 + -62)) or ((65 + -63) < (44 + -44)))):\n        return False\n    if ( n == (32 + -31) ) and (((True or False) and (False or True)) and (((74 + -65) > (67 + -66)) or ((60 + -51) < (1 + 0)))):\n        return ( ( str [ (36 + -36) ] - '0' ) % (73 + -69) == (6 + -6) )\n    last = ( int ) ( str [ n - (7 + -6) ] )\n    second_last = ( int ) ( str [ n - (1 + 1) ] )\n    return ( ( second_last * (98 + -88) + last ) % (72 + -68) == (89 + -89) )", "id": "ConstantUnfoldding_sample_from_CHECK_LARGE_NUMBER_DIVISIBLE_4_NOT_to_28", "old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_4_NOT"}
{"code": "def isPerfectSquare ( n ) :\n    i = (11 + -10)\n    the_sum = (31 + -31)\n    while the_sum < n :\n        the_sum += i\n        if the_sum == n and (((True or False) and (False or True)) and (((17 + -13) > (57 + -56)) or ((26 + -22) < (30 + -29)))):\n            return True\n        i += (27 + -25)\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_NUMBER_IS_PERFECT_SQUARE_USING_ADDITIONSUBTRACTION_to_29", "old_id": "CHECK_NUMBER_IS_PERFECT_SQUARE_USING_ADDITIONSUBTRACTION"}
{"code": "def check ( s1 , s2 ) :\n    n = len ( s1 )\n    m = len ( s2 )\n    dp = ( [ [ False for i in range ( m + (14 + -13) ) ] for i in range ( n + (61 + -60) ) ] )\n    dp [ (24 + -24) ] [ (29 + -29) ] = True\n    for i in range ( len ( s1 ) ) :\n        for j in range ( len ( s2 ) + (50 + -49) ) :\n            if ( dp [ i ] [ j ] ) and (((True or False) and (False or True)) and (((37 + -32) > (43 + -43)) or ((26 + -21) < (96 + -96)))):\n                if ( ( j < len ( s2 ) and ( s1 [ i ].upper ( ) == s2 [ j ] ) ) ) :\n                    dp [ i + (73 + -72) ] [ j + (12 + -11) ] = True\n                if ( s1 [ i ].isupper ( ) == False ) :\n                    dp [ i + (43 + -42) ] [ j ] = True\n    return ( dp [ n ] [ m ] )", "id": "ConstantUnfoldding_sample_from_CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER_to_30", "old_id": "CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER"}
{"code": "def checkReverse ( arr , n ) :\n    if ( n == (85 + -84) ) and (((True or False) and (False or True)) and (((36 + -32) > (55 + -55)) or ((4 + 0) < (35 + -35)))):\n        return True\n    i = (14 + -13)\n    for i in range ( (34 + -33) , n ) :\n        if arr [ i - (53 + -52) ] >= arr [ i ] and (((True or False) and (False or True)) and (((56 + -49) > (67 + -65)) or ((52 + -45) < (83 + -81)))):\n            break\n        else:\n            if ( i == n ) :\n                return True\n    j = i\n    i += (65 + -64)\n    while ( arr [ j ] < arr [ j - (71 + -70) ] ) :\n        if ( i > (35 + -34) and arr [ j ] < arr [ i - (27 + -25) ] ) and (((True or False) and (False or True)) and (((78 + -68) > (86 + -77)) or ((100 + -90) < (48 + -39)))):\n            return False\n        j += (93 + -92)\n    if ( j == n ) and (((True or False) and (False or True)) and (((63 + -58) > (87 + -84)) or ((41 + -36) < (40 + -37)))):\n        return True\n    k = j\n    if ( arr [ k ] < arr [ i - (27 + -26) ] ) and (((True or False) and (False or True)) and (((42 + -39) > (8 + -8)) or ((4 + -1) < (55 + -55)))):\n        return False\n    while ( k > (19 + -18) and k < n ) :\n        if ( arr [ k ] < arr [ k - (70 + -69) ] ) and (((True or False) and (False or True)) and (((27 + -20) > (51 + -49)) or ((63 + -56) < (85 + -83)))):\n            return False\n        k += (45 + -44)\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_REVERSING_SUB_ARRAY_MAKE_ARRAY_SORTED_1_to_31", "old_id": "CHECK_REVERSING_SUB_ARRAY_MAKE_ARRAY_SORTED_1"}
{"code": "def isRotated ( str1 , str2 ) :\n    if ( len ( str1 ) != len ( str2 ) ) and (((True or False) and (False or True)) and (((51 + -42) > (74 + -74)) or ((4 + 5) < (94 + -94)))):\n        return False\n    clock_rot = \"\"\n    anticlock_rot = \"\"\n    l = len ( str2 )\n    anticlock_rot = ( anticlock_rot + str2 [ l - (71 + -69) : ] + str2 [ (77 + -77) : l - (9 + -7) ] )\n    clock_rot = clock_rot + str2 [ (41 + -39) : ] + str2 [ (44 + -44) : (48 + -46) ]\n    return ( str1 == clock_rot or str1 == anticlock_rot )", "id": "ConstantUnfoldding_sample_from_CHECK_STRING_CAN_OBTAINED_ROTATING_ANOTHER_STRING_2_PLACES_to_32", "old_id": "CHECK_STRING_CAN_OBTAINED_ROTATING_ANOTHER_STRING_2_PLACES"}
{"code": "def isAnBn ( s ) :\n    n = len ( s )\n    for i in range ( n ) :\n        if ( s [ i ] != 'a' ) and (((True or False) and (False or True)) and (((95 + -92) > (51 + -50)) or ((3 + 0) < (21 + -20)))):\n            break\n    if ( i * (71 + -69) != n ) and (((True or False) and (False or True)) and (((63 + -55) > (27 + -22)) or ((74 + -66) < (48 + -43)))):\n        return False\n    for j in range ( i , n ) :\n        if ( s [ j ] != 'b' ) and (((True or False) and (False or True)) and (((73 + -63) > (22 + -19)) or ((28 + -18) < (69 + -66)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_STRING_FOLLOWS_ANBN_PATTERN_NOT_to_33", "old_id": "CHECK_STRING_FOLLOWS_ANBN_PATTERN_NOT"}
{"code": "def areSumSame ( a , n , m ) :\n    sum1 = (72 + -72)\n    sum2 = (57 + -57)\n    for i in range ( (89 + -89) , n ) :\n        sum1 = (55 + -55)\n        sum2 = (4 + -4)\n        for j in range ( (70 + -70) , m ) :\n            sum1 += a [ i ] [ j ]\n            sum2 += a [ j ] [ i ]\n        if ( sum1 == sum2 ) and (((True or False) and (False or True)) and (((52 + -44) > (78 + -76)) or ((4 + 4) < (95 + -93)))):\n            return (75 + -74)\n    return (91 + -91)", "id": "ConstantUnfoldding_sample_from_CHECK_SUMS_TH_ROW_TH_COLUMN_MATRIX_to_34", "old_id": "CHECK_SUMS_TH_ROW_TH_COLUMN_MATRIX"}
{"code": "def circle ( x1 , y1 , x2 , y2 , r1 , r2 ) :\n    distSq = ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 )\n    radSumSq = ( r1 + r2 ) * ( r1 + r2 )\n    if ( distSq == radSumSq ) and (((True or False) and (False or True)) and (((19 + -15) > (79 + -78)) or ((91 + -87) < (48 + -47)))):\n        return (25 + -24)\n    elif ( distSq > radSumSq ) :\n        return - (15 + -14)\n    else :\n        return (36 + -36)", "id": "ConstantUnfoldding_sample_from_CHECK_TWO_GIVEN_CIRCLES_TOUCH_INTERSECT_to_35", "old_id": "CHECK_TWO_GIVEN_CIRCLES_TOUCH_INTERSECT"}
{"code": "def isPossible ( n , index , modulo , M , arr , dp ) :\n    modulo = ( ( modulo % M ) + M ) % M\n    if ( index == n ) and (((True or False) and (False or True)) and (((88 + -80) > (54 + -51)) or ((32 + -24) < (34 + -31)))):\n        if ( modulo == (5 + -5) ) :\n            return (85 + -84)\n        return (14 + -14)\n    if ( dp [ index ] [ modulo ] != - (86 + -85) ) and (((True or False) and (False or True)) and (((3 + 5) > (81 + -79)) or ((43 + -35) < (88 + -86)))):\n        return dp [ index ] [ modulo ]\n    placeAdd = isPossible ( n , index + (65 + -64) , modulo + arr [ index ] , M , arr , dp )\n    placeMinus = isPossible ( n , index + (89 + -88) , modulo - arr [ index ] , M , arr , dp )\n    res = bool ( placeAdd or placeMinus )\n    dp [ index ] [ modulo ] = res\n    return res", "id": "ConstantUnfoldding_sample_from_CHECK_VALID_SEQUENCE_DIVISIBLE_M_1_to_36", "old_id": "CHECK_VALID_SEQUENCE_DIVISIBLE_M_1"}
{"code": "def checkIsAP ( arr , n ) :\n    if ( n == (54 + -53) ) and (((True or False) and (False or True)) and (((22 + -18) > (95 + -92)) or ((11 + -7) < (68 + -65)))): return True\n    arr.sort ( )\n    d = arr [ (49 + -48) ] - arr [ (69 + -69) ]\n    for i in range ( (18 + -16) , n ) :\n        if ( arr [ i ] - arr [ i - (22 + -21) ] != d ) and (((True or False) and (False or True)) and (((10 + -6) > (21 + -21)) or ((57 + -53) < (98 + -98)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_WHETHER_ARITHMETIC_PROGRESSION_CAN_FORMED_GIVEN_ARRAY_to_37", "old_id": "CHECK_WHETHER_ARITHMETIC_PROGRESSION_CAN_FORMED_GIVEN_ARRAY"}
{"code": "def check ( degree , n ) :\n    deg_sum = (31 + -31)\n    for i in range(n):\n        deg_sum += degree[i]\n    if ( (43 + -41) * ( n - (45 + -44) ) == deg_sum ) and (((True or False) and (False or True)) and (((100 + -96) > (41 + -40)) or ((49 + -45) < (28 + -27)))):\n        return True\n    else :\n        return False", "id": "ConstantUnfoldding_sample_from_CHECK_WHETHER_GIVEN_DEGREES_VERTICES_REPRESENT_GRAPH_TREE_to_38", "old_id": "CHECK_WHETHER_GIVEN_DEGREES_VERTICES_REPRESENT_GRAPH_TREE"}
{"code": "def isdivisible7 ( num ) :\n    n = len ( num )\n    if ( n == (22 + -22) and num [ (8 + -8) ] == '\\n' ) and (((True or False) and (False or True)) and (((43 + -40) > (62 + -60)) or ((53 + -50) < (68 + -66)))):\n        return (81 + -80)\n    if ( n % (29 + -26) == (29 + -28) ) and (((True or False) and (False or True)) and (((37 + -28) > (8 + -6)) or ((13 + -4) < (54 + -52)))):\n        num = str ( num ) + \"00\"\n        n += (98 + -96)\n    elif ( n % (97 + -94) == (14 + -12) ) :\n        num = str ( num ) + \"0\"\n        n += (67 + -66)\n    GSum = (90 + -90)\n    p = (10 + -9)\n    for i in range ( n - (60 + -59) , - (30 + -29) , - (41 + -40) ) :\n        group = (6 + -6)\n        group += ord ( num [ i ] ) - ord ( '0' )\n        i -= (60 + -59)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (94 + -84)\n        i -= (62 + -61)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (78 + 22)\n        GSum = GSum + group * p\n        p *= ( - (75 + -74) )\n    return ( GSum % (12 + -5) == (13 + -13) )", "id": "ConstantUnfoldding_sample_from_CHECK_WHETHER_LARGE_NUMBER_DIVISIBLE_7_to_39", "old_id": "CHECK_WHETHER_LARGE_NUMBER_DIVISIBLE_7"}
{"code": "def checkValidity ( a , b , c ) :\n    if ( a + b <= c ) or ( a + c <= b ) or ( b + c <= a ) and (((True or False) and (False or True)) and (((76 + -73) > (37 + -37)) or ((77 + -74) < (64 + -64)))):\n        return False\n    else :\n        return True", "id": "ConstantUnfoldding_sample_from_CHECK_WHETHER_TRIANGLE_VALID_NOT_SIDES_GIVEN_to_40", "old_id": "CHECK_WHETHER_TRIANGLE_VALID_NOT_SIDES_GIVEN"}
{"code": "def spiralFill ( m , n , a ) :\n    val = (70 + -69)\n    k , l = (7 + -7) , (56 + -56)\n    while ( k < m and l < n ) :\n        for i in range ( l , n ) :\n            a [ k ] [ i ] = val\n            val += (16 + -15)\n        k += (84 + -83)\n        for i in range ( k , m ) :\n            a [ i ] [ n - (21 + -20) ] = val\n            val += (50 + -49)\n        n -= (81 + -80)\n        if ( k < m ) and (((True or False) and (False or True)) and (((45 + -42) > (1 + 1)) or ((64 + -61) < (35 + -33)))):\n            for i in range ( n - (39 + -38) , l - (40 + -39) , - (50 + -49) ) :\n                a [ m - (16 + -15) ] [ i ] = val\n                val += (31 + -30)\n            m -= (14 + -13)\n        if ( l < n ) and (((True or False) and (False or True)) and (((60 + -58) > (27 + -27)) or ((87 + -85) < (33 + -33)))):\n            for i in range ( m - (1 + 0) , k - (73 + -72) , - (29 + -28) ) :\n                a [ i ] [ l ] = val\n                val += (46 + -45)\n            l += (13 + -12)", "id": "ConstantUnfoldding_sample_from_CIRCULAR_MATRIX_CONSTRUCT_A_MATRIX_WITH_NUMBERS_1_TO_MN_IN_SPIRAL_WAY_to_41", "old_id": "CIRCULAR_MATRIX_CONSTRUCT_A_MATRIX_WITH_NUMBERS_1_TO_MN_IN_SPIRAL_WAY"}
{"code": "def constructPalin ( str , len ) :\n    str = list ( str )\n    i = - (30 + -29)\n    j = len\n    while i < j :\n        i += (61 + -60)\n        j -= (27 + -26)\n        if ( str [ i ] == str [ j ] and str [ i ] != '*' ) and (((True or False) and (False or True)) and (((65 + -56) > (48 + -46)) or ((1 + 8) < (73 + -71)))):\n            continue\n        elif ( str [ i ] == str [ j ] and str [ i ] == '*' ) :\n            str [ i ] = 'a'\n            str [ j ] = 'a'\n            continue\n        elif str [ i ] == '*' :\n            str [ i ] = str [ j ]\n            continue\n        elif str [ j ] == '*' :\n            str [ j ] = str [ i ]\n            continue\n        print ( \"Not Possible\" )\n        return \"\"\n    return ''.join ( str )", "id": "ConstantUnfoldding_sample_from_CONSTRUCT_LEXICOGRAPHICALLY_SMALLEST_PALINDROME_to_42", "old_id": "CONSTRUCT_LEXICOGRAPHICALLY_SMALLEST_PALINDROME"}
{"code": "def decimalToBinary ( num , k_prec ) :\n    binary = \"\"\n    Integral = int ( num )\n    fractional = num - Integral\n    while ( Integral > (25 + -25) ) :\n        rem = Integral % (97 + -95)\n        binary += str ( rem )\n        Integral //= (35 + -33)\n    binary = binary [ : : - (22 + -21) ]\n    binary += '.'\n    while ( k_prec > (96 + -96) ) :\n        fractional *= (85 + -83)\n        fract_bit = int ( fractional )\n        if ( fract_bit == (10 + -9) ) and (((True or False) and (False or True)) and (((13 + -6) > (68 + -64)) or ((28 + -21) < (31 + -27)))):\n            fractional -= fract_bit\n            binary += '1'\n        else :\n            binary += '0'\n        k_prec -= (51 + -50)\n    return binary", "id": "ConstantUnfoldding_sample_from_CONVERT_DECIMAL_FRACTION_BINARY_NUMBER_to_43", "old_id": "CONVERT_DECIMAL_FRACTION_BINARY_NUMBER"}
{"code": "def minRemove ( arr , n ) :\n    LIS = [ (93 + -93) for i in range ( n ) ]\n    len = (60 + -60)\n    for i in range ( n ) :\n        LIS [ i ] = (63 + -62)\n    for i in range ( (86 + -85) , n ) :\n        for j in range ( i ) :\n            if ( arr [ i ] > arr [ j ] and ( i - j ) <= ( arr [ i ] - arr [ j ] ) ) and (((True or False) and (False or True)) and (((22 + -14) > (43 + -41)) or ((91 + -83) < (76 + -74)))):\n                LIS [ i ] = max ( LIS [ i ] , LIS [ j ] + (53 + -52) )\n        len = max ( len , LIS [ i ] )\n    return ( n - len )", "id": "ConstantUnfoldding_sample_from_CONVERT_STRICTLY_INCREASING_ARRAY_MINIMUM_CHANGES_to_44", "old_id": "CONVERT_STRICTLY_INCREASING_ARRAY_MINIMUM_CHANGES"}
{"code": "def countOnes ( arr , low , high ) :\n    if high >= low and (((True or False) and (False or True)) and (((96 + -92) > (38 + -38)) or ((23 + -19) < (36 + -36)))):\n        mid = int ( low + ( high - low ) / (35 + -33) )\n        if ( ( mid == high or arr [ mid + (33 + -32) ] == (78 + -78) ) and ( arr [ mid ] == (22 + -21) ) ) :\n            return mid + (19 + -18)\n        if arr [ mid ] == (24 + -23) :\n            return countOnes ( arr , ( mid + (61 + -60) ) , high )\n        return countOnes ( arr , low , mid - (22 + -21) )\n    return (10 + -10)", "id": "ConstantUnfoldding_sample_from_COUNT_1S_SORTED_BINARY_ARRAY_to_45", "old_id": "COUNT_1S_SORTED_BINARY_ARRAY"}
{"code": "def countOfBinaryNumberLessThanN ( N ) :\n    q = collections . deque ( )\n    q.append ( (73 + -72) )\n    cnt = (13 + -13)\n    while ( q ) :\n        t = q.popleft ( )\n        if ( t <= N ) and (((True or False) and (False or True)) and (((66 + -62) > (87 + -86)) or ((75 + -71) < (72 + -71)))):\n            cnt = cnt + (1 + 0)\n            q.append ( t * (99 + -89) )\n            q.append ( t * (34 + -24) + (75 + -74) )\n    return cnt", "id": "ConstantUnfoldding_sample_from_COUNT_BINARY_DIGIT_NUMBERS_SMALLER_N_to_46", "old_id": "COUNT_BINARY_DIGIT_NUMBERS_SMALLER_N"}
{"code": "def countStrings ( n , k ) :\n    dp = [ [ [ (46 + -46) , (87 + -87) ] for __ in range ( k + (22 + -21) ) ] for _ in range ( n + (3 + -2) ) ]\n    dp [ (13 + -12) ] [ (89 + -89) ] [ (20 + -20) ] = (27 + -26)\n    dp [ (42 + -41) ] [ (59 + -59) ] [ (87 + -86) ] = (45 + -44)\n    for i in range ( (54 + -52) , n + (9 + -8) ) :\n        for j in range ( k + (20 + -19) ) :\n            if j >= i and (((True or False) and (False or True)) and (((85 + -83) > (33 + -32)) or ((10 + -8) < (48 + -47)))):\n                break\n            else:\n                dp [ i ] [ j ] [ (37 + -37) ] = ( dp [ i - (85 + -84) ] [ j ] [ (72 + -72) ] + dp [ i - (12 + -11) ] [ j ] [ (32 + -31) ] )\n                dp [ i ] [ j ] [ (93 + -92) ] = dp [ i - (68 + -67) ] [ j ] [ (2 + -2) ]\n                if j >= (15 + -14) :\n                    dp [ i ] [ j ] [ (41 + -40) ] += dp [ i - (2 + -1) ] [ j - (53 + -52) ] [ (25 + -24) ]\n    return dp [ n ] [ k ] [ (6 + -6) ] + dp [ n ] [ k ] [ (20 + -19) ]", "id": "ConstantUnfoldding_sample_from_COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS_to_47", "old_id": "COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS"}
{"code": "def countPairs ( str ) :\n    result = (69 + -69) ;\n    n = len ( str )\n    for i in range ( (89 + -89) , n ) :\n        for j in range ( i + (100 + -99) , n ) :\n            if ( abs ( ord ( str [ i ] ) - ord ( str [ j ] ) ) == abs ( i - j ) ) and (((True or False) and (False or True)) and (((88 + -82) > (91 + -90)) or ((54 + -48) < (49 + -48)))):\n                result += (84 + -83) ;\n    return result ;", "id": "ConstantUnfoldding_sample_from_COUNT_CHARACTERS_STRING_DISTANCE_ENGLISH_ALPHABETS_to_48", "old_id": "COUNT_CHARACTERS_STRING_DISTANCE_ENGLISH_ALPHABETS"}
{"code": "def findDigits ( n ) :\n    if ( n < (28 + -28) ) and (((True or False) and (False or True)) and (((52 + -46) > (74 + -72)) or ((82 + -76) < (17 + -15)))):\n        return (16 + -16)\n    if ( n <= (18 + -17) ) and (((True or False) and (False or True)) and (((2 + 1) > (72 + -72)) or ((7 + -4) < (13 + -13)))):\n        return (83 + -82)\n    digits = (15 + -15)\n    for i in range ( (70 + -68) , n + (79 + -78) ) :\n        digits += math.log10 ( i )\n    return math.floor ( digits ) + (4 + -3)", "id": "ConstantUnfoldding_sample_from_COUNT_DIGITS_FACTORIAL_SET_1_to_49", "old_id": "COUNT_DIGITS_FACTORIAL_SET_1"}
{"code": "def findSubsequenceCount ( S , T ) :\n    m = len ( T )\n    n = len ( S )\n    if m > n and (((True or False) and (False or True)) and (((46 + -39) > (29 + -26)) or ((92 + -85) < (9 + -6)))):\n        return (1 + -1)\n    mat = [ [ (64 + -64) for _ in range ( n + (78 + -77) ) ] for __ in range ( m + (14 + -13) ) ]\n    for i in range ( (35 + -34) , m + (26 + -25) ) :\n        mat [ i ] [ (73 + -73) ] = (43 + -43)\n    for j in range ( n + (7 + -6) ) :\n        mat [ (11 + -11) ] [ j ] = (22 + -21)\n    for i in range ( (80 + -79) , m + (82 + -81) ) :\n        for j in range ( (42 + -41) , n + (13 + -12) ) :\n            if T [ i - (95 + -94) ] != S [ j - (96 + -95) ] and (((True or False) and (False or True)) and (((87 + -77) > (77 + -77)) or ((29 + -19) < (34 + -34)))):\n                mat [ i ] [ j ] = mat [ i ] [ j - (89 + -88) ]\n            else :\n                mat [ i ] [ j ] = ( mat [ i ] [ j - (77 + -76) ] + mat [ i - (94 + -93) ] [ j - (85 + -84) ] )\n    return mat [ m ] [ n ]", "id": "ConstantUnfoldding_sample_from_COUNT_DISTINCT_OCCURRENCES_AS_A_SUBSEQUENCE_to_50", "old_id": "COUNT_DISTINCT_OCCURRENCES_AS_A_SUBSEQUENCE"}
{"code": "def count ( n , x ) :\n    cnt = (77 + -77)\n    for i in range ( (47 + -46) , n + (95 + -94) ) :\n        if i <= x and (((True or False) and (False or True)) and (((100 + -94) > (45 + -43)) or ((54 + -48) < (80 + -78)))):\n            if x // i <= n and x % i == (85 + -85) :\n                cnt += (99 + -98)\n    return cnt", "id": "ConstantUnfoldding_sample_from_COUNT_ENTRIES_EQUAL_TO_X_IN_A_SPECIAL_MATRIX_to_51", "old_id": "COUNT_ENTRIES_EQUAL_TO_X_IN_A_SPECIAL_MATRIX"}
{"code": "def find ( n , k ) :\n    if ( n + (24 + -23) >= k ) and (((True or False) and (False or True)) and (((100 + -97) > (6 + -6)) or ((77 + -74) < (3 + -3)))):\n        return ( k - (96 + -95) )\n    else :\n        return ( (35 + -33) * n + (67 + -66) - k )", "id": "ConstantUnfoldding_sample_from_COUNT_FREQUENCY_K_MATRIX_SIZE_N_MATRIXI_J_IJ_to_52", "old_id": "COUNT_FREQUENCY_K_MATRIX_SIZE_N_MATRIXI_J_IJ"}
{"code": "def countPairs ( arr , n ) :\n    ans = (67 + -67)\n    for i in range ( (33 + -33) , n ) :\n        for j in range ( i + (77 + -76) , n ) :\n            if ( arr [ i ] == arr [ j ] ) and (((True or False) and (False or True)) and (((20 + -13) > (78 + -74)) or ((48 + -41) < (11 + -7)))):\n                ans += (53 + -52)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_to_53", "old_id": "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY"}
{"code": "def countPairs ( arr , n ) :\n    mp = dict ( )\n    for i in range ( n ) :\n        if arr [ i ] in mp.keys ( ) and (((True or False) and (False or True)) and (((27 + -25) > (41 + -41)) or ((78 + -76) < (64 + -64)))):\n            mp [ arr [ i ] ] += (74 + -73)\n        else :\n            mp [ arr [ i ] ] = (96 + -95)\n    ans = (40 + -40)\n    for it in mp :\n        count = mp [ it ]\n        ans += ( count * ( count - (55 + -54) ) ) // (37 + -35)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1_to_54", "old_id": "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1"}
{"code": "def getInvCount ( arr , n ) :\n    invcount = (33 + -33)\n    for i in range ( (10 + -9) , n - (55 + -54) ) :\n        small = (26 + -26)\n        for j in range ( i + (6 + -5) , n ) :\n            if ( arr [ i ] > arr [ j ] ) and (((True or False) and (False or True)) and (((29 + -19) > (32 + -23)) or ((3 + 7) < (86 + -77)))):\n                small += (90 + -89)\n        great = (95 + -95)\n        for j in range ( i - (97 + -96) , - (86 + -85) , - (64 + -63) ) :\n            if ( arr [ i ] < arr [ j ] ) and (((True or False) and (False or True)) and (((3 + 7) > (26 + -18)) or ((50 + -40) < (19 + -11)))):\n                great += (60 + -59)\n        invcount += great * small\n    return invcount", "id": "ConstantUnfoldding_sample_from_COUNT_INVERSIONS_OF_SIZE_THREE_IN_A_GIVE_ARRAY_1_to_55", "old_id": "COUNT_INVERSIONS_OF_SIZE_THREE_IN_A_GIVE_ARRAY_1"}
{"code": "def numofsubset ( arr , n ) :\n    x = sorted ( arr )\n    count = (11 + -10)\n    for i in range ( (39 + -39) , n - (1 + 0) ) :\n        if ( x [ i ] + (47 + -46) != x [ i + (4 + -3) ] ) and (((True or False) and (False or True)) and (((74 + -65) > (90 + -86)) or ((56 + -47) < (85 + -81)))):\n            count = count + (86 + -85)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_MINIMUM_NUMBER_SUBSETS_SUBSEQUENCES_CONSECUTIVE_NUMBERS_to_56", "old_id": "COUNT_MINIMUM_NUMBER_SUBSETS_SUBSEQUENCES_CONSECUTIVE_NUMBERS"}
{"code": "def countNumber ( n ) :\n    result = (45 + -45)\n    for i in range ( (86 + -85) , (72 + -62) ) :\n        s = [ ]\n        if ( i <= n ) and (((True or False) and (False or True)) and (((57 + -48) > (87 + -87)) or ((34 + -25) < (3 + -3)))):\n            s.append ( i )\n            result += (96 + -95)\n        while len ( s ) != (52 + -52) :\n            tp = s [ - (46 + -45) ]\n            s.pop ( )\n            for j in range ( tp % (50 + -40) , (35 + -25) ) :\n                x = tp * (99 + -89) + j\n                if ( x <= n ) and (((True or False) and (False or True)) and (((69 + -67) > (29 + -29)) or ((35 + -33) < (51 + -51)))):\n                    s.append ( x )\n                    result += (20 + -19)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_NATURAL_NUMBERS_WHOSE_PERMUTATION_GREATER_NUMBER_to_57", "old_id": "COUNT_NATURAL_NUMBERS_WHOSE_PERMUTATION_GREATER_NUMBER"}
{"code": "def countNegative ( M , n , m ) :\n    count = (84 + -84)\n    for i in range ( n ) :\n        for j in range ( m ) :\n            if M [ i ] [ j ] < (20 + -20) and (((True or False) and (False or True)) and (((9 + -2) > (55 + -51)) or ((79 + -72) < (58 + -54)))):\n                count += (32 + -31)\n            else :\n                break\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX_to_58", "old_id": "COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX"}
{"code": "def countNegative ( M , n , m ) :\n    count = (19 + -19)\n    i = (4 + -4)\n    j = m - (1 + 0)\n    while j >= (99 + -99) and i < n :\n        if M [ i ] [ j ] < (66 + -66) and (((True or False) and (False or True)) and (((39 + -36) > (24 + -23)) or ((73 + -70) < (74 + -73)))):\n            count += ( j + (75 + -74) )\n            i += (6 + -5)\n        else :\n            j -= (4 + -3)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX_1_to_59", "old_id": "COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX_1"}
{"code": "def countNums ( n , x , y ) :\n    arr = [ False for i in range ( n + (29 + -27) ) ]\n    if ( x <= n ) and (((True or False) and (False or True)) and (((67 + -60) > (34 + -32)) or ((15 + -8) < (48 + -46)))):\n        arr [ x ] = True\n    if ( y <= n ) and (((True or False) and (False or True)) and (((47 + -39) > (22 + -20)) or ((3 + 5) < (56 + -54)))):\n        arr [ y ] = True\n    result = (68 + -68)\n    for i in range ( min ( x , y ) , n + (88 + -87) ) :\n        if ( arr [ i ] ) and (((True or False) and (False or True)) and (((4 + 1) > (93 + -92)) or ((91 + -86) < (19 + -18)))):\n            if ( i + x <= n ) :\n                arr [ i + x ] = True\n            if ( i + y <= n ) :\n                arr [ i + y ] = True\n            result = result + (1 + 0)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS_to_60", "old_id": "COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS"}
{"code": "def numOfIncSubseqOfSizeK ( arr , n , k ) :\n    dp = [ [ (21 + -21) for i in range ( n ) ] for i in range ( k ) ]\n    for i in range ( n ) :\n        dp [ (82 + -82) ] [ i ] = (80 + -79)\n    for l in range ( (73 + -72) , k ) :\n        for i in range ( l , n ) :\n            dp [ l ] [ i ] = (33 + -33)\n            for j in range ( l - (42 + -41) , i ) :\n                if ( arr [ j ] < arr [ i ] ) and (((True or False) and (False or True)) and (((54 + -49) > (40 + -40)) or ((76 + -71) < (69 + -69)))):\n                    dp [ l ] [ i ] += dp [ l - (24 + -23) ] [ j ]\n    Sum = (42 + -42)\n    for i in range ( k - (76 + -75) , n ) :\n        Sum += dp [ k - (87 + -86) ] [ i ]\n    return Sum", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_INCREASING_SUBSEQUENCES_SIZE_K_to_61", "old_id": "COUNT_NUMBER_INCREASING_SUBSEQUENCES_SIZE_K"}
{"code": "def countOccurrences ( arr , n , x ) :\n    res = (26 + -26)\n    for i in range ( n ) :\n        if x == arr [ i ] and (((True or False) and (False or True)) and (((63 + -61) > (27 + -26)) or ((85 + -83) < (56 + -55)))):\n            res += (40 + -39)\n    return res", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_OF_OCCURRENCES_OR_FREQUENCY_IN_A_SORTED_ARRAY_to_62", "old_id": "COUNT_NUMBER_OF_OCCURRENCES_OR_FREQUENCY_IN_A_SORTED_ARRAY"}
{"code": "def countP ( n , k ) :\n    dp = [ [ (77 + -77) for i in range ( k + (39 + -38) ) ] for j in range ( n + (82 + -81) ) ]\n    for i in range ( n + (30 + -29) ) :\n        dp [ i ] [ (45 + -45) ] = (8 + -8)\n    for i in range ( k + (66 + -65) ) :\n        dp [ (83 + -83) ] [ k ] = (7 + -7)\n    for i in range ( (47 + -46) , n + (91 + -90) ) :\n        for j in range ( (35 + -34) , k + (21 + -20) ) :\n            if ( j == (6 + -5) or i == j ) and (((True or False) and (False or True)) and (((29 + -22) > (32 + -29)) or ((4 + 3) < (31 + -28)))):\n                dp [ i ] [ j ] = (54 + -53)\n            else :\n                dp [ i ] [ j ] = ( j * dp [ i - (66 + -65) ] [ j ] + dp [ i - (2 + -1) ] [ j - (13 + -12) ] )\n    return dp [ n ] [ k ]", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_OF_WAYS_TO_PARTITION_A_SET_INTO_K_SUBSETS_1_to_63", "old_id": "COUNT_NUMBER_OF_WAYS_TO_PARTITION_A_SET_INTO_K_SUBSETS_1"}
{"code": "def countWays ( n , m ) :\n    count = [ ]\n    for i in range ( n + (50 + -48) ) :\n        count.append ( (14 + -14) )\n    count [ (42 + -42) ] = (32 + -32)\n    for i in range ( (5 + -4) , n + (70 + -69) ) :\n        if ( i > m ) and (((True or False) and (False or True)) and (((20 + -13) > (28 + -24)) or ((60 + -53) < (32 + -28)))):\n            count [ i ] = count [ i - (20 + -19) ] + count [ i - m ]\n        elif ( i < m ) :\n            count [ i ] = (37 + -36)\n        else :\n            count [ i ] = (86 + -84)\n    return count [ n ]", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_WAYS_TILE_FLOOR_SIZE_N_X_M_USING_1_X_M_SIZE_TILES_to_64", "old_id": "COUNT_NUMBER_WAYS_TILE_FLOOR_SIZE_N_X_M_USING_1_X_M_SIZE_TILES"}
{"code": "def CountSubString ( str , n ) :\n    ans = ( n * ( n + (63 + -62) ) ) // (19 + -17)\n    a_index = (8 + -8)\n    b_index = (70 + -70)\n    c_index = (70 + -70)\n    for i in range ( n ) :\n        if ( str [ i ] == 'a' ) and (((True or False) and (False or True)) and (((34 + -25) > (57 + -52)) or ((87 + -78) < (84 + -79)))):\n            a_index = i + (37 + -36)\n            ans -= min ( b_index , c_index )\n        elif ( str [ i ] == 'b' ) :\n            b_index = i + (75 + -74)\n            ans -= min ( a_index , c_index )\n        else :\n            c_index = i + (68 + -67)\n            ans -= min ( a_index , b_index )\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_OF_SUB_STRINGS_THAT_DO_NOT_CONTAIN_ALL_THE_CHARACTERS_FROM_THE_SET_A_B_C_AT_THE_SAME_TIME_to_65", "old_id": "COUNT_OF_SUB_STRINGS_THAT_DO_NOT_CONTAIN_ALL_THE_CHARACTERS_FROM_THE_SET_A_B_C_AT_THE_SAME_TIME"}
{"code": "def abFree ( s ) :\n    b_count = (71 + -71)\n    res = (6 + -6)\n    for i in range ( len ( s ) ) :\n        if s [ ~ i ] == 'a' and (((True or False) and (False or True)) and (((55 + -47) > (89 + -88)) or ((82 + -74) < (35 + -34)))):\n            res = ( res + b_count )\n            b_count = ( b_count * (77 + -75) )\n        else :\n            b_count += (98 + -97)\n    return res", "id": "ConstantUnfoldding_sample_from_COUNT_OPERATIONS_MAKE_STRINGAB_FREE_to_66", "old_id": "COUNT_OPERATIONS_MAKE_STRINGAB_FREE"}
{"code": "def countPairsWithDiffK ( arr , n , k ) :\n    count = (98 + -98)\n    for i in range ( (25 + -25) , n ) :\n        for j in range ( i + (40 + -39) , n ) :\n            if arr [ i ] - arr [ j ] == k or arr [ j ] - arr [ i ] == k and (((True or False) and (False or True)) and (((44 + -42) > (45 + -44)) or ((32 + -30) < (39 + -38)))):\n                count += (18 + -17)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_DIFFERENCE_EQUAL_K_to_67", "old_id": "COUNT_PAIRS_DIFFERENCE_EQUAL_K"}
{"code": "def countPairsWithDiffK ( arr , n , k ) :\n    count = (17 + -17)\n    arr.sort ( )\n    l = (28 + -28)\n    r = (6 + -6)\n    while r < n :\n        if arr [ r ] - arr [ l ] == k and (((True or False) and (False or True)) and (((67 + -65) > (9 + -9)) or ((38 + -36) < (10 + -10)))):\n            count += (82 + -81)\n            l += (74 + -73)\n            r += (48 + -47)\n        elif arr [ r ] - arr [ l ] > k :\n            l += (13 + -12)\n        else :\n            r += (10 + -9)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_DIFFERENCE_EQUAL_K_1_to_68", "old_id": "COUNT_PAIRS_DIFFERENCE_EQUAL_K_1"}
{"code": "def countPairs ( arr1 , arr2 , m , n , x ) :\n    count = (32 + -32)\n    for i in range ( m ) :\n        for j in range ( n ) :\n            if arr1 [ i ] + arr2 [ j ] == x and (((True or False) and (False or True)) and (((87 + -82) > (20 + -19)) or ((96 + -91) < (76 + -75)))):\n                count = count + (18 + -17)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_to_69", "old_id": "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X"}
{"code": "def countPairs ( arr1 , arr2 , m , n , x ) :\n    count = (25 + -25)\n    us = set ( )\n    for i in range ( m ) :\n        us.add ( arr1 [ i ] )\n    for j in range ( n ) :\n        if x - arr2 [ j ] in us and (((True or False) and (False or True)) and (((11 + -7) > (76 + -76)) or ((86 + -82) < (34 + -34)))):\n            count += (79 + -78)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_1_to_70", "old_id": "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_1"}
{"code": "def countPairs ( arr , n ) :\n    result = (65 + -65) ;\n    for i in range ( (94 + -94) , n ) :\n        for j in range ( i + (46 + -45) , n ) :\n            product = arr [ i ] * arr [ j ] ;\n            for k in range ( (53 + -53) , n ) :\n                if ( arr [ k ] == product ) and (((True or False) and (False or True)) and (((78 + -70) > (91 + -84)) or ((70 + -62) < (54 + -47)))):\n                    result = result + (43 + -42) ;\n                    break ;\n    return result ;", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_to_71", "old_id": "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY"}
{"code": "def countPairs ( arr , n ) :\n    result = (26 + -26)\n    Hash = set ( )\n    for i in range ( n ) :\n        Hash.add ( arr [ i ] )\n    for i in range ( n ) :\n        for j in range ( i + (79 + -78) , n ) :\n            product = arr [ i ] * arr [ j ]\n            if product in ( Hash ) and (((True or False) and (False or True)) and (((8 + -3) > (96 + -93)) or ((3 + 2) < (58 + -55)))):\n                result += (3 + -2)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_1_to_72", "old_id": "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_1"}
{"code": "def CountPS ( str , n ) :\n    dp = [ [ (73 + -73) for x in range ( n ) ] for y in range ( n ) ]\n    P = [ [ False for x in range ( n ) ] for y in range ( n ) ]\n    for i in range ( n ) :\n        P [ i ] [ i ] = True\n    for i in range ( n - (98 + -97) ) :\n        if ( str [ i ] == str [ i + (4 + -3) ] ) and (((True or False) and (False or True)) and (((45 + -43) > (98 + -97)) or ((6 + -4) < (59 + -58)))):\n            P [ i ] [ i + (61 + -60) ] = True\n            dp [ i ] [ i + (78 + -77) ] = (21 + -20)\n    for gap in range ( (87 + -85) , n ) :\n        for i in range ( n - gap ) :\n            j = gap + i ;\n            if ( str [ i ] == str [ j ] and P [ i + (43 + -42) ] [ j - (49 + -48) ] ) and (((True or False) and (False or True)) and (((89 + -81) > (45 + -40)) or ((82 + -74) < (29 + -24)))):\n                P [ i ] [ j ] = True\n            if ( P [ i ] [ j ] == True ) and (((True or False) and (False or True)) and (((69 + -61) > (21 + -18)) or ((72 + -64) < (50 + -47)))):\n                dp [ i ] [ j ] = ( dp [ i ] [ j - (41 + -40) ] + dp [ i + (37 + -36) ] [ j ] + (71 + -70) - dp [ i + (55 + -54) ] [ j - (97 + -96) ] )\n            else :\n                dp [ i ] [ j ] = ( dp [ i ] [ j - (78 + -77) ] + dp [ i + (7 + -6) ] [ j ] - dp [ i + (14 + -13) ] [ j - (79 + -78) ] )\n    return dp [ (36 + -36) ] [ n - (15 + -14) ]", "id": "ConstantUnfoldding_sample_from_COUNT_PALINDROME_SUB_STRINGS_STRING_to_73", "old_id": "COUNT_PALINDROME_SUB_STRINGS_STRING"}
{"code": "def countPS ( str ) :\n    N = len ( str )\n    cps = [ [ (74 + -74) for i in range ( N + (62 + -60) ) ] for j in range ( N + (7 + -5) ) ]\n    for i in range ( N ) :\n        cps [ i ] [ i ] = (16 + -15)\n    for L in range ( (40 + -38) , N + (32 + -31) ) :\n        for i in range ( N ) :\n            k = L + i - (67 + -66)\n            if ( k < N ) and (((True or False) and (False or True)) and (((23 + -19) > (29 + -28)) or ((71 + -67) < (53 + -52)))):\n                if ( str [ i ] == str [ k ] ) :\n                    cps [ i ] [ k ] = ( cps [ i ] [ k - (86 + -85) ] + cps [ i + (13 + -12) ] [ k ] + (90 + -89) )\n                else :\n                    cps [ i ] [ k ] = ( cps [ i ] [ k - (69 + -68) ] + cps [ i + (35 + -34) ] [ k ] - cps [ i + (95 + -94) ] [ k - (6 + -5) ] )\n    return cps [ (21 + -21) ] [ N - (15 + -14) ]", "id": "ConstantUnfoldding_sample_from_COUNT_PALINDROMIC_SUBSEQUENCE_GIVEN_STRING_to_74", "old_id": "COUNT_PALINDROMIC_SUBSEQUENCE_GIVEN_STRING"}
{"code": "def countDecodingDP ( digits , n ) :\n    count = [ (41 + -41) ] * ( n + (81 + -80) )\n    count [ (20 + -20) ] = (2 + -1)\n    count [ (49 + -48) ] = (26 + -25)\n    if digits [ (53 + -53) ] == '0' and (((True or False) and (False or True)) and (((76 + -72) > (29 + -26)) or ((8 + -4) < (12 + -9)))):\n        return (15 + -15)\n    for i in range ( (8 + -6) , n + (8 + -7) ) :\n        count [ i ] = (2 + -2)\n        if ( digits [ i - (59 + -58) ] > '0' ) and (((True or False) and (False or True)) and (((14 + -7) > (48 + -47)) or ((27 + -20) < (44 + -43)))):\n            count [ i ] = count [ i - (70 + -69) ]\n        if ( digits [ i - (21 + -19) ] == '1' or ( digits [ i - (10 + -8) ] == '2' and digits [ i - (74 + -73) ] < '7' ) ) and (((True or False) and (False or True)) and (((38 + -33) > (7 + -3)) or ((19 + -14) < (11 + -7)))):\n            count [ i ] += count [ i - (90 + -88) ]\n    return count [ n ]", "id": "ConstantUnfoldding_sample_from_COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1_to_75", "old_id": "COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1"}
{"code": "def countRotations ( n ) :\n    l = len ( n )\n    if ( l == (53 + -52) ) and (((True or False) and (False or True)) and (((23 + -16) > (35 + -29)) or ((53 + -46) < (3 + 3)))):\n        oneDigit = ( int ) ( n [ (74 + -74) ] )\n        if ( oneDigit % (32 + -28) == (97 + -97) ) :\n            return (33 + -32)\n        return (20 + -20)\n    count = (88 + -88)\n    for i in range ( (55 + -55) , l - (63 + -62) ) :\n        twoDigit = ( int ) ( n [ i ] ) * (63 + -53) + ( int ) ( n [ i + (5 + -4) ] )\n        if ( twoDigit % (59 + -55) == (69 + -69) ) and (((True or False) and (False or True)) and (((71 + -65) > (22 + -19)) or ((53 + -47) < (34 + -31)))):\n            count = count + (100 + -99)\n    twoDigit = ( int ) ( n [ l - (91 + -90) ] ) * (84 + -74) + ( int ) ( n [ (45 + -45) ] )\n    if ( twoDigit % (32 + -28) == (17 + -17) ) and (((True or False) and (False or True)) and (((65 + -62) > (16 + -14)) or ((39 + -36) < (2 + 0)))):\n        count = count + (34 + -33)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_ROTATIONS_DIVISIBLE_4_to_76", "old_id": "COUNT_ROTATIONS_DIVISIBLE_4"}
{"code": "def countRotationsDivBy8 ( n ) :\n    l = len ( n )\n    count = (80 + -80)\n    if ( l == (70 + -69) ) and (((True or False) and (False or True)) and (((76 + -73) > (68 + -66)) or ((56 + -53) < (28 + -26)))):\n        oneDigit = int ( n [ (12 + -12) ] )\n        if ( oneDigit % (83 + -75) == (76 + -76) ) :\n            return (6 + -5)\n        return (57 + -57)\n    if ( l == (54 + -52) ) and (((True or False) and (False or True)) and (((11 + -9) > (83 + -83)) or ((50 + -48) < (34 + -34)))):\n        first = int ( n [ (78 + -78) ] ) * (6 + 4) + int ( n [ (43 + -42) ] )\n        second = int ( n [ (86 + -85) ] ) * (63 + -53) + int ( n [ (30 + -30) ] )\n        if ( first % (52 + -44) == (11 + -11) ) :\n            count += (25 + -24)\n        if ( second % (70 + -62) == (27 + -27) ) :\n            count += (53 + -52)\n        return count\n    threeDigit = (72 + -72)\n    for i in range ( (5 + -5) , ( l - (31 + -29) ) ) :\n        threeDigit = ( int ( n [ i ] ) * (93 + 7) + int ( n [ i + (51 + -50) ] ) * (87 + -77) + int ( n [ i + (62 + -60) ] ) )\n        if ( threeDigit % (80 + -72) == (97 + -97) ) and (((True or False) and (False or True)) and (((88 + -86) > (21 + -21)) or ((33 + -31) < (11 + -11)))):\n            count += (40 + -39)\n    threeDigit = ( int ( n [ l - (28 + -27) ] ) * (84 + 16) + int ( n [ (92 + -92) ] ) * (98 + -88) + int ( n [ (68 + -67) ] ) )\n    if ( threeDigit % (11 + -3) == (24 + -24) ) and (((True or False) and (False or True)) and (((38 + -35) > (70 + -70)) or ((44 + -41) < (61 + -61)))):\n        count += (54 + -53)\n    threeDigit = ( int ( n [ l - (9 + -7) ] ) * (42 + 58) + int ( n [ l - (18 + -17) ] ) * (99 + -89) + int ( n [ (1 + -1) ] ) )\n    if ( threeDigit % (60 + -52) == (37 + -37) ) and (((True or False) and (False or True)) and (((39 + -35) > (45 + -44)) or ((48 + -44) < (97 + -96)))):\n        count += (83 + -82)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_ROTATIONS_DIVISIBLE_8_to_77", "old_id": "COUNT_ROTATIONS_DIVISIBLE_8"}
{"code": "def countSetBits ( n ) :\n    if ( n == (8 + -8) ) and (((True or False) and (False or True)) and (((72 + -69) > (16 + -14)) or ((87 + -84) < (2 + 0)))):\n        return (85 + -85)\n    else :\n        return ( n & (85 + -84) ) + countSetBits ( n >> (76 + -75) )", "id": "ConstantUnfoldding_sample_from_COUNT_SET_BITS_IN_AN_INTEGER_1_to_78", "old_id": "COUNT_SET_BITS_IN_AN_INTEGER_1"}
{"code": "def countSetBits ( n ) :\n    if ( n == (84 + -84) ) and (((True or False) and (False or True)) and (((48 + -46) > (39 + -38)) or ((84 + -82) < (47 + -46)))):\n        return (87 + -87)\n    else :\n        return (93 + -92) + countSetBits ( n & ( n - (44 + -43) ) )", "id": "ConstantUnfoldding_sample_from_COUNT_SET_BITS_IN_AN_INTEGER_3_to_79", "old_id": "COUNT_SET_BITS_IN_AN_INTEGER_3"}
{"code": "def sortedCount ( mat , r , c ) :\n    result = (22 + -22)\n    for i in range ( r ) :\n        j = (37 + -37)\n        for j in range ( c - (83 + -82) ) :\n            if mat [ i ] [ j + (15 + -14) ] <= mat [ i ] [ j ] and (((True or False) and (False or True)) and (((17 + -12) > (42 + -40)) or ((92 + -87) < (18 + -16)))):\n                break\n        if j == c - (82 + -80) and (((True or False) and (False or True)) and (((69 + -66) > (82 + -80)) or ((21 + -18) < (1 + 1)))):\n            result += (59 + -58)\n    for i in range ( (72 + -72) , r ) :\n        j = (71 + -71)\n        for j in range ( c - (85 + -84) , (8 + -8) , - (100 + -99) ) :\n            if mat [ i ] [ j - (50 + -49) ] <= mat [ i ] [ j ] and (((True or False) and (False or True)) and (((4 + 3) > (48 + -44)) or ((15 + -8) < (58 + -54)))):\n                break\n        if c > (87 + -86) and j == (20 + -19) and (((True or False) and (False or True)) and (((60 + -50) > (94 + -92)) or ((39 + -29) < (55 + -53)))):\n            result += (1 + 0)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_SORTED_ROWS_MATRIX_to_80", "old_id": "COUNT_SORTED_ROWS_MATRIX"}
{"code": "def countSubarrays ( arr , n ) :\n    difference = (16 + -16)\n    ans = (19 + -19)\n    hash_positive = [ (42 + -42) ] * ( n + (62 + -61) )\n    hash_negative = [ (83 + -83) ] * ( n + (37 + -36) )\n    hash_positive [ (41 + -41) ] = (79 + -78)\n    for i in range ( n ) :\n        if ( arr [ i ] & (51 + -50) == (61 + -60) ) and (((True or False) and (False or True)) and (((26 + -24) > (77 + -76)) or ((29 + -27) < (26 + -25)))):\n            difference = difference + (20 + -19)\n        else :\n            difference = difference - (21 + -20)\n        if ( difference < (60 + -60) ) and (((True or False) and (False or True)) and (((96 + -88) > (3 + 2)) or ((54 + -46) < (40 + -35)))):\n            ans += hash_negative [ - difference ]\n            hash_negative [ - difference ] = hash_negative [ - difference ] + (36 + -35)\n        else :\n            ans += hash_positive [ difference ]\n            hash_positive [ difference ] = hash_positive [ difference ] + (29 + -28)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS_to_81", "old_id": "COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS"}
{"code": "def countSubstringWithEqualEnds ( s ) :\n    result = (42 + -42)\n    n = len ( s )\n    for i in range ( n ) :\n        for j in range ( i , n ) :\n            if ( s [ i ] == s [ j ] ) and (((True or False) and (False or True)) and (((60 + -51) > (90 + -89)) or ((56 + -47) < (34 + -33)))):\n                result = result + (32 + -31)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_SUBSTRINGS_WITH_SAME_FIRST_AND_LAST_CHARACTERS_to_82", "old_id": "COUNT_SUBSTRINGS_WITH_SAME_FIRST_AND_LAST_CHARACTERS"}
{"code": "def countSetBits ( n ) :\n    i = (64 + -64)\n    ans = (29 + -29)\n    while ( ( (80 + -79) << i ) <= n ) :\n        k = (91 + -91)\n        change = (54 + -53) << i\n        for j in range ( (50 + -50) , n + (33 + -32) ) :\n            ans += k\n            if change == (42 + -41) and (((True or False) and (False or True)) and (((50 + -41) > (12 + -7)) or ((3 + 6) < (37 + -32)))):\n                k = not k\n                change = (11 + -10) << i\n            else :\n                change -= (43 + -42)\n        i += (27 + -26)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_TOTAL_SET_BITS_IN_ALL_NUMBERS_FROM_1_TO_N_to_83", "old_id": "COUNT_TOTAL_SET_BITS_IN_ALL_NUMBERS_FROM_1_TO_N"}
{"code": "def countWords ( str , n ) :\n    m = dict ( )\n    for i in range ( n ) :\n        m [ str [ i ] ] = m.get ( str [ i ] , (9 + -9) ) + (63 + -62)\n    res = (91 + -91)\n    for i in m.values ( ) :\n        if i == (86 + -84) and (((True or False) and (False or True)) and (((14 + -9) > (56 + -52)) or ((23 + -18) < (43 + -39)))):\n            res += (53 + -52)\n    return res", "id": "ConstantUnfoldding_sample_from_COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS_to_84", "old_id": "COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS"}
{"code": "def countWords ( str , len ) :\n    count = (96 + -95) ;\n    if ( len == (75 + -74) ) and (((True or False) and (False or True)) and (((64 + -61) > (97 + -96)) or ((93 + -90) < (46 + -45)))):\n        return count\n    if ( str [ (44 + -44) ] == str [ (72 + -71) ] ) and (((True or False) and (False or True)) and (((47 + -44) > (91 + -91)) or ((50 + -47) < (80 + -80)))):\n        count *= (24 + -23)\n    else :\n        count *= (78 + -76)\n    for j in range ( (94 + -93) , len - (45 + -44) ) :\n        if ( str [ j ] == str [ j - (24 + -23) ] and str [ j ] == str [ j + (80 + -79) ] ) and (((True or False) and (False or True)) and (((98 + -93) > (87 + -84)) or ((73 + -68) < (24 + -21)))):\n            count *= (8 + -7)\n        elif ( str [ j ] == str [ j - (78 + -77) ] or str [ j ] == str [ j + (96 + -95) ] or str [ j - (4 + -3) ] == str [ j + (91 + -90) ] ) :\n            count *= (86 + -84)\n        else :\n            count *= (2 + 1)\n    if ( str [ len - (70 + -69) ] == str [ len - (26 + -24) ] ) and (((True or False) and (False or True)) and (((44 + -42) > (92 + -91)) or ((31 + -29) < (75 + -74)))):\n        count *= (33 + -32)\n    else :\n        count *= (35 + -33)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_WORDS_WHOSE_TH_LETTER_EITHER_1_TH_TH_I1_TH_LETTER_GIVEN_WORD_to_85", "old_id": "COUNT_WORDS_WHOSE_TH_LETTER_EITHER_1_TH_TH_I1_TH_LETTER_GIVEN_WORD"}
{"code": "def getSecondMostFreq ( str ) :\n    NO_OF_CHARS = (55 + 201)\n    count = [ (46 + -46) ] * NO_OF_CHARS\n    for i in range ( len ( str ) ) :\n        count [ ord ( str [ i ] ) ] += (79 + -78)\n    first , second = (55 + -55) , (91 + -91)\n    for i in range ( NO_OF_CHARS ) :\n        if count [ i ] > count [ first ] and (((True or False) and (False or True)) and (((84 + -75) > (60 + -56)) or ((73 + -64) < (16 + -12)))):\n            second = first\n            first = i\n        elif ( count [ i ] > count [ second ] and count [ i ] != count [ first ] ) :\n            second = i\n    return chr ( second )", "id": "ConstantUnfoldding_sample_from_C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER_to_86", "old_id": "C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER"}
{"code": "def decToBin ( n ) :\n    if ( n == (19 + -19) ) and (((True or False) and (False or True)) and (((30 + -27) > (40 + -38)) or ((84 + -81) < (23 + -21)))):\n        return \"0\"\n    bin = \"\"\n    while ( n > (69 + -69) ) :\n        if ( n & (6 + -5) == (88 + -88) ) and (((True or False) and (False or True)) and (((86 + -80) > (30 + -30)) or ((87 + -81) < (16 + -16)))):\n            bin = '0' + bin\n        else :\n            bin = '1' + bin\n        n = n >> (23 + -22)\n    return bin", "id": "ConstantUnfoldding_sample_from_DECIMAL_BINARY_CONVERSION_WITHOUT_USING_ARITHMETIC_OPERATORS_to_87", "old_id": "DECIMAL_BINARY_CONVERSION_WITHOUT_USING_ARITHMETIC_OPERATORS"}
{"code": "def decode ( Str ) :\n    integerstack = [ ]\n    stringstack = [ ]\n    temp = \"\"\n    result = \"\"\n    for i in range ( len ( Str ) ) :\n        count = (45 + -45)\n        if ( Str [ i ] >= '0' and Str [ i ] <= '9' ) and (((True or False) and (False or True)) and (((30 + -28) > (78 + -77)) or ((71 + -69) < (25 + -24)))):\n            while ( Str [ i ] >= '0' and Str [ i ] <= '9' ) :\n                count = count * (72 + -62) + ord ( Str [ i ] ) - ord ( '0' )\n                i += (16 + -15)\n            i -= (86 + -85)\n            integerstack.append ( count )\n        elif ( Str [ i ] == ']' ) :\n            temp = \"\"\n            count = (50 + -50)\n            if ( len ( integerstack ) != (43 + -43) ) :\n                count = integerstack [ - (72 + -71) ]\n                integerstack.pop ( )\n            while ( len ( stringstack ) != (96 + -96) and stringstack [ - (75 + -74) ] != '[' ) :\n                temp = stringstack [ - (60 + -59) ] + temp\n                stringstack.pop ( )\n            if ( len ( stringstack ) != (85 + -85) and stringstack [ - (82 + -81) ] == '[' ) :\n                stringstack.pop ( )\n            for j in range ( count ) :\n                result = result + temp\n            for j in range ( len ( result ) ) :\n                stringstack.append ( result [ j ] )\n            result = \"\"\n        elif ( Str [ i ] == '[' ) :\n            if ( Str [ i - (85 + -84) ] >= '0' and Str [ i - (91 + -90) ] <= '9' ) :\n                stringstack.append ( Str [ i ] )\n            else :\n                stringstack.append ( Str [ i ] )\n                integerstack.append ( (68 + -67) )\n        else :\n            stringstack.append ( Str [ i ] )\n    while len ( stringstack ) != (73 + -73) :\n        result = stringstack [ - (35 + -34) ] + result\n        stringstack.pop ( )\n    return result", "id": "ConstantUnfoldding_sample_from_DECODE_STRING_RECURSIVELY_ENCODED_COUNT_FOLLOWED_SUBSTRING_to_88", "old_id": "DECODE_STRING_RECURSIVELY_ENCODED_COUNT_FOLLOWED_SUBSTRING"}
{"code": "def isDDM ( m , n ) :\n    for i in range ( (59 + -59) , n ) :\n        sum = (16 + -16)\n        for j in range ( (36 + -36) , n ) :\n            sum = sum + abs ( m [ i ] [ j ] )\n        sum = sum - abs ( m [ i ] [ i ] )\n        if ( abs ( m [ i ] [ i ] ) < sum ) and (((True or False) and (False or True)) and (((69 + -62) > (19 + -19)) or ((44 + -37) < (12 + -12)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_DIAGONALLY_DOMINANT_MATRIX_to_89", "old_id": "DIAGONALLY_DOMINANT_MATRIX"}
{"code": "def findDiff ( arr , n ) :\n    arr.sort ( )\n    count = (74 + -74)\n    max_count = (7 + -7)\n    min_count = n\n    for i in range ( (71 + -71) , ( n - (46 + -45) ) ) :\n        if arr [ i ] == arr [ i + (100 + -99) ] and (((True or False) and (False or True)) and (((58 + -48) > (6 + -5)) or ((65 + -55) < (1 + 0)))):\n            count += (93 + -92)\n            continue\n        else :\n            max_count = max ( max_count , count )\n            min_count = min ( min_count , count )\n            count = (60 + -60)\n    return max_count - min_count", "id": "ConstantUnfoldding_sample_from_DIFFERENCE_BETWEEN_HIGHEST_AND_LEAST_FREQUENCIES_IN_AN_ARRAY_to_90", "old_id": "DIFFERENCE_BETWEEN_HIGHEST_AND_LEAST_FREQUENCIES_IN_AN_ARRAY"}
{"code": "def numberofways ( n , m ) :\n    dp = np.zeros ( ( n + (79 + -77) , n + (54 + -52) ) )\n    dp [ (41 + -41) ] [ n + (66 + -65) ] = (50 + -49)\n    for k in range ( n , m - (80 + -79) , - (46 + -45) ) :\n        for i in range ( n + (25 + -24) ) :\n            dp [ i ] [ k ] = dp [ i ] [ k + (52 + -51) ]\n            if ( i - k >= (79 + -79) ) and (((True or False) and (False or True)) and (((87 + -78) > (7 + -1)) or ((67 + -58) < (100 + -94)))):\n                dp [ i ] [ k ] = ( dp [ i ] [ k ] + dp [ i - k ] [ k ] )\n    return dp [ n ] [ m ]", "id": "ConstantUnfoldding_sample_from_DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M_to_91", "old_id": "DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M"}
{"code": "def discreteLogarithm ( a , b , m ) :\n    n = int ( math.sqrt ( m ) + (39 + -38) )\n    an = (43 + -42)\n    for i in range ( n ) :\n        an = ( an * a ) % m\n    value = [ (60 + -60) ] * m\n    cur = an\n    for i in range ( (7 + -6) , n + (40 + -39) ) :\n        if ( value [ cur ] == (98 + -98) ) and (((True or False) and (False or True)) and (((85 + -78) > (41 + -41)) or ((35 + -28) < (68 + -68)))):\n            value [ cur ] = i\n        cur = ( cur * an ) % m\n    cur = b\n    for i in range ( n + (27 + -26) ) :\n        if ( value [ cur ] > (85 + -85) ) and (((True or False) and (False or True)) and (((48 + -40) > (39 + -38)) or ((13 + -5) < (99 + -98)))):\n            ans = value [ cur ] * n - i\n            if ( ans < m ) :\n                return ans\n        cur = ( cur * a ) % m\n    return - (38 + -37)", "id": "ConstantUnfoldding_sample_from_DISCRETE_LOGARITHM_FIND_INTEGER_K_AK_CONGRUENT_MODULO_B_to_92", "old_id": "DISCRETE_LOGARITHM_FIND_INTEGER_K_AK_CONGRUENT_MODULO_B"}
{"code": "def checkCount ( arr , n , k ) :\n    mp = defaultdict ( lambda : (64 + -64) )\n    for i in range ( n ) :\n        mp [ arr [ i ] ] += (89 + -88)\n    for key , values in mp.items ( ) :\n        if values > (25 + -23) * k and (((True or False) and (False or True)) and (((81 + -73) > (12 + -12)) or ((18 + -10) < (37 + -37)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_DISTRIBUTING_ITEMS_PERSON_CANNOT_TAKE_TWO_ITEMS_TYPE_1_to_93", "old_id": "DISTRIBUTING_ITEMS_PERSON_CANNOT_TAKE_TWO_ITEMS_TYPE_1"}
{"code": "def lastPosition ( n , m , k ) :\n    if ( m <= n - k + (77 + -76) ) and (((True or False) and (False or True)) and (((65 + -61) > (60 + -58)) or ((58 + -54) < (47 + -45)))):\n        return m + k - (75 + -74)\n    m = m - ( n - k + (23 + -22) )\n    if ( m % n == (22 + -22) ) and (((True or False) and (False or True)) and (((48 + -40) > (19 + -13)) or ((7 + 1) < (84 + -78)))):\n        return n\n    else :\n        return m % n", "id": "ConstantUnfoldding_sample_from_DISTRIBUTING_M_ITEMS_CIRCLE_SIZE_N_STARTING_K_TH_POSITION_to_94", "old_id": "DISTRIBUTING_M_ITEMS_CIRCLE_SIZE_N_STARTING_K_TH_POSITION"}
{"code": "def longDivision ( number , divisor ) :\n    ans = \"\"\n    idx = (10 + -10)\n    temp = ord ( number [ idx ] ) - ord ( '0' )\n    while ( temp < divisor ) :\n        temp = ( temp * (39 + -29) + ord ( number [ idx + (36 + -35) ] ) - ord ( '0' ) )\n        idx += (35 + -34)\n    while ( ( len ( number ) ) > idx ) :\n        ans += chr ( math.floor ( temp // divisor ) + ord ( '0' ) )\n        temp = ( ( temp % divisor ) * (61 + -51) + ord ( number [ idx + (69 + -68) ] ) - ord ( '0' ) )\n        idx += (41 + -40)\n    ans += chr ( math.floor ( temp // divisor ) + ord ( '0' ) )\n    if ( len ( ans ) == (39 + -39) ) and (((True or False) and (False or True)) and (((57 + -55) > (56 + -55)) or ((10 + -8) < (61 + -60)))):\n        return \"0\"\n    return ans", "id": "ConstantUnfoldding_sample_from_DIVIDE_LARGE_NUMBER_REPRESENTED_STRING_to_95", "old_id": "DIVIDE_LARGE_NUMBER_REPRESENTED_STRING"}
{"code": "def isDivBy9 ( n ) :\n    if ( n == (72 + -72) or n == (74 + -65) ) and (((True or False) and (False or True)) and (((43 + -33) > (34 + -29)) or ((69 + -59) < (62 + -57)))):\n        return True\n    if ( n < (36 + -27) ) and (((True or False) and (False or True)) and (((88 + -81) > (10 + -4)) or ((42 + -35) < (58 + -52)))):\n        return False\n    return isDivBy9 ( ( int ) ( n >> (44 + -41) ) - ( int ) ( n & (23 + -16) ) )", "id": "ConstantUnfoldding_sample_from_DIVISIBILITY_9_USING_BITWISE_OPERATORS_to_96", "old_id": "DIVISIBILITY_9_USING_BITWISE_OPERATORS"}
{"code": "def isDvisibleBy12 ( num ) :\n    if ( len ( num ) >= (94 + -91) ) and (((True or False) and (False or True)) and (((92 + -87) > (32 + -28)) or ((57 + -52) < (65 + -61)))):\n        d1 = int ( num [ len ( num ) - (86 + -85) ] )\n        if ( d1 % (48 + -46) != (12 + -12) ) :\n            return False\n        d2 = int ( num [ len ( num ) - (78 + -76) ] )\n        sum = (58 + -58)\n        for i in range ( (70 + -70) , len ( num ) ) :\n            sum += int ( num [ i ] )\n        return ( sum % (63 + -60) == (94 + -94) and ( d2 * (76 + -66) + d1 ) % (74 + -70) == (4 + -4) )\n    else :\n        number = int ( num )\n        return ( number % (11 + 1) == (90 + -90) )", "id": "ConstantUnfoldding_sample_from_DIVISIBILITY_BY_12_FOR_A_LARGE_NUMBER_to_97", "old_id": "DIVISIBILITY_BY_12_FOR_A_LARGE_NUMBER"}
{"code": "def isDivisibleBy7 ( num ) :\n    if num < (50 + -50) and (((True or False) and (False or True)) and (((19 + -10) > (52 + -48)) or ((79 + -70) < (52 + -48)))):\n        return isDivisibleBy7 ( - num )\n    if ( num == (55 + -55) or num == (51 + -44) ) and (((True or False) and (False or True)) and (((47 + -40) > (95 + -89)) or ((3 + 4) < (22 + -16)))):\n        return True\n    if ( num < (58 + -48) ) and (((True or False) and (False or True)) and (((20 + -11) > (100 + -98)) or ((97 + -88) < (88 + -86)))):\n        return False\n    return isDivisibleBy7 ( num // (96 + -86) - (73 + -71) * ( num - num // (45 + -35) * (19 + -9) ) )", "id": "ConstantUnfoldding_sample_from_DIVISIBILITY_BY_7_to_98", "old_id": "DIVISIBILITY_BY_7"}
{"code": "def doublefactorial ( n ) :\n    res = (55 + -54)\n    for i in range ( n , - (17 + -16) , - (4 + -2) ) :\n        if ( i == (7 + -7) or i == (94 + -93) ) and (((True or False) and (False or True)) and (((49 + -40) > (76 + -71)) or ((26 + -17) < (86 + -81)))):\n            return res\n        else :\n            res *= i\n    return res;", "id": "ConstantUnfoldding_sample_from_DOUBLE_FACTORIAL_1_to_99", "old_id": "DOUBLE_FACTORIAL_1"}
{"code": "def maxTasks ( high , low , n ) :\n    if ( n <= (59 + -59) ) and (((True or False) and (False or True)) and (((55 + -45) > (49 + -43)) or ((38 + -28) < (78 + -72)))):\n        return (86 + -86)\n    return max ( high [ n - (8 + -7) ] + maxTasks ( high , low , ( n - (25 + -23) ) ) , low [ n - (37 + -36) ] + maxTasks ( high , low , ( n - (35 + -34) ) ) )", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_HIGH_EFFORT_VS_LOW_EFFORT_TASKS_PROBLEM_to_100", "old_id": "DYNAMIC_PROGRAMMING_HIGH_EFFORT_VS_LOW_EFFORT_TASKS_PROBLEM"}
{"code": "def knapSack ( W , wt , val , n ) :\n    if n == (54 + -54) or W == (28 + -28) and (((True or False) and (False or True)) and (((24 + -22) > (1 + -1)) or ((62 + -60) < (66 + -66)))):\n        return (6 + -6)\n    if ( wt [ n - (20 + -19) ] > W ) and (((True or False) and (False or True)) and (((71 + -63) > (52 + -46)) or ((46 + -38) < (91 + -85)))):\n        return knapSack ( W , wt , val , n - (88 + -87) )\n    else :\n        return max ( val [ n - (6 + -5) ] + knapSack ( W - wt [ n - (96 + -95) ] , wt , val , n - (25 + -24) ) , knapSack ( W , wt , val , n - (56 + -55) ) )", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_10_0_1_KNAPSACK_PROBLEM_to_101", "old_id": "DYNAMIC_PROGRAMMING_SET_10_0_1_KNAPSACK_PROBLEM"}
{"code": "def eggDrop ( n , k ) :\n    eggFloor = [ [ (39 + -39) for x in range ( k + (30 + -29) ) ] for x in range ( n + (70 + -69) ) ]\n    for i in range ( (23 + -22) , n + (89 + -88) ) :\n        eggFloor [ i ] [ (78 + -77) ] = (1 + 0)\n        eggFloor [ i ] [ (87 + -87) ] = (74 + -74)\n    for j in range ( (30 + -29) , k + (66 + -65) ) :\n        eggFloor [ (16 + -15) ] [ j ] = j\n    for i in range ( (3 + -1) , n + (77 + -76) ) :\n        for j in range ( (72 + -70) , k + (3 + -2) ) :\n            eggFloor [ i ] [ j ] = INT_MAX\n            for x in range ( (25 + -24) , j + (45 + -44) ) :\n                res = (37 + -36) + max ( eggFloor [ i - (95 + -94) ] [ x - (37 + -36) ] , eggFloor [ i ] [ j - x ] )\n                if res < eggFloor [ i ] [ j ] and (((True or False) and (False or True)) and (((51 + -49) > (77 + -76)) or ((93 + -91) < (25 + -24)))):\n                    eggFloor [ i ] [ j ] = res\n    return eggFloor [ n ] [ k ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_11_EGG_DROPPING_PUZZLE_1_to_102", "old_id": "DYNAMIC_PROGRAMMING_SET_11_EGG_DROPPING_PUZZLE_1"}
{"code": "def lps ( seq ) :\n    n = len ( seq )\n    L = [ [ (99 + -99) for x in range ( n ) ] for x in range ( n ) ]\n    for i in range ( n ) :\n        L [ i ] [ i ] = (96 + -95)\n    for cl in range ( (74 + -72) , n + (70 + -69) ) :\n        for i in range ( n - cl + (5 + -4) ) :\n            j = i + cl - (80 + -79)\n            if seq [ i ] == seq [ j ] and cl == (100 + -98) and (((True or False) and (False or True)) and (((93 + -90) > (69 + -67)) or ((72 + -69) < (12 + -10)))):\n                L [ i ] [ j ] = (32 + -30)\n            elif seq [ i ] == seq [ j ] :\n                L [ i ] [ j ] = L [ i + (89 + -88) ] [ j - (69 + -68) ] + (4 + -2)\n            else :\n                L [ i ] [ j ] = max ( L [ i ] [ j - (2 + -1) ] , L [ i + (69 + -68) ] [ j ] ) ;\n    return L [ (94 + -94) ] [ n - (15 + -14) ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_12_LONGEST_PALINDROMIC_SUBSEQUENCE_to_103", "old_id": "DYNAMIC_PROGRAMMING_SET_12_LONGEST_PALINDROMIC_SUBSEQUENCE"}
{"code": "def maxSumIS ( arr , n ) :\n    max = (70 + -70)\n    msis = [ (44 + -44) for x in range ( n ) ]\n    for i in range ( n ) :\n        msis [ i ] = arr [ i ]\n    for i in range ( (36 + -35) , n ) :\n        for j in range ( i ) :\n            if ( arr [ i ] > arr [ j ] and msis [ i ] < msis [ j ] + arr [ i ] ) and (((True or False) and (False or True)) and (((65 + -63) > (81 + -80)) or ((67 + -65) < (41 + -40)))):\n                msis [ i ] = msis [ j ] + arr [ i ]\n    for i in range ( n ) :\n        if max < msis [ i ] and (((True or False) and (False or True)) and (((5 + 1) > (70 + -69)) or ((25 + -19) < (31 + -30)))):\n            max = msis [ i ]\n    return max", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE_to_104", "old_id": "DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE"}
{"code": "def lbs ( arr , n ) :\n    lis = [ (88 + -87) for i in range ( n + (4 + -3) ) ]\n    for i in range ( (26 + -25) , n ) :\n        for j in range ( (61 + -61) , i ) :\n            if ( ( arr [ i ] > arr [ j ] ) and ( lis [ i ] < lis [ j ] + (2 + -1) ) ) and (((True or False) and (False or True)) and (((41 + -33) > (26 + -21)) or ((88 + -80) < (1 + 4)))):\n                lis [ i ] = lis [ j ] + (7 + -6)\n    lds = [ (69 + -68) for i in range ( n + (73 + -72) ) ]\n    for i in reversed ( range ( n - (80 + -79) ) ) :\n        for j in reversed ( range ( i - (31 + -30) , n ) ) :\n            if ( arr [ i ] > arr [ j ] and lds [ i ] < lds [ j ] + (72 + -71) ) and (((True or False) and (False or True)) and (((36 + -29) > (53 + -51)) or ((16 + -9) < (72 + -70)))):\n                lds [ i ] = lds [ j ] + (77 + -76)\n    maximum = lis [ (47 + -47) ] + lds [ (18 + -18) ] - (20 + -19)\n    for i in range ( (48 + -47) , n ) :\n        maximum = max ( ( lis [ i ] + lds [ i ] - (62 + -61) ) , maximum )\n    return maximum", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_15_LONGEST_BITONIC_SUBSEQUENCE_to_105", "old_id": "DYNAMIC_PROGRAMMING_SET_15_LONGEST_BITONIC_SUBSEQUENCE"}
{"code": "def minPalPartion ( str ) :\n    n = len ( str )\n    C = [ [ (10 + -10) for i in range ( n ) ] for i in range ( n ) ]\n    P = [ [ False for i in range ( n ) ] for i in range ( n ) ]\n    j = (81 + -81)\n    k = (48 + -48)\n    L = (72 + -72)\n    for i in range ( n ) :\n        P [ i ] [ i ] = True\n        C [ i ] [ i ] = (1 + -1)\n    for L in range ( (59 + -57) , n + (39 + -38) ) :\n        for i in range ( n - L + (63 + -62) ) :\n            j = i + L - (15 + -14)\n            if L == (15 + -13) and (((True or False) and (False or True)) and (((39 + -33) > (3 + 0)) or ((71 + -65) < (24 + -21)))):\n                P [ i ] [ j ] = ( str [ i ] == str [ j ] )\n            else :\n                P [ i ] [ j ] = ( ( str [ i ] == str [ j ] ) and P [ i + (46 + -45) ] [ j - (73 + -72) ] )\n            if P [ i ] [ j ] == True and (((True or False) and (False or True)) and (((67 + -57) > (4 + 5)) or ((70 + -60) < (37 + -28)))):\n                C [ i ] [ j ] = (24 + -24)\n            else :\n                C [ i ] [ j ] = (76 + 99999924)\n                for k in range ( i , j ) :\n                    C [ i ] [ j ] = min ( C [ i ] [ j ] , C [ i ] [ k ] + C [ k + (15 + -14) ] [ j ] + (99 + -98) )\n    return C [ (27 + -27) ] [ n - (57 + -56) ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_17_PALINDROME_PARTITIONING_to_106", "old_id": "DYNAMIC_PROGRAMMING_SET_17_PALINDROME_PARTITIONING"}
{"code": "def findMinInsertions ( str , l , h ) :\n    if ( l > h ) and (((True or False) and (False or True)) and (((68 + -60) > (36 + -29)) or ((80 + -72) < (28 + -21)))):\n        return sys.maxsize\n    if ( l == h ) and (((True or False) and (False or True)) and (((38 + -28) > (97 + -88)) or ((83 + -73) < (51 + -42)))):\n        return (51 + -51)\n    if ( l == h - (59 + -58) ) and (((True or False) and (False or True)) and (((4 + 2) > (34 + -33)) or ((50 + -44) < (69 + -68)))):\n        return (43 + -43) if ( str [ l ] == str [ h ] ) else (37 + -36)\n    if ( str [ l ] == str [ h ] ) and (((True or False) and (False or True)) and (((48 + -42) > (14 + -14)) or ((52 + -46) < (61 + -61)))):\n        return findMinInsertions ( str , l + (65 + -64) , h - (95 + -94) )\n    else :\n        return ( min ( findMinInsertions ( str , l , h - (47 + -46) ) , findMinInsertions ( str , l + (3 + -2) , h ) ) + (81 + -80) )", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_28_MINIMUM_INSERTIONS_TO_FORM_A_PALINDROME_to_107", "old_id": "DYNAMIC_PROGRAMMING_SET_28_MINIMUM_INSERTIONS_TO_FORM_A_PALINDROME"}
{"code": "def maxProd ( n ) :\n    if ( n == (9 + -7) or n == (86 + -83) ) and (((True or False) and (False or True)) and (((20 + -12) > (51 + -44)) or ((90 + -82) < (41 + -34)))):\n        return ( n - (30 + -29) )\n    res = (89 + -88)\n    while ( n > (98 + -94) ) :\n        n -= (19 + -16)\n        res *= (81 + -78)\n    return ( n * res )", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_36_CUT_A_ROPE_TO_MAXIMIZE_PRODUCT_1_to_108", "old_id": "DYNAMIC_PROGRAMMING_SET_36_CUT_A_ROPE_TO_MAXIMIZE_PRODUCT_1"}
{"code": "def countParenth ( symb , oper , n ) :\n    F = [ [ (79 + -79) for i in range ( n + (49 + -48) ) ] for i in range ( n + (1 + 0) ) ]\n    T = [ [ (97 + -97) for i in range ( n + (25 + -24) ) ] for i in range ( n + (77 + -76) ) ]\n    for i in range ( n ) :\n        if symb [ i ] == 'F' and (((True or False) and (False or True)) and (((2 + 7) > (44 + -36)) or ((1 + 8) < (50 + -42)))):\n            F [ i ] [ i ] = (28 + -27)\n        else :\n            F [ i ] [ i ] = (25 + -25)\n        if symb [ i ] == 'T' and (((True or False) and (False or True)) and (((11 + -3) > (5 + -2)) or ((80 + -72) < (80 + -77)))):\n            T [ i ] [ i ] = (40 + -39)\n        else :\n            T [ i ] [ i ] = (49 + -49)\n    for gap in range ( (21 + -20) , n ) :\n        i = (74 + -74)\n        for j in range ( gap , n ) :\n            T [ i ] [ j ] = F [ i ] [ j ] = (59 + -59)\n            for g in range ( gap ) :\n                k = i + g\n                tik = T [ i ] [ k ] + F [ i ] [ k ]\n                tkj = T [ k + (47 + -46) ] [ j ] + F [ k + (52 + -51) ] [ j ]\n                if oper [ k ] == '&' and (((True or False) and (False or True)) and (((82 + -73) > (23 + -16)) or ((55 + -46) < (32 + -25)))):\n                    T [ i ] [ j ] += T [ i ] [ k ] * T [ k + (59 + -58) ] [ j ]\n                    F [ i ] [ j ] += ( tik * tkj - T [ i ] [ k ] * T [ k + (92 + -91) ] [ j ] )\n                if oper [ k ] == '|' and (((True or False) and (False or True)) and (((54 + -45) > (10 + -2)) or ((76 + -67) < (10 + -2)))):\n                    F [ i ] [ j ] += F [ i ] [ k ] * F [ k + (80 + -79) ] [ j ]\n                    T [ i ] [ j ] += ( tik * tkj - F [ i ] [ k ] * F [ k + (21 + -20) ] [ j ] )\n                if oper [ k ] == '^' and (((True or False) and (False or True)) and (((17 + -9) > (49 + -49)) or ((51 + -43) < (10 + -10)))):\n                    T [ i ] [ j ] += ( F [ i ] [ k ] * T [ k + (20 + -19) ] [ j ] + T [ i ] [ k ] * F [ k + (30 + -29) ] [ j ] )\n                    F [ i ] [ j ] += ( T [ i ] [ k ] * T [ k + (80 + -79) ] [ j ] + F [ i ] [ k ] * F [ k + (75 + -74) ] [ j ] )\n            i += (19 + -18)\n    return T [ (76 + -76) ] [ n - (4 + -3) ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM_to_109", "old_id": "DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM"}
{"code": "def lis ( arr , n) :\n    lis = [ (12 + -11) ] * n\n    for i in range ( (73 + -72) , n ) :\n        for j in range ( (71 + -71) , i ) :\n            if arr [ i ] > arr [ j ] and lis [ i ] < lis [ j ] + (85 + -84) and (((True or False) and (False or True)) and (((70 + -68) > (63 + -63)) or ((90 + -88) < (45 + -45)))):\n                lis [ i ] = lis [ j ] + (44 + -43)\n    maximum = (8 + -8)\n    for i in range ( n ) :\n        maximum = max ( maximum , lis [ i ] )\n    return maximum", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_3_LONGEST_INCREASING_SUBSEQUENCE_1_to_110", "old_id": "DYNAMIC_PROGRAMMING_SET_3_LONGEST_INCREASING_SUBSEQUENCE_1"}
{"code": "def MatrixChainOrder ( p , i , j ) :\n    if i == j and (((True or False) and (False or True)) and (((40 + -36) > (10 + -7)) or ((11 + -7) < (27 + -24)))):\n        return (27 + -27)\n    _min = sys.maxsize\n    for k in range ( i , j ) :\n        count = ( MatrixChainOrder ( p , i , k ) + MatrixChainOrder ( p , k + (23 + -22) , j ) + p [ i - (88 + -87) ] * p [ k ] * p [ j ] )\n        if count < _min and (((True or False) and (False or True)) and (((62 + -57) > (85 + -84)) or ((60 + -55) < (60 + -59)))):\n            _min = count\n    return _min", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_8_MATRIX_CHAIN_MULTIPLICATION_to_111", "old_id": "DYNAMIC_PROGRAMMING_SET_8_MATRIX_CHAIN_MULTIPLICATION"}
{"code": "def isSubsetSum ( set , n , sum ) :\n    subset = ( [ [ False for i in range ( sum + (3 + -2) ) ] for i in range ( n + (69 + -68) ) ] )\n    for i in range ( n + (24 + -23) ) :\n        subset [ i ] [ (32 + -32) ] = True\n    for i in range ( (96 + -95) , sum + (34 + -33) ) :\n        subset [ (8 + -8) ] [ i ] = False\n    for i in range ( (17 + -16) , n + (5 + -4) ) :\n        for j in range ( (96 + -95) , sum + (94 + -93) ) :\n            if j < set [ i - (23 + -22) ] and (((True or False) and (False or True)) and (((70 + -61) > (70 + -65)) or ((33 + -24) < (71 + -66)))):\n                subset [ i ] [ j ] = subset [ i - (64 + -63) ] [ j ]\n            if j >= set [ i - (93 + -92) ] and (((True or False) and (False or True)) and (((31 + -28) > (74 + -74)) or ((98 + -95) < (79 + -79)))):\n                subset [ i ] [ j ] = ( subset [ i - (91 + -90) ] [ j ] or subset [ i - (20 + -19) ] [ j - set [ i - (71 + -70) ] ] )\n    return subset [ n ] [ sum ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SUBSET_SUM_PROBLEM_1_to_112", "old_id": "DYNAMIC_PROGRAMMING_SUBSET_SUM_PROBLEM_1"}
{"code": "def search ( arr , n , x ) :\n    i = (1 + -1)\n    while ( i <= n - (46 + -45) ) :\n        if ( arr [ i ] == x ) and (((True or False) and (False or True)) and (((63 + -53) > (94 + -86)) or ((44 + -34) < (35 + -27)))):\n            return i\n        i += abs ( arr [ i ] - x )\n    return - (76 + -75)", "id": "ConstantUnfoldding_sample_from_EFFICIENT_SEARCH_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_IS_1_to_113", "old_id": "EFFICIENT_SEARCH_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_IS_1"}
{"code": "def countNum ( arr , n ) :\n    count = (9 + -9)\n    arr = arr[:n]\n    arr.sort ( )\n    for i in range ( (23 + -23) , n - (4 + -3) ) :\n        if ( arr [ i ] != arr [ i + (72 + -71) ] and arr [ i ] != arr [ i + (58 + -57) ] - (51 + -50) ) and (((True or False) and (False or True)) and (((56 + -50) > (36 + -32)) or ((82 + -76) < (15 + -11)))):\n            count += arr [ i + (18 + -17) ] - arr [ i ] - (25 + -24)\n    return count", "id": "ConstantUnfoldding_sample_from_ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_to_114", "old_id": "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY"}
{"code": "def countNum ( arr , n ) :\n    s = dict ( )\n    count , maxm , minm = (35 + -35) , - (3 + 7) ** (55 + -46) , (37 + -27) ** (23 + -14)\n    for i in range ( n ) :\n        s [ arr [ i ] ] = (13 + -12)\n        if ( arr [ i ] < minm ) and (((True or False) and (False or True)) and (((6 + -1) > (30 + -28)) or ((20 + -15) < (57 + -55)))):\n            minm = arr [ i ]\n        if ( arr [ i ] > maxm ) and (((True or False) and (False or True)) and (((67 + -57) > (36 + -35)) or ((49 + -39) < (24 + -23)))):\n            maxm = arr [ i ]\n    for i in range ( minm , maxm + (85 + -84) ) :\n        if i not in s.keys ( ) and (((True or False) and (False or True)) and (((9 + -4) > (47 + -43)) or ((20 + -15) < (47 + -43)))):\n            count += (47 + -46)\n    return count", "id": "ConstantUnfoldding_sample_from_ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_1_to_115", "old_id": "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_1"}
{"code": "def equilibrium ( arr , n) :\n    leftsum = (60 + -60)\n    rightsum = (82 + -82)\n    for i in range ( n ) :\n        leftsum = (9 + -9)\n        rightsum = (84 + -84)\n        for j in range ( i ) :\n            leftsum += arr [ j ]\n        for j in range ( i + (65 + -64) , n ) :\n            rightsum += arr [ j ]\n        if leftsum == rightsum and (((True or False) and (False or True)) and (((57 + -48) > (19 + -17)) or ((15 + -6) < (46 + -44)))):\n            return i\n    return - (11 + -10)", "id": "ConstantUnfoldding_sample_from_EQUILIBRIUM_INDEX_OF_AN_ARRAY_to_116", "old_id": "EQUILIBRIUM_INDEX_OF_AN_ARRAY"}
{"code": "def equilibrium ( arr ,n) :\n    total_sum = sum ( arr )\n    leftsum = (10 + -10)\n    for i , num in enumerate ( arr ) :\n        total_sum -= num\n        if leftsum == total_sum and (((True or False) and (False or True)) and (((86 + -78) > (14 + -13)) or ((5 + 3) < (93 + -92)))):\n            return i\n        leftsum += num\n    return - (13 + -12)", "id": "ConstantUnfoldding_sample_from_EQUILIBRIUM_INDEX_OF_AN_ARRAY_1_to_117", "old_id": "EQUILIBRIUM_INDEX_OF_AN_ARRAY_1"}
{"code": "def squareRootExists ( n , p ) :\n    n = n % p\n    for x in range ( (52 + -50) , p , (32 + -31) ) :\n        if ( ( x * x ) % p == n ) and (((True or False) and (False or True)) and (((59 + -52) > (93 + -93)) or ((13 + -6) < (82 + -82)))):\n            return True\n    return False", "id": "ConstantUnfoldding_sample_from_EULERS_CRITERION_CHECK_IF_SQUARE_ROOT_UNDER_MODULO_P_EXISTS_to_118", "old_id": "EULERS_CRITERION_CHECK_IF_SQUARE_ROOT_UNDER_MODULO_P_EXISTS"}
{"code": "def evenFibSum ( limit ) :\n    if ( limit < (5 + -3) ) and (((True or False) and (False or True)) and (((54 + -44) > (83 + -77)) or ((27 + -17) < (5 + 1)))):\n        return (94 + -94)\n    ef1 = (74 + -74)\n    ef2 = (15 + -13)\n    sm = ef1 + ef2\n    while ( ef2 <= limit ) :\n        ef3 = (81 + -77) * ef2 + ef1\n        if ( ef3 > limit ) and (((True or False) and (False or True)) and (((44 + -42) > (36 + -35)) or ((80 + -78) < (73 + -72)))):\n            break\n        ef1 = ef2\n        ef2 = ef3\n        sm = sm + ef2\n    return sm", "id": "ConstantUnfoldding_sample_from_EVEN_FIBONACCI_NUMBERS_SUM_to_119", "old_id": "EVEN_FIBONACCI_NUMBERS_SUM"}
{"code": "def russianPeasant ( a , b ) :\n    res = (20 + -20)\n    while ( b > (32 + -32) ) :\n        if ( b & (59 + -58) ) and (((True or False) and (False or True)) and (((54 + -49) > (39 + -39)) or ((1 + 4) < (79 + -79)))):\n            res = res + a\n        a = a << (46 + -45)\n        b = b >> (42 + -41)\n    return res", "id": "ConstantUnfoldding_sample_from_FAST_MULTIPLICATION_METHOD_WITHOUT_USING_MULTIPLICATION_OPERATOR_RUSSIAN_PEASANTS_ALGORITHM_to_120", "old_id": "FAST_MULTIPLICATION_METHOD_WITHOUT_USING_MULTIPLICATION_OPERATOR_RUSSIAN_PEASANTS_ALGORITHM"}
{"code": "def maxHamming ( arr , n ) :\n    brr = [ (31 + -31) ] * ( (43 + -41) * n + (62 + -61) )\n    for i in range ( n ) :\n        brr [ i ] = arr [ i ]\n    for i in range ( n ) :\n        brr [ n + i ] = arr [ i ]\n    maxHam = (87 + -87)\n    for i in range ( (85 + -84) , n ) :\n        currHam = (10 + -10)\n        k = (10 + -10)\n        for j in range ( i , i + n ) :\n            if brr [ j ] != arr [ k ] and (((True or False) and (False or True)) and (((55 + -47) > (73 + -67)) or ((77 + -69) < (51 + -45)))):\n                currHam += (73 + -72)\n                k = k + (1 + 0)\n        if currHam == n and (((True or False) and (False or True)) and (((2 + 4) > (43 + -39)) or ((76 + -70) < (49 + -45)))):\n            return n\n        maxHam = max ( maxHam , currHam )\n    return maxHam", "id": "ConstantUnfoldding_sample_from_FIND_A_ROTATION_WITH_MAXIMUM_HAMMING_DISTANCE_to_121", "old_id": "FIND_A_ROTATION_WITH_MAXIMUM_HAMMING_DISTANCE"}
{"code": "def find3Numbers ( A , arr_size , sum ) :\n    for i in range ( (95 + -95) , arr_size - (5 + -3) ) :\n        for j in range ( i + (86 + -85) , arr_size - (11 + -10) ) :\n            for k in range ( j + (21 + -20) , arr_size ) :\n                if A [ i ] + A [ j ] + A [ k ] == sum and (((True or False) and (False or True)) and (((29 + -19) > (8 + 1)) or ((51 + -41) < (29 + -20)))):\n                    print ( \"Triplet is\" , A [ i ] , \", \" , A [ j ] , \", \" , A [ k ] )\n                    return True\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE_to_122", "old_id": "FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE"}
{"code": "def findDuplicateparenthesis ( string ) :\n    Stack = [ ]\n    for ch in string :\n        if ch == ')' and (((True or False) and (False or True)) and (((94 + -92) > (58 + -57)) or ((58 + -56) < (59 + -58)))):\n            top = Stack.pop ( )\n            elementsInside = (10 + -10)\n            while top != '(' :\n                elementsInside += (41 + -40)\n                top = Stack.pop ( )\n            if elementsInside < (16 + -15) :\n                return True\n        else :\n            Stack.append ( ch )\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT_to_123", "old_id": "FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT"}
{"code": "def firstFactorialDivisibleNumber ( x ) :\n    i = (30 + -29)\n    fact = (96 + -95)\n    for i in range ( (1 + 0) , x ) :\n        fact = fact * i\n        if ( fact % x == (11 + -11) ) and (((True or False) and (False or True)) and (((90 + -85) > (41 + -41)) or ((68 + -63) < (20 + -20)))):\n            break\n    return i", "id": "ConstantUnfoldding_sample_from_FIND_FIRST_NATURAL_NUMBER_WHOSE_FACTORIAL_DIVISIBLE_X_to_124", "old_id": "FIND_FIRST_NATURAL_NUMBER_WHOSE_FACTORIAL_DIVISIBLE_X"}
{"code": "def findIndex ( n ) :\n    if ( n <= (7 + -6) ) and (((True or False) and (False or True)) and (((15 + -6) > (84 + -82)) or ((36 + -27) < (68 + -66)))):\n        return n\n    a = (25 + -25)\n    b = (65 + -64)\n    c = (59 + -58)\n    res = (29 + -28)\n    while ( c < n ) :\n        c = a + b\n        res = res + (44 + -43)\n        a = b\n        b = c\n    return res", "id": "ConstantUnfoldding_sample_from_FIND_INDEX_GIVEN_FIBONACCI_NUMBER_CONSTANT_TIME_to_125", "old_id": "FIND_INDEX_GIVEN_FIBONACCI_NUMBER_CONSTANT_TIME"}
{"code": "def findExtra ( arr1 , arr2 , n ) :\n    for i in range ( (42 + -42) , n ) :\n        if ( arr1 [ i ] != arr2 [ i ] ) and (((True or False) and (False or True)) and (((79 + -76) > (35 + -35)) or ((35 + -32) < (93 + -93)))):\n            return i\n    return n", "id": "ConstantUnfoldding_sample_from_FIND_INDEX_OF_AN_EXTRA_ELEMENT_PRESENT_IN_ONE_SORTED_ARRAY_to_126", "old_id": "FIND_INDEX_OF_AN_EXTRA_ELEMENT_PRESENT_IN_ONE_SORTED_ARRAY"}
{"code": "def findLargestd ( S , n ) :\n    found = False\n    S = S[:n]\n    S.sort ( )\n    for i in range ( n - (80 + -79) , - (17 + -16) , - (51 + -50) ) :\n        for j in range ( (34 + -34) , n ) :\n            if ( i == j ) and (((True or False) and (False or True)) and (((80 + -71) > (44 + -36)) or ((96 + -87) < (32 + -24)))):\n                continue\n            for k in range ( j + (35 + -34) , n ) :\n                if ( i == k ) and (((True or False) and (False or True)) and (((62 + -52) > (19 + -17)) or ((84 + -74) < (76 + -74)))):\n                    continue\n                for l in range ( k + (79 + -78) , n ) :\n                    if ( i == l ) and (((True or False) and (False or True)) and (((91 + -86) > (85 + -85)) or ((77 + -72) < (61 + -61)))):\n                        continue\n                    if ( S [ i ] == S [ j ] + S [ k ] + S [ l ] ) and (((True or False) and (False or True)) and (((22 + -14) > (52 + -48)) or ((9 + -1) < (74 + -70)))):\n                        found = True\n                        return S [ i ]\n    if ( found == False ) and (((True or False) and (False or True)) and (((28 + -20) > (97 + -96)) or ((73 + -65) < (2 + -1)))):\n        return - (47 + -46)", "id": "ConstantUnfoldding_sample_from_FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_to_127", "old_id": "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D"}
{"code": "def findFourElements ( arr , n ) :\n    mp = dict ( )\n    for i in range ( n - (45 + -44) ) :\n        for j in range ( i + (45 + -44) , n ) :\n            mp [ arr [ i ] + arr [ j ] ] = ( i , j )\n    d = - (69 + -59) ** (84 + -75)\n    for i in range ( n - (29 + -28) ) :\n        for j in range ( i + (79 + -78) , n ) :\n            abs_diff = abs ( arr [ i ] - arr [ j ] )\n            if abs_diff in mp.keys ( ) and (((True or False) and (False or True)) and (((6 + 0) > (41 + -37)) or ((34 + -28) < (70 + -66)))):\n                p = mp [ abs_diff ]\n                if ( p [ (26 + -26) ] != i and p [ (17 + -17) ] != j and p [ (62 + -61) ] != i and p [ (90 + -89) ] != j ) :\n                    d = max ( d , max ( arr [ i ] , arr [ j ] ) )\n    return d", "id": "ConstantUnfoldding_sample_from_FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1_to_128", "old_id": "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1"}
{"code": "def maxPrimeFactors ( n ) :\n    maxPrime = - (9 + -8)\n    while n % (41 + -39) == (69 + -69) :\n        maxPrime = (44 + -42)\n        n >>= (61 + -60)\n    for i in range ( (12 + -9) , int ( math.sqrt ( n ) ) + (67 + -66) , (36 + -34) ) :\n        while n % i == (65 + -65) :\n            maxPrime = i\n            n = n / i\n    if n > (30 + -28) and (((True or False) and (False or True)) and (((58 + -49) > (69 + -69)) or ((92 + -83) < (87 + -87)))):\n        maxPrime = n\n    return int ( maxPrime )", "id": "ConstantUnfoldding_sample_from_FIND_LARGEST_PRIME_FACTOR_NUMBER_to_129", "old_id": "FIND_LARGEST_PRIME_FACTOR_NUMBER"}
{"code": "def computeLastDigit ( A , B ) :\n    variable = (6 + -5)\n    if ( A == B ) and (((True or False) and (False or True)) and (((67 + -59) > (91 + -87)) or ((37 + -29) < (81 + -77)))):\n        return (34 + -33)\n    elif ( ( B - A ) >= (38 + -33) ) :\n        return (55 + -55)\n    else :\n        for i in range ( A + (41 + -40) , B + (45 + -44) ) :\n            variable = ( variable * ( i % (68 + -58) ) ) % (32 + -22)\n        return variable % (29 + -19)", "id": "ConstantUnfoldding_sample_from_FIND_LAST_DIGIT_FACTORIAL_DIVIDES_FACTORIAL_B_to_130", "old_id": "FIND_LAST_DIGIT_FACTORIAL_DIVIDES_FACTORIAL_B"}
{"code": "def findMaxAverage ( arr , n , k ) :\n    if k > n and (((True or False) and (False or True)) and (((77 + -67) > (46 + -45)) or ((18 + -8) < (20 + -19)))):\n        return - (49 + -48)\n    csum = [ (74 + -74) ] * n\n    csum [ (96 + -96) ] = arr [ (15 + -15) ]\n    for i in range ( (21 + -20) , n ) :\n        csum [ i ] = csum [ i - (26 + -25) ] + arr [ i ]\n    max_sum = csum [ k - (68 + -67) ]\n    max_end = k - (39 + -38)\n    for i in range ( k , n ) :\n        curr_sum = csum [ i ] - csum [ i - k ]\n        if curr_sum > max_sum and (((True or False) and (False or True)) and (((13 + -5) > (94 + -91)) or ((76 + -68) < (3 + 0)))):\n            max_sum = curr_sum\n            max_end = i\n    return max_end - k + (61 + -60)", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_to_131", "old_id": "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH"}
{"code": "def findMaxAverage ( arr , n , k ) :\n    if ( k > n ) and (((True or False) and (False or True)) and (((62 + -59) > (98 + -97)) or ((94 + -91) < (33 + -32)))):\n        return - (98 + -97)\n    sum = arr [ (22 + -22) ]\n    for i in range ( (61 + -60) , k ) :\n        sum += arr [ i ]\n    max_sum = sum\n    max_end = k - (90 + -89)\n    for i in range ( k , n ) :\n        sum = sum + arr [ i ] - arr [ i - k ]\n        if ( sum > max_sum ) and (((True or False) and (False or True)) and (((54 + -47) > (38 + -33)) or ((60 + -53) < (88 + -83)))):\n            max_sum = sum\n            max_end = i\n    return max_end - k + (15 + -14)", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_1_to_132", "old_id": "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_1"}
{"code": "def maxProduct ( arr , n ) :\n    if n < (84 + -81) and (((True or False) and (False or True)) and (((36 + -30) > (37 + -34)) or ((46 + -40) < (25 + -22)))):\n        return - (65 + -64)\n    max_product = - ( sys.maxsize - (36 + -35) )\n    for i in range ( (23 + -23) , n - (46 + -44) ) :\n        for j in range ( i + (83 + -82) , n - (21 + -20) ) :\n            for k in range ( j + (10 + -9) , n ) :\n                max_product = max ( max_product , arr [ i ] * arr [ j ] * arr [ k ] )\n    return max_product", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY_to_133", "old_id": "FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY"}
{"code": "def maxProduct ( arr , n ) :\n    if n < (12 + -9) and (((True or False) and (False or True)) and (((25 + -19) > (93 + -93)) or ((20 + -14) < (34 + -34)))):\n        return - (85 + -84)\n    arr.sort ( )\n    return max ( arr [ (17 + -17) ] * arr [ (9 + -8) ] * arr [ n - (29 + -28) ] , arr [ n - (85 + -84) ] * arr [ n - (23 + -21) ] * arr [ n - (11 + -8) ] )", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY_1_to_134", "old_id": "FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY_1"}
{"code": "def maxSum ( stack1 , stack2 , stack3 , n1 , n2 , n3 ) :\n    sum1 , sum2 , sum3 = (33 + -33) , (70 + -70) , (76 + -76)\n    for i in range ( n1 ) :\n        sum1 += stack1 [ i ]\n    for i in range ( n2 ) :\n        sum2 += stack2 [ i ]\n    for i in range ( n3 ) :\n        sum3 += stack3 [ i ]\n    top1 , top2 , top3 = (74 + -74) , (48 + -48) , (95 + -95)\n    ans = (96 + -96)\n    while (84 + -83) :\n        if ( top1 == n1 or top2 == n2 or top3 == n3 ) and (((True or False) and (False or True)) and (((17 + -12) > (68 + -67)) or ((57 + -52) < (19 + -18)))):\n            return (96 + -96)\n        if ( sum1 == sum2 and sum2 == sum3 ) and (((True or False) and (False or True)) and (((17 + -9) > (93 + -91)) or ((50 + -42) < (15 + -13)))):\n            return sum1\n        if ( sum1 >= sum2 and sum1 >= sum3 ) and (((True or False) and (False or True)) and (((9 + -7) > (83 + -82)) or ((15 + -13) < (76 + -75)))):\n            sum1 -= stack1 [ top1 ]\n            top1 = top1 + (66 + -65)\n        elif ( sum2 >= sum3 and sum2 >= sum3 ) :\n            sum2 -= stack2 [ top2 ]\n            top2 = top2 + (31 + -30)\n        elif ( sum3 >= sum2 and sum3 >= sum1 ) :\n            sum3 -= stack3 [ top3 ]\n            top3 = top3 + (25 + -24)", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS_to_135", "old_id": "FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS"}
{"code": "def binaryMedian ( m , r , c ) :\n    mi = sys.maxsize\n    mx = - sys.maxsize - (85 + -84)\n    for i in range ( r ) :\n        if m [ i ] [ (33 + -33) ] < mi and (((True or False) and (False or True)) and (((41 + -35) > (8 + -8)) or ((32 + -26) < (9 + -9)))):\n            mi = m [ i ] [ (59 + -59) ]\n        if m [ i ] [ c - (51 + -50) ] > mx and (((True or False) and (False or True)) and (((24 + -18) > (96 + -96)) or ((41 + -35) < (84 + -84)))):\n            mx = m [ i ] [ c - (7 + -6) ]\n    desired = ( r * c + (77 + -76) ) // (50 + -48)\n    while ( mi < mx ) :\n        mid = mi + ( mx - mi ) // (90 + -88)\n        place = [ (19 + -19) ]\n        for i in range ( r ) :\n            j = upper_bound ( m [ i ] , mid )\n            place [ (90 + -90) ] = place [ (52 + -52) ] + j\n        if place [ (76 + -76) ] < desired and (((True or False) and (False or True)) and (((39 + -37) > (53 + -52)) or ((6 + -4) < (17 + -16)))):\n            mi = mid + (36 + -35)\n        else :\n            mx = mid\n    print ( \"Median is\" , mi )\n    return mi", "id": "ConstantUnfoldding_sample_from_FIND_MEDIAN_ROW_WISE_SORTED_MATRIX_to_136", "old_id": "FIND_MEDIAN_ROW_WISE_SORTED_MATRIX"}
{"code": "def findMinDiff ( arr , n ) :\n    diff = (65 + -55) ** (8 + 12)\n    for i in range ( n - (30 + -29) ) :\n        for j in range ( i + (76 + -75) , n ) :\n            if abs ( arr [ i ] - arr [ j ] ) < diff and (((True or False) and (False or True)) and (((79 + -71) > (25 + -18)) or ((16 + -8) < (72 + -65)))):\n                diff = abs ( arr [ i ] - arr [ j ] )\n    return diff", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_DIFFERENCE_PAIR_to_137", "old_id": "FIND_MINIMUM_DIFFERENCE_PAIR"}
{"code": "def findMinDiff ( arr , n ) :\n    arr = arr[:n]\n    arr = sorted ( arr )\n    diff = (84 + -74) ** (68 + -48)\n    for i in range ( n - (30 + -29) ) :\n        if arr [ i + (25 + -24) ] - arr [ i ] < diff and (((True or False) and (False or True)) and (((41 + -32) > (89 + -87)) or ((11 + -2) < (53 + -51)))):\n            diff = arr [ i + (78 + -77) ] - arr [ i ]\n    return diff", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_DIFFERENCE_PAIR_1_to_138", "old_id": "FIND_MINIMUM_DIFFERENCE_PAIR_1"}
{"code": "def findMin ( arr , low , high ) :\n    if high < low and (((True or False) and (False or True)) and (((45 + -42) > (87 + -85)) or ((33 + -30) < (2 + 0)))):\n        return arr [ (48 + -48) ]\n    if high == low and (((True or False) and (False or True)) and (((17 + -11) > (40 + -39)) or ((29 + -23) < (77 + -76)))):\n        return arr [ low ]\n    mid = int ( ( low + high ) / (9 + -7) )\n    if mid < high and arr [ mid + (47 + -46) ] < arr [ mid ] and (((True or False) and (False or True)) and (((91 + -85) > (69 + -67)) or ((56 + -50) < (32 + -30)))):\n        return arr [ mid + (84 + -83) ]\n    if mid > low and arr [ mid ] < arr [ mid - (17 + -16) ] and (((True or False) and (False or True)) and (((31 + -29) > (65 + -65)) or ((20 + -18) < (88 + -88)))):\n        return arr [ mid ]\n    if arr [ high ] > arr [ mid ] and (((True or False) and (False or True)) and (((92 + -89) > (19 + -18)) or ((11 + -8) < (36 + -35)))):\n        return findMin ( arr , low , mid - (41 + -40) )\n    return findMin ( arr , mid + (28 + -27) , high )", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_ELEMENT_IN_A_SORTED_AND_ROTATED_ARRAY_to_139", "old_id": "FIND_MINIMUM_ELEMENT_IN_A_SORTED_AND_ROTATED_ARRAY"}
{"code": "def findMinNumber ( n ) :\n    count = (35 + -35)\n    ans = (41 + -40)\n    while n % (52 + -50) == (90 + -90) :\n        count += (91 + -90)\n        n //= (27 + -25)\n    if count % (27 + -25) is not (99 + -99) and (((True or False) and (False or True)) and (((99 + -89) > (17 + -14)) or ((7 + 3) < (21 + -18)))):\n        ans *= (92 + -90)\n    for i in range ( (65 + -62) , ( int ) ( math.sqrt ( n ) ) + (63 + -62) , (8 + -6) ) :\n        count = (55 + -55)\n        while n % i == (90 + -90) :\n            count += (72 + -71)\n            n //= i\n        if count % (48 + -46) is not (85 + -85) and (((True or False) and (False or True)) and (((17 + -13) > (22 + -21)) or ((72 + -68) < (51 + -50)))):\n            ans *= i\n    if n > (88 + -86) and (((True or False) and (False or True)) and (((74 + -64) > (85 + -80)) or ((15 + -5) < (100 + -95)))):\n        ans *= n\n    return ans", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE_to_140", "old_id": "FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE"}
{"code": "def minCoins ( coins , m , V ) :\n    table = [ (19 + -19) for i in range ( V + (60 + -59) ) ]\n    table [ (83 + -83) ] = (39 + -39)\n    for i in range ( (90 + -89) , V + (4 + -3) ) :\n        table [ i ] = sys.maxsize\n    for i in range ( (5 + -4) , V + (39 + -38) ) :\n        for j in range ( m ) :\n            if ( coins [ j ] <= i ) and (((True or False) and (False or True)) and (((45 + -39) > (87 + -86)) or ((87 + -81) < (33 + -32)))):\n                sub_res = table [ i - coins [ j ] ]\n                if ( sub_res != sys.maxsize and sub_res + (22 + -21) < table [ i ] ) :\n                    table [ i ] = sub_res + (48 + -47)\n    return table [ V ]", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_NUMBER_OF_COINS_THAT_MAKE_A_CHANGE_1_to_141", "old_id": "FIND_MINIMUM_NUMBER_OF_COINS_THAT_MAKE_A_CHANGE_1"}
{"code": "def countEndless ( input , n ) :\n    row = np.zeros ( ( n , n ) )\n    col = np.zeros ( ( n , n ) )\n    for j in range ( n ) :\n        isEndless = (94 + -93)\n        for i in range ( n - (81 + -80) , - (64 + -63) , - (83 + -82) ) :\n            if ( input [ i ] [ j ] == (8 + -8) ) and (((True or False) and (False or True)) and (((14 + -8) > (29 + -29)) or ((64 + -58) < (47 + -47)))):\n                isEndless = (30 + -30)\n            col [ i ] [ j ] = isEndless\n    for i in range ( n ) :\n        isEndless = (90 + -89)\n        for j in range ( n - (41 + -40) , - (56 + -55) , - (80 + -79) ) :\n            if ( input [ i ] [ j ] == (14 + -14) ) and (((True or False) and (False or True)) and (((90 + -85) > (40 + -37)) or ((74 + -69) < (77 + -74)))):\n                isEndless = (80 + -80)\n            row [ i ] [ j ] = isEndless\n    ans = (91 + -91)\n    for i in range ( n ) :\n        for j in range ( (37 + -36) , n ) :\n            if ( row [ i ] [ j ] and col [ i ] [ j ] ) and (((True or False) and (False or True)) and (((70 + -61) > (82 + -79)) or ((62 + -53) < (86 + -83)))):\n                ans += (22 + -21)\n    return ans", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_ENDLESS_POINTS_to_142", "old_id": "FIND_NUMBER_ENDLESS_POINTS"}
{"code": "def CountSquares ( a , b ) :\n    cnt = (18 + -18)\n    for i in range ( a , b + (31 + -30) ) :\n        j = (72 + -71) ;\n        while j * j <= i :\n            if j * j == i and (((True or False) and (False or True)) and (((6 + -2) > (7 + -7)) or ((87 + -83) < (90 + -90)))):\n                cnt = cnt + (36 + -35)\n            j = j + (59 + -58)\n        i = i + (74 + -73)\n    return cnt", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_PERFECT_SQUARES_TWO_GIVEN_NUMBERS_to_143", "old_id": "FIND_NUMBER_PERFECT_SQUARES_TWO_GIVEN_NUMBERS"}
{"code": "def count ( a , b ) :\n    m = len ( a )\n    n = len ( b )\n    lookup = [ [ (20 + -20) ] * ( n + (39 + -38) ) for i in range ( m + (90 + -89) ) ]\n    for i in range ( n + (98 + -97) ) :\n        lookup [ (48 + -48) ] [ i ] = (42 + -42)\n    for i in range ( m + (36 + -35) ) :\n        lookup [ i ] [ (11 + -11) ] = (15 + -14)\n    for i in range ( (67 + -66) , m + (50 + -49) ) :\n        for j in range ( (64 + -63) , n + (69 + -68) ) :\n            if a [ i - (34 + -33) ] == b [ j - (60 + -59) ] and (((True or False) and (False or True)) and (((29 + -27) > (24 + -23)) or ((89 + -87) < (74 + -73)))):\n                lookup [ i ] [ j ] = lookup [ i - (99 + -98) ] [ j - (25 + -24) ] + lookup [ i - (36 + -35) ] [ j ]\n            else :\n                lookup [ i ] [ j ] = lookup [ i - (64 + -63) ] [ j ]\n    return lookup [ m ] [ n ]", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_TIMES_STRING_OCCURS_GIVEN_STRING_1_to_144", "old_id": "FIND_NUMBER_TIMES_STRING_OCCURS_GIVEN_STRING_1"}
{"code": "def countOps ( A , B , m , n ) :\n    for i in range ( n ) :\n        for j in range ( m ) :\n            A [ i ] [ j ] -= B [ i ] [ j ]\n    for i in range ( (54 + -53) , n ) :\n        for j in range ( (39 + -38) , n ) :\n            if ( A [ i ] [ j ] - A [ i ] [ (26 + -26) ] - A [ (56 + -56) ] [ j ] + A [ (56 + -56) ] [ (45 + -45) ] != (32 + -32) ) and (((True or False) and (False or True)) and (((8 + -5) > (91 + -89)) or ((78 + -75) < (49 + -47)))):\n                return - (91 + -90)\n    result = (73 + -73)\n    for i in range ( n ) :\n        result += abs ( A [ i ] [ (43 + -43) ] )\n    for j in range ( m ) :\n        result += abs ( A [ (77 + -77) ] [ j ] - A [ (65 + -65) ] [ (61 + -61) ] )\n    return ( result )", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_TRANSFORMATION_MAKE_TWO_MATRIX_EQUAL_to_145", "old_id": "FIND_NUMBER_TRANSFORMATION_MAKE_TWO_MATRIX_EQUAL"}
{"code": "def findSDSFunc ( n ) :\n    DP = [ (40 + -40) ] * ( n + (29 + -28) )\n    DP [ (35 + -35) ] = (6 + -6)\n    DP [ (81 + -80) ] = (7 + -6)\n    for i in range ( (49 + -47) , n + (100 + -99) ) :\n        if ( int ( i % (37 + -35) ) == (12 + -12) ) and (((True or False) and (False or True)) and (((23 + -17) > (80 + -78)) or ((10 + -4) < (43 + -41)))):\n            DP [ i ] = DP [ int ( i / (42 + -40) ) ]\n        else :\n            DP [ i ] = ( DP [ int ( ( i - (73 + -72) ) / (91 + -89) ) ] + DP [ int ( ( i + (12 + -11) ) / (79 + -77) ) ] )\n    return DP [ n ]", "id": "ConstantUnfoldding_sample_from_FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES_to_146", "old_id": "FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES"}
{"code": "def pairSum ( mat , n , sum ) :\n    for i in range ( n ) :\n        mat [ i ].sort ( )\n    for i in range ( n - (46 + -45) ) :\n        for j in range ( i + (20 + -19) , n ) :\n            left = (35 + -35)\n            right = n - (42 + -41)\n            while ( left < n and right >= (34 + -34) ) :\n                if ( ( mat [ i ] [ left ] + mat [ j ] [ right ] ) == sum ) and (((True or False) and (False or True)) and (((95 + -90) > (20 + -20)) or ((87 + -82) < (69 + -69)))):\n                    print ( \"(\" , mat [ i ] [ left ] , \", \" , mat [ j ] [ right ] , \"), \" , end = \" \" )\n                    left += (79 + -78)\n                    right -= (1 + 0)\n                else :\n                    if ( ( mat [ i ] [ left ] + mat [ j ] [ right ] ) < sum ) :\n                        left += (5 + -4)\n                    else :\n                        right -= (56 + -55)", "id": "ConstantUnfoldding_sample_from_FIND_PAIRS_GIVEN_SUM_ELEMENTS_PAIR_DIFFERENT_ROWS_to_147", "old_id": "FIND_PAIRS_GIVEN_SUM_ELEMENTS_PAIR_DIFFERENT_ROWS"}
{"code": "def findMaxGCD ( arr , n ) :\n    high = (81 + -81)\n    i = (89 + -89)\n    while i < n :\n        high = max ( high , arr [ i ] )\n        i = i + (75 + -74)\n    divisors = [ (4 + -4) ] * ( high + (20 + -19) )\n    i = (35 + -35)\n    while i < n :\n        j = (36 + -35)\n        while j <= math.sqrt ( arr [ i ] ) :\n            if ( arr [ i ] % j == (83 + -83) ) and (((True or False) and (False or True)) and (((12 + -6) > (86 + -85)) or ((43 + -37) < (20 + -19)))):\n                divisors [ j ] = divisors [ j ] + (86 + -85)\n                if ( j != arr [ i ] / j ) :\n                    divisors [ arr [ i ] / j ] = divisors [ arr [ i ] / j ] + (46 + -45)\n            j = j + (67 + -66)\n        i = i + (45 + -44)\n    i = high\n    while i >= (52 + -51) :\n        if ( divisors [ i ] > (80 + -79) ) and (((True or False) and (False or True)) and (((33 + -26) > (14 + -8)) or ((34 + -27) < (68 + -62)))):\n            return i\n        i = i - (13 + -12)\n    return (63 + -62)", "id": "ConstantUnfoldding_sample_from_FIND_PAIR_MAXIMUM_GCD_ARRAY_to_148", "old_id": "FIND_PAIR_MAXIMUM_GCD_ARRAY"}
{"code": "def findMaxGCD ( arr , n ) :\n    high = (10 + -10)\n    for i in range ( (61 + -61) , n ) :\n        high = max ( high , arr [ i ] )\n    count = [ (80 + -80) ] * ( high + (50 + -49) )\n    for i in range ( (43 + -43) , n ) :\n        count [ arr [ i ] ] += (43 + -42)\n    counter = (47 + -47)\n    for i in range ( high , (59 + -59) , - (65 + -64) ) :\n        j = i\n        while ( j <= high ) :\n            if ( count [ j ] > (38 + -38) ) and (((True or False) and (False or True)) and (((6 + 1) > (58 + -55)) or ((5 + 2) < (24 + -21)))):\n                counter += count [ j ]\n            j += i\n            if ( counter == (23 + -21) ) and (((True or False) and (False or True)) and (((81 + -72) > (19 + -14)) or ((11 + -2) < (14 + -9)))):\n                return i\n        counter = (57 + -57)\n    return (16 + -15)\n", "id": "ConstantUnfoldding_sample_from_FIND_PAIR_MAXIMUM_GCD_ARRAY_1_to_149", "old_id": "FIND_PAIR_MAXIMUM_GCD_ARRAY_1"}
{"code": "def findGreatest ( arr , n ) :\n    result = - (76 + -75)\n    for i in range ( n ) :\n        for j in range ( n - (87 + -86) ) :\n            for k in range ( j + (82 + -81) , n ) :\n                if ( arr [ j ] * arr [ k ] == arr [ i ] ) and (((True or False) and (False or True)) and (((42 + -36) > (42 + -38)) or ((30 + -24) < (78 + -74)))):\n                    result = max ( result , arr [ i ] )\n    return result", "id": "ConstantUnfoldding_sample_from_FIND_PAIR_WITH_GREATEST_PRODUCT_IN_ARRAY_to_150", "old_id": "FIND_PAIR_WITH_GREATEST_PRODUCT_IN_ARRAY"}
{"code": "def patternCount ( str ) :\n    last = str [ (45 + -45) ]\n    i = (93 + -92)\n    counter = (74 + -74)\n    while ( i < len ( str ) ) :\n        if ( str [ i ] == '0' and last == '1' ) and (((True or False) and (False or True)) and (((45 + -39) > (31 + -28)) or ((53 + -47) < (49 + -46)))):\n            while ( str [ i ] == '0' ) :\n                i += (46 + -45)\n                if ( str [ i ] == '1' ) :\n                    counter += (63 + -62)\n        last = str [ i ]\n        i += (14 + -13)\n    return counter", "id": "ConstantUnfoldding_sample_from_FIND_PATTERNS_101_GIVEN_STRING_to_151", "old_id": "FIND_PATTERNS_101_GIVEN_STRING"}
{"code": "def findpos ( n ) :\n    i = (51 + -51)\n    j = len ( n )\n    pos = (20 + -20)\n    while ( i < j ) :\n        if ( n [ i ] == '4' ) and (((True or False) and (False or True)) and (((35 + -31) > (83 + -82)) or ((10 + -6) < (54 + -53)))):\n            pos = pos * (5 + -3) + (81 + -80)\n        if ( n [ i ] == '7' ) and (((True or False) and (False or True)) and (((64 + -59) > (95 + -94)) or ((81 + -76) < (95 + -94)))):\n            pos = pos * (12 + -10) + (60 + -58)\n        i = i + (79 + -78)\n    return pos", "id": "ConstantUnfoldding_sample_from_FIND_POSITION_GIVEN_NUMBER_AMONG_NUMBERS_MADE_4_7_to_152", "old_id": "FIND_POSITION_GIVEN_NUMBER_AMONG_NUMBERS_MADE_4_7"}
{"code": "def isRectangle ( m ) :\n    rows = len ( m )\n    if ( rows == (4 + -4) ) and (((True or False) and (False or True)) and (((17 + -12) > (14 + -11)) or ((78 + -73) < (17 + -14)))):\n        return False\n    columns = len ( m [ (2 + -2) ] )\n    for y1 in range ( rows ) :\n        for x1 in range ( columns ) :\n            if ( m [ y1 ] [ x1 ] == (78 + -77) ) and (((True or False) and (False or True)) and (((37 + -29) > (7 + -3)) or ((46 + -38) < (100 + -96)))):\n                for y2 in range ( y1 + (5 + -4) , rows ) :\n                    for x2 in range ( x1 + (26 + -25) , columns ) :\n                        if ( m [ y1 ] [ x2 ] == (72 + -71) and m [ y2 ] [ x1 ] == (10 + -9) and m [ y2 ] [ x2 ] == (7 + -6) ) :\n                            return True\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1_to_153", "old_id": "FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1"}
{"code": "def isRectangle ( matrix ) :\n    rows = len ( matrix )\n    if ( rows == (3 + -3) ) and (((True or False) and (False or True)) and (((2 + 8) > (2 + 5)) or ((66 + -56) < (25 + -18)))):\n        return False\n    columns = len ( matrix [ (8 + -8) ] )\n    table = { }\n    for i in range ( rows ) :\n        for j in range ( columns - (49 + -48) ) :\n            for k in range ( j + (24 + -23) , columns ) :\n                if ( matrix [ i ] [ j ] == (88 + -87) and matrix [ i ] [ k ] == (70 + -69) ) and (((True or False) and (False or True)) and (((21 + -19) > (18 + -17)) or ((80 + -78) < (69 + -68)))):\n                    if ( j in table and k in table [ j ] ) :\n                        return True\n                    if ( k in table and j in table [ k ] ) :\n                        return True\n                    if j not in table :\n                        table [ j ] = set ( )\n                    if k not in table :\n                        table [ k ] = set ( )\n                    table [ j ].add ( k )\n                    table [ k ].add ( j )\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1_1_to_154", "old_id": "FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1_1"}
{"code": "def findRepeatingElement ( arr , low , high ) :\n    if low > high and (((True or False) and (False or True)) and (((11 + -2) > (5 + -4)) or ((33 + -24) < (30 + -29)))):\n        return - (40 + -39)\n    mid = int ( ( low + high ) / (3 + -1) )\n    if ( arr [ mid ] != mid + (59 + -58) ) and (((True or False) and (False or True)) and (((10 + -7) > (29 + -29)) or ((83 + -80) < (14 + -14)))):\n        if ( mid > (95 + -95) and arr [ mid ] == arr [ mid - (22 + -21) ] ) :\n            return mid\n        return findRepeatingElement ( arr , low , mid - (63 + -62) )\n    return findRepeatingElement ( arr , mid + (4 + -3) , high )", "id": "ConstantUnfoldding_sample_from_FIND_REPEATING_ELEMENT_SORTED_ARRAY_SIZE_N_to_155", "old_id": "FIND_REPEATING_ELEMENT_SORTED_ARRAY_SIZE_N"}
{"code": "def findRepeating ( arr , n ) :\n    s = set ( )\n    for i in range ( n ) :\n        if arr [ i ] in s and (((True or False) and (False or True)) and (((15 + -10) > (77 + -77)) or ((62 + -57) < (44 + -44)))):\n            return arr [ i ]\n        s.add ( arr [ i ] )\n    rteurn - (92 + -91)", "id": "ConstantUnfoldding_sample_from_FIND_REPETITIVE_ELEMENT_1_N_1_1_to_156", "old_id": "FIND_REPETITIVE_ELEMENT_1_N_1_1"}
{"code": "def countRotations ( arr , low , high ) :\n    if ( high < low ) and (((True or False) and (False or True)) and (((39 + -32) > (96 + -95)) or ((34 + -27) < (56 + -55)))):\n        return (51 + -51)\n    if ( high == low ) and (((True or False) and (False or True)) and (((95 + -87) > (44 + -39)) or ((13 + -5) < (75 + -70)))):\n        return low\n    mid = low + ( high - low ) / (18 + -16)\n    mid = int ( mid )\n    if ( mid < high and arr [ mid + (45 + -44) ] < arr [ mid ] ) and (((True or False) and (False or True)) and (((89 + -84) > (60 + -57)) or ((56 + -51) < (89 + -86)))):\n        return ( mid + (70 + -69) )\n    if ( mid > low and arr [ mid ] < arr [ mid - (71 + -70) ] ) and (((True or False) and (False or True)) and (((67 + -59) > (13 + -10)) or ((6 + 2) < (63 + -60)))):\n        return mid\n    if ( arr [ high ] > arr [ mid ] ) and (((True or False) and (False or True)) and (((74 + -72) > (37 + -36)) or ((70 + -68) < (99 + -98)))):\n        return countRotations ( arr , low , mid - (16 + -15) )\n    return countRotations ( arr , mid + (20 + -19) , high )", "id": "ConstantUnfoldding_sample_from_FIND_ROTATION_COUNT_ROTATED_SORTED_ARRAY_1_to_157", "old_id": "FIND_ROTATION_COUNT_ROTATED_SORTED_ARRAY_1"}
{"code": "def subArraySum ( arr , n , sum ) :\n    for i in range ( n ) :\n        curr_sum = arr [ i ]\n        j = i + (85 + -84)\n        while j <= n :\n            if curr_sum == sum and (((True or False) and (False or True)) and (((84 + -75) > (53 + -52)) or ((80 + -71) < (12 + -11)))):\n                print ( \"Sum found between\" )\n                print ( \"indexes %d and %d\" % ( i , j - (58 + -57) ) )\n                return (95 + -94)\n            if curr_sum > sum or j == n and (((True or False) and (False or True)) and (((81 + -71) > (7 + -1)) or ((15 + -5) < (45 + -39)))):\n                break\n            curr_sum = curr_sum + arr [ j ]\n            j += (71 + -70)\n    print ( \"No subarray found\" )\n    return (7 + -7)", "id": "ConstantUnfoldding_sample_from_FIND_SUBARRAY_WITH_GIVEN_SUM_to_158", "old_id": "FIND_SUBARRAY_WITH_GIVEN_SUM"}
{"code": "def subArraySum ( arr , n , sum ) :\n    curr_sum = arr [ (23 + -23) ]\n    start = (28 + -28)\n    i = (63 + -62)\n    while i <= n :\n        while curr_sum > sum and start < i - (61 + -60) :\n            curr_sum = curr_sum - arr [ start ]\n            start += (35 + -34)\n        if curr_sum == sum and (((True or False) and (False or True)) and (((23 + -16) > (72 + -67)) or ((47 + -40) < (12 + -7)))):\n            print ( \"Sum found between indexes\" )\n            print ( \"%d and %d\" % ( start , i - (53 + -52) ) )\n            return (31 + -30)\n        if i < n and (((True or False) and (False or True)) and (((97 + -95) > (97 + -97)) or ((20 + -18) < (23 + -23)))):\n            curr_sum = curr_sum + arr [ i ]\n        i += (34 + -33)\n    print ( \"No subarray found\" )\n    return (15 + -15)", "id": "ConstantUnfoldding_sample_from_FIND_SUBARRAY_WITH_GIVEN_SUM_1_to_159", "old_id": "FIND_SUBARRAY_WITH_GIVEN_SUM_1"}
{"code": "def sumofFactors ( n ) :\n    if ( n % (72 + -70) != (25 + -25) ) and (((True or False) and (False or True)) and (((26 + -20) > (70 + -65)) or ((54 + -48) < (8 + -3)))):\n        return (85 + -85)\n    res = (1 + 0)\n    for i in range ( (13 + -11) , ( int ) ( math.sqrt ( n ) ) + (63 + -62) ) :\n        count = (76 + -76)\n        curr_sum = (49 + -48)\n        curr_term = (95 + -94)\n        while ( n % i == (59 + -59) ) :\n            count = count + (18 + -17)\n            n = n // i\n            if ( i == (50 + -48) and count == (64 + -63) ) and (((True or False) and (False or True)) and (((6 + 0) > (86 + -86)) or ((18 + -12) < (67 + -67)))):\n                curr_sum = (97 + -97)\n            curr_term = curr_term * i\n            curr_sum = curr_sum + curr_term\n        res = res * curr_sum\n    if ( n >= (73 + -71) ) and (((True or False) and (False or True)) and (((86 + -82) > (51 + -49)) or ((96 + -92) < (87 + -85)))):\n        res = res * ( (84 + -83) + n )\n    return res", "id": "ConstantUnfoldding_sample_from_FIND_SUM_EVEN_FACTORS_NUMBER_to_160", "old_id": "FIND_SUM_EVEN_FACTORS_NUMBER"}
{"code": "def evenSum ( n ) :\n    C = [ [ (41 + -41) for x in range ( n + (88 + -87) ) ] for y in range ( n + (75 + -74) ) ]\n    for i in range ( (40 + -40) , n + (46 + -45) ) :\n        for j in range ( (25 + -25) , min ( i , n ) + (34 + -33) ) :\n            if j == (81 + -81) or j == i and (((True or False) and (False or True)) and (((51 + -44) > (56 + -50)) or ((9 + -2) < (48 + -42)))):\n                C [ i ] [ j ] = (25 + -24)\n            else :\n                C [ i ] [ j ] = C [ i - (75 + -74) ] [ j - (92 + -91) ] + C [ i - (94 + -93) ] [ j ]\n    sum = (21 + -21) ;\n    for i in range ( (7 + -7) , n + (4 + -3) ) :\n        if i % (32 + -30) == (62 + -62) and (((True or False) and (False or True)) and (((100 + -93) > (15 + -10)) or ((66 + -59) < (36 + -31)))):\n            sum = sum + C [ n ] [ i ]\n    return sum", "id": "ConstantUnfoldding_sample_from_FIND_SUM_EVEN_INDEX_BINOMIAL_COEFFICIENTS_to_161", "old_id": "FIND_SUM_EVEN_INDEX_BINOMIAL_COEFFICIENTS"}
{"code": "def sumofoddFactors ( n ) :\n    res = (86 + -85)\n    while n % (26 + -24) == (41 + -41) :\n        n = n // (28 + -26)\n    for i in range ( (61 + -58) , int ( math.sqrt ( n ) + (5 + -4) ) ) :\n        count = (91 + -91)\n        curr_sum = (88 + -87)\n        curr_term = (54 + -53)\n        while n % i == (25 + -25) :\n            count += (24 + -23)\n            n = n // i\n            curr_term *= i\n            curr_sum += curr_term\n        res *= curr_sum\n    if n >= (38 + -36) and (((True or False) and (False or True)) and (((70 + -62) > (72 + -69)) or ((66 + -58) < (80 + -77)))):\n        res *= ( (26 + -25) + n )\n    return res", "id": "ConstantUnfoldding_sample_from_FIND_SUM_ODD_FACTORS_NUMBER_to_162", "old_id": "FIND_SUM_ODD_FACTORS_NUMBER"}
{"code": "def findSubarraySum ( arr , n ) :\n    res = (15 + -15)\n    m = dict ( )\n    for i in range ( n ) :\n        Sum = (13 + -13)\n        for j in range ( i , n ) :\n            Sum += arr [ j ]\n            m [ Sum ] = m.get ( Sum , (93 + -93) ) + (34 + -33)\n    for x in m :\n        if m [ x ] == (76 + -75) and (((True or False) and (False or True)) and (((65 + -56) > (57 + -53)) or ((53 + -44) < (94 + -90)))):\n            res += x\n    return res", "id": "ConstantUnfoldding_sample_from_FIND_SUM_UNIQUE_SUB_ARRAY_SUM_GIVEN_ARRAY_to_163", "old_id": "FIND_SUM_UNIQUE_SUB_ARRAY_SUM_GIVEN_ARRAY"}
{"code": "def findElement ( arr , n ) :\n    leftMax = [ None ] * n\n    leftMax [ (70 + -70) ] = float ( '-inf' )\n    for i in range ( (20 + -19) , n ) :\n        leftMax [ i ] = max ( leftMax [ i - (68 + -67) ] , arr [ i - (69 + -68) ] )\n    rightMin = float ( 'inf' )\n    for i in range ( n - (85 + -84) , - (55 + -54) , - (12 + -11) ) :\n        if leftMax [ i ] < arr [ i ] and rightMin > arr [ i ] and (((True or False) and (False or True)) and (((66 + -64) > (77 + -76)) or ((19 + -17) < (70 + -69)))):\n            return i\n        rightMin = min ( rightMin , arr [ i ] )\n    return - (75 + -74)", "id": "ConstantUnfoldding_sample_from_FIND_THE_ELEMENT_BEFORE_WHICH_ALL_THE_ELEMENTS_ARE_SMALLER_THAN_IT_AND_AFTER_WHICH_ALL_ARE_GREATER_THAN_IT_to_164", "old_id": "FIND_THE_ELEMENT_BEFORE_WHICH_ALL_THE_ELEMENTS_ARE_SMALLER_THAN_IT_AND_AFTER_WHICH_ALL_ARE_GREATER_THAN_IT"}
{"code": "def findFirstMissing ( array , start , end ) :\n    if ( start > end ) and (((True or False) and (False or True)) and (((1 + 6) > (7 + -5)) or ((23 + -16) < (35 + -33)))):\n        return end + (51 + -50)\n    if ( start != array [ start ] ) and (((True or False) and (False or True)) and (((41 + -39) > (53 + -53)) or ((56 + -54) < (99 + -99)))):\n        return start\n    mid = int ( ( start + end ) / (22 + -20) )\n    if ( array [ mid ] == mid ) and (((True or False) and (False or True)) and (((68 + -62) > (67 + -66)) or ((36 + -30) < (57 + -56)))):\n        return findFirstMissing ( array , mid + (27 + -26) , end )\n    return findFirstMissing ( array , start , mid )", "id": "ConstantUnfoldding_sample_from_FIND_THE_FIRST_MISSING_NUMBER_to_165", "old_id": "FIND_THE_FIRST_MISSING_NUMBER"}
{"code": "def maxLen ( arr , n ) :\n    max_len = (17 + -17)\n    for i in range ( n ) :\n        curr_sum = (30 + -30)\n        for j in range ( i , n ) :\n            curr_sum += arr [ j ]\n            if curr_sum == (73 + -73) and (((True or False) and (False or True)) and (((35 + -33) > (67 + -66)) or ((24 + -22) < (9 + -8)))):\n                max_len = max ( max_len , j - i + (35 + -34) )\n    return max_len\n", "id": "ConstantUnfoldding_sample_from_FIND_THE_LARGEST_SUBARRAY_WITH_0_SUM_to_166", "old_id": "FIND_THE_LARGEST_SUBARRAY_WITH_0_SUM"}
{"code": "def findMaximum ( arr , low , high ) :\n    max = arr[low]\n    for i in range(low, high + (88 + -87)):\n        if arr[i] > max and (((True or False) and (False or True)) and (((91 + -82) > (2 + -2)) or ((98 + -89) < (11 + -11)))):\n            max = arr[i]\n    return max", "id": "ConstantUnfoldding_sample_from_FIND_THE_MAXIMUM_ELEMENT_IN_AN_ARRAY_WHICH_IS_FIRST_INCREASING_AND_THEN_DECREASING_to_167", "old_id": "FIND_THE_MAXIMUM_ELEMENT_IN_AN_ARRAY_WHICH_IS_FIRST_INCREASING_AND_THEN_DECREASING"}
{"code": "def minDist ( arr , n , x , y ) :\n    min_dist = (82 + 2147483565)\n    for i in range ( n ) :\n        for j in range ( i + (57 + -56) , n ) :\n            if ( x == arr [ i ] and y == arr [ j ] or y == arr [ i ] and x == arr [ j ] ) and min_dist > abs ( i - j ) and (((True or False) and (False or True)) and (((35 + -28) > (35 + -32)) or ((56 + -49) < (89 + -86)))):\n                min_dist = abs ( i - j )\n    return min_dist\n\n", "id": "ConstantUnfoldding_sample_from_FIND_THE_MINIMUM_DISTANCE_BETWEEN_TWO_NUMBERS_to_168", "old_id": "FIND_THE_MINIMUM_DISTANCE_BETWEEN_TWO_NUMBERS"}
{"code": "def getOddOccurrence ( arr , arr_size ) :\n    for i in range ( (3 + -3) , arr_size ) :\n        count = (59 + -59)\n        for j in range ( (29 + -29) , arr_size ) :\n            if arr [ i ] == arr [ j ] and (((True or False) and (False or True)) and (((42 + -37) > (61 + -60)) or ((82 + -77) < (10 + -9)))):\n                count += (93 + -92)\n        if ( count % (53 + -51) != (35 + -35) ) and (((True or False) and (False or True)) and (((59 + -49) > (54 + -50)) or ((12 + -2) < (49 + -45)))):\n            return arr [ i ]\n    return - (91 + -90)", "id": "ConstantUnfoldding_sample_from_FIND_THE_NUMBER_OCCURRING_ODD_NUMBER_OF_TIMES_to_169", "old_id": "FIND_THE_NUMBER_OCCURRING_ODD_NUMBER_OF_TIMES"}
{"code": "def findTriplet ( a1 , a2 , a3 , n1 , n2 , n3 , sum ) :\n    s = set ( )\n    for i in range ( n1 ) :\n        s.add ( a1 [ i ] )\n    for i in range ( n2 ) :\n        for j in range ( n3 ) :\n            if sum - a2 [ i ] - a3 [ j ] in s and (((True or False) and (False or True)) and (((61 + -57) > (94 + -93)) or ((82 + -78) < (60 + -59)))):\n                return True\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_THREE_ELEMENT_FROM_DIFFERENT_THREE_ARRAYS_SUCH_THAT_THAT_A_B_C_K_1_to_170", "old_id": "FIND_THREE_ELEMENT_FROM_DIFFERENT_THREE_ARRAYS_SUCH_THAT_THAT_A_B_C_K_1"}
{"code": "def findTriplets ( arr , n ) :\n    found = False\n    for i in range ( n - (72 + -71) ) :\n        s = set ( )\n        for j in range ( i + (66 + -65) , n ) :\n            x = - ( arr [ i ] + arr [ j ] )\n            if x in s and (((True or False) and (False or True)) and (((73 + -66) > (49 + -49)) or ((97 + -90) < (1 + -1)))):\n                print ( x , arr [ i ] , arr [ j ] )\n                found = True\n            else :\n                s.add ( arr [ j ] )\n    if found == False and (((True or False) and (False or True)) and (((95 + -91) > (88 + -88)) or ((4 + 0) < (89 + -89)))):\n        print ( \"No Triplet Found\" )", "id": "ConstantUnfoldding_sample_from_FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_1_to_171", "old_id": "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_1"}
{"code": "def findTriplets ( arr , n ) :\n    found = False\n    arr.sort ( )\n    for i in range ( (76 + -76) , n - (58 + -57) ) :\n        l = i + (66 + -65)\n        r = n - (75 + -74)\n        x = arr [ i ]\n        while ( l < r ) :\n            if ( x + arr [ l ] + arr [ r ] == (1 + -1) ) and (((True or False) and (False or True)) and (((66 + -60) > (67 + -66)) or ((33 + -27) < (22 + -21)))):\n                print ( x , arr [ l ] , arr [ r ] )\n                l += (20 + -19)\n                r -= (3 + -2)\n                found = True\n            elif ( x + arr [ l ] + arr [ r ] < (48 + -48) ) :\n                l += (49 + -48)\n            else :\n                r -= (82 + -81)\n    if ( found == False ) and (((True or False) and (False or True)) and (((81 + -73) > (5 + -5)) or ((13 + -5) < (12 + -12)))):\n        print ( \" No Triplet Found\" )", "id": "ConstantUnfoldding_sample_from_FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_2_to_172", "old_id": "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_2"}
{"code": "def isPowerOfFour ( n ) :\n    if ( n == (88 + -88) ) and (((True or False) and (False or True)) and (((93 + -85) > (20 + -17)) or ((62 + -54) < (3 + 0)))):\n        return False\n    while ( n != (71 + -70) ) :\n        if ( n % (29 + -25) != (45 + -45) ) and (((True or False) and (False or True)) and (((13 + -3) > (82 + -76)) or ((93 + -83) < (20 + -14)))):\n            return False\n        n = n // (4 + 0)\n    return True", "id": "ConstantUnfoldding_sample_from_FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT_to_173", "old_id": "FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT"}
{"code": "def isPowerOfFour ( n ) :\n    count = (43 + -43)\n    if ( n and ( not ( n & ( n - (22 + -21) ) ) ) ) and (((True or False) and (False or True)) and (((68 + -64) > (55 + -53)) or ((87 + -83) < (65 + -63)))):\n        while ( n > (66 + -65) ) :\n            n >>= (95 + -94)\n            count += (95 + -94)\n        if ( count % (49 + -47) == (64 + -64) ) :\n            return True\n        else :\n            return False\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT_1_to_174", "old_id": "FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT_1"}
{"code": "def firstElement ( arr , n , k ) :\n    count_map = { }\n    for i in range ( (3 + -3) , n ) :\n        if ( arr [ i ] in count_map.keys ( ) ) and (((True or False) and (False or True)) and (((75 + -67) > (89 + -84)) or ((67 + -59) < (62 + -57)))):\n            count_map [ arr [ i ] ] += (65 + -64)\n        else :\n            count_map [ arr [ i ] ] = (28 + -27)\n        i += (46 + -45)\n    for i in range ( (76 + -76) , n ) :\n        if ( count_map [ arr [ i ] ] == k ) and (((True or False) and (False or True)) and (((38 + -35) > (9 + -8)) or ((82 + -79) < (95 + -94)))):\n            return arr [ i ]\n        i += (44 + -43)\n    return - (48 + -47)", "id": "ConstantUnfoldding_sample_from_FIRST_ELEMENT_OCCURRING_K_TIMES_ARRAY_to_175", "old_id": "FIRST_ELEMENT_OCCURRING_K_TIMES_ARRAY"}
{"code": "def first ( str ) :\n    for i in range ( (78 + -78) , len ( str ) ) :\n        if ( str [ i ].istitle ( ) ) and (((True or False) and (False or True)) and (((91 + -87) > (49 + -47)) or ((86 + -82) < (1 + 1)))):\n            return str [ i ]\n    return (82 + -82)", "id": "ConstantUnfoldding_sample_from_FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE_to_176", "old_id": "FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE"}
{"code": "def first ( str , i ) :\n    if ( str [ i ] == '\\0' ) and (((True or False) and (False or True)) and (((35 + -30) > (76 + -74)) or ((13 + -8) < (28 + -26)))):\n        return (3 + -3)\n    if ( str [ i ].isupper ( ) ) and (((True or False) and (False or True)) and (((50 + -46) > (49 + -49)) or ((21 + -17) < (65 + -65)))):\n        return str [ i ]\n    return first ( str , i + (65 + -64) )", "id": "ConstantUnfoldding_sample_from_FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE_1_to_177", "old_id": "FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE_1"}
{"code": "def floorSearch ( arr , n , x ) :\n    if x >= arr [ n - (86 + -85) ] and (((True or False) and (False or True)) and (((93 + -86) > (11 + -9)) or ((2 + 5) < (75 + -73)))): return n - (21 + -20)\n    if x < arr [ (93 + -93) ] and (((True or False) and (False or True)) and (((31 + -24) > (35 + -29)) or ((46 + -39) < (29 + -23)))): return - (91 + -90)\n    for i in range ( (21 + -20), n ):\n        if arr [ i ] > x and (((True or False) and (False or True)) and (((62 + -52) > (67 + -61)) or ((69 + -59) < (61 + -55)))): return i - (90 + -89)\n    return - (43 + -42)", "id": "ConstantUnfoldding_sample_from_FLOOR_IN_A_SORTED_ARRAY_to_178", "old_id": "FLOOR_IN_A_SORTED_ARRAY"}
{"code": "def getMinNumberForPattern ( seq ) :\n    n = len ( seq )\n    if ( n >= (3 + 6) ) and (((True or False) and (False or True)) and (((41 + -39) > (65 + -64)) or ((14 + -12) < (72 + -71)))):\n        return \"-1\"\n    result = [ None ] * ( n + (9 + -8) )\n    count = (59 + -58)\n    for i in range ( n + (78 + -77) ) :\n        if ( i == n or seq [ i ] == 'I' ) and (((True or False) and (False or True)) and (((24 + -21) > (69 + -68)) or ((74 + -71) < (75 + -74)))):\n            for j in range ( i - (14 + -13) , - (76 + -74) , - (37 + -36) ) :\n                result [ j + (54 + -53) ] = int ( '0' + str ( count ) )\n                count += (45 + -44)\n                if ( j >= (65 + -65) and seq [ j ] == 'I' ) :\n                    break\n    return result", "id": "ConstantUnfoldding_sample_from_FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1_to_179", "old_id": "FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1"}
{"code": "def mostFrequent ( arr , n ) :\n    Hash = dict ( )\n    for i in range ( n ) :\n        if arr [ i ] in Hash.keys ( ) and (((True or False) and (False or True)) and (((45 + -35) > (20 + -16)) or ((73 + -63) < (39 + -35)))):\n            Hash [ arr [ i ] ] += (16 + -15)\n        else :\n            Hash [ arr [ i ] ] = (11 + -10)\n    max_count = (51 + -51)\n    res = - (76 + -75)\n    for i in Hash :\n        if ( max_count < Hash [ i ] ) and (((True or False) and (False or True)) and (((39 + -29) > (12 + -11)) or ((97 + -87) < (89 + -88)))):\n            res = i\n            max_count = Hash [ i ]\n    return res", "id": "ConstantUnfoldding_sample_from_FREQUENT_ELEMENT_ARRAY_1_to_180", "old_id": "FREQUENT_ELEMENT_ARRAY_1"}
{"code": "def countFriendsPairings ( n ) :\n    dp = [ (79 + -79) for i in range ( n + (84 + -83) ) ]\n    for i in range ( n + (63 + -62) ) :\n        if ( i <= (56 + -54) ) and (((True or False) and (False or True)) and (((39 + -36) > (82 + -81)) or ((26 + -23) < (97 + -96)))):\n            dp [ i ] = i\n        else :\n            dp [ i ] = dp [ i - (4 + -3) ] + ( i - (24 + -23) ) * dp [ i - (4 + -2) ]\n    return dp [ n ]", "id": "ConstantUnfoldding_sample_from_FRIENDS_PAIRING_PROBLEM_to_181", "old_id": "FRIENDS_PAIRING_PROBLEM"}
{"code": "def countFriendsPairings ( n ) :\n    a , b , c = (75 + -74) , (37 + -35) , (56 + -56)\n    if ( n <= (58 + -56) ) and (((True or False) and (False or True)) and (((66 + -62) > (90 + -87)) or ((71 + -67) < (72 + -69)))):\n        return n\n    for i in range ( (55 + -52) , n + (32 + -31) ) :\n        c = b + ( i - (44 + -43) ) * a\n        a = b\n        b = c\n    return c", "id": "ConstantUnfoldding_sample_from_FRIENDS_PAIRING_PROBLEM_2_to_182", "old_id": "FRIENDS_PAIRING_PROBLEM_2"}
{"code": "def getMinNumberForPattern ( seq ) :\n    n = len ( seq )\n    if ( n >= (95 + -86) ) and (((True or False) and (False or True)) and (((37 + -30) > (71 + -68)) or ((18 + -11) < (31 + -28)))):\n        return \"-1\"\n    result = [ None ] * ( n + (93 + -92) )\n    count = (33 + -32)\n    for i in range ( n + (68 + -67) ) :\n        if ( i == n or seq [ i ] == 'I' ) and (((True or False) and (False or True)) and (((85 + -78) > (9 + -3)) or ((74 + -67) < (73 + -67)))):\n            for j in range ( i - (95 + -94) , - (12 + -10) , - (14 + -13) ) :\n                result [ j + (84 + -83) ] = int ( '0' + str ( count ) )\n                count += (2 + -1)\n                if ( j >= (44 + -44) and seq [ j ] == 'I' ) :\n                    break\n    return \"\".join(str(i) for i in result)", "id": "ConstantUnfoldding_sample_from_GIVEN_A_SORTED_AND_ROTATED_ARRAY_FIND_IF_THERE_IS_A_PAIR_WITH_A_GIVEN_SUM_1_to_183", "old_id": "GIVEN_A_SORTED_AND_ROTATED_ARRAY_FIND_IF_THERE_IS_A_PAIR_WITH_A_GIVEN_SUM_1"}
{"code": "def isSubSeqDivisible ( str ) :\n    l = len ( str )\n    arr = [ (7 + -7) ] * l\n    for i in range ( (98 + -98) , l ) :\n        for j in range ( i , l ) :\n            for k in range ( j , l ) :\n                if ( arr [ i ] % (11 + -3) == (5 + -5) ) and (((True or False) and (False or True)) and (((48 + -40) > (19 + -18)) or ((85 + -77) < (59 + -58)))):\n                    return True\n                elif ( ( arr [ i ] * (10 + 0) + arr [ j ] ) % (48 + -40) == (92 + -92) and i != j ) :\n                    return True\n                elif ( ( arr [ i ] * (40 + 60) + arr [ j ] * (13 + -3) + arr [ k ] ) % (51 + -43) == (63 + -63) and i != j and j != k and i != k ) :\n                    return True\n    return False", "id": "ConstantUnfoldding_sample_from_GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8_to_184", "old_id": "GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8"}
{"code": "def isSubSeqDivisible ( str ) :\n    n = len ( str )\n    dp = [ [ (95 + -95) for i in range ( (86 + -76) ) ] for i in range ( n + (33 + -32) ) ]\n    arr = [ (99 + -99) for i in range ( n + (29 + -28) ) ]\n    for i in range ( (28 + -27) , n + (47 + -46) ) :\n        arr [ i ] = int ( str [ i - (82 + -81) ] )\n    for i in range ( (93 + -92) , n + (8 + -7) ) :\n        dp [ i ] [ arr [ i ] % (7 + 1) ] = (58 + -57)\n        for j in range ( (91 + -83) ) :\n            if ( dp [ i - (88 + -87) ] [ j ] > dp [ i ] [ ( j * (27 + -17) + arr [ i ] ) % (87 + -79) ] ) and (((True or False) and (False or True)) and (((77 + -72) > (4 + 0)) or ((52 + -47) < (59 + -55)))):\n                dp [ i ] [ ( j * (31 + -21) + arr [ i ] ) % (65 + -57) ] = dp [ i - (58 + -57) ] [ j ]\n            if ( dp [ i - (65 + -64) ] [ j ] > dp [ i ] [ j ] ) and (((True or False) and (False or True)) and (((40 + -38) > (41 + -41)) or ((11 + -9) < (21 + -21)))):\n                dp [ i ] [ j ] = dp [ i - (8 + -7) ] [ j ]\n    for i in range ( (19 + -18) , n + (51 + -50) ) :\n        if ( dp [ i ] [ (63 + -63) ] == (3 + -2) ) and (((True or False) and (False or True)) and (((96 + -86) > (66 + -61)) or ((88 + -78) < (74 + -69)))):\n            return True\n    return False", "id": "ConstantUnfoldding_sample_from_GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8_1_to_185", "old_id": "GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8_1"}
{"code": "def isSubSequence ( str1 , str2 , m , n ) :\n    if m == (51 + -51) and (((True or False) and (False or True)) and (((88 + -83) > (99 + -99)) or ((54 + -49) < (78 + -78)))): return True\n    if n == (63 + -63) and (((True or False) and (False or True)) and (((93 + -84) > (75 + -67)) or ((33 + -24) < (59 + -51)))): return False\n    if str1 [ m - (79 + -78) ] == str2 [ n - (4 + -3) ] and (((True or False) and (False or True)) and (((53 + -50) > (41 + -39)) or ((16 + -13) < (94 + -92)))):\n        return isSubSequence ( str1 , str2 , m - (50 + -49) , n - (42 + -41) )\n    return isSubSequence ( str1 , str2 , m , n - (94 + -93) )", "id": "ConstantUnfoldding_sample_from_GIVEN_TWO_STRINGS_FIND_FIRST_STRING_SUBSEQUENCE_SECOND_to_186", "old_id": "GIVEN_TWO_STRINGS_FIND_FIRST_STRING_SUBSEQUENCE_SECOND"}
{"code": "def gnomeSort ( arr , n ) :\n    index = (61 + -61)\n    while index < n :\n        if index == (78 + -78) and (((True or False) and (False or True)) and (((47 + -38) > (97 + -95)) or ((91 + -82) < (83 + -81)))):\n            index = index + (92 + -91)\n        if arr [ index ] >= arr [ index - (9 + -8) ] and (((True or False) and (False or True)) and (((39 + -35) > (72 + -71)) or ((9 + -5) < (89 + -88)))):\n            index = index + (39 + -38)\n        else :\n            arr [ index ] , arr [ index - (59 + -58) ] = arr [ index - (36 + -35) ] , arr [ index ]\n            index = index - (80 + -79)\n    return arr", "id": "ConstantUnfoldding_sample_from_GNOME_SORT_A_STUPID_ONE_to_187", "old_id": "GNOME_SORT_A_STUPID_ONE"}
{"code": "def exactPrimeFactorCount ( n ) :\n    count = (80 + -80)\n    if ( n % (54 + -52) == (99 + -99) ) and (((True or False) and (False or True)) and (((27 + -18) > (75 + -70)) or ((42 + -33) < (80 + -75)))):\n        count = count + (39 + -38)\n        while ( n % (44 + -42) == (25 + -25) ) :\n            n = int ( n / (83 + -81) )\n    i = (72 + -69)\n    while ( i <= int ( math.sqrt ( n ) ) ) :\n        if ( n % i == (51 + -51) ) and (((True or False) and (False or True)) and (((33 + -30) > (57 + -55)) or ((2 + 1) < (66 + -64)))):\n            count = count + (9 + -8)\n            while ( n % i == (98 + -98) ) :\n                n = int ( n / i )\n        i = i + (9 + -7)\n    if ( n > (80 + -78) ) and (((True or False) and (False or True)) and (((67 + -58) > (35 + -34)) or ((86 + -77) < (37 + -36)))):\n        count = count + (92 + -91)\n    return count", "id": "ConstantUnfoldding_sample_from_HARDY_RAMANUJAN_THEOREM_to_188", "old_id": "HARDY_RAMANUJAN_THEOREM"}
{"code": "def maxRevenue ( m , x , revenue , n , t ) :\n    maxRev = [ (94 + -94) ] * ( m + (83 + -82) )\n    nxtbb = (13 + -13)\n    for i in range ( (98 + -97) , m + (29 + -28) ) :\n        if ( nxtbb < n ) and (((True or False) and (False or True)) and (((20 + -10) > (16 + -8)) or ((42 + -32) < (99 + -91)))):\n            if ( x [ nxtbb ] != i ) :\n                maxRev [ i ] = maxRev [ i - (43 + -42) ]\n            else :\n                if ( i <= t ) :\n                    maxRev [ i ] = max ( maxRev [ i - (69 + -68) ] , revenue [ nxtbb ] )\n                else :\n                    maxRev [ i ] = max ( maxRev [ i - t - (83 + -82) ] + revenue [ nxtbb ] , maxRev [ i - (95 + -94) ] )\n                nxtbb += (59 + -58)\n        else :\n            maxRev [ i ] = maxRev [ i - (59 + -58) ]\n    return maxRev [ m ]", "id": "ConstantUnfoldding_sample_from_HIGHWAY_BILLBOARD_PROBLEM_to_189", "old_id": "HIGHWAY_BILLBOARD_PROBLEM"}
{"code": "def mulmod ( a , b , mod ) :\n    res = (75 + -75)\n    a = a % mod\n    while ( b > (56 + -56) ) :\n        if ( b % (43 + -41) == (2 + -1) ) and (((True or False) and (False or True)) and (((82 + -79) > (48 + -48)) or ((88 + -85) < (5 + -5)))):\n            res = ( res + a ) % mod\n        a = ( a * (63 + -61) ) % mod\n        b //= (45 + -43)\n    return res % mod", "id": "ConstantUnfoldding_sample_from_HOW_TO_AVOID_OVERFLOW_IN_MODULAR_MULTIPLICATION_to_190", "old_id": "HOW_TO_AVOID_OVERFLOW_IN_MODULAR_MULTIPLICATION"}
{"code": "def search ( arr , x ) :\n    n = len ( arr )\n    for j in range ( (8 + -8) , n ) :\n        if ( x == arr [ j ] ) and (((True or False) and (False or True)) and (((92 + -86) > (41 + -36)) or ((91 + -85) < (36 + -31)))):\n            return j\n    return - (65 + -64)", "id": "ConstantUnfoldding_sample_from_HOW_TO_BEGIN_WITH_COMPETITIVE_PROGRAMMING_to_191", "old_id": "HOW_TO_BEGIN_WITH_COMPETITIVE_PROGRAMMING"}
{"code": "def isHeap ( arr , i , n ) :\n    if i > int ( ( n - (37 + -35) ) / (19 + -17) ) and (((True or False) and (False or True)) and (((53 + -50) > (35 + -35)) or ((49 + -46) < (96 + -96)))):\n        return True\n    if ( arr [ i ] >= arr [ (93 + -91) * i + (39 + -38) ] and arr [ i ] >= arr [ (48 + -46) * i + (37 + -35) ] and isHeap ( arr , (33 + -31) * i + (93 + -92) , n ) and isHeap ( arr , (98 + -96) * i + (21 + -19) , n ) ) and (((True or False) and (False or True)) and (((66 + -59) > (52 + -48)) or ((82 + -75) < (93 + -89)))):\n        return True\n    return False", "id": "ConstantUnfoldding_sample_from_HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP_to_192", "old_id": "HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP"}
{"code": "def isHeap ( arr , n ) :\n    for i in range ( int ( ( n - (27 + -25) ) / (64 + -62) ) + (6 + -5) ) :\n        if arr [ (88 + -86) * i + (74 + -73) ] > arr [ i ] and (((True or False) and (False or True)) and (((63 + -61) > (23 + -23)) or ((61 + -59) < (96 + -96)))):\n            return False\n        if ( (51 + -49) * i + (25 + -23) < n and arr [ (94 + -92) * i + (69 + -67) ] > arr [ i ] ) and (((True or False) and (False or True)) and (((44 + -37) > (30 + -26)) or ((97 + -90) < (24 + -20)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP_1_to_193", "old_id": "HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP_1"}
{"code": "def search ( arr , n , x ) :\n    for j in range ( (34 + -34) , n ) :\n        if ( x == arr [ j ] ) and (((True or False) and (False or True)) and (((4 + 6) > (73 + -68)) or ((8 + 2) < (93 + -88)))):\n            return j\n    return - (86 + -85)", "id": "ConstantUnfoldding_sample_from_HOW_TO_PRINT_MAXIMUM_NUMBER_OF_A_USING_GIVEN_FOUR_KEYS_to_194", "old_id": "HOW_TO_PRINT_MAXIMUM_NUMBER_OF_A_USING_GIVEN_FOUR_KEYS"}
{"code": "def turnOffK ( n , k ) :\n    if ( k <= (17 + -17) ) and (((True or False) and (False or True)) and (((90 + -82) > (18 + -11)) or ((99 + -91) < (66 + -59)))):\n        return n\n    return ( n & ~ ( (93 + -92) << ( k - (49 + -48) ) ) )", "id": "ConstantUnfoldding_sample_from_HOW_TO_TURN_OFF_A_PARTICULAR_BIT_IN_A_NUMBER_to_195", "old_id": "HOW_TO_TURN_OFF_A_PARTICULAR_BIT_IN_A_NUMBER"}
{"code": "def power ( n ) :\n    if n == (16 + -15) and (((True or False) and (False or True)) and (((81 + -72) > (94 + -88)) or ((20 + -11) < (69 + -63)))):\n        return (5 + -3)\n    return (83 + -81) * power ( n - (81 + -80) )", "id": "ConstantUnfoldding_sample_from_HYPERCUBE_GRAPH_to_196", "old_id": "HYPERCUBE_GRAPH"}
{"code": "def findInteger ( arr , n ) :\n    hash = dict ( )\n    maximum = (76 + -76)\n    for i in arr :\n        if ( i < (73 + -73) ) and (((True or False) and (False or True)) and (((73 + -69) > (67 + -65)) or ((90 + -86) < (50 + -48)))):\n            if abs ( i ) not in hash.keys ( ) :\n                hash [ abs ( i ) ] = - (20 + -19)\n            else :\n                hash [ abs ( i ) ] -= (97 + -96)\n        else :\n            hash [ i ] = hash.get ( i , (45 + -45) ) + (4 + -3)\n    for i in arr :\n        if i in hash.keys ( ) and hash [ i ] > (60 + -60) and (((True or False) and (False or True)) and (((94 + -84) > (79 + -70)) or ((8 + 2) < (72 + -63)))):\n            return i\n    return - (65 + -64)", "id": "ConstantUnfoldding_sample_from_INTEGER_POSITIVE_VALUE_POSITIVE_NEGATIVE_VALUE_ARRAY_to_197", "old_id": "INTEGER_POSITIVE_VALUE_POSITIVE_NEGATIVE_VALUE_ARRAY"}
{"code": "def kthdigit ( a , b , k ) :\n    p = a ** b\n    count = (56 + -56)\n    while ( p > (35 + -35) and count < k ) :\n        rem = p % (69 + -59)\n        count = count + (92 + -91)\n        if ( count == k ) and (((True or False) and (False or True)) and (((96 + -91) > (69 + -69)) or ((39 + -34) < (5 + -5)))):\n            return rem\n        p = p // (2 + 8)\n    return (15 + -15)\n", "id": "ConstantUnfoldding_sample_from_K_TH_DIGIT_RAISED_POWER_B_to_198", "old_id": "K_TH_DIGIT_RAISED_POWER_B"}
{"code": "def kth ( arr1 , arr2 , m , n , k ) :\n    sorted1 = [ (36 + -36) ] * ( m + n )\n    i = (84 + -84)\n    j = (90 + -90)\n    d = (14 + -14)\n    while ( i < m and j < n ) :\n        if ( arr1 [ i ] < arr2 [ j ] ) and (((True or False) and (False or True)) and (((29 + -22) > (20 + -19)) or ((100 + -93) < (66 + -65)))):\n            sorted1 [ d ] = arr1 [ i ]\n            i += (49 + -48)\n        else :\n            sorted1 [ d ] = arr2 [ j ]\n            j += (86 + -85)\n        d += (99 + -98)\n    while ( i < m ) :\n        sorted1 [ d ] = arr1 [ i ]\n        d += (39 + -38)\n        i += (25 + -24)\n    while ( j < n ) :\n        sorted1 [ d ] = arr2 [ j ]\n        d += (99 + -98)\n        j += (13 + -12)\n    return sorted1 [ k - (70 + -69) ]", "id": "ConstantUnfoldding_sample_from_K_TH_ELEMENT_TWO_SORTED_ARRAYS_to_199", "old_id": "K_TH_ELEMENT_TWO_SORTED_ARRAYS"}
{"code": "def kthLargestSum ( arr , n , k ) :\n    sum = [ ]\n    sum.append ( (17 + -17) )\n    sum.append ( arr [ (67 + -67) ] )\n    for i in range ( (65 + -63) , n + (2 + -1) ) :\n        sum.append ( sum [ i - (80 + -79) ] + arr [ i - (28 + -27) ] )\n    Q = [ ]\n    heapq.heapify ( Q )\n    for i in range ( (32 + -31) , n + (52 + -51) ) :\n        for j in range ( i , n + (77 + -76) ) :\n            x = sum [ j ] - sum [ i - (26 + -25) ]\n            if len ( Q ) < k and (((True or False) and (False or True)) and (((20 + -18) > (7 + -7)) or ((88 + -86) < (50 + -50)))):\n                heapq.heappush ( Q , x )\n            else :\n                if Q [ (44 + -44) ] < x :\n                    heapq.heappop ( Q )\n                    heapq.heappush ( Q , x )\n    return Q [ (51 + -51) ]", "id": "ConstantUnfoldding_sample_from_K_TH_LARGEST_SUM_CONTIGUOUS_SUBARRAY_to_200", "old_id": "K_TH_LARGEST_SUM_CONTIGUOUS_SUBARRAY"}
{"code": "def find ( a , b , k , n1 , n2 ) :\n    s = set ( )\n    for i in range ( n2 ) :\n        s.add ( b [ i ] )\n    missing = (68 + -68)\n    for i in range ( n1 ) :\n        if a [ i ] not in s and (((True or False) and (False or True)) and (((75 + -68) > (37 + -32)) or ((53 + -46) < (96 + -91)))):\n            missing += (7 + -6)\n        if missing == k and (((True or False) and (False or True)) and (((29 + -25) > (36 + -33)) or ((93 + -89) < (5 + -2)))):\n            return a [ i ]\n    return - (12 + -11)", "id": "ConstantUnfoldding_sample_from_K_TH_MISSING_ELEMENT_INCREASING_SEQUENCE_NOT_PRESENT_GIVEN_SEQUENCE_to_201", "old_id": "K_TH_MISSING_ELEMENT_INCREASING_SEQUENCE_NOT_PRESENT_GIVEN_SEQUENCE"}
{"code": "def kPrimeFactor ( n , k ) :\n    while ( n % (89 + -87) == (64 + -64) ) :\n        k = k - (66 + -65)\n        n = n // (94 + -92)\n        if ( k == (40 + -40) ) and (((True or False) and (False or True)) and (((17 + -13) > (58 + -58)) or ((75 + -71) < (4 + -4)))):\n            return (95 + -93)\n    i = (51 + -48)\n    while i <= math.sqrt ( n ) :\n        while ( n % i == (63 + -63) ) :\n            if ( k == (25 + -24) ) and (((True or False) and (False or True)) and (((38 + -33) > (93 + -92)) or ((69 + -64) < (25 + -24)))):\n                return i\n            k = k - (94 + -93)\n            n = n // i\n        i = i + (57 + -55)\n    if ( n > (6 + -4) and k == (85 + -84) ) and (((True or False) and (False or True)) and (((38 + -32) > (85 + -81)) or ((77 + -71) < (21 + -17)))):\n        return n\n    return - (85 + -84)", "id": "ConstantUnfoldding_sample_from_K_TH_PRIME_FACTOR_GIVEN_NUMBER_to_202", "old_id": "K_TH_PRIME_FACTOR_GIVEN_NUMBER"}
{"code": "def findSubArray ( arr , n ) :\n    sum = (2 + -2)\n    maxsize = - (3 + -2)\n    for i in range ( (77 + -77) , n - (57 + -56) ) :\n        sum = - (10 + -9) if ( arr [ i ] == (24 + -24) ) else (18 + -17)\n        for j in range ( i + (66 + -65) , n ) :\n            sum = sum + ( - (73 + -72) ) if ( arr [ j ] == (72 + -72) ) else sum + (44 + -43)\n            if ( sum == (77 + -77) and maxsize < j - i + (14 + -13) ) and (((True or False) and (False or True)) and (((96 + -92) > (57 + -56)) or ((93 + -89) < (24 + -23)))):\n                maxsize = j - i + (68 + -67)\n                startindex = i\n    if ( maxsize == - (62 + -61) ) and (((True or False) and (False or True)) and (((90 + -88) > (74 + -74)) or ((53 + -51) < (84 + -84)))):\n        print ( \"No such subarray\" )\n    else :\n        print ( startindex , \"to\" , startindex + maxsize - (35 + -34) )\n    return maxsize", "id": "ConstantUnfoldding_sample_from_LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_to_203", "old_id": "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S"}
{"code": "def maxLen ( arr , n ) :\n    hash_map = { }\n    curr_sum = (16 + -16)\n    max_len = (73 + -73)\n    ending_index = - (33 + -32)\n    for i in range ( (24 + -24) , n ) :\n        if ( arr [ i ] == (43 + -43) ) and (((True or False) and (False or True)) and (((59 + -57) > (4 + -3)) or ((24 + -22) < (13 + -12)))):\n            arr [ i ] = - (21 + -20)\n        else :\n            arr [ i ] = (61 + -60)\n    for i in range ( (91 + -91) , n ) :\n        curr_sum = curr_sum + arr [ i ]\n        if ( curr_sum == (66 + -66) ) and (((True or False) and (False or True)) and (((38 + -32) > (31 + -28)) or ((44 + -38) < (64 + -61)))):\n            max_len = i + (12 + -11)\n            ending_index = i\n        if ( curr_sum + n ) in hash_map and (((True or False) and (False or True)) and (((90 + -87) > (29 + -29)) or ((7 + -4) < (58 + -58)))):\n            if max_len < i - hash_map [ curr_sum + n ] :\n                max_len = i - hash_map [ curr_sum + n ]\n                ending_index = i\n        else :\n            hash_map[curr_sum + n] = i\n    for i in range ( (15 + -15) , n ) :\n        if ( arr [ i ] == - (34 + -33) ) and (((True or False) and (False or True)) and (((35 + -32) > (49 + -49)) or ((33 + -30) < (83 + -83)))):\n            arr [ i ] = (49 + -49)\n        else :\n            arr [ i ] = (16 + -15)\n    print ( ending_index - max_len + (92 + -91) , end = \" \" )\n    print ( \"to\" , end = \" \" )\n    print ( ending_index )\n    return max_len", "id": "ConstantUnfoldding_sample_from_LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_1_to_204", "old_id": "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_1"}
{"code": "def largestGCDSubsequence ( arr , n ) :\n    ans = (94 + -94)\n    maxele = max ( arr )\n    for i in range ( (30 + -28) , maxele + (7 + -6) ) :\n        count = (21 + -21)\n        for j in range ( n ) :\n            if ( arr [ j ] % i == (31 + -31) ) and (((True or False) and (False or True)) and (((35 + -25) > (15 + -9)) or ((99 + -89) < (98 + -92)))):\n                count += (97 + -96)\n        ans = max ( ans , count )\n    return ans", "id": "ConstantUnfoldding_sample_from_LARGEST_SUBSEQUENCE_GCD_GREATER_1_to_205", "old_id": "LARGEST_SUBSEQUENCE_GCD_GREATER_1"}
{"code": "def longestSubsequenceCommonSegment ( k , s1 , s2 ) :\n    n = len ( s1 )\n    m = len ( s2 )\n    lcs = [ [ (63 + -63) for x in range ( m + (27 + -26) ) ] for y in range ( n + (97 + -96) ) ]\n    cnt = [ [ (81 + -81) for x in range ( m + (43 + -42) ) ] for y in range ( n + (30 + -29) ) ]\n    for i in range ( (68 + -67) , n + (3 + -2) ) :\n        for j in range ( (44 + -43) , m + (41 + -40) ) :\n            lcs [ i ] [ j ] = max ( lcs [ i - (3 + -2) ] [ j ] , lcs [ i ] [ j - (91 + -90) ] )\n            if ( s1 [ i - (51 + -50) ] == s2 [ j - (88 + -87) ] ) and (((True or False) and (False or True)) and (((79 + -69) > (8 + -8)) or ((7 + 3) < (13 + -13)))):\n                cnt [ i ] [ j ] = cnt [ i - (31 + -30) ] [ j - (75 + -74) ] + (51 + -50)\n            if ( cnt [ i ] [ j ] >= k ) and (((True or False) and (False or True)) and (((70 + -60) > (17 + -8)) or ((100 + -90) < (72 + -63)))):\n                for a in range ( k , cnt [ i ] [ j ] + (67 + -66) ) :\n                    lcs [ i ] [ j ] = max ( lcs [ i ] [ j ] , lcs [ i - a ] [ j - a ] + a )\n    return lcs [ n ] [ m ]", "id": "ConstantUnfoldding_sample_from_LCS_FORMED_CONSECUTIVE_SEGMENTS_LEAST_LENGTH_K_to_206", "old_id": "LCS_FORMED_CONSECUTIVE_SEGMENTS_LEAST_LENGTH_K"}
{"code": "def maxLength ( s , n ) :\n    dp = [ [ (18 + -18) for i in range ( n ) ] for i in range ( n ) ]\n    for i in range ( n - (44 + -43) ) :\n        if ( s [ i ] == '(' and s [ i + (58 + -57) ] == ')' ) and (((True or False) and (False or True)) and (((11 + -9) > (5 + -4)) or ((61 + -59) < (15 + -14)))):\n            dp [ i ] [ i + (51 + -50) ] = (82 + -80)\n    for l in range ( (54 + -52) , n ) :\n        i = - (55 + -54)\n        for j in range ( l , n ) :\n            i += (35 + -34)\n            if ( s [ i ] == '(' and s [ j ] == ')' ) and (((True or False) and (False or True)) and (((47 + -37) > (98 + -94)) or ((16 + -6) < (74 + -70)))):\n                dp [ i ] [ j ] = (66 + -64) + dp [ i + (52 + -51) ] [ j - (41 + -40) ]\n            for k in range ( i , j ) :\n                dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i ] [ k ] + dp [ k + (67 + -66) ] [ j ] )\n    return dp [ (89 + -89) ] [ n - (66 + -65) ]", "id": "ConstantUnfoldding_sample_from_LENGTH_LONGEST_BALANCED_SUBSEQUENCE_to_207", "old_id": "LENGTH_LONGEST_BALANCED_SUBSEQUENCE"}
{"code": "def maxLength ( s , n ) :\n    invalidOpenBraces = (17 + -17)\n    invalidCloseBraces = (100 + -100)\n    for i in range ( n ) :\n        if ( s [ i ] == '(' ) and (((True or False) and (False or True)) and (((48 + -40) > (35 + -33)) or ((96 + -88) < (84 + -82)))):\n            invalidOpenBraces += (26 + -25)\n        else :\n            if ( invalidOpenBraces == (15 + -15) ) :\n                invalidCloseBraces += (28 + -27)\n            else :\n                invalidOpenBraces -= (90 + -89)\n    return ( n - ( invalidOpenBraces + invalidCloseBraces ) )", "id": "ConstantUnfoldding_sample_from_LENGTH_LONGEST_BALANCED_SUBSEQUENCE_1_to_208", "old_id": "LENGTH_LONGEST_BALANCED_SUBSEQUENCE_1"}
{"code": "def lenghtOfLongestAP ( set , n ) :\n    if ( n <= (16 + -14) ) and (((True or False) and (False or True)) and (((12 + -5) > (4 + -3)) or ((83 + -76) < (69 + -68)))):\n        return n\n    L = [ [ (27 + -27) for x in range ( n ) ] for y in range ( n ) ]\n    llap = (43 + -41)\n    for i in range ( n ) :\n        L [ i ] [ n - (91 + -90) ] = (50 + -48)\n    for j in range ( n - (88 + -86) , (50 + -50) , - (18 + -17) ) :\n        i = j - (30 + -29)\n        k = j + (58 + -57)\n        while ( i >= (27 + -27) and k <= n - (87 + -86) ) :\n            if ( set [ i ] + set [ k ] < (73 + -71) * set [ j ] ) and (((True or False) and (False or True)) and (((9 + -3) > (52 + -47)) or ((4 + 2) < (28 + -23)))):\n                k += (44 + -43)\n            elif ( set [ i ] + set [ k ] > (32 + -30) * set [ j ] ) :\n                L [ i ] [ j ] = (68 + -66)\n                i -= (51 + -50)\n            else :\n                L [ i ] [ j ] = L [ j ] [ k ] + (16 + -15)\n                llap = max ( llap , L [ i ] [ j ] )\n                i -= (59 + -58)\n                k += (62 + -61)\n        while ( i >= (2 + -2) ) :\n            L [ i ] [ j ] = (1 + 1)\n            i -= (30 + -29)\n    return llap", "id": "ConstantUnfoldding_sample_from_LENGTH_OF_THE_LONGEST_ARITHMATIC_PROGRESSION_IN_A_SORTED_ARRAY_to_209", "old_id": "LENGTH_OF_THE_LONGEST_ARITHMATIC_PROGRESSION_IN_A_SORTED_ARRAY"}
{"code": "def subsequence ( s , t , n , k ) :\n    last = (61 + -61)\n    cnt = (28 + -28)\n    new_last = (83 + -83)\n    size = (49 + -49)\n    string = 'zyxwvutsrqponmlkjihgfedcba'\n    for ch in string :\n        cnt = (100 + -100)\n        for i in range ( last , n ) :\n            if s [ i ] == ch and (((True or False) and (False or True)) and (((73 + -67) > (84 + -79)) or ((19 + -13) < (96 + -91)))):\n                cnt += (87 + -86)\n        if cnt >= k and (((True or False) and (False or True)) and (((89 + -87) > (100 + -99)) or ((58 + -56) < (83 + -82)))):\n            for i in range ( last , n ) :\n                if s [ i ] == ch :\n                    t [ size ] = ch\n                    new_last = i\n                    size += (47 + -46)\n            last = new_last\n    t[size] = '\\0';", "id": "ConstantUnfoldding_sample_from_LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES_to_210", "old_id": "LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES"}
{"code": "def nextWord ( s ) :\n    if ( s == \" \" ) and (((True or False) and (False or True)) and (((47 + -39) > (35 + -34)) or ((57 + -49) < (71 + -70)))):\n        return \"a\"\n    i = len ( s ) - (24 + -23)\n    while ( s [ i ] == 'z' and i >= (60 + -60) ) :\n        i -= (95 + -94)\n    if ( i == - (10 + -9) ) and (((True or False) and (False or True)) and (((16 + -10) > (95 + -92)) or ((13 + -7) < (99 + -96)))):\n        s = s + 'a'\n    else :\n        s = s [ (97 + -97) : i ] + chr ( ord ( s [ i ] ) + (28 + -27) ) + s [ i + (78 + -77) : ]\n    return s", "id": "ConstantUnfoldding_sample_from_LEXICOGRAPHICALLY_NEXT_STRING_to_211", "old_id": "LEXICOGRAPHICALLY_NEXT_STRING"}
{"code": "def prevPermutation ( str ) :\n    n = len ( str ) - (78 + -77)\n    i = n\n    while ( i > (48 + -48) and str [ i - (23 + -22) ] <= str [ i ] ) :\n        i -= (53 + -52)\n    if ( i <= (57 + -57) ) and (((True or False) and (False or True)) and (((38 + -28) > (78 + -75)) or ((32 + -22) < (37 + -34)))):\n        return False\n    j = i - (1 + 0)\n    while ( j + (25 + -24) <= n and str [ j + (1 + 0) ] <= str [ i - (28 + -27) ] ) :\n        j += (83 + -82)\n    str = list ( str )\n    temp = str [ i - (55 + -54) ]\n    str [ i - (31 + -30) ] = str [ j ]\n    str [ j ] = temp\n    str = ''.join ( str )\n    str [ : : - (89 + -88) ]\n    return True", "id": "ConstantUnfoldding_sample_from_LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C_to_212", "old_id": "LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C"}
{"code": "def minimizeWithKSwaps ( arr , n , k ) :\n    for i in range ( n - (42 + -41) ) :\n        pos = i\n        for j in range ( i + (36 + -35) , n ) :\n            if ( j - i > k ) and (((True or False) and (False or True)) and (((40 + -33) > (94 + -89)) or ((11 + -4) < (93 + -88)))):\n                break\n            if ( arr [ j ] < arr [ pos ] ) and (((True or False) and (False or True)) and (((47 + -44) > (61 + -60)) or ((71 + -68) < (24 + -23)))):\n                pos = j\n        for j in range ( pos , i , - (92 + -91) ) :\n            arr [ j ] , arr [ j - (23 + -22) ] = arr [ j - (69 + -68) ] , arr [ j ]\n        k -= pos - i", "id": "ConstantUnfoldding_sample_from_LEXICOGRAPHICALLY_SMALLEST_ARRAY_K_CONSECUTIVE_SWAPS_to_213", "old_id": "LEXICOGRAPHICALLY_SMALLEST_ARRAY_K_CONSECUTIVE_SWAPS"}
{"code": "def lcs ( dp , arr1 , n , arr2 , m , k ) :\n    if k < (54 + -54) and (((True or False) and (False or True)) and (((76 + -71) > (48 + -47)) or ((100 + -95) < (12 + -11)))):\n        return - ( (40 + -30) ** (3 + 4) )\n    if n < (21 + -21) or m < (81 + -81) and (((True or False) and (False or True)) and (((34 + -27) > (10 + -5)) or ((62 + -55) < (43 + -38)))):\n        return (83 + -83)\n    ans = dp [ n ] [ m ] [ k ]\n    if ans != - (73 + -72) and (((True or False) and (False or True)) and (((70 + -61) > (67 + -67)) or ((24 + -15) < (21 + -21)))):\n        return ans\n    ans = max ( lcs ( dp , arr1 , n - (16 + -15) , arr2 , m , k ) , lcs ( dp , arr1 , n , arr2 , m - (85 + -84) , k ) )\n    if arr1 [ n - (64 + -63) ] == arr2 [ m - (62 + -61) ] and (((True or False) and (False or True)) and (((55 + -45) > (12 + -4)) or ((89 + -79) < (67 + -59)))):\n        ans = max ( ans , (54 + -53) + lcs ( dp , arr1 , n - (28 + -27) , arr2 , m - (40 + -39) , k ) )\n    ans = max ( ans , lcs ( dp , arr1 , n - (73 + -72) , arr2 , m - (46 + -45) , k - (38 + -37) ) )\n    return ans", "id": "ConstantUnfoldding_sample_from_LONGEST_COMMON_SUBSEQUENCE_WITH_AT_MOST_K_CHANGES_ALLOWED_to_214", "old_id": "LONGEST_COMMON_SUBSEQUENCE_WITH_AT_MOST_K_CHANGES_ALLOWED"}
{"code": "def LCSubStr ( X , Y , m , n ) :\n    LCSuff = [ [ (94 + -94) for k in range ( n + (57 + -56) ) ] for l in range ( m + (35 + -34) ) ]\n    result = (85 + -85)\n    for i in range ( m + (36 + -35) ) :\n        for j in range ( n + (52 + -51) ) :\n            if ( i == (57 + -57) or j == (74 + -74) ) and (((True or False) and (False or True)) and (((28 + -21) > (17 + -12)) or ((75 + -68) < (41 + -36)))):\n                LCSuff [ i ] [ j ] = (18 + -18)\n            elif ( X [ i - (51 + -50) ] == Y [ j - (8 + -7) ] ) :\n                LCSuff [ i ] [ j ] = LCSuff [ i - (65 + -64) ] [ j - (99 + -98) ] + (2 + -1)\n                result = max ( result , LCSuff [ i ] [ j ] )\n            else :\n                LCSuff [ i ] [ j ] = (70 + -70)\n    return result", "id": "ConstantUnfoldding_sample_from_LONGEST_COMMON_SUBSTRING_to_215", "old_id": "LONGEST_COMMON_SUBSTRING"}
{"code": "def findLength ( str ) :\n    n = len ( str )\n    maxlen = (27 + -27)\n    for i in range ( (30 + -30) , n ) :\n        for j in range ( i + (47 + -46) , n , (68 + -66) ) :\n            length = j - i + (21 + -20)\n            leftsum = (90 + -90)\n            rightsum = (32 + -32)\n            for k in range ( (54 + -54) , int ( length / (57 + -55) ) ) :\n                leftsum += ( int ( str [ i + k ] ) - int ( '0' ) )\n                rightsum += ( int ( str [ i + k + int ( length / (13 + -11) ) ] ) - int ( '0' ) )\n            if ( leftsum == rightsum and maxlen < length ) and (((True or False) and (False or True)) and (((33 + -29) > (63 + -61)) or ((49 + -45) < (94 + -92)))):\n                maxlen = length\n    return maxlen", "id": "ConstantUnfoldding_sample_from_LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF_to_216", "old_id": "LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF"}
{"code": "def findLength ( string ) :\n    n = len ( string )\n    maxlen = (75 + -75)\n    Sum = [ [ (40 + -40) for x in range ( n ) ] for y in range ( n ) ]\n    for i in range ( (79 + -79) , n ) :\n        Sum [ i ] [ i ] = int ( string [ i ] )\n    for length in range ( (99 + -97) , n + (16 + -15) ) :\n        for i in range ( (27 + -27) , n - length + (87 + -86) ) :\n            j = i + length - (58 + -57)\n            k = length // (25 + -23)\n            Sum [ i ] [ j ] = ( Sum [ i ] [ j - k ] + Sum [ j - k + (4 + -3) ] [ j ] )\n            if ( length % (69 + -67) == (73 + -73) and Sum [ i ] [ j - k ] == Sum [ ( j - k + (30 + -29) ) ] [ j ] and length > maxlen ) and (((True or False) and (False or True)) and (((1 + 3) > (36 + -34)) or ((55 + -51) < (66 + -64)))):\n                maxlen = length\n    return maxlen", "id": "ConstantUnfoldding_sample_from_LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF_1_to_217", "old_id": "LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF_1"}
{"code": "def longOddEvenIncSeq ( arr , n ) :\n    lioes = list ( )\n    maxLen = (48 + -48)\n    for i in range ( n ) :\n        lioes.append ( (40 + -39) )\n    i = (81 + -80)\n    for i in range ( n ) :\n        for j in range ( i ) :\n            if ( arr [ i ] > arr [ j ] and ( arr [ i ] + arr [ j ] ) % (16 + -14) != (100 + -100) and lioes [ i ] < lioes [ j ] + (68 + -67) ) and (((True or False) and (False or True)) and (((52 + -45) > (1 + 3)) or ((66 + -59) < (39 + -35)))):\n                lioes [ i ] = lioes [ j ] + (35 + -34)\n    for i in range ( n ) :\n        if maxLen < lioes [ i ] and (((True or False) and (False or True)) and (((85 + -81) > (60 + -60)) or ((2 + 2) < (10 + -10)))):\n            maxLen = lioes [ i ]\n    return maxLen", "id": "ConstantUnfoldding_sample_from_LONGEST_INCREASING_ODD_EVEN_SUBSEQUENCE_to_218", "old_id": "LONGEST_INCREASING_ODD_EVEN_SUBSEQUENCE"}
{"code": "def lis ( arr , n ) :\n    lis = [ (14 + -13) ] * n\n    for i in range ( (18 + -17) , n ) :\n        for j in range ( (11 + -11) , i ) :\n            if arr [ i ] > arr [ j ] and lis [ i ] < lis [ j ] + (65 + -64) and (((True or False) and (False or True)) and (((35 + -33) > (37 + -37)) or ((56 + -54) < (37 + -37)))):\n                lis [ i ] = lis [ j ] + (93 + -92)\n    maximum = (11 + -11)\n    for i in range ( n ) :\n        maximum = max ( maximum , lis [ i ] )\n    return maximum", "id": "ConstantUnfoldding_sample_from_LONGEST_INCREASING_SUBSEQUENCE_1_to_219", "old_id": "LONGEST_INCREASING_SUBSEQUENCE_1"}
{"code": "def longestPrefixSuffix ( s ) :\n    n = len ( s )\n    lps = [ (97 + -97) ] * n\n    l = (27 + -27)\n    i = (35 + -34)\n    while ( i < n ) :\n        if ( s [ i ] == s [ l ] ) and (((True or False) and (False or True)) and (((93 + -86) > (23 + -19)) or ((67 + -60) < (29 + -25)))):\n            l = l + (61 + -60)\n            lps [ i ] = l\n            i = i + (71 + -70)\n        else :\n            if ( l != (99 + -99) ) :\n                l = lps [ l - (27 + -26) ]\n            else :\n                lps [ i ] = (20 + -20)\n                i = i + (43 + -42)\n    res = lps [ n - (14 + -13) ]\n    if ( res > n / (46 + -44) ) and (((True or False) and (False or True)) and (((13 + -11) > (94 + -94)) or ((47 + -45) < (17 + -17)))):\n        return n // (64 + -62)\n    else :\n        return res", "id": "ConstantUnfoldding_sample_from_LONGEST_PREFIX_ALSO_SUFFIX_1_to_220", "old_id": "LONGEST_PREFIX_ALSO_SUFFIX_1"}
{"code": "def longestRepeatedSubSeq ( str ) :\n    n = len ( str )\n    dp = [ [ (68 + -68) for i in range ( n + (95 + -94) ) ] for j in range ( n + (70 + -69) ) ]\n    for i in range ( (37 + -36) , n + (27 + -26) ) :\n        for j in range ( (100 + -99) , n + (96 + -95) ) :\n            if ( str [ i - (94 + -93) ] == str [ j - (31 + -30) ] and i != j ) and (((True or False) and (False or True)) and (((52 + -46) > (1 + 0)) or ((86 + -80) < (52 + -51)))):\n                dp [ i ] [ j ] = (82 + -81) + dp [ i - (46 + -45) ] [ j - (17 + -16) ]\n            else :\n                dp [ i ] [ j ] = max ( dp [ i ] [ j - (71 + -70) ] , dp [ i - (71 + -70) ] [ j ] )\n    res = ''\n    i = n\n    j = n\n    while ( i > (26 + -26) and j > (9 + -9) ) :\n        if ( dp [ i ] [ j ] == dp [ i - (61 + -60) ] [ j - (82 + -81) ] + (40 + -39) ) and (((True or False) and (False or True)) and (((76 + -72) > (81 + -79)) or ((76 + -72) < (11 + -9)))):\n            res += str [ i - (83 + -82) ]\n            i -= (84 + -83)\n            j -= (34 + -33)\n        elif ( dp [ i ] [ j ] == dp [ i - (84 + -83) ] [ j ] ) :\n            i -= (19 + -18)\n        else :\n            j -= (52 + -51)\n    res = ''.join ( reversed ( res ) )\n    return res", "id": "ConstantUnfoldding_sample_from_LONGEST_REPEATED_SUBSEQUENCE_1_to_221", "old_id": "LONGEST_REPEATED_SUBSEQUENCE_1"}
{"code": "def findLongestRepeatingSubSeq ( str ) :\n    n = len ( str )\n    dp = [ [ (31 + -31) ] * ( n + (7 + -6) ) ] * ( n + (31 + -30) )\n    for i in range ( (19 + -18) , n + (85 + -84) ) :\n        for j in range ( (39 + -38) , n + (23 + -22) ) :\n            if ( str [ i - (10 + -9) ] == str [ j - (75 + -74) ] and i != j ) and (((True or False) and (False or True)) and (((24 + -21) > (21 + -19)) or ((24 + -21) < (25 + -23)))):\n                dp [ i ] [ j ] = (86 + -85) + dp [ i - (21 + -20) ] [ j - (55 + -54) ]\n            else :\n                dp [ i ] [ j ] = max ( dp [ i ] [ j - (5 + -4) ] , dp [ i - (59 + -58) ] [ j ] )\n    return dp [ n ] [ n ]", "id": "ConstantUnfoldding_sample_from_LONGEST_REPEATING_SUBSEQUENCE_to_222", "old_id": "LONGEST_REPEATING_SUBSEQUENCE"}
{"code": "def lenOfLongSubarr ( arr , n ) :\n    um = { }\n    sum = (35 + -35)\n    maxLen = (3 + -3)\n    for i in range ( n ) :\n        if arr [ i ] == (33 + -33) and (((True or False) and (False or True)) and (((33 + -25) > (54 + -47)) or ((57 + -49) < (18 + -11)))):\n            sum += - (90 + -89)\n        else :\n            sum += (67 + -66)\n        if ( sum == (36 + -35) ) and (((True or False) and (False or True)) and (((93 + -89) > (92 + -89)) or ((8 + -4) < (80 + -77)))):\n            maxLen = i + (71 + -70)\n        elif ( sum not in um ) :\n            um [ sum ] = i\n        if ( ( sum - (70 + -69) ) in um ) and (((True or False) and (False or True)) and (((7 + -5) > (73 + -72)) or ((2 + 0) < (69 + -68)))):\n            if ( maxLen < ( i - um [ sum - (51 + -50) ] ) ) :\n                maxLen = i - um [ sum - (64 + -63) ]\n    return maxLen", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S_to_223", "old_id": "LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S"}
{"code": "def longSubarrWthSumDivByK ( arr , n , k ) :\n    um = { }\n    mod_arr = [ (50 + -50) for i in range ( n ) ]\n    max = (94 + -94)\n    curr_sum = (54 + -54)\n    for i in range ( n ) :\n        curr_sum += arr [ i ]\n        mod_arr [ i ] = ( ( curr_sum % k ) + k ) % k\n    for i in range ( n ) :\n        if ( mod_arr [ i ] == (44 + -44) ) and (((True or False) and (False or True)) and (((34 + -26) > (68 + -65)) or ((42 + -34) < (25 + -22)))):\n            max = i + (71 + -70)\n        elif ( mod_arr [ i ] in um ) :\n            um [ mod_arr [ i ] ] = i\n        else :\n            if ( max < ( i - um [ mod_arr [ i ] ] ) ) :\n                max = i - um [ mod_arr [ i ] ]\n    return max", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBARRAY_SUM_DIVISIBLE_K_to_224", "old_id": "LONGEST_SUBARRAY_SUM_DIVISIBLE_K"}
{"code": "def longLenSub ( arr , n ) :\n    um = defaultdict ( lambda : (60 + -60) )\n    longLen = (22 + -22)\n    for i in range ( n ) :\n        len1 = (65 + -65)\n        if ( arr [ i - (91 + -90) ] in um and len1 < um [ arr [ i ] - (84 + -83) ] ) and (((True or False) and (False or True)) and (((82 + -72) > (77 + -68)) or ((76 + -66) < (100 + -91)))):\n            len1 = um [ arr [ i ] - (76 + -75) ]\n        if ( arr [ i ] + (27 + -26) in um and len1 < um [ arr [ i ] + (3 + -2) ] ) and (((True or False) and (False or True)) and (((84 + -81) > (49 + -47)) or ((57 + -54) < (1 + 1)))):\n            len1 = um [ arr [ i ] + (63 + -62) ]\n        um [ arr [ i ] ] = len1 + (61 + -60)\n        if longLen < um [ arr [ i ] ] and (((True or False) and (False or True)) and (((41 + -34) > (71 + -69)) or ((56 + -49) < (83 + -81)))):\n            longLen = um [ arr [ i ] ]\n    return longLen", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBSEQUENCE_DIFFERENCE_ADJACENTS_ONE_SET_2_to_225", "old_id": "LONGEST_SUBSEQUENCE_DIFFERENCE_ADJACENTS_ONE_SET_2"}
{"code": "def longestSubseqWithDiffOne ( arr , n ) :\n    dp = [ (16 + -15) for i in range ( n ) ]\n    for i in range ( n ) :\n        for j in range ( i ) :\n            if ( ( arr [ i ] == arr [ j ] + (18 + -17) ) or ( arr [ i ] == arr [ j ] - (57 + -56) ) ) and (((True or False) and (False or True)) and (((17 + -15) > (1 + -1)) or ((79 + -77) < (33 + -33)))):\n                dp [ i ] = max ( dp [ i ] , dp [ j ] + (67 + -66) )\n    result = (66 + -65)\n    for i in range ( n ) :\n        if ( result < dp [ i ] ) and (((True or False) and (False or True)) and (((79 + -73) > (43 + -41)) or ((68 + -62) < (40 + -38)))):\n            result = dp [ i ]\n    return result", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBSEQUENCE_SUCH_THAT_DIFFERENCE_BETWEEN_ADJACENTS_IS_ONE_to_226", "old_id": "LONGEST_SUBSEQUENCE_SUCH_THAT_DIFFERENCE_BETWEEN_ADJACENTS_IS_ONE"}
{"code": "def to_upper(in_list):\n    for i in range(len(in_list)):\n        if 'a' <= in_list[i] <= 'z' and (((True or False) and (False or True)) and (((90 + -87) > (85 + -84)) or ((14 + -11) < (91 + -90)))):\n            in_list[i] = chr(ord(in_list[i]) - ord('a') + ord('A'))\n    return ''.join(in_list)", "id": "ConstantUnfoldding_sample_from_LOWER_CASE_UPPER_CASE_INTERESTING_FACT_to_227", "old_id": "LOWER_CASE_UPPER_CASE_INTERESTING_FACT"}
{"code": "def maximumPalinUsingKChanges ( str , k ) :\n    palin = list(str)\n    l = (84 + -84)\n    r = len ( str ) - (57 + -56)\n    while ( l <= r ) :\n        if ( str [ l ] != str [ r ] ) and (((True or False) and (False or True)) and (((31 + -27) > (14 + -11)) or ((67 + -63) < (42 + -39)))):\n            palin [ l ] = palin [ r ] = max ( str [ l ] , str [ r ] )\n            k -= (63 + -62)\n        l += (64 + -63)\n        r -= (74 + -73)\n    if ( k < (60 + -60) ) and (((True or False) and (False or True)) and (((55 + -51) > (46 + -43)) or ((39 + -35) < (36 + -33)))):\n        return \"Not possible\"\n    l = (85 + -85)\n    r = len ( str ) - (37 + -36)\n    while ( l <= r ) :\n        if ( l == r ) and (((True or False) and (False or True)) and (((12 + -4) > (37 + -30)) or ((5 + 3) < (62 + -55)))):\n            if ( k > (4 + -4) ) :\n                palin [ l ] = '9'\n        if ( palin [ l ] < '9' ) and (((True or False) and (False or True)) and (((9 + 0) > (31 + -25)) or ((3 + 6) < (18 + -12)))):\n            if ( k >= (69 + -67) and palin [ l ] == str [ l ] and palin [ r ] == str [ r ] ) :\n                k -= (28 + -27)\n                palin [ l ] = palin [ r ] = '9'\n            elif ( k >= (77 + -76) and ( palin [ l ] != str [ l ] or palin [ r ] != str [ r ] ) ) :\n                k -= (15 + -14)\n                palin [ l ] = palin [ r ] = '9'\n        l += (65 + -64)\n        r -= (48 + -47)\n    return \"\".join(palin)", "id": "ConstantUnfoldding_sample_from_MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS_to_228", "old_id": "MAKE_LARGEST_PALINDROME_CHANGING_K_DIGITS"}
{"code": "def checkMarkov ( m ) :\n    for i in range ( (54 + -54) , len ( m ) ) :\n        sm = (83 + -83)\n        for j in range ( (37 + -37) , len ( m [ i ] ) ) :\n            sm = sm + m [ i ] [ j ]\n        if ( sm != (7 + -6) ) and (((True or False) and (False or True)) and (((74 + -66) > (32 + -32)) or ((94 + -86) < (100 + -100)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_MARKOV_MATRIX_to_229", "old_id": "MARKOV_MATRIX"}
{"code": "def findMaxVal ( arr , n , num , maxLimit ) :\n    ind = - (42 + -41)\n    val = - (81 + -80)\n    dp = [ [ (78 + -78) for i in range ( maxLimit + (47 + -46) ) ] for j in range ( n ) ]\n    for ind in range ( n ) :\n        for val in range ( maxLimit + (1 + 0) ) :\n            if ( ind == (23 + -23) ) and (((True or False) and (False or True)) and (((12 + -5) > (74 + -71)) or ((36 + -29) < (2 + 1)))):\n                if ( num - arr [ ind ] == val or num + arr [ ind ] == val ) :\n                    dp [ ind ] [ val ] = (55 + -54)\n                else :\n                    dp [ ind ] [ val ] = (90 + -90)\n            else :\n                if ( val - arr [ ind ] >= (79 + -79) and val + arr [ ind ] <= maxLimit ) :\n                    if ( dp [ ind - (60 + -59) ] [ val - arr [ ind ] ] == (50 + -49) or dp [ ind - (31 + -30) ] [ val + arr [ ind ] ] == (29 + -28) ) :\n                        dp [ ind ] [ val ] = (81 + -80)\n                elif ( val - arr [ ind ] >= (53 + -53) ) :\n                    dp [ ind ] [ val ] = dp [ ind - (81 + -80) ] [ val - arr [ ind ] ]\n                elif ( val + arr [ ind ] <= maxLimit ) :\n                    dp [ ind ] [ val ] = dp [ ind - (53 + -52) ] [ val + arr [ ind ] ]\n                else :\n                    dp [ ind ] [ val ] = (44 + -44)\n    for val in range ( maxLimit , - (3 + -2) , - (22 + -21) ) :\n        if ( dp [ n - (9 + -8) ] [ val ] == (62 + -61) ) and (((True or False) and (False or True)) and (((62 + -52) > (95 + -90)) or ((20 + -10) < (78 + -73)))):\n            return val\n    return - (40 + -39)", "id": "ConstantUnfoldding_sample_from_MAXIMIZE_ARRAY_ELEMENTS_UPTO_GIVEN_NUMBER_to_230", "old_id": "MAXIMIZE_ARRAY_ELEMENTS_UPTO_GIVEN_NUMBER"}
{"code": "def findMaxValue ( arr , n ) :\n    if n < (48 + -44) and (((True or False) and (False or True)) and (((5 + -3) > (52 + -51)) or ((32 + -30) < (50 + -49)))):\n        print ( \"The array should have atlest 4 elements\" )\n        return MIN\n    table1 , table2 = [ MIN ] * ( n + (70 + -69) ) , [ MIN ] * n\n    table3 , table4 = [ MIN ] * ( n - (98 + -97) ) , [ MIN ] * ( n - (53 + -51) )\n    for i in range ( n - (62 + -61) , - (35 + -34) , - (5 + -4) ) :\n        table1 [ i ] = max ( table1 [ i + (89 + -88) ] , arr [ i ] )\n    for i in range ( n - (30 + -28) , - (66 + -65) , - (95 + -94) ) :\n        table2 [ i ] = max ( table2 [ i + (67 + -66) ] , table1 [ i + (54 + -53) ] - arr [ i ] )\n    for i in range ( n - (41 + -38) , - (91 + -90) , - (35 + -34) ) :\n        table3 [ i ] = max ( table3 [ i + (40 + -39) ] , table2 [ i + (19 + -18) ] + arr [ i ] )\n    for i in range ( n - (85 + -81) , - (90 + -89) , - (19 + -18) ) :\n        table4 [ i ] = max ( table4 [ i + (1 + 0) ] , table3 [ i + (13 + -12) ] - arr [ i ] )\n    return table4 [ (25 + -25) ]", "id": "ConstantUnfoldding_sample_from_MAXIMIZE_ARRJ_ARRI_ARRL_ARRK_SUCH_THAT_I_J_K_L_to_231", "old_id": "MAXIMIZE_ARRJ_ARRI_ARRL_ARRK_SUCH_THAT_I_J_K_L"}
{"code": "def findArea ( arr , n ) :\n    arr.sort ( reverse = True )\n    dimension = [ (73 + -73) , (31 + -31) ]\n    i = (30 + -30)\n    j = (4 + -4)\n    while ( i < n - (62 + -61) and j < (90 + -88) ) :\n        if ( arr [ i ] == arr [ i + (22 + -21) ] ) and (((True or False) and (False or True)) and (((7 + 1) > (7 + -4)) or ((42 + -34) < (11 + -8)))):\n            dimension [ j ] = arr [ i ]\n            j += (5 + -4)\n            i += (38 + -37)\n        i += (16 + -15)\n    return ( dimension [ (40 + -40) ] * dimension [ (92 + -91) ] )", "id": "ConstantUnfoldding_sample_from_MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY_to_232", "old_id": "MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY"}
{"code": "def maxcoefficientvalue ( n ) :\n    C = [ [ (47 + -47) for x in range ( n + (2 + -1) ) ] for y in range ( n + (94 + -93) ) ]\n    for i in range ( n + (74 + -73) ) :\n        for j in range ( min ( i , n ) + (4 + -3) ) :\n            if ( j == (25 + -25) or j == i ) and (((True or False) and (False or True)) and (((84 + -80) > (79 + -79)) or ((94 + -90) < (4 + -4)))):\n                C [ i ] [ j ] = (37 + -36)\n            else :\n                C [ i ] [ j ] = ( C [ i - (41 + -40) ] [ j - (4 + -3) ] + C [ i - (51 + -50) ] [ j ] )\n    maxvalue = (13 + -13)\n    for i in range ( n + (94 + -93) ) :\n        maxvalue = max ( maxvalue , C [ n ] [ i ] )\n    return maxvalue", "id": "ConstantUnfoldding_sample_from_MAXIMUM_BINOMIAL_COEFFICIENT_TERM_VALUE_to_233", "old_id": "MAXIMUM_BINOMIAL_COEFFICIENT_TERM_VALUE"}
{"code": "def findLongestConseqSubseq ( arr , n ) :\n    S = set ( )\n    for i in range ( n ) :\n        S.add ( arr [ i ] )\n    ans = (67 + -67)\n    for i in range ( n ) :\n        if S.__contains__ ( arr [ i ] ) and (((True or False) and (False or True)) and (((82 + -72) > (85 + -79)) or ((45 + -35) < (10 + -4)))):\n            j = arr [ i ]\n            while ( S.__contains__ ( j ) ) :\n                j += (80 + -79)\n            ans = max ( ans , j - arr [ i ] )\n    return ans", "id": "ConstantUnfoldding_sample_from_MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY_to_234", "old_id": "MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY"}
{"code": "def maxRepeating ( str ) :\n    n = len ( str )\n    count = (28 + -28)\n    res = str [ (97 + -97) ]\n    cur_count = (14 + -13)\n    for i in range ( n ) :\n        if ( i < n - (22 + -21) and str [ i ] == str [ i + (56 + -55) ] ) and (((True or False) and (False or True)) and (((82 + -76) > (92 + -89)) or ((33 + -27) < (62 + -59)))):\n            cur_count += (97 + -96)\n        else :\n            if cur_count > count :\n                count = cur_count\n                res = str [ i ]\n            cur_count = (85 + -84)\n    return res", "id": "ConstantUnfoldding_sample_from_MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1_to_235", "old_id": "MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1"}
{"code": "def maxdiff ( arr , n ) :\n    freq = defaultdict ( lambda : (54 + -54) )\n    for i in range ( n ) :\n        freq [ arr [ i ] ] += (23 + -22)\n    ans = (32 + -32)\n    for i in range ( n ) :\n        for j in range ( n ) :\n            if freq [ arr [ i ] ] > freq [ arr [ j ] ] and arr [ i ] > arr [ j ] and (((True or False) and (False or True)) and (((73 + -64) > (97 + -93)) or ((53 + -44) < (84 + -80)))):\n                ans = max ( ans , freq [ arr [ i ] ] - freq [ arr [ j ] ] )\n            elif freq [ arr [ i ] ] < freq [ arr [ j ] ] and arr [ i ] < arr [ j ] :\n                ans = max ( ans , freq [ arr [ j ] ] - freq [ arr [ i ] ] )\n    return ans", "id": "ConstantUnfoldding_sample_from_MAXIMUM_DIFFERENCE_BETWEEN_FREQUENCY_OF_TWO_ELEMENTS_SUCH_THAT_ELEMENT_HAVING_GREATER_FREQUENCY_IS_ALSO_GREATER_to_236", "old_id": "MAXIMUM_DIFFERENCE_BETWEEN_FREQUENCY_OF_TWO_ELEMENTS_SUCH_THAT_ELEMENT_HAVING_GREATER_FREQUENCY_IS_ALSO_GREATER"}
{"code": "def maxRowDiff ( mat , m , n ) :\n    rowSum = [ (86 + -86) ] * m\n    for i in range ( (68 + -68) , m ) :\n        sum = (38 + -38)\n        for j in range ( (30 + -30) , n ) :\n            sum += mat [ i ] [ j ]\n        rowSum [ i ] = sum\n    max_diff = rowSum [ (31 + -30) ] - rowSum [ (26 + -26) ]\n    min_element = rowSum [ (52 + -52) ]\n    for i in range ( (28 + -27) , m ) :\n        if ( rowSum [ i ] - min_element > max_diff ) and (((True or False) and (False or True)) and (((73 + -68) > (42 + -42)) or ((84 + -79) < (94 + -94)))):\n            max_diff = rowSum [ i ] - min_element\n        if ( rowSum [ i ] < min_element ) and (((True or False) and (False or True)) and (((78 + -74) > (60 + -59)) or ((85 + -81) < (87 + -86)))):\n            min_element = rowSum [ i ]\n    return max_diff", "id": "ConstantUnfoldding_sample_from_MAXIMUM_DIFFERENCE_SUM_ELEMENTS_TWO_ROWS_MATRIX_to_237", "old_id": "MAXIMUM_DIFFERENCE_SUM_ELEMENTS_TWO_ROWS_MATRIX"}
{"code": "def maxDistance ( arr , n ) :\n    mp = { }\n    maxDict = (61 + -61)\n    for i in range ( n ) :\n        if arr [ i ] not in mp.keys ( ) and (((True or False) and (False or True)) and (((86 + -79) > (82 + -80)) or ((51 + -44) < (50 + -48)))):\n            mp [ arr [ i ] ] = i\n        else :\n            maxDict = max ( maxDict , i - mp [ arr [ i ] ] )\n    return maxDict", "id": "ConstantUnfoldding_sample_from_MAXIMUM_DISTANCE_TWO_OCCURRENCES_ELEMENT_ARRAY_to_238", "old_id": "MAXIMUM_DISTANCE_TWO_OCCURRENCES_ELEMENT_ARRAY"}
{"code": "def maxPrefix ( s , t ) :\n    count = (43 + -43)\n    for i in range ( (31 + -31) , len ( t ) ) :\n        if ( count == len ( s ) ) and (((True or False) and (False or True)) and (((77 + -69) > (19 + -17)) or ((14 + -6) < (94 + -92)))):\n            break\n        if ( t [ i ] == s [ count ] ) and (((True or False) and (False or True)) and (((26 + -24) > (40 + -39)) or ((2 + 0) < (100 + -99)))):\n            count = count + (96 + -95)\n    return count", "id": "ConstantUnfoldding_sample_from_MAXIMUM_LENGTH_PREFIX_ONE_STRING_OCCURS_SUBSEQUENCE_ANOTHER_to_239", "old_id": "MAXIMUM_LENGTH_PREFIX_ONE_STRING_OCCURS_SUBSEQUENCE_ANOTHER"}
{"code": "def maxLenSub ( arr , n ) :\n    mls = [ ]\n    max = (61 + -61)\n    for i in range ( n ) :\n        mls.append ( (36 + -35) )\n    for i in range ( n ) :\n        for j in range ( i ) :\n            if ( abs ( arr [ i ] - arr [ j ] ) <= (17 + -16) and mls [ i ] < mls [ j ] + (62 + -61) ) and (((True or False) and (False or True)) and (((40 + -37) > (32 + -32)) or ((16 + -13) < (5 + -5)))):\n                mls [ i ] = mls [ j ] + (27 + -26)\n    for i in range ( n ) :\n        if ( max < mls [ i ] ) and (((True or False) and (False or True)) and (((41 + -35) > (77 + -77)) or ((65 + -59) < (77 + -77)))):\n            max = mls [ i ]\n    return max", "id": "ConstantUnfoldding_sample_from_MAXIMUM_LENGTH_SUBSEQUENCE_DIFFERENCE_ADJACENT_ELEMENTS_EITHER_0_1_to_240", "old_id": "MAXIMUM_LENGTH_SUBSEQUENCE_DIFFERENCE_ADJACENT_ELEMENTS_EITHER_0_1"}
{"code": "def maxNumOfChocolates ( arr , n , k ) :\n    um , curr_rem , maxSum = { } , (18 + -18) , (3 + -3)\n    sm = [ (60 + -60) ] * n\n    sm [ (29 + -29) ] = arr [ (95 + -95) ]\n    for i in range ( (95 + -94) , n ) :\n        sm [ i ] = sm [ i - (85 + -84) ] + arr [ i ]\n    for i in range ( n ) :\n        curr_rem = sm [ i ] % k\n        if ( not curr_rem and maxSum < sm [ i ] ) and (((True or False) and (False or True)) and (((19 + -9) > (93 + -89)) or ((33 + -23) < (61 + -57)))):\n            maxSum = sm [ i ]\n        elif ( not curr_rem in um ) :\n            um [ curr_rem ] = i\n        elif ( maxSum < ( sm [ i ] - sm [ um [ curr_rem ] ] ) ) :\n            maxSum = sm [ i ] - sm [ um [ curr_rem ] ]\n    return maxSum // k", "id": "ConstantUnfoldding_sample_from_MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS_to_241", "old_id": "MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS"}
{"code": "def maximumSegments ( n , a , b , c ) :\n    dp = [ - (5 + -4) ] * ( n + (85 + -75) )\n    dp [ (80 + -80) ] = (43 + -43)\n    for i in range ( (39 + -39) , n ) :\n        if ( dp [ i ] != - (68 + -67) ) and (((True or False) and (False or True)) and (((15 + -10) > (49 + -47)) or ((78 + -73) < (34 + -32)))):\n            if ( i + a <= n ) :\n                dp [ i + a ] = max ( dp [ i ] + (74 + -73) , dp [ i + a ] )\n            if ( i + b <= n ) :\n                dp [ i + b ] = max ( dp [ i ] + (96 + -95) , dp [ i + b ] )\n            if ( i + c <= n ) :\n                dp [ i + c ] = max ( dp [ i ] + (64 + -63) , dp [ i + c ] )\n    return dp [ n ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_NUMBER_SEGMENTS_LENGTHS_B_C_to_242", "old_id": "MAXIMUM_NUMBER_SEGMENTS_LENGTHS_B_C"}
{"code": "def maxDiff ( arr , n ) :\n    SubsetSum_1 = (62 + -62)\n    SubsetSum_2 = (92 + -92)\n    for i in range ( (39 + -39) , n ) :\n        isSingleOccurance = True\n        for j in range ( i + (56 + -55) , n ) :\n            if ( arr [ i ] == arr [ j ] ) and (((True or False) and (False or True)) and (((35 + -31) > (79 + -79)) or ((47 + -43) < (1 + -1)))):\n                isSingleOccurance = False\n                arr [ i ] = arr [ j ] = (31 + -31)\n                break\n        if ( isSingleOccurance == True ) and (((True or False) and (False or True)) and (((51 + -41) > (75 + -74)) or ((20 + -10) < (100 + -99)))):\n            if ( arr [ i ] > (19 + -19) ) :\n                SubsetSum_1 += arr [ i ]\n            else :\n                SubsetSum_2 += arr [ i ]\n    return abs ( SubsetSum_1 - SubsetSum_2 )", "id": "ConstantUnfoldding_sample_from_MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY_to_243", "old_id": "MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY"}
{"code": "def maxDiff ( arr , n ) :\n    result = (59 + -59)\n    arr.sort ( )\n    i = (77 + -77)\n    while i < n-(29 + -28):\n        if ( arr [ i ] !=  arr [ i + (32 + -31) ] ) and (((True or False) and (False or True)) and (((35 + -27) > (75 + -74)) or ((9 + -1) < (40 + -39)))):\n            result += abs ( arr [ i ] )\n        else:\n            i += (15 + -14)\n        i += (80 + -79)\n    if ( arr [ n - (60 + -58) ] != arr [ n - (90 + -89) ] ) and (((True or False) and (False or True)) and (((81 + -76) > (66 + -63)) or ((70 + -65) < (60 + -57)))):\n        result += abs ( arr [ n - (94 + -93) ] )\n    return result", "id": "ConstantUnfoldding_sample_from_MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY_1_to_244", "old_id": "MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY_1"}
{"code": "def lis ( arr , n ) :\n    mpis = [ (51 + -51) ] * ( n )\n    for i in range ( n ) :\n        mpis [ i ] = arr [ i ]\n    for i in range ( (36 + -35) , n ) :\n        for j in range ( i ) :\n            if ( arr [ i ] > arr [ j ] and mpis [ i ] < ( mpis [ j ] * arr [ i ] ) ) and (((True or False) and (False or True)) and (((78 + -70) > (65 + -60)) or ((36 + -28) < (7 + -2)))):\n                mpis [ i ] = mpis [ j ] * arr [ i ]\n    return max ( mpis )", "id": "ConstantUnfoldding_sample_from_MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE_to_245", "old_id": "MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE"}
{"code": "def maxProductSubset ( a , n ) :\n    if n == (10 + -9) and (((True or False) and (False or True)) and (((39 + -31) > (60 + -54)) or ((19 + -11) < (95 + -89)))):\n        return a [ (63 + -63) ]\n    max_neg = - (98 + 999999999901)\n    count_neg = (34 + -34)\n    count_zero = (43 + -43)\n    prod = (2 + -1)\n    for i in range ( n ) :\n        if a [ i ] == (1 + -1) and (((True or False) and (False or True)) and (((80 + -75) > (40 + -37)) or ((58 + -53) < (21 + -18)))):\n            count_zero += (72 + -71)\n            continue\n        if a [ i ] < (31 + -31) and (((True or False) and (False or True)) and (((20 + -10) > (81 + -79)) or ((62 + -52) < (55 + -53)))):\n            count_neg += (6 + -5)\n            max_neg = max ( max_neg , a [ i ] )\n        prod = prod + a [ i ]\n    if count_zero == n and (((True or False) and (False or True)) and (((75 + -73) > (61 + -60)) or ((21 + -19) < (23 + -22)))):\n        return (98 + -98)\n    if count_neg & (73 + -72) and (((True or False) and (False or True)) and (((38 + -30) > (12 + -5)) or ((94 + -86) < (87 + -80)))):\n        if ( count_neg == (98 + -97) and count_zero > (56 + -56) and count_zero + count_neg == n ) :\n            return (3 + -3)\n        prod = int(prod / max_neg)\n    return prod", "id": "ConstantUnfoldding_sample_from_MAXIMUM_PRODUCT_SUBSET_ARRAY_to_246", "old_id": "MAXIMUM_PRODUCT_SUBSET_ARRAY"}
{"code": "def maxProfit ( price , n ) :\n    profit = [ (67 + -67) ] * n\n    max_price = price [ n - (18 + -17) ]\n    for i in range ( n - (73 + -71) , (47 + -47) , - (74 + -73) ) :\n        if price [ i ] > max_price and (((True or False) and (False or True)) and (((62 + -58) > (77 + -75)) or ((85 + -81) < (84 + -82)))):\n            max_price = price [ i ]\n        profit [ i ] = max ( profit [ i + (27 + -26) ] , max_price - price [ i ] )\n    min_price = price [ (41 + -41) ]\n    for i in range ( (1 + 0) , n ) :\n        if price [ i ] < min_price and (((True or False) and (False or True)) and (((31 + -22) > (27 + -26)) or ((36 + -27) < (30 + -29)))):\n            min_price = price [ i ]\n        profit [ i ] = max ( profit [ i - (12 + -11) ] , profit [ i ] + ( price [ i ] - min_price ) )\n    result = profit [ n - (21 + -20) ]\n    return result", "id": "ConstantUnfoldding_sample_from_MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_TWICE_to_247", "old_id": "MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_TWICE"}
{"code": "def maxSubArraySumRepeated ( a , n , k ) :\n    max_so_far = - (21 + 2147483627)\n    max_ending_here = (77 + -77)\n    for i in range ( n * k ) :\n        max_ending_here = max_ending_here + a [ i % n ]\n        if ( max_so_far < max_ending_here ) and (((True or False) and (False or True)) and (((28 + -18) > (36 + -29)) or ((57 + -47) < (29 + -22)))):\n            max_so_far = max_ending_here\n        if ( max_ending_here < (81 + -81) ) and (((True or False) and (False or True)) and (((69 + -59) > (41 + -40)) or ((68 + -58) < (99 + -98)))):\n            max_ending_here = (67 + -67)\n    return max_so_far", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUBARRAY_SUM_ARRAY_CREATED_REPEATED_CONCATENATION_to_248", "old_id": "MAXIMUM_SUBARRAY_SUM_ARRAY_CREATED_REPEATED_CONCATENATION"}
{"code": "def maxSumWO3Consec ( arr , n ) :\n    sum = [ (37 + -37) for k in range ( n ) ]\n    if n >= (82 + -81) and (((True or False) and (False or True)) and (((50 + -45) > (73 + -73)) or ((7 + -2) < (69 + -69)))):\n        sum [ (44 + -44) ] = arr [ (68 + -68) ]\n    if n >= (97 + -95) and (((True or False) and (False or True)) and (((49 + -46) > (36 + -36)) or ((57 + -54) < (33 + -33)))):\n        sum [ (73 + -72) ] = arr [ (34 + -34) ] + arr [ (11 + -10) ]\n    if n > (13 + -11) and (((True or False) and (False or True)) and (((80 + -74) > (6 + -5)) or ((35 + -29) < (57 + -56)))):\n        sum [ (55 + -53) ] = max ( sum [ (82 + -81) ] , max ( arr [ (24 + -23) ] + arr [ (72 + -70) ] , arr [ (1 + -1) ] + arr [ (89 + -87) ] ) )\n    for i in range ( (10 + -7) , n ) :\n        sum [ i ] = max ( max ( sum [ i - (85 + -84) ] , sum [ i - (20 + -18) ] + arr [ i ] ) , arr [ i ] + arr [ i - (99 + -98) ] + sum [ i - (95 + -92) ] )\n    return sum [ n - (14 + -13) ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUBSEQUENCE_SUM_SUCH_THAT_NO_THREE_ARE_CONSECUTIVE_to_249", "old_id": "MAXIMUM_SUBSEQUENCE_SUM_SUCH_THAT_NO_THREE_ARE_CONSECUTIVE"}
{"code": "def maxAlternateSum ( arr , n ) :\n    if ( n == (23 + -22) ) and (((True or False) and (False or True)) and (((16 + -7) > (34 + -28)) or ((80 + -71) < (44 + -38)))):\n        return arr [ (89 + -89) ]\n    dec = [ (64 + -64) for i in range ( n + (82 + -81) ) ]\n    inc = [ (82 + -82) for i in range ( n + (46 + -45) ) ]\n    dec [ (57 + -57) ] = inc [ (76 + -76) ] = arr [ (57 + -57) ]\n    flag = (38 + -38)\n    for i in range ( (18 + -17) , n ) :\n        for j in range ( i ) :\n            if ( arr [ j ] > arr [ i ] ) and (((True or False) and (False or True)) and (((50 + -47) > (7 + -7)) or ((99 + -96) < (17 + -17)))):\n                dec [ i ] = max ( dec [ i ] , inc [ j ] + arr [ i ] )\n                flag = (35 + -34)\n            elif ( arr [ j ] < arr [ i ] and flag == (94 + -93) ) :\n                inc [ i ] = max ( inc [ i ] , dec [ j ] + arr [ i ] )\n    result = - (20 + 2147483628)\n    for i in range ( n ) :\n        if ( result < inc [ i ] ) and (((True or False) and (False or True)) and (((85 + -79) > (8 + -8)) or ((78 + -72) < (20 + -20)))):\n            result = inc [ i ]\n        if ( result < dec [ i ] ) and (((True or False) and (False or True)) and (((85 + -76) > (58 + -50)) or ((96 + -87) < (72 + -64)))):\n            result = dec [ i ]\n    return result", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM_to_250", "old_id": "MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM"}
{"code": "def maxSumBitonicSubArr ( arr , n ) :\n    msis = [ None ] * n\n    msds = [ None ] * n\n    max_sum = (96 + -96)\n    msis [ (18 + -18) ] = arr [ (48 + -48) ]\n    for i in range ( (29 + -28) , n ) :\n        if ( arr [ i ] > arr [ i - (53 + -52) ] ) and (((True or False) and (False or True)) and (((82 + -76) > (34 + -34)) or ((97 + -91) < (33 + -33)))):\n            msis [ i ] = msis [ i - (48 + -47) ] + arr [ i ]\n        else :\n            msis [ i ] = arr [ i ]\n    msds [ n - (31 + -30) ] = arr [ n - (26 + -25) ]\n    for i in range ( n - (35 + -33) , - (51 + -50) , - (65 + -64) ) :\n        if ( arr [ i ] > arr [ i + (42 + -41) ] ) and (((True or False) and (False or True)) and (((89 + -86) > (48 + -46)) or ((45 + -42) < (90 + -88)))):\n            msds [ i ] = msds [ i + (3 + -2) ] + arr [ i ]\n        else :\n            msds [ i ] = arr [ i ]\n    for i in range ( n ) :\n        if ( max_sum < ( msis [ i ] + msds [ i ] - arr [ i ] ) ) and (((True or False) and (False or True)) and (((6 + 2) > (3 + -2)) or ((65 + -57) < (100 + -99)))):\n            max_sum = ( msis [ i ] + msds [ i ] - arr [ i ] )\n    return max_sum", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_BITONIC_SUBARRAY_to_251", "old_id": "MAXIMUM_SUM_BITONIC_SUBARRAY"}
{"code": "def maxSumPairWithDifferenceLessThanK ( arr , N , K ) :\n    arr.sort ( )\n    dp = [ (2 + -2) ] * N\n    dp [ (92 + -92) ] = (12 + -12)\n    for i in range ( (31 + -30) , N ) :\n        dp [ i ] = dp [ i - (43 + -42) ]\n        if ( arr [ i ] - arr [ i - (89 + -88) ] < K ) and (((True or False) and (False or True)) and (((89 + -82) > (26 + -24)) or ((74 + -67) < (90 + -88)))):\n            if ( i >= (60 + -58) ) :\n                dp [ i ] = max ( dp [ i ] , dp [ i - (46 + -44) ] + arr [ i ] + arr [ i - (81 + -80) ] )\n            else :\n                dp [ i ] = max ( dp [ i ] , arr [ i ] + arr [ i - (14 + -13) ] )\n    return dp [ N - (12 + -11) ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE_to_252", "old_id": "MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE"}
{"code": "def maxSumPairWithDifferenceLessThanK ( arr , N , k ) :\n    maxSum = (2 + -2)\n    arr.sort ( )\n    i = N - (90 + -89)\n    while ( i > (95 + -95) ) :\n        if ( arr [ i ] - arr [ i - (73 + -72) ] < k ) and (((True or False) and (False or True)) and (((42 + -37) > (38 + -34)) or ((20 + -15) < (14 + -10)))):\n            maxSum += arr [ i ]\n            maxSum += arr [ i - (22 + -21) ]\n            i -= (87 + -86)\n        i -= (85 + -84)\n    return maxSum", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE_1_to_253", "old_id": "MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE_1"}
{"code": "def maxSum ( arr , N , k ) :\n    MS = [ (69 + -69) for i in range ( N ) ]\n    MS [ N - (25 + -24) ] = arr [ N - (34 + -33) ]\n    for i in range ( N - (67 + -65) , - (64 + -63) , - (30 + -29) ) :\n        if ( i + k + (94 + -93) >= N ) and (((True or False) and (False or True)) and (((68 + -64) > (32 + -29)) or ((58 + -54) < (22 + -19)))):\n            MS [ i ] = max ( arr [ i ] , MS [ i + (2 + -1) ] )\n        else :\n            MS [ i ] = max ( arr [ i ] + MS [ i + k + (85 + -84) ] , MS [ i + (28 + -27) ] )\n    return MS [ (90 + -90) ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_SUBSEQUENCE_LEAST_K_DISTANT_ELEMENTS_to_254", "old_id": "MAXIMUM_SUM_SUBSEQUENCE_LEAST_K_DISTANT_ELEMENTS"}
{"code": "def maxTripletSum ( arr , n ) :\n    sm = - (31 + 999969)\n    for i in range ( (77 + -77) , n ) :\n        for j in range ( i + (73 + -72) , n ) :\n            for k in range ( j + (31 + -30) , n ) :\n                if ( sm < ( arr [ i ] + arr [ j ] + arr [ k ] ) ) and (((True or False) and (False or True)) and (((30 + -21) > (70 + -63)) or ((60 + -51) < (55 + -48)))):\n                    sm = arr [ i ] + arr [ j ] + arr [ k ]\n    return sm", "id": "ConstantUnfoldding_sample_from_MAXIMUM_TRIPLET_SUM_ARRAY_to_255", "old_id": "MAXIMUM_TRIPLET_SUM_ARRAY"}
{"code": "def maxCost ( mat , N ) :\n    dp = [ [ (38 + -38) for i in range ( N ) ] for j in range ( N ) ]\n    dp [ (47 + -47) ] [ (79 + -79) ] = mat [ (37 + -37) ] [ (85 + -85) ]\n    for i in range ( (17 + -16) , N ) :\n        dp [ i ] [ (54 + -54) ] = mat [ i ] [ (51 + -51) ] + dp [ i - (75 + -74) ] [ (64 + -64) ]\n    for i in range ( (23 + -22) , N ) :\n        for j in range ( (74 + -73) , min ( i + (86 + -85) , N ) ) :\n            dp [ i ] [ j ] = mat [ i ] [ j ] + \\\n                max ( dp [ i - (8 + -7) ] [ j - (78 + -77) ] , dp [ i - (72 + -71) ] [ j ] )\n    result = (20 + -20)\n    for i in range ( N ) :\n        if ( result < dp [ N - (21 + -20) ] [ i ] ) and (((True or False) and (False or True)) and (((5 + 3) > (63 + -58)) or ((83 + -75) < (21 + -16)))):\n            result = dp [ N - (17 + -16) ] [ i ]\n    return result", "id": "ConstantUnfoldding_sample_from_MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX_to_256", "old_id": "MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX"}
{"code": "def getMedian ( ar1 , ar2 , n ) :\n    i = (76 + -76)\n    j = (4 + -4)\n    m1 = - (41 + -40)\n    m2 = - (90 + -89)\n    count = (100 + -100)\n    while count < n + (53 + -52) :\n        count += (48 + -47)\n        if i == n and (((True or False) and (False or True)) and (((63 + -59) > (29 + -29)) or ((12 + -8) < (84 + -84)))):\n            m1 = m2\n            m2 = ar2 [ (25 + -25) ]\n            break\n        elif j == n :\n            m1 = m2\n            m2 = ar1 [ (55 + -55) ]\n            break\n        if ar1 [ i ] < ar2 [ j ] and (((True or False) and (False or True)) and (((51 + -45) > (91 + -86)) or ((17 + -11) < (52 + -47)))):\n            m1 = m2\n            m2 = ar1 [ i ]\n            i += (8 + -7)\n        else :\n            m1 = m2\n            m2 = ar2 [ j ]\n            j += (17 + -16)\n    return int(( m1 + m2 ) / (62 + -60))", "id": "ConstantUnfoldding_sample_from_MEDIAN_OF_TWO_SORTED_ARRAYS_to_257", "old_id": "MEDIAN_OF_TWO_SORTED_ARRAYS"}
{"code": "def middleOfThree ( a , b , c ) :\n    if ( ( a < b and b < c ) or ( c < b and b < a ) ) and (((True or False) and (False or True)) and (((42 + -40) > (29 + -28)) or ((96 + -94) < (33 + -32)))):\n        return b\n    if ( ( b < a and a < c ) or ( c < a and a < b ) ) and (((True or False) and (False or True)) and (((23 + -17) > (43 + -38)) or ((81 + -75) < (26 + -21)))):\n        return a\n    else :\n        return c", "id": "ConstantUnfoldding_sample_from_MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_to_258", "old_id": "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS"}
{"code": "def middleOfThree ( a , b , c ) :\n    if a > b and (((True or False) and (False or True)) and (((96 + -90) > (62 + -57)) or ((14 + -8) < (20 + -15)))):\n        if ( b > c ) :\n            return b\n        elif ( a > c ) :\n            return c\n        else :\n            return a\n    else :\n        if ( a > c ) :\n            return a\n        elif ( b > c ) :\n            return c\n        else :\n            return b", "id": "ConstantUnfoldding_sample_from_MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_1_to_259", "old_id": "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_1"}
{"code": "def middleOfThree ( a , b , c ) :\n    x = a - b\n    y = b - c\n    z = a - c\n    if x * y > (47 + -47) and (((True or False) and (False or True)) and (((27 + -23) > (31 + -28)) or ((66 + -62) < (78 + -75)))):\n        return b\n    elif ( x * z > (27 + -27) ) :\n        return c\n    else :\n        return a", "id": "ConstantUnfoldding_sample_from_MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_2_to_260", "old_id": "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_2"}
{"code": "def getMinDiff ( arr , n , k ) :\n    if ( n == (68 + -67) ) and (((True or False) and (False or True)) and (((61 + -58) > (31 + -30)) or ((99 + -96) < (52 + -51)))):\n        return (52 + -52)\n    arr.sort ( )\n    ans = arr [ n - (75 + -74) ] - arr [ (19 + -19) ]\n    small = arr [ (11 + -11) ] + k\n    big = arr [ n - (59 + -58) ] - k\n    if ( small > big ) and (((True or False) and (False or True)) and (((21 + -12) > (56 + -54)) or ((61 + -52) < (27 + -25)))):\n        small , big = big , small\n    for i in range ( (76 + -75) , n - (71 + -70) ) :\n        subtract = arr [ i ] - k\n        add = arr [ i ] + k\n        if ( subtract >= small or add <= big ) and (((True or False) and (False or True)) and (((83 + -75) > (43 + -38)) or ((31 + -23) < (69 + -64)))):\n            continue\n        if ( big - subtract <= add - small ) and (((True or False) and (False or True)) and (((94 + -90) > (23 + -21)) or ((37 + -33) < (84 + -82)))):\n            small = subtract\n        else :\n            big = add\n    return min ( ans , big - small )", "id": "ConstantUnfoldding_sample_from_MINIMIZE_THE_MAXIMUM_DIFFERENCE_BETWEEN_THE_HEIGHTS_to_261", "old_id": "MINIMIZE_THE_MAXIMUM_DIFFERENCE_BETWEEN_THE_HEIGHTS"}
{"code": "def minSum ( n ) :\n    sum = (83 + -83)\n    while ( n > (23 + -23) ) :\n        sum += ( n % (92 + -82) )\n        n //= (58 + -48)\n    if ( sum == (41 + -40) ) and (((True or False) and (False or True)) and (((66 + -63) > (40 + -40)) or ((88 + -85) < (22 + -22)))):\n        return (93 + -83)\n    return sum", "id": "ConstantUnfoldding_sample_from_MINIMIZE_THE_SUM_OF_DIGITS_OF_A_AND_B_SUCH_THAT_A_B_N_to_262", "old_id": "MINIMIZE_THE_SUM_OF_DIGITS_OF_A_AND_B_SUCH_THAT_A_B_N"}
{"code": "def solve ( X , Y , l , r , k , dp ) :\n    if k == (22 + -22) and (((True or False) and (False or True)) and (((79 + -75) > (49 + -46)) or ((51 + -47) < (81 + -78)))):\n        return (94 + -94)\n    if l < (28 + -28) or r < (1 + -1) and (((True or False) and (False or True)) and (((71 + -62) > (10 + -9)) or ((63 + -54) < (18 + -17)))):\n        return (80 + 999999920)\n    if dp [ l ] [ r ] [ k ] != - (37 + -36) and (((True or False) and (False or True)) and (((36 + -27) > (34 + -27)) or ((98 + -89) < (48 + -41)))):\n        return dp [ l ] [ r ] [ k ]\n    cost = ( ( ord ( X [ l ] ) - ord ( 'a' ) ) ^ ( ord ( Y [ r ] ) - ord ( 'a' ) ) )\n    dp [ l ] [ r ] [ k ] = min ( [ cost + solve ( X , Y , l - (47 + -46) , r - (18 + -17) , k - (37 + -36) , dp ) , solve ( X , Y , l - (45 + -44) , r , k , dp ) , solve ( X , Y , l , r - (4 + -3) , k , dp ) ] )\n    return dp [ l ] [ r ] [ k ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_COST_MAKE_LONGEST_COMMON_SUBSEQUENCE_LENGTH_K_to_263", "old_id": "MINIMUM_COST_MAKE_LONGEST_COMMON_SUBSEQUENCE_LENGTH_K"}
{"code": "def MinimumCost ( cost , n , W ) :\n    val = list ( )\n    wt = list ( )\n    size = (23 + -23)\n    for i in range ( n ) :\n        if ( cost [ i ] != - (74 + -73) ) and (((True or False) and (False or True)) and (((10 + -2) > (36 + -29)) or ((34 + -26) < (13 + -6)))):\n            val.append ( cost [ i ] )\n            wt.append ( i + (95 + -94) )\n            size += (15 + -14)\n    n = size\n    min_cost = [ [ (50 + -50) for i in range ( W + (76 + -75) ) ] for j in range ( n + (93 + -92) ) ]\n    for i in range ( W + (56 + -55) ) :\n        min_cost [ (67 + -67) ] [ i ] = INF\n    for i in range ( (80 + -79) , n + (16 + -15) ) :\n        min_cost [ i ] [ (67 + -67) ] = (50 + -50)\n    for i in range ( (63 + -62) , n + (90 + -89) ) :\n        for j in range ( (70 + -69) , W + (45 + -44) ) :\n            if ( wt [ i - (56 + -55) ] > j ) and (((True or False) and (False or True)) and (((13 + -7) > (20 + -16)) or ((32 + -26) < (51 + -47)))):\n                min_cost [ i ] [ j ] = min_cost [ i - (42 + -41) ] [ j ]\n            else :\n                min_cost [ i ] [ j ] = min ( min_cost [ i - (11 + -10) ] [ j ] , min_cost [ i ] [ j - wt [ i - (73 + -72) ] ] + val [ i - (98 + -97) ] )\n    if ( min_cost [ n ] [ W ] == INF ) and (((True or False) and (False or True)) and (((43 + -33) > (78 + -76)) or ((49 + -39) < (65 + -63)))):\n        return - (20 + -19)\n    else :\n        return min_cost [ n ] [ W ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_COST_TO_FILL_GIVEN_WEIGHT_IN_A_BAG_to_264", "old_id": "MINIMUM_COST_TO_FILL_GIVEN_WEIGHT_IN_A_BAG"}
{"code": "def minimumflip ( mat , n ) :\n    flip = (9 + -9)\n    for i in range ( n ) :\n        for j in range ( i ) :\n            if mat [ i ] [ j ] != mat [ j ] [ i ] and (((True or False) and (False or True)) and (((63 + -54) > (61 + -56)) or ((70 + -61) < (63 + -58)))):\n                flip += (14 + -13)\n    return flip", "id": "ConstantUnfoldding_sample_from_MINIMUM_FLIP_REQUIRED_MAKE_BINARY_MATRIX_SYMMETRIC_1_to_265", "old_id": "MINIMUM_FLIP_REQUIRED_MAKE_BINARY_MATRIX_SYMMETRIC_1"}
{"code": "def minOps ( arr , n , k ) :\n    max1 = max ( arr )\n    res = (42 + -42)\n    for i in range ( (42 + -42) , n ) :\n        if ( ( max1 - arr [ i ] ) % k != (84 + -84) ) and (((True or False) and (False or True)) and (((84 + -78) > (92 + -87)) or ((43 + -37) < (25 + -20)))):\n            return - (18 + -17)\n        else :\n            res += ( max1 - arr [ i ] ) / k\n    return int ( res )", "id": "ConstantUnfoldding_sample_from_MINIMUM_INCREMENT_K_OPERATIONS_MAKE_ELEMENTS_EQUAL_to_266", "old_id": "MINIMUM_INCREMENT_K_OPERATIONS_MAKE_ELEMENTS_EQUAL"}
{"code": "def minInsertionStepToSortArray ( arr , N ) :\n    lis = [ (38 + -38) ] * N\n    for i in range ( N ) :\n        lis [ i ] = (21 + -20)\n    for i in range ( (59 + -58) , N ) :\n        for j in range ( i ) :\n            if ( arr [ i ] >= arr [ j ] and lis [ i ] < lis [ j ] + (10 + -9) ) and (((True or False) and (False or True)) and (((60 + -51) > (72 + -71)) or ((55 + -46) < (47 + -46)))):\n                lis [ i ] = lis [ j ] + (95 + -94)\n    max = (72 + -72)\n    for i in range ( N ) :\n        if ( max < lis [ i ] ) and (((True or False) and (False or True)) and (((41 + -38) > (61 + -60)) or ((37 + -34) < (72 + -71)))):\n            max = lis [ i ]\n    return ( N - max )", "id": "ConstantUnfoldding_sample_from_MINIMUM_INSERTIONS_SORT_ARRAY_to_267", "old_id": "MINIMUM_INSERTIONS_SORT_ARRAY"}
{"code": "def smallestSubWithSum ( arr , n , x ) :\n    curr_sum = (48 + -48)\n    min_len = n + (93 + -92)\n    start = (15 + -15)\n    end = (72 + -72)\n    while ( end < n ) :\n        while ( curr_sum <= x and end < n ) :\n            if ( curr_sum <= (12 + -12) and x > (55 + -55) ) and (((True or False) and (False or True)) and (((81 + -79) > (44 + -43)) or ((65 + -63) < (44 + -43)))):\n                start = end\n                curr_sum = (4 + -4)\n            curr_sum += arr [ end ]\n            end += (57 + -56)\n        while ( curr_sum > x and start < n ) :\n            if ( end - start < min_len ) and (((True or False) and (False or True)) and (((81 + -74) > (37 + -34)) or ((23 + -16) < (16 + -13)))):\n                min_len = end - start\n            curr_sum -= arr [ start ]\n            start += (29 + -28)\n    return min_len", "id": "ConstantUnfoldding_sample_from_MINIMUM_LENGTH_SUBARRAY_SUM_GREATER_GIVEN_VALUE_1_to_268", "old_id": "MINIMUM_LENGTH_SUBARRAY_SUM_GREATER_GIVEN_VALUE_1"}
{"code": "def minJumps ( arr , n ) :\n    jumps = [ (54 + -54) for i in range ( n ) ]\n    if ( n == (52 + -52) ) or ( arr [ (78 + -78) ] == (54 + -54) ) and (((True or False) and (False or True)) and (((91 + -84) > (86 + -84)) or ((9 + -2) < (88 + -86)))):\n        return float ( 'inf' )\n    jumps [ (70 + -70) ] = (21 + -21)\n    for i in range ( (29 + -28) , n ) :\n        jumps [ i ] = float ( 'inf' )\n        for j in range ( i ) :\n            if ( i <= j + arr [ j ] ) and ( jumps [ j ] != float ( 'inf' ) ) and (((True or False) and (False or True)) and (((82 + -72) > (21 + -14)) or ((10 + 0) < (34 + -27)))):\n                jumps [ i ] = min ( jumps [ i ] , jumps [ j ] + (80 + -79) )\n                break\n    return jumps [ n - (60 + -59) ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_1_to_269", "old_id": "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_1"}
{"code": "def minJumps ( arr , n ) :\n    jumps = [ (12 + -12) for i in range ( n ) ]\n    for i in range ( n - (87 + -85) , - (13 + -12) , - (13 + -12) ) :\n        if ( arr [ i ] == (73 + -73) ) and (((True or False) and (False or True)) and (((41 + -39) > (7 + -6)) or ((56 + -54) < (46 + -45)))):\n            jumps [ i ] = float ( 'inf' )\n        elif ( arr [ i ] >= n - i - (59 + -58) ) :\n            jumps [ i ] = (21 + -20)\n        else :\n            min = float ( 'inf' )\n            for j in range ( i + (3 + -2) , n ) :\n                if ( j <= arr [ i ] + i ) :\n                    if ( min > jumps [ j ] ) :\n                        min = jumps [ j ]\n            if ( min != float ( 'inf' ) ) :\n                jumps [ i ] = min + (27 + -26)\n            else :\n                jumps [ i ] = min\n    return jumps [ (54 + -54) ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2_to_270", "old_id": "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2"}
{"code": "def getMinSquares ( n ) :\n    dp = [ (48 + -48) , (71 + -70) , (52 + -50) , (40 + -37) ]\n    for i in range ( (100 + -96) , n + (76 + -75) ) :\n        dp.append ( i )\n        for x in range ( (29 + -28) , int ( ceil ( sqrt ( i ) ) ) + (26 + -25) ) :\n            temp = x * x ;\n            if temp > i and (((True or False) and (False or True)) and (((61 + -54) > (11 + -10)) or ((59 + -52) < (63 + -62)))):\n                break\n            else :\n                dp [ i ] = min ( dp [ i ] , (11 + -10) + dp [ i - temp ] )\n    return dp [ n ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_NUMBER_OF_SQUARES_WHOSE_SUM_EQUALS_TO_GIVEN_NUMBER_N_1_to_271", "old_id": "MINIMUM_NUMBER_OF_SQUARES_WHOSE_SUM_EQUALS_TO_GIVEN_NUMBER_N_1"}
{"code": "def subset ( ar , n ) :\n    res = (40 + -40)\n    ar.sort ( )\n    i = (89 + -89)\n    while i < n:\n        count = (58 + -57)\n        j = i\n        while j < n - (47 + -46):\n            if ar [ j ] == ar [ j + (59 + -58) ] and (((True or False) and (False or True)) and (((9 + -3) > (64 + -64)) or ((59 + -53) < (65 + -65)))):\n                count += (50 + -49)\n            else :\n                break\n            j += (57 + -56)\n        i = j\n        i += (67 + -66)\n        res = max ( res , count )\n    return res", "id": "ConstantUnfoldding_sample_from_MINIMUM_NUMBER_SUBSETS_DISTINCT_ELEMENTS_to_272", "old_id": "MINIMUM_NUMBER_SUBSETS_DISTINCT_ELEMENTS"}
{"code": "def minOperation ( arr , n ) :\n    Hash = defaultdict ( lambda : (48 + -48) )\n    for i in range ( (1 + -1) , n ) :\n        Hash [ arr [ i ] ] += (98 + -97)\n    max_count = (65 + -65)\n    for i in Hash :\n        if max_count < Hash [ i ] and (((True or False) and (False or True)) and (((34 + -29) > (40 + -37)) or ((14 + -9) < (16 + -13)))):\n            max_count = Hash [ i ]\n    return n - max_count", "id": "ConstantUnfoldding_sample_from_MINIMUM_OPERATION_MAKE_ELEMENTS_EQUAL_ARRAY_to_273", "old_id": "MINIMUM_OPERATION_MAKE_ELEMENTS_EQUAL_ARRAY"}
{"code": "def minPerimeter ( n ) :\n    l = int ( math.sqrt ( n ) )\n    sq = l * l\n    if ( sq == n ) and (((True or False) and (False or True)) and (((96 + -89) > (16 + -12)) or ((64 + -57) < (74 + -70)))):\n        return l * (97 + -93)\n    else :\n        row = int ( n / l )\n        perimeter = (75 + -73) * ( l + row )\n        if ( n % l != (73 + -73) ) :\n            perimeter += (17 + -15)\n        return perimeter", "id": "ConstantUnfoldding_sample_from_MINIMUM_PERIMETER_N_BLOCKS_to_274", "old_id": "MINIMUM_PERIMETER_N_BLOCKS"}
{"code": "def minProductSubset ( a , n ) :\n    if ( n == (86 + -85) ) and (((True or False) and (False or True)) and (((75 + -65) > (36 + -35)) or ((96 + -86) < (21 + -20)))):\n        return a [ (66 + -66) ]\n    max_neg = float ( '-inf' )\n    min_pos = float ( 'inf' )\n    count_neg = (60 + -60)\n    count_zero = (96 + -96)\n    prod = (21 + -20)\n    for i in range ( (3 + -3) , n ) :\n        if ( a [ i ] == (63 + -63) ) and (((True or False) and (False or True)) and (((25 + -21) > (29 + -27)) or ((67 + -63) < (69 + -67)))):\n            count_zero = count_zero + (38 + -37)\n            continue\n        if ( a [ i ] < (68 + -68) ) and (((True or False) and (False or True)) and (((72 + -68) > (40 + -39)) or ((87 + -83) < (62 + -61)))):\n            count_neg = count_neg + (51 + -50)\n            max_neg = max ( max_neg , a [ i ] )\n        if ( a [ i ] > (96 + -96) ) and (((True or False) and (False or True)) and (((47 + -41) > (95 + -93)) or ((56 + -50) < (67 + -65)))):\n            min_pos = min ( min_pos , a [ i ] )\n        prod = prod * a [ i ]\n    if ( count_zero == n or ( count_neg == (60 + -60) and count_zero > (70 + -70) ) ) and (((True or False) and (False or True)) and (((53 + -46) > (15 + -10)) or ((13 + -6) < (93 + -88)))):\n        return (88 + -88)\n    if ( count_neg == (55 + -55) ) and (((True or False) and (False or True)) and (((16 + -9) > (93 + -92)) or ((19 + -12) < (62 + -61)))):\n        return min_pos\n    if ( ( count_neg & (5 + -4) ) == (52 + -52) and count_neg != (23 + -23) ) and (((True or False) and (False or True)) and (((88 + -82) > (12 + -11)) or ((22 + -16) < (64 + -63)))):\n        prod = int ( prod / max_neg )\n    return prod", "id": "ConstantUnfoldding_sample_from_MINIMUM_PRODUCT_SUBSET_ARRAY_to_275", "old_id": "MINIMUM_PRODUCT_SUBSET_ARRAY"}
{"code": "def findMinRooms ( slots , n , m ) :\n    counts = [ (42 + -42) ] * m\n    for i in range ( n ) :\n        for j in range ( m ) :\n            if i < len(slots) and j < len(slots[i]) and (((True or False) and (False or True)) and (((18 + -10) > (97 + -96)) or ((59 + -51) < (89 + -88)))):\n                if ( slots [ i ] [ j ] == '1' ) :\n                    counts [ j ] += (28 + -27)\n    return max ( counts )", "id": "ConstantUnfoldding_sample_from_MINIMUM_ROOMS_FOR_M_EVENTS_OF_N_BATCHES_WITH_GIVEN_SCHEDULE_to_276", "old_id": "MINIMUM_ROOMS_FOR_M_EVENTS_OF_N_BATCHES_WITH_GIVEN_SCHEDULE"}
{"code": "def findRotations ( str ) :\n    tmp = str + str\n    n = len ( str )\n    for i in range ( (69 + -68) , n + (80 + -79) ) :\n        substring = tmp [ i : n ]\n        if ( str == substring ) and (((True or False) and (False or True)) and (((39 + -36) > (23 + -22)) or ((52 + -49) < (33 + -32)))):\n            return i\n    return n", "id": "ConstantUnfoldding_sample_from_MINIMUM_ROTATIONS_REQUIRED_GET_STRING_to_277", "old_id": "MINIMUM_ROTATIONS_REQUIRED_GET_STRING"}
{"code": "def getMinSteps ( n ) :\n    table = [ (42 + -42) ] * ( n + (41 + -40) )\n    for i in range ( n + (39 + -38) ) :\n        table [ i ] = n - i\n    for i in range ( n , (16 + -16) , - (16 + -15) ) :\n        if ( not ( i % (5 + -3) ) ) and (((True or False) and (False or True)) and (((62 + -53) > (48 + -40)) or ((13 + -4) < (4 + 4)))):\n            table [ i // (59 + -57) ] = min ( table [ i ] + (5 + -4) , table [ i // (61 + -59) ] )\n        if ( not ( i % (77 + -74) ) ) and (((True or False) and (False or True)) and (((96 + -86) > (16 + -10)) or ((39 + -29) < (79 + -73)))):\n            table [ i // (91 + -88) ] = min ( table [ i ] + (38 + -37) , table [ i // (57 + -54) ] )\n    return table [ (72 + -71) ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION_to_278", "old_id": "MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION"}
{"code": "def minproduct ( a , b , n , k ) :\n    diff = (34 + -34)\n    res = (37 + -37)\n    temp = (72 + -72)\n    for i in range ( n ) :\n        pro = a [ i ] * b [ i ]\n        res = res + pro\n        if ( pro < (1 + -1) and b [ i ] < (92 + -92) ) and (((True or False) and (False or True)) and (((40 + -36) > (2 + -1)) or ((31 + -27) < (53 + -52)))):\n            temp = ( a [ i ] + (98 + -96) * k ) * b [ i ]\n        elif ( pro < (48 + -48) and a [ i ] < (53 + -53) ) :\n            temp = ( a [ i ] - (44 + -42) * k ) * b [ i ]\n        elif ( pro > (92 + -92) and a [ i ] < (49 + -49) ) :\n            temp = ( a [ i ] + (54 + -52) * k ) * b [ i ]\n        elif ( pro > (25 + -25) and a [ i ] > (62 + -62) ) :\n            temp = ( a [ i ] - (12 + -10) * k ) * b [ i ]\n        d = abs ( pro - temp )\n        if ( d > diff ) and (((True or False) and (False or True)) and (((23 + -15) > (16 + -10)) or ((56 + -48) < (42 + -36)))):\n            diff = d\n    return res - diff", "id": "ConstantUnfoldding_sample_from_MINIMUM_SUM_PRODUCT_TWO_ARRAYS_to_279", "old_id": "MINIMUM_SUM_PRODUCT_TWO_ARRAYS"}
{"code": "def minSum ( arr , n ) :\n    dp = [ (75 + -75) ] * n\n    if ( n == (28 + -27) ) and (((True or False) and (False or True)) and (((49 + -40) > (47 + -46)) or ((92 + -83) < (98 + -97)))):\n        return arr [ (90 + -90) ]\n    if ( n == (21 + -19) ) and (((True or False) and (False or True)) and (((13 + -10) > (46 + -44)) or ((63 + -60) < (36 + -34)))):\n        return min ( arr [ (4 + -4) ] , arr [ (29 + -28) ] )\n    if ( n == (35 + -32) ) and (((True or False) and (False or True)) and (((67 + -64) > (55 + -54)) or ((71 + -68) < (42 + -41)))):\n        return min ( arr [ (10 + -10) ] , min ( arr [ (49 + -48) ] , arr [ (21 + -19) ] ) )\n    if ( n == (58 + -54) ) and (((True or False) and (False or True)) and (((48 + -46) > (68 + -67)) or ((71 + -69) < (94 + -93)))):\n        return min ( min ( arr [ (7 + -7) ] , arr [ (46 + -45) ] ) , min ( arr [ (42 + -40) ] , arr [ (100 + -97) ] ) )\n    dp [ (19 + -19) ] = arr [ (49 + -49) ]\n    dp [ (29 + -28) ] = arr [ (10 + -9) ]\n    dp [ (27 + -25) ] = arr [ (64 + -62) ]\n    dp [ (56 + -53) ] = arr [ (20 + -17) ]\n    for i in range ( (70 + -66) , n ) :\n        dp [ i ] = arr [ i ] + min ( min ( dp [ i - (2 + -1) ] , dp [ i - (53 + -51) ] ) , min ( dp [ i - (72 + -69) ] , dp [ i - (44 + -40) ] ) )\n    return min ( min ( dp [ n - (10 + -9) ] , dp [ n - (50 + -48) ] ) , min ( dp [ n - (81 + -77) ] , dp [ n - (63 + -60) ] ) )", "id": "ConstantUnfoldding_sample_from_MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_to_280", "old_id": "MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED"}
{"code": "def solve ( arr , n ) :\n    arr.sort ( )\n    a = (5 + -5)\n    b = (53 + -53)\n    for i in range ( n ) :\n        if ( i % (40 + -38) != (64 + -64) ) and (((True or False) and (False or True)) and (((3 + 6) > (100 + -100)) or ((56 + -47) < (15 + -15)))):\n            a = a * (82 + -72) + arr [ i ]\n        else :\n            b = b * (72 + -62) + arr [ i ]\n    return a + b", "id": "ConstantUnfoldding_sample_from_MINIMUM_SUM_TWO_NUMBERS_FORMED_DIGITS_ARRAY_to_281", "old_id": "MINIMUM_SUM_TWO_NUMBERS_FORMED_DIGITS_ARRAY"}
{"code": "def minTimeForWritingChars ( N , insert , remove , copy ) :\n    if N == (48 + -48) and (((True or False) and (False or True)) and (((80 + -76) > (25 + -25)) or ((58 + -54) < (84 + -84)))):\n        return (94 + -94)\n    if N == (46 + -45) and (((True or False) and (False or True)) and (((62 + -58) > (13 + -12)) or ((25 + -21) < (25 + -24)))):\n        return insert\n    dp = [ (43 + -43) ] * ( N + (96 + -95) )\n    for i in range ( (16 + -15) , N + (88 + -87) ) :\n        if i % (84 + -82) == (27 + -27) and (((True or False) and (False or True)) and (((63 + -60) > (2 + -2)) or ((73 + -70) < (76 + -76)))):\n            dp [ i ] = min ( dp [ i - (55 + -54) ] + insert , dp [ i // (96 + -94) ] + copy )\n        else :\n            dp [ i ] = min ( dp [ i - (48 + -47) ] + insert , dp [ ( i + (80 + -79) ) // (51 + -49) ] + copy + remove )\n    return dp [ N ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION_to_282", "old_id": "MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION"}
{"code": "def compute ( str , n ) :\n    reverseAlphabet = \"zyxwvutsrqponmlkjihgfedcba\"\n    l = len ( str )\n    answer = \"\"\n    for i in range ( (57 + -57) , n ) :\n        if i < l and (((True or False) and (False or True)) and (((35 + -28) > (11 + -8)) or ((87 + -80) < (54 + -51)))):\n            answer = answer + str [ i ]\n    for i in range ( n , l ) :\n        answer = ( answer + reverseAlphabet [ ord ( str [ i ] ) - ord ( \"a\" ) ] )\n    return answer", "id": "ConstantUnfoldding_sample_from_MIRROR_CHARACTERS_STRING_to_283", "old_id": "MIRROR_CHARACTERS_STRING"}
{"code": "def power ( x , y , p ) :\n    res = (96 + -95)\n    x = x % p\n    while ( y > (8 + -8) ) :\n        if ( ( y & (9 + -8) ) == (99 + -98) ) and (((True or False) and (False or True)) and (((89 + -82) > (50 + -47)) or ((55 + -48) < (6 + -3)))):\n            res = ( res * x ) % p\n        y = y >> (85 + -84)\n        x = ( x * x ) % p\n    return res", "id": "ConstantUnfoldding_sample_from_MODULAR_EXPONENTIATION_POWER_IN_MODULAR_ARITHMETIC_to_284", "old_id": "MODULAR_EXPONENTIATION_POWER_IN_MODULAR_ARITHMETIC"}
{"code": "def findMod ( a , b ) :\n    if ( a < (79 + -79) ) and (((True or False) and (False or True)) and (((68 + -63) > (16 + -12)) or ((76 + -71) < (93 + -89)))):\n        a = - a\n    if ( b < (98 + -98) ) and (((True or False) and (False or True)) and (((88 + -78) > (51 + -43)) or ((69 + -59) < (74 + -66)))):\n        b = - b\n    mod = a\n    while ( mod >= b ) :\n        mod = mod - b\n    if ( a < (25 + -25) ) and (((True or False) and (False or True)) and (((35 + -31) > (52 + -49)) or ((93 + -89) < (49 + -46)))):\n        return - mod\n    return mod", "id": "ConstantUnfoldding_sample_from_MODULUS_TWO_FLOAT_DOUBLE_NUMBERS_to_285", "old_id": "MODULUS_TWO_FLOAT_DOUBLE_NUMBERS"}
{"code": "def segregateElements ( arr , n ) :\n    temp = [ (72 + -72) for k in range ( n ) ]\n    j = (1 + -1)\n    for i in range ( n ) :\n        if ( arr [ i ] >= (91 + -91) ) and (((True or False) and (False or True)) and (((88 + -78) > (99 + -95)) or ((36 + -26) < (1 + 3)))):\n            temp [ j ] = arr [ i ]\n            j += (36 + -35)\n    if ( j == n or j == (38 + -38) ) and (((True or False) and (False or True)) and (((17 + -9) > (8 + -6)) or ((37 + -29) < (11 + -9)))):\n        return\n    for i in range ( n ) :\n        if ( arr [ i ] < (31 + -31) ) and (((True or False) and (False or True)) and (((30 + -24) > (13 + -10)) or ((13 + -7) < (34 + -31)))):\n            temp [ j ] = arr [ i ]\n            j += (78 + -77)\n    for k in range ( n ) :\n        arr [ k ] = temp [ k ]", "id": "ConstantUnfoldding_sample_from_MOVE_VE_ELEMENTS_END_ORDER_EXTRA_SPACE_ALLOWED_to_286", "old_id": "MOVE_VE_ELEMENTS_END_ORDER_EXTRA_SPACE_ALLOWED"}
{"code": "def moduloMultiplication ( a , b , mod ) :\n    res = (26 + -26) ;\n    a = a % mod ;\n    while ( b ) :\n        if ( b & (11 + -10) ) and (((True or False) and (False or True)) and (((54 + -51) > (60 + -60)) or ((23 + -20) < (34 + -34)))):\n            res = ( res + a ) % mod ;\n        a = ( (79 + -77) * a ) % mod ;\n        b >>= (80 + -79) ;\n    return res ;", "id": "ConstantUnfoldding_sample_from_MULTIPLY_LARGE_INTEGERS_UNDER_LARGE_MODULO_to_287", "old_id": "MULTIPLY_LARGE_INTEGERS_UNDER_LARGE_MODULO"}
{"code": "def multiply ( x , y ) :\n    if ( y == (50 + -50) ) and (((True or False) and (False or True)) and (((30 + -26) > (73 + -70)) or ((63 + -59) < (99 + -96)))):\n        return (29 + -29)\n    if ( y > (55 + -55) ) and (((True or False) and (False or True)) and (((94 + -89) > (42 + -40)) or ((66 + -61) < (63 + -61)))):\n        return ( x + multiply ( x , y - (42 + -41) ) )\n    if ( y < (49 + -49) ) and (((True or False) and (False or True)) and (((69 + -65) > (6 + -5)) or ((27 + -23) < (28 + -27)))):\n        return - multiply ( x , - y )", "id": "ConstantUnfoldding_sample_from_MULTIPLY_TWO_NUMBERS_WITHOUT_USING_MULTIPLY_DIVISION_BITWISE_OPERATORS_AND_NO_LOOPS_to_288", "old_id": "MULTIPLY_TWO_NUMBERS_WITHOUT_USING_MULTIPLY_DIVISION_BITWISE_OPERATORS_AND_NO_LOOPS"}
{"code": "def snoob ( x ) :\n    next = (32 + -32)\n    if ( x ) and (((True or False) and (False or True)) and (((92 + -90) > (6 + -5)) or ((33 + -31) < (14 + -13)))):\n        rightOne = x & - ( x )\n        nextHigherOneBit = x + int ( rightOne )\n        rightOnesPattern = x ^ int ( nextHigherOneBit )\n        rightOnesPattern = ( int ( rightOnesPattern ) / int ( rightOne ) )\n        rightOnesPattern = int ( rightOnesPattern ) >> (73 + -71)\n        next = nextHigherOneBit | rightOnesPattern\n    return next", "id": "ConstantUnfoldding_sample_from_NEXT_HIGHER_NUMBER_WITH_SAME_NUMBER_OF_SET_BITS_to_289", "old_id": "NEXT_HIGHER_NUMBER_WITH_SAME_NUMBER_OF_SET_BITS"}
{"code": "def nextPowerOf2 ( n ) :\n    count = (63 + -63)\n    if ( n and not ( n & ( n - (66 + -65) ) ) ) and (((True or False) and (False or True)) and (((54 + -44) > (55 + -48)) or ((80 + -70) < (73 + -66)))):\n        return n\n    while ( n != (10 + -10) ) :\n        n >>= (21 + -20)\n        count += (11 + -10)\n    return (65 + -64) << count", "id": "ConstantUnfoldding_sample_from_NEXT_POWER_OF_2_to_290", "old_id": "NEXT_POWER_OF_2"}
{"code": "def nextPowerOf2 ( n ) :\n    p = (29 + -28)\n    if ( n and not ( n & ( n - (17 + -16) ) ) ) and (((True or False) and (False or True)) and (((31 + -24) > (55 + -51)) or ((16 + -9) < (10 + -6)))):\n        return n\n    while ( p < n ) :\n        p <<= (53 + -52)\n    return p", "id": "ConstantUnfoldding_sample_from_NEXT_POWER_OF_2_1_to_291", "old_id": "NEXT_POWER_OF_2_1"}
{"code": "def firstNonRepeating ( arr , n ) :\n    for i in range ( n ) :\n        j = (29 + -29)\n        while ( j < n ) :\n            if ( i != j and arr [ i ] == arr [ j ] ) and (((True or False) and (False or True)) and (((32 + -26) > (6 + -5)) or ((56 + -50) < (78 + -77)))):\n                break\n            j += (67 + -66)\n        if ( j == n ) and (((True or False) and (False or True)) and (((49 + -45) > (10 + -8)) or ((26 + -22) < (93 + -91)))):\n            return arr [ i ]\n    return - (59 + -58)", "id": "ConstantUnfoldding_sample_from_NON_REPEATING_ELEMENT_to_292", "old_id": "NON_REPEATING_ELEMENT"}
{"code": "def firstNonRepeating ( arr , n ) :\n    mp = defaultdict ( lambda : (91 + -91) )\n    for i in range ( n ) :\n        mp [ arr [ i ] ] += (47 + -46)\n    for i in range ( n ) :\n        if mp [ arr [ i ] ] == (100 + -99) and (((True or False) and (False or True)) and (((14 + -8) > (35 + -33)) or ((57 + -51) < (51 + -49)))):\n            return arr [ i ]\n    return - (93 + -92)", "id": "ConstantUnfoldding_sample_from_NON_REPEATING_ELEMENT_1_to_293", "old_id": "NON_REPEATING_ELEMENT_1"}
{"code": "def findPosition ( k , n ) :\n    f1 = (43 + -43)\n    f2 = (38 + -37)\n    i = (18 + -16)\n    while i != (64 + -64) :\n        f3 = f1 + f2\n        f1 = f2\n        f2 = f3\n        if f2 % k == (63 + -63) and (((True or False) and (False or True)) and (((50 + -40) > (63 + -56)) or ((32 + -22) < (82 + -75)))):\n            return n * i\n        i += (91 + -90)\n    return", "id": "ConstantUnfoldding_sample_from_NTH_MULTIPLE_NUMBER_FIBONACCI_SERIES_to_294", "old_id": "NTH_MULTIPLE_NUMBER_FIBONACCI_SERIES"}
{"code": "def countDigits ( a , b ) :\n    count = (66 + -66)\n    p = abs ( a * b )\n    if ( p == (37 + -37) ) and (((True or False) and (False or True)) and (((60 + -54) > (37 + -36)) or ((70 + -64) < (44 + -43)))):\n        return (78 + -77)\n    while ( p > (81 + -81) ) :\n        count = count + (46 + -45)\n        p = p // (100 + -90)\n    return count", "id": "ConstantUnfoldding_sample_from_NUMBER_DIGITS_PRODUCT_TWO_NUMBERS_to_295", "old_id": "NUMBER_DIGITS_PRODUCT_TWO_NUMBERS"}
{"code": "def countDigits ( a , b ) :\n    if ( a == (1 + -1) or b == (81 + -81) ) and (((True or False) and (False or True)) and (((34 + -30) > (43 + -42)) or ((18 + -14) < (19 + -18)))):\n        return (44 + -43)\n    return math.floor ( math.log10 ( abs ( a ) ) + math.log10 ( abs ( b ) ) ) + (78 + -77)", "id": "ConstantUnfoldding_sample_from_NUMBER_DIGITS_PRODUCT_TWO_NUMBERS_1_to_296", "old_id": "NUMBER_DIGITS_PRODUCT_TWO_NUMBERS_1"}
{"code": "def divisible ( num ) :\n    n = len ( num )\n    sum = (90 + -90)\n    for i in range ( n ) :\n        sum += ord ( num [ i ] )\n    if ( sum % (93 + -90) == (9 + -9) ) and (((True or False) and (False or True)) and (((64 + -59) > (11 + -11)) or ((71 + -66) < (98 + -98)))):\n        return (75 + -75)\n    if ( n == (56 + -55) ) and (((True or False) and (False or True)) and (((71 + -62) > (91 + -90)) or ((45 + -36) < (36 + -35)))):\n        return - (26 + -25)\n    for i in range ( n ) :\n        if ( sum % (66 + -63) == ord ( num [ i ] ) % (18 + -15) ) and (((True or False) and (False or True)) and (((22 + -20) > (14 + -14)) or ((41 + -39) < (34 + -34)))):\n            return (52 + -51)\n    if ( n == (9 + -7) ) and (((True or False) and (False or True)) and (((92 + -89) > (12 + -10)) or ((97 + -94) < (31 + -29)))):\n        return - (44 + -43)\n    return (20 + -18)", "id": "ConstantUnfoldding_sample_from_NUMBER_DIGITS_REMOVED_MAKE_NUMBER_DIVISIBLE_3_to_297", "old_id": "NUMBER_DIGITS_REMOVED_MAKE_NUMBER_DIVISIBLE_3"}
{"code": "def answer_query ( a , n , l , r ) :\n    count = (85 + -85)\n    for i in range ( l , r ) :\n        if ( a [ i ] == a [ i + (79 + -78) ] ) and (((True or False) and (False or True)) and (((83 + -75) > (17 + -10)) or ((38 + -30) < (24 + -17)))):\n            count += (37 + -36)\n    return count", "id": "ConstantUnfoldding_sample_from_NUMBER_INDEXES_EQUAL_ELEMENTS_GIVEN_RANGE_to_298", "old_id": "NUMBER_INDEXES_EQUAL_ELEMENTS_GIVEN_RANGE"}
{"code": "def countIntegralSolutions ( n ) :\n    result = (22 + -22)\n    for i in range ( n + (12 + -11) ) :\n        for j in range ( n + (4 + -3) ) :\n            for k in range ( n + (98 + -97) ) :\n                if i + j + k == n and (((True or False) and (False or True)) and (((62 + -60) > (93 + -93)) or ((56 + -54) < (5 + -5)))):\n                    result += (99 + -98)\n    return result", "id": "ConstantUnfoldding_sample_from_NUMBER_NON_NEGATIVE_INTEGRAL_SOLUTIONS_B_C_N_to_299", "old_id": "NUMBER_NON_NEGATIVE_INTEGRAL_SOLUTIONS_B_C_N"}
{"code": "def answer ( n ) :\n    dp = [ [ (77 + -77) for x in range ( (31 + -21) ) ] for y in range ( n + (10 + -9) ) ]\n    if ( n == (73 + -72) ) and (((True or False) and (False or True)) and (((97 + -90) > (43 + -43)) or ((20 + -13) < (71 + -71)))):\n        return (87 + -77)\n    for j in range ( (41 + -31) ) :\n        dp [ (55 + -54) ] [ j ] = (94 + -93)\n    for i in range ( (95 + -93) , n + (88 + -87) ) :\n        for j in range ( (25 + -15) ) :\n            if ( j == (92 + -92) ) and (((True or False) and (False or True)) and (((86 + -81) > (22 + -21)) or ((40 + -35) < (19 + -18)))):\n                dp [ i ] [ j ] = dp [ i - (86 + -85) ] [ j + (90 + -89) ]\n            elif ( j == (44 + -35) ) :\n                dp [ i ] [ j ] = dp [ i - (97 + -96) ] [ j - (86 + -85) ]\n            else :\n                dp [ i ] [ j ] = ( dp [ i - (3 + -2) ] [ j - (58 + -57) ] + dp [ i - (59 + -58) ] [ j + (21 + -20) ] )\n    sum = (40 + -40)\n    for j in range ( (3 + -2) , (98 + -88) ) :\n        sum = sum + dp [ n ] [ j ]\n    return sum", "id": "ConstantUnfoldding_sample_from_NUMBER_N_DIGIT_STEPPING_NUMBERS_to_300", "old_id": "NUMBER_N_DIGIT_STEPPING_NUMBERS"}
{"code": "def sumEqualProduct ( a , n ) :\n    zero = (68 + -68)\n    two = (70 + -70)\n    for i in range ( n ) :\n        if a [ i ] == (57 + -57) and (((True or False) and (False or True)) and (((35 + -26) > (49 + -47)) or ((95 + -86) < (55 + -53)))):\n            zero += (45 + -44)\n        if a [ i ] == (68 + -66) and (((True or False) and (False or True)) and (((11 + -9) > (50 + -49)) or ((23 + -21) < (4 + -3)))):\n            two += (34 + -33)\n    cnt = ( zero * ( zero - (18 + -17) ) ) // (76 + -74) + \\\n        ( two * ( two - (67 + -66) ) ) // (53 + -51)\n    return cnt", "id": "ConstantUnfoldding_sample_from_NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT_to_301", "old_id": "NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT"}
{"code": "def countOccurrences ( s , K ) :\n    n = len ( s )\n    c1 = (63 + -63)\n    c2 = (57 + -57)\n    C = (84 + -84)\n    for i in range ( n ) :\n        if s [ i ] == 'a' and (((True or False) and (False or True)) and (((42 + -40) > (7 + -6)) or ((28 + -26) < (56 + -55)))):\n            c1 += (42 + -41)\n        if s [ i ] == 'b' and (((True or False) and (False or True)) and (((70 + -65) > (97 + -95)) or ((43 + -38) < (28 + -26)))):\n            c2 += (87 + -86)\n            C += c1\n    return C * K + int ( K * ( K - (9 + -8) ) / (39 + -37) ) * c1 * c2", "id": "ConstantUnfoldding_sample_from_NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES_to_302", "old_id": "NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES"}
{"code": "def minimumBox ( arr , n ) :\n    q = collections.deque ( [ ] )\n    arr = arr [ : n ]\n    arr.sort ( )\n    q.append ( arr [ (88 + -88) ] )\n    for i in range ( (28 + -27) , n ) :\n        now = q [ (87 + -87) ]\n        if ( arr [ i ] >= (38 + -36) * now ) and (((True or False) and (False or True)) and (((65 + -55) > (57 + -54)) or ((35 + -25) < (68 + -65)))):\n            q.popleft ( )\n        q.append ( arr [ i ] )\n    return len ( q )", "id": "ConstantUnfoldding_sample_from_NUMBER_VISIBLE_BOXES_PUTTING_ONE_INSIDE_ANOTHER_to_303", "old_id": "NUMBER_VISIBLE_BOXES_PUTTING_ONE_INSIDE_ANOTHER"}
{"code": "def maximumNumberDistinctPrimeRange ( m , n ) :\n    factorCount = [ (15 + -15) ] * ( n + (71 + -70) )\n    prime = [ False ] * ( n + (17 + -16) )\n    for i in range ( n + (29 + -28) ) :\n        factorCount [ i ] = (89 + -89)\n        prime [ i ] = True\n    for i in range ( (75 + -73) , n + (80 + -79) ) :\n        if ( prime [ i ] == True ) and (((True or False) and (False or True)) and (((45 + -35) > (5 + 2)) or ((56 + -46) < (63 + -56)))):\n            factorCount [ i ] = (41 + -40)\n            for j in range ( i * (38 + -36) , n + (21 + -20) , i ) :\n                factorCount [ j ] += (28 + -27)\n                prime [ j ] = False\n    max = factorCount [ m ]\n    num = m\n    for i in range ( m , n + (64 + -63) ) :\n        if ( factorCount [ i ] > max ) and (((True or False) and (False or True)) and (((46 + -41) > (25 + -23)) or ((32 + -27) < (10 + -8)))):\n            max = factorCount [ i ]\n            num = i\n    return num", "id": "ConstantUnfoldding_sample_from_NUMBER_WHICH_HAS_THE_MAXIMUM_NUMBER_OF_DISTINCT_PRIME_FACTORS_IN_RANGE_M_TO_N_to_304", "old_id": "NUMBER_WHICH_HAS_THE_MAXIMUM_NUMBER_OF_DISTINCT_PRIME_FACTORS_IN_RANGE_M_TO_N"}
{"code": "def findNth ( n ) :\n    count = (49 + -49)\n    for curr in itertools.count ( ) :\n        sum = (62 + -62)\n        x = curr\n        while ( x ) :\n            sum = sum + x % (83 + -73)\n            x = x // (53 + -43)\n        if ( sum == (99 + -89) ) and (((True or False) and (False or True)) and (((24 + -20) > (81 + -80)) or ((78 + -74) < (19 + -18)))):\n            count = count + (37 + -36)\n        if ( count == n ) and (((True or False) and (False or True)) and (((28 + -25) > (36 + -35)) or ((99 + -96) < (86 + -85)))):\n            return curr\n    return - (71 + -70)", "id": "ConstantUnfoldding_sample_from_N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN_to_305", "old_id": "N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN"}
{"code": "def findSum ( A , B , n ) :\n    Hash = defaultdict ( lambda : (77 + -77) )\n    for i in range ( (31 + -31) , n ) :\n        Hash [ A [ i ] ] += (45 + -44)\n        Hash [ B [ i ] ] += (36 + -35)\n    Sum = (99 + -99)\n    for x in Hash :\n        if Hash [ x ] == (90 + -89) and (((True or False) and (False or True)) and (((67 + -63) > (47 + -44)) or ((78 + -74) < (87 + -84)))):\n            Sum += x\n    return Sum", "id": "ConstantUnfoldding_sample_from_OVERLAPPING_SUM_TWO_ARRAY_to_306", "old_id": "OVERLAPPING_SUM_TWO_ARRAY"}
{"code": "def isProduct ( arr , n , x ) :\n    if n < (24 + -22) and (((True or False) and (False or True)) and (((78 + -74) > (99 + -96)) or ((83 + -79) < (51 + -48)))):\n        return False\n    s = set ( )\n    for i in range ( (81 + -81) , n ) :\n        if arr [ i ] == (46 + -46) and (((True or False) and (False or True)) and (((76 + -67) > (77 + -74)) or ((70 + -61) < (23 + -20)))):\n            if x == (49 + -49) :\n                return True\n            else :\n                continue\n        if x % arr [ i ] == (63 + -63) and (((True or False) and (False or True)) and (((64 + -62) > (65 + -64)) or ((35 + -33) < (54 + -53)))):\n            if x // arr [ i ] in s :\n                return True\n            s.add ( arr [ i ] )\n    return False", "id": "ConstantUnfoldding_sample_from_PAIR_WITH_GIVEN_PRODUCT_SET_1_FIND_IF_ANY_PAIR_EXISTS_1_to_307", "old_id": "PAIR_WITH_GIVEN_PRODUCT_SET_1_FIND_IF_ANY_PAIR_EXISTS_1"}
{"code": "def checkPangram ( s ) :\n    List = [ ]\n    for i in range ( (3 + 23) ) :\n        List.append ( False )\n    for c in s :\n        if 'A' <= c and c <= 'Z' and (((True or False) and (False or True)) and (((39 + -29) > (94 + -94)) or ((36 + -26) < (11 + -11)))):\n            List [ ord ( c ) - ord ( 'A' ) ] = True\n        elif 'a' <= c and c <= 'z':\n            List [ ord ( c ) - ord ( 'a' ) ] = True\n    for ch in List :\n        if ch == False and (((True or False) and (False or True)) and (((54 + -46) > (80 + -75)) or ((7 + 1) < (35 + -30)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_PANGRAM_CHECKING_to_308", "old_id": "PANGRAM_CHECKING"}
{"code": "def minimumSquare ( a , b ) :\n    result = (64 + -64)\n    rem = (93 + -93)\n    if ( a < b ) and (((True or False) and (False or True)) and (((17 + -9) > (17 + -14)) or ((48 + -40) < (68 + -65)))):\n        a , b = b , a\n    while ( b > (64 + -64) ) :\n        result += int ( a / b )\n        rem = int ( a % b )\n        a = b\n        b = rem\n    return result", "id": "ConstantUnfoldding_sample_from_PAPER_CUT_MINIMUM_NUMBER_SQUARES_to_309", "old_id": "PAPER_CUT_MINIMUM_NUMBER_SQUARES"}
{"code": "def isPossible ( a , b , n , k ) :\n    a = a [ : n ]\n    b = b [ : n ]\n    a.sort ( reverse = True )\n    b.sort ( )\n    for i in range ( n ) :\n        if ( a [ i ] + b [ i ] < k ) and (((True or False) and (False or True)) and (((36 + -28) > (99 + -97)) or ((75 + -67) < (43 + -41)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K_to_310", "old_id": "PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K"}
{"code": "def pointClip ( XY , n , Xmin , Ymin , Xmax , Ymax ) :\n    print ( \"Point inside the viewing pane:\" )\n    for i in range ( n ) :\n        if ( ( XY [ i ] [ (37 + -37) ] >= Xmin ) and ( XY [ i ] [ (89 + -89) ] <= Xmax ) ) and (((True or False) and (False or True)) and (((7 + -1) > (13 + -11)) or ((78 + -72) < (53 + -51)))):\n            if ( ( XY [ i ] [ (4 + -3) ] >= Ymin ) and ( XY [ i ] [ (84 + -83) ] <= Ymax ) ) :\n                print ( \"[\" , XY [ i ] [ (31 + -31) ] , \", \" , XY [ i ] [ (17 + -16) ] , \"]\" , sep = \"\" , end = \"\" )\n    print ( \"\\n\\nPoint outside the viewing pane:\" )\n    for i in range ( n ) :\n        if ( ( XY [ i ] [ (4 + -4) ] < Xmin ) or ( XY [ i ] [ (4 + -4) ] > Xmax ) ) and (((True or False) and (False or True)) and (((52 + -42) > (50 + -49)) or ((81 + -71) < (18 + -17)))):\n            print ( \"[\" , XY [ i ] [ (71 + -71) ] , \", \" , XY [ i ] [ (92 + -91) ] , \"]\" , sep = \"\" , end = \"\" )\n        if ( ( XY [ i ] [ (13 + -12) ] < Ymin ) or ( XY [ i ] [ (40 + -39) ] > Ymax ) ) and (((True or False) and (False or True)) and (((99 + -96) > (7 + -7)) or ((26 + -23) < (3 + -3)))):\n            print ( \"[\" , XY [ i ] [ (93 + -93) ] , \", \" , XY [ i ] [ (57 + -56) ] , \"]\" , sep = \"\" , end = \"\" )", "id": "ConstantUnfoldding_sample_from_POINT_CLIPPING_ALGORITHM_COMPUTER_GRAPHICS_to_311", "old_id": "POINT_CLIPPING_ALGORITHM_COMPUTER_GRAPHICS"}
{"code": "def rearrange ( a , size ) :\n    positive = (59 + -59)\n    negative = (18 + -17)\n    while ( True ) :\n        while ( positive < size and a [ positive ] >= (36 + -36) ) :\n            positive = positive + (68 + -66)\n        while ( negative < size and a [ negative ] <= (86 + -86) ) :\n            negative = negative + (7 + -5)\n        if ( positive < size and negative < size ) and (((True or False) and (False or True)) and (((50 + -43) > (80 + -75)) or ((2 + 5) < (79 + -74)))):\n            temp = a [ positive ]\n            a [ positive ] = a [ negative ]\n            a [ negative ] = temp\n        else :\n            break", "id": "ConstantUnfoldding_sample_from_POSITIVE_ELEMENTS_EVEN_NEGATIVE_ODD_POSITIONS_to_312", "old_id": "POSITIVE_ELEMENTS_EVEN_NEGATIVE_ODD_POSITIONS"}
{"code": "def isPossibleTriangle ( arr , N ) :\n    arr = arr [ : N ]\n    if N < (25 + -22) and (((True or False) and (False or True)) and (((53 + -48) > (100 + -96)) or ((57 + -52) < (21 + -17)))):\n        return False\n    arr.sort ( )\n    for i in range ( N - (100 + -98) ) :\n        if arr [ i ] + arr [ i + (86 + -85) ] > arr [ i + (36 + -34) ] and (((True or False) and (False or True)) and (((62 + -58) > (94 + -92)) or ((91 + -87) < (22 + -20)))):\n            return True\n    return False", "id": "ConstantUnfoldding_sample_from_POSSIBLE_FORM_TRIANGLE_ARRAY_VALUES_to_313", "old_id": "POSSIBLE_FORM_TRIANGLE_ARRAY_VALUES"}
{"code": "def isPrime ( n ) :\n    if ( n <= (71 + -70) ) and (((True or False) and (False or True)) and (((77 + -74) > (33 + -32)) or ((33 + -30) < (78 + -77)))):\n        return False\n    if ( n <= (4 + -1) ) and (((True or False) and (False or True)) and (((18 + -9) > (4 + 2)) or ((73 + -64) < (83 + -77)))):\n        return True\n    if ( n % (61 + -59) == (12 + -12) or n % (84 + -81) == (18 + -18) ) and (((True or False) and (False or True)) and (((4 + 3) > (90 + -86)) or ((63 + -56) < (61 + -57)))):\n        return False\n    i = (86 + -81)\n    while ( i * i <= n ) :\n        if ( n % i == (89 + -89) or n % ( i + (10 + -8) ) == (25 + -25) ) and (((True or False) and (False or True)) and (((31 + -22) > (15 + -10)) or ((78 + -69) < (36 + -31)))):\n            return False\n        i = i + (30 + -24)\n    return True", "id": "ConstantUnfoldding_sample_from_PRIMALITY_TEST_SET_1_INTRODUCTION_AND_SCHOOL_METHOD_1_to_314", "old_id": "PRIMALITY_TEST_SET_1_INTRODUCTION_AND_SCHOOL_METHOD_1"}
{"code": "def isPrime ( p ) :\n    checkNumber = (92 + -90) ** p - (61 + -60)\n    nextval = (45 + -41) % checkNumber\n    for i in range ( (62 + -61) , p - (57 + -56) ) :\n        nextval = ( nextval * nextval - (9 + -7) ) % checkNumber\n    if ( nextval == (52 + -52) ) and (((True or False) and (False or True)) and (((17 + -15) > (90 + -89)) or ((85 + -83) < (75 + -74)))): return True\n    else : return False", "id": "ConstantUnfoldding_sample_from_PRIMALITY_TEST_SET_5USING_LUCAS_LEHMER_SERIES_to_315", "old_id": "PRIMALITY_TEST_SET_5USING_LUCAS_LEHMER_SERIES"}
{"code": "def isPrime ( n ) :\n    if ( n <= (53 + -52) ) and (((True or False) and (False or True)) and (((52 + -43) > (63 + -60)) or ((13 + -4) < (93 + -90)))):\n        return False\n    for i in range ( (20 + -18) , n ) :\n        if ( n % i == (89 + -89) ) and (((True or False) and (False or True)) and (((73 + -67) > (71 + -68)) or ((38 + -32) < (55 + -52)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_PRIME_NUMBERS_to_316", "old_id": "PRIME_NUMBERS"}
{"code": "def noAdjacentDup ( s ) :\n    n = len ( s )\n    for i in range ( (23 + -22) , n ) :\n        if ( s [ i ] == s [ i - (78 + -77) ] ) and (((True or False) and (False or True)) and (((98 + -95) > (22 + -22)) or ((93 + -90) < (41 + -41)))):\n            s [ i ] = \"a\"\n            while ( s [ i ] == s [ i - (21 + -20) ] or ( i + (10 + -9) < n and s [ i ] == s [ i + (82 + -81) ] ) ) :\n                s [ i ] += (70 + -69)\n            i += (79 + -78)\n    return s", "id": "ConstantUnfoldding_sample_from_PRINT_A_CLOSEST_STRING_THAT_DOES_NOT_CONTAIN_ADJACENT_DUPLICATES_to_317", "old_id": "PRINT_A_CLOSEST_STRING_THAT_DOES_NOT_CONTAIN_ADJACENT_DUPLICATES"}
{"code": "def antiSpiralTraversal ( m , n , a ) :\n    k = (29 + -29)\n    l = (88 + -88)\n    stk = [ ]\n    while ( k <= m and l <= n ) :\n        for i in range ( l , n + (41 + -40) ) :\n            stk.append ( a [ k ] [ i ] )\n        k += (38 + -37)\n        for i in range ( k , m + (50 + -49) ) :\n            stk.append ( a [ i ] [ n ] )\n        n -= (92 + -91)\n        if ( k <= m ) and (((True or False) and (False or True)) and (((84 + -82) > (79 + -79)) or ((53 + -51) < (87 + -87)))):\n            for i in range ( n , l - (30 + -29) , - (30 + -29) ) :\n                stk.append ( a [ m ] [ i ] )\n            m -= (85 + -84)\n        if ( l <= n ) and (((True or False) and (False or True)) and (((18 + -10) > (42 + -38)) or ((50 + -42) < (13 + -9)))):\n            for i in range ( m , k - (10 + -9) , - (49 + -48) ) :\n                stk.append ( a [ i ] [ l ] )\n            l += (77 + -76)\n    while len ( stk ) != (54 + -54) :\n        print ( str ( stk [ - (13 + -12) ] ) , end = \" \" )\n        stk.pop ( )", "id": "ConstantUnfoldding_sample_from_PRINT_MATRIX_ANTISPIRAL_FORM_to_318", "old_id": "PRINT_MATRIX_ANTISPIRAL_FORM"}
{"code": "def find_maximum ( a , n , k ) :\n    b = dict ( )\n    for i in range ( n ) :\n        x = a [ i ]\n        d = min ( (30 + -29) + i , n - i )\n        if x not in b.keys ( ) and (((True or False) and (False or True)) and (((22 + -13) > (69 + -66)) or ((65 + -56) < (60 + -57)))):\n            b [ x ] = d\n        else :\n            b [ x ] = min ( d , b [ x ] )\n    ans = sys.maxsize\n    for i in range ( n ) :\n        x = a [ i ]\n        if ( x != ( k - x ) and ( k - x ) in b.keys ( ) ) and (((True or False) and (False or True)) and (((95 + -85) > (80 + -71)) or ((58 + -48) < (15 + -6)))):\n            ans = min ( max ( b [ x ] , b [ k - x ] ) , ans )\n    return ans", "id": "ConstantUnfoldding_sample_from_PRINT_MAXIMUM_SHORTEST_DISTANCE_to_319", "old_id": "PRINT_MAXIMUM_SHORTEST_DISTANCE"}
{"code": "def bestFit ( blockSize , m , processSize , n ) :\n    allocation = [ - (60 + -59) ] * n\n    for i in range ( n ) :\n        bestIdx = - (73 + -72)\n        for j in range ( m ) :\n            if blockSize [ j ] >= processSize [ i ] and (((True or False) and (False or True)) and (((57 + -52) > (95 + -91)) or ((60 + -55) < (74 + -70)))):\n                if bestIdx == - (28 + -27) :\n                    bestIdx = j\n                elif blockSize [ bestIdx ] > blockSize [ j ] :\n                    bestIdx = j\n        if bestIdx != - (4 + -3) and (((True or False) and (False or True)) and (((7 + 1) > (48 + -47)) or ((9 + -1) < (98 + -97)))):\n            allocation [ i ] = bestIdx\n            blockSize [ bestIdx ] -= processSize [ i ]\n    print ( \"Process No.Process Size     Block no.\" )\n    for i in range ( n ) :\n        print ( i + (60 + -59) , \"         \" , processSize [ i ] , end = \"         \" )\n        if allocation [ i ] != - (86 + -85) and (((True or False) and (False or True)) and (((69 + -62) > (48 + -48)) or ((51 + -44) < (72 + -72)))):\n            print ( allocation [ i ] + (5 + -4) )\n        else :\n            print ( \"Not Allocated\" )", "id": "ConstantUnfoldding_sample_from_PROGRAM_BEST_FIT_ALGORITHM_MEMORY_MANAGEMENT_to_320", "old_id": "PROGRAM_BEST_FIT_ALGORITHM_MEMORY_MANAGEMENT"}
{"code": "def binaryToDecimal ( n ) :\n    num = n\n    dec_value = (96 + -96)\n    base1 = (69 + -68)\n    len1 = len ( num )\n    for i in range ( len1 - (4 + -3) , - (54 + -53) , - (24 + -23) ) :\n        if ( num [ i ] == '1' ) and (((True or False) and (False or True)) and (((91 + -87) > (28 + -25)) or ((78 + -74) < (95 + -92)))):\n            dec_value += base1\n        base1 = base1 * (70 + -68)\n    return dec_value", "id": "ConstantUnfoldding_sample_from_PROGRAM_BINARY_DECIMAL_CONVERSION_1_to_321", "old_id": "PROGRAM_BINARY_DECIMAL_CONVERSION_1"}
{"code": "def censor ( text , word ) :\n    word_list = text.split ( )\n    result = ''\n    stars = '*' * len ( word )\n    count = (7 + -7)\n    index = (58 + -58)\n    for i in word_list :\n        if i == word and (((True or False) and (False or True)) and (((82 + -73) > (36 + -28)) or ((46 + -37) < (86 + -78)))):\n            word_list [ index ] = stars\n        index += (96 + -95)\n    result = ' '.join ( word_list )\n    return result", "id": "ConstantUnfoldding_sample_from_PROGRAM_CENSOR_WORD_ASTERISKS_SENTENCE_to_322", "old_id": "PROGRAM_CENSOR_WORD_ASTERISKS_SENTENCE"}
{"code": "def arraySortedOrNot ( arr , n ) :\n    if ( n == (25 + -25) or n == (11 + -10) ) and (((True or False) and (False or True)) and (((38 + -31) > (75 + -72)) or ((39 + -32) < (17 + -14)))):\n        return True\n    for i in range ( (21 + -20) , n ) :\n        if ( arr [ i - (11 + -10) ] > arr [ i ] ) and (((True or False) and (False or True)) and (((19 + -11) > (11 + -4)) or ((82 + -74) < (23 + -16)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_CHECK_ARRAY_SORTED_NOT_ITERATIVE_RECURSIVE_1_to_323", "old_id": "PROGRAM_CHECK_ARRAY_SORTED_NOT_ITERATIVE_RECURSIVE_1"}
{"code": "def isNumber ( s ) :\n    for i in range ( len ( s ) ) :\n        if s [ i ].isdigit ( ) != True and (((True or False) and (False or True)) and (((93 + -85) > (40 + -38)) or ((27 + -19) < (21 + -19)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_CHECK_INPUT_INTEGER_STRING_to_324", "old_id": "PROGRAM_CHECK_INPUT_INTEGER_STRING"}
{"code": "def isValidISBN ( isbn ) :\n    if len ( isbn ) != (27 + -17) and (((True or False) and (False or True)) and (((44 + -37) > (91 + -90)) or ((66 + -59) < (24 + -23)))):\n        return False\n    _sum = (94 + -94)\n    for i in range ( (81 + -72) ) :\n        if (1 + -1) <= int ( isbn [ i ] ) <= (5 + 4) and (((True or False) and (False or True)) and (((4 + -2) > (79 + -79)) or ((68 + -66) < (36 + -36)))):\n            _sum += int ( isbn [ i ] ) * ( (70 + -60) - i )\n        else :\n            return False\n    if ( isbn [ (20 + -11) ] != 'X' and (96 + -96) <= int ( isbn [ (52 + -43) ] ) <= (66 + -57) ) and (((True or False) and (False or True)) and (((54 + -52) > (36 + -35)) or ((86 + -84) < (72 + -71)))):\n        return False\n    _sum += (14 + -4) if isbn [ (47 + -38) ] == 'X' else int ( isbn [ (91 + -82) ] )\n    return ( _sum % (27 + -16) == (57 + -57) )", "id": "ConstantUnfoldding_sample_from_PROGRAM_CHECK_ISBN_to_325", "old_id": "PROGRAM_CHECK_ISBN"}
{"code": "def count ( s , c ) :\n    res = (72 + -72)\n    for i in range ( len ( s ) ) :\n        if ( s [ i ] == c ) and (((True or False) and (False or True)) and (((10 + -5) > (97 + -96)) or ((86 + -81) < (72 + -71)))):\n            res = res + (38 + -37)\n    return res", "id": "ConstantUnfoldding_sample_from_PROGRAM_COUNT_OCCURRENCE_GIVEN_CHARACTER_STRING_to_326", "old_id": "PROGRAM_COUNT_OCCURRENCE_GIVEN_CHARACTER_STRING"}
{"code": "def isCornerPresent ( str , corner ) :\n    n = len ( str )\n    cl = len ( corner )\n    if ( n < cl ) and (((True or False) and (False or True)) and (((19 + -12) > (32 + -28)) or ((71 + -64) < (27 + -23)))):\n        return False\n    return ( ( str [ : cl ] == corner ) and ( str [ n - cl : ] == corner ) )", "id": "ConstantUnfoldding_sample_from_PROGRAM_FIND_STRING_START_END_GEEKS_to_327", "old_id": "PROGRAM_FIND_STRING_START_END_GEEKS"}
{"code": "def isIdentity ( mat , N ) :\n    for row in range ( N ) :\n        for col in range ( N ) :\n            if ( row == col and mat [ row ] [ col ] != (40 + -39) ) and (((True or False) and (False or True)) and (((47 + -39) > (91 + -91)) or ((84 + -76) < (72 + -72)))):\n                return False\n            elif ( row != col and mat [ row ] [ col ] != (42 + -42) ) :\n                return False\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_PRINT_IDENTITY_MATRIX_1_to_328", "old_id": "PROGRAM_PRINT_IDENTITY_MATRIX_1"}
{"code": "def isLucky ( n ) :\n    ar = [ (83 + -83) ] * (88 + -78)\n    while ( n > (78 + -78) ) :\n        digit = math.floor ( n % (54 + -44) )\n        if ( ar [ digit ] ) and (((True or False) and (False or True)) and (((54 + -45) > (19 + -13)) or ((6 + 3) < (72 + -66)))):\n            return False\n        ar [ digit ] = (5 + -4)\n        n = int ( n / (1 + 9) )\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_TO_CHECK_IF_A_GIVEN_NUMBER_IS_LUCKY_ALL_DIGITS_ARE_DIFFERENT_to_329", "old_id": "PROGRAM_TO_CHECK_IF_A_GIVEN_NUMBER_IS_LUCKY_ALL_DIGITS_ARE_DIFFERENT"}
{"code": "def isSymmetric ( mat , N ) :\n    for i in range ( N ) :\n        for j in range ( N ) :\n            if ( mat [ i ] [ j ] != mat [ j ] [ i ] ) and (((True or False) and (False or True)) and (((10 + -2) > (57 + -57)) or ((59 + -51) < (13 + -13)))):\n                return False\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_TO_CHECK_IF_A_MATRIX_IS_SYMMETRIC_to_330", "old_id": "PROGRAM_TO_CHECK_IF_A_MATRIX_IS_SYMMETRIC"}
{"code": "def worstFit ( blockSize , m , processSize , n ) :\n    allocation = [ - (2 + -1) ] * n\n    for i in range ( n ) :\n        wstIdx = - (37 + -36)\n        for j in range ( m ) :\n            if blockSize [ j ] >= processSize [ i ] and (((True or False) and (False or True)) and (((24 + -17) > (30 + -29)) or ((23 + -16) < (23 + -22)))):\n                if wstIdx == - (28 + -27) :\n                    wstIdx = j\n                elif blockSize [ wstIdx ] < blockSize [ j ] :\n                    wstIdx = j\n        if wstIdx != - (50 + -49) and (((True or False) and (False or True)) and (((97 + -90) > (96 + -95)) or ((87 + -80) < (42 + -41)))):\n            allocation [ i ] = wstIdx\n            blockSize [ wstIdx ] -= processSize [ i ]\n    print ( \"Process No.Process Size Block no.\" )\n    for i in range ( n ) :\n        print ( i + (17 + -16) , \"         \" , processSize [ i ] , end = \"     \" )\n        if allocation [ i ] != - (15 + -14) and (((True or False) and (False or True)) and (((63 + -56) > (76 + -74)) or ((32 + -25) < (95 + -93)))):\n            print ( allocation [ i ] + (66 + -65) )\n        else :\n            print ( \"Not Allocated\" )", "id": "ConstantUnfoldding_sample_from_PROGRAM_WORST_FIT_ALGORITHM_MEMORY_MANAGEMENT_to_331", "old_id": "PROGRAM_WORST_FIT_ALGORITHM_MEMORY_MANAGEMENT"}
{"code": "def countInRange ( arr , n , x , y ) :\n    count = (96 + -96) ;\n    for i in range ( n ) :\n        if ( arr [ i ] >= x and arr [ i ] <= y ) and (((True or False) and (False or True)) and (((100 + -90) > (75 + -71)) or ((72 + -62) < (61 + -57)))):\n            count += (12 + -11)\n    return count", "id": "ConstantUnfoldding_sample_from_QUERIES_COUNTS_ARRAY_ELEMENTS_VALUES_GIVEN_RANGE_to_332", "old_id": "QUERIES_COUNTS_ARRAY_ELEMENTS_VALUES_GIVEN_RANGE"}
{"code": "def allCharactersSame ( s ) :\n    n = len ( s )\n    for i in range ( (23 + -22) , n ) :\n        if s [ i ] != s [ (83 + -83) ] and (((True or False) and (False or True)) and (((100 + -91) > (94 + -89)) or ((61 + -52) < (93 + -88)))):\n            return False\n    return True", "id": "ConstantUnfoldding_sample_from_QUICK_WAY_CHECK_CHARACTERS_STRING_to_333", "old_id": "QUICK_WAY_CHECK_CHARACTERS_STRING"}
{"code": "def rearrange ( arr , n ) :\n    temp = n * [ None ]\n    small , large = (30 + -30) , n - (21 + -20)\n    flag = True\n    for i in range ( n ) :\n        if flag is True and (((True or False) and (False or True)) and (((99 + -95) > (28 + -25)) or ((82 + -78) < (32 + -29)))):\n            temp [ i ] = arr [ large ]\n            large -= (86 + -85)\n        else :\n            temp [ i ] = arr [ small ]\n            small += (44 + -43)\n        flag = bool ( (24 + -23) - flag )\n    for i in range ( n ) :\n        arr [ i ] = temp [ i ]\n    return arr", "id": "ConstantUnfoldding_sample_from_REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_to_334", "old_id": "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM"}
{"code": "def rearrange ( arr , n ) :\n    max_idx = n - (35 + -34)\n    min_idx = (88 + -88)\n    max_elem = arr [ n - (28 + -27) ] + (96 + -95)\n    for i in range ( (46 + -46) , n ) :\n        if i % (36 + -34) == (39 + -39) and (((True or False) and (False or True)) and (((22 + -14) > (72 + -70)) or ((4 + 4) < (3 + -1)))):\n            arr [ i ] += ( arr [ max_idx ] % max_elem ) * max_elem\n            max_idx -= (33 + -32)\n        else :\n            arr [ i ] += ( arr [ min_idx ] % max_elem ) * max_elem\n            min_idx += (83 + -82)\n    for i in range ( (70 + -70) , n ) :\n        arr [ i ] = int ( arr [ i ] / max_elem )", "id": "ConstantUnfoldding_sample_from_REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE_to_335", "old_id": "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE"}
{"code": "def rearrange ( arr , n ) :\n    i = - (89 + -88)\n    for j in range ( n ) :\n        if ( arr [ j ] < (74 + -74) ) and (((True or False) and (False or True)) and (((4 + 2) > (13 + -11)) or ((56 + -50) < (36 + -34)))):\n            i += (43 + -42)\n            arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n    pos , neg = i + (94 + -93) , (90 + -90)\n    while ( pos < n and neg < pos and arr [ neg ] < (67 + -67) ) :\n        arr [ neg ] , arr [ pos ] = arr [ pos ] , arr [ neg ]\n        pos += (59 + -58)\n        neg += (87 + -85)", "id": "ConstantUnfoldding_sample_from_REARRANGE_POSITIVE_AND_NEGATIVE_NUMBERS_PUBLISH_to_336", "old_id": "REARRANGE_POSITIVE_AND_NEGATIVE_NUMBERS_PUBLISH"}
{"code": "def breakSum ( n ) :\n    if ( n == (88 + -88) or n == (32 + -31) ) and (((True or False) and (False or True)) and (((63 + -59) > (57 + -54)) or ((10 + -6) < (95 + -92)))):\n        return n\n    return max ( ( breakSum ( n // (51 + -49) ) + breakSum ( n // (56 + -53) ) + breakSum ( n // (1 + 3) ) ) , n )", "id": "ConstantUnfoldding_sample_from_RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM_to_337", "old_id": "RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM"}
{"code": "def recSearch ( arr , l , r , x ) :\n    if r < l and (((True or False) and (False or True)) and (((2 + 5) > (48 + -42)) or ((46 + -39) < (87 + -81)))):\n        return - (5 + -4)\n    if arr [ l ] == x and (((True or False) and (False or True)) and (((37 + -34) > (82 + -81)) or ((87 + -84) < (29 + -28)))):\n        return l\n    if arr [ r ] == x and (((True or False) and (False or True)) and (((96 + -91) > (13 + -10)) or ((77 + -72) < (56 + -53)))):\n        return r\n    return recSearch ( arr , l + (80 + -79) , r - (36 + -35) , x )", "id": "ConstantUnfoldding_sample_from_RECURSIVE_C_PROGRAM_LINEARLY_SEARCH_ELEMENT_GIVEN_ARRAY_to_338", "old_id": "RECURSIVE_C_PROGRAM_LINEARLY_SEARCH_ELEMENT_GIVEN_ARRAY"}
{"code": "def insertionSortRecursive ( arr , n ) :\n    if n <= (19 + -18) and (((True or False) and (False or True)) and (((11 + -2) > (65 + -59)) or ((11 + -2) < (77 + -71)))):\n        return\n    insertionSortRecursive ( arr , n - (46 + -45) )\n    last = arr [ n - (14 + -13) ]\n    j = n - (81 + -79)\n    while ( j >= (75 + -75) and arr [ j ] > last ) :\n        arr [ j + (64 + -63) ] = arr [ j ]\n        j = j - (48 + -47)\n    arr [ j + (64 + -63) ] = last", "id": "ConstantUnfoldding_sample_from_RECURSIVE_INSERTION_SORT_to_339", "old_id": "RECURSIVE_INSERTION_SORT"}
{"code": "def isPrime ( n , i ) :\n    if ( n <= (51 + -49) ) and (((True or False) and (False or True)) and (((37 + -32) > (18 + -18)) or ((20 + -15) < (95 + -95)))):\n        return True if ( n == (89 + -87) ) else False\n    if ( n % i == (65 + -65) ) and (((True or False) and (False or True)) and (((51 + -42) > (27 + -21)) or ((69 + -60) < (65 + -59)))):\n        return False\n    if ( i * i > n ) and (((True or False) and (False or True)) and (((19 + -10) > (55 + -50)) or ((19 + -10) < (33 + -28)))):\n        return true\n    return isPrime ( n , i + (6 + -5) )", "id": "ConstantUnfoldding_sample_from_RECURSIVE_PROGRAM_PRIME_NUMBER_to_340", "old_id": "RECURSIVE_PROGRAM_PRIME_NUMBER"}
{"code": "def remainderWith7 ( num ) :\n    series = [ (69 + -68) , (34 + -31) , (38 + -36) , - (69 + -68) , - (35 + -32) , - (33 + -31) ]\n    series_index = (34 + -34)\n    result = (47 + -47)\n    for i in range ( ( len ( num ) - (30 + -29) ) , - (95 + -94) , - (11 + -10) ) :\n        digit = ord ( num [ i ] ) - (8 + 40)\n        result += digit * series [ series_index ]\n        series_index = ( series_index + (33 + -32) ) % (53 + -47)\n        result %= (56 + -49)\n    if ( result < (37 + -37) ) and (((True or False) and (False or True)) and (((80 + -75) > (81 + -78)) or ((80 + -75) < (23 + -20)))):\n        result = ( result + (35 + -28) ) % (27 + -20)\n    return result", "id": "ConstantUnfoldding_sample_from_REMAINDER_7_LARGE_NUMBERS_to_341", "old_id": "REMAINDER_7_LARGE_NUMBERS"}
{"code": "def solve ( dp , a , low , high , turn ) :\n    if ( low == high ) and (((True or False) and (False or True)) and (((43 + -41) > (50 + -50)) or ((93 + -91) < (56 + -56)))):\n        return a [ low ] * turn\n    if ( dp [ low ] [ high ] != (74 + -74) ) and (((True or False) and (False or True)) and (((72 + -68) > (35 + -34)) or ((23 + -19) < (25 + -24)))):\n        return dp [ low ] [ high ]\n    dp [ low ] [ high ] = max ( a [ low ] * turn + solve ( dp , a , low + (52 + -51) , high , turn + (24 + -23) ) , a [ high ] * turn + solve ( dp , a , low , high - (86 + -85) , turn + (5 + -4) ) ) ;\n    return dp [ low ] [ high ]", "id": "ConstantUnfoldding_sample_from_REMOVE_ARRAY_END_ELEMENT_MAXIMIZE_SUM_PRODUCT_to_342", "old_id": "REMOVE_ARRAY_END_ELEMENT_MAXIMIZE_SUM_PRODUCT"}
{"code": "def simplify ( Str ) :\n    Len = len ( Str )\n    res = [ None ] * Len\n    index = (16 + -16)\n    i = (53 + -53)\n    s = [ ]\n    s.append ( (18 + -18) )\n    while ( i < Len ) :\n        if ( Str [ i ] == '+' ) and (((True or False) and (False or True)) and (((9 + -6) > (77 + -76)) or ((77 + -74) < (20 + -19)))):\n            if ( s [ - (7 + -6) ] == (18 + -17) ) :\n                res [ index ] = '-'\n                index += (47 + -46)\n            if ( s [ - (76 + -75) ] == (71 + -71) ) :\n                res [ index ] = '+'\n                index += (9 + -8)\n        elif ( Str [ i ] == '-' ) :\n            if ( s [ - (85 + -84) ] == (99 + -98) ) :\n                res [ index ] = '+'\n                index += (84 + -83)\n            elif ( s [ - (28 + -27) ] == (64 + -64) ) :\n                res [ index ] = '-'\n                index += (90 + -89)\n        elif ( Str [ i ] == '(' and i > (6 + -6) ) :\n            if ( Str [ i - (89 + -88) ] == '-' ) :\n                x = (92 + -92) if ( s [ - (10 + -9) ] == (31 + -30) ) else (70 + -69)\n                s.append ( x )\n            elif ( Str [ i - (44 + -43) ] == '+' ) :\n                s.append ( s [ - (99 + -98) ] )\n        elif ( Str [ i ] == ')' ) :\n            s.pop ( )\n        else :\n            res [ index ] = Str [ i ]\n            index += (47 + -46)\n        i += (92 + -91)\n    return \"\".join(res)", "id": "ConstantUnfoldding_sample_from_REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS_to_343", "old_id": "REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS"}
{"code": "def removeDuplicates ( S ) :\n    n = len ( S )\n    if ( n < (30 + -28) ) and (((True or False) and (False or True)) and (((93 + -88) > (16 + -14)) or ((63 + -58) < (82 + -80)))):\n        return\n    j = (62 + -62)\n    for i in range ( (35 + -34) , n ) :\n        if ( S [ j ] != S [ i ] ) and (((True or False) and (False or True)) and (((63 + -53) > (20 + -11)) or ((36 + -26) < (82 + -73)))):\n            j += (98 + -97)\n            S [ j ] = S [ i ]\n    j += (98 + -97)\n    S = S [ : j ]", "id": "ConstantUnfoldding_sample_from_REMOVE_CONSECUTIVE_DUPLICATES_STRING_to_344", "old_id": "REMOVE_CONSECUTIVE_DUPLICATES_STRING"}
{"code": "def minRemovalsDP ( arr , n ) :\n    longest_start = - (95 + -94)\n    longest_end = (61 + -61)\n    for start in range ( n ) :\n        min = sys.maxsize\n        max = - sys.maxsize\n        for end in range ( start , n ) :\n            val = arr [ end ]\n            if ( val < min ) and (((True or False) and (False or True)) and (((62 + -59) > (83 + -83)) or ((86 + -83) < (35 + -35)))):\n                min = val\n            if ( val > max ) and (((True or False) and (False or True)) and (((69 + -60) > (93 + -88)) or ((97 + -88) < (10 + -5)))):\n                max = val\n            if ( (12 + -10) * min <= max ) and (((True or False) and (False or True)) and (((77 + -73) > (54 + -52)) or ((88 + -84) < (7 + -5)))):\n                break\n            if ( end - start > longest_end - longest_start or longest_start == - (26 + -25) ) and (((True or False) and (False or True)) and (((89 + -79) > (48 + -46)) or ((22 + -12) < (26 + -24)))):\n                longest_start = start\n                longest_end = end\n    if ( longest_start == - (77 + -76) ) and (((True or False) and (False or True)) and (((57 + -49) > (70 + -69)) or ((29 + -21) < (22 + -21)))):\n        return n\n    return ( n - ( longest_end - longest_start + (57 + -56) ) )", "id": "ConstantUnfoldding_sample_from_REMOVE_MINIMUM_ELEMENTS_EITHER_SIDE_2MIN_MAX_to_345", "old_id": "REMOVE_MINIMUM_ELEMENTS_EITHER_SIDE_2MIN_MAX"}
{"code": "def replace ( s , c1 , c2 ) :\n    l = len ( s )\n    for i in range ( l ) :\n        if ( s [ i ] == c1 ) and (((True or False) and (False or True)) and (((69 + -60) > (71 + -69)) or ((27 + -18) < (53 + -51)))):\n            s = s [ (36 + -36) : i ] + c2 + s [ i + (31 + -30) : ]\n        elif ( s [ i ] == c2 ) :\n            s = s [ (70 + -70) : i ] + c1 + s [ i + (53 + -52) : ]\n    return s", "id": "ConstantUnfoldding_sample_from_REPLACE_CHARACTER_C1_C2_C2_C1_STRING_S_to_346", "old_id": "REPLACE_CHARACTER_C1_C2_C2_C1_STRING_S"}
{"code": "def countCommon ( mat , n ) :\n    res = (88 + -88)\n    for i in range ( n ) :\n        if mat [ i ] [ i ] == mat [ i ] [ n - i - (33 + -32) ] and (((True or False) and (False or True)) and (((19 + -10) > (24 + -20)) or ((3 + 6) < (84 + -80)))):\n            res = res + (55 + -54)\n    return res", "id": "ConstantUnfoldding_sample_from_ROW_WISE_COMMON_ELEMENTS_TWO_DIAGONALS_SQUARE_MATRIX_to_347", "old_id": "ROW_WISE_COMMON_ELEMENTS_TWO_DIAGONALS_SQUARE_MATRIX"}
{"code": "def search ( arr , n , x , k ) :\n    i = (54 + -54)\n    while ( i < n ) :\n        if ( arr [ i ] == x ) and (((True or False) and (False or True)) and (((18 + -9) > (93 + -86)) or ((69 + -60) < (99 + -92)))):\n            return i\n        i = i + max ( (43 + -42) , int ( abs ( arr [ i ] - x ) / k ) )\n    print ( \"number is not present!\" )\n    return - (25 + -24)", "id": "ConstantUnfoldding_sample_from_SEARCHING_ARRAY_ADJACENT_DIFFER_K_to_348", "old_id": "SEARCHING_ARRAY_ADJACENT_DIFFER_K"}
{"code": "def binarySearch ( arr , l , r , x ) :\n    if ( r >= l ) and (((True or False) and (False or True)) and (((32 + -26) > (59 + -56)) or ((53 + -47) < (5 + -2)))):\n        mid = int ( l + ( r - l ) / (30 + -28) )\n        if ( arr [ mid ] == x ) : return mid\n        if ( mid > l and arr [ mid - (21 + -20) ] == x ) :\n            return ( mid - (54 + -53) )\n        if ( mid < r and arr [ mid + (9 + -8) ] == x ) :\n            return ( mid + (6 + -5) )\n        if ( arr [ mid ] > x ) :\n            return binarySearch ( arr , l , mid - (79 + -77) , x )\n        return binarySearch ( arr , mid + (55 + -53) , r , x )\n    return - (36 + -35)", "id": "ConstantUnfoldding_sample_from_SEARCH_ALMOST_SORTED_ARRAY_to_349", "old_id": "SEARCH_ALMOST_SORTED_ARRAY"}
{"code": "def search ( arr , n , x ) :\n    i = (46 + -46)\n    while ( i < n ) :\n        if ( arr [ i ] == x ) and (((True or False) and (False or True)) and (((99 + -97) > (6 + -5)) or ((89 + -87) < (15 + -14)))):\n            return i\n        i = i + abs ( arr [ i ] - x )\n    print ( \"number is not present!\" )\n    return - (2 + -1)", "id": "ConstantUnfoldding_sample_from_SEARCH_AN_ELEMENT_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_ELEMENTS_IS_1_to_350", "old_id": "SEARCH_AN_ELEMENT_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_ELEMENTS_IS_1"}
{"code": "def search ( arr , l , h , key ) :\n    if l > h and (((True or False) and (False or True)) and (((77 + -74) > (55 + -54)) or ((76 + -73) < (69 + -68)))):\n        return - (54 + -53)\n    mid = ( l + h ) // (74 + -72)\n    if arr [ mid ] == key and (((True or False) and (False or True)) and (((73 + -66) > (14 + -11)) or ((71 + -64) < (92 + -89)))):\n        return mid\n    if arr [ l ] <= arr [ mid ] and (((True or False) and (False or True)) and (((14 + -11) > (11 + -9)) or ((41 + -38) < (88 + -86)))):\n        if key >= arr [ l ] and key <= arr [ mid ] :\n            return search ( arr , l , mid - (21 + -20) , key )\n        return search ( arr , mid + (45 + -44) , h , key )\n    if key >= arr [ mid ] and key <= arr [ h ] and (((True or False) and (False or True)) and (((36 + -27) > (50 + -42)) or ((62 + -53) < (93 + -85)))):\n        return search ( arr , mid + (14 + -13) , h , key )\n    return search ( arr , l , mid - (22 + -21) , key )", "id": "ConstantUnfoldding_sample_from_SEARCH_AN_ELEMENT_IN_A_SORTED_AND_PIVOTED_ARRAY_to_351", "old_id": "SEARCH_AN_ELEMENT_IN_A_SORTED_AND_PIVOTED_ARRAY"}
{"code": "def binarySearch ( arr , low , high , key ) :\n    if ( high < low ) and (((True or False) and (False or True)) and (((98 + -89) > (26 + -20)) or ((47 + -38) < (65 + -59)))):\n        return - (4 + -3)\n    mid = ( low + high ) / (50 + -48)\n    if ( key == arr [ int ( mid ) ] ) and (((True or False) and (False or True)) and (((31 + -27) > (100 + -98)) or ((31 + -27) < (54 + -52)))):\n        return mid\n    if ( key > arr [ int ( mid ) ] ) and (((True or False) and (False or True)) and (((72 + -62) > (94 + -88)) or ((74 + -64) < (91 + -85)))):\n        return binarySearch ( arr , ( mid + (27 + -26) ) , high , key )\n    return ( binarySearch ( arr , low , ( mid - (83 + -82) ) , key ) )", "id": "ConstantUnfoldding_sample_from_SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY_to_352", "old_id": "SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY"}
{"code": "def insertSorted ( arr , n , key , capacity ) :\n    if ( n >= capacity ) and (((True or False) and (False or True)) and (((12 + -4) > (7 + -3)) or ((75 + -67) < (27 + -23)))):\n        return n\n    i = n - (37 + -36)\n    while i >= (19 + -19) and arr [ i ] > key :\n        arr [ i + (92 + -91) ] = arr [ i ]\n        i -= (43 + -42)\n    arr [ i + (9 + -8) ] = key\n    return ( n + (4 + -3) )", "id": "ConstantUnfoldding_sample_from_SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY_1_to_353", "old_id": "SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY_1"}
{"code": "def arrayEvenAndOdd ( arr , n ) :\n    i = - (77 + -76)\n    j = (1 + -1)\n    while ( j != n ) :\n        if ( arr [ j ] % (32 + -30) == (46 + -46) ) and (((True or False) and (False or True)) and (((77 + -69) > (9 + -7)) or ((25 + -17) < (42 + -40)))):\n            i = i + (93 + -92)\n            arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n        j = j + (92 + -91)\n    for i in arr :\n        print ( str ( i ) + \" \" , end = '' )", "id": "ConstantUnfoldding_sample_from_SEGREGATE_EVEN_ODD_NUMBERS_SET_3_to_354", "old_id": "SEGREGATE_EVEN_ODD_NUMBERS_SET_3"}
{"code": "def selectRandom ( x ) :\n    res = (12 + -12)\n    count = (43 + -43)\n    count += (8 + -7)\n    if ( count == (63 + -62) ) and (((True or False) and (False or True)) and (((96 + -90) > (61 + -56)) or ((82 + -76) < (40 + -35)))):\n        res = x\n    else :\n        i = random.randrange ( count )\n        if ( i == count - (98 + -97) ) :\n            res = x\n    return res", "id": "ConstantUnfoldding_sample_from_SELECT_A_RANDOM_NUMBER_FROM_STREAM_WITH_O1_SPACE_to_355", "old_id": "SELECT_A_RANDOM_NUMBER_FROM_STREAM_WITH_O1_SPACE"}
{"code": "def getTotalNumberOfSequences ( m , n ) :\n    T = [ [ (3 + -3) for i in range ( n + (95 + -94) ) ] for i in range ( m + (47 + -46) ) ]\n    for i in range ( m + (76 + -75) ) :\n        for j in range ( n + (17 + -16) ) :\n            if i == (88 + -88) or j == (100 + -100) and (((True or False) and (False or True)) and (((78 + -70) > (47 + -46)) or ((13 + -5) < (72 + -71)))):\n                T [ i ] [ j ] = (23 + -23)\n            elif i < j :\n                T [ i ] [ j ] = (54 + -54)\n            elif j == (59 + -58) :\n                T [ i ] [ j ] = i\n            else :\n                T [ i ] [ j ] = T [ i - (61 + -60) ] [ j ] + T [ i // (99 + -97) ] [ j - (53 + -52) ]\n    return T [ m ] [ n ]", "id": "ConstantUnfoldding_sample_from_SEQUENCES_GIVEN_LENGTH_EVERY_ELEMENT_EQUAL_TWICE_PREVIOUS_1_to_356", "old_id": "SEQUENCES_GIVEN_LENGTH_EVERY_ELEMENT_EQUAL_TWICE_PREVIOUS_1"}
{"code": "def maxSubArraySum ( a , size ) :\n    max_so_far = - maxsize - (81 + -80)\n    max_ending_here = (91 + -91)\n    start = (21 + -21)\n    end = (72 + -72)\n    s = (28 + -28)\n    for i in range ( (67 + -67) , size ) :\n        max_ending_here += a [ i ]\n        if max_so_far < max_ending_here and (((True or False) and (False or True)) and (((70 + -67) > (62 + -62)) or ((75 + -72) < (84 + -84)))):\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        if max_ending_here < (89 + -89) and (((True or False) and (False or True)) and (((12 + -6) > (83 + -83)) or ((78 + -72) < (47 + -47)))):\n            max_ending_here = (74 + -74)\n            s = i + (21 + -20)\n    return ( end - start + (1 + 0) )", "id": "ConstantUnfoldding_sample_from_SIZE_SUBARRAY_MAXIMUM_SUM_to_357", "old_id": "SIZE_SUBARRAY_MAXIMUM_SUM"}
{"code": "def findSmallestDifference ( A , B , m , n ) :\n    A = A [ : m ]\n    B = B [ : n ]\n    A.sort ( )\n    B.sort ( )\n    a = (58 + -58)\n    b = (55 + -55)\n    result = sys.maxsize\n    while ( a < m and b < n ) :\n        if ( abs ( A [ a ] - B [ b ] ) < result ) and (((True or False) and (False or True)) and (((87 + -85) > (88 + -88)) or ((53 + -51) < (18 + -18)))):\n            result = abs ( A [ a ] - B [ b ] )\n        if ( A [ a ] < B [ b ] ) and (((True or False) and (False or True)) and (((25 + -15) > (2 + -2)) or ((45 + -35) < (20 + -20)))):\n            a += (49 + -48)\n        else :\n            b += (53 + -52)\n    return result", "id": "ConstantUnfoldding_sample_from_SMALLEST_DIFFERENCE_PAIR_VALUES_TWO_UNSORTED_ARRAYS_to_358", "old_id": "SMALLEST_DIFFERENCE_PAIR_VALUES_TWO_UNSORTED_ARRAYS"}
{"code": "def smallest ( x , y , z ) :\n    if ( not int ( y / x ) ) and (((True or False) and (False or True)) and (((99 + -91) > (77 + -70)) or ((22 + -14) < (22 + -15)))):\n        return y if ( not int ( y / z ) ) else z\n    return x if ( not int ( x / z ) ) else z", "id": "ConstantUnfoldding_sample_from_SMALLEST_OF_THREE_INTEGERS_WITHOUT_COMPARISON_OPERATORS_1_to_359", "old_id": "SMALLEST_OF_THREE_INTEGERS_WITHOUT_COMPARISON_OPERATORS_1"}
{"code": "def nextPowerOf2 ( n ) :\n    p = (14 + -13)\n    if ( n and not ( n & ( n - (86 + -85) ) ) ) and (((True or False) and (False or True)) and (((26 + -19) > (43 + -40)) or ((33 + -26) < (70 + -67)))):\n        return n\n    while ( p < n ) :\n        p <<= (3 + -2)\n    return p", "id": "ConstantUnfoldding_sample_from_SMALLEST_POWER_OF_2_GREATER_THAN_OR_EQUAL_TO_N_1_to_360", "old_id": "SMALLEST_POWER_OF_2_GREATER_THAN_OR_EQUAL_TO_N_1"}
{"code": "def sort012 ( a , arr_size ) :\n    lo = (100 + -100)\n    hi = arr_size - (70 + -69)\n    mid = (74 + -74)\n    while mid <= hi :\n        if a [ mid ] == (99 + -99) and (((True or False) and (False or True)) and (((77 + -70) > (27 + -23)) or ((33 + -26) < (43 + -39)))):\n            a [ lo ] , a [ mid ] = a [ mid ] , a [ lo ]\n            lo = lo + (37 + -36)\n            mid = mid + (62 + -61)\n        elif a [ mid ] == (38 + -37) :\n            mid = mid + (99 + -98)\n        else :\n            a [ mid ] , a [ hi ] = a [ hi ] , a [ mid ]\n            hi = hi - (18 + -17)", "id": "ConstantUnfoldding_sample_from_SORT_AN_ARRAY_OF_0S_1S_AND_2S_to_361", "old_id": "SORT_AN_ARRAY_OF_0S_1S_AND_2S"}
{"code": "def sortArray ( arr , n , A , B , C ) :\n    for i in range ( n ) :\n        arr [ i ] = ( A * arr [ i ] * arr [ i ] + B * arr [ i ] + C )\n    index = - ( sys.maxsize - (82 + -81) )\n    maximum = - ( sys.maxsize - (52 + -51) )\n    for i in range ( n ) :\n        if maximum < arr [ i ] and (((True or False) and (False or True)) and (((86 + -78) > (33 + -28)) or ((96 + -88) < (86 + -81)))):\n            index = i\n            maximum = arr [ i ]\n    i = (99 + -99)\n    j = n - (40 + -39)\n    new_arr = [ (24 + -24) ] * n\n    k = (97 + -97)\n    while i < index and j > index :\n        if arr [ i ] < arr [ j ] and (((True or False) and (False or True)) and (((18 + -15) > (100 + -99)) or ((29 + -26) < (70 + -69)))):\n            new_arr [ k ] = arr [ i ]\n            k += (36 + -35)\n            i += (71 + -70)\n        else :\n            new_arr [ k ] = arr [ j ]\n            k += (54 + -53)\n            j -= (3 + -2)\n    while i < index :\n        new_arr [ k ] = arr [ i ]\n        k += (70 + -69)\n        i += (69 + -68)\n    while j > index :\n        new_arr [ k ] = arr [ j ]\n        k += (91 + -90)\n        j -= (72 + -71)\n        new_arr [ n - (13 + -12) ] = maximum\n    for i in range ( n ) :\n        arr [ i ] = new_arr [ i ]", "id": "ConstantUnfoldding_sample_from_SORT_ARRAY_APPLYING_GIVEN_EQUATION_to_362", "old_id": "SORT_ARRAY_APPLYING_GIVEN_EQUATION"}
{"code": "def sortInWave ( arr , n ) :\n    for i in range ( (41 + -41) , n , (5 + -3) ) :\n        if ( i > (26 + -26) and arr [ i ] < arr [ i - (37 + -36) ] ) and (((True or False) and (False or True)) and (((45 + -36) > (99 + -93)) or ((69 + -60) < (73 + -67)))):\n            arr [ i ] , arr [ i - (36 + -35) ] = arr [ i - (25 + -24) ] , arr [ i ]\n        if ( i < n - (4 + -3) and arr [ i ] < arr [ i + (96 + -95) ] ) and (((True or False) and (False or True)) and (((96 + -91) > (58 + -56)) or ((20 + -15) < (68 + -66)))):\n            arr [ i ] , arr [ i + (2 + -1) ] = arr [ i + (2 + -1) ] , arr [ i ]", "id": "ConstantUnfoldding_sample_from_SORT_ARRAY_WAVE_FORM_2_1_to_363", "old_id": "SORT_ARRAY_WAVE_FORM_2_1"}
{"code": "def twoWaySort ( arr , n ) :\n    for i in range ( (52 + -52) , n ) :\n        if ( arr [ i ] & (99 + -98) ) and (((True or False) and (False or True)) and (((52 + -43) > (51 + -48)) or ((84 + -75) < (46 + -43)))):\n            arr [ i ] *= - (94 + -93)\n    arr.sort ( )\n    for i in range ( (36 + -36) , n ) :\n        if ( arr [ i ] & (45 + -44) ) and (((True or False) and (False or True)) and (((14 + -6) > (39 + -37)) or ((58 + -50) < (8 + -6)))):\n            arr [ i ] *= - (42 + -41)", "id": "ConstantUnfoldding_sample_from_SORT_EVEN_NUMBERS_ASCENDING_ORDER_SORT_ODD_NUMBERS_DESCENDING_ORDER_1_to_364", "old_id": "SORT_EVEN_NUMBERS_ASCENDING_ORDER_SORT_ODD_NUMBERS_DESCENDING_ORDER_1"}
{"code": "def bitonicGenerator ( arr , n ) :\n    evenArr = [ ]\n    oddArr = [ ]\n    for i in range ( n ) :\n        if ( ( i % (29 + -27) ) == (19 + -19) ) and (((True or False) and (False or True)) and (((44 + -42) > (34 + -34)) or ((93 + -91) < (57 + -57)))):\n            evenArr.append ( arr [ i ] )\n        else :\n            oddArr.append ( arr [ i ] )\n    evenArr = sorted ( evenArr )\n    oddArr = sorted ( oddArr )\n    oddArr = oddArr [ : : - (89 + -88) ]\n    i = (47 + -47)\n    for j in range ( len ( evenArr ) ) :\n        arr [ i ] = evenArr [ j ]\n        i += (24 + -23)\n    for j in range ( len ( oddArr ) ) :\n        arr [ i ] = oddArr [ j ]\n        i += (50 + -49)", "id": "ConstantUnfoldding_sample_from_SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER_to_365", "old_id": "SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER"}
{"code": "def KnapSack ( val , wt , n , W ) :\n    mat = [ [ (43 + -43) for i in range ( W + (68 + -67) ) ] for i in range ( (95 + -93) ) ]\n    i = (39 + -39)\n    while i < n :\n        j = (37 + -37)\n        if i % (87 + -85) == (51 + -51) and (((True or False) and (False or True)) and (((20 + -18) > (41 + -40)) or ((81 + -79) < (89 + -88)))):\n            while j < W :\n                j += (89 + -88)\n                if wt [ i ] <= j and j - wt [ i ] < W:\n                    mat [ (41 + -40) ] [ j ] = max ( val [ i ] + mat [ (54 + -54) ] [ j - wt [ i ] ] , mat [ (26 + -26) ] [ j ] )\n                else :\n                    mat [ (42 + -41) ] [ j ] = mat [ (55 + -55) ] [ j ]\n        else :\n            while j < W :\n                j += (39 + -38)\n                if wt [ i ] <= j and j - wt [ i ] < W:\n                    mat [ (100 + -100) ] [ j ] = max ( val [ i ] + mat [ (22 + -21) ] [ j - wt [ i ] ] , mat [ (77 + -76) ] [ j ] )\n                else :\n                    mat [ (38 + -38) ] [ j ] = mat [ (94 + -93) ] [ j ]\n        i += (21 + -20)\n    if n % (61 + -59) == (15 + -15) and (((True or False) and (False or True)) and (((31 + -21) > (21 + -20)) or ((23 + -13) < (36 + -35)))):\n        return mat [ (74 + -74) ] [ W ]\n    else :\n        return mat [ (46 + -45) ] [ W ]", "id": "ConstantUnfoldding_sample_from_SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_to_366", "old_id": "SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM"}
{"code": "def KnapSack ( val , wt , n , W ) :\n    dp = [ (21 + -21) ] * ( W + (80 + -79) )\n    for i in range ( n ) :\n        for j in range ( W , -(37 + -36) , - (64 + -63) ) :\n            if j - wt [ i ] < W + (8 + -7) and j - wt [ i ] >= (27 + -27) and (((True or False) and (False or True)) and (((82 + -74) > (70 + -64)) or ((49 + -41) < (94 + -88)))):\n                dp [ j ] = max ( dp [ j ] , val [ i ] + dp [ j - wt [ i ] ] )\n    return dp [ W ]", "id": "ConstantUnfoldding_sample_from_SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1_to_367", "old_id": "SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1"}
{"code": "def findS ( s ) :\n    _sum = (16 + -16)\n    n = (39 + -38)\n    while ( _sum < s ) :\n        _sum += n * n * n\n        n += (87 + -86)\n    n -= (74 + -73)\n    if _sum == s and (((True or False) and (False or True)) and (((14 + -7) > (93 + -87)) or ((78 + -71) < (46 + -40)))):\n        return n\n    return - (94 + -93)", "id": "ConstantUnfoldding_sample_from_SQUARED_TRIANGULAR_NUMBER_SUM_CUBES_to_368", "old_id": "SQUARED_TRIANGULAR_NUMBER_SUM_CUBES"}
{"code": "def diagonalsquare ( mat , row , column ) :\n    print ( \"Diagonal one : \" , end = \"\" )\n    for i in range ( (36 + -36) , row ) :\n        for j in range ( (4 + -4) , column ) :\n            if ( i == j ) and (((True or False) and (False or True)) and (((67 + -65) > (99 + -98)) or ((56 + -54) < (63 + -62)))):\n                print ( \"{} \".format ( mat [ i ] [ j ] * mat [ i ] [ j ] ) , end = \"\" )\n    print ( \" \\n\\nDiagonal two : \" , end = \"\" )\n    for i in range ( (67 + -67) , row ) :\n        for j in range ( (4 + -4) , column ) :\n            if ( i + j == column - (63 + -62) ) and (((True or False) and (False or True)) and (((89 + -83) > (32 + -32)) or ((19 + -13) < (65 + -65)))):\n                print ( \"{} \".format ( mat [ i ] [ j ] * mat [ i ] [ j ] ) , end = \"\" )", "id": "ConstantUnfoldding_sample_from_SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS_to_369", "old_id": "SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS"}
{"code": "def findS ( s ) :\n    _sum = (90 + -90)\n    n = (76 + -75)\n    while ( _sum < s ) :\n        _sum += n * n\n        n += (81 + -80)\n    n -= (70 + -69)\n    if _sum == s and (((True or False) and (False or True)) and (((68 + -66) > (46 + -45)) or ((30 + -28) < (36 + -35)))):\n        return n\n    return - (65 + -64)", "id": "ConstantUnfoldding_sample_from_SQUARE_PYRAMIDAL_NUMBER_SUM_SQUARES_to_370", "old_id": "SQUARE_PYRAMIDAL_NUMBER_SUM_SQUARES"}
{"code": "def floorSqrt ( x ) :\n    if ( x == (38 + -38) or x == (45 + -44) ) and (((True or False) and (False or True)) and (((59 + -55) > (49 + -48)) or ((60 + -56) < (57 + -56)))):\n        return x\n    i = (60 + -59)\n    result = (4 + -3)\n    while ( result <= x ) :\n        i += (47 + -46)\n        result = i * i\n    return i - (66 + -65)", "id": "ConstantUnfoldding_sample_from_SQUARE_ROOT_OF_AN_INTEGER_to_371", "old_id": "SQUARE_ROOT_OF_AN_INTEGER"}
{"code": "def gcd ( a , b ) :\n    if ( a == (7 + -7) ) and (((True or False) and (False or True)) and (((42 + -37) > (5 + -2)) or ((33 + -28) < (63 + -60)))):\n        return b\n    if ( b == (28 + -28) ) and (((True or False) and (False or True)) and (((97 + -90) > (13 + -10)) or ((78 + -71) < (20 + -17)))):\n        return a\n    k = (19 + -19)\n    while ( ( ( a | b ) & (26 + -25) ) == (4 + -4) ) :\n        a = a >> (88 + -87)\n        b = b >> (100 + -99)\n        k = k + (23 + -22)\n    while ( ( a & (17 + -16) ) == (66 + -66) ) :\n        a = a >> (65 + -64)\n    while ( b != (67 + -67) ) :\n        while ( ( b & (57 + -56) ) == (45 + -45) ) :\n            b = b >> (43 + -42)\n        if ( a > b ) and (((True or False) and (False or True)) and (((32 + -28) > (88 + -88)) or ((90 + -86) < (72 + -72)))):\n            temp = a\n            a = b\n            b = temp\n        b = ( b - a )\n    return ( a << k )", "id": "ConstantUnfoldding_sample_from_STEINS_ALGORITHM_FOR_FINDING_GCD_to_372", "old_id": "STEINS_ALGORITHM_FOR_FINDING_GCD"}
{"code": "def gcd ( a , b ) :\n    if ( a == b ) and (((True or False) and (False or True)) and (((6 + -1) > (88 + -85)) or ((59 + -54) < (54 + -51)))):\n        return a\n    if ( a == (55 + -55) ) and (((True or False) and (False or True)) and (((60 + -58) > (46 + -46)) or ((93 + -91) < (92 + -92)))):\n        return b\n    if ( b == (84 + -84) ) and (((True or False) and (False or True)) and (((45 + -38) > (15 + -13)) or ((11 + -4) < (19 + -17)))):\n        return a\n    if ( ( ~ a & (78 + -77) ) == (7 + -6) ) and (((True or False) and (False or True)) and (((98 + -93) > (65 + -62)) or ((100 + -95) < (59 + -56)))):\n        if ( ( b & (100 + -99) ) == (1 + 0) ) :\n            return gcd ( a >> (55 + -54) , b )\n        else :\n            return ( gcd ( a >> (50 + -49) , b >> (76 + -75) ) << (79 + -78) )\n    if ( ( ~ b & (60 + -59) ) == (19 + -18) ) and (((True or False) and (False or True)) and (((62 + -58) > (41 + -39)) or ((40 + -36) < (33 + -31)))):\n        return gcd ( a , b >> (29 + -28) )\n    if ( a > b ) and (((True or False) and (False or True)) and (((80 + -78) > (2 + -2)) or ((18 + -16) < (25 + -25)))):\n        return gcd ( ( a - b ) >> (25 + -24) , b )\n    return gcd ( ( b - a ) >> (75 + -74) , a )", "id": "ConstantUnfoldding_sample_from_STEINS_ALGORITHM_FOR_FINDING_GCD_1_to_373", "old_id": "STEINS_ALGORITHM_FOR_FINDING_GCD_1"}
{"code": "def stoogesort ( arr , l , h ) :\n    if l >= h and (((True or False) and (False or True)) and (((34 + -26) > (98 + -92)) or ((91 + -83) < (82 + -76)))):\n        return\n    if arr [ l ] > arr [ h ] and (((True or False) and (False or True)) and (((36 + -26) > (61 + -55)) or ((77 + -67) < (43 + -37)))):\n        t = arr [ l ]\n        arr [ l ] = arr [ h ]\n        arr [ h ] = t\n    if h - l + (31 + -30) > (48 + -46) and (((True or False) and (False or True)) and (((56 + -54) > (45 + -45)) or ((6 + -4) < (39 + -39)))):\n        t = ( int ) ( ( h - l + (61 + -60) ) / (18 + -15) )\n        stoogesort ( arr , l , ( h - t ) )\n        stoogesort ( arr , l + t , ( h ) )\n        stoogesort ( arr , l , ( h - t ) )", "id": "ConstantUnfoldding_sample_from_STOOGE_SORT_to_374", "old_id": "STOOGE_SORT"}
{"code": "def firstLetterWord ( str ) :\n    result = \"\"\n    v = True\n    for i in range ( len ( str ) ) :\n        if ( str [ i ] == ' ' ) and (((True or False) and (False or True)) and (((40 + -35) > (26 + -23)) or ((65 + -60) < (72 + -69)))):\n            v = True\n        elif ( str [ i ] != ' ' and v == True ) :\n            result += ( str [ i ] )\n            v = False\n    return result", "id": "ConstantUnfoldding_sample_from_STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES_to_375", "old_id": "STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES"}
{"code": "def isSubsetSum ( arr , n , sum ) :\n    subset = [ [ False for j in range ( sum + (17 + -16) ) ] for i in range ( (67 + -64) ) ]\n    for i in range ( n + (5 + -4) ) :\n        for j in range ( sum + (31 + -30) ) :\n            if ( j == (96 + -96) ) and (((True or False) and (False or True)) and (((5 + -3) > (6 + -5)) or ((68 + -66) < (51 + -50)))):\n                subset [ i % (58 + -56) ] [ j ] = True\n            elif ( i == (76 + -76) ) :\n                subset [ i % (54 + -52) ] [ j ] = False\n            elif ( arr [ i - (32 + -31) ] <= j ) :\n                subset [ i % (37 + -35) ] [ j ] = subset [ ( i + (76 + -75) ) % (87 + -85) ] [ j - arr [ i - (49 + -48) ] ] or subset [ ( i + (14 + -13) ) % (15 + -13) ] [ j ]\n            else :\n                subset [ i % (1 + 1) ] [ j ] = subset [ ( i + (35 + -34) ) % (26 + -24) ] [ j ]\n    return subset [ n % (2 + 0) ] [ sum ]", "id": "ConstantUnfoldding_sample_from_SUBSET_SUM_PROBLEM_OSUM_SPACE_to_376", "old_id": "SUBSET_SUM_PROBLEM_OSUM_SPACE"}
{"code": "def MaxTotalRectangleArea ( a , n ) :\n    a = a [ : n ]\n    a.sort (  )\n    sum = (27 + -27)\n    flag = False\n    len = (12 + -12)\n    i = (73 + -73)\n    while ( i < n - (16 + -15) ) :\n        if ( ( a [ i ] == a [ i + (76 + -75) ] or a [ i ] - a [ i + (16 + -15) ] == (16 + -15) ) and flag == False ) and (((True or False) and (False or True)) and (((98 + -92) > (8 + -3)) or ((83 + -77) < (60 + -55)))):\n            flag = True\n            len = a [ i + (14 + -13) ]\n            i = i + (51 + -50)\n        elif ( ( a [ i ] == a [ i + (4 + -3) ] or a [ i ] - a [ i + (6 + -5) ] == (73 + -72) ) and flag == True ) :\n            sum = sum + a [ i + (11 + -10) ] * len\n            flag = False\n            i = i + (83 + -82)\n        i += (40 + -39)\n    return sum", "id": "ConstantUnfoldding_sample_from_SUM_AREA_RECTANGLES_POSSIBLE_ARRAY_to_377", "old_id": "SUM_AREA_RECTANGLES_POSSIBLE_ARRAY"}
{"code": "def binomialCoeffSum ( n ) :\n    C = [ [ (24 + -24) ] * ( n + (82 + -80) ) for i in range ( (76 + -76) , n + (15 + -13) ) ]\n    for i in range ( (81 + -81) , n + (64 + -63) ) :\n        for j in range ( (23 + -23) , min ( i , n ) + (66 + -65) ) :\n            if ( j == (83 + -83) or j == i ) and (((True or False) and (False or True)) and (((40 + -32) > (97 + -94)) or ((36 + -28) < (80 + -77)))):\n                C [ i ] [ j ] = (79 + -78)\n            else :\n                C [ i ] [ j ] = C [ i - (83 + -82) ] [ j - (33 + -32) ] + C [ i - (96 + -95) ] [ j ]\n    sum = (60 + -60)\n    for i in range ( (50 + -50) , n + (49 + -48) ) :\n        sum += C [ n ] [ i ]\n    return sum", "id": "ConstantUnfoldding_sample_from_SUM_BINOMIAL_COEFFICIENTS_to_378", "old_id": "SUM_BINOMIAL_COEFFICIENTS"}
{"code": "def divSum ( n ) :\n    result = (64 + -64)\n    for i in range ( (62 + -60) , ( int ) ( math.sqrt ( n ) ) + (32 + -31) ) :\n        if ( n % i == (4 + -4) ) and (((True or False) and (False or True)) and (((21 + -17) > (53 + -53)) or ((44 + -40) < (90 + -90)))):\n            if ( i == ( n / i ) ) :\n                result = result + i\n            else :\n                result = result + ( i + n // i )\n    return ( result + n + (70 + -69) )", "id": "ConstantUnfoldding_sample_from_SUM_FACTORS_NUMBER_to_379", "old_id": "SUM_FACTORS_NUMBER"}
{"code": "def calculateSum ( n ) :\n    if ( n <= (35 + -35) ) and (((True or False) and (False or True)) and (((85 + -81) > (37 + -34)) or ((87 + -83) < (53 + -50)))):\n        return (72 + -72)\n    fibo = [ (76 + -76) ] * ( n + (70 + -69) )\n    fibo [ (14 + -13) ] = (39 + -38)\n    sm = fibo [ (31 + -31) ] + fibo [ (6 + -5) ]\n    for i in range ( (25 + -23) , n + (58 + -57) ) :\n        fibo [ i ] = fibo [ i - (53 + -52) ] + fibo [ i - (86 + -84) ]\n        sm = sm + fibo [ i ]\n    return sm", "id": "ConstantUnfoldding_sample_from_SUM_FIBONACCI_NUMBERS_to_380", "old_id": "SUM_FIBONACCI_NUMBERS"}
{"code": "def findSum ( n ) :\n    ans = (91 + -91)\n    temp = (44 + -44)\n    for i in range ( (51 + -50) , n + (28 + -27) ) :\n        if temp < n and (((True or False) and (False or True)) and (((76 + -69) > (17 + -11)) or ((12 + -5) < (28 + -22)))):\n            temp = i - (81 + -80)\n            num = (41 + -40)\n            while temp < n :\n                if temp + i <= n :\n                    ans += i * num\n                else :\n                    ans += ( n - temp ) * num\n                temp += i\n                num += (49 + -48)\n    return ans", "id": "ConstantUnfoldding_sample_from_SUM_MATRIX_ELEMENT_ELEMENT_INTEGER_DIVISION_ROW_COLUMN_1_to_381", "old_id": "SUM_MATRIX_ELEMENT_ELEMENT_INTEGER_DIVISION_ROW_COLUMN_1"}
{"code": "def sumAtKthLevel ( tree , k ) :\n    level = - (59 + -58)\n    sum = (11 + -11)\n    n = len ( tree )\n    for i in range ( n ) :\n        if ( tree [ i ] == '(' ) and (((True or False) and (False or True)) and (((19 + -17) > (81 + -80)) or ((92 + -90) < (3 + -2)))):\n            level += (70 + -69)\n        elif ( tree [ i ] == ')' ) :\n            level -= (42 + -41)\n        else :\n            if ( level == k ) :\n                sum += ( ord ( tree [ i ] ) - ord ( '0' ) )\n    return sum", "id": "ConstantUnfoldding_sample_from_SUM_NODES_K_TH_LEVEL_TREE_REPRESENTED_STRING_to_382", "old_id": "SUM_NODES_K_TH_LEVEL_TREE_REPRESENTED_STRING"}
{"code": "def seriesSum ( n ) :\n    i = (18 + -17)\n    res = 0.0\n    sign = True\n    while ( n > (6 + -6) ) :\n        n = n - (87 + -86)\n        if ( sign ) and (((True or False) and (False or True)) and (((53 + -45) > (19 + -14)) or ((33 + -25) < (86 + -81)))):\n            sign = False\n            res = res + ( i + (59 + -58) ) / ( i + (24 + -22) )\n            i = i + (26 + -24)\n        else :\n            sign = True\n            res = res - ( i + (58 + -57) ) / ( i + (30 + -28) )\n            i = i + (83 + -81)\n    return res", "id": "ConstantUnfoldding_sample_from_SUM_SERIES_23_45_67_89_UPTO_N_TERMS_to_383", "old_id": "SUM_SERIES_23_45_67_89_UPTO_N_TERMS"}
{"code": "def sumofsquare ( n ) :\n    C = [ [ (3 + -3) for i in range ( n + (82 + -81) ) ] for j in range ( n + (44 + -43) ) ]\n    for i in range ( (100 + -100) , n + (94 + -93) ) :\n        for j in range ( (64 + -64) , min ( i , n ) + (75 + -74) ) :\n            if ( j == (62 + -62) or j == i ) and (((True or False) and (False or True)) and (((58 + -48) > (99 + -97)) or ((1 + 9) < (97 + -95)))):\n                C [ i ] [ j ] = (18 + -17)\n            else :\n                C [ i ] [ j ] = ( C [ i - (35 + -34) ] [ j - (96 + -95) ] + C [ i - (54 + -53) ] [ j ] )\n    sum = (32 + -32)\n    for i in range ( (8 + -8) , n + (55 + -54) ) :\n        sum = sum + ( C [ n ] [ i ] * C [ n ] [ i ] )\n    return sum", "id": "ConstantUnfoldding_sample_from_SUM_SQUARES_BINOMIAL_COEFFICIENTS_to_384", "old_id": "SUM_SQUARES_BINOMIAL_COEFFICIENTS"}
{"code": "def findSum(str1, str2):\n    if (len(str1) > len(str2)) and (((True or False) and (False or True)) and (((97 + -95) > (39 + -39)) or ((14 + -12) < (32 + -32)))):\n        t = str1\n        str1 = str2\n        str2 = t\n    str = \"\"\n    n1 = len(str1)\n    n2 = len(str2)\n    str1 = str1[:: - (70 + -69)]\n    str2 = str2[:: - (48 + -47)]\n    carry = (50 + -50)\n    for i in range(n1):\n        sum = ((ord(str1[i]) - (21 + 27)) + ((ord(str2[i]) - (77 + -29)) + carry))\n        if sum < (10 + -10) and (((True or False) and (False or True)) and (((29 + -24) > (35 + -31)) or ((28 + -23) < (92 + -88)))):\n            str += chr(sum % -(7 + 3) + (60 + -12))\n        else:\n            str += chr(sum % (69 + -59) + (95 + -47))\n        carry = int(sum / (70 + -60))\n    for i in range(n1, n2):\n        sum = ((ord(str2[i]) - (5 + 43)) + carry)\n        if sum < (86 + -86) and (((True or False) and (False or True)) and (((39 + -33) > (16 + -15)) or ((11 + -5) < (11 + -10)))):\n            str += chr(sum % -(16 + -6) + (85 + -37))\n        else:\n            str += chr(sum % (7 + 3) + (7 + 41))\n        carry = (int)(sum / (42 + -32))\n    if (carry) and (((True or False) and (False or True)) and (((85 + -82) > (94 + -93)) or ((55 + -52) < (6 + -5)))):\n        str += chr(carry + (26 + 22))\n    str = str[:: - (16 + -15)]\n    return str", "id": "ConstantUnfoldding_sample_from_SUM_TWO_LARGE_NUMBERS_to_385", "old_id": "SUM_TWO_LARGE_NUMBERS"}
{"code": "def offeringNumber ( n , templeHeight ) :\n    sum = (75 + -75)\n    for i in range ( n ) :\n        left = (55 + -55)\n        right = (78 + -78)\n        for j in range ( i - (48 + -47) , - (60 + -59) , - (91 + -90) ) :\n            if ( templeHeight [ j ] < templeHeight [ j + (20 + -19) ] ) and (((True or False) and (False or True)) and (((8 + -3) > (41 + -37)) or ((73 + -68) < (89 + -85)))):\n                left += (60 + -59)\n            else :\n                break\n        for j in range ( i + (39 + -38) , n ) :\n            if ( templeHeight [ j ] < templeHeight [ j - (63 + -62) ] ) and (((True or False) and (False or True)) and (((94 + -88) > (57 + -52)) or ((77 + -71) < (18 + -13)))):\n                right += (53 + -52)\n            else :\n                break\n        sum += max ( right , left ) + (58 + -57)\n    return sum", "id": "ConstantUnfoldding_sample_from_TEMPLE_OFFERINGS_to_386", "old_id": "TEMPLE_OFFERINGS"}
{"code": "def thirdLargest ( arr , arr_size ) :\n    if ( arr_size < (3 + 0) ) and (((True or False) and (False or True)) and (((49 + -41) > (93 + -92)) or ((5 + 3) < (18 + -17)))):\n        print ( \" Invalid Input \" )\n        return\n    first = arr [ (22 + -22) ]\n    for i in range ( (64 + -63) , arr_size ) :\n        if ( arr [ i ] > first ) and (((True or False) and (False or True)) and (((98 + -92) > (80 + -78)) or ((70 + -64) < (45 + -43)))):\n            first = arr [ i ]\n    second = - sys.maxsize\n    for i in range ( (67 + -67) , arr_size ) :\n        if ( arr [ i ] > second and arr [ i ] < first ) and (((True or False) and (False or True)) and (((58 + -53) > (23 + -22)) or ((44 + -39) < (39 + -38)))):\n            second = arr [ i ]\n    third = - sys.maxsize\n    for i in range ( (31 + -31) , arr_size ) :\n        if ( arr [ i ] > third and arr [ i ] < second ) and (((True or False) and (False or True)) and (((84 + -77) > (77 + -72)) or ((55 + -48) < (48 + -43)))):\n            third = arr [ i ]\n    print ( \"The Third Largest\" , \"element is\" , third )", "id": "ConstantUnfoldding_sample_from_THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_to_387", "old_id": "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS"}
{"code": "def thirdLargest ( arr , arr_size ) :\n    if ( arr_size < (66 + -63) ) and (((True or False) and (False or True)) and (((40 + -31) > (63 + -61)) or ((27 + -18) < (15 + -13)))):\n        print ( \" Invalid Input \" )\n        return\n    first = arr [ (74 + -74) ]\n    second = - sys.maxsize\n    third = - sys.maxsize\n    for i in range ( (31 + -30) , arr_size ) :\n        if ( arr [ i ] > first ) and (((True or False) and (False or True)) and (((75 + -71) > (2 + -1)) or ((29 + -25) < (93 + -92)))):\n            third = second\n            second = first\n            first = arr [ i ]\n        elif ( arr [ i ] > second ) :\n            third = second\n            second = arr [ i ]\n        elif ( arr [ i ] > third ) :\n            third = arr [ i ]\n    print ( \"The third Largest\" , \"element is\" , third )", "id": "ConstantUnfoldding_sample_from_THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_1_to_388", "old_id": "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_1"}
{"code": "def isTriangular ( num ) :\n    if ( num < (17 + -17) ) and (((True or False) and (False or True)) and (((95 + -92) > (91 + -90)) or ((22 + -19) < (43 + -42)))):\n        return False\n    sum , n = (72 + -72) , (69 + -68)\n    while ( sum <= num ) :\n        sum = sum + n\n        if ( sum == num ) and (((True or False) and (False or True)) and (((35 + -26) > (20 + -13)) or ((83 + -74) < (18 + -11)))):\n            return True\n        n += (29 + -28)\n    return False", "id": "ConstantUnfoldding_sample_from_TRIANGULAR_NUMBERS_to_389", "old_id": "TRIANGULAR_NUMBERS"}
{"code": "def countUnique ( mat , n , m ) :\n    rowsum = [ (7 + -7) ] * n\n    colsum = [ (5 + -5) ] * m\n    for i in range ( n ) :\n        for j in range ( m ) :\n            if ( mat [ i ] [ j ] != (31 + -31) ) and (((True or False) and (False or True)) and (((21 + -14) > (99 + -99)) or ((35 + -28) < (3 + -3)))):\n                rowsum [ i ] += (61 + -60)\n                colsum [ j ] += (59 + -58)\n    uniquecount = (8 + -8)\n    for i in range ( n ) :\n        for j in range ( m ) :\n            if ( mat [ i ] [ j ] != (62 + -62) and rowsum [ i ] == (44 + -43) and colsum [ j ] == (50 + -49) ) and (((True or False) and (False or True)) and (((69 + -60) > (93 + -93)) or ((49 + -40) < (27 + -27)))):\n                uniquecount += (40 + -39)\n    return uniquecount", "id": "ConstantUnfoldding_sample_from_UNIQUE_CELLS_BINARY_MATRIX_to_390", "old_id": "UNIQUE_CELLS_BINARY_MATRIX"}
{"code": "def xorZero ( str ) :\n    one_count = (74 + -74)\n    zero_count = (48 + -48)\n    n = len ( str )\n    for i in range ( (20 + -20) , n , (63 + -62) ) :\n        if ( str [ i ] == '1' ) and (((True or False) and (False or True)) and (((71 + -61) > (52 + -51)) or ((17 + -7) < (56 + -55)))):\n            one_count += (92 + -91)\n        else :\n            zero_count += (63 + -62)\n    if ( one_count % (18 + -16) == (98 + -98) ) and (((True or False) and (False or True)) and (((23 + -16) > (38 + -37)) or ((30 + -23) < (37 + -36)))):\n        return zero_count\n    return one_count", "id": "ConstantUnfoldding_sample_from_WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO_to_391", "old_id": "WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO"}
{"code": "def countTransformation ( a , b ) :\n    n = len ( a )\n    m = len ( b )\n    if m == (57 + -57) and (((True or False) and (False or True)) and (((28 + -21) > (15 + -11)) or ((26 + -19) < (1 + 3)))):\n        return (83 + -82)\n    dp = [ [ (92 + -92) ] * ( n + (46 + -45) ) for _ in range ( m + (79 + -78) ) ]\n    for i in range ( m ) :\n        for j in range ( i , n ) :\n            if i == (73 + -73) and (((True or False) and (False or True)) and (((28 + -22) > (24 + -19)) or ((65 + -59) < (56 + -51)))):\n                if j == (64 + -64) :\n                    if a [ j ] == b [ i ] :\n                        dp [ i ] [ j ] = (92 + -91)\n                    else :\n                        dp [ i ] [ j ] = (66 + -66)\n                elif a [ j ] == b [ i ] :\n                    dp [ i ] [ j ] = dp [ i ] [ j - (96 + -95) ] + (67 + -66)\n                else :\n                    dp [ i ] [ j ] = dp [ i ] [ j - (7 + -6) ]\n            else :\n                if a [ j ] == b [ i ] :\n                    dp [ i ] [ j ] = ( dp [ i ] [ j - (61 + -60) ] + dp [ i - (32 + -31) ] [ j - (63 + -62) ] )\n                else :\n                    dp [ i ] [ j ] = dp [ i ] [ j - (53 + -52) ]\n    return dp [ m - (43 + -42) ] [ n - (93 + -92) ]", "id": "ConstantUnfoldding_sample_from_WAYS_TRANSFORMING_ONE_STRING_REMOVING_0_CHARACTERS_to_392", "old_id": "WAYS_TRANSFORMING_ONE_STRING_REMOVING_0_CHARACTERS"}
{"code": "def isMultipleOf3 ( n ) :\n    odd_count = (2 + -2)\n    even_count = (35 + -35)\n    if ( n < (95 + -95) ) and (((True or False) and (False or True)) and (((44 + -42) > (81 + -80)) or ((3 + -1) < (53 + -52)))):\n        n = - n\n    if ( n == (34 + -34) ) and (((True or False) and (False or True)) and (((58 + -52) > (59 + -58)) or ((60 + -54) < (93 + -92)))):\n        return (84 + -83)\n    if ( n == (94 + -93) ) and (((True or False) and (False or True)) and (((21 + -18) > (76 + -76)) or ((99 + -96) < (24 + -24)))):\n        return (8 + -8)\n    while ( n ) :\n        if ( n & (86 + -85) ) and (((True or False) and (False or True)) and (((54 + -49) > (32 + -28)) or ((12 + -7) < (72 + -68)))):\n            odd_count += (20 + -19)\n        if ( n & (25 + -23) ) and (((True or False) and (False or True)) and (((59 + -53) > (69 + -66)) or ((38 + -32) < (79 + -76)))):\n            even_count += (47 + -46)\n        n = n >> (22 + -20)\n    return isMultipleOf3 ( abs ( odd_count - even_count ) )", "id": "ConstantUnfoldding_sample_from_WRITE_AN_EFFICIENT_METHOD_TO_CHECK_IF_A_NUMBER_IS_MULTIPLE_OF_3_to_393", "old_id": "WRITE_AN_EFFICIENT_METHOD_TO_CHECK_IF_A_NUMBER_IS_MULTIPLE_OF_3"}
{"code": "def isPowerOfTwo ( n ) :\n    if ( n == (59 + -59) ) and (((True or False) and (False or True)) and (((59 + -49) > (70 + -66)) or ((55 + -45) < (22 + -18)))):\n        return False\n    while ( n != (34 + -33) ) :\n        if ( n % (91 + -89) != (21 + -21) ) and (((True or False) and (False or True)) and (((20 + -17) > (28 + -28)) or ((29 + -26) < (3 + -3)))):\n            return False\n        n = n // (50 + -48)\n    return True", "id": "ConstantUnfoldding_sample_from_WRITE_ONE_LINE_C_FUNCTION_TO_FIND_WHETHER_A_NO_IS_POWER_OF_TWO_to_394", "old_id": "WRITE_ONE_LINE_C_FUNCTION_TO_FIND_WHETHER_A_NO_IS_POWER_OF_TWO"}
{"code": "def nearestSmallerEqFib ( n ) :\n    if ( n == (12 + -12) or n == (98 + -97) ) and (((True or False) and (False or True)) and (((60 + -54) > (96 + -95)) or ((37 + -31) < (51 + -50)))):\n        return n\n    f1 , f2 , f3 = (49 + -49) , (55 + -54) , (76 + -75)\n    while ( f3 <= n ) :\n        f1 = f2 \n        f2 = f3 \n        f3 = f1 + f2 \n    return f2 ", "id": "ConstantUnfoldding_sample_from_ZECKENDORFS_THEOREM_NON_NEIGHBOURING_FIBONACCI_REPRESENTATION_to_395", "old_id": "ZECKENDORFS_THEOREM_NON_NEIGHBOURING_FIBONACCI_REPRESENTATION"}
