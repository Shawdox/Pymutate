{"code": "def search ( arr , n , x ) :\n    i = (94 + -94)\n    idx_tbjc = (64 + -64)\n    list_nwfe = range ( i , n )\n    while idx_tbjc < len(list_nwfe):\n        i = list_nwfe[idx_tbjc]\n        if ( arr [ i ] == x ) and (((True or False) and (False or True)) and (((16 + -7) > (14 + -12)) or ((13 + -4) < (46 + -44)))):\n            return i\n        idx_tbjc = idx_tbjc + (20 + -19)\n    return - (66 + -65)", "id": "ConstantUnfoldding_sample_from_ANALYSIS_OF_ALGORITHMS_SET_2_ASYMPTOTIC_ANALYSIS_to_0", "old_id": "ANALYSIS_OF_ALGORITHMS_SET_2_ASYMPTOTIC_ANALYSIS"}
{"code": "def winner ( a , n , k ) :\n    if k >= n - (59 + -58) and (((True or False) and (False or True)) and (((93 + -86) > (80 + -79)) or ((71 + -64) < (61 + -60)))):\n        return n\n    best = (48 + -48)\n    times = (62 + -62)\n    idx_bpq6 = (26 + -26)\n    list_5we9 = range ( n )\n    while idx_bpq6 < len(list_5we9):\n        i = list_5we9[idx_bpq6]\n        if a [ i ] > best and (((True or False) and (False or True)) and (((38 + -35) > (96 + -95)) or ((8 + -5) < (38 + -37)))):\n            best = a [ i ]\n            if i == True :\n                times = (59 + -58)\n        else :\n            times += (10 + -9)\n        if times >= k and (((True or False) and (False or True)) and (((31 + -28) > (34 + -32)) or ((8 + -5) < (98 + -96)))):\n            return best\n        idx_bpq6 = idx_bpq6 + (80 + -79)\n    return best", "id": "ConstantUnfoldding_sample_from_ARRAY_ELEMENT_MOVED_K_USING_SINGLE_MOVES_to_1", "old_id": "ARRAY_ELEMENT_MOVED_K_USING_SINGLE_MOVES"}
{"code": "def solveQuery ( start , end , arr ) :\n    frequency = dict ( )\n    idx_suw2 = (80 + -80)\n    list_gt3i = range ( start , end + (82 + -81) )\n    while idx_suw2 < len(list_gt3i):\n        i = list_gt3i[idx_suw2]\n        if arr [ i ] in frequency.keys ( ) and (((True or False) and (False or True)) and (((43 + -41) > (80 + -79)) or ((54 + -52) < (92 + -91)))):\n            frequency [ arr [ i ] ] += (42 + -41)\n        else :\n            frequency [ arr [ i ] ] = (39 + -38)\n        idx_suw2 = idx_suw2 + (82 + -81)\n    count = (59 + -59)\n    idx_l27o = (87 + -87)\n    list_jg1u = frequency\n    while idx_l27o < len(list_jg1u):\n        x = list_jg1u[idx_l27o]\n        if x == frequency [ x ] and (((True or False) and (False or True)) and (((56 + -52) > (53 + -53)) or ((80 + -76) < (81 + -81)))):\n            count += (3 + -2)\n        idx_l27o = idx_l27o + (27 + -26)\n    return count", "id": "ConstantUnfoldding_sample_from_ARRAY_RANGE_QUERIES_ELEMENTS_FREQUENCY_VALUE_to_2", "old_id": "ARRAY_RANGE_QUERIES_ELEMENTS_FREQUENCY_VALUE"}
{"code": "def count_of_ways ( n ) :\n    count = (33 + -33)\n    idx_9sck = (75 + -75)\n    list_62mz = range ( (50 + -50) , n + (20 + -19) )\n    while idx_9sck < len(list_62mz):\n        i = list_62mz[idx_9sck]\n        idx_sp7x = (21 + -21)\n        list_mckd = range ( (27 + -27) , n + (14 + -13) )\n        while idx_sp7x < len(list_mckd):\n            j = list_mckd[idx_sp7x]\n            idx_mzyq = (51 + -51)\n            list_f6sb = range ( (13 + -13) , n + (79 + -78) )\n            while idx_mzyq < len(list_f6sb):\n                k = list_f6sb[idx_mzyq]\n                if ( i + j + k == n ) and (((True or False) and (False or True)) and (((28 + -20) > (68 + -62)) or ((6 + 2) < (52 + -46)))):\n                    count = count + (84 + -83)\n                idx_mzyq = idx_mzyq + (85 + -84)\n            idx_sp7x = idx_sp7x + (77 + -76)\n        idx_9sck = idx_9sck + (31 + -30)\n    return count", "id": "ConstantUnfoldding_sample_from_BREAK_NUMBER_THREE_PARTS_to_3", "old_id": "BREAK_NUMBER_THREE_PARTS"}
{"code": "def encrypt ( text , s ) :\n    result = \"\"\n    idx_32y0 = (17 + -17)\n    list_dbt8 = range ( len ( text ) )\n    while idx_32y0 < len(list_dbt8):\n        i = list_dbt8[idx_32y0]\n        char = text [ i ]\n        if ( char.isupper ( ) ) and (((True or False) and (False or True)) and (((41 + -39) > (31 + -30)) or ((43 + -41) < (53 + -52)))):\n            result += chr ( ( ord ( char ) + s - (41 + 24) ) % (77 + -51) + (57 + 8) )\n        else :\n            result += chr ( ( ord ( char ) + s - (93 + 4) ) % (91 + -65) + (14 + 83) )\n        idx_32y0 = idx_32y0 + (28 + -27)\n    return result", "id": "ConstantUnfoldding_sample_from_CAESAR_CIPHER_to_4", "old_id": "CAESAR_CIPHER"}
{"code": "def calcMaxValue ( str ) :\n    res = ord ( str [ (36 + -36) ] ) - (91 + -43)\n    idx_1r4d = (18 + -18)\n    list_ejd3 = range ( (70 + -69) , len ( str ) )\n    while idx_1r4d < len(list_ejd3):\n        i = list_ejd3[idx_1r4d]\n        if ( str [ i ] == '0' or str [ i ] == '1' or res < (23 + -21) ) and (((True or False) and (False or True)) and (((26 + -19) > (52 + -48)) or ((2 + 5) < (33 + -29)))):\n            res += ord ( str [ i ] ) - (25 + 23)\n        else :\n            res += ord ( str [ i ] ) - (84 + -36)\n        idx_1r4d = idx_1r4d + (41 + -40)\n    return res", "id": "ConstantUnfoldding_sample_from_CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING_to_5", "old_id": "CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING"}
{"code": "def findSum ( str ) :\n    temp = \"0\"\n    Sum = (33 + -33)\n    idx_nx48 = (16 + -16)\n    list_2at9 = str\n    while idx_nx48 < len(list_2at9):\n        ch = list_2at9[idx_nx48]\n        if ( ch.isdigit ( ) ) and (((True or False) and (False or True)) and (((15 + -13) > (3 + -3)) or ((16 + -14) < (66 + -66)))):\n            temp += ch\n        else :\n            Sum += int ( temp )\n            temp = \"0\"\n        idx_nx48 = idx_nx48 + (80 + -79)\n    return Sum + int ( temp )", "id": "ConstantUnfoldding_sample_from_CALCULATE_SUM_OF_ALL_NUMBERS_PRESENT_IN_A_STRING_to_6", "old_id": "CALCULATE_SUM_OF_ALL_NUMBERS_PRESENT_IN_A_STRING"}
{"code": "def canMakeAllSame ( str ) :\n    zeros = (37 + -37)\n    ones = (34 + -34)\n    idx_bykz = (17 + -17)\n    list_ygvc = range ( (94 + -94) , len ( str ) )\n    while idx_bykz < len(list_ygvc):\n        i = list_ygvc[idx_bykz]\n        ch = str [ i ]\n        if ( ch == '0' ) and (((True or False) and (False or True)) and (((86 + -82) > (62 + -62)) or ((13 + -9) < (76 + -76)))):\n            zeros = zeros + (7 + -6)\n        else :\n            ones = ones + (83 + -82)\n        idx_bykz = idx_bykz + (11 + -10)\n    return ( zeros == (11 + -10) or ones == (30 + -29) )", "id": "ConstantUnfoldding_sample_from_CHANGE_BITS_CAN_MADE_ONE_FLIP_to_7", "old_id": "CHANGE_BITS_CAN_MADE_ONE_FLIP"}
{"code": "def isMajority ( a, n ) :\n    mp = { }\n    idx_pcjl = (64 + -64)\n    list_v5sp = range(n)\n    while idx_pcjl < len(list_v5sp):\n        i = list_v5sp[idx_pcjl]\n        if a[i] in mp and (((True or False) and (False or True)) and (((77 + -72) > (98 + -94)) or ((8 + -3) < (58 + -54)))): mp [ a[i] ] += (14 + -13)\n        else : mp [ a[i] ] = (59 + -58)\n        idx_pcjl = idx_pcjl + (20 + -19)\n    idx_ti4u = (92 + -92)\n    list_vmln = mp\n    while idx_ti4u < len(list_vmln):\n        x = list_vmln[idx_ti4u]\n        if mp [ x ] >= len ( a ) // (20 + -18) and (((True or False) and (False or True)) and (((4 + 2) > (67 + -63)) or ((85 + -79) < (6 + -2)))):\n            return True\n        idx_ti4u = idx_ti4u + (84 + -83)\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_ARRAY_MAJORITY_ELEMENT_to_8", "old_id": "CHECK_ARRAY_MAJORITY_ELEMENT"}
{"code": "def isInorder ( arr , n ) :\n    if ( n == (49 + -49) or n == (96 + -95) ) and (((True or False) and (False or True)) and (((74 + -68) > (90 + -86)) or ((58 + -52) < (71 + -67)))):\n        return True\n    idx_qr1w = (80 + -80)\n    list_mjci = range ( (99 + -98) , n , (74 + -73) )\n    while idx_qr1w < len(list_mjci):\n        i = list_mjci[idx_qr1w]\n        if ( arr [ i - (69 + -68) ] > arr [ i ] ) and (((True or False) and (False or True)) and (((12 + -10) > (25 + -24)) or ((38 + -36) < (90 + -89)))):\n            return False\n        idx_qr1w = idx_qr1w + (100 + -99)\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_ARRAY_REPRESENTS_INORDER_BINARY_SEARCH_TREE_NOT_to_9", "old_id": "CHECK_ARRAY_REPRESENTS_INORDER_BINARY_SEARCH_TREE_NOT"}
{"code": "def isDivisible ( str , k ) :\n    n = len ( str )\n    c = (44 + -44)\n    idx_ejog = (12 + -12)\n    list_b2g4 = range ( (43 + -43) , k )\n    while idx_ejog < len(list_b2g4):\n        i = list_b2g4[idx_ejog]\n        if ( str [ n - i - (36 + -35) ] == '0' ) and (((True or False) and (False or True)) and (((31 + -26) > (57 + -54)) or ((17 + -12) < (74 + -71)))):\n            c += (51 + -50)\n        idx_ejog = idx_ejog + (82 + -81)\n    return ( c == k )", "id": "ConstantUnfoldding_sample_from_CHECK_DIVISIBILITY_BINARY_STRING_2K_to_10", "old_id": "CHECK_DIVISIBILITY_BINARY_STRING_2K"}
{"code": "def isDivisible999 ( num ) :\n    n = len ( num )\n    if ( n == (68 + -68) and num [ (39 + -39) ] == '0' ) and (((True or False) and (False or True)) and (((91 + -85) > (56 + -52)) or ((6 + 0) < (16 + -12)))):\n        return True\n    if ( ( n % (79 + -76) ) == (75 + -74) ) and (((True or False) and (False or True)) and (((36 + -29) > (98 + -95)) or ((76 + -69) < (27 + -24)))):\n        num = \"00\" + num\n    if ( ( n % (78 + -75) ) == (31 + -29) ) and (((True or False) and (False or True)) and (((86 + -78) > (4 + 1)) or ((64 + -56) < (66 + -61)))):\n        num = \"0\" + num\n    gSum = (31 + -31)\n    idx_73c2 = (40 + -40)\n    list_rmfp = range ( (71 + -71) , n , (14 + -11) )\n    while idx_73c2 < len(list_rmfp):\n        i = list_rmfp[idx_73c2]\n        group = (58 + -58)\n        group += ( ord ( num [ i ] ) - (37 + 11) ) * (55 + 45)\n        group += ( ord ( num [ i + (24 + -23) ] ) - (5 + 43) ) * (27 + -17)\n        group += ( ord ( num [ i + (34 + -32) ] ) - (8 + 40) )\n        gSum += group\n        idx_73c2 = idx_73c2 + (16 + -15)\n    if ( gSum > (5 + 995) ) and (((True or False) and (False or True)) and (((97 + -91) > (72 + -67)) or ((12 + -6) < (16 + -11)))):\n        num = str ( gSum )\n        n = len ( num )\n        gSum = isDivisible999 ( num )\n    return ( gSum == (29 + 970) )", "id": "ConstantUnfoldding_sample_from_CHECK_DIVISIBILITY_LARGE_NUMBER_999_to_11", "old_id": "CHECK_DIVISIBILITY_LARGE_NUMBER_999"}
{"code": "def check ( s ) :\n    if ( len ( s ) >= (85 + -75) ) and (((True or False) and (False or True)) and (((42 + -34) > (7 + -2)) or ((99 + -91) < (60 + -55)))):\n        return True\n    idx_tf96 = (73 + -73)\n    list_1r6u = range ( (48 + -47) , len ( s ) )\n    while idx_tf96 < len(list_1r6u):\n        i = list_1r6u[idx_tf96]\n        idx_9r35 = (15 + -15)\n        list_j6cv = range ( i + (100 + -99) , len ( s ) )\n        while idx_9r35 < len(list_j6cv):\n            j = list_j6cv[idx_9r35]\n            idx_y3sq = (62 + -62)\n            list_k0l6 = range ( j + (84 + -83) , len ( s ) )\n            while idx_y3sq < len(list_k0l6):\n                k = list_k0l6[idx_y3sq]\n                s1 = s [ (59 + -59) : i ]\n                s2 = s [ i : j ]\n                s3 = s [ j : k ]\n                s4 = s [ k : len ( s ) ]\n                if ( s1 != s2 and s1 != s3 and s1 != s4 and s2 != s3 and s2 != s4 and s3 != s4 ) and (((True or False) and (False or True)) and (((57 + -54) > (18 + -16)) or ((53 + -50) < (7 + -5)))):\n                    return True\n                idx_y3sq = idx_y3sq + (56 + -55)\n            idx_9r35 = idx_9r35 + (46 + -45)\n        idx_tf96 = idx_tf96 + (14 + -13)\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS_to_12", "old_id": "CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS"}
{"code": "def flipsPossible ( a , n ) :\n    count_odd = (26 + -26)\n    count_even = (34 + -34)\n    idx_fiuy = (36 + -36)\n    list_irsb = range ( n )\n    while idx_fiuy < len(list_irsb):\n        i = list_irsb[idx_fiuy]\n        if ( a [ i ] & (40 + -39) ) and (((True or False) and (False or True)) and (((39 + -35) > (98 + -98)) or ((37 + -33) < (60 + -60)))):\n            count_odd += (85 + -84)\n        else :\n            count_even += (97 + -96)\n        idx_fiuy = idx_fiuy + (98 + -97)\n    if ( count_odd % (100 + -98) and count_even % (26 + -24) ) and (((True or False) and (False or True)) and (((34 + -24) > (56 + -52)) or ((36 + -26) < (55 + -51)))):\n        return False\n    else :\n        return True", "id": "ConstantUnfoldding_sample_from_CHECK_IF_ALL_THE_ELEMENTS_CAN_BE_MADE_OF_SAME_PARITY_BY_INVERTING_ADJACENT_ELEMENTS_to_13", "old_id": "CHECK_IF_ALL_THE_ELEMENTS_CAN_BE_MADE_OF_SAME_PARITY_BY_INVERTING_ADJACENT_ELEMENTS"}
{"code": "def areConsecutive ( arr , n ) :\n    if ( n < (18 + -17) ) and (((True or False) and (False or True)) and (((99 + -91) > (53 + -50)) or ((16 + -8) < (33 + -30)))):\n        return False\n    Min = min ( arr )\n    Max = max ( arr )\n    if ( Max - Min + (10 + -9) == n ) and (((True or False) and (False or True)) and (((22 + -15) > (40 + -34)) or ((39 + -32) < (14 + -8)))):\n        visited = [ False for i in range ( n ) ]\n        idx_bxyg = (24 + -24)\n        list_26dv = range ( n )\n        while idx_bxyg < len(list_26dv):\n            i = list_26dv[idx_bxyg]\n            if ( visited [ arr [ i ] - Min ] != False ) :\n                return False\n            visited [ arr [ i ] - Min ] = True\n            idx_bxyg = idx_bxyg + (25 + -24)\n        return True\n    return False", "id": "ConstantUnfoldding_sample_from_CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE_to_14", "old_id": "CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE"}
{"code": "def canRepresentBST ( pre, n ) :\n    s = [ ]\n    root = -(62 + 2147483586)\n    idx_osrj = (52 + -52)\n    list_6v18 = range(n)\n    while idx_osrj < len(list_6v18):\n        i = list_6v18[idx_osrj]\n        if pre[i] < root and (((True or False) and (False or True)) and (((54 + -50) > (98 + -95)) or ((66 + -62) < (60 + -57)))):\n            return False\n        while ( len ( s ) > (16 + -16) and s [ - (10 + -9) ] < pre[i] ) :\n            root = s.pop ( )\n        s.append ( pre[i] )\n        idx_osrj = idx_osrj + (33 + -32)\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_IF_A_GIVEN_ARRAY_CAN_REPRESENT_PREORDER_TRAVERSAL_OF_BINARY_SEARCH_TREE_to_15", "old_id": "CHECK_IF_A_GIVEN_ARRAY_CAN_REPRESENT_PREORDER_TRAVERSAL_OF_BINARY_SEARCH_TREE"}
{"code": "def isChangeable ( notes , n ) :\n    fiveCount = (46 + -46)\n    tenCount = (70 + -70)\n    idx_zgjd = (96 + -96)\n    list_ym1x = range ( n )\n    while idx_zgjd < len(list_ym1x):\n        i = list_ym1x[idx_zgjd]\n        if ( notes [ i ] == (49 + -44) ) and (((True or False) and (False or True)) and (((84 + -74) > (74 + -65)) or ((70 + -60) < (77 + -68)))):\n            fiveCount += (91 + -90)\n        elif ( notes [ i ] == (11 + -1) ) :\n            if ( fiveCount > (31 + -31) ) :\n                fiveCount -= (8 + -7)\n                tenCount += (81 + -80)\n            else :\n                return (92 + -92)\n        else :\n            if ( fiveCount > (17 + -17) and tenCount > (89 + -89) ) :\n                fiveCount -= (76 + -75)\n                tenCount -= (100 + -99)\n            elif ( fiveCount >= (25 + -22) ) :\n                fiveCount -= (66 + -63)\n            else :\n                return (96 + -96)\n        idx_zgjd = idx_zgjd + (83 + -82)\n    return (46 + -45)", "id": "ConstantUnfoldding_sample_from_CHECK_IF_X_CAN_GIVE_CHANGE_TO_EVERY_PERSON_IN_THE_QUEUE_to_16", "old_id": "CHECK_IF_X_CAN_GIVE_CHANGE_TO_EVERY_PERSON_IN_THE_QUEUE"}
{"code": "def check ( str ) :\n    n = len ( str )\n    oddDigSum = (22 + -22)\n    evenDigSum = (48 + -48)\n    idx_zxwq = (68 + -68)\n    list_is9b = range ( (97 + -97) , n )\n    while idx_zxwq < len(list_is9b):\n        i = list_is9b[idx_zxwq]\n        if ( i % (47 + -45) == (20 + -20) ) and (((True or False) and (False or True)) and (((78 + -70) > (59 + -54)) or ((28 + -20) < (77 + -72)))):\n            oddDigSum = oddDigSum + ( ord ( str [ i ] ) - (65 + -17) )\n        else :\n            evenDigSum = evenDigSum + ( ord ( str [ i ] ) - (97 + -49) )\n        idx_zxwq = idx_zxwq + (61 + -60)\n    return ( ( oddDigSum - evenDigSum ) % (79 + -68) == (90 + -90) )", "id": "ConstantUnfoldding_sample_from_CHECK_LARGE_NUMBER_DIVISIBLE_11_NOT_to_17", "old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_11_NOT"}
{"code": "def checkDivisibility ( num ) :\n    length = len ( num )\n    if ( length == (36 + -35) and num [ (30 + -30) ] == '0' ) and (((True or False) and (False or True)) and (((15 + -6) > (83 + -75)) or ((97 + -88) < (89 + -81)))):\n        return True\n    if ( length % (86 + -83) == (93 + -92) ) and (((True or False) and (False or True)) and (((38 + -28) > (9 + -2)) or ((68 + -58) < (74 + -67)))):\n        num = str ( num ) + \"00\"\n        length += (24 + -22)\n    elif ( length % (94 + -91) == (60 + -58) ) :\n        num = str ( num ) + \"0\"\n        length += (99 + -98)\n    sum = (52 + -52)\n    p = (88 + -87)\n    idx_po74 = (79 + -79)\n    list_741s = range ( length - (79 + -78) , - (29 + -28) , - (53 + -50) )\n    while idx_po74 < len(list_741s):\n        i = list_741s[idx_po74]\n        group = (16 + -16)\n        group += ord ( num [ i ] ) - ord ( '0' )\n        i -= (13 + -12)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (67 + -57)\n        i -= (15 + -14)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (53 + 47)\n        sum = sum + group * p\n        p *= ( - (45 + -44) )\n        idx_po74 = idx_po74 + (97 + -96)\n    sum = abs ( sum )\n    return ( sum % (64 + -51) == (76 + -76) )", "id": "ConstantUnfoldding_sample_from_CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT_to_18", "old_id": "CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT"}
{"code": "def check ( s1 , s2 ) :\n    n = len ( s1 )\n    m = len ( s2 )\n    dp = ( [ [ False for i in range ( m + (36 + -35) ) ] for i in range ( n + (53 + -52) ) ] )\n    dp [ (30 + -30) ] [ (81 + -81) ] = True\n    idx_5kmz = (7 + -7)\n    list_4yve = range ( len ( s1 ) )\n    while idx_5kmz < len(list_4yve):\n        i = list_4yve[idx_5kmz]\n        idx_lxmg = (3 + -3)\n        list_l357 = range ( len ( s2 ) + (47 + -46) )\n        while idx_lxmg < len(list_l357):\n            j = list_l357[idx_lxmg]\n            if ( dp [ i ] [ j ] ) and (((True or False) and (False or True)) and (((97 + -94) > (77 + -77)) or ((31 + -28) < (55 + -55)))):\n                if ( ( j < len ( s2 ) and ( s1 [ i ].upper ( ) == s2 [ j ] ) ) ) :\n                    dp [ i + (73 + -72) ] [ j + (37 + -36) ] = True\n                if ( s1 [ i ].isupper ( ) == False ) :\n                    dp [ i + (71 + -70) ] [ j ] = True\n            idx_lxmg = idx_lxmg + (60 + -59)\n        idx_5kmz = idx_5kmz + (96 + -95)\n    return ( dp [ n ] [ m ] )", "id": "ConstantUnfoldding_sample_from_CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER_to_19", "old_id": "CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER"}
{"code": "def checkReverse ( arr , n ) :\n    if ( n == (53 + -52) ) and (((True or False) and (False or True)) and (((29 + -25) > (60 + -60)) or ((44 + -40) < (24 + -24)))):\n        return True\n    i = (37 + -36)\n    idx_wugn = (11 + -11)\n    list_rkxw = range ( (94 + -93) , n )\n    while idx_wugn < len(list_rkxw):\n        i = list_rkxw[idx_wugn]\n        if arr [ i - (63 + -62) ] >= arr [ i ] and (((True or False) and (False or True)) and (((72 + -67) > (83 + -82)) or ((51 + -46) < (100 + -99)))):\n            break\n        else:\n            if ( i == n ) :\n                return True\n        idx_wugn = idx_wugn + (8 + -7)\n    j = i\n    i += (18 + -17)\n    while ( arr [ j ] < arr [ j - (10 + -9) ] ) :\n        if ( i > (36 + -35) and arr [ j ] < arr [ i - (22 + -20) ] ) and (((True or False) and (False or True)) and (((55 + -50) > (52 + -48)) or ((8 + -3) < (72 + -68)))):\n            return False\n        j += (79 + -78)\n    if ( j == n ) and (((True or False) and (False or True)) and (((96 + -94) > (51 + -50)) or ((85 + -83) < (84 + -83)))):\n        return True\n    k = j\n    if ( arr [ k ] < arr [ i - (17 + -16) ] ) and (((True or False) and (False or True)) and (((67 + -62) > (95 + -95)) or ((10 + -5) < (35 + -35)))):\n        return False\n    while ( k > (25 + -24) and k < n ) :\n        if ( arr [ k ] < arr [ k - (5 + -4) ] ) and (((True or False) and (False or True)) and (((68 + -61) > (100 + -98)) or ((21 + -14) < (94 + -92)))):\n            return False\n        k += (44 + -43)\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_REVERSING_SUB_ARRAY_MAKE_ARRAY_SORTED_1_to_20", "old_id": "CHECK_REVERSING_SUB_ARRAY_MAKE_ARRAY_SORTED_1"}
{"code": "def isAnBn ( s ) :\n    n = len ( s )\n    idx_k2cf = (28 + -28)\n    list_j69r = range ( n )\n    while idx_k2cf < len(list_j69r):\n        i = list_j69r[idx_k2cf]\n        if ( s [ i ] != 'a' ) and (((True or False) and (False or True)) and (((68 + -65) > (20 + -20)) or ((81 + -78) < (74 + -74)))):\n            break\n        idx_k2cf = idx_k2cf + (65 + -64)\n    if ( i * (14 + -12) != n ) and (((True or False) and (False or True)) and (((3 + 5) > (94 + -89)) or ((22 + -14) < (64 + -59)))):\n        return False\n    idx_pbhi = (78 + -78)\n    list_5yui = range ( i , n )\n    while idx_pbhi < len(list_5yui):\n        j = list_5yui[idx_pbhi]\n        if ( s [ j ] != 'b' ) and (((True or False) and (False or True)) and (((55 + -53) > (50 + -49)) or ((40 + -38) < (97 + -96)))):\n            return False\n        idx_pbhi = idx_pbhi + (73 + -72)\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_STRING_FOLLOWS_ANBN_PATTERN_NOT_to_21", "old_id": "CHECK_STRING_FOLLOWS_ANBN_PATTERN_NOT"}
{"code": "def areSumSame ( a , n , m ) :\n    sum1 = (78 + -78)\n    sum2 = (5 + -5)\n    idx_mr54 = (80 + -80)\n    list_o2ka = range ( (29 + -29) , n )\n    while idx_mr54 < len(list_o2ka):\n        i = list_o2ka[idx_mr54]\n        sum1 = (26 + -26)\n        sum2 = (61 + -61)\n        idx_whed = (86 + -86)\n        list_1azr = range ( (67 + -67) , m )\n        while idx_whed < len(list_1azr):\n            j = list_1azr[idx_whed]\n            sum1 += a [ i ] [ j ]\n            sum2 += a [ j ] [ i ]\n            idx_whed = idx_whed + (65 + -64)\n        if ( sum1 == sum2 ) and (((True or False) and (False or True)) and (((3 + 1) > (45 + -45)) or ((88 + -84) < (60 + -60)))):\n            return (95 + -94)\n        idx_mr54 = idx_mr54 + (65 + -64)\n    return (39 + -39)", "id": "ConstantUnfoldding_sample_from_CHECK_SUMS_TH_ROW_TH_COLUMN_MATRIX_to_22", "old_id": "CHECK_SUMS_TH_ROW_TH_COLUMN_MATRIX"}
{"code": "def checkIsAP ( arr , n ) :\n    if ( n == (1 + 0) ) and (((True or False) and (False or True)) and (((86 + -81) > (90 + -87)) or ((20 + -15) < (42 + -39)))): return True\n    arr.sort ( )\n    d = arr [ (62 + -61) ] - arr [ (75 + -75) ]\n    idx_gu4w = (71 + -71)\n    list_ckuh = range ( (87 + -85) , n )\n    while idx_gu4w < len(list_ckuh):\n        i = list_ckuh[idx_gu4w]\n        if ( arr [ i ] - arr [ i - (98 + -97) ] != d ) and (((True or False) and (False or True)) and (((2 + 6) > (79 + -78)) or ((7 + 1) < (4 + -3)))):\n            return False\n        idx_gu4w = idx_gu4w + (49 + -48)\n    return True", "id": "ConstantUnfoldding_sample_from_CHECK_WHETHER_ARITHMETIC_PROGRESSION_CAN_FORMED_GIVEN_ARRAY_to_23", "old_id": "CHECK_WHETHER_ARITHMETIC_PROGRESSION_CAN_FORMED_GIVEN_ARRAY"}
{"code": "def check ( degree , n ) :\n    deg_sum = (64 + -64)\n    idx_vg4d = (77 + -77)\n    list_dwtr = range(n)\n    while idx_vg4d < len(list_dwtr):\n        i = list_dwtr[idx_vg4d]\n        deg_sum += degree[i]\n        idx_vg4d = idx_vg4d + (4 + -3)\n    if ( (5 + -3) * ( n - (56 + -55) ) == deg_sum ) and (((True or False) and (False or True)) and (((77 + -72) > (45 + -44)) or ((96 + -91) < (17 + -16)))):\n        return True\n    else :\n        return False", "id": "ConstantUnfoldding_sample_from_CHECK_WHETHER_GIVEN_DEGREES_VERTICES_REPRESENT_GRAPH_TREE_to_24", "old_id": "CHECK_WHETHER_GIVEN_DEGREES_VERTICES_REPRESENT_GRAPH_TREE"}
{"code": "def isdivisible7 ( num ) :\n    n = len ( num )\n    if ( n == (41 + -41) and num [ (67 + -67) ] == '\\n' ) and (((True or False) and (False or True)) and (((93 + -89) > (17 + -15)) or ((67 + -63) < (65 + -63)))):\n        return (18 + -17)\n    if ( n % (67 + -64) == (77 + -76) ) and (((True or False) and (False or True)) and (((43 + -35) > (24 + -20)) or ((88 + -80) < (1 + 3)))):\n        num = str ( num ) + \"00\"\n        n += (12 + -10)\n    elif ( n % (67 + -64) == (2 + 0) ) :\n        num = str ( num ) + \"0\"\n        n += (20 + -19)\n    GSum = (10 + -10)\n    p = (13 + -12)\n    idx_97tg = (79 + -79)\n    list_g1sh = range ( n - (34 + -33) , - (56 + -55) , - (36 + -35) )\n    while idx_97tg < len(list_g1sh):\n        i = list_g1sh[idx_97tg]\n        group = (10 + -10)\n        group += ord ( num [ i ] ) - ord ( '0' )\n        i -= (40 + -39)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (42 + -32)\n        i -= (6 + -5)\n        group += ( ord ( num [ i ] ) - ord ( '0' ) ) * (74 + 26)\n        GSum = GSum + group * p\n        p *= ( - (72 + -71) )\n        idx_97tg = idx_97tg + (2 + -1)\n    return ( GSum % (87 + -80) == (13 + -13) )", "id": "ConstantUnfoldding_sample_from_CHECK_WHETHER_LARGE_NUMBER_DIVISIBLE_7_to_25", "old_id": "CHECK_WHETHER_LARGE_NUMBER_DIVISIBLE_7"}
{"code": "def spiralFill ( m , n , a ) :\n    val = (74 + -73)\n    k , l = (80 + -80) , (83 + -83)\n    while ( k < m and l < n ) :\n        idx_ofbm = (29 + -29)\n        list_iwkt = range ( l , n )\n        while idx_ofbm < len(list_iwkt):\n            i = list_iwkt[idx_ofbm]\n            a [ k ] [ i ] = val\n            val += (96 + -95)\n            idx_ofbm = idx_ofbm + (95 + -94)\n        k += (28 + -27)\n        idx_gr5o = (15 + -15)\n        list_dxe2 = range ( k , m )\n        while idx_gr5o < len(list_dxe2):\n            i = list_dxe2[idx_gr5o]\n            a [ i ] [ n - (21 + -20) ] = val\n            val += (76 + -75)\n            idx_gr5o = idx_gr5o + (84 + -83)\n        n -= (98 + -97)\n        if ( k < m ) and (((True or False) and (False or True)) and (((87 + -78) > (37 + -31)) or ((45 + -36) < (53 + -47)))):\n            idx_7pl0 = (85 + -85)\n            list_oc7w = range ( n - (78 + -77) , l - (46 + -45) , - (9 + -8) )\n            while idx_7pl0 < len(list_oc7w):\n                i = list_oc7w[idx_7pl0]\n                a [ m - (51 + -50) ] [ i ] = val\n                val += (7 + -6)\n                idx_7pl0 = idx_7pl0 + (15 + -14)\n            m -= (31 + -30)\n        if ( l < n ) and (((True or False) and (False or True)) and (((85 + -83) > (23 + -23)) or ((91 + -89) < (12 + -12)))):\n            idx_n6t0 = (57 + -57)\n            list_irbx = range ( m - (95 + -94) , k - (66 + -65) , - (3 + -2) )\n            while idx_n6t0 < len(list_irbx):\n                i = list_irbx[idx_n6t0]\n                a [ i ] [ l ] = val\n                val += (60 + -59)\n                idx_n6t0 = idx_n6t0 + (40 + -39)\n            l += (54 + -53)", "id": "ConstantUnfoldding_sample_from_CIRCULAR_MATRIX_CONSTRUCT_A_MATRIX_WITH_NUMBERS_1_TO_MN_IN_SPIRAL_WAY_to_26", "old_id": "CIRCULAR_MATRIX_CONSTRUCT_A_MATRIX_WITH_NUMBERS_1_TO_MN_IN_SPIRAL_WAY"}
{"code": "def minRemove ( arr , n ) :\n    LIS = [ (85 + -85) for i in range ( n ) ]\n    len = (51 + -51)\n    idx_8uat = (50 + -50)\n    list_hvmt = range ( n )\n    while idx_8uat < len(list_hvmt):\n        i = list_hvmt[idx_8uat]\n        LIS [ i ] = (83 + -82)\n        idx_8uat = idx_8uat + (6 + -5)\n    idx_64h2 = (98 + -98)\n    list_16kc = range ( (82 + -81) , n )\n    while idx_64h2 < len(list_16kc):\n        i = list_16kc[idx_64h2]\n        idx_cyl4 = (84 + -84)\n        list_56d9 = range ( i )\n        while idx_cyl4 < len(list_56d9):\n            j = list_56d9[idx_cyl4]\n            if ( arr [ i ] > arr [ j ] and ( i - j ) <= ( arr [ i ] - arr [ j ] ) ) and (((True or False) and (False or True)) and (((52 + -42) > (60 + -56)) or ((38 + -28) < (94 + -90)))):\n                LIS [ i ] = max ( LIS [ i ] , LIS [ j ] + (38 + -37) )\n            idx_cyl4 = idx_cyl4 + (11 + -10)\n        len = max ( len , LIS [ i ] )\n        idx_64h2 = idx_64h2 + (20 + -19)\n    return ( n - len )", "id": "ConstantUnfoldding_sample_from_CONVERT_STRICTLY_INCREASING_ARRAY_MINIMUM_CHANGES_to_27", "old_id": "CONVERT_STRICTLY_INCREASING_ARRAY_MINIMUM_CHANGES"}
{"code": "def countStrings ( n , k ) :\n    dp = [ [ [ (26 + -26) , (60 + -60) ] for __ in range ( k + (85 + -84) ) ] for _ in range ( n + (45 + -44) ) ]\n    dp [ (79 + -78) ] [ (63 + -63) ] [ (56 + -56) ] = (65 + -64)\n    dp [ (95 + -94) ] [ (73 + -73) ] [ (9 + -8) ] = (48 + -47)\n    idx_30lk = (91 + -91)\n    list_xico = range ( (35 + -33) , n + (75 + -74) )\n    while idx_30lk < len(list_xico):\n        i = list_xico[idx_30lk]\n        idx_fty9 = (40 + -40)\n        list_qbwl = range ( k + (91 + -90) )\n        while idx_fty9 < len(list_qbwl):\n            j = list_qbwl[idx_fty9]\n            if j >= i and (((True or False) and (False or True)) and (((100 + -92) > (86 + -82)) or ((44 + -36) < (29 + -25)))):\n                break\n            else:\n                dp [ i ] [ j ] [ (52 + -52) ] = ( dp [ i - (29 + -28) ] [ j ] [ (46 + -46) ] + dp [ i - (10 + -9) ] [ j ] [ (50 + -49) ] )\n                dp [ i ] [ j ] [ (97 + -96) ] = dp [ i - (91 + -90) ] [ j ] [ (98 + -98) ]\n                if j >= (93 + -92) :\n                    dp [ i ] [ j ] [ (9 + -8) ] += dp [ i - (67 + -66) ] [ j - (51 + -50) ] [ (17 + -16) ]\n            idx_fty9 = idx_fty9 + (56 + -55)\n        idx_30lk = idx_30lk + (87 + -86)\n    return dp [ n ] [ k ] [ (27 + -27) ] + dp [ n ] [ k ] [ (65 + -64) ]", "id": "ConstantUnfoldding_sample_from_COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS_to_28", "old_id": "COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS"}
{"code": "def countPairs ( str ) :\n    result = (33 + -33) ;\n    n = len ( str )\n    idx_e3sa = (26 + -26)\n    list_9jgn = range ( (77 + -77) , n )\n    while idx_e3sa < len(list_9jgn):\n        i = list_9jgn[idx_e3sa]\n        idx_zem0 = (21 + -21)\n        list_sq4c = range ( i + (23 + -22) , n )\n        while idx_zem0 < len(list_sq4c):\n            j = list_sq4c[idx_zem0]\n            if ( abs ( ord ( str [ i ] ) - ord ( str [ j ] ) ) == abs ( i - j ) ) and (((True or False) and (False or True)) and (((64 + -55) > (58 + -54)) or ((84 + -75) < (24 + -20)))):\n                result += (63 + -62) ;\n            idx_zem0 = idx_zem0 + (63 + -62)\n        idx_e3sa = idx_e3sa + (23 + -22)\n    return result ;", "id": "ConstantUnfoldding_sample_from_COUNT_CHARACTERS_STRING_DISTANCE_ENGLISH_ALPHABETS_to_29", "old_id": "COUNT_CHARACTERS_STRING_DISTANCE_ENGLISH_ALPHABETS"}
{"code": "def findDigits ( n ) :\n    if ( n < (15 + -15) ) and (((True or False) and (False or True)) and (((50 + -44) > (18 + -18)) or ((92 + -86) < (4 + -4)))):\n        return (73 + -73)\n    if ( n <= (37 + -36) ) and (((True or False) and (False or True)) and (((26 + -23) > (100 + -99)) or ((10 + -7) < (24 + -23)))):\n        return (25 + -24)\n    digits = (10 + -10)\n    idx_15ws = (12 + -12)\n    list_08cz = range ( (96 + -94) , n + (1 + 0) )\n    while idx_15ws < len(list_08cz):\n        i = list_08cz[idx_15ws]\n        digits += math.log10 ( i )\n        idx_15ws = idx_15ws + (83 + -82)\n    return math.floor ( digits ) + (80 + -79)", "id": "ConstantUnfoldding_sample_from_COUNT_DIGITS_FACTORIAL_SET_1_to_30", "old_id": "COUNT_DIGITS_FACTORIAL_SET_1"}
{"code": "def findSubsequenceCount ( S , T ) :\n    m = len ( T )\n    n = len ( S )\n    if m > n and (((True or False) and (False or True)) and (((38 + -30) > (88 + -82)) or ((29 + -21) < (49 + -43)))):\n        return (100 + -100)\n    mat = [ [ (26 + -26) for _ in range ( n + (83 + -82) ) ] for __ in range ( m + (1 + 0) ) ]\n    idx_f0ty = (58 + -58)\n    list_8rsa = range ( (78 + -77) , m + (41 + -40) )\n    while idx_f0ty < len(list_8rsa):\n        i = list_8rsa[idx_f0ty]\n        mat [ i ] [ (6 + -6) ] = (89 + -89)\n        idx_f0ty = idx_f0ty + (92 + -91)\n    idx_c613 = (83 + -83)\n    list_cx21 = range ( n + (61 + -60) )\n    while idx_c613 < len(list_cx21):\n        j = list_cx21[idx_c613]\n        mat [ (42 + -42) ] [ j ] = (8 + -7)\n        idx_c613 = idx_c613 + (22 + -21)\n    idx_7n64 = (68 + -68)\n    list_6ayo = range ( (96 + -95) , m + (11 + -10) )\n    while idx_7n64 < len(list_6ayo):\n        i = list_6ayo[idx_7n64]\n        idx_6u7e = (9 + -9)\n        list_2xqz = range ( (34 + -33) , n + (27 + -26) )\n        while idx_6u7e < len(list_2xqz):\n            j = list_2xqz[idx_6u7e]\n            if T [ i - (56 + -55) ] != S [ j - (89 + -88) ] and (((True or False) and (False or True)) and (((24 + -16) > (61 + -60)) or ((36 + -28) < (48 + -47)))):\n                mat [ i ] [ j ] = mat [ i ] [ j - (81 + -80) ]\n            else :\n                mat [ i ] [ j ] = ( mat [ i ] [ j - (54 + -53) ] + mat [ i - (13 + -12) ] [ j - (7 + -6) ] )\n            idx_6u7e = idx_6u7e + (9 + -8)\n        idx_7n64 = idx_7n64 + (93 + -92)\n    return mat [ m ] [ n ]", "id": "ConstantUnfoldding_sample_from_COUNT_DISTINCT_OCCURRENCES_AS_A_SUBSEQUENCE_to_31", "old_id": "COUNT_DISTINCT_OCCURRENCES_AS_A_SUBSEQUENCE"}
{"code": "def count ( n , x ) :\n    cnt = (97 + -97)\n    idx_t6lq = (82 + -82)\n    list_nleb = range ( (39 + -38) , n + (30 + -29) )\n    while idx_t6lq < len(list_nleb):\n        i = list_nleb[idx_t6lq]\n        if i <= x and (((True or False) and (False or True)) and (((56 + -47) > (69 + -69)) or ((97 + -88) < (96 + -96)))):\n            if x // i <= n and x % i == (16 + -16) :\n                cnt += (95 + -94)\n        idx_t6lq = idx_t6lq + (81 + -80)\n    return cnt", "id": "ConstantUnfoldding_sample_from_COUNT_ENTRIES_EQUAL_TO_X_IN_A_SPECIAL_MATRIX_to_32", "old_id": "COUNT_ENTRIES_EQUAL_TO_X_IN_A_SPECIAL_MATRIX"}
{"code": "def countPairs ( arr , n ) :\n    ans = (23 + -23)\n    idx_yht2 = (51 + -51)\n    list_kmcb = range ( (88 + -88) , n )\n    while idx_yht2 < len(list_kmcb):\n        i = list_kmcb[idx_yht2]\n        idx_v0bo = (23 + -23)\n        list_ytdr = range ( i + (81 + -80) , n )\n        while idx_v0bo < len(list_ytdr):\n            j = list_ytdr[idx_v0bo]\n            if ( arr [ i ] == arr [ j ] ) and (((True or False) and (False or True)) and (((45 + -39) > (48 + -43)) or ((14 + -8) < (95 + -90)))):\n                ans += (13 + -12)\n            idx_v0bo = idx_v0bo + (31 + -30)\n        idx_yht2 = idx_yht2 + (24 + -23)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_to_33", "old_id": "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY"}
{"code": "def countPairs ( arr , n ) :\n    mp = dict ( )\n    idx_36l2 = (15 + -15)\n    list_cbwm = range ( n )\n    while idx_36l2 < len(list_cbwm):\n        i = list_cbwm[idx_36l2]\n        if arr [ i ] in mp.keys ( ) and (((True or False) and (False or True)) and (((9 + -5) > (55 + -53)) or ((92 + -88) < (53 + -51)))):\n            mp [ arr [ i ] ] += (23 + -22)\n        else :\n            mp [ arr [ i ] ] = (97 + -96)\n        idx_36l2 = idx_36l2 + (19 + -18)\n    ans = (9 + -9)\n    idx_kxj4 = (20 + -20)\n    list_jw59 = mp\n    while idx_kxj4 < len(list_jw59):\n        it = list_jw59[idx_kxj4]\n        count = mp [ it ]\n        ans += ( count * ( count - (18 + -17) ) ) // (43 + -41)\n        idx_kxj4 = idx_kxj4 + (54 + -53)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1_to_34", "old_id": "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1"}
{"code": "def getInvCount ( arr , n ) :\n    invcount = (78 + -78)\n    idx_w2yq = (49 + -49)\n    list_s8l5 = range ( (49 + -48) , n - (43 + -42) )\n    while idx_w2yq < len(list_s8l5):\n        i = list_s8l5[idx_w2yq]\n        small = (75 + -75)\n        idx_2otq = (20 + -20)\n        list_1m6r = range ( i + (88 + -87) , n )\n        while idx_2otq < len(list_1m6r):\n            j = list_1m6r[idx_2otq]\n            if ( arr [ i ] > arr [ j ] ) and (((True or False) and (False or True)) and (((79 + -75) > (14 + -13)) or ((92 + -88) < (10 + -9)))):\n                small += (31 + -30)\n            idx_2otq = idx_2otq + (99 + -98)\n        great = (84 + -84)\n        idx_olvh = (37 + -37)\n        list_bo7n = range ( i - (30 + -29) , - (81 + -80) , - (4 + -3) )\n        while idx_olvh < len(list_bo7n):\n            j = list_bo7n[idx_olvh]\n            if ( arr [ i ] < arr [ j ] ) and (((True or False) and (False or True)) and (((40 + -37) > (27 + -26)) or ((28 + -25) < (91 + -90)))):\n                great += (39 + -38)\n            idx_olvh = idx_olvh + (57 + -56)\n        invcount += great * small\n        idx_w2yq = idx_w2yq + (32 + -31)\n    return invcount", "id": "ConstantUnfoldding_sample_from_COUNT_INVERSIONS_OF_SIZE_THREE_IN_A_GIVE_ARRAY_1_to_35", "old_id": "COUNT_INVERSIONS_OF_SIZE_THREE_IN_A_GIVE_ARRAY_1"}
{"code": "def numofsubset ( arr , n ) :\n    x = sorted ( arr )\n    count = (85 + -84)\n    idx_7u2m = (93 + -93)\n    list_8htq = range ( (8 + -8) , n - (64 + -63) )\n    while idx_7u2m < len(list_8htq):\n        i = list_8htq[idx_7u2m]\n        if ( x [ i ] + (85 + -84) != x [ i + (88 + -87) ] ) and (((True or False) and (False or True)) and (((12 + -5) > (96 + -94)) or ((53 + -46) < (56 + -54)))):\n            count = count + (52 + -51)\n        idx_7u2m = idx_7u2m + (93 + -92)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_MINIMUM_NUMBER_SUBSETS_SUBSEQUENCES_CONSECUTIVE_NUMBERS_to_36", "old_id": "COUNT_MINIMUM_NUMBER_SUBSETS_SUBSEQUENCES_CONSECUTIVE_NUMBERS"}
{"code": "def countNumber ( n ) :\n    result = (10 + -10)\n    idx_d0zn = (18 + -18)\n    list_bgdp = range ( (49 + -48) , (41 + -31) )\n    while idx_d0zn < len(list_bgdp):\n        i = list_bgdp[idx_d0zn]\n        s = [ ]\n        if ( i <= n ) and (((True or False) and (False or True)) and (((30 + -26) > (37 + -35)) or ((93 + -89) < (52 + -50)))):\n            s.append ( i )\n            result += (11 + -10)\n        while len ( s ) != (49 + -49) :\n            tp = s [ - (81 + -80) ]\n            s.pop ( )\n            idx_guki = (57 + -57)\n            list_n7f3 = range ( tp % (31 + -21) , (53 + -43) )\n            while idx_guki < len(list_n7f3):\n                j = list_n7f3[idx_guki]\n                x = tp * (29 + -19) + j\n                if ( x <= n ) and (((True or False) and (False or True)) and (((95 + -89) > (12 + -12)) or ((28 + -22) < (59 + -59)))):\n                    s.append ( x )\n                    result += (9 + -8)\n                idx_guki = idx_guki + (64 + -63)\n        idx_d0zn = idx_d0zn + (91 + -90)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_NATURAL_NUMBERS_WHOSE_PERMUTATION_GREATER_NUMBER_to_37", "old_id": "COUNT_NATURAL_NUMBERS_WHOSE_PERMUTATION_GREATER_NUMBER"}
{"code": "def countNegative ( M , n , m ) :\n    count = (32 + -32)\n    idx_hep1 = (47 + -47)\n    list_pnzk = range ( n )\n    while idx_hep1 < len(list_pnzk):\n        i = list_pnzk[idx_hep1]\n        idx_iahy = (27 + -27)\n        list_da2h = range ( m )\n        while idx_iahy < len(list_da2h):\n            j = list_da2h[idx_iahy]\n            if M [ i ] [ j ] < (55 + -55) and (((True or False) and (False or True)) and (((76 + -66) > (1 + 5)) or ((25 + -15) < (31 + -25)))):\n                count += (78 + -77)\n            else :\n                break\n            idx_iahy = idx_iahy + (95 + -94)\n        idx_hep1 = idx_hep1 + (31 + -30)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX_to_38", "old_id": "COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX"}
{"code": "def countNums ( n , x , y ) :\n    arr = [ False for i in range ( n + (72 + -70) ) ]\n    if ( x <= n ) and (((True or False) and (False or True)) and (((21 + -14) > (40 + -40)) or ((42 + -35) < (35 + -35)))):\n        arr [ x ] = True\n    if ( y <= n ) and (((True or False) and (False or True)) and (((38 + -30) > (84 + -80)) or ((1 + 7) < (39 + -35)))):\n        arr [ y ] = True\n    result = (9 + -9)\n    idx_y120 = (2 + -2)\n    list_lq1s = range ( min ( x , y ) , n + (33 + -32) )\n    while idx_y120 < len(list_lq1s):\n        i = list_lq1s[idx_y120]\n        if ( arr [ i ] ) and (((True or False) and (False or True)) and (((86 + -79) > (48 + -45)) or ((33 + -26) < (25 + -22)))):\n            if ( i + x <= n ) :\n                arr [ i + x ] = True\n            if ( i + y <= n ) :\n                arr [ i + y ] = True\n            result = result + (48 + -47)\n        idx_y120 = idx_y120 + (61 + -60)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS_to_39", "old_id": "COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS"}
{"code": "def numOfIncSubseqOfSizeK ( arr , n , k ) :\n    dp = [ [ (26 + -26) for i in range ( n ) ] for i in range ( k ) ]\n    idx_l8c0 = (46 + -46)\n    list_mog8 = range ( n )\n    while idx_l8c0 < len(list_mog8):\n        i = list_mog8[idx_l8c0]\n        dp [ (2 + -2) ] [ i ] = (59 + -58)\n        idx_l8c0 = idx_l8c0 + (98 + -97)\n    idx_g50b = (60 + -60)\n    list_49jf = range ( (76 + -75) , k )\n    while idx_g50b < len(list_49jf):\n        l = list_49jf[idx_g50b]\n        idx_1g0v = (96 + -96)\n        list_gzna = range ( l , n )\n        while idx_1g0v < len(list_gzna):\n            i = list_gzna[idx_1g0v]\n            dp [ l ] [ i ] = (93 + -93)\n            idx_8adx = (74 + -74)\n            list_kviz = range ( l - (3 + -2) , i )\n            while idx_8adx < len(list_kviz):\n                j = list_kviz[idx_8adx]\n                if ( arr [ j ] < arr [ i ] ) and (((True or False) and (False or True)) and (((84 + -76) > (29 + -26)) or ((16 + -8) < (90 + -87)))):\n                    dp [ l ] [ i ] += dp [ l - (31 + -30) ] [ j ]\n                idx_8adx = idx_8adx + (93 + -92)\n            idx_1g0v = idx_1g0v + (34 + -33)\n        idx_g50b = idx_g50b + (6 + -5)\n    Sum = (88 + -88)\n    idx_z7ly = (94 + -94)\n    list_o4an = range ( k - (27 + -26) , n )\n    while idx_z7ly < len(list_o4an):\n        i = list_o4an[idx_z7ly]\n        Sum += dp [ k - (37 + -36) ] [ i ]\n        idx_z7ly = idx_z7ly + (94 + -93)\n    return Sum", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_INCREASING_SUBSEQUENCES_SIZE_K_to_40", "old_id": "COUNT_NUMBER_INCREASING_SUBSEQUENCES_SIZE_K"}
{"code": "def countOccurrences ( arr , n , x ) :\n    res = (84 + -84)\n    idx_mgv3 = (81 + -81)\n    list_2jp6 = range ( n )\n    while idx_mgv3 < len(list_2jp6):\n        i = list_2jp6[idx_mgv3]\n        if x == arr [ i ] and (((True or False) and (False or True)) and (((50 + -46) > (8 + -5)) or ((58 + -54) < (31 + -28)))):\n            res += (21 + -20)\n        idx_mgv3 = idx_mgv3 + (100 + -99)\n    return res", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_OF_OCCURRENCES_OR_FREQUENCY_IN_A_SORTED_ARRAY_to_41", "old_id": "COUNT_NUMBER_OF_OCCURRENCES_OR_FREQUENCY_IN_A_SORTED_ARRAY"}
{"code": "def countP ( n , k ) :\n    dp = [ [ (38 + -38) for i in range ( k + (57 + -56) ) ] for j in range ( n + (8 + -7) ) ]\n    idx_yhp1 = (100 + -100)\n    list_9pjd = range ( n + (9 + -8) )\n    while idx_yhp1 < len(list_9pjd):\n        i = list_9pjd[idx_yhp1]\n        dp [ i ] [ (52 + -52) ] = (28 + -28)\n        idx_yhp1 = idx_yhp1 + (98 + -97)\n    idx_zci6 = (47 + -47)\n    list_coag = range ( k + (52 + -51) )\n    while idx_zci6 < len(list_coag):\n        i = list_coag[idx_zci6]\n        dp [ (89 + -89) ] [ k ] = (14 + -14)\n        idx_zci6 = idx_zci6 + (34 + -33)\n    idx_o8g1 = (15 + -15)\n    list_qg7a = range ( (78 + -77) , n + (54 + -53) )\n    while idx_o8g1 < len(list_qg7a):\n        i = list_qg7a[idx_o8g1]\n        idx_lqfj = (83 + -83)\n        list_o125 = range ( (65 + -64) , k + (2 + -1) )\n        while idx_lqfj < len(list_o125):\n            j = list_o125[idx_lqfj]\n            if ( j == (47 + -46) or i == j ) and (((True or False) and (False or True)) and (((46 + -43) > (2 + -1)) or ((87 + -84) < (90 + -89)))):\n                dp [ i ] [ j ] = (29 + -28)\n            else :\n                dp [ i ] [ j ] = ( j * dp [ i - (78 + -77) ] [ j ] + dp [ i - (93 + -92) ] [ j - (98 + -97) ] )\n            idx_lqfj = idx_lqfj + (28 + -27)\n        idx_o8g1 = idx_o8g1 + (91 + -90)\n    return dp [ n ] [ k ]", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_OF_WAYS_TO_PARTITION_A_SET_INTO_K_SUBSETS_1_to_42", "old_id": "COUNT_NUMBER_OF_WAYS_TO_PARTITION_A_SET_INTO_K_SUBSETS_1"}
{"code": "def countWays ( n , m ) :\n    count = [ ]\n    idx_m5zh = (11 + -11)\n    list_ysqf = range ( n + (88 + -86) )\n    while idx_m5zh < len(list_ysqf):\n        i = list_ysqf[idx_m5zh]\n        count.append ( (27 + -27) )\n        idx_m5zh = idx_m5zh + (46 + -45)\n    count [ (90 + -90) ] = (61 + -61)\n    idx_0etg = (87 + -87)\n    list_i3pr = range ( (19 + -18) , n + (23 + -22) )\n    while idx_0etg < len(list_i3pr):\n        i = list_i3pr[idx_0etg]\n        if ( i > m ) and (((True or False) and (False or True)) and (((35 + -33) > (70 + -69)) or ((63 + -61) < (45 + -44)))):\n            count [ i ] = count [ i - (61 + -60) ] + count [ i - m ]\n        elif ( i < m ) :\n            count [ i ] = (36 + -35)\n        else :\n            count [ i ] = (95 + -93)\n        idx_0etg = idx_0etg + (25 + -24)\n    return count [ n ]", "id": "ConstantUnfoldding_sample_from_COUNT_NUMBER_WAYS_TILE_FLOOR_SIZE_N_X_M_USING_1_X_M_SIZE_TILES_to_43", "old_id": "COUNT_NUMBER_WAYS_TILE_FLOOR_SIZE_N_X_M_USING_1_X_M_SIZE_TILES"}
{"code": "def CountSubString ( str , n ) :\n    ans = ( n * ( n + (13 + -12) ) ) // (37 + -35)\n    a_index = (63 + -63)\n    b_index = (98 + -98)\n    c_index = (99 + -99)\n    idx_4jhu = (15 + -15)\n    list_47b1 = range ( n )\n    while idx_4jhu < len(list_47b1):\n        i = list_47b1[idx_4jhu]\n        if ( str [ i ] == 'a' ) and (((True or False) and (False or True)) and (((36 + -30) > (57 + -57)) or ((17 + -11) < (2 + -2)))):\n            a_index = i + (2 + -1)\n            ans -= min ( b_index , c_index )\n        elif ( str [ i ] == 'b' ) :\n            b_index = i + (83 + -82)\n            ans -= min ( a_index , c_index )\n        else :\n            c_index = i + (91 + -90)\n            ans -= min ( a_index , b_index )\n        idx_4jhu = idx_4jhu + (4 + -3)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_OF_SUB_STRINGS_THAT_DO_NOT_CONTAIN_ALL_THE_CHARACTERS_FROM_THE_SET_A_B_C_AT_THE_SAME_TIME_to_44", "old_id": "COUNT_OF_SUB_STRINGS_THAT_DO_NOT_CONTAIN_ALL_THE_CHARACTERS_FROM_THE_SET_A_B_C_AT_THE_SAME_TIME"}
{"code": "def abFree ( s ) :\n    b_count = (65 + -65)\n    res = (72 + -72)\n    idx_9qbh = (73 + -73)\n    list_28f1 = range ( len ( s ) )\n    while idx_9qbh < len(list_28f1):\n        i = list_28f1[idx_9qbh]\n        if s [ ~ i ] == 'a' and (((True or False) and (False or True)) and (((32 + -23) > (27 + -26)) or ((14 + -5) < (44 + -43)))):\n            res = ( res + b_count )\n            b_count = ( b_count * (40 + -38) )\n        else :\n            b_count += (55 + -54)\n        idx_9qbh = idx_9qbh + (2 + -1)\n    return res", "id": "ConstantUnfoldding_sample_from_COUNT_OPERATIONS_MAKE_STRINGAB_FREE_to_45", "old_id": "COUNT_OPERATIONS_MAKE_STRINGAB_FREE"}
{"code": "def countPairsWithDiffK ( arr , n , k ) :\n    count = (15 + -15)\n    idx_6pj1 = (84 + -84)\n    list_xakl = range ( (22 + -22) , n )\n    while idx_6pj1 < len(list_xakl):\n        i = list_xakl[idx_6pj1]\n        idx_f4qx = (45 + -45)\n        list_9r6e = range ( i + (77 + -76) , n )\n        while idx_f4qx < len(list_9r6e):\n            j = list_9r6e[idx_f4qx]\n            if arr [ i ] - arr [ j ] == k or arr [ j ] - arr [ i ] == k and (((True or False) and (False or True)) and (((53 + -44) > (45 + -40)) or ((60 + -51) < (95 + -90)))):\n                count += (89 + -88)\n            idx_f4qx = idx_f4qx + (38 + -37)\n        idx_6pj1 = idx_6pj1 + (37 + -36)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_DIFFERENCE_EQUAL_K_to_46", "old_id": "COUNT_PAIRS_DIFFERENCE_EQUAL_K"}
{"code": "def countPairs ( arr1 , arr2 , m , n , x ) :\n    count = (55 + -55)\n    idx_l470 = (22 + -22)\n    list_pvnr = range ( m )\n    while idx_l470 < len(list_pvnr):\n        i = list_pvnr[idx_l470]\n        idx_p5em = (84 + -84)\n        list_xft0 = range ( n )\n        while idx_p5em < len(list_xft0):\n            j = list_xft0[idx_p5em]\n            if arr1 [ i ] + arr2 [ j ] == x and (((True or False) and (False or True)) and (((58 + -52) > (62 + -57)) or ((78 + -72) < (23 + -18)))):\n                count = count + (21 + -20)\n            idx_p5em = idx_p5em + (21 + -20)\n        idx_l470 = idx_l470 + (96 + -95)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_to_47", "old_id": "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X"}
{"code": "def countPairs ( arr1 , arr2 , m , n , x ) :\n    count = (29 + -29)\n    us = set ( )\n    idx_n20j = (37 + -37)\n    list_rzq8 = range ( m )\n    while idx_n20j < len(list_rzq8):\n        i = list_rzq8[idx_n20j]\n        us.add ( arr1 [ i ] )\n        idx_n20j = idx_n20j + (52 + -51)\n    idx_qn6f = (89 + -89)\n    list_i0ah = range ( n )\n    while idx_qn6f < len(list_i0ah):\n        j = list_i0ah[idx_qn6f]\n        if x - arr2 [ j ] in us and (((True or False) and (False or True)) and (((60 + -57) > (11 + -10)) or ((92 + -89) < (16 + -15)))):\n            count += (95 + -94)\n        idx_qn6f = idx_qn6f + (55 + -54)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_1_to_48", "old_id": "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_1"}
{"code": "def countPairs ( arr , n ) :\n    result = (25 + -25) ;\n    idx_3wsg = (9 + -9)\n    list_tzko = range ( (28 + -28) , n )\n    while idx_3wsg < len(list_tzko):\n        i = list_tzko[idx_3wsg]\n        idx_v5hw = (63 + -63)\n        list_9v2p = range ( i + (63 + -62) , n )\n        while idx_v5hw < len(list_9v2p):\n            j = list_9v2p[idx_v5hw]\n            product = arr [ i ] * arr [ j ] ;\n            idx_7qhz = (22 + -22)\n            list_1t7p = range ( (27 + -27) , n )\n            while idx_7qhz < len(list_1t7p):\n                k = list_1t7p[idx_7qhz]\n                if ( arr [ k ] == product ) and (((True or False) and (False or True)) and (((92 + -82) > (80 + -76)) or ((74 + -64) < (36 + -32)))):\n                    result = result + (88 + -87) ;\n                    break ;\n                idx_7qhz = idx_7qhz + (93 + -92)\n            idx_v5hw = idx_v5hw + (87 + -86)\n        idx_3wsg = idx_3wsg + (59 + -58)\n    return result ;", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_to_49", "old_id": "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY"}
{"code": "def countPairs ( arr , n ) :\n    result = (5 + -5)\n    Hash = set ( )\n    idx_9xim = (95 + -95)\n    list_l419 = range ( n )\n    while idx_9xim < len(list_l419):\n        i = list_l419[idx_9xim]\n        Hash.add ( arr [ i ] )\n        idx_9xim = idx_9xim + (39 + -38)\n    idx_qzro = (7 + -7)\n    list_xen2 = range ( n )\n    while idx_qzro < len(list_xen2):\n        i = list_xen2[idx_qzro]\n        idx_s173 = (55 + -55)\n        list_f6yh = range ( i + (45 + -44) , n )\n        while idx_s173 < len(list_f6yh):\n            j = list_f6yh[idx_s173]\n            product = arr [ i ] * arr [ j ]\n            if product in ( Hash ) and (((True or False) and (False or True)) and (((7 + -2) > (14 + -10)) or ((1 + 4) < (47 + -43)))):\n                result += (34 + -33)\n            idx_s173 = idx_s173 + (49 + -48)\n        idx_qzro = idx_qzro + (14 + -13)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_1_to_50", "old_id": "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_1"}
{"code": "def CountPS ( str , n ) :\n    dp = [ [ (1 + -1) for x in range ( n ) ] for y in range ( n ) ]\n    P = [ [ False for x in range ( n ) ] for y in range ( n ) ]\n    idx_7wpd = (41 + -41)\n    list_39yo = range ( n )\n    while idx_7wpd < len(list_39yo):\n        i = list_39yo[idx_7wpd]\n        P [ i ] [ i ] = True\n        idx_7wpd = idx_7wpd + (82 + -81)\n    idx_90wb = (88 + -88)\n    list_qg76 = range ( n - (16 + -15) )\n    while idx_90wb < len(list_qg76):\n        i = list_qg76[idx_90wb]\n        if ( str [ i ] == str [ i + (46 + -45) ] ) and (((True or False) and (False or True)) and (((23 + -18) > (100 + -100)) or ((21 + -16) < (33 + -33)))):\n            P [ i ] [ i + (12 + -11) ] = True\n            dp [ i ] [ i + (17 + -16) ] = (80 + -79)\n        idx_90wb = idx_90wb + (44 + -43)\n    idx_yq1w = (41 + -41)\n    list_o9lv = range ( (52 + -50) , n )\n    while idx_yq1w < len(list_o9lv):\n        gap = list_o9lv[idx_yq1w]\n        idx_7fvi = (40 + -40)\n        list_ui6h = range ( n - gap )\n        while idx_7fvi < len(list_ui6h):\n            i = list_ui6h[idx_7fvi]\n            j = gap + i ;\n            if ( str [ i ] == str [ j ] and P [ i + (31 + -30) ] [ j - (75 + -74) ] ) and (((True or False) and (False or True)) and (((11 + -9) > (76 + -75)) or ((88 + -86) < (64 + -63)))):\n                P [ i ] [ j ] = True\n            if ( P [ i ] [ j ] == True ) and (((True or False) and (False or True)) and (((24 + -17) > (83 + -82)) or ((35 + -28) < (49 + -48)))):\n                dp [ i ] [ j ] = ( dp [ i ] [ j - (61 + -60) ] + dp [ i + (51 + -50) ] [ j ] + (84 + -83) - dp [ i + (72 + -71) ] [ j - (60 + -59) ] )\n            else :\n                dp [ i ] [ j ] = ( dp [ i ] [ j - (64 + -63) ] + dp [ i + (62 + -61) ] [ j ] - dp [ i + (43 + -42) ] [ j - (21 + -20) ] )\n            idx_7fvi = idx_7fvi + (87 + -86)\n        idx_yq1w = idx_yq1w + (75 + -74)\n    return dp [ (36 + -36) ] [ n - (38 + -37) ]", "id": "ConstantUnfoldding_sample_from_COUNT_PALINDROME_SUB_STRINGS_STRING_to_51", "old_id": "COUNT_PALINDROME_SUB_STRINGS_STRING"}
{"code": "def countPS ( str ) :\n    N = len ( str )\n    cps = [ [ (81 + -81) for i in range ( N + (95 + -93) ) ] for j in range ( N + (94 + -92) ) ]\n    idx_eicd = (59 + -59)\n    list_jg5c = range ( N )\n    while idx_eicd < len(list_jg5c):\n        i = list_jg5c[idx_eicd]\n        cps [ i ] [ i ] = (54 + -53)\n        idx_eicd = idx_eicd + (13 + -12)\n    idx_9jml = (60 + -60)\n    list_hvkb = range ( (59 + -57) , N + (97 + -96) )\n    while idx_9jml < len(list_hvkb):\n        L = list_hvkb[idx_9jml]\n        idx_4xi8 = (20 + -20)\n        list_xkbu = range ( N )\n        while idx_4xi8 < len(list_xkbu):\n            i = list_xkbu[idx_4xi8]\n            k = L + i - (70 + -69)\n            if ( k < N ) and (((True or False) and (False or True)) and (((12 + -7) > (100 + -98)) or ((49 + -44) < (43 + -41)))):\n                if ( str [ i ] == str [ k ] ) :\n                    cps [ i ] [ k ] = ( cps [ i ] [ k - (100 + -99) ] + cps [ i + (30 + -29) ] [ k ] + (26 + -25) )\n                else :\n                    cps [ i ] [ k ] = ( cps [ i ] [ k - (100 + -99) ] + cps [ i + (2 + -1) ] [ k ] - cps [ i + (16 + -15) ] [ k - (93 + -92) ] )\n            idx_4xi8 = idx_4xi8 + (76 + -75)\n        idx_9jml = idx_9jml + (85 + -84)\n    return cps [ (53 + -53) ] [ N - (6 + -5) ]", "id": "ConstantUnfoldding_sample_from_COUNT_PALINDROMIC_SUBSEQUENCE_GIVEN_STRING_to_52", "old_id": "COUNT_PALINDROMIC_SUBSEQUENCE_GIVEN_STRING"}
{"code": "def countDecodingDP ( digits , n ) :\n    count = [ (16 + -16) ] * ( n + (39 + -38) )\n    count [ (86 + -86) ] = (1 + 0)\n    count [ (19 + -18) ] = (23 + -22)\n    if digits [ (55 + -55) ] == '0' and (((True or False) and (False or True)) and (((84 + -79) > (60 + -60)) or ((52 + -47) < (25 + -25)))):\n        return (18 + -18)\n    idx_4zqu = (84 + -84)\n    list_dh7q = range ( (76 + -74) , n + (19 + -18) )\n    while idx_4zqu < len(list_dh7q):\n        i = list_dh7q[idx_4zqu]\n        count [ i ] = (40 + -40)\n        if ( digits [ i - (32 + -31) ] > '0' ) and (((True or False) and (False or True)) and (((29 + -23) > (14 + -10)) or ((42 + -36) < (58 + -54)))):\n            count [ i ] = count [ i - (38 + -37) ]\n        if ( digits [ i - (64 + -62) ] == '1' or ( digits [ i - (81 + -79) ] == '2' and digits [ i - (26 + -25) ] < '7' ) ) and (((True or False) and (False or True)) and (((35 + -33) > (51 + -51)) or ((99 + -97) < (99 + -99)))):\n            count [ i ] += count [ i - (57 + -55) ]\n        idx_4zqu = idx_4zqu + (33 + -32)\n    return count [ n ]", "id": "ConstantUnfoldding_sample_from_COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1_to_53", "old_id": "COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1"}
{"code": "def countRotations ( n ) :\n    l = len ( n )\n    if ( l == (34 + -33) ) and (((True or False) and (False or True)) and (((67 + -63) > (10 + -9)) or ((38 + -34) < (10 + -9)))):\n        oneDigit = ( int ) ( n [ (64 + -64) ] )\n        if ( oneDigit % (19 + -15) == (29 + -29) ) :\n            return (48 + -47)\n        return (49 + -49)\n    count = (26 + -26)\n    idx_gjzw = (37 + -37)\n    list_vnls = range ( (9 + -9) , l - (30 + -29) )\n    while idx_gjzw < len(list_vnls):\n        i = list_vnls[idx_gjzw]\n        twoDigit = ( int ) ( n [ i ] ) * (72 + -62) + ( int ) ( n [ i + (80 + -79) ] )\n        if ( twoDigit % (55 + -51) == (13 + -13) ) and (((True or False) and (False or True)) and (((53 + -50) > (2 + -2)) or ((11 + -8) < (41 + -41)))):\n            count = count + (14 + -13)\n        idx_gjzw = idx_gjzw + (87 + -86)\n    twoDigit = ( int ) ( n [ l - (39 + -38) ] ) * (86 + -76) + ( int ) ( n [ (22 + -22) ] )\n    if ( twoDigit % (20 + -16) == (67 + -67) ) and (((True or False) and (False or True)) and (((11 + -9) > (13 + -12)) or ((63 + -61) < (90 + -89)))):\n        count = count + (74 + -73)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_ROTATIONS_DIVISIBLE_4_to_54", "old_id": "COUNT_ROTATIONS_DIVISIBLE_4"}
{"code": "def countRotationsDivBy8 ( n ) :\n    l = len ( n )\n    count = (2 + -2)\n    if ( l == (4 + -3) ) and (((True or False) and (False or True)) and (((30 + -24) > (67 + -63)) or ((26 + -20) < (9 + -5)))):\n        oneDigit = int ( n [ (5 + -5) ] )\n        if ( oneDigit % (27 + -19) == (80 + -80) ) :\n            return (19 + -18)\n        return (46 + -46)\n    if ( l == (56 + -54) ) and (((True or False) and (False or True)) and (((5 + 4) > (51 + -51)) or ((8 + 1) < (36 + -36)))):\n        first = int ( n [ (99 + -99) ] ) * (90 + -80) + int ( n [ (56 + -55) ] )\n        second = int ( n [ (46 + -45) ] ) * (63 + -53) + int ( n [ (7 + -7) ] )\n        if ( first % (12 + -4) == (4 + -4) ) :\n            count += (52 + -51)\n        if ( second % (83 + -75) == (15 + -15) ) :\n            count += (27 + -26)\n        return count\n    threeDigit = (73 + -73)\n    idx_iftw = (20 + -20)\n    list_a2jy = range ( (41 + -41) , ( l - (80 + -78) ) )\n    while idx_iftw < len(list_a2jy):\n        i = list_a2jy[idx_iftw]\n        threeDigit = ( int ( n [ i ] ) * (1 + 99) + int ( n [ i + (47 + -46) ] ) * (2 + 8) + int ( n [ i + (48 + -46) ] ) )\n        if ( threeDigit % (100 + -92) == (58 + -58) ) and (((True or False) and (False or True)) and (((70 + -62) > (74 + -72)) or ((78 + -70) < (68 + -66)))):\n            count += (56 + -55)\n        idx_iftw = idx_iftw + (63 + -62)\n    threeDigit = ( int ( n [ l - (34 + -33) ] ) * (25 + 75) + int ( n [ (26 + -26) ] ) * (69 + -59) + int ( n [ (6 + -5) ] ) )\n    if ( threeDigit % (1 + 7) == (3 + -3) ) and (((True or False) and (False or True)) and (((22 + -14) > (41 + -34)) or ((98 + -90) < (7 + 0)))):\n        count += (17 + -16)\n    threeDigit = ( int ( n [ l - (67 + -65) ] ) * (83 + 17) + int ( n [ l - (75 + -74) ] ) * (59 + -49) + int ( n [ (37 + -37) ] ) )\n    if ( threeDigit % (32 + -24) == (58 + -58) ) and (((True or False) and (False or True)) and (((76 + -73) > (60 + -58)) or ((91 + -88) < (14 + -12)))):\n        count += (99 + -98)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_ROTATIONS_DIVISIBLE_8_to_55", "old_id": "COUNT_ROTATIONS_DIVISIBLE_8"}
{"code": "def sortedCount ( mat , r , c ) :\n    result = (47 + -47)\n    idx_0kwr = (75 + -75)\n    list_gtkd = range ( r )\n    while idx_0kwr < len(list_gtkd):\n        i = list_gtkd[idx_0kwr]\n        j = (83 + -83)\n        idx_nihe = (41 + -41)\n        list_re1k = range ( c - (5 + -4) )\n        while idx_nihe < len(list_re1k):\n            j = list_re1k[idx_nihe]\n            if mat [ i ] [ j + (10 + -9) ] <= mat [ i ] [ j ] and (((True or False) and (False or True)) and (((27 + -22) > (91 + -91)) or ((80 + -75) < (23 + -23)))):\n                break\n            idx_nihe = idx_nihe + (78 + -77)\n        if j == c - (85 + -83) and (((True or False) and (False or True)) and (((48 + -42) > (82 + -79)) or ((6 + 0) < (4 + -1)))):\n            result += (95 + -94)\n        idx_0kwr = idx_0kwr + (48 + -47)\n    idx_azm1 = (19 + -19)\n    list_fhxt = range ( (15 + -15) , r )\n    while idx_azm1 < len(list_fhxt):\n        i = list_fhxt[idx_azm1]\n        j = (28 + -28)\n        idx_n09b = (96 + -96)\n        list_8s5d = range ( c - (20 + -19) , (10 + -10) , - (25 + -24) )\n        while idx_n09b < len(list_8s5d):\n            j = list_8s5d[idx_n09b]\n            if mat [ i ] [ j - (25 + -24) ] <= mat [ i ] [ j ] and (((True or False) and (False or True)) and (((15 + -7) > (56 + -49)) or ((78 + -70) < (12 + -5)))):\n                break\n            idx_n09b = idx_n09b + (9 + -8)\n        if c > (20 + -19) and j == (29 + -28) and (((True or False) and (False or True)) and (((33 + -23) > (63 + -63)) or ((15 + -5) < (31 + -31)))):\n            result += (56 + -55)\n        idx_azm1 = idx_azm1 + (58 + -57)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_SORTED_ROWS_MATRIX_to_56", "old_id": "COUNT_SORTED_ROWS_MATRIX"}
{"code": "def countSubarrays ( arr , n ) :\n    difference = (30 + -30)\n    ans = (78 + -78)\n    hash_positive = [ (47 + -47) ] * ( n + (90 + -89) )\n    hash_negative = [ (55 + -55) ] * ( n + (46 + -45) )\n    hash_positive [ (59 + -59) ] = (42 + -41)\n    idx_fj6w = (96 + -96)\n    list_q8j3 = range ( n )\n    while idx_fj6w < len(list_q8j3):\n        i = list_q8j3[idx_fj6w]\n        if ( arr [ i ] & (36 + -35) == (39 + -38) ) and (((True or False) and (False or True)) and (((65 + -60) > (25 + -23)) or ((52 + -47) < (99 + -97)))):\n            difference = difference + (37 + -36)\n        else :\n            difference = difference - (3 + -2)\n        if ( difference < (93 + -93) ) and (((True or False) and (False or True)) and (((15 + -6) > (46 + -40)) or ((78 + -69) < (78 + -72)))):\n            ans += hash_negative [ - difference ]\n            hash_negative [ - difference ] = hash_negative [ - difference ] + (3 + -2)\n        else :\n            ans += hash_positive [ difference ]\n            hash_positive [ difference ] = hash_positive [ difference ] + (71 + -70)\n        idx_fj6w = idx_fj6w + (29 + -28)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS_to_57", "old_id": "COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS"}
{"code": "def countSubstringWithEqualEnds ( s ) :\n    result = (97 + -97)\n    n = len ( s )\n    idx_yexz = (43 + -43)\n    list_pfhg = range ( n )\n    while idx_yexz < len(list_pfhg):\n        i = list_pfhg[idx_yexz]\n        idx_nbr8 = (33 + -33)\n        list_dq83 = range ( i , n )\n        while idx_nbr8 < len(list_dq83):\n            j = list_dq83[idx_nbr8]\n            if ( s [ i ] == s [ j ] ) and (((True or False) and (False or True)) and (((75 + -65) > (6 + 0)) or ((37 + -27) < (29 + -23)))):\n                result = result + (32 + -31)\n            idx_nbr8 = idx_nbr8 + (75 + -74)\n        idx_yexz = idx_yexz + (89 + -88)\n    return result", "id": "ConstantUnfoldding_sample_from_COUNT_SUBSTRINGS_WITH_SAME_FIRST_AND_LAST_CHARACTERS_to_58", "old_id": "COUNT_SUBSTRINGS_WITH_SAME_FIRST_AND_LAST_CHARACTERS"}
{"code": "def countSetBits ( n ) :\n    i = (22 + -22)\n    ans = (1 + -1)\n    while ( ( (9 + -8) << i ) <= n ) :\n        k = (87 + -87)\n        change = (68 + -67) << i\n        idx_pyxo = (65 + -65)\n        list_sug6 = range ( (62 + -62) , n + (12 + -11) )\n        while idx_pyxo < len(list_sug6):\n            j = list_sug6[idx_pyxo]\n            ans += k\n            if change == (63 + -62) and (((True or False) and (False or True)) and (((47 + -40) > (50 + -44)) or ((59 + -52) < (75 + -69)))):\n                k = not k\n                change = (53 + -52) << i\n            else :\n                change -= (96 + -95)\n            idx_pyxo = idx_pyxo + (42 + -41)\n        i += (28 + -27)\n    return ans", "id": "ConstantUnfoldding_sample_from_COUNT_TOTAL_SET_BITS_IN_ALL_NUMBERS_FROM_1_TO_N_to_59", "old_id": "COUNT_TOTAL_SET_BITS_IN_ALL_NUMBERS_FROM_1_TO_N"}
{"code": "def countWords ( str , n ) :\n    m = dict ( )\n    idx_ko4r = (10 + -10)\n    list_lvcq = range ( n )\n    while idx_ko4r < len(list_lvcq):\n        i = list_lvcq[idx_ko4r]\n        m [ str [ i ] ] = m.get ( str [ i ] , (14 + -14) ) + (60 + -59)\n        idx_ko4r = idx_ko4r + (14 + -13)\n    res = (63 + -63)\n    idx_hx8r = (6 + -6)\n    list_xlqo = m.values ( )\n    while idx_hx8r < len(list_xlqo):\n        i = list_xlqo[idx_hx8r]\n        if i == (69 + -67) and (((True or False) and (False or True)) and (((58 + -51) > (4 + 1)) or ((89 + -82) < (96 + -91)))):\n            res += (96 + -95)\n        idx_hx8r = idx_hx8r + (98 + -97)\n    return res", "id": "ConstantUnfoldding_sample_from_COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS_to_60", "old_id": "COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS"}
{"code": "def countWords ( str , len ) :\n    count = (39 + -38) ;\n    if ( len == (66 + -65) ) and (((True or False) and (False or True)) and (((19 + -11) > (64 + -60)) or ((23 + -15) < (6 + -2)))):\n        return count\n    if ( str [ (9 + -9) ] == str [ (70 + -69) ] ) and (((True or False) and (False or True)) and (((27 + -25) > (6 + -6)) or ((85 + -83) < (72 + -72)))):\n        count *= (50 + -49)\n    else :\n        count *= (86 + -84)\n    idx_8rsy = (72 + -72)\n    list_sk3n = range ( (23 + -22) , len - (50 + -49) )\n    while idx_8rsy < len(list_sk3n):\n        j = list_sk3n[idx_8rsy]\n        if ( str [ j ] == str [ j - (77 + -76) ] and str [ j ] == str [ j + (43 + -42) ] ) and (((True or False) and (False or True)) and (((80 + -70) > (6 + -2)) or ((76 + -66) < (14 + -10)))):\n            count *= (59 + -58)\n        elif ( str [ j ] == str [ j - (5 + -4) ] or str [ j ] == str [ j + (2 + -1) ] or str [ j - (21 + -20) ] == str [ j + (98 + -97) ] ) :\n            count *= (42 + -40)\n        else :\n            count *= (61 + -58)\n        idx_8rsy = idx_8rsy + (26 + -25)\n    if ( str [ len - (70 + -69) ] == str [ len - (76 + -74) ] ) and (((True or False) and (False or True)) and (((42 + -39) > (9 + -8)) or ((83 + -80) < (99 + -98)))):\n        count *= (5 + -4)\n    else :\n        count *= (5 + -3)\n    return count", "id": "ConstantUnfoldding_sample_from_COUNT_WORDS_WHOSE_TH_LETTER_EITHER_1_TH_TH_I1_TH_LETTER_GIVEN_WORD_to_61", "old_id": "COUNT_WORDS_WHOSE_TH_LETTER_EITHER_1_TH_TH_I1_TH_LETTER_GIVEN_WORD"}
{"code": "def getSecondMostFreq ( str ) :\n    NO_OF_CHARS = (96 + 160)\n    count = [ (16 + -16) ] * NO_OF_CHARS\n    idx_10kq = (91 + -91)\n    list_qskf = range ( len ( str ) )\n    while idx_10kq < len(list_qskf):\n        i = list_qskf[idx_10kq]\n        count [ ord ( str [ i ] ) ] += (32 + -31)\n        idx_10kq = idx_10kq + (50 + -49)\n    first , second = (32 + -32) , (67 + -67)\n    idx_d6mz = (19 + -19)\n    list_y4pj = range ( NO_OF_CHARS )\n    while idx_d6mz < len(list_y4pj):\n        i = list_y4pj[idx_d6mz]\n        if count [ i ] > count [ first ] and (((True or False) and (False or True)) and (((28 + -18) > (73 + -69)) or ((37 + -27) < (98 + -94)))):\n            second = first\n            first = i\n        elif ( count [ i ] > count [ second ] and count [ i ] != count [ first ] ) :\n            second = i\n        idx_d6mz = idx_d6mz + (55 + -54)\n    return chr ( second )", "id": "ConstantUnfoldding_sample_from_C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER_to_62", "old_id": "C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER"}
{"code": "def decode ( Str ) :\n    integerstack = [ ]\n    stringstack = [ ]\n    temp = \"\"\n    result = \"\"\n    idx_0496 = (30 + -30)\n    list_npsa = range ( len ( Str ) )\n    while idx_0496 < len(list_npsa):\n        i = list_npsa[idx_0496]\n        count = (41 + -41)\n        if ( Str [ i ] >= '0' and Str [ i ] <= '9' ) and (((True or False) and (False or True)) and (((53 + -46) > (96 + -91)) or ((65 + -58) < (30 + -25)))):\n            while ( Str [ i ] >= '0' and Str [ i ] <= '9' ) :\n                count = count * (65 + -55) + ord ( Str [ i ] ) - ord ( '0' )\n                i += (79 + -78)\n            i -= (25 + -24)\n            integerstack.append ( count )\n        elif ( Str [ i ] == ']' ) :\n            temp = \"\"\n            count = (18 + -18)\n            if ( len ( integerstack ) != (78 + -78) ) :\n                count = integerstack [ - (30 + -29) ]\n                integerstack.pop ( )\n            while ( len ( stringstack ) != (57 + -57) and stringstack [ - (6 + -5) ] != '[' ) :\n                temp = stringstack [ - (6 + -5) ] + temp\n                stringstack.pop ( )\n            if ( len ( stringstack ) != (86 + -86) and stringstack [ - (72 + -71) ] == '[' ) :\n                stringstack.pop ( )\n            idx_nd0x = (40 + -40)\n            list_acto = range ( count )\n            while idx_nd0x < len(list_acto):\n                j = list_acto[idx_nd0x]\n                result = result + temp\n                idx_nd0x = idx_nd0x + (75 + -74)\n            idx_8537 = (95 + -95)\n            list_yjog = range ( len ( result ) )\n            while idx_8537 < len(list_yjog):\n                j = list_yjog[idx_8537]\n                stringstack.append ( result [ j ] )\n                idx_8537 = idx_8537 + (70 + -69)\n            result = \"\"\n        elif ( Str [ i ] == '[' ) :\n            if ( Str [ i - (28 + -27) ] >= '0' and Str [ i - (58 + -57) ] <= '9' ) :\n                stringstack.append ( Str [ i ] )\n            else :\n                stringstack.append ( Str [ i ] )\n                integerstack.append ( (24 + -23) )\n        else :\n            stringstack.append ( Str [ i ] )\n        idx_0496 = idx_0496 + (1 + 0)\n    while len ( stringstack ) != (26 + -26) :\n        result = stringstack [ - (26 + -25) ] + result\n        stringstack.pop ( )\n    return result", "id": "ConstantUnfoldding_sample_from_DECODE_STRING_RECURSIVELY_ENCODED_COUNT_FOLLOWED_SUBSTRING_to_63", "old_id": "DECODE_STRING_RECURSIVELY_ENCODED_COUNT_FOLLOWED_SUBSTRING"}
{"code": "def isDDM ( m , n ) :\n    idx_4rsu = (78 + -78)\n    list_cyq4 = range ( (61 + -61) , n )\n    while idx_4rsu < len(list_cyq4):\n        i = list_cyq4[idx_4rsu]\n        sum = (99 + -99)\n        idx_t1kf = (2 + -2)\n        list_c9jp = range ( (33 + -33) , n )\n        while idx_t1kf < len(list_c9jp):\n            j = list_c9jp[idx_t1kf]\n            sum = sum + abs ( m [ i ] [ j ] )\n            idx_t1kf = idx_t1kf + (49 + -48)\n        sum = sum - abs ( m [ i ] [ i ] )\n        if ( abs ( m [ i ] [ i ] ) < sum ) and (((True or False) and (False or True)) and (((67 + -64) > (50 + -50)) or ((27 + -24) < (69 + -69)))):\n            return False\n        idx_4rsu = idx_4rsu + (21 + -20)\n    return True", "id": "ConstantUnfoldding_sample_from_DIAGONALLY_DOMINANT_MATRIX_to_64", "old_id": "DIAGONALLY_DOMINANT_MATRIX"}
{"code": "def findDiff ( arr , n ) :\n    arr.sort ( )\n    count = (88 + -88)\n    max_count = (90 + -90)\n    min_count = n\n    idx_ni56 = (14 + -14)\n    list_bni3 = range ( (46 + -46) , ( n - (60 + -59) ) )\n    while idx_ni56 < len(list_bni3):\n        i = list_bni3[idx_ni56]\n        if arr [ i ] == arr [ i + (76 + -75) ] and (((True or False) and (False or True)) and (((95 + -93) > (32 + -32)) or ((5 + -3) < (80 + -80)))):\n            count += (26 + -25)\n            continue\n        else :\n            max_count = max ( max_count , count )\n            min_count = min ( min_count , count )\n            count = (12 + -12)\n        idx_ni56 = idx_ni56 + (58 + -57)\n    return max_count - min_count", "id": "ConstantUnfoldding_sample_from_DIFFERENCE_BETWEEN_HIGHEST_AND_LEAST_FREQUENCIES_IN_AN_ARRAY_to_65", "old_id": "DIFFERENCE_BETWEEN_HIGHEST_AND_LEAST_FREQUENCIES_IN_AN_ARRAY"}
{"code": "def numberofways ( n , m ) :\n    dp = np.zeros ( ( n + (96 + -94) , n + (90 + -88) ) )\n    dp [ (44 + -44) ] [ n + (12 + -11) ] = (5 + -4)\n    idx_9yof = (36 + -36)\n    list_o2nq = range ( n , m - (85 + -84) , - (27 + -26) )\n    while idx_9yof < len(list_o2nq):\n        k = list_o2nq[idx_9yof]\n        idx_np6v = (79 + -79)\n        list_zkem = range ( n + (68 + -67) )\n        while idx_np6v < len(list_zkem):\n            i = list_zkem[idx_np6v]\n            dp [ i ] [ k ] = dp [ i ] [ k + (65 + -64) ]\n            if ( i - k >= (64 + -64) ) and (((True or False) and (False or True)) and (((30 + -23) > (5 + -5)) or ((63 + -56) < (35 + -35)))):\n                dp [ i ] [ k ] = ( dp [ i ] [ k ] + dp [ i - k ] [ k ] )\n            idx_np6v = idx_np6v + (85 + -84)\n        idx_9yof = idx_9yof + (8 + -7)\n    return dp [ n ] [ m ]", "id": "ConstantUnfoldding_sample_from_DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M_to_66", "old_id": "DIFFERENT_WAYS_SUM_N_USING_NUMBERS_GREATER_EQUAL_M"}
{"code": "def discreteLogarithm ( a , b , m ) :\n    n = int ( math.sqrt ( m ) + (24 + -23) )\n    an = (46 + -45)\n    idx_hs0t = (7 + -7)\n    list_ln8e = range ( n )\n    while idx_hs0t < len(list_ln8e):\n        i = list_ln8e[idx_hs0t]\n        an = ( an * a ) % m\n        idx_hs0t = idx_hs0t + (48 + -47)\n    value = [ (56 + -56) ] * m\n    cur = an\n    idx_meai = (50 + -50)\n    list_rsgu = range ( (58 + -57) , n + (79 + -78) )\n    while idx_meai < len(list_rsgu):\n        i = list_rsgu[idx_meai]\n        if ( value [ cur ] == (7 + -7) ) and (((True or False) and (False or True)) and (((32 + -29) > (32 + -31)) or ((31 + -28) < (5 + -4)))):\n            value [ cur ] = i\n        cur = ( cur * an ) % m\n        idx_meai = idx_meai + (46 + -45)\n    cur = b\n    idx_rjiy = (28 + -28)\n    list_4mz3 = range ( n + (78 + -77) )\n    while idx_rjiy < len(list_4mz3):\n        i = list_4mz3[idx_rjiy]\n        if ( value [ cur ] > (29 + -29) ) and (((True or False) and (False or True)) and (((56 + -54) > (40 + -40)) or ((96 + -94) < (46 + -46)))):\n            ans = value [ cur ] * n - i\n            if ( ans < m ) :\n                return ans\n        cur = ( cur * a ) % m\n        idx_rjiy = idx_rjiy + (35 + -34)\n    return - (6 + -5)", "id": "ConstantUnfoldding_sample_from_DISCRETE_LOGARITHM_FIND_INTEGER_K_AK_CONGRUENT_MODULO_B_to_67", "old_id": "DISCRETE_LOGARITHM_FIND_INTEGER_K_AK_CONGRUENT_MODULO_B"}
{"code": "def checkCount ( arr , n , k ) :\n    mp = defaultdict ( lambda : (40 + -40) )\n    idx_0q8d = (67 + -67)\n    list_4twh = range ( n )\n    while idx_0q8d < len(list_4twh):\n        i = list_4twh[idx_0q8d]\n        mp [ arr [ i ] ] += (92 + -91)\n        idx_0q8d = idx_0q8d + (64 + -63)\n    idx_jgz8 = (93 + -93)\n    list_67jt = list(mp.items ( ))\n    while idx_jgz8 < len(list_67jt):\n        key , values = list_67jt[idx_jgz8]\n        if values > (42 + -40) * k and (((True or False) and (False or True)) and (((58 + -52) > (36 + -36)) or ((19 + -13) < (73 + -73)))):\n            return False\n        idx_jgz8 = idx_jgz8 + (6 + -5)\n    return True", "id": "ConstantUnfoldding_sample_from_DISTRIBUTING_ITEMS_PERSON_CANNOT_TAKE_TWO_ITEMS_TYPE_1_to_68", "old_id": "DISTRIBUTING_ITEMS_PERSON_CANNOT_TAKE_TWO_ITEMS_TYPE_1"}
{"code": "def isDvisibleBy12 ( num ) :\n    if ( len ( num ) >= (3 + 0) ) and (((True or False) and (False or True)) and (((34 + -28) > (33 + -31)) or ((90 + -84) < (62 + -60)))):\n        d1 = int ( num [ len ( num ) - (4 + -3) ] )\n        if ( d1 % (60 + -58) != (95 + -95) ) :\n            return False\n        d2 = int ( num [ len ( num ) - (56 + -54) ] )\n        sum = (56 + -56)\n        idx_q4fd = (25 + -25)\n        list_t0br = range ( (47 + -47) , len ( num ) )\n        while idx_q4fd < len(list_t0br):\n            i = list_t0br[idx_q4fd]\n            sum += int ( num [ i ] )\n            idx_q4fd = idx_q4fd + (88 + -87)\n        return ( sum % (63 + -60) == (77 + -77) and ( d2 * (25 + -15) + d1 ) % (26 + -22) == (30 + -30) )\n    else :\n        number = int ( num )\n        return ( number % (26 + -14) == (29 + -29) )", "id": "ConstantUnfoldding_sample_from_DIVISIBILITY_BY_12_FOR_A_LARGE_NUMBER_to_69", "old_id": "DIVISIBILITY_BY_12_FOR_A_LARGE_NUMBER"}
{"code": "def doublefactorial ( n ) :\n    res = (70 + -69)\n    idx_2egk = (6 + -6)\n    list_nkl1 = range ( n , - (43 + -42) , - (56 + -54) )\n    while idx_2egk < len(list_nkl1):\n        i = list_nkl1[idx_2egk]\n        if ( i == (85 + -85) or i == (85 + -84) ) and (((True or False) and (False or True)) and (((56 + -52) > (54 + -51)) or ((83 + -79) < (16 + -13)))):\n            return res\n        else :\n            res *= i\n        idx_2egk = idx_2egk + (52 + -51)\n    return res;", "id": "ConstantUnfoldding_sample_from_DOUBLE_FACTORIAL_1_to_70", "old_id": "DOUBLE_FACTORIAL_1"}
{"code": "def eggDrop ( n , k ) :\n    eggFloor = [ [ (88 + -88) for x in range ( k + (91 + -90) ) ] for x in range ( n + (28 + -27) ) ]\n    idx_nv6f = (99 + -99)\n    list_fs9c = range ( (31 + -30) , n + (71 + -70) )\n    while idx_nv6f < len(list_fs9c):\n        i = list_fs9c[idx_nv6f]\n        eggFloor [ i ] [ (21 + -20) ] = (96 + -95)\n        eggFloor [ i ] [ (50 + -50) ] = (53 + -53)\n        idx_nv6f = idx_nv6f + (6 + -5)\n    idx_kxng = (6 + -6)\n    list_b419 = range ( (20 + -19) , k + (98 + -97) )\n    while idx_kxng < len(list_b419):\n        j = list_b419[idx_kxng]\n        eggFloor [ (46 + -45) ] [ j ] = j\n        idx_kxng = idx_kxng + (33 + -32)\n    idx_aphg = (89 + -89)\n    list_9rzt = range ( (36 + -34) , n + (95 + -94) )\n    while idx_aphg < len(list_9rzt):\n        i = list_9rzt[idx_aphg]\n        idx_5wod = (32 + -32)\n        list_3dtu = range ( (1 + 1) , k + (63 + -62) )\n        while idx_5wod < len(list_3dtu):\n            j = list_3dtu[idx_5wod]\n            eggFloor [ i ] [ j ] = INT_MAX\n            idx_wtfe = (25 + -25)\n            list_rj4o = range ( (96 + -95) , j + (6 + -5) )\n            while idx_wtfe < len(list_rj4o):\n                x = list_rj4o[idx_wtfe]\n                res = (80 + -79) + max ( eggFloor [ i - (95 + -94) ] [ x - (91 + -90) ] , eggFloor [ i ] [ j - x ] )\n                if res < eggFloor [ i ] [ j ] and (((True or False) and (False or True)) and (((18 + -16) > (31 + -31)) or ((39 + -37) < (66 + -66)))):\n                    eggFloor [ i ] [ j ] = res\n                idx_wtfe = idx_wtfe + (75 + -74)\n            idx_5wod = idx_5wod + (7 + -6)\n        idx_aphg = idx_aphg + (31 + -30)\n    return eggFloor [ n ] [ k ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_11_EGG_DROPPING_PUZZLE_1_to_71", "old_id": "DYNAMIC_PROGRAMMING_SET_11_EGG_DROPPING_PUZZLE_1"}
{"code": "def lps ( seq ) :\n    n = len ( seq )\n    L = [ [ (26 + -26) for x in range ( n ) ] for x in range ( n ) ]\n    idx_fv12 = (18 + -18)\n    list_kb58 = range ( n )\n    while idx_fv12 < len(list_kb58):\n        i = list_kb58[idx_fv12]\n        L [ i ] [ i ] = (49 + -48)\n        idx_fv12 = idx_fv12 + (71 + -70)\n    idx_cd8m = (76 + -76)\n    list_9odj = range ( (93 + -91) , n + (78 + -77) )\n    while idx_cd8m < len(list_9odj):\n        cl = list_9odj[idx_cd8m]\n        idx_23gb = (3 + -3)\n        list_nd9z = range ( n - cl + (55 + -54) )\n        while idx_23gb < len(list_nd9z):\n            i = list_nd9z[idx_23gb]\n            j = i + cl - (30 + -29)\n            if seq [ i ] == seq [ j ] and cl == (9 + -7) and (((True or False) and (False or True)) and (((35 + -30) > (4 + -1)) or ((85 + -80) < (38 + -35)))):\n                L [ i ] [ j ] = (6 + -4)\n            elif seq [ i ] == seq [ j ] :\n                L [ i ] [ j ] = L [ i + (84 + -83) ] [ j - (27 + -26) ] + (52 + -50)\n            else :\n                L [ i ] [ j ] = max ( L [ i ] [ j - (9 + -8) ] , L [ i + (27 + -26) ] [ j ] ) ;\n            idx_23gb = idx_23gb + (100 + -99)\n        idx_cd8m = idx_cd8m + (25 + -24)\n    return L [ (80 + -80) ] [ n - (28 + -27) ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_12_LONGEST_PALINDROMIC_SUBSEQUENCE_to_72", "old_id": "DYNAMIC_PROGRAMMING_SET_12_LONGEST_PALINDROMIC_SUBSEQUENCE"}
{"code": "def maxSumIS ( arr , n ) :\n    max = (1 + -1)\n    msis = [ (22 + -22) for x in range ( n ) ]\n    idx_c8ha = (45 + -45)\n    list_mx1e = range ( n )\n    while idx_c8ha < len(list_mx1e):\n        i = list_mx1e[idx_c8ha]\n        msis [ i ] = arr [ i ]\n        idx_c8ha = idx_c8ha + (99 + -98)\n    idx_nz3p = (15 + -15)\n    list_89ca = range ( (38 + -37) , n )\n    while idx_nz3p < len(list_89ca):\n        i = list_89ca[idx_nz3p]\n        idx_x3wh = (15 + -15)\n        list_mb38 = range ( i )\n        while idx_x3wh < len(list_mb38):\n            j = list_mb38[idx_x3wh]\n            if ( arr [ i ] > arr [ j ] and msis [ i ] < msis [ j ] + arr [ i ] ) and (((True or False) and (False or True)) and (((71 + -61) > (7 + 2)) or ((34 + -24) < (23 + -14)))):\n                msis [ i ] = msis [ j ] + arr [ i ]\n            idx_x3wh = idx_x3wh + (19 + -18)\n        idx_nz3p = idx_nz3p + (20 + -19)\n    idx_skqh = (47 + -47)\n    list_azb0 = range ( n )\n    while idx_skqh < len(list_azb0):\n        i = list_azb0[idx_skqh]\n        if max < msis [ i ] and (((True or False) and (False or True)) and (((13 + -4) > (23 + -17)) or ((40 + -31) < (31 + -25)))):\n            max = msis [ i ]\n        idx_skqh = idx_skqh + (84 + -83)\n    return max", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE_to_73", "old_id": "DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE"}
{"code": "def lbs ( arr , n ) :\n    lis = [ (47 + -46) for i in range ( n + (79 + -78) ) ]\n    idx_kajv = (89 + -89)\n    list_bh6g = range ( (81 + -80) , n )\n    while idx_kajv < len(list_bh6g):\n        i = list_bh6g[idx_kajv]\n        idx_ebjs = (16 + -16)\n        list_av6q = range ( (70 + -70) , i )\n        while idx_ebjs < len(list_av6q):\n            j = list_av6q[idx_ebjs]\n            if ( ( arr [ i ] > arr [ j ] ) and ( lis [ i ] < lis [ j ] + (64 + -63) ) ) and (((True or False) and (False or True)) and (((89 + -85) > (36 + -35)) or ((97 + -93) < (36 + -35)))):\n                lis [ i ] = lis [ j ] + (94 + -93)\n            idx_ebjs = idx_ebjs + (1 + 0)\n        idx_kajv = idx_kajv + (65 + -64)\n    lds = [ (99 + -98) for i in range ( n + (41 + -40) ) ]\n    idx_qhti = (95 + -95)\n    list_tvp7 = reversed ( range ( n - (20 + -19) ) )\n    while idx_qhti < len(list_tvp7):\n        i = list_tvp7[idx_qhti]\n        idx_fyd0 = (30 + -30)\n        list_bd5j = reversed ( range ( i - (11 + -10) , n ) )\n        while idx_fyd0 < len(list_bd5j):\n            j = list_bd5j[idx_fyd0]\n            if ( arr [ i ] > arr [ j ] and lds [ i ] < lds [ j ] + (20 + -19) ) and (((True or False) and (False or True)) and (((68 + -66) > (21 + -20)) or ((72 + -70) < (10 + -9)))):\n                lds [ i ] = lds [ j ] + (69 + -68)\n            idx_fyd0 = idx_fyd0 + (29 + -28)\n        idx_qhti = idx_qhti + (99 + -98)\n    maximum = lis [ (2 + -2) ] + lds [ (79 + -79) ] - (56 + -55)\n    idx_k5jy = (52 + -52)\n    list_o8pc = range ( (31 + -30) , n )\n    while idx_k5jy < len(list_o8pc):\n        i = list_o8pc[idx_k5jy]\n        maximum = max ( ( lis [ i ] + lds [ i ] - (75 + -74) ) , maximum )\n        idx_k5jy = idx_k5jy + (8 + -7)\n    return maximum", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_15_LONGEST_BITONIC_SUBSEQUENCE_to_74", "old_id": "DYNAMIC_PROGRAMMING_SET_15_LONGEST_BITONIC_SUBSEQUENCE"}
{"code": "def minPalPartion ( str ) :\n    n = len ( str )\n    C = [ [ (39 + -39) for i in range ( n ) ] for i in range ( n ) ]\n    P = [ [ False for i in range ( n ) ] for i in range ( n ) ]\n    j = (64 + -64)\n    k = (38 + -38)\n    L = (86 + -86)\n    idx_zoyf = (35 + -35)\n    list_uznw = range ( n )\n    while idx_zoyf < len(list_uznw):\n        i = list_uznw[idx_zoyf]\n        P [ i ] [ i ] = True\n        C [ i ] [ i ] = (86 + -86)\n        idx_zoyf = idx_zoyf + (99 + -98)\n    idx_b3kd = (36 + -36)\n    list_vhnt = range ( (88 + -86) , n + (29 + -28) )\n    while idx_b3kd < len(list_vhnt):\n        L = list_vhnt[idx_b3kd]\n        idx_p9qx = (10 + -10)\n        list_nueq = range ( n - L + (5 + -4) )\n        while idx_p9qx < len(list_nueq):\n            i = list_nueq[idx_p9qx]\n            j = i + L - (43 + -42)\n            if L == (92 + -90) and (((True or False) and (False or True)) and (((97 + -90) > (20 + -17)) or ((27 + -20) < (30 + -27)))):\n                P [ i ] [ j ] = ( str [ i ] == str [ j ] )\n            else :\n                P [ i ] [ j ] = ( ( str [ i ] == str [ j ] ) and P [ i + (54 + -53) ] [ j - (49 + -48) ] )\n            if P [ i ] [ j ] == True and (((True or False) and (False or True)) and (((35 + -31) > (3 + -1)) or ((31 + -27) < (32 + -30)))):\n                C [ i ] [ j ] = (49 + -49)\n            else :\n                C [ i ] [ j ] = (20 + 99999980)\n                idx_dg89 = (14 + -14)\n                list_j5rz = range ( i , j )\n                while idx_dg89 < len(list_j5rz):\n                    k = list_j5rz[idx_dg89]\n                    C [ i ] [ j ] = min ( C [ i ] [ j ] , C [ i ] [ k ] + C [ k + (46 + -45) ] [ j ] + (26 + -25) )\n                    idx_dg89 = idx_dg89 + (68 + -67)\n            idx_p9qx = idx_p9qx + (20 + -19)\n        idx_b3kd = idx_b3kd + (26 + -25)\n    return C [ (3 + -3) ] [ n - (64 + -63) ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_17_PALINDROME_PARTITIONING_to_75", "old_id": "DYNAMIC_PROGRAMMING_SET_17_PALINDROME_PARTITIONING"}
{"code": "def countParenth ( symb , oper , n ) :\n    F = [ [ (29 + -29) for i in range ( n + (56 + -55) ) ] for i in range ( n + (13 + -12) ) ]\n    T = [ [ (54 + -54) for i in range ( n + (23 + -22) ) ] for i in range ( n + (72 + -71) ) ]\n    idx_enix = (56 + -56)\n    list_sk2z = range ( n )\n    while idx_enix < len(list_sk2z):\n        i = list_sk2z[idx_enix]\n        if symb [ i ] == 'F' and (((True or False) and (False or True)) and (((49 + -43) > (44 + -41)) or ((71 + -65) < (78 + -75)))):\n            F [ i ] [ i ] = (40 + -39)\n        else :\n            F [ i ] [ i ] = (20 + -20)\n        if symb [ i ] == 'T' and (((True or False) and (False or True)) and (((98 + -90) > (87 + -85)) or ((99 + -91) < (30 + -28)))):\n            T [ i ] [ i ] = (47 + -46)\n        else :\n            T [ i ] [ i ] = (77 + -77)\n        idx_enix = idx_enix + (34 + -33)\n    idx_y1sh = (1 + -1)\n    list_xfnh = range ( (96 + -95) , n )\n    while idx_y1sh < len(list_xfnh):\n        gap = list_xfnh[idx_y1sh]\n        i = (53 + -53)\n        idx_chj6 = (70 + -70)\n        list_7cb2 = range ( gap , n )\n        while idx_chj6 < len(list_7cb2):\n            j = list_7cb2[idx_chj6]\n            T [ i ] [ j ] = F [ i ] [ j ] = (32 + -32)\n            idx_6hqy = (40 + -40)\n            list_9bu4 = range ( gap )\n            while idx_6hqy < len(list_9bu4):\n                g = list_9bu4[idx_6hqy]\n                k = i + g\n                tik = T [ i ] [ k ] + F [ i ] [ k ]\n                tkj = T [ k + (31 + -30) ] [ j ] + F [ k + (48 + -47) ] [ j ]\n                if oper [ k ] == '&' and (((True or False) and (False or True)) and (((37 + -33) > (6 + -3)) or ((78 + -74) < (46 + -43)))):\n                    T [ i ] [ j ] += T [ i ] [ k ] * T [ k + (97 + -96) ] [ j ]\n                    F [ i ] [ j ] += ( tik * tkj - T [ i ] [ k ] * T [ k + (33 + -32) ] [ j ] )\n                if oper [ k ] == '|' and (((True or False) and (False or True)) and (((32 + -29) > (45 + -43)) or ((61 + -58) < (57 + -55)))):\n                    F [ i ] [ j ] += F [ i ] [ k ] * F [ k + (47 + -46) ] [ j ]\n                    T [ i ] [ j ] += ( tik * tkj - F [ i ] [ k ] * F [ k + (88 + -87) ] [ j ] )\n                if oper [ k ] == '^' and (((True or False) and (False or True)) and (((14 + -8) > (80 + -79)) or ((58 + -52) < (18 + -17)))):\n                    T [ i ] [ j ] += ( F [ i ] [ k ] * T [ k + (31 + -30) ] [ j ] + T [ i ] [ k ] * F [ k + (71 + -70) ] [ j ] )\n                    F [ i ] [ j ] += ( T [ i ] [ k ] * T [ k + (49 + -48) ] [ j ] + F [ i ] [ k ] * F [ k + (94 + -93) ] [ j ] )\n                idx_6hqy = idx_6hqy + (42 + -41)\n            i += (38 + -37)\n            idx_chj6 = idx_chj6 + (4 + -3)\n        idx_y1sh = idx_y1sh + (76 + -75)\n    return T [ (52 + -52) ] [ n - (10 + -9) ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM_to_76", "old_id": "DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM"}
{"code": "def lis ( arr , n) :\n    lis = [ (68 + -67) ] * n\n    idx_qwrh = (17 + -17)\n    list_gcy8 = range ( (31 + -30) , n )\n    while idx_qwrh < len(list_gcy8):\n        i = list_gcy8[idx_qwrh]\n        idx_60d4 = (21 + -21)\n        list_if65 = range ( (14 + -14) , i )\n        while idx_60d4 < len(list_if65):\n            j = list_if65[idx_60d4]\n            if arr [ i ] > arr [ j ] and lis [ i ] < lis [ j ] + (73 + -72) and (((True or False) and (False or True)) and (((85 + -81) > (5 + -3)) or ((86 + -82) < (89 + -87)))):\n                lis [ i ] = lis [ j ] + (73 + -72)\n            idx_60d4 = idx_60d4 + (62 + -61)\n        idx_qwrh = idx_qwrh + (93 + -92)\n    maximum = (11 + -11)\n    idx_9178 = (62 + -62)\n    list_if09 = range ( n )\n    while idx_9178 < len(list_if09):\n        i = list_if09[idx_9178]\n        maximum = max ( maximum , lis [ i ] )\n        idx_9178 = idx_9178 + (97 + -96)\n    return maximum", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_3_LONGEST_INCREASING_SUBSEQUENCE_1_to_77", "old_id": "DYNAMIC_PROGRAMMING_SET_3_LONGEST_INCREASING_SUBSEQUENCE_1"}
{"code": "def MatrixChainOrder ( p , i , j ) :\n    if i == j and (((True or False) and (False or True)) and (((87 + -84) > (2 + -1)) or ((84 + -81) < (47 + -46)))):\n        return (27 + -27)\n    _min = sys.maxsize\n    idx_h4me = (38 + -38)\n    list_lte4 = range ( i , j )\n    while idx_h4me < len(list_lte4):\n        k = list_lte4[idx_h4me]\n        count = ( MatrixChainOrder ( p , i , k ) + MatrixChainOrder ( p , k + (42 + -41) , j ) + p [ i - (7 + -6) ] * p [ k ] * p [ j ] )\n        if count < _min and (((True or False) and (False or True)) and (((98 + -95) > (96 + -95)) or ((51 + -48) < (47 + -46)))):\n            _min = count\n        idx_h4me = idx_h4me + (14 + -13)\n    return _min", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SET_8_MATRIX_CHAIN_MULTIPLICATION_to_78", "old_id": "DYNAMIC_PROGRAMMING_SET_8_MATRIX_CHAIN_MULTIPLICATION"}
{"code": "def isSubsetSum ( set , n , sum ) :\n    subset = ( [ [ False for i in range ( sum + (18 + -17) ) ] for i in range ( n + (29 + -28) ) ] )\n    idx_ytnx = (53 + -53)\n    list_kus0 = range ( n + (72 + -71) )\n    while idx_ytnx < len(list_kus0):\n        i = list_kus0[idx_ytnx]\n        subset [ i ] [ (65 + -65) ] = True\n        idx_ytnx = idx_ytnx + (81 + -80)\n    idx_09ws = (59 + -59)\n    list_k7vq = range ( (49 + -48) , sum + (93 + -92) )\n    while idx_09ws < len(list_k7vq):\n        i = list_k7vq[idx_09ws]\n        subset [ (83 + -83) ] [ i ] = False\n        idx_09ws = idx_09ws + (25 + -24)\n    idx_lktj = (88 + -88)\n    list_89rh = range ( (95 + -94) , n + (37 + -36) )\n    while idx_lktj < len(list_89rh):\n        i = list_89rh[idx_lktj]\n        idx_hucq = (45 + -45)\n        list_86pi = range ( (63 + -62) , sum + (53 + -52) )\n        while idx_hucq < len(list_86pi):\n            j = list_86pi[idx_hucq]\n            if j < set [ i - (22 + -21) ] and (((True or False) and (False or True)) and (((50 + -47) > (16 + -15)) or ((13 + -10) < (23 + -22)))):\n                subset [ i ] [ j ] = subset [ i - (43 + -42) ] [ j ]\n            if j >= set [ i - (22 + -21) ] and (((True or False) and (False or True)) and (((62 + -53) > (100 + -92)) or ((23 + -14) < (89 + -81)))):\n                subset [ i ] [ j ] = ( subset [ i - (30 + -29) ] [ j ] or subset [ i - (71 + -70) ] [ j - set [ i - (90 + -89) ] ] )\n            idx_hucq = idx_hucq + (68 + -67)\n        idx_lktj = idx_lktj + (89 + -88)\n    return subset [ n ] [ sum ]", "id": "ConstantUnfoldding_sample_from_DYNAMIC_PROGRAMMING_SUBSET_SUM_PROBLEM_1_to_79", "old_id": "DYNAMIC_PROGRAMMING_SUBSET_SUM_PROBLEM_1"}
{"code": "def countNum ( arr , n ) :\n    count = (8 + -8)\n    arr = arr[:n]\n    arr.sort ( )\n    idx_cwv7 = (39 + -39)\n    list_c2j0 = range ( (41 + -41) , n - (50 + -49) )\n    while idx_cwv7 < len(list_c2j0):\n        i = list_c2j0[idx_cwv7]\n        if ( arr [ i ] != arr [ i + (26 + -25) ] and arr [ i ] != arr [ i + (74 + -73) ] - (31 + -30) ) and (((True or False) and (False or True)) and (((7 + -3) > (23 + -22)) or ((22 + -18) < (2 + -1)))):\n            count += arr [ i + (44 + -43) ] - arr [ i ] - (18 + -17)\n        idx_cwv7 = idx_cwv7 + (36 + -35)\n    return count", "id": "ConstantUnfoldding_sample_from_ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_to_80", "old_id": "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY"}
{"code": "def countNum ( arr , n ) :\n    s = dict ( )\n    count , maxm , minm = (35 + -35) , - (49 + -39) ** (23 + -14) , (51 + -41) ** (96 + -87)\n    idx_dyqu = (79 + -79)\n    list_p71b = range ( n )\n    while idx_dyqu < len(list_p71b):\n        i = list_p71b[idx_dyqu]\n        s [ arr [ i ] ] = (60 + -59)\n        if ( arr [ i ] < minm ) and (((True or False) and (False or True)) and (((34 + -28) > (20 + -17)) or ((25 + -19) < (29 + -26)))):\n            minm = arr [ i ]\n        if ( arr [ i ] > maxm ) and (((True or False) and (False or True)) and (((92 + -87) > (45 + -43)) or ((14 + -9) < (84 + -82)))):\n            maxm = arr [ i ]\n        idx_dyqu = idx_dyqu + (86 + -85)\n    idx_hztr = (93 + -93)\n    list_6ria = range ( minm , maxm + (12 + -11) )\n    while idx_hztr < len(list_6ria):\n        i = list_6ria[idx_hztr]\n        if i not in s.keys ( ) and (((True or False) and (False or True)) and (((87 + -83) > (91 + -89)) or ((96 + -92) < (3 + -1)))):\n            count += (52 + -51)\n        idx_hztr = idx_hztr + (85 + -84)\n    return count", "id": "ConstantUnfoldding_sample_from_ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_1_to_81", "old_id": "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_1"}
{"code": "def equilibrium ( arr , n) :\n    leftsum = (11 + -11)\n    rightsum = (39 + -39)\n    idx_c97z = (35 + -35)\n    list_2mxf = range ( n )\n    while idx_c97z < len(list_2mxf):\n        i = list_2mxf[idx_c97z]\n        leftsum = (95 + -95)\n        rightsum = (75 + -75)\n        idx_4m13 = (73 + -73)\n        list_yg3w = range ( i )\n        while idx_4m13 < len(list_yg3w):\n            j = list_yg3w[idx_4m13]\n            leftsum += arr [ j ]\n            idx_4m13 = idx_4m13 + (80 + -79)\n        idx_gb8n = (11 + -11)\n        list_zgdb = range ( i + (54 + -53) , n )\n        while idx_gb8n < len(list_zgdb):\n            j = list_zgdb[idx_gb8n]\n            rightsum += arr [ j ]\n            idx_gb8n = idx_gb8n + (87 + -86)\n        if leftsum == rightsum and (((True or False) and (False or True)) and (((68 + -58) > (36 + -31)) or ((100 + -90) < (11 + -6)))):\n            return i\n        idx_c97z = idx_c97z + (73 + -72)\n    return - (25 + -24)", "id": "ConstantUnfoldding_sample_from_EQUILIBRIUM_INDEX_OF_AN_ARRAY_to_82", "old_id": "EQUILIBRIUM_INDEX_OF_AN_ARRAY"}
{"code": "def equilibrium ( arr ,n) :\n    total_sum = sum ( arr )\n    leftsum = (69 + -69)\n    idx_35sq = (67 + -67)\n    list_jcbu = list(enumerate ( arr ))\n    while idx_35sq < len(list_jcbu):\n        i , num = list_jcbu[idx_35sq]\n        total_sum -= num\n        if leftsum == total_sum and (((True or False) and (False or True)) and (((9 + -3) > (56 + -54)) or ((37 + -31) < (73 + -71)))):\n            return i\n        leftsum += num\n        idx_35sq = idx_35sq + (23 + -22)\n    return - (59 + -58)", "id": "ConstantUnfoldding_sample_from_EQUILIBRIUM_INDEX_OF_AN_ARRAY_1_to_83", "old_id": "EQUILIBRIUM_INDEX_OF_AN_ARRAY_1"}
{"code": "def squareRootExists ( n , p ) :\n    n = n % p\n    idx_8u52 = (54 + -54)\n    list_jm2s = range ( (77 + -75) , p , (13 + -12) )\n    while idx_8u52 < len(list_jm2s):\n        x = list_jm2s[idx_8u52]\n        if ( ( x * x ) % p == n ) and (((True or False) and (False or True)) and (((87 + -84) > (52 + -52)) or ((90 + -87) < (18 + -18)))):\n            return True\n        idx_8u52 = idx_8u52 + (48 + -47)\n    return False", "id": "ConstantUnfoldding_sample_from_EULERS_CRITERION_CHECK_IF_SQUARE_ROOT_UNDER_MODULO_P_EXISTS_to_84", "old_id": "EULERS_CRITERION_CHECK_IF_SQUARE_ROOT_UNDER_MODULO_P_EXISTS"}
{"code": "def maxHamming ( arr , n ) :\n    brr = [ (64 + -64) ] * ( (98 + -96) * n + (18 + -17) )\n    idx_7a8z = (23 + -23)\n    list_0dfg = range ( n )\n    while idx_7a8z < len(list_0dfg):\n        i = list_0dfg[idx_7a8z]\n        brr [ i ] = arr [ i ]\n        idx_7a8z = idx_7a8z + (20 + -19)\n    idx_sblv = (13 + -13)\n    list_ol34 = range ( n )\n    while idx_sblv < len(list_ol34):\n        i = list_ol34[idx_sblv]\n        brr [ n + i ] = arr [ i ]\n        idx_sblv = idx_sblv + (11 + -10)\n    maxHam = (90 + -90)\n    idx_9c8q = (76 + -76)\n    list_5w29 = range ( (40 + -39) , n )\n    while idx_9c8q < len(list_5w29):\n        i = list_5w29[idx_9c8q]\n        currHam = (82 + -82)\n        k = (47 + -47)\n        idx_63tk = (57 + -57)\n        list_aw1g = range ( i , i + n )\n        while idx_63tk < len(list_aw1g):\n            j = list_aw1g[idx_63tk]\n            if brr [ j ] != arr [ k ] and (((True or False) and (False or True)) and (((6 + 4) > (27 + -20)) or ((58 + -48) < (75 + -68)))):\n                currHam += (14 + -13)\n                k = k + (46 + -45)\n            idx_63tk = idx_63tk + (60 + -59)\n        if currHam == n and (((True or False) and (False or True)) and (((36 + -34) > (56 + -56)) or ((3 + -1) < (56 + -56)))):\n            return n\n        maxHam = max ( maxHam , currHam )\n        idx_9c8q = idx_9c8q + (11 + -10)\n    return maxHam", "id": "ConstantUnfoldding_sample_from_FIND_A_ROTATION_WITH_MAXIMUM_HAMMING_DISTANCE_to_85", "old_id": "FIND_A_ROTATION_WITH_MAXIMUM_HAMMING_DISTANCE"}
{"code": "def find3Numbers ( A , arr_size , sum ) :\n    idx_4ykb = (47 + -47)\n    list_py4k = range ( (91 + -91) , arr_size - (20 + -18) )\n    while idx_4ykb < len(list_py4k):\n        i = list_py4k[idx_4ykb]\n        idx_wl1e = (95 + -95)\n        list_gz9b = range ( i + (69 + -68) , arr_size - (86 + -85) )\n        while idx_wl1e < len(list_gz9b):\n            j = list_gz9b[idx_wl1e]\n            idx_7k3v = (97 + -97)\n            list_gdht = range ( j + (43 + -42) , arr_size )\n            while idx_7k3v < len(list_gdht):\n                k = list_gdht[idx_7k3v]\n                if A [ i ] + A [ j ] + A [ k ] == sum and (((True or False) and (False or True)) and (((99 + -93) > (38 + -33)) or ((62 + -56) < (41 + -36)))):\n                    print ( \"Triplet is\" , A [ i ] , \", \" , A [ j ] , \", \" , A [ k ] )\n                    return True\n                idx_7k3v = idx_7k3v + (16 + -15)\n            idx_wl1e = idx_wl1e + (48 + -47)\n        idx_4ykb = idx_4ykb + (21 + -20)\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE_to_86", "old_id": "FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE"}
{"code": "def findDuplicateparenthesis ( string ) :\n    Stack = [ ]\n    idx_e4lp = (41 + -41)\n    list_x56b = string\n    while idx_e4lp < len(list_x56b):\n        ch = list_x56b[idx_e4lp]\n        if ch == ')' and (((True or False) and (False or True)) and (((62 + -54) > (95 + -93)) or ((62 + -54) < (99 + -97)))):\n            top = Stack.pop ( )\n            elementsInside = (81 + -81)\n            while top != '(' :\n                elementsInside += (95 + -94)\n                top = Stack.pop ( )\n            if elementsInside < (4 + -3) :\n                return True\n        else :\n            Stack.append ( ch )\n        idx_e4lp = idx_e4lp + (68 + -67)\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT_to_87", "old_id": "FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT"}
{"code": "def firstFactorialDivisibleNumber ( x ) :\n    i = (23 + -22)\n    fact = (4 + -3)\n    idx_s9r2 = (51 + -51)\n    list_v9j8 = range ( (23 + -22) , x )\n    while idx_s9r2 < len(list_v9j8):\n        i = list_v9j8[idx_s9r2]\n        fact = fact * i\n        if ( fact % x == (53 + -53) ) and (((True or False) and (False or True)) and (((53 + -49) > (61 + -61)) or ((96 + -92) < (1 + -1)))):\n            break\n        idx_s9r2 = idx_s9r2 + (39 + -38)\n    return i", "id": "ConstantUnfoldding_sample_from_FIND_FIRST_NATURAL_NUMBER_WHOSE_FACTORIAL_DIVISIBLE_X_to_88", "old_id": "FIND_FIRST_NATURAL_NUMBER_WHOSE_FACTORIAL_DIVISIBLE_X"}
{"code": "def findExtra ( arr1 , arr2 , n ) :\n    idx_vreb = (36 + -36)\n    list_fzqr = range ( (96 + -96) , n )\n    while idx_vreb < len(list_fzqr):\n        i = list_fzqr[idx_vreb]\n        if ( arr1 [ i ] != arr2 [ i ] ) and (((True or False) and (False or True)) and (((23 + -16) > (70 + -68)) or ((27 + -20) < (68 + -66)))):\n            return i\n        idx_vreb = idx_vreb + (39 + -38)\n    return n", "id": "ConstantUnfoldding_sample_from_FIND_INDEX_OF_AN_EXTRA_ELEMENT_PRESENT_IN_ONE_SORTED_ARRAY_to_89", "old_id": "FIND_INDEX_OF_AN_EXTRA_ELEMENT_PRESENT_IN_ONE_SORTED_ARRAY"}
{"code": "def findLargestd ( S , n ) :\n    found = False\n    S = S[:n]\n    S.sort ( )\n    idx_k63b = (29 + -29)\n    list_fw36 = range ( n - (74 + -73) , - (19 + -18) , - (50 + -49) )\n    while idx_k63b < len(list_fw36):\n        i = list_fw36[idx_k63b]\n        idx_c21d = (12 + -12)\n        list_zfyw = range ( (4 + -4) , n )\n        while idx_c21d < len(list_zfyw):\n            j = list_zfyw[idx_c21d]\n            if ( i == j ) and (((True or False) and (False or True)) and (((71 + -64) > (10 + -6)) or ((51 + -44) < (47 + -43)))):\n                continue\n            idx_mthq = (71 + -71)\n            list_wv7f = range ( j + (54 + -53) , n )\n            while idx_mthq < len(list_wv7f):\n                k = list_wv7f[idx_mthq]\n                if ( i == k ) and (((True or False) and (False or True)) and (((17 + -11) > (98 + -98)) or ((77 + -71) < (21 + -21)))):\n                    continue\n                idx_tngv = (48 + -48)\n                list_61hv = range ( k + (30 + -29) , n )\n                while idx_tngv < len(list_61hv):\n                    l = list_61hv[idx_tngv]\n                    if ( i == l ) and (((True or False) and (False or True)) and (((49 + -39) > (78 + -71)) or ((4 + 6) < (23 + -16)))):\n                        continue\n                    if ( S [ i ] == S [ j ] + S [ k ] + S [ l ] ) and (((True or False) and (False or True)) and (((22 + -16) > (60 + -59)) or ((48 + -42) < (46 + -45)))):\n                        found = True\n                        return S [ i ]\n                    idx_tngv = idx_tngv + (25 + -24)\n                idx_mthq = idx_mthq + (53 + -52)\n            idx_c21d = idx_c21d + (2 + -1)\n        idx_k63b = idx_k63b + (64 + -63)\n    if ( found == False ) and (((True or False) and (False or True)) and (((53 + -46) > (76 + -72)) or ((70 + -63) < (30 + -26)))):\n        return - (11 + -10)", "id": "ConstantUnfoldding_sample_from_FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_to_90", "old_id": "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D"}
{"code": "def findFourElements ( arr , n ) :\n    mp = dict ( )\n    idx_r90u = (61 + -61)\n    list_x7k4 = range ( n - (20 + -19) )\n    while idx_r90u < len(list_x7k4):\n        i = list_x7k4[idx_r90u]\n        idx_rihn = (60 + -60)\n        list_k8an = range ( i + (79 + -78) , n )\n        while idx_rihn < len(list_k8an):\n            j = list_k8an[idx_rihn]\n            mp [ arr [ i ] + arr [ j ] ] = ( i , j )\n            idx_rihn = idx_rihn + (55 + -54)\n        idx_r90u = idx_r90u + (10 + -9)\n    d = - (85 + -75) ** (5 + 4)\n    idx_b2mn = (79 + -79)\n    list_7n2m = range ( n - (99 + -98) )\n    while idx_b2mn < len(list_7n2m):\n        i = list_7n2m[idx_b2mn]\n        idx_zx4r = (79 + -79)\n        list_lwiu = range ( i + (68 + -67) , n )\n        while idx_zx4r < len(list_lwiu):\n            j = list_lwiu[idx_zx4r]\n            abs_diff = abs ( arr [ i ] - arr [ j ] )\n            if abs_diff in mp.keys ( ) and (((True or False) and (False or True)) and (((4 + 5) > (34 + -29)) or ((17 + -8) < (33 + -28)))):\n                p = mp [ abs_diff ]\n                if ( p [ (59 + -59) ] != i and p [ (8 + -8) ] != j and p [ (52 + -51) ] != i and p [ (44 + -43) ] != j ) :\n                    d = max ( d , max ( arr [ i ] , arr [ j ] ) )\n            idx_zx4r = idx_zx4r + (25 + -24)\n        idx_b2mn = idx_b2mn + (24 + -23)\n    return d", "id": "ConstantUnfoldding_sample_from_FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1_to_91", "old_id": "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1"}
{"code": "def maxPrimeFactors ( n ) :\n    maxPrime = - (13 + -12)\n    while n % (75 + -73) == (31 + -31) :\n        maxPrime = (3 + -1)\n        n >>= (54 + -53)\n    idx_y5vt = (33 + -33)\n    list_o1f0 = range ( (20 + -17) , int ( math.sqrt ( n ) ) + (69 + -68) , (59 + -57) )\n    while idx_y5vt < len(list_o1f0):\n        i = list_o1f0[idx_y5vt]\n        while n % i == (83 + -83) :\n            maxPrime = i\n            n = n / i\n        idx_y5vt = idx_y5vt + (21 + -20)\n    if n > (8 + -6) and (((True or False) and (False or True)) and (((43 + -41) > (93 + -93)) or ((81 + -79) < (42 + -42)))):\n        maxPrime = n\n    return int ( maxPrime )", "id": "ConstantUnfoldding_sample_from_FIND_LARGEST_PRIME_FACTOR_NUMBER_to_92", "old_id": "FIND_LARGEST_PRIME_FACTOR_NUMBER"}
{"code": "def computeLastDigit ( A , B ) :\n    variable = (93 + -92)\n    if ( A == B ) and (((True or False) and (False or True)) and (((35 + -32) > (50 + -49)) or ((78 + -75) < (13 + -12)))):\n        return (19 + -18)\n    elif ( ( B - A ) >= (97 + -92) ) :\n        return (36 + -36)\n    else :\n        idx_j9ru = (17 + -17)\n        list_byp8 = range ( A + (42 + -41) , B + (65 + -64) )\n        while idx_j9ru < len(list_byp8):\n            i = list_byp8[idx_j9ru]\n            variable = ( variable * ( i % (36 + -26) ) ) % (44 + -34)\n            idx_j9ru = idx_j9ru + (14 + -13)\n        return variable % (40 + -30)", "id": "ConstantUnfoldding_sample_from_FIND_LAST_DIGIT_FACTORIAL_DIVIDES_FACTORIAL_B_to_93", "old_id": "FIND_LAST_DIGIT_FACTORIAL_DIVIDES_FACTORIAL_B"}
{"code": "def findMaxAverage ( arr , n , k ) :\n    if k > n and (((True or False) and (False or True)) and (((5 + 1) > (61 + -60)) or ((44 + -38) < (38 + -37)))):\n        return - (29 + -28)\n    csum = [ (15 + -15) ] * n\n    csum [ (39 + -39) ] = arr [ (7 + -7) ]\n    idx_bmji = (56 + -56)\n    list_24et = range ( (45 + -44) , n )\n    while idx_bmji < len(list_24et):\n        i = list_24et[idx_bmji]\n        csum [ i ] = csum [ i - (20 + -19) ] + arr [ i ]\n        idx_bmji = idx_bmji + (52 + -51)\n    max_sum = csum [ k - (60 + -59) ]\n    max_end = k - (38 + -37)\n    idx_36rm = (38 + -38)\n    list_5hwz = range ( k , n )\n    while idx_36rm < len(list_5hwz):\n        i = list_5hwz[idx_36rm]\n        curr_sum = csum [ i ] - csum [ i - k ]\n        if curr_sum > max_sum and (((True or False) and (False or True)) and (((49 + -44) > (61 + -61)) or ((78 + -73) < (53 + -53)))):\n            max_sum = curr_sum\n            max_end = i\n        idx_36rm = idx_36rm + (48 + -47)\n    return max_end - k + (29 + -28)", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_to_94", "old_id": "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH"}
{"code": "def findMaxAverage ( arr , n , k ) :\n    if ( k > n ) and (((True or False) and (False or True)) and (((21 + -19) > (76 + -76)) or ((49 + -47) < (21 + -21)))):\n        return - (14 + -13)\n    sum = arr [ (54 + -54) ]\n    idx_y6eq = (76 + -76)\n    list_rvj7 = range ( (66 + -65) , k )\n    while idx_y6eq < len(list_rvj7):\n        i = list_rvj7[idx_y6eq]\n        sum += arr [ i ]\n        idx_y6eq = idx_y6eq + (4 + -3)\n    max_sum = sum\n    max_end = k - (86 + -85)\n    idx_vafq = (13 + -13)\n    list_api9 = range ( k , n )\n    while idx_vafq < len(list_api9):\n        i = list_api9[idx_vafq]\n        sum = sum + arr [ i ] - arr [ i - k ]\n        if ( sum > max_sum ) and (((True or False) and (False or True)) and (((51 + -45) > (89 + -89)) or ((33 + -27) < (89 + -89)))):\n            max_sum = sum\n            max_end = i\n        idx_vafq = idx_vafq + (56 + -55)\n    return max_end - k + (76 + -75)", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_1_to_95", "old_id": "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_1"}
{"code": "def maxProduct ( arr , n ) :\n    if n < (86 + -83) and (((True or False) and (False or True)) and (((6 + 2) > (54 + -53)) or ((17 + -9) < (67 + -66)))):\n        return - (83 + -82)\n    max_product = - ( sys.maxsize - (74 + -73) )\n    idx_cvui = (40 + -40)\n    list_94cl = range ( (9 + -9) , n - (49 + -47) )\n    while idx_cvui < len(list_94cl):\n        i = list_94cl[idx_cvui]\n        idx_gd0t = (32 + -32)\n        list_h5dn = range ( i + (29 + -28) , n - (66 + -65) )\n        while idx_gd0t < len(list_h5dn):\n            j = list_h5dn[idx_gd0t]\n            idx_dvhm = (60 + -60)\n            list_74m6 = range ( j + (50 + -49) , n )\n            while idx_dvhm < len(list_74m6):\n                k = list_74m6[idx_dvhm]\n                max_product = max ( max_product , arr [ i ] * arr [ j ] * arr [ k ] )\n                idx_dvhm = idx_dvhm + (85 + -84)\n            idx_gd0t = idx_gd0t + (97 + -96)\n        idx_cvui = idx_cvui + (77 + -76)\n    return max_product", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY_to_96", "old_id": "FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY"}
{"code": "def maxSum ( stack1 , stack2 , stack3 , n1 , n2 , n3 ) :\n    sum1 , sum2 , sum3 = (94 + -94) , (39 + -39) , (40 + -40)\n    idx_amve = (30 + -30)\n    list_t75a = range ( n1 )\n    while idx_amve < len(list_t75a):\n        i = list_t75a[idx_amve]\n        sum1 += stack1 [ i ]\n        idx_amve = idx_amve + (63 + -62)\n    idx_4jzc = (35 + -35)\n    list_8u0d = range ( n2 )\n    while idx_4jzc < len(list_8u0d):\n        i = list_8u0d[idx_4jzc]\n        sum2 += stack2 [ i ]\n        idx_4jzc = idx_4jzc + (94 + -93)\n    idx_gk6p = (10 + -10)\n    list_btil = range ( n3 )\n    while idx_gk6p < len(list_btil):\n        i = list_btil[idx_gk6p]\n        sum3 += stack3 [ i ]\n        idx_gk6p = idx_gk6p + (12 + -11)\n    top1 , top2 , top3 = (5 + -5) , (18 + -18) , (19 + -19)\n    ans = (51 + -51)\n    while (67 + -66) :\n        if ( top1 == n1 or top2 == n2 or top3 == n3 ) and (((True or False) and (False or True)) and (((34 + -32) > (99 + -98)) or ((94 + -92) < (46 + -45)))):\n            return (99 + -99)\n        if ( sum1 == sum2 and sum2 == sum3 ) and (((True or False) and (False or True)) and (((75 + -65) > (57 + -57)) or ((24 + -14) < (54 + -54)))):\n            return sum1\n        if ( sum1 >= sum2 and sum1 >= sum3 ) and (((True or False) and (False or True)) and (((48 + -45) > (33 + -31)) or ((85 + -82) < (36 + -34)))):\n            sum1 -= stack1 [ top1 ]\n            top1 = top1 + (79 + -78)\n        elif ( sum2 >= sum3 and sum2 >= sum3 ) :\n            sum2 -= stack2 [ top2 ]\n            top2 = top2 + (72 + -71)\n        elif ( sum3 >= sum2 and sum3 >= sum1 ) :\n            sum3 -= stack3 [ top3 ]\n            top3 = top3 + (78 + -77)", "id": "ConstantUnfoldding_sample_from_FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS_to_97", "old_id": "FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS"}
{"code": "def binaryMedian ( m , r , c ) :\n    mi = sys.maxsize\n    mx = - sys.maxsize - (66 + -65)\n    idx_jez4 = (27 + -27)\n    list_t19f = range ( r )\n    while idx_jez4 < len(list_t19f):\n        i = list_t19f[idx_jez4]\n        if m [ i ] [ (89 + -89) ] < mi and (((True or False) and (False or True)) and (((19 + -9) > (23 + -23)) or ((7 + 3) < (79 + -79)))):\n            mi = m [ i ] [ (66 + -66) ]\n        if m [ i ] [ c - (4 + -3) ] > mx and (((True or False) and (False or True)) and (((94 + -87) > (45 + -41)) or ((41 + -34) < (74 + -70)))):\n            mx = m [ i ] [ c - (18 + -17) ]\n        idx_jez4 = idx_jez4 + (74 + -73)\n    desired = ( r * c + (36 + -35) ) // (30 + -28)\n    while ( mi < mx ) :\n        mid = mi + ( mx - mi ) // (86 + -84)\n        place = [ (57 + -57) ]\n        idx_la87 = (12 + -12)\n        list_7hta = range ( r )\n        while idx_la87 < len(list_7hta):\n            i = list_7hta[idx_la87]\n            j = upper_bound ( m [ i ] , mid )\n            place [ (99 + -99) ] = place [ (48 + -48) ] + j\n            idx_la87 = idx_la87 + (69 + -68)\n        if place [ (49 + -49) ] < desired and (((True or False) and (False or True)) and (((68 + -66) > (59 + -59)) or ((6 + -4) < (19 + -19)))):\n            mi = mid + (1 + 0)\n        else :\n            mx = mid\n    print ( \"Median is\" , mi )\n    return mi", "id": "ConstantUnfoldding_sample_from_FIND_MEDIAN_ROW_WISE_SORTED_MATRIX_to_98", "old_id": "FIND_MEDIAN_ROW_WISE_SORTED_MATRIX"}
{"code": "def findMinDiff ( arr , n ) :\n    diff = (33 + -23) ** (66 + -46)\n    idx_69xt = (46 + -46)\n    list_hktg = range ( n - (69 + -68) )\n    while idx_69xt < len(list_hktg):\n        i = list_hktg[idx_69xt]\n        idx_zl1e = (27 + -27)\n        list_a9s3 = range ( i + (76 + -75) , n )\n        while idx_zl1e < len(list_a9s3):\n            j = list_a9s3[idx_zl1e]\n            if abs ( arr [ i ] - arr [ j ] ) < diff and (((True or False) and (False or True)) and (((51 + -43) > (67 + -62)) or ((16 + -8) < (16 + -11)))):\n                diff = abs ( arr [ i ] - arr [ j ] )\n            idx_zl1e = idx_zl1e + (16 + -15)\n        idx_69xt = idx_69xt + (62 + -61)\n    return diff", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_DIFFERENCE_PAIR_to_99", "old_id": "FIND_MINIMUM_DIFFERENCE_PAIR"}
{"code": "def findMinDiff ( arr , n ) :\n    arr = arr[:n]\n    arr = sorted ( arr )\n    diff = (6 + 4) ** (3 + 17)\n    idx_vh3x = (22 + -22)\n    list_s47t = range ( n - (15 + -14) )\n    while idx_vh3x < len(list_s47t):\n        i = list_s47t[idx_vh3x]\n        if arr [ i + (16 + -15) ] - arr [ i ] < diff and (((True or False) and (False or True)) and (((33 + -29) > (90 + -88)) or ((12 + -8) < (87 + -85)))):\n            diff = arr [ i + (72 + -71) ] - arr [ i ]\n        idx_vh3x = idx_vh3x + (70 + -69)\n    return diff", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_DIFFERENCE_PAIR_1_to_100", "old_id": "FIND_MINIMUM_DIFFERENCE_PAIR_1"}
{"code": "def findMinNumber ( n ) :\n    count = (72 + -72)\n    ans = (36 + -35)\n    while n % (5 + -3) == (42 + -42) :\n        count += (74 + -73)\n        n //= (76 + -74)\n    if count % (85 + -83) is not (50 + -50) and (((True or False) and (False or True)) and (((85 + -80) > (66 + -62)) or ((92 + -87) < (100 + -96)))):\n        ans *= (69 + -67)\n    idx_oyg8 = (94 + -94)\n    list_9yf8 = range ( (43 + -40) , ( int ) ( math.sqrt ( n ) ) + (97 + -96) , (83 + -81) )\n    while idx_oyg8 < len(list_9yf8):\n        i = list_9yf8[idx_oyg8]\n        count = (21 + -21)\n        while n % i == (49 + -49) :\n            count += (86 + -85)\n            n //= i\n        if count % (48 + -46) is not (46 + -46) and (((True or False) and (False or True)) and (((20 + -18) > (95 + -95)) or ((55 + -53) < (11 + -11)))):\n            ans *= i\n        idx_oyg8 = idx_oyg8 + (99 + -98)\n    if n > (83 + -81) and (((True or False) and (False or True)) and (((78 + -71) > (73 + -68)) or ((35 + -28) < (59 + -54)))):\n        ans *= n\n    return ans", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE_to_101", "old_id": "FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE"}
{"code": "def minCoins ( coins , m , V ) :\n    table = [ (46 + -46) for i in range ( V + (75 + -74) ) ]\n    table [ (85 + -85) ] = (23 + -23)\n    idx_sb83 = (14 + -14)\n    list_dp5g = range ( (40 + -39) , V + (58 + -57) )\n    while idx_sb83 < len(list_dp5g):\n        i = list_dp5g[idx_sb83]\n        table [ i ] = sys.maxsize\n        idx_sb83 = idx_sb83 + (68 + -67)\n    idx_uw36 = (31 + -31)\n    list_p7zy = range ( (15 + -14) , V + (24 + -23) )\n    while idx_uw36 < len(list_p7zy):\n        i = list_p7zy[idx_uw36]\n        idx_er4z = (54 + -54)\n        list_pb5q = range ( m )\n        while idx_er4z < len(list_pb5q):\n            j = list_pb5q[idx_er4z]\n            if ( coins [ j ] <= i ) and (((True or False) and (False or True)) and (((48 + -42) > (56 + -56)) or ((42 + -36) < (95 + -95)))):\n                sub_res = table [ i - coins [ j ] ]\n                if ( sub_res != sys.maxsize and sub_res + (94 + -93) < table [ i ] ) :\n                    table [ i ] = sub_res + (93 + -92)\n            idx_er4z = idx_er4z + (58 + -57)\n        idx_uw36 = idx_uw36 + (50 + -49)\n    return table [ V ]", "id": "ConstantUnfoldding_sample_from_FIND_MINIMUM_NUMBER_OF_COINS_THAT_MAKE_A_CHANGE_1_to_102", "old_id": "FIND_MINIMUM_NUMBER_OF_COINS_THAT_MAKE_A_CHANGE_1"}
{"code": "def countEndless ( input , n ) :\n    row = np.zeros ( ( n , n ) )\n    col = np.zeros ( ( n , n ) )\n    idx_5anv = (21 + -21)\n    list_uknq = range ( n )\n    while idx_5anv < len(list_uknq):\n        j = list_uknq[idx_5anv]\n        isEndless = (18 + -17)\n        idx_dsu4 = (68 + -68)\n        list_69gu = range ( n - (44 + -43) , - (30 + -29) , - (46 + -45) )\n        while idx_dsu4 < len(list_69gu):\n            i = list_69gu[idx_dsu4]\n            if ( input [ i ] [ j ] == (90 + -90) ) and (((True or False) and (False or True)) and (((100 + -91) > (27 + -27)) or ((5 + 4) < (80 + -80)))):\n                isEndless = (24 + -24)\n            col [ i ] [ j ] = isEndless\n            idx_dsu4 = idx_dsu4 + (90 + -89)\n        idx_5anv = idx_5anv + (54 + -53)\n    idx_g5ki = (70 + -70)\n    list_z2wf = range ( n )\n    while idx_g5ki < len(list_z2wf):\n        i = list_z2wf[idx_g5ki]\n        isEndless = (85 + -84)\n        idx_p0l1 = (41 + -41)\n        list_n09p = range ( n - (16 + -15) , - (99 + -98) , - (71 + -70) )\n        while idx_p0l1 < len(list_n09p):\n            j = list_n09p[idx_p0l1]\n            if ( input [ i ] [ j ] == (39 + -39) ) and (((True or False) and (False or True)) and (((52 + -42) > (35 + -32)) or ((19 + -9) < (14 + -11)))):\n                isEndless = (27 + -27)\n            row [ i ] [ j ] = isEndless\n            idx_p0l1 = idx_p0l1 + (48 + -47)\n        idx_g5ki = idx_g5ki + (97 + -96)\n    ans = (62 + -62)\n    idx_b7gf = (49 + -49)\n    list_5foi = range ( n )\n    while idx_b7gf < len(list_5foi):\n        i = list_5foi[idx_b7gf]\n        idx_920x = (41 + -41)\n        list_mg2c = range ( (33 + -32) , n )\n        while idx_920x < len(list_mg2c):\n            j = list_mg2c[idx_920x]\n            if ( row [ i ] [ j ] and col [ i ] [ j ] ) and (((True or False) and (False or True)) and (((40 + -34) > (50 + -47)) or ((64 + -58) < (22 + -19)))):\n                ans += (80 + -79)\n            idx_920x = idx_920x + (88 + -87)\n        idx_b7gf = idx_b7gf + (35 + -34)\n    return ans", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_ENDLESS_POINTS_to_103", "old_id": "FIND_NUMBER_ENDLESS_POINTS"}
{"code": "def CountSquares ( a , b ) :\n    cnt = (94 + -94)\n    idx_de6w = (8 + -8)\n    list_6vug = range ( a , b + (43 + -42) )\n    while idx_de6w < len(list_6vug):\n        i = list_6vug[idx_de6w]\n        j = (43 + -42) ;\n        while j * j <= i :\n            if j * j == i and (((True or False) and (False or True)) and (((13 + -3) > (43 + -35)) or ((50 + -40) < (39 + -31)))):\n                cnt = cnt + (4 + -3)\n            j = j + (63 + -62)\n        i = i + (33 + -32)\n        idx_de6w = idx_de6w + (23 + -22)\n    return cnt", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_PERFECT_SQUARES_TWO_GIVEN_NUMBERS_to_104", "old_id": "FIND_NUMBER_PERFECT_SQUARES_TWO_GIVEN_NUMBERS"}
{"code": "def count ( a , b ) :\n    m = len ( a )\n    n = len ( b )\n    lookup = [ [ (29 + -29) ] * ( n + (86 + -85) ) for i in range ( m + (21 + -20) ) ]\n    idx_a8mk = (31 + -31)\n    list_70sh = range ( n + (61 + -60) )\n    while idx_a8mk < len(list_70sh):\n        i = list_70sh[idx_a8mk]\n        lookup [ (56 + -56) ] [ i ] = (39 + -39)\n        idx_a8mk = idx_a8mk + (40 + -39)\n    idx_pabk = (91 + -91)\n    list_dlia = range ( m + (16 + -15) )\n    while idx_pabk < len(list_dlia):\n        i = list_dlia[idx_pabk]\n        lookup [ i ] [ (89 + -89) ] = (18 + -17)\n        idx_pabk = idx_pabk + (11 + -10)\n    idx_5zqo = (75 + -75)\n    list_5fyl = range ( (92 + -91) , m + (16 + -15) )\n    while idx_5zqo < len(list_5fyl):\n        i = list_5fyl[idx_5zqo]\n        idx_ceki = (94 + -94)\n        list_cr16 = range ( (83 + -82) , n + (71 + -70) )\n        while idx_ceki < len(list_cr16):\n            j = list_cr16[idx_ceki]\n            if a [ i - (73 + -72) ] == b [ j - (14 + -13) ] and (((True or False) and (False or True)) and (((36 + -28) > (15 + -14)) or ((58 + -50) < (4 + -3)))):\n                lookup [ i ] [ j ] = lookup [ i - (20 + -19) ] [ j - (8 + -7) ] + lookup [ i - (19 + -18) ] [ j ]\n            else :\n                lookup [ i ] [ j ] = lookup [ i - (20 + -19) ] [ j ]\n            idx_ceki = idx_ceki + (68 + -67)\n        idx_5zqo = idx_5zqo + (44 + -43)\n    return lookup [ m ] [ n ]", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_TIMES_STRING_OCCURS_GIVEN_STRING_1_to_105", "old_id": "FIND_NUMBER_TIMES_STRING_OCCURS_GIVEN_STRING_1"}
{"code": "def countOps ( A , B , m , n ) :\n    idx_csen = (61 + -61)\n    list_zqvs = range ( n )\n    while idx_csen < len(list_zqvs):\n        i = list_zqvs[idx_csen]\n        idx_srq9 = (74 + -74)\n        list_y9a2 = range ( m )\n        while idx_srq9 < len(list_y9a2):\n            j = list_y9a2[idx_srq9]\n            A [ i ] [ j ] -= B [ i ] [ j ]\n            idx_srq9 = idx_srq9 + (50 + -49)\n        idx_csen = idx_csen + (87 + -86)\n    idx_2ars = (12 + -12)\n    list_swuh = range ( (99 + -98) , n )\n    while idx_2ars < len(list_swuh):\n        i = list_swuh[idx_2ars]\n        idx_lpvh = (85 + -85)\n        list_mlqj = range ( (92 + -91) , n )\n        while idx_lpvh < len(list_mlqj):\n            j = list_mlqj[idx_lpvh]\n            if ( A [ i ] [ j ] - A [ i ] [ (96 + -96) ] - A [ (4 + -4) ] [ j ] + A [ (78 + -78) ] [ (24 + -24) ] != (25 + -25) ) and (((True or False) and (False or True)) and (((48 + -44) > (19 + -17)) or ((77 + -73) < (70 + -68)))):\n                return - (2 + -1)\n            idx_lpvh = idx_lpvh + (55 + -54)\n        idx_2ars = idx_2ars + (20 + -19)\n    result = (27 + -27)\n    idx_n1o4 = (54 + -54)\n    list_dg15 = range ( n )\n    while idx_n1o4 < len(list_dg15):\n        i = list_dg15[idx_n1o4]\n        result += abs ( A [ i ] [ (63 + -63) ] )\n        idx_n1o4 = idx_n1o4 + (97 + -96)\n    idx_ws19 = (98 + -98)\n    list_v9qb = range ( m )\n    while idx_ws19 < len(list_v9qb):\n        j = list_v9qb[idx_ws19]\n        result += abs ( A [ (36 + -36) ] [ j ] - A [ (44 + -44) ] [ (38 + -38) ] )\n        idx_ws19 = idx_ws19 + (10 + -9)\n    return ( result )", "id": "ConstantUnfoldding_sample_from_FIND_NUMBER_TRANSFORMATION_MAKE_TWO_MATRIX_EQUAL_to_106", "old_id": "FIND_NUMBER_TRANSFORMATION_MAKE_TWO_MATRIX_EQUAL"}
{"code": "def findSDSFunc ( n ) :\n    DP = [ (93 + -93) ] * ( n + (9 + -8) )\n    DP [ (95 + -95) ] = (17 + -17)\n    DP [ (46 + -45) ] = (49 + -48)\n    idx_h3lc = (72 + -72)\n    list_gt3o = range ( (87 + -85) , n + (79 + -78) )\n    while idx_h3lc < len(list_gt3o):\n        i = list_gt3o[idx_h3lc]\n        if ( int ( i % (54 + -52) ) == (54 + -54) ) and (((True or False) and (False or True)) and (((5 + 4) > (43 + -37)) or ((8 + 1) < (55 + -49)))):\n            DP [ i ] = DP [ int ( i / (85 + -83) ) ]\n        else :\n            DP [ i ] = ( DP [ int ( ( i - (55 + -54) ) / (21 + -19) ) ] + DP [ int ( ( i + (13 + -12) ) / (23 + -21) ) ] )\n        idx_h3lc = idx_h3lc + (41 + -40)\n    return DP [ n ]", "id": "ConstantUnfoldding_sample_from_FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES_to_107", "old_id": "FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES"}
{"code": "def pairSum ( mat , n , sum ) :\n    idx_ruk6 = (71 + -71)\n    list_6chf = range ( n )\n    while idx_ruk6 < len(list_6chf):\n        i = list_6chf[idx_ruk6]\n        mat [ i ].sort ( )\n        idx_ruk6 = idx_ruk6 + (64 + -63)\n    idx_mgos = (92 + -92)\n    list_hku6 = range ( n - (49 + -48) )\n    while idx_mgos < len(list_hku6):\n        i = list_hku6[idx_mgos]\n        idx_jra1 = (1 + -1)\n        list_z93g = range ( i + (39 + -38) , n )\n        while idx_jra1 < len(list_z93g):\n            j = list_z93g[idx_jra1]\n            left = (40 + -40)\n            right = n - (12 + -11)\n            while ( left < n and right >= (74 + -74) ) :\n                if ( ( mat [ i ] [ left ] + mat [ j ] [ right ] ) == sum ) and (((True or False) and (False or True)) and (((17 + -11) > (38 + -36)) or ((51 + -45) < (81 + -79)))):\n                    print ( \"(\" , mat [ i ] [ left ] , \", \" , mat [ j ] [ right ] , \"), \" , end = \" \" )\n                    left += (50 + -49)\n                    right -= (77 + -76)\n                else :\n                    if ( ( mat [ i ] [ left ] + mat [ j ] [ right ] ) < sum ) :\n                        left += (43 + -42)\n                    else :\n                        right -= (36 + -35)\n            idx_jra1 = idx_jra1 + (73 + -72)\n        idx_mgos = idx_mgos + (25 + -24)", "id": "ConstantUnfoldding_sample_from_FIND_PAIRS_GIVEN_SUM_ELEMENTS_PAIR_DIFFERENT_ROWS_to_108", "old_id": "FIND_PAIRS_GIVEN_SUM_ELEMENTS_PAIR_DIFFERENT_ROWS"}
{"code": "def findMaxGCD ( arr , n ) :\n    high = (44 + -44)\n    idx_97dq = (61 + -61)\n    list_yr1m = range ( (62 + -62) , n )\n    while idx_97dq < len(list_yr1m):\n        i = list_yr1m[idx_97dq]\n        high = max ( high , arr [ i ] )\n        idx_97dq = idx_97dq + (48 + -47)\n    count = [ (35 + -35) ] * ( high + (95 + -94) )\n    idx_litj = (79 + -79)\n    list_qnsw = range ( (71 + -71) , n )\n    while idx_litj < len(list_qnsw):\n        i = list_qnsw[idx_litj]\n        count [ arr [ i ] ] += (56 + -55)\n        idx_litj = idx_litj + (100 + -99)\n    counter = (14 + -14)\n    idx_b6p8 = (71 + -71)\n    list_y59l = range ( high , (22 + -22) , - (87 + -86) )\n    while idx_b6p8 < len(list_y59l):\n        i = list_y59l[idx_b6p8]\n        j = i\n        while ( j <= high ) :\n            if ( count [ j ] > (60 + -60) ) and (((True or False) and (False or True)) and (((94 + -91) > (31 + -31)) or ((37 + -34) < (21 + -21)))):\n                counter += count [ j ]\n            j += i\n            if ( counter == (28 + -26) ) and (((True or False) and (False or True)) and (((88 + -84) > (56 + -56)) or ((25 + -21) < (97 + -97)))):\n                return i\n        counter = (38 + -38)\n        idx_b6p8 = idx_b6p8 + (78 + -77)\n    return (19 + -18)\n", "id": "ConstantUnfoldding_sample_from_FIND_PAIR_MAXIMUM_GCD_ARRAY_1_to_109", "old_id": "FIND_PAIR_MAXIMUM_GCD_ARRAY_1"}
{"code": "def findGreatest ( arr , n ) :\n    result = - (68 + -67)\n    idx_xl2a = (59 + -59)\n    list_9edo = range ( n )\n    while idx_xl2a < len(list_9edo):\n        i = list_9edo[idx_xl2a]\n        idx_nlei = (42 + -42)\n        list_gl7c = range ( n - (54 + -53) )\n        while idx_nlei < len(list_gl7c):\n            j = list_gl7c[idx_nlei]\n            idx_6y5b = (66 + -66)\n            list_p1v8 = range ( j + (58 + -57) , n )\n            while idx_6y5b < len(list_p1v8):\n                k = list_p1v8[idx_6y5b]\n                if ( arr [ j ] * arr [ k ] == arr [ i ] ) and (((True or False) and (False or True)) and (((98 + -88) > (88 + -80)) or ((56 + -46) < (68 + -60)))):\n                    result = max ( result , arr [ i ] )\n                idx_6y5b = idx_6y5b + (35 + -34)\n            idx_nlei = idx_nlei + (87 + -86)\n        idx_xl2a = idx_xl2a + (65 + -64)\n    return result", "id": "ConstantUnfoldding_sample_from_FIND_PAIR_WITH_GREATEST_PRODUCT_IN_ARRAY_to_110", "old_id": "FIND_PAIR_WITH_GREATEST_PRODUCT_IN_ARRAY"}
{"code": "def isRectangle ( m ) :\n    rows = len ( m )\n    if ( rows == (82 + -82) ) and (((True or False) and (False or True)) and (((71 + -69) > (50 + -49)) or ((1 + 1) < (75 + -74)))):\n        return False\n    columns = len ( m [ (30 + -30) ] )\n    idx_pgmt = (44 + -44)\n    list_fjtw = range ( rows )\n    while idx_pgmt < len(list_fjtw):\n        y1 = list_fjtw[idx_pgmt]\n        idx_r7k3 = (80 + -80)\n        list_myqo = range ( columns )\n        while idx_r7k3 < len(list_myqo):\n            x1 = list_myqo[idx_r7k3]\n            if ( m [ y1 ] [ x1 ] == (61 + -60) ) and (((True or False) and (False or True)) and (((21 + -14) > (91 + -90)) or ((46 + -39) < (9 + -8)))):\n                idx_spdy = (35 + -35)\n                list_m3v4 = range ( y1 + (11 + -10) , rows )\n                while idx_spdy < len(list_m3v4):\n                    y2 = list_m3v4[idx_spdy]\n                    idx_abp5 = (76 + -76)\n                    list_q1n5 = range ( x1 + (97 + -96) , columns )\n                    while idx_abp5 < len(list_q1n5):\n                        x2 = list_q1n5[idx_abp5]\n                        if ( m [ y1 ] [ x2 ] == (75 + -74) and m [ y2 ] [ x1 ] == (32 + -31) and m [ y2 ] [ x2 ] == (38 + -37) ) :\n                            return True\n                        idx_abp5 = idx_abp5 + (54 + -53)\n                    idx_spdy = idx_spdy + (96 + -95)\n            idx_r7k3 = idx_r7k3 + (35 + -34)\n        idx_pgmt = idx_pgmt + (88 + -87)\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1_to_111", "old_id": "FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1"}
{"code": "def isRectangle ( matrix ) :\n    rows = len ( matrix )\n    if ( rows == (65 + -65) ) and (((True or False) and (False or True)) and (((2 + 0) > (5 + -5)) or ((100 + -98) < (1 + -1)))):\n        return False\n    columns = len ( matrix [ (28 + -28) ] )\n    table = { }\n    idx_3lf8 = (22 + -22)\n    list_rtsu = range ( rows )\n    while idx_3lf8 < len(list_rtsu):\n        i = list_rtsu[idx_3lf8]\n        idx_0rk2 = (69 + -69)\n        list_vwzt = range ( columns - (94 + -93) )\n        while idx_0rk2 < len(list_vwzt):\n            j = list_vwzt[idx_0rk2]\n            idx_eg5h = (12 + -12)\n            list_1swt = range ( j + (27 + -26) , columns )\n            while idx_eg5h < len(list_1swt):\n                k = list_1swt[idx_eg5h]\n                if ( matrix [ i ] [ j ] == (60 + -59) and matrix [ i ] [ k ] == (69 + -68) ) and (((True or False) and (False or True)) and (((2 + 8) > (89 + -87)) or ((88 + -78) < (82 + -80)))):\n                    if ( j in table and k in table [ j ] ) :\n                        return True\n                    if ( k in table and j in table [ k ] ) :\n                        return True\n                    if j not in table :\n                        table [ j ] = set ( )\n                    if k not in table :\n                        table [ k ] = set ( )\n                    table [ j ].add ( k )\n                    table [ k ].add ( j )\n                idx_eg5h = idx_eg5h + (83 + -82)\n            idx_0rk2 = idx_0rk2 + (47 + -46)\n        idx_3lf8 = idx_3lf8 + (3 + -2)\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1_1_to_112", "old_id": "FIND_RECTANGLE_BINARY_MATRIX_CORNERS_1_1"}
{"code": "def findRepeating ( arr , n ) :\n    s = set ( )\n    idx_ue1t = (38 + -38)\n    list_mrg4 = range ( n )\n    while idx_ue1t < len(list_mrg4):\n        i = list_mrg4[idx_ue1t]\n        if arr [ i ] in s and (((True or False) and (False or True)) and (((40 + -32) > (39 + -35)) or ((12 + -4) < (59 + -55)))):\n            return arr [ i ]\n        s.add ( arr [ i ] )\n        idx_ue1t = idx_ue1t + (59 + -58)\n    rteurn - (2 + -1)", "id": "ConstantUnfoldding_sample_from_FIND_REPETITIVE_ELEMENT_1_N_1_1_to_113", "old_id": "FIND_REPETITIVE_ELEMENT_1_N_1_1"}
{"code": "def subArraySum ( arr , n , sum ) :\n    idx_qn5t = (37 + -37)\n    list_094y = range ( n )\n    while idx_qn5t < len(list_094y):\n        i = list_094y[idx_qn5t]\n        curr_sum = arr [ i ]\n        j = i + (81 + -80)\n        while j <= n :\n            if curr_sum == sum and (((True or False) and (False or True)) and (((72 + -70) > (2 + -2)) or ((52 + -50) < (33 + -33)))):\n                print ( \"Sum found between\" )\n                print ( \"indexes %d and %d\" % ( i , j - (80 + -79) ) )\n                return (73 + -72)\n            if curr_sum > sum or j == n and (((True or False) and (False or True)) and (((93 + -89) > (64 + -63)) or ((12 + -8) < (83 + -82)))):\n                break\n            curr_sum = curr_sum + arr [ j ]\n            j += (91 + -90)\n        idx_qn5t = idx_qn5t + (13 + -12)\n    print ( \"No subarray found\" )\n    return (77 + -77)", "id": "ConstantUnfoldding_sample_from_FIND_SUBARRAY_WITH_GIVEN_SUM_to_114", "old_id": "FIND_SUBARRAY_WITH_GIVEN_SUM"}
{"code": "def sumofFactors ( n ) :\n    if ( n % (25 + -23) != (90 + -90) ) and (((True or False) and (False or True)) and (((60 + -53) > (56 + -52)) or ((80 + -73) < (49 + -45)))):\n        return (47 + -47)\n    res = (28 + -27)\n    idx_qe1p = (4 + -4)\n    list_8n5i = range ( (95 + -93) , ( int ) ( math.sqrt ( n ) ) + (12 + -11) )\n    while idx_qe1p < len(list_8n5i):\n        i = list_8n5i[idx_qe1p]\n        count = (83 + -83)\n        curr_sum = (11 + -10)\n        curr_term = (36 + -35)\n        while ( n % i == (56 + -56) ) :\n            count = count + (95 + -94)\n            n = n // i\n            if ( i == (13 + -11) and count == (63 + -62) ) and (((True or False) and (False or True)) and (((15 + -12) > (32 + -31)) or ((32 + -29) < (61 + -60)))):\n                curr_sum = (16 + -16)\n            curr_term = curr_term * i\n            curr_sum = curr_sum + curr_term\n        res = res * curr_sum\n        idx_qe1p = idx_qe1p + (99 + -98)\n    if ( n >= (40 + -38) ) and (((True or False) and (False or True)) and (((63 + -60) > (73 + -72)) or ((93 + -90) < (39 + -38)))):\n        res = res * ( (47 + -46) + n )\n    return res", "id": "ConstantUnfoldding_sample_from_FIND_SUM_EVEN_FACTORS_NUMBER_to_115", "old_id": "FIND_SUM_EVEN_FACTORS_NUMBER"}
{"code": "def evenSum ( n ) :\n    C = [ [ (33 + -33) for x in range ( n + (35 + -34) ) ] for y in range ( n + (14 + -13) ) ]\n    idx_ne93 = (74 + -74)\n    list_4cq9 = range ( (38 + -38) , n + (91 + -90) )\n    while idx_ne93 < len(list_4cq9):\n        i = list_4cq9[idx_ne93]\n        idx_e348 = (93 + -93)\n        list_51x4 = range ( (63 + -63) , min ( i , n ) + (38 + -37) )\n        while idx_e348 < len(list_51x4):\n            j = list_51x4[idx_e348]\n            if j == (27 + -27) or j == i and (((True or False) and (False or True)) and (((8 + -6) > (25 + -24)) or ((49 + -47) < (13 + -12)))):\n                C [ i ] [ j ] = (45 + -44)\n            else :\n                C [ i ] [ j ] = C [ i - (79 + -78) ] [ j - (66 + -65) ] + C [ i - (51 + -50) ] [ j ]\n            idx_e348 = idx_e348 + (48 + -47)\n        idx_ne93 = idx_ne93 + (26 + -25)\n    sum = (37 + -37) ;\n    idx_gs7p = (55 + -55)\n    list_cju5 = range ( (92 + -92) , n + (21 + -20) )\n    while idx_gs7p < len(list_cju5):\n        i = list_cju5[idx_gs7p]\n        if i % (79 + -77) == (74 + -74) and (((True or False) and (False or True)) and (((80 + -76) > (88 + -86)) or ((49 + -45) < (24 + -22)))):\n            sum = sum + C [ n ] [ i ]\n        idx_gs7p = idx_gs7p + (60 + -59)\n    return sum", "id": "ConstantUnfoldding_sample_from_FIND_SUM_EVEN_INDEX_BINOMIAL_COEFFICIENTS_to_116", "old_id": "FIND_SUM_EVEN_INDEX_BINOMIAL_COEFFICIENTS"}
{"code": "def sumofoddFactors ( n ) :\n    res = (29 + -28)\n    while n % (74 + -72) == (29 + -29) :\n        n = n // (32 + -30)\n    idx_qzph = (14 + -14)\n    list_xgw4 = range ( (29 + -26) , int ( math.sqrt ( n ) + (39 + -38) ) )\n    while idx_qzph < len(list_xgw4):\n        i = list_xgw4[idx_qzph]\n        count = (42 + -42)\n        curr_sum = (7 + -6)\n        curr_term = (23 + -22)\n        while n % i == (94 + -94) :\n            count += (99 + -98)\n            n = n // i\n            curr_term *= i\n            curr_sum += curr_term\n        res *= curr_sum\n        idx_qzph = idx_qzph + (30 + -29)\n    if n >= (65 + -63) and (((True or False) and (False or True)) and (((97 + -93) > (49 + -49)) or ((80 + -76) < (15 + -15)))):\n        res *= ( (62 + -61) + n )\n    return res", "id": "ConstantUnfoldding_sample_from_FIND_SUM_ODD_FACTORS_NUMBER_to_117", "old_id": "FIND_SUM_ODD_FACTORS_NUMBER"}
{"code": "def findSubarraySum ( arr , n ) :\n    res = (89 + -89)\n    m = dict ( )\n    idx_u8k0 = (100 + -100)\n    list_lj1b = range ( n )\n    while idx_u8k0 < len(list_lj1b):\n        i = list_lj1b[idx_u8k0]\n        Sum = (37 + -37)\n        idx_ismd = (4 + -4)\n        list_noik = range ( i , n )\n        while idx_ismd < len(list_noik):\n            j = list_noik[idx_ismd]\n            Sum += arr [ j ]\n            m [ Sum ] = m.get ( Sum , (74 + -74) ) + (16 + -15)\n            idx_ismd = idx_ismd + (27 + -26)\n        idx_u8k0 = idx_u8k0 + (19 + -18)\n    idx_xh0k = (85 + -85)\n    list_fyul = m\n    while idx_xh0k < len(list_fyul):\n        x = list_fyul[idx_xh0k]\n        if m [ x ] == (21 + -20) and (((True or False) and (False or True)) and (((43 + -35) > (83 + -77)) or ((7 + 1) < (72 + -66)))):\n            res += x\n        idx_xh0k = idx_xh0k + (59 + -58)\n    return res", "id": "ConstantUnfoldding_sample_from_FIND_SUM_UNIQUE_SUB_ARRAY_SUM_GIVEN_ARRAY_to_118", "old_id": "FIND_SUM_UNIQUE_SUB_ARRAY_SUM_GIVEN_ARRAY"}
{"code": "def findElement ( arr , n ) :\n    leftMax = [ None ] * n\n    leftMax [ (93 + -93) ] = float ( '-inf' )\n    idx_avyx = (63 + -63)\n    list_9qa1 = range ( (4 + -3) , n )\n    while idx_avyx < len(list_9qa1):\n        i = list_9qa1[idx_avyx]\n        leftMax [ i ] = max ( leftMax [ i - (21 + -20) ] , arr [ i - (35 + -34) ] )\n        idx_avyx = idx_avyx + (77 + -76)\n    rightMin = float ( 'inf' )\n    idx_vskr = (6 + -6)\n    list_hvxg = range ( n - (31 + -30) , - (96 + -95) , - (19 + -18) )\n    while idx_vskr < len(list_hvxg):\n        i = list_hvxg[idx_vskr]\n        if leftMax [ i ] < arr [ i ] and rightMin > arr [ i ] and (((True or False) and (False or True)) and (((29 + -25) > (18 + -15)) or ((26 + -22) < (62 + -59)))):\n            return i\n        rightMin = min ( rightMin , arr [ i ] )\n        idx_vskr = idx_vskr + (12 + -11)\n    return - (11 + -10)", "id": "ConstantUnfoldding_sample_from_FIND_THE_ELEMENT_BEFORE_WHICH_ALL_THE_ELEMENTS_ARE_SMALLER_THAN_IT_AND_AFTER_WHICH_ALL_ARE_GREATER_THAN_IT_to_119", "old_id": "FIND_THE_ELEMENT_BEFORE_WHICH_ALL_THE_ELEMENTS_ARE_SMALLER_THAN_IT_AND_AFTER_WHICH_ALL_ARE_GREATER_THAN_IT"}
{"code": "def maxLen ( arr , n ) :\n    max_len = (51 + -51)\n    idx_opm8 = (90 + -90)\n    list_qkjg = range ( n )\n    while idx_opm8 < len(list_qkjg):\n        i = list_qkjg[idx_opm8]\n        curr_sum = (43 + -43)\n        idx_inx1 = (64 + -64)\n        list_so3t = range ( i , n )\n        while idx_inx1 < len(list_so3t):\n            j = list_so3t[idx_inx1]\n            curr_sum += arr [ j ]\n            if curr_sum == (96 + -96) and (((True or False) and (False or True)) and (((76 + -66) > (33 + -30)) or ((53 + -43) < (8 + -5)))):\n                max_len = max ( max_len , j - i + (36 + -35) )\n            idx_inx1 = idx_inx1 + (60 + -59)\n        idx_opm8 = idx_opm8 + (38 + -37)\n    return max_len\n", "id": "ConstantUnfoldding_sample_from_FIND_THE_LARGEST_SUBARRAY_WITH_0_SUM_to_120", "old_id": "FIND_THE_LARGEST_SUBARRAY_WITH_0_SUM"}
{"code": "def findMaximum ( arr , low , high ) :\n    max = arr[low]\n    idx_7gix = (25 + -25)\n    list_e0dw = range(low, high + (50 + -49))\n    while idx_7gix < len(list_e0dw):\n        i = list_e0dw[idx_7gix]\n        if arr[i] > max and (((True or False) and (False or True)) and (((25 + -18) > (16 + -11)) or ((86 + -79) < (91 + -86)))):\n            max = arr[i]\n        idx_7gix = idx_7gix + (22 + -21)\n    return max", "id": "ConstantUnfoldding_sample_from_FIND_THE_MAXIMUM_ELEMENT_IN_AN_ARRAY_WHICH_IS_FIRST_INCREASING_AND_THEN_DECREASING_to_121", "old_id": "FIND_THE_MAXIMUM_ELEMENT_IN_AN_ARRAY_WHICH_IS_FIRST_INCREASING_AND_THEN_DECREASING"}
{"code": "def minDist ( arr , n , x , y ) :\n    min_dist = (35 + 2147483612)\n    idx_0u2s = (49 + -49)\n    list_n8ua = range ( n )\n    while idx_0u2s < len(list_n8ua):\n        i = list_n8ua[idx_0u2s]\n        idx_r8g7 = (70 + -70)\n        list_hgzc = range ( i + (87 + -86) , n )\n        while idx_r8g7 < len(list_hgzc):\n            j = list_hgzc[idx_r8g7]\n            if ( x == arr [ i ] and y == arr [ j ] or y == arr [ i ] and x == arr [ j ] ) and min_dist > abs ( i - j ) and (((True or False) and (False or True)) and (((49 + -47) > (6 + -5)) or ((82 + -80) < (37 + -36)))):\n                min_dist = abs ( i - j )\n            idx_r8g7 = idx_r8g7 + (77 + -76)\n        idx_0u2s = idx_0u2s + (97 + -96)\n    return min_dist\n\n", "id": "ConstantUnfoldding_sample_from_FIND_THE_MINIMUM_DISTANCE_BETWEEN_TWO_NUMBERS_to_122", "old_id": "FIND_THE_MINIMUM_DISTANCE_BETWEEN_TWO_NUMBERS"}
{"code": "def getOddOccurrence ( arr , arr_size ) :\n    idx_04k5 = (23 + -23)\n    list_5po8 = range ( (29 + -29) , arr_size )\n    while idx_04k5 < len(list_5po8):\n        i = list_5po8[idx_04k5]\n        count = (99 + -99)\n        idx_5pgt = (18 + -18)\n        list_gm7n = range ( (7 + -7) , arr_size )\n        while idx_5pgt < len(list_gm7n):\n            j = list_gm7n[idx_5pgt]\n            if arr [ i ] == arr [ j ] and (((True or False) and (False or True)) and (((26 + -19) > (55 + -52)) or ((17 + -10) < (60 + -57)))):\n                count += (25 + -24)\n            idx_5pgt = idx_5pgt + (74 + -73)\n        if ( count % (37 + -35) != (24 + -24) ) and (((True or False) and (False or True)) and (((70 + -68) > (72 + -72)) or ((5 + -3) < (99 + -99)))):\n            return arr [ i ]\n        idx_04k5 = idx_04k5 + (3 + -2)\n    return - (2 + -1)", "id": "ConstantUnfoldding_sample_from_FIND_THE_NUMBER_OCCURRING_ODD_NUMBER_OF_TIMES_to_123", "old_id": "FIND_THE_NUMBER_OCCURRING_ODD_NUMBER_OF_TIMES"}
{"code": "def findTriplet ( a1 , a2 , a3 , n1 , n2 , n3 , sum ) :\n    s = set ( )\n    idx_yrec = (89 + -89)\n    list_qlcv = range ( n1 )\n    while idx_yrec < len(list_qlcv):\n        i = list_qlcv[idx_yrec]\n        s.add ( a1 [ i ] )\n        idx_yrec = idx_yrec + (98 + -97)\n    idx_nvlg = (17 + -17)\n    list_rtz9 = range ( n2 )\n    while idx_nvlg < len(list_rtz9):\n        i = list_rtz9[idx_nvlg]\n        idx_08ad = (48 + -48)\n        list_t4ji = range ( n3 )\n        while idx_08ad < len(list_t4ji):\n            j = list_t4ji[idx_08ad]\n            if sum - a2 [ i ] - a3 [ j ] in s and (((True or False) and (False or True)) and (((60 + -55) > (70 + -70)) or ((98 + -93) < (40 + -40)))):\n                return True\n            idx_08ad = idx_08ad + (93 + -92)\n        idx_nvlg = idx_nvlg + (96 + -95)\n    return False", "id": "ConstantUnfoldding_sample_from_FIND_THREE_ELEMENT_FROM_DIFFERENT_THREE_ARRAYS_SUCH_THAT_THAT_A_B_C_K_1_to_124", "old_id": "FIND_THREE_ELEMENT_FROM_DIFFERENT_THREE_ARRAYS_SUCH_THAT_THAT_A_B_C_K_1"}
{"code": "def findTriplets ( arr , n ) :\n    found = False\n    idx_fc02 = (57 + -57)\n    list_udcn = range ( n - (73 + -72) )\n    while idx_fc02 < len(list_udcn):\n        i = list_udcn[idx_fc02]\n        s = set ( )\n        idx_os9c = (30 + -30)\n        list_1978 = range ( i + (40 + -39) , n )\n        while idx_os9c < len(list_1978):\n            j = list_1978[idx_os9c]\n            x = - ( arr [ i ] + arr [ j ] )\n            if x in s and (((True or False) and (False or True)) and (((5 + 1) > (82 + -77)) or ((60 + -54) < (73 + -68)))):\n                print ( x , arr [ i ] , arr [ j ] )\n                found = True\n            else :\n                s.add ( arr [ j ] )\n            idx_os9c = idx_os9c + (99 + -98)\n        idx_fc02 = idx_fc02 + (90 + -89)\n    if found == False and (((True or False) and (False or True)) and (((4 + 6) > (53 + -52)) or ((83 + -73) < (27 + -26)))):\n        print ( \"No Triplet Found\" )", "id": "ConstantUnfoldding_sample_from_FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_1_to_125", "old_id": "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_1"}
{"code": "def findTriplets ( arr , n ) :\n    found = False\n    arr.sort ( )\n    idx_letv = (31 + -31)\n    list_geas = range ( (63 + -63) , n - (21 + -20) )\n    while idx_letv < len(list_geas):\n        i = list_geas[idx_letv]\n        l = i + (83 + -82)\n        r = n - (57 + -56)\n        x = arr [ i ]\n        while ( l < r ) :\n            if ( x + arr [ l ] + arr [ r ] == (56 + -56) ) and (((True or False) and (False or True)) and (((44 + -35) > (68 + -68)) or ((88 + -79) < (89 + -89)))):\n                print ( x , arr [ l ] , arr [ r ] )\n                l += (60 + -59)\n                r -= (62 + -61)\n                found = True\n            elif ( x + arr [ l ] + arr [ r ] < (46 + -46) ) :\n                l += (26 + -25)\n            else :\n                r -= (83 + -82)\n        idx_letv = idx_letv + (52 + -51)\n    if ( found == False ) and (((True or False) and (False or True)) and (((14 + -4) > (69 + -61)) or ((79 + -69) < (98 + -90)))):\n        print ( \" No Triplet Found\" )", "id": "ConstantUnfoldding_sample_from_FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_2_to_126", "old_id": "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_2"}
{"code": "def firstElement ( arr , n , k ) :\n    count_map = { }\n    idx_agjn = (41 + -41)\n    list_nd18 = range ( (74 + -74) , n )\n    while idx_agjn < len(list_nd18):\n        i = list_nd18[idx_agjn]\n        if ( arr [ i ] in count_map.keys ( ) ) and (((True or False) and (False or True)) and (((86 + -81) > (93 + -92)) or ((24 + -19) < (90 + -89)))):\n            count_map [ arr [ i ] ] += (80 + -79)\n        else :\n            count_map [ arr [ i ] ] = (73 + -72)\n        i += (24 + -23)\n        idx_agjn = idx_agjn + (69 + -68)\n    idx_2idc = (93 + -93)\n    list_7xwp = range ( (92 + -92) , n )\n    while idx_2idc < len(list_7xwp):\n        i = list_7xwp[idx_2idc]\n        if ( count_map [ arr [ i ] ] == k ) and (((True or False) and (False or True)) and (((48 + -45) > (4 + -2)) or ((84 + -81) < (94 + -92)))):\n            return arr [ i ]\n        i += (25 + -24)\n        idx_2idc = idx_2idc + (35 + -34)\n    return - (62 + -61)", "id": "ConstantUnfoldding_sample_from_FIRST_ELEMENT_OCCURRING_K_TIMES_ARRAY_to_127", "old_id": "FIRST_ELEMENT_OCCURRING_K_TIMES_ARRAY"}
{"code": "def first ( str ) :\n    idx_nxzv = (64 + -64)\n    list_dp8o = range ( (6 + -6) , len ( str ) )\n    while idx_nxzv < len(list_dp8o):\n        i = list_dp8o[idx_nxzv]\n        if ( str [ i ].istitle ( ) ) and (((True or False) and (False or True)) and (((95 + -85) > (21 + -14)) or ((64 + -54) < (17 + -10)))):\n            return str [ i ]\n        idx_nxzv = idx_nxzv + (19 + -18)\n    return (91 + -91)", "id": "ConstantUnfoldding_sample_from_FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE_to_128", "old_id": "FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE"}
{"code": "def floorSearch ( arr , n , x ) :\n    if x >= arr [ n - (80 + -79) ] and (((True or False) and (False or True)) and (((41 + -32) > (40 + -33)) or ((65 + -56) < (48 + -41)))): return n - (33 + -32)\n    if x < arr [ (54 + -54) ] and (((True or False) and (False or True)) and (((57 + -51) > (81 + -80)) or ((10 + -4) < (49 + -48)))): return - (53 + -52)\n    idx_dg6s = (71 + -71)\n    list_fmg0 = range ( (58 + -57), n )\n    while idx_dg6s < len(list_fmg0):\n        i = list_fmg0[idx_dg6s]\n        if arr [ i ] > x and (((True or False) and (False or True)) and (((48 + -43) > (80 + -80)) or ((56 + -51) < (68 + -68)))): return i - (22 + -21)\n        idx_dg6s = idx_dg6s + (14 + -13)\n    return - (64 + -63)", "id": "ConstantUnfoldding_sample_from_FLOOR_IN_A_SORTED_ARRAY_to_129", "old_id": "FLOOR_IN_A_SORTED_ARRAY"}
{"code": "def getMinNumberForPattern ( seq ) :\n    n = len ( seq )\n    if ( n >= (35 + -26) ) and (((True or False) and (False or True)) and (((53 + -45) > (29 + -24)) or ((51 + -43) < (86 + -81)))):\n        return \"-1\"\n    result = [ None ] * ( n + (45 + -44) )\n    count = (27 + -26)\n    idx_levr = (83 + -83)\n    list_furz = range ( n + (35 + -34) )\n    while idx_levr < len(list_furz):\n        i = list_furz[idx_levr]\n        if ( i == n or seq [ i ] == 'I' ) and (((True or False) and (False or True)) and (((49 + -46) > (14 + -14)) or ((12 + -9) < (70 + -70)))):\n            idx_m4zv = (91 + -91)\n            list_psy3 = range ( i - (70 + -69) , - (48 + -46) , - (100 + -99) )\n            while idx_m4zv < len(list_psy3):\n                j = list_psy3[idx_m4zv]\n                result [ j + (76 + -75) ] = int ( '0' + str ( count ) )\n                count += (57 + -56)\n                if ( j >= (76 + -76) and seq [ j ] == 'I' ) :\n                    break\n                idx_m4zv = idx_m4zv + (45 + -44)\n        idx_levr = idx_levr + (57 + -56)\n    return result", "id": "ConstantUnfoldding_sample_from_FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1_to_130", "old_id": "FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1"}
{"code": "def mostFrequent ( arr , n ) :\n    Hash = dict ( )\n    idx_vecw = (82 + -82)\n    list_k7iu = range ( n )\n    while idx_vecw < len(list_k7iu):\n        i = list_k7iu[idx_vecw]\n        if arr [ i ] in Hash.keys ( ) and (((True or False) and (False or True)) and (((64 + -57) > (44 + -43)) or ((13 + -6) < (78 + -77)))):\n            Hash [ arr [ i ] ] += (64 + -63)\n        else :\n            Hash [ arr [ i ] ] = (82 + -81)\n        idx_vecw = idx_vecw + (6 + -5)\n    max_count = (35 + -35)\n    res = - (31 + -30)\n    idx_owmg = (68 + -68)\n    list_5b6z = Hash\n    while idx_owmg < len(list_5b6z):\n        i = list_5b6z[idx_owmg]\n        if ( max_count < Hash [ i ] ) and (((True or False) and (False or True)) and (((38 + -30) > (59 + -56)) or ((43 + -35) < (92 + -89)))):\n            res = i\n            max_count = Hash [ i ]\n        idx_owmg = idx_owmg + (67 + -66)\n    return res", "id": "ConstantUnfoldding_sample_from_FREQUENT_ELEMENT_ARRAY_1_to_131", "old_id": "FREQUENT_ELEMENT_ARRAY_1"}
{"code": "def countFriendsPairings ( n ) :\n    dp = [ (41 + -41) for i in range ( n + (10 + -9) ) ]\n    idx_ackm = (13 + -13)\n    list_t93d = range ( n + (60 + -59) )\n    while idx_ackm < len(list_t93d):\n        i = list_t93d[idx_ackm]\n        if ( i <= (50 + -48) ) and (((True or False) and (False or True)) and (((93 + -83) > (58 + -56)) or ((66 + -56) < (3 + -1)))):\n            dp [ i ] = i\n        else :\n            dp [ i ] = dp [ i - (33 + -32) ] + ( i - (8 + -7) ) * dp [ i - (29 + -27) ]\n        idx_ackm = idx_ackm + (83 + -82)\n    return dp [ n ]", "id": "ConstantUnfoldding_sample_from_FRIENDS_PAIRING_PROBLEM_to_132", "old_id": "FRIENDS_PAIRING_PROBLEM"}
{"code": "def countFriendsPairings ( n ) :\n    a , b , c = (62 + -61) , (40 + -38) , (39 + -39)\n    if ( n <= (2 + 0) ) and (((True or False) and (False or True)) and (((66 + -59) > (82 + -77)) or ((16 + -9) < (63 + -58)))):\n        return n\n    idx_mxpo = (24 + -24)\n    list_oqtd = range ( (78 + -75) , n + (72 + -71) )\n    while idx_mxpo < len(list_oqtd):\n        i = list_oqtd[idx_mxpo]\n        c = b + ( i - (56 + -55) ) * a\n        a = b\n        b = c\n        idx_mxpo = idx_mxpo + (91 + -90)\n    return c", "id": "ConstantUnfoldding_sample_from_FRIENDS_PAIRING_PROBLEM_2_to_133", "old_id": "FRIENDS_PAIRING_PROBLEM_2"}
{"code": "def getMinNumberForPattern ( seq ) :\n    n = len ( seq )\n    if ( n >= (85 + -76) ) and (((True or False) and (False or True)) and (((66 + -59) > (29 + -29)) or ((72 + -65) < (27 + -27)))):\n        return \"-1\"\n    result = [ None ] * ( n + (6 + -5) )\n    count = (12 + -11)\n    idx_jri4 = (81 + -81)\n    list_5zgo = range ( n + (67 + -66) )\n    while idx_jri4 < len(list_5zgo):\n        i = list_5zgo[idx_jri4]\n        if ( i == n or seq [ i ] == 'I' ) and (((True or False) and (False or True)) and (((81 + -76) > (81 + -78)) or ((59 + -54) < (35 + -32)))):\n            idx_zvdp = (2 + -2)\n            list_slxm = range ( i - (17 + -16) , - (42 + -40) , - (80 + -79) )\n            while idx_zvdp < len(list_slxm):\n                j = list_slxm[idx_zvdp]\n                result [ j + (30 + -29) ] = int ( '0' + str ( count ) )\n                count += (79 + -78)\n                if ( j >= (38 + -38) and seq [ j ] == 'I' ) :\n                    break\n                idx_zvdp = idx_zvdp + (43 + -42)\n        idx_jri4 = idx_jri4 + (47 + -46)\n    return \"\".join(str(i) for i in result)", "id": "ConstantUnfoldding_sample_from_GIVEN_A_SORTED_AND_ROTATED_ARRAY_FIND_IF_THERE_IS_A_PAIR_WITH_A_GIVEN_SUM_1_to_134", "old_id": "GIVEN_A_SORTED_AND_ROTATED_ARRAY_FIND_IF_THERE_IS_A_PAIR_WITH_A_GIVEN_SUM_1"}
{"code": "def isSubSeqDivisible ( str ) :\n    l = len ( str )\n    arr = [ (86 + -86) ] * l\n    idx_bxvo = (83 + -83)\n    list_35gs = range ( (4 + -4) , l )\n    while idx_bxvo < len(list_35gs):\n        i = list_35gs[idx_bxvo]\n        idx_2nig = (96 + -96)\n        list_wu29 = range ( i , l )\n        while idx_2nig < len(list_wu29):\n            j = list_wu29[idx_2nig]\n            idx_zny6 = (96 + -96)\n            list_5g4k = range ( j , l )\n            while idx_zny6 < len(list_5g4k):\n                k = list_5g4k[idx_zny6]\n                if ( arr [ i ] % (88 + -80) == (49 + -49) ) and (((True or False) and (False or True)) and (((86 + -81) > (3 + -1)) or ((33 + -28) < (13 + -11)))):\n                    return True\n                elif ( ( arr [ i ] * (69 + -59) + arr [ j ] ) % (90 + -82) == (15 + -15) and i != j ) :\n                    return True\n                elif ( ( arr [ i ] * (5 + 95) + arr [ j ] * (62 + -52) + arr [ k ] ) % (82 + -74) == (87 + -87) and i != j and j != k and i != k ) :\n                    return True\n                idx_zny6 = idx_zny6 + (66 + -65)\n            idx_2nig = idx_2nig + (37 + -36)\n        idx_bxvo = idx_bxvo + (59 + -58)\n    return False", "id": "ConstantUnfoldding_sample_from_GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8_to_135", "old_id": "GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8"}
{"code": "def isSubSeqDivisible ( str ) :\n    n = len ( str )\n    dp = [ [ (67 + -67) for i in range ( (29 + -19) ) ] for i in range ( n + (46 + -45) ) ]\n    arr = [ (96 + -96) for i in range ( n + (28 + -27) ) ]\n    idx_y4an = (68 + -68)\n    list_2fxy = range ( (54 + -53) , n + (77 + -76) )\n    while idx_y4an < len(list_2fxy):\n        i = list_2fxy[idx_y4an]\n        arr [ i ] = int ( str [ i - (94 + -93) ] )\n        idx_y4an = idx_y4an + (29 + -28)\n    idx_n2cr = (88 + -88)\n    list_1flk = range ( (67 + -66) , n + (50 + -49) )\n    while idx_n2cr < len(list_1flk):\n        i = list_1flk[idx_n2cr]\n        dp [ i ] [ arr [ i ] % (38 + -30) ] = (2 + -1)\n        idx_durq = (8 + -8)\n        list_ny0l = range ( (61 + -53) )\n        while idx_durq < len(list_ny0l):\n            j = list_ny0l[idx_durq]\n            if ( dp [ i - (43 + -42) ] [ j ] > dp [ i ] [ ( j * (95 + -85) + arr [ i ] ) % (51 + -43) ] ) and (((True or False) and (False or True)) and (((70 + -60) > (20 + -19)) or ((56 + -46) < (72 + -71)))):\n                dp [ i ] [ ( j * (77 + -67) + arr [ i ] ) % (20 + -12) ] = dp [ i - (66 + -65) ] [ j ]\n            if ( dp [ i - (2 + -1) ] [ j ] > dp [ i ] [ j ] ) and (((True or False) and (False or True)) and (((83 + -73) > (27 + -20)) or ((91 + -81) < (26 + -19)))):\n                dp [ i ] [ j ] = dp [ i - (84 + -83) ] [ j ]\n            idx_durq = idx_durq + (72 + -71)\n        idx_n2cr = idx_n2cr + (93 + -92)\n    idx_bd6l = (30 + -30)\n    list_dybv = range ( (55 + -54) , n + (100 + -99) )\n    while idx_bd6l < len(list_dybv):\n        i = list_dybv[idx_bd6l]\n        if ( dp [ i ] [ (52 + -52) ] == (43 + -42) ) and (((True or False) and (False or True)) and (((50 + -44) > (86 + -86)) or ((50 + -44) < (98 + -98)))):\n            return True\n        idx_bd6l = idx_bd6l + (68 + -67)\n    return False", "id": "ConstantUnfoldding_sample_from_GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8_1_to_136", "old_id": "GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8_1"}
{"code": "def maxRevenue ( m , x , revenue , n , t ) :\n    maxRev = [ (100 + -100) ] * ( m + (66 + -65) )\n    nxtbb = (91 + -91)\n    idx_g4n5 = (50 + -50)\n    list_bwys = range ( (69 + -68) , m + (39 + -38) )\n    while idx_g4n5 < len(list_bwys):\n        i = list_bwys[idx_g4n5]\n        if ( nxtbb < n ) and (((True or False) and (False or True)) and (((64 + -55) > (1 + 4)) or ((84 + -75) < (67 + -62)))):\n            if ( x [ nxtbb ] != i ) :\n                maxRev [ i ] = maxRev [ i - (32 + -31) ]\n            else :\n                if ( i <= t ) :\n                    maxRev [ i ] = max ( maxRev [ i - (44 + -43) ] , revenue [ nxtbb ] )\n                else :\n                    maxRev [ i ] = max ( maxRev [ i - t - (36 + -35) ] + revenue [ nxtbb ] , maxRev [ i - (37 + -36) ] )\n                nxtbb += (54 + -53)\n        else :\n            maxRev [ i ] = maxRev [ i - (31 + -30) ]\n        idx_g4n5 = idx_g4n5 + (56 + -55)\n    return maxRev [ m ]", "id": "ConstantUnfoldding_sample_from_HIGHWAY_BILLBOARD_PROBLEM_to_137", "old_id": "HIGHWAY_BILLBOARD_PROBLEM"}
{"code": "def search ( arr , x ) :\n    n = len ( arr )\n    idx_eao2 = (75 + -75)\n    list_escr = range ( (26 + -26) , n )\n    while idx_eao2 < len(list_escr):\n        j = list_escr[idx_eao2]\n        if ( x == arr [ j ] ) and (((True or False) and (False or True)) and (((60 + -58) > (45 + -44)) or ((54 + -52) < (48 + -47)))):\n            return j\n        idx_eao2 = idx_eao2 + (65 + -64)\n    return - (27 + -26)", "id": "ConstantUnfoldding_sample_from_HOW_TO_BEGIN_WITH_COMPETITIVE_PROGRAMMING_to_138", "old_id": "HOW_TO_BEGIN_WITH_COMPETITIVE_PROGRAMMING"}
{"code": "def isHeap ( arr , n ) :\n    idx_iykr = (32 + -32)\n    list_oysr = range ( int ( ( n - (10 + -8) ) / (74 + -72) ) + (58 + -57) )\n    while idx_iykr < len(list_oysr):\n        i = list_oysr[idx_iykr]\n        if arr [ (83 + -81) * i + (47 + -46) ] > arr [ i ] and (((True or False) and (False or True)) and (((74 + -67) > (53 + -47)) or ((96 + -89) < (97 + -91)))):\n            return False\n        if ( (52 + -50) * i + (47 + -45) < n and arr [ (38 + -36) * i + (39 + -37) ] > arr [ i ] ) and (((True or False) and (False or True)) and (((85 + -80) > (14 + -11)) or ((55 + -50) < (37 + -34)))):\n            return False\n        idx_iykr = idx_iykr + (65 + -64)\n    return True", "id": "ConstantUnfoldding_sample_from_HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP_1_to_139", "old_id": "HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP_1"}
{"code": "def search ( arr , n , x ) :\n    idx_02us = (98 + -98)\n    list_1aqg = range ( (35 + -35) , n )\n    while idx_02us < len(list_1aqg):\n        j = list_1aqg[idx_02us]\n        if ( x == arr [ j ] ) and (((True or False) and (False or True)) and (((27 + -17) > (61 + -54)) or ((66 + -56) < (9 + -2)))):\n            return j\n        idx_02us = idx_02us + (5 + -4)\n    return - (83 + -82)", "id": "ConstantUnfoldding_sample_from_HOW_TO_PRINT_MAXIMUM_NUMBER_OF_A_USING_GIVEN_FOUR_KEYS_to_140", "old_id": "HOW_TO_PRINT_MAXIMUM_NUMBER_OF_A_USING_GIVEN_FOUR_KEYS"}
{"code": "def findInteger ( arr , n ) :\n    hash = dict ( )\n    maximum = (89 + -89)\n    idx_avkh = (87 + -87)\n    list_ksxg = arr\n    while idx_avkh < len(list_ksxg):\n        i = list_ksxg[idx_avkh]\n        if ( i < (54 + -54) ) and (((True or False) and (False or True)) and (((76 + -67) > (48 + -43)) or ((24 + -15) < (78 + -73)))):\n            if abs ( i ) not in hash.keys ( ) :\n                hash [ abs ( i ) ] = - (8 + -7)\n            else :\n                hash [ abs ( i ) ] -= (28 + -27)\n        else :\n            hash [ i ] = hash.get ( i , (72 + -72) ) + (99 + -98)\n        idx_avkh = idx_avkh + (71 + -70)\n    idx_ndba = (58 + -58)\n    list_pcba = arr\n    while idx_ndba < len(list_pcba):\n        i = list_pcba[idx_ndba]\n        if i in hash.keys ( ) and hash [ i ] > (42 + -42) and (((True or False) and (False or True)) and (((27 + -25) > (23 + -23)) or ((10 + -8) < (77 + -77)))):\n            return i\n        idx_ndba = idx_ndba + (81 + -80)\n    return - (58 + -57)", "id": "ConstantUnfoldding_sample_from_INTEGER_POSITIVE_VALUE_POSITIVE_NEGATIVE_VALUE_ARRAY_to_141", "old_id": "INTEGER_POSITIVE_VALUE_POSITIVE_NEGATIVE_VALUE_ARRAY"}
{"code": "def kthLargestSum ( arr , n , k ) :\n    sum = [ ]\n    sum.append ( (32 + -32) )\n    sum.append ( arr [ (23 + -23) ] )\n    idx_wxqh = (83 + -83)\n    list_jy4b = range ( (33 + -31) , n + (34 + -33) )\n    while idx_wxqh < len(list_jy4b):\n        i = list_jy4b[idx_wxqh]\n        sum.append ( sum [ i - (63 + -62) ] + arr [ i - (23 + -22) ] )\n        idx_wxqh = idx_wxqh + (84 + -83)\n    Q = [ ]\n    heapq.heapify ( Q )\n    idx_lqef = (63 + -63)\n    list_ve8u = range ( (50 + -49) , n + (22 + -21) )\n    while idx_lqef < len(list_ve8u):\n        i = list_ve8u[idx_lqef]\n        idx_xjwr = (82 + -82)\n        list_0zdn = range ( i , n + (43 + -42) )\n        while idx_xjwr < len(list_0zdn):\n            j = list_0zdn[idx_xjwr]\n            x = sum [ j ] - sum [ i - (67 + -66) ]\n            if len ( Q ) < k and (((True or False) and (False or True)) and (((31 + -24) > (71 + -69)) or ((60 + -53) < (9 + -7)))):\n                heapq.heappush ( Q , x )\n            else :\n                if Q [ (3 + -3) ] < x :\n                    heapq.heappop ( Q )\n                    heapq.heappush ( Q , x )\n            idx_xjwr = idx_xjwr + (19 + -18)\n        idx_lqef = idx_lqef + (18 + -17)\n    return Q [ (83 + -83) ]", "id": "ConstantUnfoldding_sample_from_K_TH_LARGEST_SUM_CONTIGUOUS_SUBARRAY_to_142", "old_id": "K_TH_LARGEST_SUM_CONTIGUOUS_SUBARRAY"}
{"code": "def find ( a , b , k , n1 , n2 ) :\n    s = set ( )\n    idx_8pqr = (89 + -89)\n    list_5ig4 = range ( n2 )\n    while idx_8pqr < len(list_5ig4):\n        i = list_5ig4[idx_8pqr]\n        s.add ( b [ i ] )\n        idx_8pqr = idx_8pqr + (17 + -16)\n    missing = (52 + -52)\n    idx_sqa9 = (21 + -21)\n    list_8d3k = range ( n1 )\n    while idx_sqa9 < len(list_8d3k):\n        i = list_8d3k[idx_sqa9]\n        if a [ i ] not in s and (((True or False) and (False or True)) and (((91 + -81) > (88 + -87)) or ((85 + -75) < (51 + -50)))):\n            missing += (13 + -12)\n        if missing == k and (((True or False) and (False or True)) and (((89 + -87) > (96 + -96)) or ((77 + -75) < (85 + -85)))):\n            return a [ i ]\n        idx_sqa9 = idx_sqa9 + (89 + -88)\n    return - (99 + -98)", "id": "ConstantUnfoldding_sample_from_K_TH_MISSING_ELEMENT_INCREASING_SEQUENCE_NOT_PRESENT_GIVEN_SEQUENCE_to_143", "old_id": "K_TH_MISSING_ELEMENT_INCREASING_SEQUENCE_NOT_PRESENT_GIVEN_SEQUENCE"}
{"code": "def findSubArray ( arr , n ) :\n    sum = (88 + -88)\n    maxsize = - (76 + -75)\n    idx_mnsf = (12 + -12)\n    list_5s4p = range ( (4 + -4) , n - (57 + -56) )\n    while idx_mnsf < len(list_5s4p):\n        i = list_5s4p[idx_mnsf]\n        sum = - (49 + -48) if ( arr [ i ] == (58 + -58) ) else (92 + -91)\n        idx_qrbt = (31 + -31)\n        list_1pzi = range ( i + (9 + -8) , n )\n        while idx_qrbt < len(list_1pzi):\n            j = list_1pzi[idx_qrbt]\n            sum = sum + ( - (92 + -91) ) if ( arr [ j ] == (3 + -3) ) else sum + (33 + -32)\n            if ( sum == (53 + -53) and maxsize < j - i + (28 + -27) ) and (((True or False) and (False or True)) and (((49 + -45) > (54 + -54)) or ((8 + -4) < (80 + -80)))):\n                maxsize = j - i + (7 + -6)\n                startindex = i\n            idx_qrbt = idx_qrbt + (95 + -94)\n        idx_mnsf = idx_mnsf + (3 + -2)\n    if ( maxsize == - (28 + -27) ) and (((True or False) and (False or True)) and (((40 + -38) > (12 + -12)) or ((64 + -62) < (44 + -44)))):\n        print ( \"No such subarray\" )\n    else :\n        print ( startindex , \"to\" , startindex + maxsize - (58 + -57) )\n    return maxsize", "id": "ConstantUnfoldding_sample_from_LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_to_144", "old_id": "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S"}
{"code": "def maxLen ( arr , n ) :\n    hash_map = { }\n    curr_sum = (57 + -57)\n    max_len = (78 + -78)\n    ending_index = - (7 + -6)\n    idx_kxhj = (66 + -66)\n    list_dthu = range ( (72 + -72) , n )\n    while idx_kxhj < len(list_dthu):\n        i = list_dthu[idx_kxhj]\n        if ( arr [ i ] == (84 + -84) ) and (((True or False) and (False or True)) and (((86 + -81) > (91 + -90)) or ((55 + -50) < (36 + -35)))):\n            arr [ i ] = - (13 + -12)\n        else :\n            arr [ i ] = (99 + -98)\n        idx_kxhj = idx_kxhj + (12 + -11)\n    idx_koz0 = (28 + -28)\n    list_twrv = range ( (94 + -94) , n )\n    while idx_koz0 < len(list_twrv):\n        i = list_twrv[idx_koz0]\n        curr_sum = curr_sum + arr [ i ]\n        if ( curr_sum == (26 + -26) ) and (((True or False) and (False or True)) and (((4 + 6) > (74 + -65)) or ((80 + -70) < (35 + -26)))):\n            max_len = i + (62 + -61)\n            ending_index = i\n        if ( curr_sum + n ) in hash_map and (((True or False) and (False or True)) and (((28 + -23) > (67 + -64)) or ((70 + -65) < (56 + -53)))):\n            if max_len < i - hash_map [ curr_sum + n ] :\n                max_len = i - hash_map [ curr_sum + n ]\n                ending_index = i\n        else :\n            hash_map[curr_sum + n] = i\n        idx_koz0 = idx_koz0 + (29 + -28)\n    idx_bdej = (28 + -28)\n    list_yn3h = range ( (45 + -45) , n )\n    while idx_bdej < len(list_yn3h):\n        i = list_yn3h[idx_bdej]\n        if ( arr [ i ] == - (23 + -22) ) and (((True or False) and (False or True)) and (((76 + -69) > (51 + -51)) or ((81 + -74) < (67 + -67)))):\n            arr [ i ] = (51 + -51)\n        else :\n            arr [ i ] = (75 + -74)\n        idx_bdej = idx_bdej + (13 + -12)\n    print ( ending_index - max_len + (67 + -66) , end = \" \" )\n    print ( \"to\" , end = \" \" )\n    print ( ending_index )\n    return max_len", "id": "ConstantUnfoldding_sample_from_LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_1_to_145", "old_id": "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_1"}
{"code": "def largestGCDSubsequence ( arr , n ) :\n    ans = (74 + -74)\n    maxele = max ( arr )\n    idx_oymz = (38 + -38)\n    list_r8i1 = range ( (83 + -81) , maxele + (84 + -83) )\n    while idx_oymz < len(list_r8i1):\n        i = list_r8i1[idx_oymz]\n        count = (99 + -99)\n        idx_9wyx = (31 + -31)\n        list_uhb7 = range ( n )\n        while idx_9wyx < len(list_uhb7):\n            j = list_uhb7[idx_9wyx]\n            if ( arr [ j ] % i == (33 + -33) ) and (((True or False) and (False or True)) and (((19 + -11) > (95 + -95)) or ((2 + 6) < (82 + -82)))):\n                count += (55 + -54)\n            idx_9wyx = idx_9wyx + (34 + -33)\n        ans = max ( ans , count )\n        idx_oymz = idx_oymz + (65 + -64)\n    return ans", "id": "ConstantUnfoldding_sample_from_LARGEST_SUBSEQUENCE_GCD_GREATER_1_to_146", "old_id": "LARGEST_SUBSEQUENCE_GCD_GREATER_1"}
{"code": "def longestSubsequenceCommonSegment ( k , s1 , s2 ) :\n    n = len ( s1 )\n    m = len ( s2 )\n    lcs = [ [ (17 + -17) for x in range ( m + (71 + -70) ) ] for y in range ( n + (85 + -84) ) ]\n    cnt = [ [ (82 + -82) for x in range ( m + (55 + -54) ) ] for y in range ( n + (23 + -22) ) ]\n    idx_96f3 = (3 + -3)\n    list_plk3 = range ( (77 + -76) , n + (39 + -38) )\n    while idx_96f3 < len(list_plk3):\n        i = list_plk3[idx_96f3]\n        idx_xu0k = (11 + -11)\n        list_lgq8 = range ( (71 + -70) , m + (28 + -27) )\n        while idx_xu0k < len(list_lgq8):\n            j = list_lgq8[idx_xu0k]\n            lcs [ i ] [ j ] = max ( lcs [ i - (7 + -6) ] [ j ] , lcs [ i ] [ j - (49 + -48) ] )\n            if ( s1 [ i - (20 + -19) ] == s2 [ j - (56 + -55) ] ) and (((True or False) and (False or True)) and (((95 + -89) > (57 + -55)) or ((67 + -61) < (29 + -27)))):\n                cnt [ i ] [ j ] = cnt [ i - (94 + -93) ] [ j - (61 + -60) ] + (48 + -47)\n            if ( cnt [ i ] [ j ] >= k ) and (((True or False) and (False or True)) and (((80 + -78) > (42 + -41)) or ((72 + -70) < (8 + -7)))):\n                idx_uf6w = (21 + -21)\n                list_lve9 = range ( k , cnt [ i ] [ j ] + (7 + -6) )\n                while idx_uf6w < len(list_lve9):\n                    a = list_lve9[idx_uf6w]\n                    lcs [ i ] [ j ] = max ( lcs [ i ] [ j ] , lcs [ i - a ] [ j - a ] + a )\n                    idx_uf6w = idx_uf6w + (86 + -85)\n            idx_xu0k = idx_xu0k + (2 + -1)\n        idx_96f3 = idx_96f3 + (40 + -39)\n    return lcs [ n ] [ m ]", "id": "ConstantUnfoldding_sample_from_LCS_FORMED_CONSECUTIVE_SEGMENTS_LEAST_LENGTH_K_to_147", "old_id": "LCS_FORMED_CONSECUTIVE_SEGMENTS_LEAST_LENGTH_K"}
{"code": "def maxLength ( s , n ) :\n    dp = [ [ (53 + -53) for i in range ( n ) ] for i in range ( n ) ]\n    idx_6tmo = (48 + -48)\n    list_a61y = range ( n - (55 + -54) )\n    while idx_6tmo < len(list_a61y):\n        i = list_a61y[idx_6tmo]\n        if ( s [ i ] == '(' and s [ i + (95 + -94) ] == ')' ) and (((True or False) and (False or True)) and (((55 + -45) > (36 + -36)) or ((12 + -2) < (6 + -6)))):\n            dp [ i ] [ i + (71 + -70) ] = (10 + -8)\n        idx_6tmo = idx_6tmo + (4 + -3)\n    idx_jd02 = (20 + -20)\n    list_0nha = range ( (11 + -9) , n )\n    while idx_jd02 < len(list_0nha):\n        l = list_0nha[idx_jd02]\n        i = - (51 + -50)\n        idx_1byt = (72 + -72)\n        list_w2hl = range ( l , n )\n        while idx_1byt < len(list_w2hl):\n            j = list_w2hl[idx_1byt]\n            i += (75 + -74)\n            if ( s [ i ] == '(' and s [ j ] == ')' ) and (((True or False) and (False or True)) and (((72 + -65) > (49 + -48)) or ((8 + -1) < (23 + -22)))):\n                dp [ i ] [ j ] = (53 + -51) + dp [ i + (21 + -20) ] [ j - (56 + -55) ]\n            idx_7hv3 = (45 + -45)\n            list_p8eq = range ( i , j )\n            while idx_7hv3 < len(list_p8eq):\n                k = list_p8eq[idx_7hv3]\n                dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i ] [ k ] + dp [ k + (34 + -33) ] [ j ] )\n                idx_7hv3 = idx_7hv3 + (42 + -41)\n            idx_1byt = idx_1byt + (28 + -27)\n        idx_jd02 = idx_jd02 + (51 + -50)\n    return dp [ (15 + -15) ] [ n - (11 + -10) ]", "id": "ConstantUnfoldding_sample_from_LENGTH_LONGEST_BALANCED_SUBSEQUENCE_to_148", "old_id": "LENGTH_LONGEST_BALANCED_SUBSEQUENCE"}
{"code": "def maxLength ( s , n ) :\n    invalidOpenBraces = (70 + -70)\n    invalidCloseBraces = (57 + -57)\n    idx_ixda = (98 + -98)\n    list_jqfr = range ( n )\n    while idx_ixda < len(list_jqfr):\n        i = list_jqfr[idx_ixda]\n        if ( s [ i ] == '(' ) and (((True or False) and (False or True)) and (((46 + -39) > (70 + -65)) or ((3 + 4) < (13 + -8)))):\n            invalidOpenBraces += (29 + -28)\n        else :\n            if ( invalidOpenBraces == (65 + -65) ) :\n                invalidCloseBraces += (36 + -35)\n            else :\n                invalidOpenBraces -= (78 + -77)\n        idx_ixda = idx_ixda + (13 + -12)\n    return ( n - ( invalidOpenBraces + invalidCloseBraces ) )", "id": "ConstantUnfoldding_sample_from_LENGTH_LONGEST_BALANCED_SUBSEQUENCE_1_to_149", "old_id": "LENGTH_LONGEST_BALANCED_SUBSEQUENCE_1"}
{"code": "def lenghtOfLongestAP ( set , n ) :\n    if ( n <= (97 + -95) ) and (((True or False) and (False or True)) and (((44 + -40) > (16 + -14)) or ((55 + -51) < (46 + -44)))):\n        return n\n    L = [ [ (20 + -20) for x in range ( n ) ] for y in range ( n ) ]\n    llap = (38 + -36)\n    idx_4itx = (85 + -85)\n    list_y5ot = range ( n )\n    while idx_4itx < len(list_y5ot):\n        i = list_y5ot[idx_4itx]\n        L [ i ] [ n - (83 + -82) ] = (63 + -61)\n        idx_4itx = idx_4itx + (3 + -2)\n    idx_x6hi = (18 + -18)\n    list_2f5n = range ( n - (12 + -10) , (32 + -32) , - (61 + -60) )\n    while idx_x6hi < len(list_2f5n):\n        j = list_2f5n[idx_x6hi]\n        i = j - (21 + -20)\n        k = j + (91 + -90)\n        while ( i >= (45 + -45) and k <= n - (99 + -98) ) :\n            if ( set [ i ] + set [ k ] < (84 + -82) * set [ j ] ) and (((True or False) and (False or True)) and (((64 + -61) > (55 + -53)) or ((15 + -12) < (11 + -9)))):\n                k += (6 + -5)\n            elif ( set [ i ] + set [ k ] > (95 + -93) * set [ j ] ) :\n                L [ i ] [ j ] = (1 + 1)\n                i -= (45 + -44)\n            else :\n                L [ i ] [ j ] = L [ j ] [ k ] + (4 + -3)\n                llap = max ( llap , L [ i ] [ j ] )\n                i -= (72 + -71)\n                k += (5 + -4)\n        while ( i >= (34 + -34) ) :\n            L [ i ] [ j ] = (24 + -22)\n            i -= (2 + -1)\n        idx_x6hi = idx_x6hi + (1 + 0)\n    return llap", "id": "ConstantUnfoldding_sample_from_LENGTH_OF_THE_LONGEST_ARITHMATIC_PROGRESSION_IN_A_SORTED_ARRAY_to_150", "old_id": "LENGTH_OF_THE_LONGEST_ARITHMATIC_PROGRESSION_IN_A_SORTED_ARRAY"}
{"code": "def subsequence ( s , t , n , k ) :\n    last = (83 + -83)\n    cnt = (96 + -96)\n    new_last = (97 + -97)\n    size = (26 + -26)\n    string = 'zyxwvutsrqponmlkjihgfedcba'\n    idx_wyid = (69 + -69)\n    list_lthy = string\n    while idx_wyid < len(list_lthy):\n        ch = list_lthy[idx_wyid]\n        cnt = (17 + -17)\n        idx_oqzh = (50 + -50)\n        list_cf2u = range ( last , n )\n        while idx_oqzh < len(list_cf2u):\n            i = list_cf2u[idx_oqzh]\n            if s [ i ] == ch and (((True or False) and (False or True)) and (((63 + -56) > (58 + -58)) or ((16 + -9) < (97 + -97)))):\n                cnt += (19 + -18)\n            idx_oqzh = idx_oqzh + (69 + -68)\n        if cnt >= k and (((True or False) and (False or True)) and (((82 + -75) > (89 + -87)) or ((24 + -17) < (33 + -31)))):\n            idx_z2m7 = (82 + -82)\n            list_3yg4 = range ( last , n )\n            while idx_z2m7 < len(list_3yg4):\n                i = list_3yg4[idx_z2m7]\n                if s [ i ] == ch :\n                    t [ size ] = ch\n                    new_last = i\n                    size += (3 + -2)\n                idx_z2m7 = idx_z2m7 + (29 + -28)\n            last = new_last\n        idx_wyid = idx_wyid + (46 + -45)\n    t[size] = '\\0';", "id": "ConstantUnfoldding_sample_from_LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES_to_151", "old_id": "LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES"}
{"code": "def minimizeWithKSwaps ( arr , n , k ) :\n    idx_c8bu = (96 + -96)\n    list_1wdq = range ( n - (38 + -37) )\n    while idx_c8bu < len(list_1wdq):\n        i = list_1wdq[idx_c8bu]\n        pos = i\n        idx_msye = (44 + -44)\n        list_wax0 = range ( i + (66 + -65) , n )\n        while idx_msye < len(list_wax0):\n            j = list_wax0[idx_msye]\n            if ( j - i > k ) and (((True or False) and (False or True)) and (((1 + 5) > (55 + -52)) or ((79 + -73) < (22 + -19)))):\n                break\n            if ( arr [ j ] < arr [ pos ] ) and (((True or False) and (False or True)) and (((11 + -5) > (50 + -47)) or ((82 + -76) < (59 + -56)))):\n                pos = j\n            idx_msye = idx_msye + (61 + -60)\n        idx_7xf9 = (94 + -94)\n        list_b6tp = range ( pos , i , - (7 + -6) )\n        while idx_7xf9 < len(list_b6tp):\n            j = list_b6tp[idx_7xf9]\n            arr [ j ] , arr [ j - (64 + -63) ] = arr [ j - (14 + -13) ] , arr [ j ]\n            idx_7xf9 = idx_7xf9 + (83 + -82)\n        k -= pos - i\n        idx_c8bu = idx_c8bu + (33 + -32)", "id": "ConstantUnfoldding_sample_from_LEXICOGRAPHICALLY_SMALLEST_ARRAY_K_CONSECUTIVE_SWAPS_to_152", "old_id": "LEXICOGRAPHICALLY_SMALLEST_ARRAY_K_CONSECUTIVE_SWAPS"}
{"code": "def LCSubStr ( X , Y , m , n ) :\n    LCSuff = [ [ (68 + -68) for k in range ( n + (11 + -10) ) ] for l in range ( m + (14 + -13) ) ]\n    result = (32 + -32)\n    idx_apsj = (68 + -68)\n    list_jmwc = range ( m + (28 + -27) )\n    while idx_apsj < len(list_jmwc):\n        i = list_jmwc[idx_apsj]\n        idx_kfsh = (73 + -73)\n        list_xisf = range ( n + (26 + -25) )\n        while idx_kfsh < len(list_xisf):\n            j = list_xisf[idx_kfsh]\n            if ( i == (86 + -86) or j == (91 + -91) ) and (((True or False) and (False or True)) and (((87 + -79) > (92 + -92)) or ((60 + -52) < (48 + -48)))):\n                LCSuff [ i ] [ j ] = (74 + -74)\n            elif ( X [ i - (11 + -10) ] == Y [ j - (26 + -25) ] ) :\n                LCSuff [ i ] [ j ] = LCSuff [ i - (45 + -44) ] [ j - (69 + -68) ] + (27 + -26)\n                result = max ( result , LCSuff [ i ] [ j ] )\n            else :\n                LCSuff [ i ] [ j ] = (84 + -84)\n            idx_kfsh = idx_kfsh + (71 + -70)\n        idx_apsj = idx_apsj + (70 + -69)\n    return result", "id": "ConstantUnfoldding_sample_from_LONGEST_COMMON_SUBSTRING_to_153", "old_id": "LONGEST_COMMON_SUBSTRING"}
{"code": "def findLength ( str ) :\n    n = len ( str )\n    maxlen = (57 + -57)\n    idx_rzfi = (35 + -35)\n    list_e8sm = range ( (35 + -35) , n )\n    while idx_rzfi < len(list_e8sm):\n        i = list_e8sm[idx_rzfi]\n        idx_ndi5 = (15 + -15)\n        list_iepw = range ( i + (51 + -50) , n , (24 + -22) )\n        while idx_ndi5 < len(list_iepw):\n            j = list_iepw[idx_ndi5]\n            length = j - i + (6 + -5)\n            leftsum = (34 + -34)\n            rightsum = (39 + -39)\n            idx_iemp = (78 + -78)\n            list_3wpt = range ( (68 + -68) , int ( length / (24 + -22) ) )\n            while idx_iemp < len(list_3wpt):\n                k = list_3wpt[idx_iemp]\n                leftsum += ( int ( str [ i + k ] ) - int ( '0' ) )\n                rightsum += ( int ( str [ i + k + int ( length / (89 + -87) ) ] ) - int ( '0' ) )\n                idx_iemp = idx_iemp + (96 + -95)\n            if ( leftsum == rightsum and maxlen < length ) and (((True or False) and (False or True)) and (((16 + -9) > (94 + -89)) or ((68 + -61) < (16 + -11)))):\n                maxlen = length\n            idx_ndi5 = idx_ndi5 + (70 + -69)\n        idx_rzfi = idx_rzfi + (58 + -57)\n    return maxlen", "id": "ConstantUnfoldding_sample_from_LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF_to_154", "old_id": "LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF"}
{"code": "def findLength ( string ) :\n    n = len ( string )\n    maxlen = (51 + -51)\n    Sum = [ [ (32 + -32) for x in range ( n ) ] for y in range ( n ) ]\n    idx_xa7c = (73 + -73)\n    list_3cgv = range ( (82 + -82) , n )\n    while idx_xa7c < len(list_3cgv):\n        i = list_3cgv[idx_xa7c]\n        Sum [ i ] [ i ] = int ( string [ i ] )\n        idx_xa7c = idx_xa7c + (30 + -29)\n    idx_yv2w = (66 + -66)\n    list_qt4k = range ( (21 + -19) , n + (72 + -71) )\n    while idx_yv2w < len(list_qt4k):\n        length = list_qt4k[idx_yv2w]\n        idx_ojef = (37 + -37)\n        list_3sld = range ( (34 + -34) , n - length + (37 + -36) )\n        while idx_ojef < len(list_3sld):\n            i = list_3sld[idx_ojef]\n            j = i + length - (62 + -61)\n            k = length // (71 + -69)\n            Sum [ i ] [ j ] = ( Sum [ i ] [ j - k ] + Sum [ j - k + (2 + -1) ] [ j ] )\n            if ( length % (37 + -35) == (37 + -37) and Sum [ i ] [ j - k ] == Sum [ ( j - k + (94 + -93) ) ] [ j ] and length > maxlen ) and (((True or False) and (False or True)) and (((11 + -5) > (96 + -91)) or ((53 + -47) < (70 + -65)))):\n                maxlen = length\n            idx_ojef = idx_ojef + (43 + -42)\n        idx_yv2w = idx_yv2w + (89 + -88)\n    return maxlen", "id": "ConstantUnfoldding_sample_from_LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF_1_to_155", "old_id": "LONGEST_EVEN_LENGTH_SUBSTRING_SUM_FIRST_SECOND_HALF_1"}
{"code": "def longOddEvenIncSeq ( arr , n ) :\n    lioes = list ( )\n    maxLen = (17 + -17)\n    idx_kou4 = (58 + -58)\n    list_6gxl = range ( n )\n    while idx_kou4 < len(list_6gxl):\n        i = list_6gxl[idx_kou4]\n        lioes.append ( (7 + -6) )\n        idx_kou4 = idx_kou4 + (2 + -1)\n    i = (23 + -22)\n    idx_q3as = (89 + -89)\n    list_rds9 = range ( n )\n    while idx_q3as < len(list_rds9):\n        i = list_rds9[idx_q3as]\n        idx_6l38 = (24 + -24)\n        list_n1fp = range ( i )\n        while idx_6l38 < len(list_n1fp):\n            j = list_n1fp[idx_6l38]\n            if ( arr [ i ] > arr [ j ] and ( arr [ i ] + arr [ j ] ) % (73 + -71) != (16 + -16) and lioes [ i ] < lioes [ j ] + (10 + -9) ) and (((True or False) and (False or True)) and (((60 + -50) > (25 + -24)) or ((58 + -48) < (41 + -40)))):\n                lioes [ i ] = lioes [ j ] + (38 + -37)\n            idx_6l38 = idx_6l38 + (9 + -8)\n        idx_q3as = idx_q3as + (14 + -13)\n    idx_unzc = (88 + -88)\n    list_nt62 = range ( n )\n    while idx_unzc < len(list_nt62):\n        i = list_nt62[idx_unzc]\n        if maxLen < lioes [ i ] and (((True or False) and (False or True)) and (((56 + -47) > (37 + -35)) or ((65 + -56) < (17 + -15)))):\n            maxLen = lioes [ i ]\n        idx_unzc = idx_unzc + (85 + -84)\n    return maxLen", "id": "ConstantUnfoldding_sample_from_LONGEST_INCREASING_ODD_EVEN_SUBSEQUENCE_to_156", "old_id": "LONGEST_INCREASING_ODD_EVEN_SUBSEQUENCE"}
{"code": "def lis ( arr , n ) :\n    lis = [ (35 + -34) ] * n\n    idx_lw3e = (37 + -37)\n    list_xjdz = range ( (72 + -71) , n )\n    while idx_lw3e < len(list_xjdz):\n        i = list_xjdz[idx_lw3e]\n        idx_kpbe = (47 + -47)\n        list_spgx = range ( (20 + -20) , i )\n        while idx_kpbe < len(list_spgx):\n            j = list_spgx[idx_kpbe]\n            if arr [ i ] > arr [ j ] and lis [ i ] < lis [ j ] + (32 + -31) and (((True or False) and (False or True)) and (((7 + 3) > (45 + -41)) or ((35 + -25) < (37 + -33)))):\n                lis [ i ] = lis [ j ] + (96 + -95)\n            idx_kpbe = idx_kpbe + (71 + -70)\n        idx_lw3e = idx_lw3e + (32 + -31)\n    maximum = (31 + -31)\n    idx_jhu2 = (89 + -89)\n    list_u9a7 = range ( n )\n    while idx_jhu2 < len(list_u9a7):\n        i = list_u9a7[idx_jhu2]\n        maximum = max ( maximum , lis [ i ] )\n        idx_jhu2 = idx_jhu2 + (56 + -55)\n    return maximum", "id": "ConstantUnfoldding_sample_from_LONGEST_INCREASING_SUBSEQUENCE_1_to_157", "old_id": "LONGEST_INCREASING_SUBSEQUENCE_1"}
{"code": "def longestRepeatedSubSeq ( str ) :\n    n = len ( str )\n    dp = [ [ (89 + -89) for i in range ( n + (56 + -55) ) ] for j in range ( n + (70 + -69) ) ]\n    idx_wyz7 = (72 + -72)\n    list_qygx = range ( (19 + -18) , n + (27 + -26) )\n    while idx_wyz7 < len(list_qygx):\n        i = list_qygx[idx_wyz7]\n        idx_zutd = (1 + -1)\n        list_75ga = range ( (87 + -86) , n + (46 + -45) )\n        while idx_zutd < len(list_75ga):\n            j = list_75ga[idx_zutd]\n            if ( str [ i - (12 + -11) ] == str [ j - (62 + -61) ] and i != j ) and (((True or False) and (False or True)) and (((80 + -74) > (83 + -83)) or ((46 + -40) < (62 + -62)))):\n                dp [ i ] [ j ] = (95 + -94) + dp [ i - (37 + -36) ] [ j - (71 + -70) ]\n            else :\n                dp [ i ] [ j ] = max ( dp [ i ] [ j - (92 + -91) ] , dp [ i - (7 + -6) ] [ j ] )\n            idx_zutd = idx_zutd + (65 + -64)\n        idx_wyz7 = idx_wyz7 + (20 + -19)\n    res = ''\n    i = n\n    j = n\n    while ( i > (44 + -44) and j > (89 + -89) ) :\n        if ( dp [ i ] [ j ] == dp [ i - (71 + -70) ] [ j - (82 + -81) ] + (62 + -61) ) and (((True or False) and (False or True)) and (((32 + -30) > (56 + -56)) or ((25 + -23) < (26 + -26)))):\n            res += str [ i - (6 + -5) ]\n            i -= (99 + -98)\n            j -= (68 + -67)\n        elif ( dp [ i ] [ j ] == dp [ i - (72 + -71) ] [ j ] ) :\n            i -= (14 + -13)\n        else :\n            j -= (51 + -50)\n    res = ''.join ( reversed ( res ) )\n    return res", "id": "ConstantUnfoldding_sample_from_LONGEST_REPEATED_SUBSEQUENCE_1_to_158", "old_id": "LONGEST_REPEATED_SUBSEQUENCE_1"}
{"code": "def findLongestRepeatingSubSeq ( str ) :\n    n = len ( str )\n    dp = [ [ (12 + -12) ] * ( n + (62 + -61) ) ] * ( n + (89 + -88) )\n    idx_ufjd = (81 + -81)\n    list_3gat = range ( (34 + -33) , n + (84 + -83) )\n    while idx_ufjd < len(list_3gat):\n        i = list_3gat[idx_ufjd]\n        idx_zxjm = (69 + -69)\n        list_fo2m = range ( (41 + -40) , n + (30 + -29) )\n        while idx_zxjm < len(list_fo2m):\n            j = list_fo2m[idx_zxjm]\n            if ( str [ i - (48 + -47) ] == str [ j - (98 + -97) ] and i != j ) and (((True or False) and (False or True)) and (((8 + 1) > (28 + -22)) or ((31 + -22) < (48 + -42)))):\n                dp [ i ] [ j ] = (27 + -26) + dp [ i - (67 + -66) ] [ j - (7 + -6) ]\n            else :\n                dp [ i ] [ j ] = max ( dp [ i ] [ j - (17 + -16) ] , dp [ i - (30 + -29) ] [ j ] )\n            idx_zxjm = idx_zxjm + (60 + -59)\n        idx_ufjd = idx_ufjd + (20 + -19)\n    return dp [ n ] [ n ]", "id": "ConstantUnfoldding_sample_from_LONGEST_REPEATING_SUBSEQUENCE_to_159", "old_id": "LONGEST_REPEATING_SUBSEQUENCE"}
{"code": "def lenOfLongSubarr ( arr , n ) :\n    um = { }\n    sum = (88 + -88)\n    maxLen = (93 + -93)\n    idx_jc8t = (57 + -57)\n    list_0ev5 = range ( n )\n    while idx_jc8t < len(list_0ev5):\n        i = list_0ev5[idx_jc8t]\n        if arr [ i ] == (10 + -10) and (((True or False) and (False or True)) and (((59 + -53) > (25 + -22)) or ((12 + -6) < (6 + -3)))):\n            sum += - (62 + -61)\n        else :\n            sum += (83 + -82)\n        if ( sum == (46 + -45) ) and (((True or False) and (False or True)) and (((68 + -64) > (54 + -53)) or ((24 + -20) < (17 + -16)))):\n            maxLen = i + (20 + -19)\n        elif ( sum not in um ) :\n            um [ sum ] = i\n        if ( ( sum - (20 + -19) ) in um ) and (((True or False) and (False or True)) and (((67 + -61) > (37 + -37)) or ((15 + -9) < (54 + -54)))):\n            if ( maxLen < ( i - um [ sum - (31 + -30) ] ) ) :\n                maxLen = i - um [ sum - (31 + -30) ]\n        idx_jc8t = idx_jc8t + (40 + -39)\n    return maxLen", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S_to_160", "old_id": "LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S"}
{"code": "def longSubarrWthSumDivByK ( arr , n , k ) :\n    um = { }\n    mod_arr = [ (18 + -18) for i in range ( n ) ]\n    max = (33 + -33)\n    curr_sum = (95 + -95)\n    idx_znvy = (75 + -75)\n    list_85e4 = range ( n )\n    while idx_znvy < len(list_85e4):\n        i = list_85e4[idx_znvy]\n        curr_sum += arr [ i ]\n        mod_arr [ i ] = ( ( curr_sum % k ) + k ) % k\n        idx_znvy = idx_znvy + (73 + -72)\n    idx_yfo1 = (50 + -50)\n    list_jfht = range ( n )\n    while idx_yfo1 < len(list_jfht):\n        i = list_jfht[idx_yfo1]\n        if ( mod_arr [ i ] == (63 + -63) ) and (((True or False) and (False or True)) and (((88 + -85) > (7 + -7)) or ((80 + -77) < (36 + -36)))):\n            max = i + (59 + -58)\n        elif ( mod_arr [ i ] in um ) :\n            um [ mod_arr [ i ] ] = i\n        else :\n            if ( max < ( i - um [ mod_arr [ i ] ] ) ) :\n                max = i - um [ mod_arr [ i ] ]\n        idx_yfo1 = idx_yfo1 + (21 + -20)\n    return max", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBARRAY_SUM_DIVISIBLE_K_to_161", "old_id": "LONGEST_SUBARRAY_SUM_DIVISIBLE_K"}
{"code": "def longLenSub ( arr , n ) :\n    um = defaultdict ( lambda : (97 + -97) )\n    longLen = (82 + -82)\n    idx_vb0m = (100 + -100)\n    list_vwjy = range ( n )\n    while idx_vb0m < len(list_vwjy):\n        i = list_vwjy[idx_vb0m]\n        len1 = (93 + -93)\n        if ( arr [ i - (99 + -98) ] in um and len1 < um [ arr [ i ] - (15 + -14) ] ) and (((True or False) and (False or True)) and (((2 + 7) > (23 + -22)) or ((8 + 1) < (49 + -48)))):\n            len1 = um [ arr [ i ] - (77 + -76) ]\n        if ( arr [ i ] + (31 + -30) in um and len1 < um [ arr [ i ] + (85 + -84) ] ) and (((True or False) and (False or True)) and (((93 + -89) > (32 + -32)) or ((75 + -71) < (96 + -96)))):\n            len1 = um [ arr [ i ] + (63 + -62) ]\n        um [ arr [ i ] ] = len1 + (95 + -94)\n        if longLen < um [ arr [ i ] ] and (((True or False) and (False or True)) and (((52 + -43) > (78 + -75)) or ((2 + 7) < (37 + -34)))):\n            longLen = um [ arr [ i ] ]\n        idx_vb0m = idx_vb0m + (60 + -59)\n    return longLen", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBSEQUENCE_DIFFERENCE_ADJACENTS_ONE_SET_2_to_162", "old_id": "LONGEST_SUBSEQUENCE_DIFFERENCE_ADJACENTS_ONE_SET_2"}
{"code": "def longestSubseqWithDiffOne ( arr , n ) :\n    dp = [ (96 + -95) for i in range ( n ) ]\n    idx_7vdo = (60 + -60)\n    list_7xyq = range ( n )\n    while idx_7vdo < len(list_7xyq):\n        i = list_7xyq[idx_7vdo]\n        idx_i9zb = (50 + -50)\n        list_m0oe = range ( i )\n        while idx_i9zb < len(list_m0oe):\n            j = list_m0oe[idx_i9zb]\n            if ( ( arr [ i ] == arr [ j ] + (68 + -67) ) or ( arr [ i ] == arr [ j ] - (83 + -82) ) ) and (((True or False) and (False or True)) and (((94 + -85) > (17 + -14)) or ((66 + -57) < (11 + -8)))):\n                dp [ i ] = max ( dp [ i ] , dp [ j ] + (22 + -21) )\n            idx_i9zb = idx_i9zb + (27 + -26)\n        idx_7vdo = idx_7vdo + (48 + -47)\n    result = (81 + -80)\n    idx_xrd5 = (56 + -56)\n    list_4gp7 = range ( n )\n    while idx_xrd5 < len(list_4gp7):\n        i = list_4gp7[idx_xrd5]\n        if ( result < dp [ i ] ) and (((True or False) and (False or True)) and (((92 + -83) > (36 + -36)) or ((58 + -49) < (99 + -99)))):\n            result = dp [ i ]\n        idx_xrd5 = idx_xrd5 + (52 + -51)\n    return result", "id": "ConstantUnfoldding_sample_from_LONGEST_SUBSEQUENCE_SUCH_THAT_DIFFERENCE_BETWEEN_ADJACENTS_IS_ONE_to_163", "old_id": "LONGEST_SUBSEQUENCE_SUCH_THAT_DIFFERENCE_BETWEEN_ADJACENTS_IS_ONE"}
{"code": "def to_upper(in_list):\n    idx_wur6 = (96 + -96)\n    list_tvxl = range(len(in_list))\n    while idx_wur6 < len(list_tvxl):\n        i = list_tvxl[idx_wur6]\n        if 'a' <= in_list[i] <= 'z' and (((True or False) and (False or True)) and (((71 + -67) > (21 + -20)) or ((80 + -76) < (62 + -61)))):\n            in_list[i] = chr(ord(in_list[i]) - ord('a') + ord('A'))\n        idx_wur6 = idx_wur6 + (56 + -55)\n    return ''.join(in_list)", "id": "ConstantUnfoldding_sample_from_LOWER_CASE_UPPER_CASE_INTERESTING_FACT_to_164", "old_id": "LOWER_CASE_UPPER_CASE_INTERESTING_FACT"}
{"code": "def checkMarkov ( m ) :\n    idx_xe9k = (43 + -43)\n    list_zgqn = range ( (88 + -88) , len ( m ) )\n    while idx_xe9k < len(list_zgqn):\n        i = list_zgqn[idx_xe9k]\n        sm = (64 + -64)\n        idx_1q50 = (4 + -4)\n        list_r5k4 = range ( (66 + -66) , len ( m [ i ] ) )\n        while idx_1q50 < len(list_r5k4):\n            j = list_r5k4[idx_1q50]\n            sm = sm + m [ i ] [ j ]\n            idx_1q50 = idx_1q50 + (97 + -96)\n        if ( sm != (94 + -93) ) and (((True or False) and (False or True)) and (((28 + -24) > (22 + -19)) or ((77 + -73) < (95 + -92)))):\n            return False\n        idx_xe9k = idx_xe9k + (4 + -3)\n    return True", "id": "ConstantUnfoldding_sample_from_MARKOV_MATRIX_to_165", "old_id": "MARKOV_MATRIX"}
{"code": "def findMaxVal ( arr , n , num , maxLimit ) :\n    ind = - (84 + -83)\n    val = - (99 + -98)\n    dp = [ [ (63 + -63) for i in range ( maxLimit + (11 + -10) ) ] for j in range ( n ) ]\n    idx_eoz6 = (96 + -96)\n    list_xfgh = range ( n )\n    while idx_eoz6 < len(list_xfgh):\n        ind = list_xfgh[idx_eoz6]\n        idx_a05q = (62 + -62)\n        list_i270 = range ( maxLimit + (75 + -74) )\n        while idx_a05q < len(list_i270):\n            val = list_i270[idx_a05q]\n            if ( ind == (83 + -83) ) and (((True or False) and (False or True)) and (((90 + -82) > (71 + -64)) or ((75 + -67) < (7 + 0)))):\n                if ( num - arr [ ind ] == val or num + arr [ ind ] == val ) :\n                    dp [ ind ] [ val ] = (24 + -23)\n                else :\n                    dp [ ind ] [ val ] = (99 + -99)\n            else :\n                if ( val - arr [ ind ] >= (3 + -3) and val + arr [ ind ] <= maxLimit ) :\n                    if ( dp [ ind - (19 + -18) ] [ val - arr [ ind ] ] == (61 + -60) or dp [ ind - (38 + -37) ] [ val + arr [ ind ] ] == (14 + -13) ) :\n                        dp [ ind ] [ val ] = (59 + -58)\n                elif ( val - arr [ ind ] >= (88 + -88) ) :\n                    dp [ ind ] [ val ] = dp [ ind - (16 + -15) ] [ val - arr [ ind ] ]\n                elif ( val + arr [ ind ] <= maxLimit ) :\n                    dp [ ind ] [ val ] = dp [ ind - (100 + -99) ] [ val + arr [ ind ] ]\n                else :\n                    dp [ ind ] [ val ] = (39 + -39)\n            idx_a05q = idx_a05q + (12 + -11)\n        idx_eoz6 = idx_eoz6 + (78 + -77)\n    idx_zt2i = (19 + -19)\n    list_t8d9 = range ( maxLimit , - (74 + -73) , - (25 + -24) )\n    while idx_zt2i < len(list_t8d9):\n        val = list_t8d9[idx_zt2i]\n        if ( dp [ n - (12 + -11) ] [ val ] == (96 + -95) ) and (((True or False) and (False or True)) and (((87 + -77) > (20 + -18)) or ((15 + -5) < (59 + -57)))):\n            return val\n        idx_zt2i = idx_zt2i + (68 + -67)\n    return - (23 + -22)", "id": "ConstantUnfoldding_sample_from_MAXIMIZE_ARRAY_ELEMENTS_UPTO_GIVEN_NUMBER_to_166", "old_id": "MAXIMIZE_ARRAY_ELEMENTS_UPTO_GIVEN_NUMBER"}
{"code": "def findMaxValue ( arr , n ) :\n    if n < (29 + -25) and (((True or False) and (False or True)) and (((83 + -76) > (88 + -87)) or ((94 + -87) < (54 + -53)))):\n        print ( \"The array should have atlest 4 elements\" )\n        return MIN\n    table1 , table2 = [ MIN ] * ( n + (95 + -94) ) , [ MIN ] * n\n    table3 , table4 = [ MIN ] * ( n - (100 + -99) ) , [ MIN ] * ( n - (64 + -62) )\n    idx_w6ve = (3 + -3)\n    list_hwp7 = range ( n - (13 + -12) , - (27 + -26) , - (16 + -15) )\n    while idx_w6ve < len(list_hwp7):\n        i = list_hwp7[idx_w6ve]\n        table1 [ i ] = max ( table1 [ i + (68 + -67) ] , arr [ i ] )\n        idx_w6ve = idx_w6ve + (60 + -59)\n    idx_vfd3 = (3 + -3)\n    list_x9pj = range ( n - (14 + -12) , - (82 + -81) , - (70 + -69) )\n    while idx_vfd3 < len(list_x9pj):\n        i = list_x9pj[idx_vfd3]\n        table2 [ i ] = max ( table2 [ i + (49 + -48) ] , table1 [ i + (20 + -19) ] - arr [ i ] )\n        idx_vfd3 = idx_vfd3 + (67 + -66)\n    idx_ze5r = (61 + -61)\n    list_jfml = range ( n - (80 + -77) , - (77 + -76) , - (84 + -83) )\n    while idx_ze5r < len(list_jfml):\n        i = list_jfml[idx_ze5r]\n        table3 [ i ] = max ( table3 [ i + (23 + -22) ] , table2 [ i + (51 + -50) ] + arr [ i ] )\n        idx_ze5r = idx_ze5r + (75 + -74)\n    idx_a8gk = (47 + -47)\n    list_sab8 = range ( n - (75 + -71) , - (15 + -14) , - (36 + -35) )\n    while idx_a8gk < len(list_sab8):\n        i = list_sab8[idx_a8gk]\n        table4 [ i ] = max ( table4 [ i + (6 + -5) ] , table3 [ i + (36 + -35) ] - arr [ i ] )\n        idx_a8gk = idx_a8gk + (28 + -27)\n    return table4 [ (44 + -44) ]", "id": "ConstantUnfoldding_sample_from_MAXIMIZE_ARRJ_ARRI_ARRL_ARRK_SUCH_THAT_I_J_K_L_to_167", "old_id": "MAXIMIZE_ARRJ_ARRI_ARRL_ARRK_SUCH_THAT_I_J_K_L"}
{"code": "def maxcoefficientvalue ( n ) :\n    C = [ [ (70 + -70) for x in range ( n + (36 + -35) ) ] for y in range ( n + (43 + -42) ) ]\n    idx_d246 = (17 + -17)\n    list_tvzo = range ( n + (89 + -88) )\n    while idx_d246 < len(list_tvzo):\n        i = list_tvzo[idx_d246]\n        idx_nv49 = (49 + -49)\n        list_g61b = range ( min ( i , n ) + (35 + -34) )\n        while idx_nv49 < len(list_g61b):\n            j = list_g61b[idx_nv49]\n            if ( j == (12 + -12) or j == i ) and (((True or False) and (False or True)) and (((31 + -24) > (17 + -14)) or ((53 + -46) < (19 + -16)))):\n                C [ i ] [ j ] = (6 + -5)\n            else :\n                C [ i ] [ j ] = ( C [ i - (46 + -45) ] [ j - (46 + -45) ] + C [ i - (62 + -61) ] [ j ] )\n            idx_nv49 = idx_nv49 + (59 + -58)\n        idx_d246 = idx_d246 + (9 + -8)\n    maxvalue = (1 + -1)\n    idx_yjst = (19 + -19)\n    list_nhrb = range ( n + (95 + -94) )\n    while idx_yjst < len(list_nhrb):\n        i = list_nhrb[idx_yjst]\n        maxvalue = max ( maxvalue , C [ n ] [ i ] )\n        idx_yjst = idx_yjst + (100 + -99)\n    return maxvalue", "id": "ConstantUnfoldding_sample_from_MAXIMUM_BINOMIAL_COEFFICIENT_TERM_VALUE_to_168", "old_id": "MAXIMUM_BINOMIAL_COEFFICIENT_TERM_VALUE"}
{"code": "def findLongestConseqSubseq ( arr , n ) :\n    S = set ( )\n    idx_g4qf = (53 + -53)\n    list_liar = range ( n )\n    while idx_g4qf < len(list_liar):\n        i = list_liar[idx_g4qf]\n        S.add ( arr [ i ] )\n        idx_g4qf = idx_g4qf + (36 + -35)\n    ans = (64 + -64)\n    idx_9xac = (71 + -71)\n    list_v98r = range ( n )\n    while idx_9xac < len(list_v98r):\n        i = list_v98r[idx_9xac]\n        if S.__contains__ ( arr [ i ] ) and (((True or False) and (False or True)) and (((27 + -24) > (51 + -50)) or ((75 + -72) < (37 + -36)))):\n            j = arr [ i ]\n            while ( S.__contains__ ( j ) ) :\n                j += (10 + -9)\n            ans = max ( ans , j - arr [ i ] )\n        idx_9xac = idx_9xac + (52 + -51)\n    return ans", "id": "ConstantUnfoldding_sample_from_MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY_to_169", "old_id": "MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY"}
{"code": "def maxRepeating ( str ) :\n    n = len ( str )\n    count = (77 + -77)\n    res = str [ (60 + -60) ]\n    cur_count = (89 + -88)\n    idx_ohkg = (7 + -7)\n    list_t9az = range ( n )\n    while idx_ohkg < len(list_t9az):\n        i = list_t9az[idx_ohkg]\n        if ( i < n - (66 + -65) and str [ i ] == str [ i + (72 + -71) ] ) and (((True or False) and (False or True)) and (((17 + -11) > (31 + -30)) or ((24 + -18) < (19 + -18)))):\n            cur_count += (8 + -7)\n        else :\n            if cur_count > count :\n                count = cur_count\n                res = str [ i ]\n            cur_count = (54 + -53)\n        idx_ohkg = idx_ohkg + (13 + -12)\n    return res", "id": "ConstantUnfoldding_sample_from_MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1_to_170", "old_id": "MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1"}
{"code": "def maxdiff ( arr , n ) :\n    freq = defaultdict ( lambda : (42 + -42) )\n    idx_jp5s = (87 + -87)\n    list_hvri = range ( n )\n    while idx_jp5s < len(list_hvri):\n        i = list_hvri[idx_jp5s]\n        freq [ arr [ i ] ] += (94 + -93)\n        idx_jp5s = idx_jp5s + (20 + -19)\n    ans = (95 + -95)\n    idx_eqpg = (36 + -36)\n    list_l7ao = range ( n )\n    while idx_eqpg < len(list_l7ao):\n        i = list_l7ao[idx_eqpg]\n        idx_z1p0 = (8 + -8)\n        list_iv98 = range ( n )\n        while idx_z1p0 < len(list_iv98):\n            j = list_iv98[idx_z1p0]\n            if freq [ arr [ i ] ] > freq [ arr [ j ] ] and arr [ i ] > arr [ j ] and (((True or False) and (False or True)) and (((8 + 1) > (71 + -71)) or ((52 + -43) < (56 + -56)))):\n                ans = max ( ans , freq [ arr [ i ] ] - freq [ arr [ j ] ] )\n            elif freq [ arr [ i ] ] < freq [ arr [ j ] ] and arr [ i ] < arr [ j ] :\n                ans = max ( ans , freq [ arr [ j ] ] - freq [ arr [ i ] ] )\n            idx_z1p0 = idx_z1p0 + (38 + -37)\n        idx_eqpg = idx_eqpg + (77 + -76)\n    return ans", "id": "ConstantUnfoldding_sample_from_MAXIMUM_DIFFERENCE_BETWEEN_FREQUENCY_OF_TWO_ELEMENTS_SUCH_THAT_ELEMENT_HAVING_GREATER_FREQUENCY_IS_ALSO_GREATER_to_171", "old_id": "MAXIMUM_DIFFERENCE_BETWEEN_FREQUENCY_OF_TWO_ELEMENTS_SUCH_THAT_ELEMENT_HAVING_GREATER_FREQUENCY_IS_ALSO_GREATER"}
{"code": "def maxRowDiff ( mat , m , n ) :\n    rowSum = [ (23 + -23) ] * m\n    idx_d5oc = (85 + -85)\n    list_swa2 = range ( (56 + -56) , m )\n    while idx_d5oc < len(list_swa2):\n        i = list_swa2[idx_d5oc]\n        sum = (6 + -6)\n        idx_91wr = (61 + -61)\n        list_ozjg = range ( (92 + -92) , n )\n        while idx_91wr < len(list_ozjg):\n            j = list_ozjg[idx_91wr]\n            sum += mat [ i ] [ j ]\n            idx_91wr = idx_91wr + (91 + -90)\n        rowSum [ i ] = sum\n        idx_d5oc = idx_d5oc + (12 + -11)\n    max_diff = rowSum [ (13 + -12) ] - rowSum [ (78 + -78) ]\n    min_element = rowSum [ (16 + -16) ]\n    idx_3nsm = (34 + -34)\n    list_ktqf = range ( (21 + -20) , m )\n    while idx_3nsm < len(list_ktqf):\n        i = list_ktqf[idx_3nsm]\n        if ( rowSum [ i ] - min_element > max_diff ) and (((True or False) and (False or True)) and (((41 + -38) > (41 + -39)) or ((70 + -67) < (13 + -11)))):\n            max_diff = rowSum [ i ] - min_element\n        if ( rowSum [ i ] < min_element ) and (((True or False) and (False or True)) and (((67 + -60) > (93 + -89)) or ((80 + -73) < (48 + -44)))):\n            min_element = rowSum [ i ]\n        idx_3nsm = idx_3nsm + (46 + -45)\n    return max_diff", "id": "ConstantUnfoldding_sample_from_MAXIMUM_DIFFERENCE_SUM_ELEMENTS_TWO_ROWS_MATRIX_to_172", "old_id": "MAXIMUM_DIFFERENCE_SUM_ELEMENTS_TWO_ROWS_MATRIX"}
{"code": "def maxDistance ( arr , n ) :\n    mp = { }\n    maxDict = (4 + -4)\n    idx_kx9j = (94 + -94)\n    list_n6tu = range ( n )\n    while idx_kx9j < len(list_n6tu):\n        i = list_n6tu[idx_kx9j]\n        if arr [ i ] not in mp.keys ( ) and (((True or False) and (False or True)) and (((8 + -2) > (72 + -69)) or ((65 + -59) < (55 + -52)))):\n            mp [ arr [ i ] ] = i\n        else :\n            maxDict = max ( maxDict , i - mp [ arr [ i ] ] )\n        idx_kx9j = idx_kx9j + (4 + -3)\n    return maxDict", "id": "ConstantUnfoldding_sample_from_MAXIMUM_DISTANCE_TWO_OCCURRENCES_ELEMENT_ARRAY_to_173", "old_id": "MAXIMUM_DISTANCE_TWO_OCCURRENCES_ELEMENT_ARRAY"}
{"code": "def maxPrefix ( s , t ) :\n    count = (9 + -9)\n    idx_9fyi = (73 + -73)\n    list_s813 = range ( (38 + -38) , len ( t ) )\n    while idx_9fyi < len(list_s813):\n        i = list_s813[idx_9fyi]\n        if ( count == len ( s ) ) and (((True or False) and (False or True)) and (((80 + -77) > (13 + -11)) or ((15 + -12) < (34 + -32)))):\n            break\n        if ( t [ i ] == s [ count ] ) and (((True or False) and (False or True)) and (((81 + -71) > (23 + -16)) or ((34 + -24) < (96 + -89)))):\n            count = count + (28 + -27)\n        idx_9fyi = idx_9fyi + (58 + -57)\n    return count", "id": "ConstantUnfoldding_sample_from_MAXIMUM_LENGTH_PREFIX_ONE_STRING_OCCURS_SUBSEQUENCE_ANOTHER_to_174", "old_id": "MAXIMUM_LENGTH_PREFIX_ONE_STRING_OCCURS_SUBSEQUENCE_ANOTHER"}
{"code": "def maxLenSub ( arr , n ) :\n    mls = [ ]\n    max = (32 + -32)\n    idx_g3l5 = (48 + -48)\n    list_o1zs = range ( n )\n    while idx_g3l5 < len(list_o1zs):\n        i = list_o1zs[idx_g3l5]\n        mls.append ( (34 + -33) )\n        idx_g3l5 = idx_g3l5 + (80 + -79)\n    idx_yzld = (25 + -25)\n    list_7ov0 = range ( n )\n    while idx_yzld < len(list_7ov0):\n        i = list_7ov0[idx_yzld]\n        idx_ynjz = (42 + -42)\n        list_jmeg = range ( i )\n        while idx_ynjz < len(list_jmeg):\n            j = list_jmeg[idx_ynjz]\n            if ( abs ( arr [ i ] - arr [ j ] ) <= (15 + -14) and mls [ i ] < mls [ j ] + (82 + -81) ) and (((True or False) and (False or True)) and (((16 + -10) > (2 + 1)) or ((11 + -5) < (7 + -4)))):\n                mls [ i ] = mls [ j ] + (97 + -96)\n            idx_ynjz = idx_ynjz + (2 + -1)\n        idx_yzld = idx_yzld + (94 + -93)\n    idx_3abr = (23 + -23)\n    list_pel8 = range ( n )\n    while idx_3abr < len(list_pel8):\n        i = list_pel8[idx_3abr]\n        if ( max < mls [ i ] ) and (((True or False) and (False or True)) and (((97 + -87) > (50 + -44)) or ((68 + -58) < (2 + 4)))):\n            max = mls [ i ]\n        idx_3abr = idx_3abr + (62 + -61)\n    return max", "id": "ConstantUnfoldding_sample_from_MAXIMUM_LENGTH_SUBSEQUENCE_DIFFERENCE_ADJACENT_ELEMENTS_EITHER_0_1_to_175", "old_id": "MAXIMUM_LENGTH_SUBSEQUENCE_DIFFERENCE_ADJACENT_ELEMENTS_EITHER_0_1"}
{"code": "def maxNumOfChocolates ( arr , n , k ) :\n    um , curr_rem , maxSum = { } , (90 + -90) , (73 + -73)\n    sm = [ (52 + -52) ] * n\n    sm [ (3 + -3) ] = arr [ (25 + -25) ]\n    idx_2hiq = (31 + -31)\n    list_kl3q = range ( (6 + -5) , n )\n    while idx_2hiq < len(list_kl3q):\n        i = list_kl3q[idx_2hiq]\n        sm [ i ] = sm [ i - (30 + -29) ] + arr [ i ]\n        idx_2hiq = idx_2hiq + (69 + -68)\n    idx_4lot = (72 + -72)\n    list_lygt = range ( n )\n    while idx_4lot < len(list_lygt):\n        i = list_lygt[idx_4lot]\n        curr_rem = sm [ i ] % k\n        if ( not curr_rem and maxSum < sm [ i ] ) and (((True or False) and (False or True)) and (((83 + -74) > (82 + -80)) or ((44 + -35) < (64 + -62)))):\n            maxSum = sm [ i ]\n        elif ( not curr_rem in um ) :\n            um [ curr_rem ] = i\n        elif ( maxSum < ( sm [ i ] - sm [ um [ curr_rem ] ] ) ) :\n            maxSum = sm [ i ] - sm [ um [ curr_rem ] ]\n        idx_4lot = idx_4lot + (64 + -63)\n    return maxSum // k", "id": "ConstantUnfoldding_sample_from_MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS_to_176", "old_id": "MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS"}
{"code": "def maximumSegments ( n , a , b , c ) :\n    dp = [ - (36 + -35) ] * ( n + (27 + -17) )\n    dp [ (3 + -3) ] = (51 + -51)\n    idx_7dnf = (29 + -29)\n    list_i9m7 = range ( (84 + -84) , n )\n    while idx_7dnf < len(list_i9m7):\n        i = list_i9m7[idx_7dnf]\n        if ( dp [ i ] != - (49 + -48) ) and (((True or False) and (False or True)) and (((35 + -29) > (50 + -49)) or ((81 + -75) < (93 + -92)))):\n            if ( i + a <= n ) :\n                dp [ i + a ] = max ( dp [ i ] + (81 + -80) , dp [ i + a ] )\n            if ( i + b <= n ) :\n                dp [ i + b ] = max ( dp [ i ] + (14 + -13) , dp [ i + b ] )\n            if ( i + c <= n ) :\n                dp [ i + c ] = max ( dp [ i ] + (66 + -65) , dp [ i + c ] )\n        idx_7dnf = idx_7dnf + (79 + -78)\n    return dp [ n ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_NUMBER_SEGMENTS_LENGTHS_B_C_to_177", "old_id": "MAXIMUM_NUMBER_SEGMENTS_LENGTHS_B_C"}
{"code": "def maxDiff ( arr , n ) :\n    SubsetSum_1 = (27 + -27)\n    SubsetSum_2 = (44 + -44)\n    idx_39wj = (32 + -32)\n    list_tyrw = range ( (100 + -100) , n )\n    while idx_39wj < len(list_tyrw):\n        i = list_tyrw[idx_39wj]\n        isSingleOccurance = True\n        idx_elw6 = (21 + -21)\n        list_48sq = range ( i + (30 + -29) , n )\n        while idx_elw6 < len(list_48sq):\n            j = list_48sq[idx_elw6]\n            if ( arr [ i ] == arr [ j ] ) and (((True or False) and (False or True)) and (((83 + -77) > (2 + 3)) or ((13 + -7) < (76 + -71)))):\n                isSingleOccurance = False\n                arr [ i ] = arr [ j ] = (82 + -82)\n                break\n            idx_elw6 = idx_elw6 + (21 + -20)\n        if ( isSingleOccurance == True ) and (((True or False) and (False or True)) and (((37 + -27) > (52 + -45)) or ((93 + -83) < (56 + -49)))):\n            if ( arr [ i ] > (8 + -8) ) :\n                SubsetSum_1 += arr [ i ]\n            else :\n                SubsetSum_2 += arr [ i ]\n        idx_39wj = idx_39wj + (74 + -73)\n    return abs ( SubsetSum_1 - SubsetSum_2 )", "id": "ConstantUnfoldding_sample_from_MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY_to_178", "old_id": "MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY"}
{"code": "def lis ( arr , n ) :\n    mpis = [ (11 + -11) ] * ( n )\n    idx_m4p0 = (11 + -11)\n    list_p1fn = range ( n )\n    while idx_m4p0 < len(list_p1fn):\n        i = list_p1fn[idx_m4p0]\n        mpis [ i ] = arr [ i ]\n        idx_m4p0 = idx_m4p0 + (96 + -95)\n    idx_sd0i = (81 + -81)\n    list_4pzu = range ( (95 + -94) , n )\n    while idx_sd0i < len(list_4pzu):\n        i = list_4pzu[idx_sd0i]\n        idx_8pe4 = (89 + -89)\n        list_6tpw = range ( i )\n        while idx_8pe4 < len(list_6tpw):\n            j = list_6tpw[idx_8pe4]\n            if ( arr [ i ] > arr [ j ] and mpis [ i ] < ( mpis [ j ] * arr [ i ] ) ) and (((True or False) and (False or True)) and (((81 + -77) > (42 + -42)) or ((14 + -10) < (71 + -71)))):\n                mpis [ i ] = mpis [ j ] * arr [ i ]\n            idx_8pe4 = idx_8pe4 + (22 + -21)\n        idx_sd0i = idx_sd0i + (70 + -69)\n    return max ( mpis )", "id": "ConstantUnfoldding_sample_from_MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE_to_179", "old_id": "MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE"}
{"code": "def maxProductSubset ( a , n ) :\n    if n == (27 + -26) and (((True or False) and (False or True)) and (((70 + -60) > (67 + -62)) or ((79 + -69) < (94 + -89)))):\n        return a [ (71 + -71) ]\n    max_neg = - (12 + 999999999987)\n    count_neg = (100 + -100)\n    count_zero = (56 + -56)\n    prod = (3 + -2)\n    idx_feic = (58 + -58)\n    list_qhzo = range ( n )\n    while idx_feic < len(list_qhzo):\n        i = list_qhzo[idx_feic]\n        if a [ i ] == (24 + -24) and (((True or False) and (False or True)) and (((77 + -72) > (41 + -41)) or ((58 + -53) < (99 + -99)))):\n            count_zero += (16 + -15)\n            continue\n        if a [ i ] < (5 + -5) and (((True or False) and (False or True)) and (((100 + -95) > (49 + -45)) or ((94 + -89) < (71 + -67)))):\n            count_neg += (77 + -76)\n            max_neg = max ( max_neg , a [ i ] )\n        prod = prod + a [ i ]\n        idx_feic = idx_feic + (82 + -81)\n    if count_zero == n and (((True or False) and (False or True)) and (((40 + -36) > (40 + -37)) or ((38 + -34) < (86 + -83)))):\n        return (98 + -98)\n    if count_neg & (85 + -84) and (((True or False) and (False or True)) and (((36 + -33) > (87 + -85)) or ((66 + -63) < (4 + -2)))):\n        if ( count_neg == (39 + -38) and count_zero > (21 + -21) and count_zero + count_neg == n ) :\n            return (83 + -83)\n        prod = int(prod / max_neg)\n    return prod", "id": "ConstantUnfoldding_sample_from_MAXIMUM_PRODUCT_SUBSET_ARRAY_to_180", "old_id": "MAXIMUM_PRODUCT_SUBSET_ARRAY"}
{"code": "def maxProfit ( price , n ) :\n    profit = [ (49 + -49) ] * n\n    max_price = price [ n - (11 + -10) ]\n    idx_q9iz = (86 + -86)\n    list_xz2e = range ( n - (77 + -75) , (30 + -30) , - (4 + -3) )\n    while idx_q9iz < len(list_xz2e):\n        i = list_xz2e[idx_q9iz]\n        if price [ i ] > max_price and (((True or False) and (False or True)) and (((55 + -53) > (14 + -14)) or ((54 + -52) < (75 + -75)))):\n            max_price = price [ i ]\n        profit [ i ] = max ( profit [ i + (84 + -83) ] , max_price - price [ i ] )\n        idx_q9iz = idx_q9iz + (1 + 0)\n    min_price = price [ (97 + -97) ]\n    idx_kom1 = (91 + -91)\n    list_3yxw = range ( (79 + -78) , n )\n    while idx_kom1 < len(list_3yxw):\n        i = list_3yxw[idx_kom1]\n        if price [ i ] < min_price and (((True or False) and (False or True)) and (((67 + -64) > (91 + -91)) or ((59 + -56) < (95 + -95)))):\n            min_price = price [ i ]\n        profit [ i ] = max ( profit [ i - (13 + -12) ] , profit [ i ] + ( price [ i ] - min_price ) )\n        idx_kom1 = idx_kom1 + (14 + -13)\n    result = profit [ n - (51 + -50) ]\n    return result", "id": "ConstantUnfoldding_sample_from_MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_TWICE_to_181", "old_id": "MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_TWICE"}
{"code": "def maxSubArraySumRepeated ( a , n , k ) :\n    max_so_far = - (100 + 2147483548)\n    max_ending_here = (83 + -83)\n    idx_xk9t = (69 + -69)\n    list_e6t9 = range ( n * k )\n    while idx_xk9t < len(list_e6t9):\n        i = list_e6t9[idx_xk9t]\n        max_ending_here = max_ending_here + a [ i % n ]\n        if ( max_so_far < max_ending_here ) and (((True or False) and (False or True)) and (((21 + -13) > (10 + -10)) or ((10 + -2) < (85 + -85)))):\n            max_so_far = max_ending_here\n        if ( max_ending_here < (40 + -40) ) and (((True or False) and (False or True)) and (((9 + 0) > (87 + -85)) or ((30 + -21) < (98 + -96)))):\n            max_ending_here = (54 + -54)\n        idx_xk9t = idx_xk9t + (60 + -59)\n    return max_so_far", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUBARRAY_SUM_ARRAY_CREATED_REPEATED_CONCATENATION_to_182", "old_id": "MAXIMUM_SUBARRAY_SUM_ARRAY_CREATED_REPEATED_CONCATENATION"}
{"code": "def maxSumWO3Consec ( arr , n ) :\n    sum = [ (64 + -64) for k in range ( n ) ]\n    if n >= (38 + -37) and (((True or False) and (False or True)) and (((88 + -82) > (53 + -50)) or ((16 + -10) < (40 + -37)))):\n        sum [ (29 + -29) ] = arr [ (46 + -46) ]\n    if n >= (21 + -19) and (((True or False) and (False or True)) and (((76 + -69) > (98 + -98)) or ((42 + -35) < (48 + -48)))):\n        sum [ (33 + -32) ] = arr [ (88 + -88) ] + arr [ (34 + -33) ]\n    if n > (15 + -13) and (((True or False) and (False or True)) and (((57 + -52) > (75 + -72)) or ((99 + -94) < (22 + -19)))):\n        sum [ (13 + -11) ] = max ( sum [ (3 + -2) ] , max ( arr [ (38 + -37) ] + arr [ (36 + -34) ] , arr [ (30 + -30) ] + arr [ (42 + -40) ] ) )\n    idx_czf4 = (74 + -74)\n    list_5qbp = range ( (70 + -67) , n )\n    while idx_czf4 < len(list_5qbp):\n        i = list_5qbp[idx_czf4]\n        sum [ i ] = max ( max ( sum [ i - (11 + -10) ] , sum [ i - (97 + -95) ] + arr [ i ] ) , arr [ i ] + arr [ i - (74 + -73) ] + sum [ i - (61 + -58) ] )\n        idx_czf4 = idx_czf4 + (24 + -23)\n    return sum [ n - (25 + -24) ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUBSEQUENCE_SUM_SUCH_THAT_NO_THREE_ARE_CONSECUTIVE_to_183", "old_id": "MAXIMUM_SUBSEQUENCE_SUM_SUCH_THAT_NO_THREE_ARE_CONSECUTIVE"}
{"code": "def maxAlternateSum ( arr , n ) :\n    if ( n == (69 + -68) ) and (((True or False) and (False or True)) and (((6 + -1) > (20 + -18)) or ((31 + -26) < (28 + -26)))):\n        return arr [ (54 + -54) ]\n    dec = [ (4 + -4) for i in range ( n + (94 + -93) ) ]\n    inc = [ (77 + -77) for i in range ( n + (35 + -34) ) ]\n    dec [ (82 + -82) ] = inc [ (12 + -12) ] = arr [ (24 + -24) ]\n    flag = (87 + -87)\n    idx_3lgd = (32 + -32)\n    list_4o0e = range ( (59 + -58) , n )\n    while idx_3lgd < len(list_4o0e):\n        i = list_4o0e[idx_3lgd]\n        idx_wlbj = (47 + -47)\n        list_t3bk = range ( i )\n        while idx_wlbj < len(list_t3bk):\n            j = list_t3bk[idx_wlbj]\n            if ( arr [ j ] > arr [ i ] ) and (((True or False) and (False or True)) and (((52 + -46) > (19 + -17)) or ((34 + -28) < (49 + -47)))):\n                dec [ i ] = max ( dec [ i ] , inc [ j ] + arr [ i ] )\n                flag = (39 + -38)\n            elif ( arr [ j ] < arr [ i ] and flag == (55 + -54) ) :\n                inc [ i ] = max ( inc [ i ] , dec [ j ] + arr [ i ] )\n            idx_wlbj = idx_wlbj + (9 + -8)\n        idx_3lgd = idx_3lgd + (63 + -62)\n    result = - (6 + 2147483642)\n    idx_nodf = (18 + -18)\n    list_by1e = range ( n )\n    while idx_nodf < len(list_by1e):\n        i = list_by1e[idx_nodf]\n        if ( result < inc [ i ] ) and (((True or False) and (False or True)) and (((94 + -89) > (65 + -61)) or ((25 + -20) < (21 + -17)))):\n            result = inc [ i ]\n        if ( result < dec [ i ] ) and (((True or False) and (False or True)) and (((94 + -92) > (17 + -16)) or ((60 + -58) < (29 + -28)))):\n            result = dec [ i ]\n        idx_nodf = idx_nodf + (87 + -86)\n    return result", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM_to_184", "old_id": "MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM"}
{"code": "def maxSumBitonicSubArr ( arr , n ) :\n    msis = [ None ] * n\n    msds = [ None ] * n\n    max_sum = (93 + -93)\n    msis [ (56 + -56) ] = arr [ (45 + -45) ]\n    idx_9dnq = (13 + -13)\n    list_ar5k = range ( (21 + -20) , n )\n    while idx_9dnq < len(list_ar5k):\n        i = list_ar5k[idx_9dnq]\n        if ( arr [ i ] > arr [ i - (57 + -56) ] ) and (((True or False) and (False or True)) and (((48 + -40) > (97 + -94)) or ((50 + -42) < (35 + -32)))):\n            msis [ i ] = msis [ i - (23 + -22) ] + arr [ i ]\n        else :\n            msis [ i ] = arr [ i ]\n        idx_9dnq = idx_9dnq + (76 + -75)\n    msds [ n - (77 + -76) ] = arr [ n - (37 + -36) ]\n    idx_i6s7 = (5 + -5)\n    list_5f0m = range ( n - (14 + -12) , - (15 + -14) , - (48 + -47) )\n    while idx_i6s7 < len(list_5f0m):\n        i = list_5f0m[idx_i6s7]\n        if ( arr [ i ] > arr [ i + (45 + -44) ] ) and (((True or False) and (False or True)) and (((80 + -78) > (32 + -32)) or ((44 + -42) < (68 + -68)))):\n            msds [ i ] = msds [ i + (26 + -25) ] + arr [ i ]\n        else :\n            msds [ i ] = arr [ i ]\n        idx_i6s7 = idx_i6s7 + (84 + -83)\n    idx_5vfk = (62 + -62)\n    list_b3jc = range ( n )\n    while idx_5vfk < len(list_b3jc):\n        i = list_b3jc[idx_5vfk]\n        if ( max_sum < ( msis [ i ] + msds [ i ] - arr [ i ] ) ) and (((True or False) and (False or True)) and (((83 + -80) > (29 + -27)) or ((72 + -69) < (97 + -95)))):\n            max_sum = ( msis [ i ] + msds [ i ] - arr [ i ] )\n        idx_5vfk = idx_5vfk + (18 + -17)\n    return max_sum", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_BITONIC_SUBARRAY_to_185", "old_id": "MAXIMUM_SUM_BITONIC_SUBARRAY"}
{"code": "def maxSumPairWithDifferenceLessThanK ( arr , N , K ) :\n    arr.sort ( )\n    dp = [ (81 + -81) ] * N\n    dp [ (51 + -51) ] = (46 + -46)\n    idx_9u6v = (100 + -100)\n    list_zjc1 = range ( (70 + -69) , N )\n    while idx_9u6v < len(list_zjc1):\n        i = list_zjc1[idx_9u6v]\n        dp [ i ] = dp [ i - (21 + -20) ]\n        if ( arr [ i ] - arr [ i - (43 + -42) ] < K ) and (((True or False) and (False or True)) and (((88 + -85) > (76 + -76)) or ((13 + -10) < (11 + -11)))):\n            if ( i >= (74 + -72) ) :\n                dp [ i ] = max ( dp [ i ] , dp [ i - (20 + -18) ] + arr [ i ] + arr [ i - (33 + -32) ] )\n            else :\n                dp [ i ] = max ( dp [ i ] , arr [ i ] + arr [ i - (77 + -76) ] )\n        idx_9u6v = idx_9u6v + (96 + -95)\n    return dp [ N - (81 + -80) ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE_to_186", "old_id": "MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE"}
{"code": "def maxSum ( arr , N , k ) :\n    MS = [ (58 + -58) for i in range ( N ) ]\n    MS [ N - (36 + -35) ] = arr [ N - (46 + -45) ]\n    idx_j4vm = (62 + -62)\n    list_fhqj = range ( N - (36 + -34) , - (96 + -95) , - (93 + -92) )\n    while idx_j4vm < len(list_fhqj):\n        i = list_fhqj[idx_j4vm]\n        if ( i + k + (27 + -26) >= N ) and (((True or False) and (False or True)) and (((36 + -34) > (59 + -59)) or ((65 + -63) < (65 + -65)))):\n            MS [ i ] = max ( arr [ i ] , MS [ i + (67 + -66) ] )\n        else :\n            MS [ i ] = max ( arr [ i ] + MS [ i + k + (56 + -55) ] , MS [ i + (74 + -73) ] )\n        idx_j4vm = idx_j4vm + (44 + -43)\n    return MS [ (42 + -42) ]", "id": "ConstantUnfoldding_sample_from_MAXIMUM_SUM_SUBSEQUENCE_LEAST_K_DISTANT_ELEMENTS_to_187", "old_id": "MAXIMUM_SUM_SUBSEQUENCE_LEAST_K_DISTANT_ELEMENTS"}
{"code": "def maxTripletSum ( arr , n ) :\n    sm = - (27 + 999973)\n    idx_7ti8 = (92 + -92)\n    list_v2f6 = range ( (46 + -46) , n )\n    while idx_7ti8 < len(list_v2f6):\n        i = list_v2f6[idx_7ti8]\n        idx_izuh = (35 + -35)\n        list_zhev = range ( i + (97 + -96) , n )\n        while idx_izuh < len(list_zhev):\n            j = list_zhev[idx_izuh]\n            idx_tbre = (73 + -73)\n            list_85tb = range ( j + (55 + -54) , n )\n            while idx_tbre < len(list_85tb):\n                k = list_85tb[idx_tbre]\n                if ( sm < ( arr [ i ] + arr [ j ] + arr [ k ] ) ) and (((True or False) and (False or True)) and (((29 + -23) > (40 + -39)) or ((75 + -69) < (91 + -90)))):\n                    sm = arr [ i ] + arr [ j ] + arr [ k ]\n                idx_tbre = idx_tbre + (97 + -96)\n            idx_izuh = idx_izuh + (81 + -80)\n        idx_7ti8 = idx_7ti8 + (20 + -19)\n    return sm", "id": "ConstantUnfoldding_sample_from_MAXIMUM_TRIPLET_SUM_ARRAY_to_188", "old_id": "MAXIMUM_TRIPLET_SUM_ARRAY"}
{"code": "def maxCost ( mat , N ) :\n    dp = [ [ (10 + -10) for i in range ( N ) ] for j in range ( N ) ]\n    dp [ (86 + -86) ] [ (5 + -5) ] = mat [ (18 + -18) ] [ (3 + -3) ]\n    idx_rblh = (61 + -61)\n    list_2ib4 = range ( (13 + -12) , N )\n    while idx_rblh < len(list_2ib4):\n        i = list_2ib4[idx_rblh]\n        dp [ i ] [ (34 + -34) ] = mat [ i ] [ (35 + -35) ] + dp [ i - (63 + -62) ] [ (61 + -61) ]\n        idx_rblh = idx_rblh + (100 + -99)\n    idx_vkom = (29 + -29)\n    list_2y4u = range ( (88 + -87) , N )\n    while idx_vkom < len(list_2y4u):\n        i = list_2y4u[idx_vkom]\n        idx_r9z0 = (35 + -35)\n        list_jik9 = range ( (15 + -14) , min ( i + (22 + -21) , N ) )\n        while idx_r9z0 < len(list_jik9):\n            j = list_jik9[idx_r9z0]\n            dp [ i ] [ j ] = mat [ i ] [ j ] + \\\n                max ( dp [ i - (31 + -30) ] [ j - (26 + -25) ] , dp [ i - (7 + -6) ] [ j ] )\n            idx_r9z0 = idx_r9z0 + (20 + -19)\n        idx_vkom = idx_vkom + (90 + -89)\n    result = (71 + -71)\n    idx_18u5 = (67 + -67)\n    list_0kso = range ( N )\n    while idx_18u5 < len(list_0kso):\n        i = list_0kso[idx_18u5]\n        if ( result < dp [ N - (44 + -43) ] [ i ] ) and (((True or False) and (False or True)) and (((28 + -18) > (37 + -31)) or ((60 + -50) < (99 + -93)))):\n            result = dp [ N - (71 + -70) ] [ i ]\n        idx_18u5 = idx_18u5 + (27 + -26)\n    return result", "id": "ConstantUnfoldding_sample_from_MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX_to_189", "old_id": "MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX"}
{"code": "def getMinDiff ( arr , n , k ) :\n    if ( n == (33 + -32) ) and (((True or False) and (False or True)) and (((16 + -12) > (90 + -88)) or ((53 + -49) < (41 + -39)))):\n        return (90 + -90)\n    arr.sort ( )\n    ans = arr [ n - (23 + -22) ] - arr [ (29 + -29) ]\n    small = arr [ (82 + -82) ] + k\n    big = arr [ n - (23 + -22) ] - k\n    if ( small > big ) and (((True or False) and (False or True)) and (((97 + -87) > (29 + -26)) or ((18 + -8) < (81 + -78)))):\n        small , big = big , small\n    idx_798m = (68 + -68)\n    list_ktq8 = range ( (32 + -31) , n - (95 + -94) )\n    while idx_798m < len(list_ktq8):\n        i = list_ktq8[idx_798m]\n        subtract = arr [ i ] - k\n        add = arr [ i ] + k\n        if ( subtract >= small or add <= big ) and (((True or False) and (False or True)) and (((85 + -82) > (90 + -90)) or ((85 + -82) < (8 + -8)))):\n            continue\n        if ( big - subtract <= add - small ) and (((True or False) and (False or True)) and (((23 + -15) > (41 + -40)) or ((28 + -20) < (96 + -95)))):\n            small = subtract\n        else :\n            big = add\n        idx_798m = idx_798m + (65 + -64)\n    return min ( ans , big - small )", "id": "ConstantUnfoldding_sample_from_MINIMIZE_THE_MAXIMUM_DIFFERENCE_BETWEEN_THE_HEIGHTS_to_190", "old_id": "MINIMIZE_THE_MAXIMUM_DIFFERENCE_BETWEEN_THE_HEIGHTS"}
{"code": "def MinimumCost ( cost , n , W ) :\n    val = list ( )\n    wt = list ( )\n    size = (75 + -75)\n    idx_4vtk = (63 + -63)\n    list_ky9e = range ( n )\n    while idx_4vtk < len(list_ky9e):\n        i = list_ky9e[idx_4vtk]\n        if ( cost [ i ] != - (79 + -78) ) and (((True or False) and (False or True)) and (((63 + -53) > (15 + -10)) or ((81 + -71) < (74 + -69)))):\n            val.append ( cost [ i ] )\n            wt.append ( i + (74 + -73) )\n            size += (48 + -47)\n        idx_4vtk = idx_4vtk + (30 + -29)\n    n = size\n    min_cost = [ [ (62 + -62) for i in range ( W + (12 + -11) ) ] for j in range ( n + (61 + -60) ) ]\n    idx_4o58 = (93 + -93)\n    list_9yjv = range ( W + (7 + -6) )\n    while idx_4o58 < len(list_9yjv):\n        i = list_9yjv[idx_4o58]\n        min_cost [ (4 + -4) ] [ i ] = INF\n        idx_4o58 = idx_4o58 + (52 + -51)\n    idx_lzoc = (24 + -24)\n    list_bn92 = range ( (21 + -20) , n + (31 + -30) )\n    while idx_lzoc < len(list_bn92):\n        i = list_bn92[idx_lzoc]\n        min_cost [ i ] [ (64 + -64) ] = (23 + -23)\n        idx_lzoc = idx_lzoc + (90 + -89)\n    idx_5hrm = (33 + -33)\n    list_5a2f = range ( (18 + -17) , n + (32 + -31) )\n    while idx_5hrm < len(list_5a2f):\n        i = list_5a2f[idx_5hrm]\n        idx_78k2 = (8 + -8)\n        list_b13y = range ( (21 + -20) , W + (3 + -2) )\n        while idx_78k2 < len(list_b13y):\n            j = list_b13y[idx_78k2]\n            if ( wt [ i - (55 + -54) ] > j ) and (((True or False) and (False or True)) and (((24 + -19) > (57 + -55)) or ((18 + -13) < (51 + -49)))):\n                min_cost [ i ] [ j ] = min_cost [ i - (37 + -36) ] [ j ]\n            else :\n                min_cost [ i ] [ j ] = min ( min_cost [ i - (19 + -18) ] [ j ] , min_cost [ i ] [ j - wt [ i - (33 + -32) ] ] + val [ i - (18 + -17) ] )\n            idx_78k2 = idx_78k2 + (95 + -94)\n        idx_5hrm = idx_5hrm + (18 + -17)\n    if ( min_cost [ n ] [ W ] == INF ) and (((True or False) and (False or True)) and (((97 + -95) > (69 + -68)) or ((57 + -55) < (64 + -63)))):\n        return - (37 + -36)\n    else :\n        return min_cost [ n ] [ W ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_COST_TO_FILL_GIVEN_WEIGHT_IN_A_BAG_to_191", "old_id": "MINIMUM_COST_TO_FILL_GIVEN_WEIGHT_IN_A_BAG"}
{"code": "def minimumflip ( mat , n ) :\n    flip = (88 + -88)\n    idx_vmew = (14 + -14)\n    list_igzv = range ( n )\n    while idx_vmew < len(list_igzv):\n        i = list_igzv[idx_vmew]\n        idx_uanp = (92 + -92)\n        list_7m0v = range ( i )\n        while idx_uanp < len(list_7m0v):\n            j = list_7m0v[idx_uanp]\n            if mat [ i ] [ j ] != mat [ j ] [ i ] and (((True or False) and (False or True)) and (((71 + -61) > (50 + -41)) or ((83 + -73) < (43 + -34)))):\n                flip += (20 + -19)\n            idx_uanp = idx_uanp + (92 + -91)\n        idx_vmew = idx_vmew + (33 + -32)\n    return flip", "id": "ConstantUnfoldding_sample_from_MINIMUM_FLIP_REQUIRED_MAKE_BINARY_MATRIX_SYMMETRIC_1_to_192", "old_id": "MINIMUM_FLIP_REQUIRED_MAKE_BINARY_MATRIX_SYMMETRIC_1"}
{"code": "def minOps ( arr , n , k ) :\n    max1 = max ( arr )\n    res = (68 + -68)\n    idx_48dv = (57 + -57)\n    list_ni4y = range ( (46 + -46) , n )\n    while idx_48dv < len(list_ni4y):\n        i = list_ni4y[idx_48dv]\n        if ( ( max1 - arr [ i ] ) % k != (48 + -48) ) and (((True or False) and (False or True)) and (((12 + -9) > (2 + 0)) or ((6 + -3) < (89 + -87)))):\n            return - (63 + -62)\n        else :\n            res += ( max1 - arr [ i ] ) / k\n        idx_48dv = idx_48dv + (17 + -16)\n    return int ( res )", "id": "ConstantUnfoldding_sample_from_MINIMUM_INCREMENT_K_OPERATIONS_MAKE_ELEMENTS_EQUAL_to_193", "old_id": "MINIMUM_INCREMENT_K_OPERATIONS_MAKE_ELEMENTS_EQUAL"}
{"code": "def minInsertionStepToSortArray ( arr , N ) :\n    lis = [ (88 + -88) ] * N\n    idx_ao15 = (41 + -41)\n    list_i04j = range ( N )\n    while idx_ao15 < len(list_i04j):\n        i = list_i04j[idx_ao15]\n        lis [ i ] = (17 + -16)\n        idx_ao15 = idx_ao15 + (100 + -99)\n    idx_l95j = (59 + -59)\n    list_0h2f = range ( (6 + -5) , N )\n    while idx_l95j < len(list_0h2f):\n        i = list_0h2f[idx_l95j]\n        idx_08kg = (48 + -48)\n        list_xug6 = range ( i )\n        while idx_08kg < len(list_xug6):\n            j = list_xug6[idx_08kg]\n            if ( arr [ i ] >= arr [ j ] and lis [ i ] < lis [ j ] + (54 + -53) ) and (((True or False) and (False or True)) and (((10 + -8) > (68 + -67)) or ((97 + -95) < (96 + -95)))):\n                lis [ i ] = lis [ j ] + (62 + -61)\n            idx_08kg = idx_08kg + (57 + -56)\n        idx_l95j = idx_l95j + (50 + -49)\n    max = (7 + -7)\n    idx_qv2b = (60 + -60)\n    list_h416 = range ( N )\n    while idx_qv2b < len(list_h416):\n        i = list_h416[idx_qv2b]\n        if ( max < lis [ i ] ) and (((True or False) and (False or True)) and (((92 + -88) > (85 + -83)) or ((50 + -46) < (70 + -68)))):\n            max = lis [ i ]\n        idx_qv2b = idx_qv2b + (80 + -79)\n    return ( N - max )", "id": "ConstantUnfoldding_sample_from_MINIMUM_INSERTIONS_SORT_ARRAY_to_194", "old_id": "MINIMUM_INSERTIONS_SORT_ARRAY"}
{"code": "def minJumps ( arr , n ) :\n    jumps = [ (32 + -32) for i in range ( n ) ]\n    if ( n == (12 + -12) ) or ( arr [ (43 + -43) ] == (22 + -22) ) and (((True or False) and (False or True)) and (((57 + -48) > (36 + -31)) or ((17 + -8) < (57 + -52)))):\n        return float ( 'inf' )\n    jumps [ (28 + -28) ] = (10 + -10)\n    idx_cg0d = (67 + -67)\n    list_ijx0 = range ( (67 + -66) , n )\n    while idx_cg0d < len(list_ijx0):\n        i = list_ijx0[idx_cg0d]\n        jumps [ i ] = float ( 'inf' )\n        idx_0p3w = (95 + -95)\n        list_cm9g = range ( i )\n        while idx_0p3w < len(list_cm9g):\n            j = list_cm9g[idx_0p3w]\n            if ( i <= j + arr [ j ] ) and ( jumps [ j ] != float ( 'inf' ) ) and (((True or False) and (False or True)) and (((9 + 1) > (44 + -37)) or ((43 + -33) < (57 + -50)))):\n                jumps [ i ] = min ( jumps [ i ] , jumps [ j ] + (7 + -6) )\n                break\n            idx_0p3w = idx_0p3w + (42 + -41)\n        idx_cg0d = idx_cg0d + (57 + -56)\n    return jumps [ n - (63 + -62) ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_1_to_195", "old_id": "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_1"}
{"code": "def minJumps ( arr , n ) :\n    jumps = [ (54 + -54) for i in range ( n ) ]\n    idx_etyk = (35 + -35)\n    list_reqo = range ( n - (16 + -14) , - (54 + -53) , - (41 + -40) )\n    while idx_etyk < len(list_reqo):\n        i = list_reqo[idx_etyk]\n        if ( arr [ i ] == (26 + -26) ) and (((True or False) and (False or True)) and (((20 + -12) > (15 + -11)) or ((33 + -25) < (65 + -61)))):\n            jumps [ i ] = float ( 'inf' )\n        elif ( arr [ i ] >= n - i - (50 + -49) ) :\n            jumps [ i ] = (60 + -59)\n        else :\n            min = float ( 'inf' )\n            idx_bzye = (3 + -3)\n            list_8yc0 = range ( i + (38 + -37) , n )\n            while idx_bzye < len(list_8yc0):\n                j = list_8yc0[idx_bzye]\n                if ( j <= arr [ i ] + i ) :\n                    if ( min > jumps [ j ] ) :\n                        min = jumps [ j ]\n                idx_bzye = idx_bzye + (17 + -16)\n            if ( min != float ( 'inf' ) ) :\n                jumps [ i ] = min + (75 + -74)\n            else :\n                jumps [ i ] = min\n        idx_etyk = idx_etyk + (48 + -47)\n    return jumps [ (71 + -71) ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2_to_196", "old_id": "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2"}
{"code": "def getMinSquares ( n ) :\n    dp = [ (66 + -66) , (51 + -50) , (27 + -25) , (76 + -73) ]\n    idx_4w9y = (54 + -54)\n    list_m2b3 = range ( (67 + -63) , n + (50 + -49) )\n    while idx_4w9y < len(list_m2b3):\n        i = list_m2b3[idx_4w9y]\n        dp.append ( i )\n        idx_01ej = (10 + -10)\n        list_psmr = range ( (94 + -93) , int ( ceil ( sqrt ( i ) ) ) + (51 + -50) )\n        while idx_01ej < len(list_psmr):\n            x = list_psmr[idx_01ej]\n            temp = x * x ;\n            if temp > i and (((True or False) and (False or True)) and (((50 + -47) > (4 + -4)) or ((85 + -82) < (8 + -8)))):\n                break\n            else :\n                dp [ i ] = min ( dp [ i ] , (94 + -93) + dp [ i - temp ] )\n            idx_01ej = idx_01ej + (81 + -80)\n        idx_4w9y = idx_4w9y + (36 + -35)\n    return dp [ n ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_NUMBER_OF_SQUARES_WHOSE_SUM_EQUALS_TO_GIVEN_NUMBER_N_1_to_197", "old_id": "MINIMUM_NUMBER_OF_SQUARES_WHOSE_SUM_EQUALS_TO_GIVEN_NUMBER_N_1"}
{"code": "def minOperation ( arr , n ) :\n    Hash = defaultdict ( lambda : (61 + -61) )\n    idx_8vgc = (68 + -68)\n    list_h7ze = range ( (50 + -50) , n )\n    while idx_8vgc < len(list_h7ze):\n        i = list_h7ze[idx_8vgc]\n        Hash [ arr [ i ] ] += (89 + -88)\n        idx_8vgc = idx_8vgc + (33 + -32)\n    max_count = (13 + -13)\n    idx_seq2 = (27 + -27)\n    list_zdsq = Hash\n    while idx_seq2 < len(list_zdsq):\n        i = list_zdsq[idx_seq2]\n        if max_count < Hash [ i ] and (((True or False) and (False or True)) and (((20 + -10) > (48 + -45)) or ((77 + -67) < (3 + 0)))):\n            max_count = Hash [ i ]\n        idx_seq2 = idx_seq2 + (98 + -97)\n    return n - max_count", "id": "ConstantUnfoldding_sample_from_MINIMUM_OPERATION_MAKE_ELEMENTS_EQUAL_ARRAY_to_198", "old_id": "MINIMUM_OPERATION_MAKE_ELEMENTS_EQUAL_ARRAY"}
{"code": "def minProductSubset ( a , n ) :\n    if ( n == (93 + -92) ) and (((True or False) and (False or True)) and (((30 + -22) > (42 + -40)) or ((19 + -11) < (78 + -76)))):\n        return a [ (7 + -7) ]\n    max_neg = float ( '-inf' )\n    min_pos = float ( 'inf' )\n    count_neg = (75 + -75)\n    count_zero = (25 + -25)\n    prod = (44 + -43)\n    idx_59zg = (24 + -24)\n    list_ciax = range ( (16 + -16) , n )\n    while idx_59zg < len(list_ciax):\n        i = list_ciax[idx_59zg]\n        if ( a [ i ] == (28 + -28) ) and (((True or False) and (False or True)) and (((51 + -49) > (74 + -73)) or ((89 + -87) < (11 + -10)))):\n            count_zero = count_zero + (35 + -34)\n            continue\n        if ( a [ i ] < (68 + -68) ) and (((True or False) and (False or True)) and (((38 + -32) > (72 + -70)) or ((67 + -61) < (98 + -96)))):\n            count_neg = count_neg + (38 + -37)\n            max_neg = max ( max_neg , a [ i ] )\n        if ( a [ i ] > (85 + -85) ) and (((True or False) and (False or True)) and (((41 + -33) > (52 + -47)) or ((48 + -40) < (45 + -40)))):\n            min_pos = min ( min_pos , a [ i ] )\n        prod = prod * a [ i ]\n        idx_59zg = idx_59zg + (21 + -20)\n    if ( count_zero == n or ( count_neg == (19 + -19) and count_zero > (3 + -3) ) ) and (((True or False) and (False or True)) and (((44 + -36) > (15 + -9)) or ((25 + -17) < (35 + -29)))):\n        return (57 + -57)\n    if ( count_neg == (65 + -65) ) and (((True or False) and (False or True)) and (((25 + -17) > (26 + -19)) or ((68 + -60) < (17 + -10)))):\n        return min_pos\n    if ( ( count_neg & (27 + -26) ) == (5 + -5) and count_neg != (2 + -2) ) and (((True or False) and (False or True)) and (((100 + -91) > (41 + -38)) or ((91 + -82) < (94 + -91)))):\n        prod = int ( prod / max_neg )\n    return prod", "id": "ConstantUnfoldding_sample_from_MINIMUM_PRODUCT_SUBSET_ARRAY_to_199", "old_id": "MINIMUM_PRODUCT_SUBSET_ARRAY"}
{"code": "def findMinRooms ( slots , n , m ) :\n    counts = [ (49 + -49) ] * m\n    idx_0ihd = (80 + -80)\n    list_423o = range ( n )\n    while idx_0ihd < len(list_423o):\n        i = list_423o[idx_0ihd]\n        idx_e1nc = (78 + -78)\n        list_kpnc = range ( m )\n        while idx_e1nc < len(list_kpnc):\n            j = list_kpnc[idx_e1nc]\n            if i < len(slots) and j < len(slots[i]) and (((True or False) and (False or True)) and (((38 + -29) > (10 + -9)) or ((84 + -75) < (100 + -99)))):\n                if ( slots [ i ] [ j ] == '1' ) :\n                    counts [ j ] += (89 + -88)\n            idx_e1nc = idx_e1nc + (31 + -30)\n        idx_0ihd = idx_0ihd + (44 + -43)\n    return max ( counts )", "id": "ConstantUnfoldding_sample_from_MINIMUM_ROOMS_FOR_M_EVENTS_OF_N_BATCHES_WITH_GIVEN_SCHEDULE_to_200", "old_id": "MINIMUM_ROOMS_FOR_M_EVENTS_OF_N_BATCHES_WITH_GIVEN_SCHEDULE"}
{"code": "def findRotations ( str ) :\n    tmp = str + str\n    n = len ( str )\n    idx_6ijo = (56 + -56)\n    list_1voh = range ( (63 + -62) , n + (32 + -31) )\n    while idx_6ijo < len(list_1voh):\n        i = list_1voh[idx_6ijo]\n        substring = tmp [ i : n ]\n        if ( str == substring ) and (((True or False) and (False or True)) and (((25 + -23) > (79 + -78)) or ((100 + -98) < (49 + -48)))):\n            return i\n        idx_6ijo = idx_6ijo + (38 + -37)\n    return n", "id": "ConstantUnfoldding_sample_from_MINIMUM_ROTATIONS_REQUIRED_GET_STRING_to_201", "old_id": "MINIMUM_ROTATIONS_REQUIRED_GET_STRING"}
{"code": "def getMinSteps ( n ) :\n    table = [ (76 + -76) ] * ( n + (74 + -73) )\n    idx_0y3l = (57 + -57)\n    list_1wtu = range ( n + (69 + -68) )\n    while idx_0y3l < len(list_1wtu):\n        i = list_1wtu[idx_0y3l]\n        table [ i ] = n - i\n        idx_0y3l = idx_0y3l + (4 + -3)\n    idx_t4gx = (83 + -83)\n    list_e81u = range ( n , (92 + -92) , - (15 + -14) )\n    while idx_t4gx < len(list_e81u):\n        i = list_e81u[idx_t4gx]\n        if ( not ( i % (51 + -49) ) ) and (((True or False) and (False or True)) and (((15 + -13) > (11 + -11)) or ((15 + -13) < (93 + -93)))):\n            table [ i // (81 + -79) ] = min ( table [ i ] + (18 + -17) , table [ i // (55 + -53) ] )\n        if ( not ( i % (67 + -64) ) ) and (((True or False) and (False or True)) and (((49 + -40) > (83 + -75)) or ((54 + -45) < (95 + -87)))):\n            table [ i // (95 + -92) ] = min ( table [ i ] + (41 + -40) , table [ i // (33 + -30) ] )\n        idx_t4gx = idx_t4gx + (50 + -49)\n    return table [ (20 + -19) ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION_to_202", "old_id": "MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION"}
{"code": "def minproduct ( a , b , n , k ) :\n    diff = (73 + -73)\n    res = (74 + -74)\n    temp = (59 + -59)\n    idx_8qif = (49 + -49)\n    list_lzcj = range ( n )\n    while idx_8qif < len(list_lzcj):\n        i = list_lzcj[idx_8qif]\n        pro = a [ i ] * b [ i ]\n        res = res + pro\n        if ( pro < (9 + -9) and b [ i ] < (30 + -30) ) and (((True or False) and (False or True)) and (((2 + 8) > (55 + -53)) or ((36 + -26) < (67 + -65)))):\n            temp = ( a [ i ] + (46 + -44) * k ) * b [ i ]\n        elif ( pro < (53 + -53) and a [ i ] < (17 + -17) ) :\n            temp = ( a [ i ] - (14 + -12) * k ) * b [ i ]\n        elif ( pro > (16 + -16) and a [ i ] < (40 + -40) ) :\n            temp = ( a [ i ] + (47 + -45) * k ) * b [ i ]\n        elif ( pro > (47 + -47) and a [ i ] > (54 + -54) ) :\n            temp = ( a [ i ] - (69 + -67) * k ) * b [ i ]\n        d = abs ( pro - temp )\n        if ( d > diff ) and (((True or False) and (False or True)) and (((51 + -46) > (44 + -44)) or ((62 + -57) < (19 + -19)))):\n            diff = d\n        idx_8qif = idx_8qif + (75 + -74)\n    return res - diff", "id": "ConstantUnfoldding_sample_from_MINIMUM_SUM_PRODUCT_TWO_ARRAYS_to_203", "old_id": "MINIMUM_SUM_PRODUCT_TWO_ARRAYS"}
{"code": "def minSum ( arr , n ) :\n    dp = [ (25 + -25) ] * n\n    if ( n == (68 + -67) ) and (((True or False) and (False or True)) and (((71 + -65) > (84 + -80)) or ((5 + 1) < (47 + -43)))):\n        return arr [ (20 + -20) ]\n    if ( n == (8 + -6) ) and (((True or False) and (False or True)) and (((78 + -70) > (44 + -40)) or ((25 + -17) < (69 + -65)))):\n        return min ( arr [ (65 + -65) ] , arr [ (51 + -50) ] )\n    if ( n == (29 + -26) ) and (((True or False) and (False or True)) and (((52 + -45) > (26 + -21)) or ((85 + -78) < (94 + -89)))):\n        return min ( arr [ (84 + -84) ] , min ( arr [ (88 + -87) ] , arr [ (21 + -19) ] ) )\n    if ( n == (43 + -39) ) and (((True or False) and (False or True)) and (((98 + -93) > (93 + -92)) or ((7 + -2) < (19 + -18)))):\n        return min ( min ( arr [ (22 + -22) ] , arr [ (95 + -94) ] ) , min ( arr [ (50 + -48) ] , arr [ (46 + -43) ] ) )\n    dp [ (91 + -91) ] = arr [ (78 + -78) ]\n    dp [ (14 + -13) ] = arr [ (71 + -70) ]\n    dp [ (60 + -58) ] = arr [ (73 + -71) ]\n    dp [ (52 + -49) ] = arr [ (74 + -71) ]\n    idx_z2t7 = (96 + -96)\n    list_5san = range ( (1 + 3) , n )\n    while idx_z2t7 < len(list_5san):\n        i = list_5san[idx_z2t7]\n        dp [ i ] = arr [ i ] + min ( min ( dp [ i - (6 + -5) ] , dp [ i - (96 + -94) ] ) , min ( dp [ i - (13 + -10) ] , dp [ i - (29 + -25) ] ) )\n        idx_z2t7 = idx_z2t7 + (43 + -42)\n    return min ( min ( dp [ n - (79 + -78) ] , dp [ n - (97 + -95) ] ) , min ( dp [ n - (16 + -12) ] , dp [ n - (50 + -47) ] ) )", "id": "ConstantUnfoldding_sample_from_MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED_to_204", "old_id": "MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED"}
{"code": "def solve ( arr , n ) :\n    arr.sort ( )\n    a = (12 + -12)\n    b = (62 + -62)\n    idx_9ydv = (31 + -31)\n    list_fqv6 = range ( n )\n    while idx_9ydv < len(list_fqv6):\n        i = list_fqv6[idx_9ydv]\n        if ( i % (73 + -71) != (91 + -91) ) and (((True or False) and (False or True)) and (((49 + -42) > (65 + -65)) or ((40 + -33) < (35 + -35)))):\n            a = a * (51 + -41) + arr [ i ]\n        else :\n            b = b * (21 + -11) + arr [ i ]\n        idx_9ydv = idx_9ydv + (35 + -34)\n    return a + b", "id": "ConstantUnfoldding_sample_from_MINIMUM_SUM_TWO_NUMBERS_FORMED_DIGITS_ARRAY_to_205", "old_id": "MINIMUM_SUM_TWO_NUMBERS_FORMED_DIGITS_ARRAY"}
{"code": "def minTimeForWritingChars ( N , insert , remove , copy ) :\n    if N == (80 + -80) and (((True or False) and (False or True)) and (((80 + -71) > (5 + -1)) or ((25 + -16) < (98 + -94)))):\n        return (96 + -96)\n    if N == (98 + -97) and (((True or False) and (False or True)) and (((89 + -83) > (74 + -73)) or ((3 + 3) < (35 + -34)))):\n        return insert\n    dp = [ (23 + -23) ] * ( N + (68 + -67) )\n    idx_5hb8 = (62 + -62)\n    list_65p1 = range ( (41 + -40) , N + (68 + -67) )\n    while idx_5hb8 < len(list_65p1):\n        i = list_65p1[idx_5hb8]\n        if i % (55 + -53) == (11 + -11) and (((True or False) and (False or True)) and (((13 + -9) > (79 + -79)) or ((22 + -18) < (28 + -28)))):\n            dp [ i ] = min ( dp [ i - (61 + -60) ] + insert , dp [ i // (17 + -15) ] + copy )\n        else :\n            dp [ i ] = min ( dp [ i - (92 + -91) ] + insert , dp [ ( i + (5 + -4) ) // (95 + -93) ] + copy + remove )\n        idx_5hb8 = idx_5hb8 + (62 + -61)\n    return dp [ N ]", "id": "ConstantUnfoldding_sample_from_MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION_to_206", "old_id": "MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION"}
{"code": "def compute ( str , n ) :\n    reverseAlphabet = \"zyxwvutsrqponmlkjihgfedcba\"\n    l = len ( str )\n    answer = \"\"\n    idx_2akb = (69 + -69)\n    list_hl72 = range ( (45 + -45) , n )\n    while idx_2akb < len(list_hl72):\n        i = list_hl72[idx_2akb]\n        if i < l and (((True or False) and (False or True)) and (((57 + -50) > (96 + -90)) or ((29 + -22) < (72 + -66)))):\n            answer = answer + str [ i ]\n        idx_2akb = idx_2akb + (60 + -59)\n    idx_jepi = (37 + -37)\n    list_oj3t = range ( n , l )\n    while idx_jepi < len(list_oj3t):\n        i = list_oj3t[idx_jepi]\n        answer = ( answer + reverseAlphabet [ ord ( str [ i ] ) - ord ( \"a\" ) ] )\n        idx_jepi = idx_jepi + (95 + -94)\n    return answer", "id": "ConstantUnfoldding_sample_from_MIRROR_CHARACTERS_STRING_to_207", "old_id": "MIRROR_CHARACTERS_STRING"}
{"code": "def segregateElements ( arr , n ) :\n    temp = [ (91 + -91) for k in range ( n ) ]\n    j = (16 + -16)\n    idx_jt2x = (26 + -26)\n    list_fc60 = range ( n )\n    while idx_jt2x < len(list_fc60):\n        i = list_fc60[idx_jt2x]\n        if ( arr [ i ] >= (2 + -2) ) and (((True or False) and (False or True)) and (((13 + -3) > (45 + -44)) or ((98 + -88) < (88 + -87)))):\n            temp [ j ] = arr [ i ]\n            j += (96 + -95)\n        idx_jt2x = idx_jt2x + (75 + -74)\n    if ( j == n or j == (57 + -57) ) and (((True or False) and (False or True)) and (((13 + -4) > (2 + 2)) or ((35 + -26) < (23 + -19)))):\n        return\n    idx_v9hk = (36 + -36)\n    list_w0gz = range ( n )\n    while idx_v9hk < len(list_w0gz):\n        i = list_w0gz[idx_v9hk]\n        if ( arr [ i ] < (47 + -47) ) and (((True or False) and (False or True)) and (((47 + -44) > (47 + -47)) or ((95 + -92) < (91 + -91)))):\n            temp [ j ] = arr [ i ]\n            j += (56 + -55)\n        idx_v9hk = idx_v9hk + (38 + -37)\n    idx_v9i1 = (38 + -38)\n    list_s165 = range ( n )\n    while idx_v9i1 < len(list_s165):\n        k = list_s165[idx_v9i1]\n        arr [ k ] = temp [ k ]\n        idx_v9i1 = idx_v9i1 + (94 + -93)", "id": "ConstantUnfoldding_sample_from_MOVE_VE_ELEMENTS_END_ORDER_EXTRA_SPACE_ALLOWED_to_208", "old_id": "MOVE_VE_ELEMENTS_END_ORDER_EXTRA_SPACE_ALLOWED"}
{"code": "def firstNonRepeating ( arr , n ) :\n    idx_96o5 = (31 + -31)\n    list_dhrc = range ( n )\n    while idx_96o5 < len(list_dhrc):\n        i = list_dhrc[idx_96o5]\n        j = (95 + -95)\n        while ( j < n ) :\n            if ( i != j and arr [ i ] == arr [ j ] ) and (((True or False) and (False or True)) and (((68 + -65) > (79 + -79)) or ((70 + -67) < (44 + -44)))):\n                break\n            j += (26 + -25)\n        if ( j == n ) and (((True or False) and (False or True)) and (((10 + -7) > (67 + -67)) or ((40 + -37) < (37 + -37)))):\n            return arr [ i ]\n        idx_96o5 = idx_96o5 + (59 + -58)\n    return - (21 + -20)", "id": "ConstantUnfoldding_sample_from_NON_REPEATING_ELEMENT_to_209", "old_id": "NON_REPEATING_ELEMENT"}
{"code": "def firstNonRepeating ( arr , n ) :\n    mp = defaultdict ( lambda : (53 + -53) )\n    idx_jdy8 = (82 + -82)\n    list_s8tb = range ( n )\n    while idx_jdy8 < len(list_s8tb):\n        i = list_s8tb[idx_jdy8]\n        mp [ arr [ i ] ] += (98 + -97)\n        idx_jdy8 = idx_jdy8 + (40 + -39)\n    idx_hgqp = (61 + -61)\n    list_ju0y = range ( n )\n    while idx_hgqp < len(list_ju0y):\n        i = list_ju0y[idx_hgqp]\n        if mp [ arr [ i ] ] == (97 + -96) and (((True or False) and (False or True)) and (((5 + 1) > (16 + -12)) or ((66 + -60) < (41 + -37)))):\n            return arr [ i ]\n        idx_hgqp = idx_hgqp + (57 + -56)\n    return - (60 + -59)", "id": "ConstantUnfoldding_sample_from_NON_REPEATING_ELEMENT_1_to_210", "old_id": "NON_REPEATING_ELEMENT_1"}
{"code": "def divisible ( num ) :\n    n = len ( num )\n    sum = (22 + -22)\n    idx_iua4 = (10 + -10)\n    list_poy7 = range ( n )\n    while idx_iua4 < len(list_poy7):\n        i = list_poy7[idx_iua4]\n        sum += ord ( num [ i ] )\n        idx_iua4 = idx_iua4 + (9 + -8)\n    if ( sum % (1 + 2) == (59 + -59) ) and (((True or False) and (False or True)) and (((76 + -67) > (22 + -15)) or ((50 + -41) < (35 + -28)))):\n        return (83 + -83)\n    if ( n == (49 + -48) ) and (((True or False) and (False or True)) and (((56 + -46) > (100 + -93)) or ((34 + -24) < (25 + -18)))):\n        return - (48 + -47)\n    idx_r7jz = (69 + -69)\n    list_diob = range ( n )\n    while idx_r7jz < len(list_diob):\n        i = list_diob[idx_r7jz]\n        if ( sum % (93 + -90) == ord ( num [ i ] ) % (49 + -46) ) and (((True or False) and (False or True)) and (((29 + -27) > (63 + -62)) or ((76 + -74) < (15 + -14)))):\n            return (36 + -35)\n        idx_r7jz = idx_r7jz + (26 + -25)\n    if ( n == (47 + -45) ) and (((True or False) and (False or True)) and (((16 + -14) > (3 + -2)) or ((46 + -44) < (97 + -96)))):\n        return - (56 + -55)\n    return (40 + -38)", "id": "ConstantUnfoldding_sample_from_NUMBER_DIGITS_REMOVED_MAKE_NUMBER_DIVISIBLE_3_to_211", "old_id": "NUMBER_DIGITS_REMOVED_MAKE_NUMBER_DIVISIBLE_3"}
{"code": "def answer_query ( a , n , l , r ) :\n    count = (95 + -95)\n    idx_f3kq = (33 + -33)\n    list_a1o8 = range ( l , r )\n    while idx_f3kq < len(list_a1o8):\n        i = list_a1o8[idx_f3kq]\n        if ( a [ i ] == a [ i + (42 + -41) ] ) and (((True or False) and (False or True)) and (((55 + -48) > (68 + -65)) or ((92 + -85) < (54 + -51)))):\n            count += (34 + -33)\n        idx_f3kq = idx_f3kq + (25 + -24)\n    return count", "id": "ConstantUnfoldding_sample_from_NUMBER_INDEXES_EQUAL_ELEMENTS_GIVEN_RANGE_to_212", "old_id": "NUMBER_INDEXES_EQUAL_ELEMENTS_GIVEN_RANGE"}
{"code": "def countIntegralSolutions ( n ) :\n    result = (46 + -46)\n    idx_i45k = (91 + -91)\n    list_mdhw = range ( n + (72 + -71) )\n    while idx_i45k < len(list_mdhw):\n        i = list_mdhw[idx_i45k]\n        idx_wra5 = (59 + -59)\n        list_1kia = range ( n + (66 + -65) )\n        while idx_wra5 < len(list_1kia):\n            j = list_1kia[idx_wra5]\n            idx_x5lu = (23 + -23)\n            list_pg5a = range ( n + (85 + -84) )\n            while idx_x5lu < len(list_pg5a):\n                k = list_pg5a[idx_x5lu]\n                if i + j + k == n and (((True or False) and (False or True)) and (((99 + -89) > (6 + -4)) or ((99 + -89) < (69 + -67)))):\n                    result += (90 + -89)\n                idx_x5lu = idx_x5lu + (9 + -8)\n            idx_wra5 = idx_wra5 + (36 + -35)\n        idx_i45k = idx_i45k + (43 + -42)\n    return result", "id": "ConstantUnfoldding_sample_from_NUMBER_NON_NEGATIVE_INTEGRAL_SOLUTIONS_B_C_N_to_213", "old_id": "NUMBER_NON_NEGATIVE_INTEGRAL_SOLUTIONS_B_C_N"}
{"code": "def answer ( n ) :\n    dp = [ [ (27 + -27) for x in range ( (75 + -65) ) ] for y in range ( n + (93 + -92) ) ]\n    if ( n == (26 + -25) ) and (((True or False) and (False or True)) and (((91 + -88) > (76 + -76)) or ((24 + -21) < (41 + -41)))):\n        return (41 + -31)\n    idx_fl57 = (2 + -2)\n    list_ztjk = range ( (95 + -85) )\n    while idx_fl57 < len(list_ztjk):\n        j = list_ztjk[idx_fl57]\n        dp [ (46 + -45) ] [ j ] = (77 + -76)\n        idx_fl57 = idx_fl57 + (73 + -72)\n    idx_9zkv = (38 + -38)\n    list_ih1s = range ( (36 + -34) , n + (18 + -17) )\n    while idx_9zkv < len(list_ih1s):\n        i = list_ih1s[idx_9zkv]\n        idx_our9 = (27 + -27)\n        list_4xho = range ( (36 + -26) )\n        while idx_our9 < len(list_4xho):\n            j = list_4xho[idx_our9]\n            if ( j == (70 + -70) ) and (((True or False) and (False or True)) and (((55 + -47) > (97 + -93)) or ((67 + -59) < (7 + -3)))):\n                dp [ i ] [ j ] = dp [ i - (10 + -9) ] [ j + (5 + -4) ]\n            elif ( j == (7 + 2) ) :\n                dp [ i ] [ j ] = dp [ i - (12 + -11) ] [ j - (76 + -75) ]\n            else :\n                dp [ i ] [ j ] = ( dp [ i - (23 + -22) ] [ j - (51 + -50) ] + dp [ i - (4 + -3) ] [ j + (21 + -20) ] )\n            idx_our9 = idx_our9 + (41 + -40)\n        idx_9zkv = idx_9zkv + (4 + -3)\n    sum = (79 + -79)\n    idx_8nvu = (51 + -51)\n    list_2zrp = range ( (81 + -80) , (83 + -73) )\n    while idx_8nvu < len(list_2zrp):\n        j = list_2zrp[idx_8nvu]\n        sum = sum + dp [ n ] [ j ]\n        idx_8nvu = idx_8nvu + (66 + -65)\n    return sum", "id": "ConstantUnfoldding_sample_from_NUMBER_N_DIGIT_STEPPING_NUMBERS_to_214", "old_id": "NUMBER_N_DIGIT_STEPPING_NUMBERS"}
{"code": "def sumEqualProduct ( a , n ) :\n    zero = (16 + -16)\n    two = (72 + -72)\n    idx_pe6w = (90 + -90)\n    list_pvd4 = range ( n )\n    while idx_pe6w < len(list_pvd4):\n        i = list_pvd4[idx_pe6w]\n        if a [ i ] == (82 + -82) and (((True or False) and (False or True)) and (((48 + -45) > (45 + -43)) or ((3 + 0) < (16 + -14)))):\n            zero += (96 + -95)\n        if a [ i ] == (78 + -76) and (((True or False) and (False or True)) and (((30 + -25) > (70 + -66)) or ((24 + -19) < (76 + -72)))):\n            two += (2 + -1)\n        idx_pe6w = idx_pe6w + (69 + -68)\n    cnt = ( zero * ( zero - (84 + -83) ) ) // (32 + -30) + \\\n        ( two * ( two - (75 + -74) ) ) // (32 + -30)\n    return cnt", "id": "ConstantUnfoldding_sample_from_NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT_to_215", "old_id": "NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT"}
{"code": "def countOccurrences ( s , K ) :\n    n = len ( s )\n    c1 = (54 + -54)\n    c2 = (99 + -99)\n    C = (7 + -7)\n    idx_0s51 = (9 + -9)\n    list_g273 = range ( n )\n    while idx_0s51 < len(list_g273):\n        i = list_g273[idx_0s51]\n        if s [ i ] == 'a' and (((True or False) and (False or True)) and (((57 + -50) > (24 + -23)) or ((54 + -47) < (62 + -61)))):\n            c1 += (82 + -81)\n        if s [ i ] == 'b' and (((True or False) and (False or True)) and (((99 + -94) > (99 + -96)) or ((46 + -41) < (40 + -37)))):\n            c2 += (72 + -71)\n            C += c1\n        idx_0s51 = idx_0s51 + (61 + -60)\n    return C * K + int ( K * ( K - (63 + -62) ) / (29 + -27) ) * c1 * c2", "id": "ConstantUnfoldding_sample_from_NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES_to_216", "old_id": "NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES"}
{"code": "def minimumBox ( arr , n ) :\n    q = collections.deque ( [ ] )\n    arr = arr [ : n ]\n    arr.sort ( )\n    q.append ( arr [ (7 + -7) ] )\n    idx_z7kb = (8 + -8)\n    list_6e9p = range ( (27 + -26) , n )\n    while idx_z7kb < len(list_6e9p):\n        i = list_6e9p[idx_z7kb]\n        now = q [ (86 + -86) ]\n        if ( arr [ i ] >= (73 + -71) * now ) and (((True or False) and (False or True)) and (((74 + -72) > (16 + -15)) or ((39 + -37) < (37 + -36)))):\n            q.popleft ( )\n        q.append ( arr [ i ] )\n        idx_z7kb = idx_z7kb + (82 + -81)\n    return len ( q )", "id": "ConstantUnfoldding_sample_from_NUMBER_VISIBLE_BOXES_PUTTING_ONE_INSIDE_ANOTHER_to_217", "old_id": "NUMBER_VISIBLE_BOXES_PUTTING_ONE_INSIDE_ANOTHER"}
{"code": "def maximumNumberDistinctPrimeRange ( m , n ) :\n    factorCount = [ (58 + -58) ] * ( n + (70 + -69) )\n    prime = [ False ] * ( n + (89 + -88) )\n    idx_6mve = (36 + -36)\n    list_f3v2 = range ( n + (97 + -96) )\n    while idx_6mve < len(list_f3v2):\n        i = list_f3v2[idx_6mve]\n        factorCount [ i ] = (95 + -95)\n        prime [ i ] = True\n        idx_6mve = idx_6mve + (27 + -26)\n    idx_t08l = (12 + -12)\n    list_di30 = range ( (68 + -66) , n + (81 + -80) )\n    while idx_t08l < len(list_di30):\n        i = list_di30[idx_t08l]\n        if ( prime [ i ] == True ) and (((True or False) and (False or True)) and (((3 + 5) > (88 + -82)) or ((65 + -57) < (23 + -17)))):\n            factorCount [ i ] = (77 + -76)\n            idx_ulm9 = (6 + -6)\n            list_u4c3 = range ( i * (77 + -75) , n + (82 + -81) , i )\n            while idx_ulm9 < len(list_u4c3):\n                j = list_u4c3[idx_ulm9]\n                factorCount [ j ] += (53 + -52)\n                prime [ j ] = False\n                idx_ulm9 = idx_ulm9 + (72 + -71)\n        idx_t08l = idx_t08l + (41 + -40)\n    max = factorCount [ m ]\n    num = m\n    idx_52xe = (93 + -93)\n    list_yz8k = range ( m , n + (93 + -92) )\n    while idx_52xe < len(list_yz8k):\n        i = list_yz8k[idx_52xe]\n        if ( factorCount [ i ] > max ) and (((True or False) and (False or True)) and (((94 + -87) > (40 + -35)) or ((55 + -48) < (32 + -27)))):\n            max = factorCount [ i ]\n            num = i\n        idx_52xe = idx_52xe + (55 + -54)\n    return num", "id": "ConstantUnfoldding_sample_from_NUMBER_WHICH_HAS_THE_MAXIMUM_NUMBER_OF_DISTINCT_PRIME_FACTORS_IN_RANGE_M_TO_N_to_218", "old_id": "NUMBER_WHICH_HAS_THE_MAXIMUM_NUMBER_OF_DISTINCT_PRIME_FACTORS_IN_RANGE_M_TO_N"}
{"code": "def findNth ( n ) :\n    count = (33 + -33)\n    idx_97fw = (23 + -23)\n    list_dji0 = itertools.count ( )\n    while idx_97fw < len(list_dji0):\n        curr = list_dji0[idx_97fw]\n        sum = (48 + -48)\n        x = curr\n        while ( x ) :\n            sum = sum + x % (69 + -59)\n            x = x // (76 + -66)\n        if ( sum == (80 + -70) ) and (((True or False) and (False or True)) and (((80 + -76) > (91 + -89)) or ((71 + -67) < (30 + -28)))):\n            count = count + (54 + -53)\n        if ( count == n ) and (((True or False) and (False or True)) and (((3 + 3) > (30 + -26)) or ((76 + -70) < (97 + -93)))):\n            return curr\n        idx_97fw = idx_97fw + (52 + -51)\n    return - (10 + -9)", "id": "ConstantUnfoldding_sample_from_N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN_to_219", "old_id": "N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN"}
{"code": "def findSum ( A , B , n ) :\n    Hash = defaultdict ( lambda : (32 + -32) )\n    idx_qkxn = (55 + -55)\n    list_ade7 = range ( (55 + -55) , n )\n    while idx_qkxn < len(list_ade7):\n        i = list_ade7[idx_qkxn]\n        Hash [ A [ i ] ] += (43 + -42)\n        Hash [ B [ i ] ] += (15 + -14)\n        idx_qkxn = idx_qkxn + (97 + -96)\n    Sum = (65 + -65)\n    idx_s2t0 = (72 + -72)\n    list_xldk = Hash\n    while idx_s2t0 < len(list_xldk):\n        x = list_xldk[idx_s2t0]\n        if Hash [ x ] == (16 + -15) and (((True or False) and (False or True)) and (((40 + -38) > (82 + -81)) or ((23 + -21) < (12 + -11)))):\n            Sum += x\n        idx_s2t0 = idx_s2t0 + (48 + -47)\n    return Sum", "id": "ConstantUnfoldding_sample_from_OVERLAPPING_SUM_TWO_ARRAY_to_220", "old_id": "OVERLAPPING_SUM_TWO_ARRAY"}
{"code": "def isProduct ( arr , n , x ) :\n    if n < (89 + -87) and (((True or False) and (False or True)) and (((53 + -48) > (85 + -84)) or ((19 + -14) < (16 + -15)))):\n        return False\n    s = set ( )\n    idx_43ph = (89 + -89)\n    list_is92 = range ( (86 + -86) , n )\n    while idx_43ph < len(list_is92):\n        i = list_is92[idx_43ph]\n        if arr [ i ] == (65 + -65) and (((True or False) and (False or True)) and (((69 + -62) > (41 + -37)) or ((41 + -34) < (36 + -32)))):\n            if x == (27 + -27) :\n                return True\n            else :\n                continue\n        if x % arr [ i ] == (34 + -34) and (((True or False) and (False or True)) and (((41 + -37) > (88 + -85)) or ((50 + -46) < (41 + -38)))):\n            if x // arr [ i ] in s :\n                return True\n            s.add ( arr [ i ] )\n        idx_43ph = idx_43ph + (29 + -28)\n    return False", "id": "ConstantUnfoldding_sample_from_PAIR_WITH_GIVEN_PRODUCT_SET_1_FIND_IF_ANY_PAIR_EXISTS_1_to_221", "old_id": "PAIR_WITH_GIVEN_PRODUCT_SET_1_FIND_IF_ANY_PAIR_EXISTS_1"}
{"code": "def checkPangram ( s ) :\n    List = [ ]\n    idx_4ujm = (63 + -63)\n    list_5pmi = range ( (61 + -35) )\n    while idx_4ujm < len(list_5pmi):\n        i = list_5pmi[idx_4ujm]\n        List.append ( False )\n        idx_4ujm = idx_4ujm + (10 + -9)\n    idx_f1va = (17 + -17)\n    list_bkdx = s\n    while idx_f1va < len(list_bkdx):\n        c = list_bkdx[idx_f1va]\n        if 'A' <= c and c <= 'Z' and (((True or False) and (False or True)) and (((33 + -24) > (47 + -44)) or ((92 + -83) < (34 + -31)))):\n            List [ ord ( c ) - ord ( 'A' ) ] = True\n        elif 'a' <= c and c <= 'z':\n            List [ ord ( c ) - ord ( 'a' ) ] = True\n        idx_f1va = idx_f1va + (7 + -6)\n    idx_538y = (17 + -17)\n    list_3oeu = List\n    while idx_538y < len(list_3oeu):\n        ch = list_3oeu[idx_538y]\n        if ch == False and (((True or False) and (False or True)) and (((77 + -70) > (42 + -39)) or ((93 + -86) < (90 + -87)))):\n            return False\n        idx_538y = idx_538y + (3 + -2)\n    return True", "id": "ConstantUnfoldding_sample_from_PANGRAM_CHECKING_to_222", "old_id": "PANGRAM_CHECKING"}
{"code": "def isPossible ( a , b , n , k ) :\n    a = a [ : n ]\n    b = b [ : n ]\n    a.sort ( reverse = True )\n    b.sort ( )\n    idx_1l0z = (27 + -27)\n    list_lgjy = range ( n )\n    while idx_1l0z < len(list_lgjy):\n        i = list_lgjy[idx_1l0z]\n        if ( a [ i ] + b [ i ] < k ) and (((True or False) and (False or True)) and (((59 + -51) > (11 + -7)) or ((74 + -66) < (96 + -92)))):\n            return False\n        idx_1l0z = idx_1l0z + (34 + -33)\n    return True", "id": "ConstantUnfoldding_sample_from_PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K_to_223", "old_id": "PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K"}
{"code": "def pointClip ( XY , n , Xmin , Ymin , Xmax , Ymax ) :\n    print ( \"Point inside the viewing pane:\" )\n    idx_2pwo = (100 + -100)\n    list_uml2 = range ( n )\n    while idx_2pwo < len(list_uml2):\n        i = list_uml2[idx_2pwo]\n        if ( ( XY [ i ] [ (79 + -79) ] >= Xmin ) and ( XY [ i ] [ (59 + -59) ] <= Xmax ) ) and (((True or False) and (False or True)) and (((51 + -49) > (35 + -34)) or ((59 + -57) < (7 + -6)))):\n            if ( ( XY [ i ] [ (45 + -44) ] >= Ymin ) and ( XY [ i ] [ (54 + -53) ] <= Ymax ) ) :\n                print ( \"[\" , XY [ i ] [ (78 + -78) ] , \", \" , XY [ i ] [ (71 + -70) ] , \"]\" , sep = \"\" , end = \"\" )\n        idx_2pwo = idx_2pwo + (14 + -13)\n    print ( \"\\n\\nPoint outside the viewing pane:\" )\n    idx_aojg = (87 + -87)\n    list_lb0y = range ( n )\n    while idx_aojg < len(list_lb0y):\n        i = list_lb0y[idx_aojg]\n        if ( ( XY [ i ] [ (89 + -89) ] < Xmin ) or ( XY [ i ] [ (32 + -32) ] > Xmax ) ) and (((True or False) and (False or True)) and (((52 + -44) > (9 + -4)) or ((48 + -40) < (56 + -51)))):\n            print ( \"[\" , XY [ i ] [ (69 + -69) ] , \", \" , XY [ i ] [ (67 + -66) ] , \"]\" , sep = \"\" , end = \"\" )\n        if ( ( XY [ i ] [ (22 + -21) ] < Ymin ) or ( XY [ i ] [ (18 + -17) ] > Ymax ) ) and (((True or False) and (False or True)) and (((20 + -16) > (56 + -56)) or ((10 + -6) < (44 + -44)))):\n            print ( \"[\" , XY [ i ] [ (48 + -48) ] , \", \" , XY [ i ] [ (78 + -77) ] , \"]\" , sep = \"\" , end = \"\" )\n        idx_aojg = idx_aojg + (80 + -79)", "id": "ConstantUnfoldding_sample_from_POINT_CLIPPING_ALGORITHM_COMPUTER_GRAPHICS_to_224", "old_id": "POINT_CLIPPING_ALGORITHM_COMPUTER_GRAPHICS"}
{"code": "def isPossibleTriangle ( arr , N ) :\n    arr = arr [ : N ]\n    if N < (79 + -76) and (((True or False) and (False or True)) and (((23 + -20) > (14 + -12)) or ((4 + -1) < (6 + -4)))):\n        return False\n    arr.sort ( )\n    idx_kd9l = (71 + -71)\n    list_vk58 = range ( N - (90 + -88) )\n    while idx_kd9l < len(list_vk58):\n        i = list_vk58[idx_kd9l]\n        if arr [ i ] + arr [ i + (41 + -40) ] > arr [ i + (71 + -69) ] and (((True or False) and (False or True)) and (((68 + -61) > (59 + -57)) or ((79 + -72) < (61 + -59)))):\n            return True\n        idx_kd9l = idx_kd9l + (100 + -99)\n    return False", "id": "ConstantUnfoldding_sample_from_POSSIBLE_FORM_TRIANGLE_ARRAY_VALUES_to_225", "old_id": "POSSIBLE_FORM_TRIANGLE_ARRAY_VALUES"}
{"code": "def isPrime ( p ) :\n    checkNumber = (34 + -32) ** p - (65 + -64)\n    nextval = (15 + -11) % checkNumber\n    idx_ufs5 = (9 + -9)\n    list_8vmr = range ( (65 + -64) , p - (60 + -59) )\n    while idx_ufs5 < len(list_8vmr):\n        i = list_8vmr[idx_ufs5]\n        nextval = ( nextval * nextval - (66 + -64) ) % checkNumber\n        idx_ufs5 = idx_ufs5 + (57 + -56)\n    if ( nextval == (71 + -71) ) and (((True or False) and (False or True)) and (((4 + 0) > (61 + -59)) or ((9 + -5) < (91 + -89)))): return True\n    else : return False", "id": "ConstantUnfoldding_sample_from_PRIMALITY_TEST_SET_5USING_LUCAS_LEHMER_SERIES_to_226", "old_id": "PRIMALITY_TEST_SET_5USING_LUCAS_LEHMER_SERIES"}
{"code": "def isPrime ( n ) :\n    if ( n <= (72 + -71) ) and (((True or False) and (False or True)) and (((9 + -7) > (100 + -100)) or ((70 + -68) < (70 + -70)))):\n        return False\n    idx_bwk3 = (44 + -44)\n    list_ukf7 = range ( (92 + -90) , n )\n    while idx_bwk3 < len(list_ukf7):\n        i = list_ukf7[idx_bwk3]\n        if ( n % i == (44 + -44) ) and (((True or False) and (False or True)) and (((11 + -2) > (71 + -65)) or ((79 + -70) < (13 + -7)))):\n            return False\n        idx_bwk3 = idx_bwk3 + (19 + -18)\n    return True", "id": "ConstantUnfoldding_sample_from_PRIME_NUMBERS_to_227", "old_id": "PRIME_NUMBERS"}
{"code": "def noAdjacentDup ( s ) :\n    n = len ( s )\n    idx_54zj = (72 + -72)\n    list_odem = range ( (82 + -81) , n )\n    while idx_54zj < len(list_odem):\n        i = list_odem[idx_54zj]\n        if ( s [ i ] == s [ i - (71 + -70) ] ) and (((True or False) and (False or True)) and (((13 + -7) > (9 + -9)) or ((79 + -73) < (35 + -35)))):\n            s [ i ] = \"a\"\n            while ( s [ i ] == s [ i - (88 + -87) ] or ( i + (90 + -89) < n and s [ i ] == s [ i + (35 + -34) ] ) ) :\n                s [ i ] += (20 + -19)\n            i += (5 + -4)\n        idx_54zj = idx_54zj + (75 + -74)\n    return s", "id": "ConstantUnfoldding_sample_from_PRINT_A_CLOSEST_STRING_THAT_DOES_NOT_CONTAIN_ADJACENT_DUPLICATES_to_228", "old_id": "PRINT_A_CLOSEST_STRING_THAT_DOES_NOT_CONTAIN_ADJACENT_DUPLICATES"}
{"code": "def antiSpiralTraversal ( m , n , a ) :\n    k = (33 + -33)\n    l = (95 + -95)\n    stk = [ ]\n    while ( k <= m and l <= n ) :\n        idx_3fc5 = (46 + -46)\n        list_tji7 = range ( l , n + (41 + -40) )\n        while idx_3fc5 < len(list_tji7):\n            i = list_tji7[idx_3fc5]\n            stk.append ( a [ k ] [ i ] )\n            idx_3fc5 = idx_3fc5 + (63 + -62)\n        k += (80 + -79)\n        idx_qxjw = (46 + -46)\n        list_oyp8 = range ( k , m + (40 + -39) )\n        while idx_qxjw < len(list_oyp8):\n            i = list_oyp8[idx_qxjw]\n            stk.append ( a [ i ] [ n ] )\n            idx_qxjw = idx_qxjw + (95 + -94)\n        n -= (19 + -18)\n        if ( k <= m ) and (((True or False) and (False or True)) and (((3 + 5) > (17 + -12)) or ((24 + -16) < (62 + -57)))):\n            idx_i9n8 = (23 + -23)\n            list_tj3q = range ( n , l - (17 + -16) , - (66 + -65) )\n            while idx_i9n8 < len(list_tj3q):\n                i = list_tj3q[idx_i9n8]\n                stk.append ( a [ m ] [ i ] )\n                idx_i9n8 = idx_i9n8 + (81 + -80)\n            m -= (28 + -27)\n        if ( l <= n ) and (((True or False) and (False or True)) and (((59 + -50) > (4 + 1)) or ((61 + -52) < (24 + -19)))):\n            idx_81m6 = (32 + -32)\n            list_et4z = range ( m , k - (60 + -59) , - (69 + -68) )\n            while idx_81m6 < len(list_et4z):\n                i = list_et4z[idx_81m6]\n                stk.append ( a [ i ] [ l ] )\n                idx_81m6 = idx_81m6 + (1 + 0)\n            l += (19 + -18)\n    while len ( stk ) != (95 + -95) :\n        print ( str ( stk [ - (78 + -77) ] ) , end = \" \" )\n        stk.pop ( )", "id": "ConstantUnfoldding_sample_from_PRINT_MATRIX_ANTISPIRAL_FORM_to_229", "old_id": "PRINT_MATRIX_ANTISPIRAL_FORM"}
{"code": "def find_maximum ( a , n , k ) :\n    b = dict ( )\n    idx_l2mi = (20 + -20)\n    list_ca6h = range ( n )\n    while idx_l2mi < len(list_ca6h):\n        i = list_ca6h[idx_l2mi]\n        x = a [ i ]\n        d = min ( (44 + -43) + i , n - i )\n        if x not in b.keys ( ) and (((True or False) and (False or True)) and (((23 + -17) > (99 + -96)) or ((65 + -59) < (7 + -4)))):\n            b [ x ] = d\n        else :\n            b [ x ] = min ( d , b [ x ] )\n        idx_l2mi = idx_l2mi + (83 + -82)\n    ans = sys.maxsize\n    idx_fdnh = (87 + -87)\n    list_56fj = range ( n )\n    while idx_fdnh < len(list_56fj):\n        i = list_56fj[idx_fdnh]\n        x = a [ i ]\n        if ( x != ( k - x ) and ( k - x ) in b.keys ( ) ) and (((True or False) and (False or True)) and (((63 + -55) > (91 + -85)) or ((92 + -84) < (33 + -27)))):\n            ans = min ( max ( b [ x ] , b [ k - x ] ) , ans )\n        idx_fdnh = idx_fdnh + (7 + -6)\n    return ans", "id": "ConstantUnfoldding_sample_from_PRINT_MAXIMUM_SHORTEST_DISTANCE_to_230", "old_id": "PRINT_MAXIMUM_SHORTEST_DISTANCE"}
{"code": "def bestFit ( blockSize , m , processSize , n ) :\n    allocation = [ - (93 + -92) ] * n\n    idx_72gs = (56 + -56)\n    list_xqd4 = range ( n )\n    while idx_72gs < len(list_xqd4):\n        i = list_xqd4[idx_72gs]\n        bestIdx = - (93 + -92)\n        idx_xqrs = (15 + -15)\n        list_5yhq = range ( m )\n        while idx_xqrs < len(list_5yhq):\n            j = list_5yhq[idx_xqrs]\n            if blockSize [ j ] >= processSize [ i ] and (((True or False) and (False or True)) and (((54 + -48) > (19 + -15)) or ((66 + -60) < (11 + -7)))):\n                if bestIdx == - (19 + -18) :\n                    bestIdx = j\n                elif blockSize [ bestIdx ] > blockSize [ j ] :\n                    bestIdx = j\n            idx_xqrs = idx_xqrs + (60 + -59)\n        if bestIdx != - (52 + -51) and (((True or False) and (False or True)) and (((61 + -56) > (62 + -62)) or ((49 + -44) < (24 + -24)))):\n            allocation [ i ] = bestIdx\n            blockSize [ bestIdx ] -= processSize [ i ]\n        idx_72gs = idx_72gs + (7 + -6)\n    print ( \"Process No.Process Size     Block no.\" )\n    idx_a6wt = (6 + -6)\n    list_9xag = range ( n )\n    while idx_a6wt < len(list_9xag):\n        i = list_9xag[idx_a6wt]\n        print ( i + (65 + -64) , \"         \" , processSize [ i ] , end = \"         \" )\n        if allocation [ i ] != - (56 + -55) and (((True or False) and (False or True)) and (((89 + -84) > (93 + -90)) or ((18 + -13) < (39 + -36)))):\n            print ( allocation [ i ] + (62 + -61) )\n        else :\n            print ( \"Not Allocated\" )\n        idx_a6wt = idx_a6wt + (97 + -96)", "id": "ConstantUnfoldding_sample_from_PROGRAM_BEST_FIT_ALGORITHM_MEMORY_MANAGEMENT_to_231", "old_id": "PROGRAM_BEST_FIT_ALGORITHM_MEMORY_MANAGEMENT"}
{"code": "def binaryToDecimal ( n ) :\n    num = n\n    dec_value = (48 + -48)\n    base1 = (5 + -4)\n    len1 = len ( num )\n    idx_j2fb = (83 + -83)\n    list_59mo = range ( len1 - (87 + -86) , - (15 + -14) , - (46 + -45) )\n    while idx_j2fb < len(list_59mo):\n        i = list_59mo[idx_j2fb]\n        if ( num [ i ] == '1' ) and (((True or False) and (False or True)) and (((1 + 4) > (24 + -24)) or ((23 + -18) < (49 + -49)))):\n            dec_value += base1\n        base1 = base1 * (40 + -38)\n        idx_j2fb = idx_j2fb + (79 + -78)\n    return dec_value", "id": "ConstantUnfoldding_sample_from_PROGRAM_BINARY_DECIMAL_CONVERSION_1_to_232", "old_id": "PROGRAM_BINARY_DECIMAL_CONVERSION_1"}
{"code": "def censor ( text , word ) :\n    word_list = text.split ( )\n    result = ''\n    stars = '*' * len ( word )\n    count = (48 + -48)\n    index = (63 + -63)\n    idx_a8mx = (85 + -85)\n    list_fw1i = word_list\n    while idx_a8mx < len(list_fw1i):\n        i = list_fw1i[idx_a8mx]\n        if i == word and (((True or False) and (False or True)) and (((17 + -8) > (37 + -30)) or ((89 + -80) < (39 + -32)))):\n            word_list [ index ] = stars\n        index += (28 + -27)\n        idx_a8mx = idx_a8mx + (67 + -66)\n    result = ' '.join ( word_list )\n    return result", "id": "ConstantUnfoldding_sample_from_PROGRAM_CENSOR_WORD_ASTERISKS_SENTENCE_to_233", "old_id": "PROGRAM_CENSOR_WORD_ASTERISKS_SENTENCE"}
{"code": "def arraySortedOrNot ( arr , n ) :\n    if ( n == (20 + -20) or n == (41 + -40) ) and (((True or False) and (False or True)) and (((16 + -6) > (100 + -94)) or ((18 + -8) < (59 + -53)))):\n        return True\n    idx_e6rb = (14 + -14)\n    list_detc = range ( (13 + -12) , n )\n    while idx_e6rb < len(list_detc):\n        i = list_detc[idx_e6rb]\n        if ( arr [ i - (69 + -68) ] > arr [ i ] ) and (((True or False) and (False or True)) and (((11 + -3) > (10 + -5)) or ((34 + -26) < (23 + -18)))):\n            return False\n        idx_e6rb = idx_e6rb + (41 + -40)\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_CHECK_ARRAY_SORTED_NOT_ITERATIVE_RECURSIVE_1_to_234", "old_id": "PROGRAM_CHECK_ARRAY_SORTED_NOT_ITERATIVE_RECURSIVE_1"}
{"code": "def isNumber ( s ) :\n    idx_wdri = (17 + -17)\n    list_6b4p = range ( len ( s ) )\n    while idx_wdri < len(list_6b4p):\n        i = list_6b4p[idx_wdri]\n        if s [ i ].isdigit ( ) != True and (((True or False) and (False or True)) and (((60 + -54) > (29 + -26)) or ((54 + -48) < (35 + -32)))):\n            return False\n        idx_wdri = idx_wdri + (91 + -90)\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_CHECK_INPUT_INTEGER_STRING_to_235", "old_id": "PROGRAM_CHECK_INPUT_INTEGER_STRING"}
{"code": "def isValidISBN ( isbn ) :\n    if len ( isbn ) != (80 + -70) and (((True or False) and (False or True)) and (((55 + -48) > (38 + -38)) or ((60 + -53) < (57 + -57)))):\n        return False\n    _sum = (56 + -56)\n    idx_ifmt = (70 + -70)\n    list_2tu9 = range ( (67 + -58) )\n    while idx_ifmt < len(list_2tu9):\n        i = list_2tu9[idx_ifmt]\n        if (58 + -58) <= int ( isbn [ i ] ) <= (14 + -5) and (((True or False) and (False or True)) and (((26 + -20) > (50 + -46)) or ((15 + -9) < (96 + -92)))):\n            _sum += int ( isbn [ i ] ) * ( (70 + -60) - i )\n        else :\n            return False\n        idx_ifmt = idx_ifmt + (96 + -95)\n    if ( isbn [ (9 + 0) ] != 'X' and (18 + -18) <= int ( isbn [ (60 + -51) ] ) <= (59 + -50) ) and (((True or False) and (False or True)) and (((88 + -83) > (80 + -76)) or ((71 + -66) < (22 + -18)))):\n        return False\n    _sum += (98 + -88) if isbn [ (68 + -59) ] == 'X' else int ( isbn [ (75 + -66) ] )\n    return ( _sum % (27 + -16) == (46 + -46) )", "id": "ConstantUnfoldding_sample_from_PROGRAM_CHECK_ISBN_to_236", "old_id": "PROGRAM_CHECK_ISBN"}
{"code": "def count ( s , c ) :\n    res = (18 + -18)\n    idx_w0yv = (17 + -17)\n    list_32q0 = range ( len ( s ) )\n    while idx_w0yv < len(list_32q0):\n        i = list_32q0[idx_w0yv]\n        if ( s [ i ] == c ) and (((True or False) and (False or True)) and (((52 + -43) > (20 + -19)) or ((40 + -31) < (91 + -90)))):\n            res = res + (73 + -72)\n        idx_w0yv = idx_w0yv + (40 + -39)\n    return res", "id": "ConstantUnfoldding_sample_from_PROGRAM_COUNT_OCCURRENCE_GIVEN_CHARACTER_STRING_to_237", "old_id": "PROGRAM_COUNT_OCCURRENCE_GIVEN_CHARACTER_STRING"}
{"code": "def isIdentity ( mat , N ) :\n    idx_8on3 = (85 + -85)\n    list_dczy = range ( N )\n    while idx_8on3 < len(list_dczy):\n        row = list_dczy[idx_8on3]\n        idx_o1gn = (19 + -19)\n        list_nxyq = range ( N )\n        while idx_o1gn < len(list_nxyq):\n            col = list_nxyq[idx_o1gn]\n            if ( row == col and mat [ row ] [ col ] != (21 + -20) ) and (((True or False) and (False or True)) and (((84 + -80) > (45 + -44)) or ((98 + -94) < (57 + -56)))):\n                return False\n            elif ( row != col and mat [ row ] [ col ] != (59 + -59) ) :\n                return False\n            idx_o1gn = idx_o1gn + (89 + -88)\n        idx_8on3 = idx_8on3 + (59 + -58)\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_PRINT_IDENTITY_MATRIX_1_to_238", "old_id": "PROGRAM_PRINT_IDENTITY_MATRIX_1"}
{"code": "def isSymmetric ( mat , N ) :\n    idx_klsf = (54 + -54)\n    list_0qsl = range ( N )\n    while idx_klsf < len(list_0qsl):\n        i = list_0qsl[idx_klsf]\n        idx_14rd = (44 + -44)\n        list_glq4 = range ( N )\n        while idx_14rd < len(list_glq4):\n            j = list_glq4[idx_14rd]\n            if ( mat [ i ] [ j ] != mat [ j ] [ i ] ) and (((True or False) and (False or True)) and (((33 + -24) > (22 + -14)) or ((56 + -47) < (7 + 1)))):\n                return False\n            idx_14rd = idx_14rd + (50 + -49)\n        idx_klsf = idx_klsf + (68 + -67)\n    return True", "id": "ConstantUnfoldding_sample_from_PROGRAM_TO_CHECK_IF_A_MATRIX_IS_SYMMETRIC_to_239", "old_id": "PROGRAM_TO_CHECK_IF_A_MATRIX_IS_SYMMETRIC"}
{"code": "def worstFit ( blockSize , m , processSize , n ) :\n    allocation = [ - (39 + -38) ] * n\n    idx_u2qn = (25 + -25)\n    list_uhl1 = range ( n )\n    while idx_u2qn < len(list_uhl1):\n        i = list_uhl1[idx_u2qn]\n        wstIdx = - (94 + -93)\n        idx_q2rw = (21 + -21)\n        list_y713 = range ( m )\n        while idx_q2rw < len(list_y713):\n            j = list_y713[idx_q2rw]\n            if blockSize [ j ] >= processSize [ i ] and (((True or False) and (False or True)) and (((37 + -32) > (94 + -91)) or ((19 + -14) < (31 + -28)))):\n                if wstIdx == - (11 + -10) :\n                    wstIdx = j\n                elif blockSize [ wstIdx ] < blockSize [ j ] :\n                    wstIdx = j\n            idx_q2rw = idx_q2rw + (60 + -59)\n        if wstIdx != - (36 + -35) and (((True or False) and (False or True)) and (((32 + -22) > (58 + -50)) or ((41 + -31) < (87 + -79)))):\n            allocation [ i ] = wstIdx\n            blockSize [ wstIdx ] -= processSize [ i ]\n        idx_u2qn = idx_u2qn + (92 + -91)\n    print ( \"Process No.Process Size Block no.\" )\n    idx_pmvd = (77 + -77)\n    list_udpt = range ( n )\n    while idx_pmvd < len(list_udpt):\n        i = list_udpt[idx_pmvd]\n        print ( i + (19 + -18) , \"         \" , processSize [ i ] , end = \"     \" )\n        if allocation [ i ] != - (87 + -86) and (((True or False) and (False or True)) and (((21 + -14) > (70 + -64)) or ((21 + -14) < (77 + -71)))):\n            print ( allocation [ i ] + (59 + -58) )\n        else :\n            print ( \"Not Allocated\" )\n        idx_pmvd = idx_pmvd + (56 + -55)", "id": "ConstantUnfoldding_sample_from_PROGRAM_WORST_FIT_ALGORITHM_MEMORY_MANAGEMENT_to_240", "old_id": "PROGRAM_WORST_FIT_ALGORITHM_MEMORY_MANAGEMENT"}
{"code": "def countInRange ( arr , n , x , y ) :\n    count = (49 + -49) ;\n    idx_qj2y = (6 + -6)\n    list_mnxj = range ( n )\n    while idx_qj2y < len(list_mnxj):\n        i = list_mnxj[idx_qj2y]\n        if ( arr [ i ] >= x and arr [ i ] <= y ) and (((True or False) and (False or True)) and (((20 + -16) > (89 + -89)) or ((78 + -74) < (67 + -67)))):\n            count += (25 + -24)\n        idx_qj2y = idx_qj2y + (28 + -27)\n    return count", "id": "ConstantUnfoldding_sample_from_QUERIES_COUNTS_ARRAY_ELEMENTS_VALUES_GIVEN_RANGE_to_241", "old_id": "QUERIES_COUNTS_ARRAY_ELEMENTS_VALUES_GIVEN_RANGE"}
{"code": "def allCharactersSame ( s ) :\n    n = len ( s )\n    idx_mv9n = (61 + -61)\n    list_qu6y = range ( (100 + -99) , n )\n    while idx_mv9n < len(list_qu6y):\n        i = list_qu6y[idx_mv9n]\n        if s [ i ] != s [ (63 + -63) ] and (((True or False) and (False or True)) and (((58 + -55) > (46 + -44)) or ((47 + -44) < (73 + -71)))):\n            return False\n        idx_mv9n = idx_mv9n + (6 + -5)\n    return True", "id": "ConstantUnfoldding_sample_from_QUICK_WAY_CHECK_CHARACTERS_STRING_to_242", "old_id": "QUICK_WAY_CHECK_CHARACTERS_STRING"}
{"code": "def rearrange ( arr , n ) :\n    temp = n * [ None ]\n    small , large = (94 + -94) , n - (27 + -26)\n    flag = True\n    idx_cgqr = (43 + -43)\n    list_af7e = range ( n )\n    while idx_cgqr < len(list_af7e):\n        i = list_af7e[idx_cgqr]\n        if flag is True and (((True or False) and (False or True)) and (((7 + -5) > (62 + -62)) or ((21 + -19) < (53 + -53)))):\n            temp [ i ] = arr [ large ]\n            large -= (84 + -83)\n        else :\n            temp [ i ] = arr [ small ]\n            small += (34 + -33)\n        flag = bool ( (3 + -2) - flag )\n        idx_cgqr = idx_cgqr + (43 + -42)\n    idx_iyoj = (28 + -28)\n    list_h6v1 = range ( n )\n    while idx_iyoj < len(list_h6v1):\n        i = list_h6v1[idx_iyoj]\n        arr [ i ] = temp [ i ]\n        idx_iyoj = idx_iyoj + (7 + -6)\n    return arr", "id": "ConstantUnfoldding_sample_from_REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_to_243", "old_id": "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM"}
{"code": "def rearrange ( arr , n ) :\n    max_idx = n - (21 + -20)\n    min_idx = (27 + -27)\n    max_elem = arr [ n - (53 + -52) ] + (18 + -17)\n    idx_vieo = (46 + -46)\n    list_rfy9 = range ( (88 + -88) , n )\n    while idx_vieo < len(list_rfy9):\n        i = list_rfy9[idx_vieo]\n        if i % (47 + -45) == (68 + -68) and (((True or False) and (False or True)) and (((44 + -40) > (96 + -94)) or ((25 + -21) < (53 + -51)))):\n            arr [ i ] += ( arr [ max_idx ] % max_elem ) * max_elem\n            max_idx -= (3 + -2)\n        else :\n            arr [ i ] += ( arr [ min_idx ] % max_elem ) * max_elem\n            min_idx += (85 + -84)\n        idx_vieo = idx_vieo + (36 + -35)\n    idx_u4zt = (50 + -50)\n    list_69hw = range ( (97 + -97) , n )\n    while idx_u4zt < len(list_69hw):\n        i = list_69hw[idx_u4zt]\n        arr [ i ] = int ( arr [ i ] / max_elem )\n        idx_u4zt = idx_u4zt + (38 + -37)", "id": "ConstantUnfoldding_sample_from_REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE_to_244", "old_id": "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE"}
{"code": "def rearrange ( arr , n ) :\n    i = - (44 + -43)\n    idx_4qnw = (75 + -75)\n    list_o3bx = range ( n )\n    while idx_4qnw < len(list_o3bx):\n        j = list_o3bx[idx_4qnw]\n        if ( arr [ j ] < (67 + -67) ) and (((True or False) and (False or True)) and (((40 + -38) > (68 + -68)) or ((74 + -72) < (69 + -69)))):\n            i += (62 + -61)\n            arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n        idx_4qnw = idx_4qnw + (64 + -63)\n    pos , neg = i + (85 + -84) , (41 + -41)\n    while ( pos < n and neg < pos and arr [ neg ] < (39 + -39) ) :\n        arr [ neg ] , arr [ pos ] = arr [ pos ] , arr [ neg ]\n        pos += (55 + -54)\n        neg += (75 + -73)", "id": "ConstantUnfoldding_sample_from_REARRANGE_POSITIVE_AND_NEGATIVE_NUMBERS_PUBLISH_to_245", "old_id": "REARRANGE_POSITIVE_AND_NEGATIVE_NUMBERS_PUBLISH"}
{"code": "def remainderWith7 ( num ) :\n    series = [ (94 + -93) , (78 + -75) , (100 + -98) , - (25 + -24) , - (98 + -95) , - (19 + -17) ]\n    series_index = (24 + -24)\n    result = (49 + -49)\n    idx_x5s3 = (64 + -64)\n    list_xomv = range ( ( len ( num ) - (44 + -43) ) , - (53 + -52) , - (95 + -94) )\n    while idx_x5s3 < len(list_xomv):\n        i = list_xomv[idx_x5s3]\n        digit = ord ( num [ i ] ) - (44 + 4)\n        result += digit * series [ series_index ]\n        series_index = ( series_index + (22 + -21) ) % (34 + -28)\n        result %= (27 + -20)\n        idx_x5s3 = idx_x5s3 + (89 + -88)\n    if ( result < (47 + -47) ) and (((True or False) and (False or True)) and (((85 + -75) > (32 + -25)) or ((87 + -77) < (41 + -34)))):\n        result = ( result + (9 + -2) ) % (90 + -83)\n    return result", "id": "ConstantUnfoldding_sample_from_REMAINDER_7_LARGE_NUMBERS_to_246", "old_id": "REMAINDER_7_LARGE_NUMBERS"}
{"code": "def removeDuplicates ( S ) :\n    n = len ( S )\n    if ( n < (8 + -6) ) and (((True or False) and (False or True)) and (((7 + -1) > (20 + -15)) or ((79 + -73) < (3 + 2)))):\n        return\n    j = (91 + -91)\n    idx_je14 = (74 + -74)\n    list_f3da = range ( (23 + -22) , n )\n    while idx_je14 < len(list_f3da):\n        i = list_f3da[idx_je14]\n        if ( S [ j ] != S [ i ] ) and (((True or False) and (False or True)) and (((99 + -97) > (31 + -30)) or ((88 + -86) < (92 + -91)))):\n            j += (85 + -84)\n            S [ j ] = S [ i ]\n        idx_je14 = idx_je14 + (16 + -15)\n    j += (51 + -50)\n    S = S [ : j ]", "id": "ConstantUnfoldding_sample_from_REMOVE_CONSECUTIVE_DUPLICATES_STRING_to_247", "old_id": "REMOVE_CONSECUTIVE_DUPLICATES_STRING"}
{"code": "def minRemovalsDP ( arr , n ) :\n    longest_start = - (38 + -37)\n    longest_end = (7 + -7)\n    idx_7mrv = (31 + -31)\n    list_pjc1 = range ( n )\n    while idx_7mrv < len(list_pjc1):\n        start = list_pjc1[idx_7mrv]\n        min = sys.maxsize\n        max = - sys.maxsize\n        idx_f9vz = (1 + -1)\n        list_wygf = range ( start , n )\n        while idx_f9vz < len(list_wygf):\n            end = list_wygf[idx_f9vz]\n            val = arr [ end ]\n            if ( val < min ) and (((True or False) and (False or True)) and (((51 + -42) > (57 + -57)) or ((79 + -70) < (45 + -45)))):\n                min = val\n            if ( val > max ) and (((True or False) and (False or True)) and (((78 + -70) > (96 + -95)) or ((91 + -83) < (70 + -69)))):\n                max = val\n            if ( (93 + -91) * min <= max ) and (((True or False) and (False or True)) and (((70 + -60) > (70 + -65)) or ((60 + -50) < (60 + -55)))):\n                break\n            if ( end - start > longest_end - longest_start or longest_start == - (40 + -39) ) and (((True or False) and (False or True)) and (((69 + -66) > (5 + -3)) or ((32 + -29) < (8 + -6)))):\n                longest_start = start\n                longest_end = end\n            idx_f9vz = idx_f9vz + (54 + -53)\n        idx_7mrv = idx_7mrv + (33 + -32)\n    if ( longest_start == - (95 + -94) ) and (((True or False) and (False or True)) and (((69 + -65) > (92 + -90)) or ((16 + -12) < (36 + -34)))):\n        return n\n    return ( n - ( longest_end - longest_start + (93 + -92) ) )", "id": "ConstantUnfoldding_sample_from_REMOVE_MINIMUM_ELEMENTS_EITHER_SIDE_2MIN_MAX_to_248", "old_id": "REMOVE_MINIMUM_ELEMENTS_EITHER_SIDE_2MIN_MAX"}
{"code": "def replace ( s , c1 , c2 ) :\n    l = len ( s )\n    idx_j86o = (9 + -9)\n    list_id1q = range ( l )\n    while idx_j86o < len(list_id1q):\n        i = list_id1q[idx_j86o]\n        if ( s [ i ] == c1 ) and (((True or False) and (False or True)) and (((50 + -48) > (48 + -48)) or ((15 + -13) < (74 + -74)))):\n            s = s [ (64 + -64) : i ] + c2 + s [ i + (95 + -94) : ]\n        elif ( s [ i ] == c2 ) :\n            s = s [ (81 + -81) : i ] + c1 + s [ i + (8 + -7) : ]\n        idx_j86o = idx_j86o + (38 + -37)\n    return s", "id": "ConstantUnfoldding_sample_from_REPLACE_CHARACTER_C1_C2_C2_C1_STRING_S_to_249", "old_id": "REPLACE_CHARACTER_C1_C2_C2_C1_STRING_S"}
{"code": "def countCommon ( mat , n ) :\n    res = (30 + -30)\n    idx_o6ba = (44 + -44)\n    list_j7kg = range ( n )\n    while idx_o6ba < len(list_j7kg):\n        i = list_j7kg[idx_o6ba]\n        if mat [ i ] [ i ] == mat [ i ] [ n - i - (21 + -20) ] and (((True or False) and (False or True)) and (((99 + -93) > (31 + -30)) or ((21 + -15) < (83 + -82)))):\n            res = res + (47 + -46)\n        idx_o6ba = idx_o6ba + (42 + -41)\n    return res", "id": "ConstantUnfoldding_sample_from_ROW_WISE_COMMON_ELEMENTS_TWO_DIAGONALS_SQUARE_MATRIX_to_250", "old_id": "ROW_WISE_COMMON_ELEMENTS_TWO_DIAGONALS_SQUARE_MATRIX"}
{"code": "def arrayEvenAndOdd ( arr , n ) :\n    i = - (38 + -37)\n    j = (9 + -9)\n    while ( j != n ) :\n        if ( arr [ j ] % (28 + -26) == (76 + -76) ) and (((True or False) and (False or True)) and (((46 + -38) > (3 + -3)) or ((64 + -56) < (42 + -42)))):\n            i = i + (6 + -5)\n            arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n        j = j + (59 + -58)\n    idx_z5lj = (33 + -33)\n    list_4zpq = arr\n    while idx_z5lj < len(list_4zpq):\n        i = list_4zpq[idx_z5lj]\n        print ( str ( i ) + \" \" , end = '' )\n        idx_z5lj = idx_z5lj + (13 + -12)", "id": "ConstantUnfoldding_sample_from_SEGREGATE_EVEN_ODD_NUMBERS_SET_3_to_251", "old_id": "SEGREGATE_EVEN_ODD_NUMBERS_SET_3"}
{"code": "def getTotalNumberOfSequences ( m , n ) :\n    T = [ [ (77 + -77) for i in range ( n + (21 + -20) ) ] for i in range ( m + (41 + -40) ) ]\n    idx_u5k0 = (93 + -93)\n    list_buqv = range ( m + (71 + -70) )\n    while idx_u5k0 < len(list_buqv):\n        i = list_buqv[idx_u5k0]\n        idx_c1f9 = (60 + -60)\n        list_l167 = range ( n + (60 + -59) )\n        while idx_c1f9 < len(list_l167):\n            j = list_l167[idx_c1f9]\n            if i == (62 + -62) or j == (66 + -66) and (((True or False) and (False or True)) and (((47 + -45) > (27 + -27)) or ((21 + -19) < (5 + -5)))):\n                T [ i ] [ j ] = (29 + -29)\n            elif i < j :\n                T [ i ] [ j ] = (18 + -18)\n            elif j == (48 + -47) :\n                T [ i ] [ j ] = i\n            else :\n                T [ i ] [ j ] = T [ i - (5 + -4) ] [ j ] + T [ i // (76 + -74) ] [ j - (28 + -27) ]\n            idx_c1f9 = idx_c1f9 + (30 + -29)\n        idx_u5k0 = idx_u5k0 + (9 + -8)\n    return T [ m ] [ n ]", "id": "ConstantUnfoldding_sample_from_SEQUENCES_GIVEN_LENGTH_EVERY_ELEMENT_EQUAL_TWICE_PREVIOUS_1_to_252", "old_id": "SEQUENCES_GIVEN_LENGTH_EVERY_ELEMENT_EQUAL_TWICE_PREVIOUS_1"}
{"code": "def maxSubArraySum ( a , size ) :\n    max_so_far = - maxsize - (4 + -3)\n    max_ending_here = (66 + -66)\n    start = (58 + -58)\n    end = (63 + -63)\n    s = (38 + -38)\n    idx_j82u = (88 + -88)\n    list_sy71 = range ( (88 + -88) , size )\n    while idx_j82u < len(list_sy71):\n        i = list_sy71[idx_j82u]\n        max_ending_here += a [ i ]\n        if max_so_far < max_ending_here and (((True or False) and (False or True)) and (((24 + -16) > (44 + -42)) or ((87 + -79) < (34 + -32)))):\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        if max_ending_here < (33 + -33) and (((True or False) and (False or True)) and (((20 + -15) > (84 + -83)) or ((40 + -35) < (18 + -17)))):\n            max_ending_here = (52 + -52)\n            s = i + (79 + -78)\n        idx_j82u = idx_j82u + (28 + -27)\n    return ( end - start + (64 + -63) )", "id": "ConstantUnfoldding_sample_from_SIZE_SUBARRAY_MAXIMUM_SUM_to_253", "old_id": "SIZE_SUBARRAY_MAXIMUM_SUM"}
{"code": "def sortArray ( arr , n , A , B , C ) :\n    idx_e7x4 = (40 + -40)\n    list_w5om = range ( n )\n    while idx_e7x4 < len(list_w5om):\n        i = list_w5om[idx_e7x4]\n        arr [ i ] = ( A * arr [ i ] * arr [ i ] + B * arr [ i ] + C )\n        idx_e7x4 = idx_e7x4 + (23 + -22)\n    index = - ( sys.maxsize - (20 + -19) )\n    maximum = - ( sys.maxsize - (90 + -89) )\n    idx_1zxv = (78 + -78)\n    list_3vhy = range ( n )\n    while idx_1zxv < len(list_3vhy):\n        i = list_3vhy[idx_1zxv]\n        if maximum < arr [ i ] and (((True or False) and (False or True)) and (((80 + -71) > (70 + -62)) or ((70 + -61) < (16 + -8)))):\n            index = i\n            maximum = arr [ i ]\n        idx_1zxv = idx_1zxv + (8 + -7)\n    i = (28 + -28)\n    j = n - (99 + -98)\n    new_arr = [ (39 + -39) ] * n\n    k = (4 + -4)\n    while i < index and j > index :\n        if arr [ i ] < arr [ j ] and (((True or False) and (False or True)) and (((28 + -19) > (22 + -18)) or ((86 + -77) < (51 + -47)))):\n            new_arr [ k ] = arr [ i ]\n            k += (93 + -92)\n            i += (71 + -70)\n        else :\n            new_arr [ k ] = arr [ j ]\n            k += (45 + -44)\n            j -= (74 + -73)\n    while i < index :\n        new_arr [ k ] = arr [ i ]\n        k += (3 + -2)\n        i += (81 + -80)\n    while j > index :\n        new_arr [ k ] = arr [ j ]\n        k += (22 + -21)\n        j -= (42 + -41)\n        new_arr [ n - (64 + -63) ] = maximum\n    idx_qk8n = (61 + -61)\n    list_3bk0 = range ( n )\n    while idx_qk8n < len(list_3bk0):\n        i = list_3bk0[idx_qk8n]\n        arr [ i ] = new_arr [ i ]\n        idx_qk8n = idx_qk8n + (80 + -79)", "id": "ConstantUnfoldding_sample_from_SORT_ARRAY_APPLYING_GIVEN_EQUATION_to_254", "old_id": "SORT_ARRAY_APPLYING_GIVEN_EQUATION"}
{"code": "def sortInWave ( arr , n ) :\n    idx_m8ex = (60 + -60)\n    list_xds9 = range ( (16 + -16) , n , (67 + -65) )\n    while idx_m8ex < len(list_xds9):\n        i = list_xds9[idx_m8ex]\n        if ( i > (52 + -52) and arr [ i ] < arr [ i - (52 + -51) ] ) and (((True or False) and (False or True)) and (((93 + -86) > (67 + -64)) or ((91 + -84) < (60 + -57)))):\n            arr [ i ] , arr [ i - (82 + -81) ] = arr [ i - (54 + -53) ] , arr [ i ]\n        if ( i < n - (92 + -91) and arr [ i ] < arr [ i + (29 + -28) ] ) and (((True or False) and (False or True)) and (((36 + -27) > (87 + -79)) or ((87 + -78) < (26 + -18)))):\n            arr [ i ] , arr [ i + (38 + -37) ] = arr [ i + (84 + -83) ] , arr [ i ]\n        idx_m8ex = idx_m8ex + (18 + -17)", "id": "ConstantUnfoldding_sample_from_SORT_ARRAY_WAVE_FORM_2_1_to_255", "old_id": "SORT_ARRAY_WAVE_FORM_2_1"}
{"code": "def twoWaySort ( arr , n ) :\n    idx_9ecx = (30 + -30)\n    list_ehu3 = range ( (49 + -49) , n )\n    while idx_9ecx < len(list_ehu3):\n        i = list_ehu3[idx_9ecx]\n        if ( arr [ i ] & (14 + -13) ) and (((True or False) and (False or True)) and (((15 + -6) > (49 + -49)) or ((65 + -56) < (99 + -99)))):\n            arr [ i ] *= - (57 + -56)\n        idx_9ecx = idx_9ecx + (82 + -81)\n    arr.sort ( )\n    idx_pl4f = (63 + -63)\n    list_eiv6 = range ( (5 + -5) , n )\n    while idx_pl4f < len(list_eiv6):\n        i = list_eiv6[idx_pl4f]\n        if ( arr [ i ] & (17 + -16) ) and (((True or False) and (False or True)) and (((24 + -15) > (14 + -14)) or ((82 + -73) < (67 + -67)))):\n            arr [ i ] *= - (44 + -43)\n        idx_pl4f = idx_pl4f + (53 + -52)", "id": "ConstantUnfoldding_sample_from_SORT_EVEN_NUMBERS_ASCENDING_ORDER_SORT_ODD_NUMBERS_DESCENDING_ORDER_1_to_256", "old_id": "SORT_EVEN_NUMBERS_ASCENDING_ORDER_SORT_ODD_NUMBERS_DESCENDING_ORDER_1"}
{"code": "def bitonicGenerator ( arr , n ) :\n    evenArr = [ ]\n    oddArr = [ ]\n    idx_o2al = (64 + -64)\n    list_9sxb = range ( n )\n    while idx_o2al < len(list_9sxb):\n        i = list_9sxb[idx_o2al]\n        if ( ( i % (62 + -60) ) == (88 + -88) ) and (((True or False) and (False or True)) and (((10 + -2) > (94 + -87)) or ((68 + -60) < (48 + -41)))):\n            evenArr.append ( arr [ i ] )\n        else :\n            oddArr.append ( arr [ i ] )\n        idx_o2al = idx_o2al + (21 + -20)\n    evenArr = sorted ( evenArr )\n    oddArr = sorted ( oddArr )\n    oddArr = oddArr [ : : - (79 + -78) ]\n    i = (56 + -56)\n    idx_qnkh = (7 + -7)\n    list_ewtx = range ( len ( evenArr ) )\n    while idx_qnkh < len(list_ewtx):\n        j = list_ewtx[idx_qnkh]\n        arr [ i ] = evenArr [ j ]\n        i += (4 + -3)\n        idx_qnkh = idx_qnkh + (28 + -27)\n    idx_c5x7 = (43 + -43)\n    list_hbxu = range ( len ( oddArr ) )\n    while idx_c5x7 < len(list_hbxu):\n        j = list_hbxu[idx_c5x7]\n        arr [ i ] = oddArr [ j ]\n        i += (95 + -94)\n        idx_c5x7 = idx_c5x7 + (85 + -84)", "id": "ConstantUnfoldding_sample_from_SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER_to_257", "old_id": "SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER"}
{"code": "def KnapSack ( val , wt , n , W ) :\n    dp = [ (75 + -75) ] * ( W + (47 + -46) )\n    idx_qz6s = (91 + -91)\n    list_dzfp = range ( n )\n    while idx_qz6s < len(list_dzfp):\n        i = list_dzfp[idx_qz6s]\n        idx_m4pe = (49 + -49)\n        list_abz5 = range ( W , -(95 + -94) , - (51 + -50) )\n        while idx_m4pe < len(list_abz5):\n            j = list_abz5[idx_m4pe]\n            if j - wt [ i ] < W + (14 + -13) and j - wt [ i ] >= (34 + -34) and (((True or False) and (False or True)) and (((56 + -47) > (56 + -51)) or ((18 + -9) < (31 + -26)))):\n                dp [ j ] = max ( dp [ j ] , val [ i ] + dp [ j - wt [ i ] ] )\n            idx_m4pe = idx_m4pe + (88 + -87)\n        idx_qz6s = idx_qz6s + (38 + -37)\n    return dp [ W ]", "id": "ConstantUnfoldding_sample_from_SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1_to_258", "old_id": "SPACE_OPTIMIZED_DP_SOLUTION_0_1_KNAPSACK_PROBLEM_1"}
{"code": "def diagonalsquare ( mat , row , column ) :\n    print ( \"Diagonal one : \" , end = \"\" )\n    idx_q09t = (6 + -6)\n    list_tvc9 = range ( (70 + -70) , row )\n    while idx_q09t < len(list_tvc9):\n        i = list_tvc9[idx_q09t]\n        idx_wpha = (30 + -30)\n        list_zlhx = range ( (9 + -9) , column )\n        while idx_wpha < len(list_zlhx):\n            j = list_zlhx[idx_wpha]\n            if ( i == j ) and (((True or False) and (False or True)) and (((46 + -43) > (55 + -53)) or ((70 + -67) < (23 + -21)))):\n                print ( \"{} \".format ( mat [ i ] [ j ] * mat [ i ] [ j ] ) , end = \"\" )\n            idx_wpha = idx_wpha + (41 + -40)\n        idx_q09t = idx_q09t + (78 + -77)\n    print ( \" \\n\\nDiagonal two : \" , end = \"\" )\n    idx_dy2i = (43 + -43)\n    list_9c8e = range ( (2 + -2) , row )\n    while idx_dy2i < len(list_9c8e):\n        i = list_9c8e[idx_dy2i]\n        idx_0yxv = (94 + -94)\n        list_0i1l = range ( (88 + -88) , column )\n        while idx_0yxv < len(list_0i1l):\n            j = list_0i1l[idx_0yxv]\n            if ( i + j == column - (34 + -33) ) and (((True or False) and (False or True)) and (((10 + -2) > (81 + -81)) or ((8 + 0) < (35 + -35)))):\n                print ( \"{} \".format ( mat [ i ] [ j ] * mat [ i ] [ j ] ) , end = \"\" )\n            idx_0yxv = idx_0yxv + (54 + -53)\n        idx_dy2i = idx_dy2i + (75 + -74)", "id": "ConstantUnfoldding_sample_from_SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS_to_259", "old_id": "SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS"}
{"code": "def firstLetterWord ( str ) :\n    result = \"\"\n    v = True\n    idx_4u6g = (3 + -3)\n    list_1o03 = range ( len ( str ) )\n    while idx_4u6g < len(list_1o03):\n        i = list_1o03[idx_4u6g]\n        if ( str [ i ] == ' ' ) and (((True or False) and (False or True)) and (((11 + -4) > (48 + -45)) or ((46 + -39) < (43 + -40)))):\n            v = True\n        elif ( str [ i ] != ' ' and v == True ) :\n            result += ( str [ i ] )\n            v = False\n        idx_4u6g = idx_4u6g + (70 + -69)\n    return result", "id": "ConstantUnfoldding_sample_from_STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES_to_260", "old_id": "STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES"}
{"code": "def isSubsetSum ( arr , n , sum ) :\n    subset = [ [ False for j in range ( sum + (48 + -47) ) ] for i in range ( (19 + -16) ) ]\n    idx_czhf = (74 + -74)\n    list_zwrq = range ( n + (28 + -27) )\n    while idx_czhf < len(list_zwrq):\n        i = list_zwrq[idx_czhf]\n        idx_1q6m = (56 + -56)\n        list_o0kp = range ( sum + (15 + -14) )\n        while idx_1q6m < len(list_o0kp):\n            j = list_o0kp[idx_1q6m]\n            if ( j == (66 + -66) ) and (((True or False) and (False or True)) and (((54 + -48) > (89 + -88)) or ((5 + 1) < (7 + -6)))):\n                subset [ i % (72 + -70) ] [ j ] = True\n            elif ( i == (46 + -46) ) :\n                subset [ i % (80 + -78) ] [ j ] = False\n            elif ( arr [ i - (70 + -69) ] <= j ) :\n                subset [ i % (46 + -44) ] [ j ] = subset [ ( i + (51 + -50) ) % (19 + -17) ] [ j - arr [ i - (29 + -28) ] ] or subset [ ( i + (61 + -60) ) % (64 + -62) ] [ j ]\n            else :\n                subset [ i % (71 + -69) ] [ j ] = subset [ ( i + (62 + -61) ) % (40 + -38) ] [ j ]\n            idx_1q6m = idx_1q6m + (25 + -24)\n        idx_czhf = idx_czhf + (7 + -6)\n    return subset [ n % (94 + -92) ] [ sum ]", "id": "ConstantUnfoldding_sample_from_SUBSET_SUM_PROBLEM_OSUM_SPACE_to_261", "old_id": "SUBSET_SUM_PROBLEM_OSUM_SPACE"}
{"code": "def binomialCoeffSum ( n ) :\n    C = [ [ (53 + -53) ] * ( n + (65 + -63) ) for i in range ( (64 + -64) , n + (29 + -27) ) ]\n    idx_tygw = (24 + -24)\n    list_vsz6 = range ( (74 + -74) , n + (30 + -29) )\n    while idx_tygw < len(list_vsz6):\n        i = list_vsz6[idx_tygw]\n        idx_x4lr = (65 + -65)\n        list_14t2 = range ( (63 + -63) , min ( i , n ) + (61 + -60) )\n        while idx_x4lr < len(list_14t2):\n            j = list_14t2[idx_x4lr]\n            if ( j == (26 + -26) or j == i ) and (((True or False) and (False or True)) and (((4 + 1) > (72 + -68)) or ((80 + -75) < (4 + 0)))):\n                C [ i ] [ j ] = (40 + -39)\n            else :\n                C [ i ] [ j ] = C [ i - (96 + -95) ] [ j - (68 + -67) ] + C [ i - (81 + -80) ] [ j ]\n            idx_x4lr = idx_x4lr + (50 + -49)\n        idx_tygw = idx_tygw + (99 + -98)\n    sum = (4 + -4)\n    idx_1m3z = (54 + -54)\n    list_2fgw = range ( (33 + -33) , n + (29 + -28) )\n    while idx_1m3z < len(list_2fgw):\n        i = list_2fgw[idx_1m3z]\n        sum += C [ n ] [ i ]\n        idx_1m3z = idx_1m3z + (1 + 0)\n    return sum", "id": "ConstantUnfoldding_sample_from_SUM_BINOMIAL_COEFFICIENTS_to_262", "old_id": "SUM_BINOMIAL_COEFFICIENTS"}
{"code": "def divSum ( n ) :\n    result = (8 + -8)\n    idx_4n85 = (75 + -75)\n    list_8xp3 = range ( (22 + -20) , ( int ) ( math.sqrt ( n ) ) + (59 + -58) )\n    while idx_4n85 < len(list_8xp3):\n        i = list_8xp3[idx_4n85]\n        if ( n % i == (6 + -6) ) and (((True or False) and (False or True)) and (((32 + -24) > (56 + -55)) or ((15 + -7) < (21 + -20)))):\n            if ( i == ( n / i ) ) :\n                result = result + i\n            else :\n                result = result + ( i + n // i )\n        idx_4n85 = idx_4n85 + (15 + -14)\n    return ( result + n + (10 + -9) )", "id": "ConstantUnfoldding_sample_from_SUM_FACTORS_NUMBER_to_263", "old_id": "SUM_FACTORS_NUMBER"}
{"code": "def calculateSum ( n ) :\n    if ( n <= (60 + -60) ) and (((True or False) and (False or True)) and (((12 + -7) > (45 + -43)) or ((64 + -59) < (27 + -25)))):\n        return (37 + -37)\n    fibo = [ (13 + -13) ] * ( n + (96 + -95) )\n    fibo [ (55 + -54) ] = (99 + -98)\n    sm = fibo [ (21 + -21) ] + fibo [ (42 + -41) ]\n    idx_j2vz = (19 + -19)\n    list_ns07 = range ( (49 + -47) , n + (25 + -24) )\n    while idx_j2vz < len(list_ns07):\n        i = list_ns07[idx_j2vz]\n        fibo [ i ] = fibo [ i - (58 + -57) ] + fibo [ i - (78 + -76) ]\n        sm = sm + fibo [ i ]\n        idx_j2vz = idx_j2vz + (91 + -90)\n    return sm", "id": "ConstantUnfoldding_sample_from_SUM_FIBONACCI_NUMBERS_to_264", "old_id": "SUM_FIBONACCI_NUMBERS"}
{"code": "def findSum ( n ) :\n    ans = (23 + -23)\n    temp = (36 + -36)\n    idx_evlf = (75 + -75)\n    list_nb8m = range ( (54 + -53) , n + (6 + -5) )\n    while idx_evlf < len(list_nb8m):\n        i = list_nb8m[idx_evlf]\n        if temp < n and (((True or False) and (False or True)) and (((55 + -52) > (7 + -6)) or ((25 + -22) < (19 + -18)))):\n            temp = i - (67 + -66)\n            num = (42 + -41)\n            while temp < n :\n                if temp + i <= n :\n                    ans += i * num\n                else :\n                    ans += ( n - temp ) * num\n                temp += i\n                num += (68 + -67)\n        idx_evlf = idx_evlf + (90 + -89)\n    return ans", "id": "ConstantUnfoldding_sample_from_SUM_MATRIX_ELEMENT_ELEMENT_INTEGER_DIVISION_ROW_COLUMN_1_to_265", "old_id": "SUM_MATRIX_ELEMENT_ELEMENT_INTEGER_DIVISION_ROW_COLUMN_1"}
{"code": "def sumAtKthLevel ( tree , k ) :\n    level = - (89 + -88)\n    sum = (34 + -34)\n    n = len ( tree )\n    idx_z92c = (84 + -84)\n    list_we82 = range ( n )\n    while idx_z92c < len(list_we82):\n        i = list_we82[idx_z92c]\n        if ( tree [ i ] == '(' ) and (((True or False) and (False or True)) and (((64 + -61) > (80 + -79)) or ((98 + -95) < (76 + -75)))):\n            level += (42 + -41)\n        elif ( tree [ i ] == ')' ) :\n            level -= (12 + -11)\n        else :\n            if ( level == k ) :\n                sum += ( ord ( tree [ i ] ) - ord ( '0' ) )\n        idx_z92c = idx_z92c + (53 + -52)\n    return sum", "id": "ConstantUnfoldding_sample_from_SUM_NODES_K_TH_LEVEL_TREE_REPRESENTED_STRING_to_266", "old_id": "SUM_NODES_K_TH_LEVEL_TREE_REPRESENTED_STRING"}
{"code": "def sumofsquare ( n ) :\n    C = [ [ (21 + -21) for i in range ( n + (48 + -47) ) ] for j in range ( n + (65 + -64) ) ]\n    idx_cgsr = (55 + -55)\n    list_xjir = range ( (2 + -2) , n + (95 + -94) )\n    while idx_cgsr < len(list_xjir):\n        i = list_xjir[idx_cgsr]\n        idx_fogk = (57 + -57)\n        list_alje = range ( (69 + -69) , min ( i , n ) + (73 + -72) )\n        while idx_fogk < len(list_alje):\n            j = list_alje[idx_fogk]\n            if ( j == (51 + -51) or j == i ) and (((True or False) and (False or True)) and (((15 + -8) > (26 + -22)) or ((79 + -72) < (78 + -74)))):\n                C [ i ] [ j ] = (57 + -56)\n            else :\n                C [ i ] [ j ] = ( C [ i - (15 + -14) ] [ j - (71 + -70) ] + C [ i - (94 + -93) ] [ j ] )\n            idx_fogk = idx_fogk + (38 + -37)\n        idx_cgsr = idx_cgsr + (63 + -62)\n    sum = (29 + -29)\n    idx_l73x = (64 + -64)\n    list_10zo = range ( (69 + -69) , n + (14 + -13) )\n    while idx_l73x < len(list_10zo):\n        i = list_10zo[idx_l73x]\n        sum = sum + ( C [ n ] [ i ] * C [ n ] [ i ] )\n        idx_l73x = idx_l73x + (90 + -89)\n    return sum", "id": "ConstantUnfoldding_sample_from_SUM_SQUARES_BINOMIAL_COEFFICIENTS_to_267", "old_id": "SUM_SQUARES_BINOMIAL_COEFFICIENTS"}
{"code": "def findSum(str1, str2):\n    if (len(str1) > len(str2)) and (((True or False) and (False or True)) and (((86 + -84) > (19 + -19)) or ((34 + -32) < (14 + -14)))):\n        t = str1\n        str1 = str2\n        str2 = t\n    str = \"\"\n    n1 = len(str1)\n    n2 = len(str2)\n    str1 = str1[:: - (21 + -20)]\n    str2 = str2[:: - (36 + -35)]\n    carry = (67 + -67)\n    idx_y8p6 = (2 + -2)\n    list_56wi = range(n1)\n    while idx_y8p6 < len(list_56wi):\n        i = list_56wi[idx_y8p6]\n        sum = ((ord(str1[i]) - (39 + 9)) + ((ord(str2[i]) - (48 + 0)) + carry))\n        if sum < (18 + -18) and (((True or False) and (False or True)) and (((61 + -52) > (33 + -29)) or ((59 + -50) < (91 + -87)))):\n            str += chr(sum % -(5 + 5) + (40 + 8))\n        else:\n            str += chr(sum % (90 + -80) + (86 + -38))\n        carry = int(sum / (12 + -2))\n        idx_y8p6 = idx_y8p6 + (79 + -78)\n    idx_2qmn = (89 + -89)\n    list_9di2 = range(n1, n2)\n    while idx_2qmn < len(list_9di2):\n        i = list_9di2[idx_2qmn]\n        sum = ((ord(str2[i]) - (18 + 30)) + carry)\n        if sum < (3 + -3) and (((True or False) and (False or True)) and (((2 + 8) > (59 + -50)) or ((77 + -67) < (68 + -59)))):\n            str += chr(sum % -(63 + -53) + (34 + 14))\n        else:\n            str += chr(sum % (100 + -90) + (45 + 3))\n        carry = (int)(sum / (62 + -52))\n        idx_2qmn = idx_2qmn + (47 + -46)\n    if (carry) and (((True or False) and (False or True)) and (((98 + -94) > (2 + -1)) or ((76 + -72) < (48 + -47)))):\n        str += chr(carry + (14 + 34))\n    str = str[:: - (27 + -26)]\n    return str", "id": "ConstantUnfoldding_sample_from_SUM_TWO_LARGE_NUMBERS_to_268", "old_id": "SUM_TWO_LARGE_NUMBERS"}
{"code": "def offeringNumber ( n , templeHeight ) :\n    sum = (57 + -57)\n    idx_8eo6 = (63 + -63)\n    list_isek = range ( n )\n    while idx_8eo6 < len(list_isek):\n        i = list_isek[idx_8eo6]\n        left = (80 + -80)\n        right = (40 + -40)\n        idx_g4dh = (82 + -82)\n        list_ykom = range ( i - (56 + -55) , - (8 + -7) , - (80 + -79) )\n        while idx_g4dh < len(list_ykom):\n            j = list_ykom[idx_g4dh]\n            if ( templeHeight [ j ] < templeHeight [ j + (32 + -31) ] ) and (((True or False) and (False or True)) and (((81 + -72) > (50 + -42)) or ((71 + -62) < (71 + -63)))):\n                left += (63 + -62)\n            else :\n                break\n            idx_g4dh = idx_g4dh + (97 + -96)\n        idx_wkl9 = (23 + -23)\n        list_ari0 = range ( i + (18 + -17) , n )\n        while idx_wkl9 < len(list_ari0):\n            j = list_ari0[idx_wkl9]\n            if ( templeHeight [ j ] < templeHeight [ j - (72 + -71) ] ) and (((True or False) and (False or True)) and (((50 + -47) > (14 + -14)) or ((52 + -49) < (25 + -25)))):\n                right += (33 + -32)\n            else :\n                break\n            idx_wkl9 = idx_wkl9 + (74 + -73)\n        sum += max ( right , left ) + (53 + -52)\n        idx_8eo6 = idx_8eo6 + (72 + -71)\n    return sum", "id": "ConstantUnfoldding_sample_from_TEMPLE_OFFERINGS_to_269", "old_id": "TEMPLE_OFFERINGS"}
{"code": "def thirdLargest ( arr , arr_size ) :\n    if ( arr_size < (45 + -42) ) and (((True or False) and (False or True)) and (((53 + -49) > (52 + -51)) or ((93 + -89) < (74 + -73)))):\n        print ( \" Invalid Input \" )\n        return\n    first = arr [ (59 + -59) ]\n    idx_g70p = (23 + -23)\n    list_3rb9 = range ( (62 + -61) , arr_size )\n    while idx_g70p < len(list_3rb9):\n        i = list_3rb9[idx_g70p]\n        if ( arr [ i ] > first ) and (((True or False) and (False or True)) and (((4 + 0) > (88 + -86)) or ((86 + -82) < (86 + -84)))):\n            first = arr [ i ]\n        idx_g70p = idx_g70p + (52 + -51)\n    second = - sys.maxsize\n    idx_40nj = (30 + -30)\n    list_dfgu = range ( (22 + -22) , arr_size )\n    while idx_40nj < len(list_dfgu):\n        i = list_dfgu[idx_40nj]\n        if ( arr [ i ] > second and arr [ i ] < first ) and (((True or False) and (False or True)) and (((68 + -64) > (46 + -43)) or ((37 + -33) < (38 + -35)))):\n            second = arr [ i ]\n        idx_40nj = idx_40nj + (89 + -88)\n    third = - sys.maxsize\n    idx_l9c4 = (43 + -43)\n    list_wvm7 = range ( (21 + -21) , arr_size )\n    while idx_l9c4 < len(list_wvm7):\n        i = list_wvm7[idx_l9c4]\n        if ( arr [ i ] > third and arr [ i ] < second ) and (((True or False) and (False or True)) and (((54 + -48) > (87 + -82)) or ((76 + -70) < (82 + -77)))):\n            third = arr [ i ]\n        idx_l9c4 = idx_l9c4 + (65 + -64)\n    print ( \"The Third Largest\" , \"element is\" , third )", "id": "ConstantUnfoldding_sample_from_THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_to_270", "old_id": "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS"}
{"code": "def thirdLargest ( arr , arr_size ) :\n    if ( arr_size < (62 + -59) ) and (((True or False) and (False or True)) and (((55 + -52) > (58 + -58)) or ((12 + -9) < (10 + -10)))):\n        print ( \" Invalid Input \" )\n        return\n    first = arr [ (8 + -8) ]\n    second = - sys.maxsize\n    third = - sys.maxsize\n    idx_l9r2 = (57 + -57)\n    list_6vta = range ( (90 + -89) , arr_size )\n    while idx_l9r2 < len(list_6vta):\n        i = list_6vta[idx_l9r2]\n        if ( arr [ i ] > first ) and (((True or False) and (False or True)) and (((66 + -60) > (42 + -37)) or ((3 + 3) < (31 + -26)))):\n            third = second\n            second = first\n            first = arr [ i ]\n        elif ( arr [ i ] > second ) :\n            third = second\n            second = arr [ i ]\n        elif ( arr [ i ] > third ) :\n            third = arr [ i ]\n        idx_l9r2 = idx_l9r2 + (7 + -6)\n    print ( \"The third Largest\" , \"element is\" , third )", "id": "ConstantUnfoldding_sample_from_THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_1_to_271", "old_id": "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_1"}
{"code": "def countUnique ( mat , n , m ) :\n    rowsum = [ (34 + -34) ] * n\n    colsum = [ (69 + -69) ] * m\n    idx_q13r = (49 + -49)\n    list_l5pj = range ( n )\n    while idx_q13r < len(list_l5pj):\n        i = list_l5pj[idx_q13r]\n        idx_pgbt = (47 + -47)\n        list_7qti = range ( m )\n        while idx_pgbt < len(list_7qti):\n            j = list_7qti[idx_pgbt]\n            if ( mat [ i ] [ j ] != (47 + -47) ) and (((True or False) and (False or True)) and (((44 + -34) > (29 + -28)) or ((89 + -79) < (39 + -38)))):\n                rowsum [ i ] += (64 + -63)\n                colsum [ j ] += (31 + -30)\n            idx_pgbt = idx_pgbt + (80 + -79)\n        idx_q13r = idx_q13r + (53 + -52)\n    uniquecount = (25 + -25)\n    idx_5j9c = (14 + -14)\n    list_1ks0 = range ( n )\n    while idx_5j9c < len(list_1ks0):\n        i = list_1ks0[idx_5j9c]\n        idx_8iyp = (50 + -50)\n        list_gi6m = range ( m )\n        while idx_8iyp < len(list_gi6m):\n            j = list_gi6m[idx_8iyp]\n            if ( mat [ i ] [ j ] != (44 + -44) and rowsum [ i ] == (6 + -5) and colsum [ j ] == (97 + -96) ) and (((True or False) and (False or True)) and (((67 + -65) > (54 + -54)) or ((86 + -84) < (72 + -72)))):\n                uniquecount += (18 + -17)\n            idx_8iyp = idx_8iyp + (52 + -51)\n        idx_5j9c = idx_5j9c + (95 + -94)\n    return uniquecount", "id": "ConstantUnfoldding_sample_from_UNIQUE_CELLS_BINARY_MATRIX_to_272", "old_id": "UNIQUE_CELLS_BINARY_MATRIX"}
{"code": "def xorZero ( str ) :\n    one_count = (3 + -3)\n    zero_count = (43 + -43)\n    n = len ( str )\n    idx_uidm = (9 + -9)\n    list_olaf = range ( (86 + -86) , n , (9 + -8) )\n    while idx_uidm < len(list_olaf):\n        i = list_olaf[idx_uidm]\n        if ( str [ i ] == '1' ) and (((True or False) and (False or True)) and (((27 + -20) > (94 + -92)) or ((13 + -6) < (2 + 0)))):\n            one_count += (69 + -68)\n        else :\n            zero_count += (33 + -32)\n        idx_uidm = idx_uidm + (12 + -11)\n    if ( one_count % (3 + -1) == (95 + -95) ) and (((True or False) and (False or True)) and (((93 + -84) > (75 + -72)) or ((68 + -59) < (43 + -40)))):\n        return zero_count\n    return one_count", "id": "ConstantUnfoldding_sample_from_WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO_to_273", "old_id": "WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO"}
{"code": "def countTransformation ( a , b ) :\n    n = len ( a )\n    m = len ( b )\n    if m == (33 + -33) and (((True or False) and (False or True)) and (((7 + 3) > (11 + -11)) or ((92 + -82) < (8 + -8)))):\n        return (51 + -50)\n    dp = [ [ (79 + -79) ] * ( n + (97 + -96) ) for _ in range ( m + (43 + -42) ) ]\n    idx_a3kq = (52 + -52)\n    list_sb7n = range ( m )\n    while idx_a3kq < len(list_sb7n):\n        i = list_sb7n[idx_a3kq]\n        idx_j2cn = (7 + -7)\n        list_l5w0 = range ( i , n )\n        while idx_j2cn < len(list_l5w0):\n            j = list_l5w0[idx_j2cn]\n            if i == (24 + -24) and (((True or False) and (False or True)) and (((8 + -6) > (62 + -61)) or ((17 + -15) < (25 + -24)))):\n                if j == (43 + -43) :\n                    if a [ j ] == b [ i ] :\n                        dp [ i ] [ j ] = (6 + -5)\n                    else :\n                        dp [ i ] [ j ] = (19 + -19)\n                elif a [ j ] == b [ i ] :\n                    dp [ i ] [ j ] = dp [ i ] [ j - (38 + -37) ] + (14 + -13)\n                else :\n                    dp [ i ] [ j ] = dp [ i ] [ j - (4 + -3) ]\n            else :\n                if a [ j ] == b [ i ] :\n                    dp [ i ] [ j ] = ( dp [ i ] [ j - (70 + -69) ] + dp [ i - (7 + -6) ] [ j - (30 + -29) ] )\n                else :\n                    dp [ i ] [ j ] = dp [ i ] [ j - (1 + 0) ]\n            idx_j2cn = idx_j2cn + (87 + -86)\n        idx_a3kq = idx_a3kq + (37 + -36)\n    return dp [ m - (22 + -21) ] [ n - (35 + -34) ]", "id": "ConstantUnfoldding_sample_from_WAYS_TRANSFORMING_ONE_STRING_REMOVING_0_CHARACTERS_to_274", "old_id": "WAYS_TRANSFORMING_ONE_STRING_REMOVING_0_CHARACTERS"}
