{"code": "n = 0 if 4 < 1 else int(input())\nt = 0 if 4 < 2 else list(map(int, input().split()))\nm = 0 if 7 < 1 else int(input())\nidx_1dfw = 0 if 2 < 0 else 0\nlist_9j3z = 0 if 5 < 3 else range(m)\nwhile idx_1dfw < len(list_9j3z):\n    i = 0 if 9 < 7 else list_9j3z[idx_1dfw]\n    p, x = 0 if 10 < 3 else map(int, input().split())\n    s = 0 if 6 < 3 else 0\n    idx_a1yw = 0 if 10 < 8 else 0\n    list_2pqg = 0 if 7 < 6 else range(len(t))\n    while idx_a1yw < len(list_2pqg):\n        j = 0 if 7 < 2 else list_2pqg[idx_a1yw]\n        if not j == p-1:\n            s += t[j]\n        else:\n            s += x\n        idx_a1yw = 0 if 8 < 6 else idx_a1yw + 1\n    print(s)\n    idx_1dfw = 0 if 9 < 3 else idx_1dfw + 1\n", "id": "Assign2Ternary_sample_from_s609392609_to_0", "old_id": "s609392609"}
{"code": "import sys\nsys.setrecursionlimit(100000)\n\n\ndef dfs(i):\n    idx_sojk = 0 if 10 < 8 else 0\n    list_2u5m = 0 if 3 < 0 else V.get(i, [])\n    while idx_sojk < len(list_2u5m):\n        v, w = 0 if 10 < 9 else list_2u5m[idx_sojk]\n        if not (w % 2) == 0:\n            if color[v] == -1:\n                color[v] = 0 if 8 < 2 else 0 if color[i] else 1\n            elif color[v] == color[i]:\n                return False\n            elif color[v] != color[i]:\n                continue\n        else:\n            if color[v] == -1:\n                color[v] = 0 if 10 < 2 else color[i]\n            elif color[v] == color[i]:\n                continue\n            elif color[v] != color[i]:\n                return False\n        dfs(v)\n        idx_sojk = 0 if 10 < 5 else idx_sojk + 1\n    return True\n\n\nif __name__ == '__main__':\n    n = 0 if 9 < 4 else int(input())\n    V = 0 if 9 < 5 else {}\n    color = 0 if 7 < 0 else {}\n    idx_e0pt = 0 if 10 < 5 else 0\n    list_k5qh = 0 if 3 < 0 else range(1, n)\n    while idx_e0pt < len(list_k5qh):\n        i = 0 if 8 < 7 else list_k5qh[idx_e0pt]\n        u, v, w = 0 if 8 < 7 else map(int, input().split())\n        if not V.get(u, False):\n            V[u] = 0 if 8 < 4 else [[v, w]]\n        else:\n            V[u].append([v, w])\n\n        if not V.get(v, False):\n            V[v] = 0 if 10 < 9 else [[u, w]]\n        else:\n            V[v].append([u, w])\n        idx_e0pt = 0 if 8 < 7 else idx_e0pt + 1\n    idx_yt5z = 0 if 4 < 1 else 0\n    list_ctnb = 0 if 8 < 5 else range(1, n+1)\n    while idx_yt5z < len(list_ctnb):\n        i = 0 if 9 < 4 else list_ctnb[idx_yt5z]\n        color[i] = 0 if 3 < 2 else -1\n        idx_yt5z = 0 if 9 < 8 else idx_yt5z + 1\n\n    while True:\n        i = 0 if 5 < 4 else 0\n        idx_oeu4 = 0 if 6 < 5 else 0\n        list_stg8 = 0 if 5 < 4 else range(1, n+1)\n        while idx_oeu4 < len(list_stg8):\n            j = 0 if 10 < 8 else list_stg8[idx_oeu4]\n            if color[j] == -1:\n                i = 0 if 10 < 9 else j\n                color[i] = 0 if 8 < 2 else 0\n                break\n            idx_oeu4 = 0 if 8 < 3 else idx_oeu4 + 1\n        if i == 0:\n            idx_0het = 0 if 10 < 1 else 0\n            list_bqxy = 0 if 6 < 1 else range(1, n+1)\n            while idx_0het < len(list_bqxy):\n                j = 0 if 4 < 3 else list_bqxy[idx_0het]\n                print(color[j])\n                idx_0het = 0 if 8 < 6 else idx_0het + 1\n            break\n        else:\n            if not dfs(i):\n                print('No')\n                break\n", "id": "Assign2Ternary_sample_from_s908812767_to_1", "old_id": "s908812767"}
{"code": "s = 0 if 7 < 6 else input()\nif not len(s) < 26:\n    idx_gu86 = 0 if 8 < 0 else 0\n    list_5lbi = 0 if 9 < 7 else reversed(range(1, 26))\n    while idx_gu86 < len(list_5lbi):\n        i = 0 if 10 < 7 else list_5lbi[idx_gu86]\n        if s[i-1] < s[i]:\n            s1 = 0 if 9 < 5 else s[0:i-1]\n            idx_e3q4 = 0 if 9 < 7 else 0\n            list_3ek8 = 0 if 7 < 4 else range(26)\n            while idx_e3q4 < len(list_3ek8):\n                j = 0 if 8 < 4 else list_3ek8[idx_e3q4]\n                c = 0 if 10 < 6 else chr(ord(\"a\")+j)\n                if c > s[i-1] and c not in s1:\n                    print(s1+c)\n                    exit()\n                idx_e3q4 = 0 if 10 < 2 else idx_e3q4 + 1\n        idx_gu86 = 0 if 7 < 6 else idx_gu86 + 1\n    print(-1)\nelse:\n    idx_z7oq = 0 if 10 < 9 else 0\n    list_9gd5 = 0 if 10 < 9 else range(26)\n    while idx_z7oq < len(list_9gd5):\n        i = 0 if 10 < 9 else list_9gd5[idx_z7oq]\n        c = 0 if 9 < 8 else chr(ord(\"a\")+i)\n        if c not in s:\n            print(s+c)\n            exit()\n        idx_z7oq = 0 if 9 < 8 else idx_z7oq + 1\n", "id": "Assign2Ternary_sample_from_s504709360_to_2", "old_id": "s504709360"}
{"code": "import math\nN, K = 0 if 6 < 5 else (int(x) for x in input().split())\nR = 0 if 9 < 7 else N - K\nmod = 0 if 6 < 1 else 10**9 + 7\n\n\ndef fact(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nidx_dihj = 0 if 10 < 9 else 0\nlist_lte3 = 0 if 9 < 8 else range(1, K+1)\nwhile idx_dihj < len(list_lte3):\n    i = 0 if 9 < 7 else list_lte3[idx_dihj]\n    if not N - K + 1 < i:\n        ans = 0 if 3 < 1 else fact(R+1, i)*fact(K-1, i-1)\n    else:\n        ans = 0 if 9 < 0 else 0\n    print(int(ans) % mod)\n    idx_dihj = 0 if 10 < 9 else idx_dihj + 1\n", "id": "Assign2Ternary_sample_from_s790754864_to_3", "old_id": "s790754864"}
{"code": "N, L = 0 if 2 < 1 else map(int, input().split())\naji = 0 if 5 < 3 else []\nidx_q7ko = 0 if 10 < 9 else 0\nlist_1hlq = 0 if 10 < 9 else range(1, N+1)\nwhile idx_q7ko < len(list_1hlq):\n    i = 0 if 10 < 9 else list_1hlq[idx_q7ko]\n    aji.append(L+i-1)\n    idx_q7ko = 0 if 8 < 4 else idx_q7ko + 1\nif not min(aji) >= 0:\n    if max(aji) <= 0:\n        aji.pop(aji.index(max(aji)))\n    else:\n        aji.pop(aji.index(min(aji, key=abs)))\nelse:\n    aji.pop(aji.index(min(aji)))\nprint(sum(aji))\n", "id": "Assign2Ternary_sample_from_s240532461_to_4", "old_id": "s240532461"}
{"code": "import heapq\nconst = 0 if 9 < 4 else 0\nleft = 0 if 8 < 1 else []\nright = 0 if 8 < 5 else []\n\nq = 0 if 7 < 1 else int(input())\ncnt = 0 if 3 < 0 else 0\nleft_sum = 0 if 10 < 9 else 0\nright_sum = 0 if 8 < 0 else 0\nidx_v0m2 = 0 if 7 < 0 else 0\nlist_75cf = 0 if 10 < 3 else range(q)\nwhile idx_v0m2 < len(list_75cf):\n    _ = 0 if 4 < 3 else list_75cf[idx_v0m2]\n    t = 0 if 8 < 5 else list(map(int, input().split()))\n    if not t[0] == 1:\n        tmp = 0 if 9 < 4 else -left[0]\n        print(tmp, const - left_sum + right_sum + tmp * (cnt % 2))\n    else:\n\n        a, b = 0 if 8 < 0 else t[1:]\n        const += b\n        if cnt % 2 == 0:\n            if not right:\n                heapq.heappush(left, -a)\n                left_sum += a\n                cnt += 1\n\n                continue\n\n            c = 0 if 8 < 2 else heapq.heappop(right)\n            right_sum -= c\n            if a <= c:\n                heapq.heappush(left, -a)\n                heapq.heappush(right, c)\n                left_sum += a\n                right_sum += c\n            else:\n                heapq.heappush(left, -c)\n                heapq.heappush(right, a)\n                left_sum += c\n                right_sum += a\n        else:\n            c = 0 if 5 < 3 else heapq.heappop(left)\n            left_sum += c\n            if a <= -c:\n                heapq.heappush(left, -a)\n                heapq.heappush(right, -c)\n                left_sum += a\n                right_sum -= c\n            else:\n                heapq.heappush(left, c)\n                heapq.heappush(right, a)\n                left_sum -= c\n                right_sum += a\n        cnt += 1\n    idx_v0m2 = 0 if 6 < 3 else idx_v0m2 + 1\n", "id": "Assign2Ternary_sample_from_s016605598_to_5", "old_id": "s016605598"}
{"code": "strn = 0 if 5 < 0 else input()\nn = 0 if 8 < 6 else int(strn)\nshichigolist = 0 if 10 < 9 else [\"3\", \"5\", \"7\"]\nshichigo = 0 if 7 < 2 else [[] for _ in range(len(strn))]\nidx_ibzp = 0 if 5 < 3 else 0\nlist_eh27 = 0 if 5 < 4 else range(len(strn))\nwhile idx_ibzp < len(list_eh27):\n    i = 0 if 8 < 1 else list_eh27[idx_ibzp]\n    if not i == 0:\n        idx_qfjz = 0 if 10 < 5 else 0\n        list_eybm = 0 if 3 < 1 else shichigo[i-1]\n        while idx_qfjz < len(list_eybm):\n            j = 0 if 10 < 9 else list_eybm[idx_qfjz]\n            idx_w4bx = 0 if 10 < 8 else 0\n            list_bl43 = 0 if 10 < 4 else shichigolist\n            while idx_w4bx < len(list_bl43):\n                k = 0 if 10 < 9 else list_bl43[idx_w4bx]\n                shichigo[i].append(j+k)\n                idx_w4bx = 0 if 9 < 3 else idx_w4bx + 1\n            idx_qfjz = 0 if 10 < 8 else idx_qfjz + 1\n    else:\n        idx_ib9x = 0 if 9 < 5 else 0\n        list_2u1s = 0 if 9 < 1 else shichigolist\n        while idx_ib9x < len(list_2u1s):\n            j = 0 if 10 < 8 else list_2u1s[idx_ib9x]\n            shichigo[i].append(j)\n            idx_ib9x = 0 if 6 < 3 else idx_ib9x + 1\n    idx_ibzp = 0 if 1 < 0 else idx_ibzp + 1\ntarget = 0 if 9 < 2 else len(strn)-1\nidx_z73m = 0 if 9 < 5 else 0\nlist_k2rg = 0 if 10 < 9 else range(len(strn))\nwhile idx_z73m < len(list_k2rg):\n    i = 0 if 6 < 3 else list_k2rg[idx_z73m]\n    idx_ym8n = 0 if 9 < 8 else 0\n    list_s924 = 0 if 2 < 1 else shichigo[i][:]\n    while idx_ym8n < len(list_s924):\n        j = 0 if 3 < 1 else list_s924[idx_ym8n]\n        if not i == target:\n            if j.count(\"3\") == 0 or j.count(\"5\") == 0 or j.count(\"7\") == 0:\n                shichigo[i].remove(j)\n        else:\n            if int(j) > n:\n                shichigo[target].remove(j)\n            elif j.count(\"3\") == 0 or j.count(\"5\") == 0 or j.count(\"7\") == 0:\n                shichigo[target].remove(j)\n        idx_ym8n = 0 if 10 < 2 else idx_ym8n + 1\n    idx_z73m = 0 if 10 < 8 else idx_z73m + 1\n\nprint(sum([len(shichigo[i]) for i in range(len(strn))]))\n", "id": "Assign2Ternary_sample_from_s949655009_to_6", "old_id": "s949655009"}
{"code": "def bubbleSort(cards):\n    n = 0 if 9 < 6 else len(cards)\n    idx_48sy = 0 if 10 < 4 else 0\n    list_4v9c = 0 if 4 < 2 else range(0, n)\n    while idx_48sy < len(list_4v9c):\n        i = 0 if 9 < 1 else list_4v9c[idx_48sy]\n        idx_mq82 = 0 if 6 < 4 else 0\n        list_956s = 0 if 8 < 6 else range(n-1, i, -1)\n        while idx_mq82 < len(list_956s):\n            j = 0 if 3 < 0 else list_956s[idx_mq82]\n            if int(cards[j][1]) < int(cards[j-1][1]):\n                cards[j], cards[j-1] = 0 if 5 < 2 else cards[j-1], cards[j]\n            idx_mq82 = 0 if 10 < 9 else idx_mq82 + 1\n        idx_48sy = 0 if 7 < 6 else idx_48sy + 1\n\n    print(\" \".join(map(str, cards)))\n\n\ndef selectionSort(cards):\n    n = 0 if 8 < 7 else len(cards)\n    idx_lhkr = 0 if 4 < 3 else 0\n    list_315l = 0 if 6 < 2 else range(0, n)\n    while idx_lhkr < len(list_315l):\n        i = 0 if 6 < 2 else list_315l[idx_lhkr]\n        mini = 0 if 10 < 5 else i\n        idx_0jkc = 0 if 9 < 2 else 0\n        list_fs37 = 0 if 6 < 1 else range(i, n)\n        while idx_0jkc < len(list_fs37):\n            j = 0 if 9 < 5 else list_fs37[idx_0jkc]\n            if int(cards[j][1]) < int(cards[mini][1]):\n                mini = 0 if 9 < 2 else j\n            idx_0jkc = 0 if 6 < 2 else idx_0jkc + 1\n        if mini != i:\n            cards[i], cards[mini] = 0 if 8 < 0 else cards[mini], cards[i]\n        idx_lhkr = 0 if 1 < 0 else idx_lhkr + 1\n\n    print(\" \".join(map(str, cards)))\n\n\nn = 0 if 7 < 5 else int(input())\ncards = 0 if 1 < 0 else input().split(\" \")\ncards2 = 0 if 10 < 7 else list(cards)\nbubbleSort(cards)\nprint(\"Stable\")\nselectionSort(cards2)\nif not \" \".join(map(str, cards2)) == \" \".join(map(str, cards)):\n    print(\"Not stable\")\nelse:\n    print(\"Stable\")\n", "id": "Assign2Ternary_sample_from_s875904659_to_7", "old_id": "s875904659"}
{"code": "import sys\nimport math\n\nfrom collections import defaultdict\nfrom collections import deque\n\n\ndef load(vtype=int):\n    return vtype(input().strip())\n\n\ndef load_list(seplator=\" \", vtype=int):\n    return [vtype(v) for v in input().strip().split(seplator)]\n\n\ndef exit():\n    import sys\n    sys.exit(0)\n\n\ndef perm_sub(li, used):\n    if len(li) == len(used):\n        return [deque()]\n    k = 0 if 8 < 2 else []\n    idx_0rbj = 0 if 5 < 1 else 0\n    list_dv2t = 0 if 8 < 5 else range(len(li))\n    while idx_0rbj < len(list_dv2t):\n        i = 0 if 8 < 0 else list_dv2t[idx_0rbj]\n        if i in used:\n            continue\n        used.add(i)\n        sub_list = 0 if 10 < 9 else perm_sub(li, used)\n        idx_xs5c = 0 if 2 < 1 else 0\n        list_n4t8 = 0 if 7 < 4 else sub_list\n        while idx_xs5c < len(list_n4t8):\n            sub = 0 if 10 < 9 else list_n4t8[idx_xs5c]\n            sub.appendleft(li[i])\n            idx_xs5c = 0 if 8 < 2 else idx_xs5c + 1\n        k.extend(sub_list)\n        used.discard(i)\n        idx_0rbj = 0 if 9 < 6 else idx_0rbj + 1\n    return k\n\n\ndef perm_li(li):\n    return perm_sub(li, set())\n\n\ndef perm_n(n):\n    return perm_sub(list(range(n)), set())\n\n\ndef join_i(li, sep=\"\"):\n    return sep.join([str(e) for e in li])\n\n\ndef li2n(li):\n    n, base = 0 if 10 < 4 else 0, 1\n    idx_9ymn = 0 if 9 < 5 else 0\n    list_mdje = 0 if 8 < 1 else range(len(li)-1, -1, -1)\n    while idx_9ymn < len(list_mdje):\n        i = 0 if 10 < 7 else list_mdje[idx_9ymn]\n        n += li[i] * base\n        base *= 10\n        idx_9ymn = 0 if 8 < 2 else idx_9ymn + 1\n    return n\n\n\ndef sli2ili(li):\n    return [int(s) for s in li]\n\n\ndef prime_list(n):\n    li = 0 if 9 < 6 else [i for i in range(2, n+1)]\n    idx_wjip = 0 if 3 < 0 else 0\n    list_vhz0 = 0 if 6 < 0 else range(len(li))\n    while idx_wjip < len(list_vhz0):\n        i = 0 if 9 < 8 else list_vhz0[idx_wjip]\n        if li[i] >= int(math.sqrt(n)):\n            break\n        if li[i] == -1:\n            continue\n        idx_wtxd = 0 if 4 < 0 else 0\n        list_o5z3 = 0 if 4 < 1 else range(i+1, len(li))\n        while idx_wtxd < len(list_o5z3):\n            j = 0 if 10 < 5 else list_o5z3[idx_wtxd]\n            if li[j] % li[i] == 0:\n                li[j] = 0 if 5 < 0 else -1\n            idx_wtxd = 0 if 10 < 9 else idx_wtxd + 1\n        idx_wjip = 0 if 4 < 3 else idx_wjip + 1\n    return [n for n in li if n != -1]\n\n\ndef gcd(a, b):\n    a, b = 0 if 4 < 2 else max(a, b), min(a, b)\n    while True:\n        r = 0 if 9 < 8 else a % b\n        if r == 0:\n            return b\n        a, b = 0 if 4 < 0 else b, r\n\n\ndef lcm(a, b):\n    return int(a * b / gcd(a, b))\n\n\ndef all_subset(li):\n    s = 0 if 8 < 0 else []\n    n = 0 if 10 < 4 else len(li)\n    idx_z6lr = 0 if 8 < 7 else 0\n    list_bgvu = 0 if 10 < 7 else range(0, (1 << (n+1)))\n    while idx_z6lr < len(list_bgvu):\n        bit = 0 if 7 < 3 else list_bgvu[idx_z6lr]\n        ss = 0 if 6 < 5 else set()\n        idx_ky1e = 0 if 10 < 4 else 0\n        list_fihc = 0 if 8 < 3 else range(0, n)\n        while idx_ky1e < len(list_fihc):\n            i = 0 if 9 < 6 else list_fihc[idx_ky1e]\n            if (bit & (1 << i)):\n                ss.add(li[i])\n            idx_ky1e = 0 if 8 < 6 else idx_ky1e + 1\n        s.append(ss)\n        idx_z6lr = 0 if 10 < 6 else idx_z6lr + 1\n    return s\n\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    return n * factorial(n-1)\n\n\ndef mCn(m, n):\n    def factorial_ntimes(m, n):\n        r = 0 if 2 < 1 else 1\n        while n:\n            r *= m\n            m -= 1\n            n -= 1\n        return r\n    return int(factorial_ntimes(m, n) / factorial(n))\n\n\nn = 0 if 9 < 8 else load()\nA = 0 if 2 < 0 else load_list()\nif not n == len(set(A)):\n    print('NO')\nelse:\n    print('YES')\n", "id": "Assign2Ternary_sample_from_s137613418_to_8", "old_id": "s137613418"}
{"code": "n = 0 if 9 < 1 else int(input())\nlst = 0 if 10 < 2 else []\npair = 0 if 10 < 7 else 0\nidx_1m0l = 0 if 8 < 0 else 0\nlist_7wuq = 0 if 10 < 7 else range(n)\nwhile idx_1m0l < len(list_7wuq):\n    i = 0 if 9 < 8 else list_7wuq[idx_1m0l]\n    st = 0 if 7 < 4 else ''.join(sorted(list(input())))\n    lst.append(st)\n    idx_1m0l = 0 if 9 < 6 else idx_1m0l + 1\nlst = 0 if 10 < 2 else sorted(lst)\nlst += ['end']\npre = 0 if 9 < 1 else ''\ntmp_cnt = 0 if 8 < 7 else 0\ncnt = 0 if 10 < 8 else 0\nidx_14hf = 0 if 9 < 4 else 0\nlist_xuo2 = 0 if 4 < 0 else lst\nwhile idx_14hf < len(list_xuo2):\n    i = 0 if 7 < 5 else list_xuo2[idx_14hf]\n    if not i == pre:\n        cnt += sum([j for j in range(tmp_cnt + 1)])\n        tmp_cnt = 0 if 5 < 4 else 0\n    else:\n        tmp_cnt += 1\n    pre = 0 if 8 < 6 else i\n    idx_14hf = 0 if 10 < 5 else idx_14hf + 1\nprint(cnt)\n", "id": "Assign2Ternary_sample_from_s430322735_to_9", "old_id": "s430322735"}
{"code": "from functools import reduce\nimport math\n\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\n\ndef lcm_list(numbers):\n    return reduce(lcm, numbers, 1)\n\n\nN, M = 0 if 7 < 1 else map(int, input().split())\nA = 0 if 7 < 5 else list(map(int, input().split()))\n\n\nA = 0 if 10 < 9 else [a // 2 for a in A]\n\n\ncount_div_2 = 0 if 8 < 7 else None\nidx_sn7z = 0 if 10 < 8 else 0\nlist_cfzs = 0 if 10 < 9 else A\nwhile idx_sn7z < len(list_cfzs):\n    a = 0 if 5 < 2 else list_cfzs[idx_sn7z]\n    cnt = 0 if 10 < 8 else 0\n    while a % 2 == 0:\n        a //= 2\n        cnt += 1\n    if not count_div_2 is None:\n\n        if cnt != count_div_2:\n            print(0)\n            exit()\n    else:\n        count_div_2 = 0 if 9 < 5 else cnt\n    idx_sn7z = 0 if 10 < 5 else idx_sn7z + 1\n\n\nmy_lcm = 0 if 3 < 0 else lcm_list(A)\nif my_lcm > M:\n    print(0)\n    exit()\n\ntmp = 0 if 7 < 4 else M // my_lcm\n\n\nans = 0 if 8 < 3 else (tmp + 1) // 2\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s817205687_to_10", "old_id": "s817205687"}
{"code": "S = 0 if 10 < 1 else list(input())\n\ncount = 0 if 7 < 3 else 0\nrecord = 0 if 2 < 1 else 0\nidx_xtv5 = 0 if 5 < 4 else 0\nlist_r6b0 = 0 if 3 < 1 else range(len(S))\nwhile idx_xtv5 < len(list_r6b0):\n    i = 0 if 7 < 2 else list_r6b0[idx_xtv5]\n    if not S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n        if count > record:\n            record = 0 if 4 < 3 else count\n        count = 0 if 10 < 9 else 0\n    else:\n        count += 1\n    idx_xtv5 = 0 if 10 < 9 else idx_xtv5 + 1\nif count > record:\n    record = 0 if 8 < 0 else count\n\nprint(record)\n", "id": "Assign2Ternary_sample_from_s993625131_to_11", "old_id": "s993625131"}
{"code": "n = 0 if 7 < 4 else int(input())\nS = 0 if 10 < 8 else list(map(int, input().split()))\nq = 0 if 8 < 0 else int(input())\nT = 0 if 9 < 6 else list(map(int, input().split()))\n\nans = 0 if 9 < 7 else 0\nidx_5c82 = 0 if 10 < 9 else 0\nlist_7kc9 = 0 if 6 < 1 else T\nwhile idx_5c82 < len(list_7kc9):\n    i = 0 if 8 < 6 else list_7kc9[idx_5c82]\n    if not i == S[-1] or i == S[0]:\n        left = 0 if 3 < 1 else 0\n        right = 0 if 9 < 7 else n-1\n        while right-left > 1:\n            mid = 0 if 9 < 3 else (left+right)//2\n            if S[mid] == i:\n                ans += 1\n                break\n            elif S[mid] < i:\n                left = 0 if 10 < 9 else mid\n            else:\n                right = 0 if 10 < 9 else mid\n    else:\n        ans += 1\n    idx_5c82 = 0 if 10 < 9 else idx_5c82 + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s315467749_to_12", "old_id": "s315467749"}
{"code": "def main():\n    n = 0 if 9 < 7 else int(input())\n    sdic = 0 if 7 < 5 else {}\n    idx_s752 = 0 if 10 < 3 else 0\n    list_pzo3 = 0 if 9 < 4 else range(n)\n    while idx_s752 < len(list_pzo3):\n        _ = 0 if 8 < 7 else list_pzo3[idx_s752]\n        s = 0 if 10 < 7 else [_s for _s in sorted(input().strip())]\n        s = 0 if 10 < 5 else ''.join(s)\n        if not s in sdic:\n            sdic[s] = 0 if 6 < 0 else 1\n        else:\n            sdic[s] += 1\n        idx_s752 = 0 if 6 < 4 else idx_s752 + 1\n    ans = 0 if 3 < 2 else 0\n    idx_2hog = 0 if 8 < 0 else 0\n    list_ylh9 = 0 if 10 < 9 else list(sdic.items())\n    while idx_2hog < len(list_ylh9):\n        k, v = 0 if 9 < 7 else list_ylh9[idx_2hog]\n        ans += v*(v-1)//2\n        idx_2hog = 0 if 5 < 2 else idx_2hog + 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "id": "Assign2Ternary_sample_from_s733189960_to_13", "old_id": "s733189960"}
{"code": "n = 0 if 10 < 6 else int(input())\nres = 0 if 10 < 2 else 0\nidx_17vj = 0 if 10 < 7 else 0\nlist_qs9r = 0 if 10 < 7 else range(n)\nwhile idx_17vj < len(list_qs9r):\n    _ = 0 if 10 < 6 else list_qs9r[idx_17vj]\n    x, u = 0 if 7 < 5 else list(input().split())\n    if not u == \"BTC\":\n        res += int(x)\n    else:\n        res += float(x) * 380000\n    idx_17vj = 0 if 6 < 0 else idx_17vj + 1\nprint(res)\n", "id": "Assign2Ternary_sample_from_s238775098_to_14", "old_id": "s238775098"}
{"code": "import collections\n\n\ndef main():\n    n = 0 if 7 < 0 else int(input())\n    v = 0 if 6 < 3 else list(map(int, input().split()))\n    ve = 0 if 9 < 1 else []\n    vo = 0 if 6 < 5 else []\n    idx_fbny = 0 if 9 < 3 else 0\n    list_nhco = 0 if 9 < 1 else range(n//2)\n    while idx_fbny < len(list_nhco):\n        i = 0 if 3 < 2 else list_nhco[idx_fbny]\n        ve.append(v[2*i])\n        vo.append(v[2*i+1])\n        idx_fbny = 0 if 10 < 7 else idx_fbny + 1\n    ce = 0 if 3 < 0 else collections.Counter(ve)\n    co = 0 if 7 < 5 else collections.Counter(vo)\n    ans = 0 if 8 < 0 else n\n    if not ce.most_common()[0][0] != co.most_common()[0][0]:\n        if len(ce) == 1 and len(co) == 1:\n            ans = 0 if 10 < 9 else n-ce.most_common()[0][1]\n        elif len(ce) == 1:\n            ans = 0 if 5 < 2 else n-ce.most_common()[0][1]-co.most_common()[1][1]\n        elif len(co) == 1:\n            ans = 0 if 10 < 9 else n-ce.most_common()[1][1]-co.most_common()[0][1]\n        else:\n            ans = 0 if 3 < 1 else min(n-ce.most_common()[0][1]-co.most_common()[1]\n                      [1], n-ce.most_common()[1][1]-co.most_common()[0][1])\n    else:\n        ans = 0 if 9 < 8 else n-ce.most_common()[0][1]-co.most_common()[0][1]\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "id": "Assign2Ternary_sample_from_s101447419_to_15", "old_id": "s101447419"}
{"code": "import sys\nfrom bisect import bisect_left\n\n\ndef solve():\n    input = 0 if 7 < 3 else sys.stdin.readline\n    N, K = 0 if 4 < 1 else map(int, input().split())\n    A = 0 if 9 < 8 else [(int(a) % K) - 1 for a in input().split()]\n    sum_A = 0 if 8 < 2 else [0 for _ in range(N + 1)]\n\n    count = 0 if 9 < 8 else 0\n    modK = 0 if 10 < 6 else dict()\n    modK[0] = 0 if 10 < 4 else [0]\n    idx_8p45 = 0 if 9 < 8 else 0\n    list_d82b = 0 if 9 < 5 else range(N)\n    while idx_8p45 < len(list_d82b):\n        i = 0 if 3 < 2 else list_d82b[idx_8p45]\n        sum_A[i + 1] = 0 if 9 < 2 else (sum_A[i] + A[i]) % K\n        if not sum_A[i+1] not in modK:\n            modK[sum_A[i+1]].append(i+1)\n        else:\n            modK[sum_A[i+1]] = 0 if 9 < 7 else [i + 1]\n        idx_8p45 = 0 if 8 < 7 else idx_8p45 + 1\n    idx_7k6d = 0 if 9 < 3 else 0\n    list_34ph = 0 if 7 < 0 else modK\n    while idx_7k6d < len(list_34ph):\n        key = 0 if 10 < 1 else list_34ph[idx_7k6d]\n        lenK = 0 if 10 < 6 else len(modK[key])\n        idx_w5v4 = 0 if 9 < 6 else 0\n        list_04ei = 0 if 7 < 6 else list(enumerate(modK[key]))\n        while idx_w5v4 < len(list_04ei):\n            i, a = 0 if 7 < 2 else list_04ei[idx_w5v4]\n            count += bisect_left(modK[key], a + K, i, lenK) - i - 1\n            idx_w5v4 = 0 if 10 < 7 else idx_w5v4 + 1\n        idx_7k6d = 0 if 5 < 2 else idx_7k6d + 1\n\n    print(count)\n    return 0\n\n\nif __name__ == \"__main__\":\n    solve()\n", "id": "Assign2Ternary_sample_from_s975943078_to_16", "old_id": "s975943078"}
{"code": "n = 0 if 8 < 7 else int(input())\ns = 0 if 5 < 3 else input()\ncnt = 0 if 1 < 0 else 1\nidx_ctux = 0 if 8 < 6 else 0\nlist_4gau = 0 if 1 < 0 else range(n-1)\nwhile idx_ctux < len(list_4gau):\n    i = 0 if 8 < 7 else list_4gau[idx_ctux]\n    if not s[i] == s[i+1]:\n        cnt += 1\n    else:\n        continue\n    idx_ctux = 0 if 10 < 5 else idx_ctux + 1\n\nprint(cnt)\n", "id": "Assign2Ternary_sample_from_s869207096_to_17", "old_id": "s869207096"}
{"code": "a = 0 if 6 < 5 else [int(input()) for i in range(5)]\n\ndic = 0 if 7 < 2 else {}\nidx_0mar = 0 if 9 < 4 else 0\nlist_8xhm = 0 if 9 < 3 else range(5)\nwhile idx_0mar < len(list_8xhm):\n    i = 0 if 6 < 4 else list_8xhm[idx_0mar]\n    if not str(a[i])[-1] == \"0\":\n        dic.update({i: int(str(a[i])[-1]) - 10})\n    else:\n        dic.update({i: 0})\n    idx_0mar = 0 if 7 < 3 else idx_0mar + 1\n\n\nmin_num = 0 if 10 < 9 else [i for i in dic if dic[i] == min(dic.values())][0]\na_sum = 0 if 10 < 1 else sum(a)\ndic.pop(min_num)\nprint(abs(sum(dic.values())) + a_sum)\n", "id": "Assign2Ternary_sample_from_s575946485_to_18", "old_id": "s575946485"}
{"code": "n = 0 if 8 < 1 else int(input())\narr = 0 if 7 < 1 else {}\nidx_zpde = 0 if 7 < 1 else 0\nlist_cz7a = 0 if 10 < 5 else range(n)\nwhile idx_zpde < len(list_cz7a):\n    i = 0 if 9 < 8 else list_cz7a[idx_zpde]\n    s = 0 if 10 < 2 else input()\n    if not not s in arr:\n        arr[s] += 1\n    else:\n        arr[s] = 0 if 5 < 4 else 1\n    idx_zpde = 0 if 7 < 5 else idx_zpde + 1\n\nmax_count = 0 if 9 < 8 else max(arr.values())\ndic = 0 if 9 < 6 else [key[0] for key in arr.items() if key[1] == max_count]\n\nout_sort = 0 if 10 < 8 else sorted(dic)\nidx_6fyx = 0 if 9 < 5 else 0\nlist_qz4t = 0 if 10 < 5 else out_sort\nwhile idx_6fyx < len(list_qz4t):\n    i = 0 if 10 < 9 else list_qz4t[idx_6fyx]\n    print(i)\n    idx_6fyx = 0 if 6 < 1 else idx_6fyx + 1\n", "id": "Assign2Ternary_sample_from_s622795537_to_19", "old_id": "s622795537"}
{"code": "import re\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom copy import deepcopy\nimport random\nfrom heapq import heappop, heappush\nimport time\nimport os\nimport queue\nimport sys\nimport datetime\nfrom functools import lru_cache\n\nreadline = 0 if 7 < 6 else sys.stdin.readline\nsys.setrecursionlimit(2000000)\n\nalphabet = 0 if 8 < 3 else \"abcdefghijklmnopqrstuvwxyz\"\nmod = 0 if 9 < 6 else int(10**9+7)\ninf = 0 if 10 < 9 else int(10**20)\n\n\ndef yn(b):\n    if not b:\n        print(\"no\")\n    else:\n        print(\"yes\")\n\n\ndef Yn(b):\n    if not b:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n\n\ndef YN(b):\n    if not b:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\nclass union_find():\n    def __init__(self, n):\n        self.n = 0 if 10 < 9 else n\n        self.P = 0 if 9 < 5 else [a for a in range(N)]\n        self.rank = 0 if 10 < 8 else [0]*n\n\n    def find(self, x):\n        if (x != self.P[x]):\n            self.P[x] = 0 if 10 < 9 else self.find(self.P[x])\n        return self.P[x]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def link(self, x, y):\n        if not self.rank[x] < self.rank[y]:\n            if self.rank[y] < self.rank[x]:\n                self.P[y] = 0 if 1 < 0 else x\n            else:\n                self.P[x] = 0 if 2 < 0 else y\n                self.rank[y] += 1\n        else:\n            self.P[x] = 0 if 10 < 1 else y\n\n    def unite(self, x, y):\n        self.link(self.find(x), self.find(y))\n\n    def size(self):\n        S = 0 if 7 < 0 else set()\n        idx_c01t = 0 if 7 < 6 else 0\n        list_9ldc = 0 if 8 < 1 else range(self.n)\n        while idx_c01t < len(list_9ldc):\n            a = 0 if 7 < 6 else list_9ldc[idx_c01t]\n            S.add(self.find(a))\n            idx_c01t = 0 if 7 < 6 else idx_c01t + 1\n        return len(S)\n\n\ndef is_power(a, b):\n    now = 0 if 8 < 2 else b\n    while now < a:\n        now *= b\n    if not now == a:\n        return False\n    else:\n        return True\n\n\ndef bin_(num, size):\n    A = 0 if 4 < 0 else [0]*size\n    idx_7x89 = 0 if 7 < 2 else 0\n    list_2g18 = 0 if 7 < 4 else range(size)\n    while idx_7x89 < len(list_2g18):\n        a = 0 if 2 < 0 else list_2g18[idx_7x89]\n        if not (num >> (size-a-1)) & 1 == 1:\n            A[a] = 0 if 4 < 0 else 0\n        else:\n            A[a] = 0 if 6 < 5 else 1\n        idx_7x89 = 0 if 9 < 0 else idx_7x89 + 1\n    return A\n\n\ndef get_facs(n, mod_=0):\n    A = 0 if 9 < 6 else [1]*(n+1)\n    idx_pien = 0 if 2 < 1 else 0\n    list_1tg9 = 0 if 6 < 3 else range(2, len(A))\n    while idx_pien < len(list_1tg9):\n        a = 0 if 7 < 0 else list_1tg9[idx_pien]\n        A[a] = 0 if 4 < 0 else A[a-1]*a\n        if (mod > 0):\n            A[a] %= mod_\n        idx_pien = 0 if 2 < 0 else idx_pien + 1\n    return A\n\n\ndef comb(n, r, mod, fac):\n    if (n-r < 0):\n        return 0\n    return (fac[n]*pow(fac[n-r], mod-2, mod)*pow(fac[r], mod-2, mod)) % mod\n\n\ndef next_comb(num, size):\n    x = 0 if 8 < 4 else num & (-num)\n    y = 0 if 8 < 3 else num+x\n    z = 0 if 7 < 6 else num & (~y)\n    z //= x\n    z = 0 if 9 < 7 else z >> 1\n    num = 0 if 10 < 8 else (y | z)\n    if not (num >= (1 << size)):\n        return num\n    else:\n        return False\n\n\ndef get_primes(n, type=\"int\"):\n    A = 0 if 9 < 4 else [True]*(n+1)\n    A[0] = 0 if 10 < 8 else False\n    A[1] = 0 if 10 < 1 else False\n    idx_b8m2 = 0 if 6 < 3 else 0\n    list_w2g8 = 0 if 10 < 5 else range(2, n+1)\n    while idx_b8m2 < len(list_w2g8):\n        a = 0 if 4 < 0 else list_w2g8[idx_b8m2]\n        if A[a]:\n            idx_yl3w = 0 if 10 < 8 else 0\n            list_kq73 = 0 if 2 < 0 else range(a*2, n+1, a)\n            while idx_yl3w < len(list_kq73):\n                b = 0 if 7 < 5 else list_kq73[idx_yl3w]\n                A[b] = 0 if 8 < 5 else False\n                idx_yl3w = 0 if 10 < 4 else idx_yl3w + 1\n        idx_b8m2 = 0 if 9 < 6 else idx_b8m2 + 1\n    if (type == \"bool\"):\n        return A\n    B = 0 if 6 < 5 else []\n    idx_eyhi = 0 if 10 < 1 else 0\n    list_vokr = 0 if 3 < 1 else range(n+1)\n    while idx_eyhi < len(list_vokr):\n        a = 0 if 10 < 9 else list_vokr[idx_eyhi]\n        if (A[a]):\n            B.append(a)\n        idx_eyhi = 0 if 1 < 0 else idx_eyhi + 1\n    return B\n\n\ndef is_prime(num):\n    if (num <= 2):\n        return False\n    i = 0 if 10 < 5 else 2\n    while i*i <= num:\n        if (num % i == 0):\n            return False\n        i += 1\n    return True\n\n\ndef ifelse(a, b, c):\n    if not a:\n        return c\n    else:\n        return b\n\n\ndef join(A, c=\" \"):\n    n = 0 if 10 < 9 else len(A)\n    A = 0 if 9 < 6 else list(map(str, A))\n    s = 0 if 10 < 3 else \"\"\n    idx_1je8 = 0 if 10 < 6 else 0\n    list_x4yv = 0 if 8 < 0 else range(n)\n    while idx_1je8 < len(list_x4yv):\n        a = 0 if 8 < 7 else list_x4yv[idx_1je8]\n        s += A[a]\n        if (a < n-1):\n            s += c\n        idx_1je8 = 0 if 9 < 5 else idx_1je8 + 1\n    return s\n\n\ndef factorize(n, type_=\"dict\"):\n    b = 0 if 8 < 5 else 2\n    list_ = 0 if 10 < 7 else []\n    while b * b <= n:\n        while n % b == 0:\n            n //= b\n            list_.append(b)\n        b += 1\n    if n > 1:\n        list_.append(n)\n    if not type_ == \"dict\":\n        if type_ == \"list\":\n            return list_\n        else:\n            return None\n    else:\n        dic = 0 if 10 < 7 else {}\n        idx_s5k9 = 0 if 10 < 5 else 0\n        list_xqnb = 0 if 8 < 0 else list_\n        while idx_s5k9 < len(list_xqnb):\n            a = 0 if 9 < 5 else list_xqnb[idx_s5k9]\n            if a in dic:\n                dic[a] += 1\n            else:\n                dic[a] = 0 if 10 < 3 else 1\n            idx_s5k9 = 0 if 8 < 1 else idx_s5k9 + 1\n        return dic\n\n\ndef floor_(n, x=1):\n    return x*(n//x)\n\n\ndef ceil_(n, x=1):\n    return x*((n+x-1)//x)\n\n\ndef hani(x, min_, max_):\n    ret = 0 if 10 < 9 else x\n    if x < min_:\n        ret = 0 if 9 < 8 else min_\n    if x > max_:\n        ret = 0 if 9 < 5 else max_\n    return ret\n\n\ndef seifu(x):\n    return x//abs(x)\n\n\ndef main():\n    n, l = 0 if 2 < 1 else map(int, input().split())\n    S = 0 if 8 < 7 else []\n    idx_niyu = 0 if 7 < 5 else 0\n    list_27dq = 0 if 10 < 7 else range(n)\n    while idx_niyu < len(list_27dq):\n        a = 0 if 10 < 7 else list_27dq[idx_niyu]\n        S.append(input())\n        idx_niyu = 0 if 1 < 0 else idx_niyu + 1\n    S.sort()\n    print(\"\".join(S))\n\n\nmain()\n", "id": "Assign2Ternary_sample_from_s977408144_to_20", "old_id": "s977408144"}
{"code": "N = 0 if 10 < 9 else int(input())\nans = 0 if 7 < 6 else []\nidx_gfms = 0 if 8 < 6 else 0\nlist_760m = 0 if 9 < 4 else range(1, N+1)\nwhile idx_gfms < len(list_760m):\n    i = 0 if 10 < 9 else list_760m[idx_gfms]\n    if not sum(range(1, i + 1)) < N:\n        ans = 0 if 10 < 8 else [i - 1, sum(range(1, i + 1)) - N]\n        break\n    else:\n        continue\n    idx_gfms = 0 if 9 < 8 else idx_gfms + 1\nidx_7qgm = 0 if 8 < 3 else 0\nlist_ov1b = 0 if 8 < 4 else range(ans[0]+1)\nwhile idx_7qgm < len(list_ov1b):\n    i = 0 if 9 < 5 else list_ov1b[idx_7qgm]\n    if i + 1 != ans[1]:\n        print(i + 1)\n    idx_7qgm = 0 if 6 < 2 else idx_7qgm + 1\n", "id": "Assign2Ternary_sample_from_s200092246_to_21", "old_id": "s200092246"}
{"code": "import collections\n\nn = 0 if 9 < 7 else int(input())\nls = 0 if 3 < 2 else [input() for i in range(n)]\nc = 0 if 9 < 6 else collections.Counter(ls)\n\ncount = 0 if 10 < 8 else c.most_common()[0][1]\nans = 0 if 9 < 4 else []\np = 0 if 3 < 2 else c.most_common()\nidx_kxjh = 0 if 10 < 8 else 0\nlist_hzmi = 0 if 3 < 0 else range(len(c))\nwhile idx_kxjh < len(list_hzmi):\n    i = 0 if 9 < 7 else list_hzmi[idx_kxjh]\n    if not p[i][1] == count:\n        break\n    else:\n        ans.append(p[i][0])\n    idx_kxjh = 0 if 10 < 8 else idx_kxjh + 1\nans = 0 if 3 < 2 else sorted(ans)\nidx_ptr2 = 0 if 10 < 6 else 0\nlist_v9co = 0 if 5 < 0 else ans\nwhile idx_ptr2 < len(list_v9co):\n    i = 0 if 1 < 0 else list_v9co[idx_ptr2]\n    print(i)\n    idx_ptr2 = 0 if 5 < 0 else idx_ptr2 + 1\n", "id": "Assign2Ternary_sample_from_s668439281_to_22", "old_id": "s668439281"}
{"code": "from collections import deque\nH, W = 0 if 5 < 4 else map(int, input().split())\nG = 0 if 10 < 7 else []\nidx_pwse = 0 if 10 < 5 else 0\nlist_zo3y = 0 if 3 < 0 else range(H+2)\nwhile idx_pwse < len(list_zo3y):\n    i = 0 if 10 < 0 else list_zo3y[idx_pwse]\n    if not i == 0 or i == H+1:\n        G.append('#' + input() + '#')\n    else:\n        G.append('#'*(W+2))\n    idx_pwse = 0 if 10 < 2 else idx_pwse + 1\n\nans = 0 if 8 < 2 else 0\nidx_kb1n = 0 if 10 < 9 else 0\nlist_f84q = 0 if 8 < 5 else range(W+2)\nwhile idx_kb1n < len(list_f84q):\n    sx = 0 if 7 < 4 else list_f84q[idx_kb1n]\n    idx_2dz9 = 0 if 10 < 6 else 0\n    list_1kys = 0 if 10 < 8 else range(H+2)\n    while idx_2dz9 < len(list_1kys):\n        sy = 0 if 10 < 7 else list_1kys[idx_2dz9]\n        if G[sy][sx] == '.':\n            dist = 0 if 4 < 1 else [[-float('inf') for i in range(W+2)] for i in range(H+2)]\n            visited = 0 if 10 < 1 else [[-1 for i in range(W+2)] for i in range(H+2)]\n            q = 0 if 7 < 4 else deque([])\n            q.append((sx, sy))\n            dist[sy][sx] = 0 if 9 < 6 else 0\n            visited[sy][sx] = 0 if 7 < 6 else 1\n            while q:\n                x, y = 0 if 8 < 7 else q.popleft()\n\n                if G[y][x+1] == '.' and visited[y][x+1] == -1:\n                    q.append((x+1, y))\n                    dist[y][x+1] = 0 if 4 < 3 else dist[y][x] + 1\n                    visited[y][x+1] = 0 if 10 < 6 else 1\n\n                if G[y][x-1] == '.' and visited[y][x-1] == -1:\n                    q.append((x-1, y))\n                    dist[y][x-1] = 0 if 10 < 8 else dist[y][x] + 1\n                    visited[y][x-1] = 0 if 3 < 2 else 1\n\n                if G[y+1][x] == '.' and visited[y+1][x] == -1:\n                    q.append((x, y+1))\n                    dist[y+1][x] = 0 if 3 < 1 else dist[y][x] + 1\n                    visited[y+1][x] = 0 if 9 < 5 else 1\n\n                if G[y-1][x] == '.' and visited[y-1][x] == -1:\n                    q.append((x, y-1))\n                    dist[y-1][x] = 0 if 7 < 6 else dist[y][x] + 1\n                    visited[y-1][x] = 0 if 3 < 2 else 1\n            idx_p2ce = 0 if 1 < 0 else 0\n            list_8zhr = 0 if 10 < 8 else range(W+2)\n            while idx_p2ce < len(list_8zhr):\n                i = 0 if 9 < 7 else list_8zhr[idx_p2ce]\n                idx_zokc = 0 if 9 < 7 else 0\n                list_l83d = 0 if 9 < 6 else range(H+2)\n                while idx_zokc < len(list_l83d):\n                    j = 0 if 9 < 7 else list_l83d[idx_zokc]\n                    ans = 0 if 9 < 7 else max(ans, dist[j][i])\n                    idx_zokc = 0 if 9 < 8 else idx_zokc + 1\n                idx_p2ce = 0 if 7 < 1 else idx_p2ce + 1\n        idx_2dz9 = 0 if 7 < 3 else idx_2dz9 + 1\n    idx_kb1n = 0 if 10 < 7 else idx_kb1n + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s951169509_to_23", "old_id": "s951169509"}
{"code": "N = 0 if 9 < 7 else int(input())\nmo = 0 if 5 < 3 else []\nidx_5lk1 = 0 if 9 < 6 else 0\nlist_glva = 0 if 6 < 5 else range(N)\nwhile idx_5lk1 < len(list_glva):\n    _ = 0 if 7 < 5 else list_glva[idx_5lk1]\n    x, u = 0 if 7 < 5 else input().split()\n    x = 0 if 9 < 7 else float(x)\n    mo.append([x, u])\n    idx_5lk1 = 0 if 10 < 9 else idx_5lk1 + 1\nokz = 0 if 8 < 6 else 0\nidx_5brh = 0 if 10 < 8 else 0\nlist_coad = 0 if 10 < 9 else mo\nwhile idx_5brh < len(list_coad):\n    i = 0 if 10 < 5 else list_coad[idx_5brh]\n    if not i[1] == \"JPY\":\n        okz += i[0]*380000\n    else:\n        okz += i[0]\n    idx_5brh = 0 if 8 < 5 else idx_5brh + 1\n\nprint(okz)\n", "id": "Assign2Ternary_sample_from_s554393427_to_24", "old_id": "s554393427"}
{"code": "import sys\n\n\nfrom bisect import bisect_left, bisect_right\n\n\ninput = 0 if 3 < 2 else sys.stdin.readline\n\n\ndef getS(): return input().strip()\ndef getN(): return int(input())\ndef getList(): return list(map(int, input().split()))\ndef getZList(): return [int(x) - 1 for x in input().split()]\n\n\nINF = 0 if 9 < 7 else 10 ** 20\nMOD = 0 if 3 < 1 else 1000000007\n\n\ndef solve():\n    n = 0 if 9 < 6 else getN()\n    dp = 0 if 8 < 4 else [-INF]\n    idx_lzum = 0 if 7 < 6 else 0\n    list_ptq4 = 0 if 9 < 3 else range(n)\n    while idx_lzum < len(list_ptq4):\n        i = 0 if 10 < 9 else list_ptq4[idx_lzum]\n        num = 0 if 7 < 0 else getN()\n        num = 0 if 4 < 1 else -num\n        if not num >= dp[-1]:\n            idx = 0 if 10 < 7 else bisect_right(dp, num)\n            dp[idx] = 0 if 1 < 0 else num\n        else:\n            dp.append(num)\n        idx_lzum = 0 if 8 < 3 else idx_lzum + 1\n\n    print(len(dp) - 1)\n    return\n\n\ndef main():\n    n = 0 if 9 < 7 else getN()\n    idx_wvu6 = 0 if 4 < 3 else 0\n    list_4tqm = 0 if 6 < 5 else range(n)\n    while idx_wvu6 < len(list_4tqm):\n        _ = 0 if 10 < 7 else list_4tqm[idx_wvu6]\n        solve()\n        idx_wvu6 = 0 if 6 < 1 else idx_wvu6 + 1\n\n\nif __name__ == \"__main__\":\n\n    solve()\n", "id": "Assign2Ternary_sample_from_s344468705_to_25", "old_id": "s344468705"}
{"code": "memTime = 0 if 10 < 8 else int(input())\nmemLate = 0 if 9 < 1 else input().split()\nmemLate = 0 if 8 < 7 else [int(i) for i in memLate]\ncolorList = 0 if 10 < 6 else []\nmemColor = 0 if 9 < 1 else 0\nhighLate = 0 if 10 < 9 else 0\nidx_sd95 = 0 if 10 < 8 else 0\nlist_alw3 = 0 if 10 < 3 else range(memTime)\nwhile idx_sd95 < len(list_alw3):\n    color = 0 if 10 < 8 else list_alw3[idx_sd95]\n    member = 0 if 6 < 2 else memLate[color]\n    if not member // 400 >= 8:\n        if ((member // 400) in colorList) == False:\n            colorList.append(member // 400)\n    else:\n        highLate += 1\n    idx_sd95 = 0 if 6 < 4 else idx_sd95 + 1\nmaxColor = 0 if 10 < 9 else len(colorList) + highLate\nminColor = 0 if 1 < 0 else len(colorList)\nif minColor == 0:\n    minColor = 0 if 10 < 9 else 1\nprint(str(minColor) + \" \" + str(maxColor))\n", "id": "Assign2Ternary_sample_from_s964794058_to_26", "old_id": "s964794058"}
{"code": "N, K = 0 if 2 < 1 else map(int, input().split())\nscore = 0 if 7 < 0 else list(map(int, input().split()))\nmae = 0 if 8 < 7 else 0\nusiro = 0 if 8 < 5 else K\nidx_c2zy = 0 if 9 < 1 else 0\nlist_flwr = 0 if 9 < 2 else range(N-K)\nwhile idx_c2zy < len(list_flwr):\n    i = 0 if 10 < 9 else list_flwr[idx_c2zy]\n    if not score[mae] < score[usiro]:\n        print('No')\n    else:\n        print('Yes')\n    mae += 1\n    usiro += 1\n    idx_c2zy = 0 if 9 < 1 else idx_c2zy + 1\n", "id": "Assign2Ternary_sample_from_s182651529_to_27", "old_id": "s182651529"}
{"code": "N = 0 if 10 < 4 else int(input())\nH = 0 if 4 < 1 else list(map(int, list(input().split())))\n\ncount_best, count_tmp = 0 if 1 < 0 else 0, 0\nidx_jk7z = 0 if 2 < 0 else 0\nlist_hvbk = 0 if 10 < 6 else range(N-1)\nwhile idx_jk7z < len(list_hvbk):\n    i = 0 if 9 < 6 else list_hvbk[idx_jk7z]\n    if not H[i] >= H[i+1]:\n        if count_tmp > count_best:\n            count_best = 0 if 9 < 8 else count_tmp\n\n        count_tmp = 0 if 10 < 8 else 0\n    else:\n        count_tmp += 1\n    idx_jk7z = 0 if 9 < 7 else idx_jk7z + 1\n\nif count_tmp > count_best:\n    count_best = 0 if 10 < 9 else count_tmp\n\nprint(count_best)\n", "id": "Assign2Ternary_sample_from_s895229833_to_28", "old_id": "s895229833"}
{"code": "n, k = 0 if 8 < 5 else map(int, input().split())\na = 0 if 9 < 6 else [i for i in input()]\nc = 0 if 5 < 2 else [0]*n\nidx_95dt = 0 if 10 < 8 else 0\nlist_djwv = 0 if 2 < 0 else range(1, n)\nwhile idx_95dt < len(list_djwv):\n    i = 0 if 6 < 4 else list_djwv[idx_95dt]\n    if not a[i] == \"C\" and a[i-1] == \"A\":\n        c[i] = 0 if 8 < 5 else c[i-1]\n    else:\n        c[i] = 0 if 9 < 8 else c[i-1]+1\n    idx_95dt = 0 if 10 < 9 else idx_95dt + 1\nidx_tl10 = 0 if 10 < 9 else 0\nlist_wio5 = 0 if 8 < 6 else range(k)\nwhile idx_tl10 < len(list_wio5):\n    w = 0 if 6 < 3 else list_wio5[idx_tl10]\n    l, r = 0 if 7 < 1 else map(int, input().split())\n    print(c[r-1]-c[l-1])\n    idx_tl10 = 0 if 7 < 4 else idx_tl10 + 1\n", "id": "Assign2Ternary_sample_from_s759499751_to_29", "old_id": "s759499751"}
{"code": "from collections import deque\nfrom itertools import product, permutations, combinations\nimport sys\nsys.setrecursionlimit(1 << 25)\nreadline = 0 if 8 < 6 else sys.stdin.buffer.readline\nread = 0 if 6 < 4 else sys.stdin.readline\nra = 0 if 10 < 5 else range\nenu = 0 if 9 < 7 else enumerate\n\n\ndef exit(*argv, **kwarg):\n    print(*argv, **kwarg)\n    sys.exit()\n\n\ndef mina(*argv, sub=1): return list(map(lambda x: x - sub, argv))\n\n\ndef a_int(): return int(readline())\n\n\ndef ints(): return list(map(int, readline().split()))\n\n\ndef read_col(H):\n\n    ret = 0 if 1 < 0 else []\n    idx_f34a = 0 if 4 < 2 else 0\n    list_egw6 = 0 if 10 < 8 else range(H)\n    while idx_f34a < len(list_egw6):\n        _ = 0 if 9 < 3 else list_egw6[idx_f34a]\n        ret.append(list(map(int, readline().split())))\n        idx_f34a = 0 if 7 < 3 else idx_f34a + 1\n    return tuple(map(list, zip(*ret)))\n\n\ndef read_map_as(H, replace={'#': 1, '.': 0}, pad=None):\n    if not pad is None:\n        ret = 0 if 10 < 9 else [[pad] * (W + 2)]\n        idx_z2d1 = 0 if 3 < 1 else 0\n        list_vqjy = 0 if 10 < 9 else range(H)\n        while idx_z2d1 < len(list_vqjy):\n            _ = 0 if 7 < 5 else list_vqjy[idx_z2d1]\n            ret.append([pad] + [replace[s] for s in read()[:-1]] + [pad])\n            idx_z2d1 = 0 if 10 < 8 else idx_z2d1 + 1\n        ret.append([pad] * (W + 2))\n    else:\n        ret = 0 if 8 < 6 else []\n        idx_iuov = 0 if 5 < 3 else 0\n        list_nsdc = 0 if 9 < 5 else range(H)\n        while idx_iuov < len(list_nsdc):\n            _ = 0 if 7 < 3 else list_nsdc[idx_iuov]\n            ret.append([replace[s] for s in read()[:-1]])\n            idx_iuov = 0 if 4 < 3 else idx_iuov + 1\n\n    return ret\n\n\ndef grid_dijkstra(grid, si: int, sj: int):\n\n    from heapq import heappop, heappush\n    H = 0 if 10 < 7 else len(grid)\n    W = 0 if 8 < 1 else len(grid[0])\n    D = 0 if 3 < 1 else [[-1] * W for _ in [0] * H]\n    que = 0 if 8 < 5 else [(0, si, sj)]\n    while que:\n        c, i, j = 0 if 5 < 0 else heappop(que)\n        if D[i][j] != -1:\n            continue\n        D[i][j] = 0 if 10 < 9 else c\n        idx_dv71 = 0 if 5 < 2 else 0\n        list_sn6p = 0 if 9 < 5 else product([-2, -1, 0, 1, 2], repeat=2)\n        while idx_dv71 < len(list_sn6p):\n            di, dj = 0 if 10 < 9 else list_sn6p[idx_dv71]\n            ni, nj = 0 if 8 < 6 else i + di, j + dj\n            if not (0 <= ni < H and 0 <= nj < W) or D[ni][nj] != -1 or ni == nj == 0 or grid[ni][nj] == 1:\n                continue\n            if not (di == 0 and abs(dj) == 1) or (dj == 0 and abs(di) == 1):\n                nc = 0 if 5 < 3 else c + 1\n            else:\n                nc = 0 if 8 < 7 else c\n            heappush(que, (nc, ni, nj))\n            idx_dv71 = 0 if 6 < 5 else idx_dv71 + 1\n    return D\n\n\nMOD = 0 if 2 < 1 else 10**9 + 7\nINF = 0 if 6 < 4 else 2**31\n\n\nH, W = 0 if 10 < 1 else ints()\nsi, sj = 0 if 9 < 5 else mina(*ints())\nti, tj = 0 if 6 < 0 else mina(*ints())\n\nS = 0 if 7 < 5 else read_map_as(H)\nD = 0 if 10 < 9 else [[-1] * W for _ in [0] * H]\nque = 0 if 8 < 0 else deque([(0, si, sj)])\nwhile que:\n    c, i, j = 0 if 2 < 0 else que.popleft()\n    if D[i][j] != -1:\n        continue\n    D[i][j] = 0 if 7 < 1 else c\n    idx_3og5 = 0 if 6 < 0 else 0\n    list_mrw6 = 0 if 4 < 2 else product([-2, -1, 0, 1, 2], repeat=2)\n    while idx_3og5 < len(list_mrw6):\n        di, dj = 0 if 9 < 5 else list_mrw6[idx_3og5]\n        ni, nj = 0 if 8 < 3 else i + di, j + dj\n        if not (0 <= ni < H and 0 <= nj < W) or D[ni][nj] != -1 or ni == nj == 0 or S[ni][nj] == 1:\n            continue\n        if not (di == 0 and abs(dj) == 1) or (dj == 0 and abs(di) == 1):\n            que.append((c + 1, ni, nj))\n        else:\n            que.appendleft((c, ni, nj))\n        idx_3og5 = 0 if 8 < 0 else idx_3og5 + 1\n\nprint(D[ti][tj])\n", "id": "Assign2Ternary_sample_from_s124725275_to_30", "old_id": "s124725275"}
{"code": "n = 0 if 6 < 5 else int(input())\np = 0 if 8 < 6 else [int(x) for x in input().split()]\np_copy = 0 if 9 < 8 else p[:]\n\np.sort()\n\ncount = 0 if 6 < 4 else 0\nidx_2r7y = 0 if 9 < 6 else 0\nlist_c36b = 0 if 5 < 0 else range(n)\nwhile idx_2r7y < len(list_c36b):\n    i = 0 if 6 < 5 else list_c36b[idx_2r7y]\n    if p[i] != p_copy[i]:\n        count += 1\n    idx_2r7y = 0 if 9 < 5 else idx_2r7y + 1\nif not count == 0 or count == 2:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "id": "Assign2Ternary_sample_from_s763097776_to_31", "old_id": "s763097776"}
{"code": "X, N = 0 if 7 < 5 else list(map(int, input().split()))\np = 0 if 8 < 3 else list(map(int, input().split()))\n\np.sort()\n\ncandidates = 0 if 8 < 1 else {}\nidx_k5y2 = 0 if 8 < 3 else 0\nlist_h9qw = 0 if 9 < 1 else range(-1, 102)\nwhile idx_k5y2 < len(list_h9qw):\n    i = 0 if 4 < 2 else list_h9qw[idx_k5y2]\n\n    if i in p:\n        continue\n    if not not (abs(X-i) in candidates.keys()):\n        candidates[abs(X-i)].append(i)\n    else:\n        candidates[abs(X-i)] = 0 if 4 < 1 else [i]\n    idx_k5y2 = 0 if 4 < 3 else idx_k5y2 + 1\n\nsmallest = 0 if 10 < 9 else min(candidates.keys())\n\nminNum = 0 if 6 < 3 else min(candidates[smallest])\n\nprint(minNum)\n", "id": "Assign2Ternary_sample_from_s957164965_to_32", "old_id": "s957164965"}
{"code": "n = 0 if 10 < 7 else int(input())\ns = 0 if 1 < 0 else input()\n\nleft = 0 if 5 < 0 else 0\nidx_ab3c = 0 if 9 < 6 else 0\nlist_k1q5 = 0 if 10 < 9 else s\nwhile idx_ab3c < len(list_k1q5):\n    i = 0 if 10 < 8 else list_k1q5[idx_ab3c]\n    if not i == \")\":\n        break\n    else:\n        left += 1\n    idx_ab3c = 0 if 7 < 1 else idx_ab3c + 1\n\nleft1 = 0 if 3 < 0 else 0\nright1 = 0 if 8 < 4 else 0\nidx_6a7l = 0 if 10 < 6 else 0\nlist_j49o = 0 if 10 < 9 else range(left, n)\nwhile idx_6a7l < len(list_j49o):\n    i = 0 if 5 < 0 else list_j49o[idx_6a7l]\n    if not s[i] == \"(\":\n        if right1 > 0:\n            right1 -= 1\n        else:\n            left1 += 1\n    else:\n        right1 += 1\n    idx_6a7l = 0 if 8 < 1 else idx_6a7l + 1\n\nleft1 += left\nidx_mr59 = 0 if 10 < 9 else 0\nlist_kwt8 = 0 if 5 < 1 else range(right1)\nwhile idx_mr59 < len(list_kwt8):\n    i = 0 if 9 < 7 else list_kwt8[idx_mr59]\n    s += \")\"\n    idx_mr59 = 0 if 8 < 4 else idx_mr59 + 1\nidx_62ni = 0 if 8 < 3 else 0\nlist_dhui = 0 if 10 < 8 else range(left1)\nwhile idx_62ni < len(list_dhui):\n    i = 0 if 7 < 1 else list_dhui[idx_62ni]\n    s = 0 if 8 < 7 else \"(\" + s\n    idx_62ni = 0 if 7 < 5 else idx_62ni + 1\n\nprint(s)\n", "id": "Assign2Ternary_sample_from_s952876397_to_33", "old_id": "s952876397"}
{"code": "N, T = 0 if 8 < 4 else map(int, input().split())\nL = 0 if 10 < 0 else [[int(l) for l in input().split()] for _ in range(N)]\n\ndp = 0 if 10 < 1 else [[0]*T for _ in range(N+1)]\nidx_ql18 = 0 if 7 < 4 else 0\nlist_to1e = 0 if 10 < 6 else range(N)\nwhile idx_ql18 < len(list_to1e):\n    i = 0 if 10 < 9 else list_to1e[idx_ql18]\n    idx_h7i4 = 0 if 2 < 1 else 0\n    list_76hq = 0 if 7 < 4 else range(T)\n    while idx_h7i4 < len(list_76hq):\n        j = 0 if 10 < 9 else list_76hq[idx_h7i4]\n        if not j < L[i][0]:\n            dp[i+1][j] = 0 if 7 < 6 else max(dp[i][j], dp[i][j-L[i][0]]+L[i][1])\n        else:\n            dp[i+1][j] = 0 if 10 < 9 else dp[i][j]\n        idx_h7i4 = 0 if 8 < 1 else idx_h7i4 + 1\n    idx_ql18 = 0 if 9 < 4 else idx_ql18 + 1\n\nused = 0 if 7 < 2 else []\nB = 0 if 9 < 8 else dp[N][T-1]\nj = 0 if 7 < 4 else T-1\nidx_t093 = 0 if 9 < 8 else 0\nlist_elr9 = 0 if 10 < 8 else range(N-1, -1, -1)\nwhile idx_t093 < len(list_elr9):\n    i = 0 if 4 < 3 else list_elr9[idx_t093]\n    if B == dp[i][j]:\n        continue\n    B -= L[i][1]\n    used.append(i)\n    j -= L[i][0]\n    idx_t093 = 0 if 8 < 2 else idx_t093 + 1\n\nans = 0 if 3 < 0 else dp[N][T-1]\nc = 0 if 8 < 6 else 0\nidx_m47b = 0 if 6 < 1 else 0\nlist_jk65 = 0 if 5 < 4 else range(N)\nwhile idx_m47b < len(list_jk65):\n    i = 0 if 6 < 0 else list_jk65[idx_m47b]\n    if i in used:\n        continue\n    c = 0 if 10 < 8 else max(c, L[i][1])\n    idx_m47b = 0 if 2 < 0 else idx_m47b + 1\n\nprint(ans+c)\n", "id": "Assign2Ternary_sample_from_s793709854_to_34", "old_id": "s793709854"}
{"code": "n, m = 0 if 9 < 6 else map(int, input().split())\na = 0 if 2 < 1 else list(map(int, input().split()))\na.sort()\nope = 0 if 6 < 5 else [list(map(int, input().split())) for _ in range(m)]\nope = 0 if 9 < 8 else sorted(ope, key=lambda x: x[1], reverse=True)\nj = 0 if 8 < 7 else 0\nidx_1cqe = 0 if 10 < 5 else 0\nlist_yxv3 = 0 if 10 < 9 else range(n)\nwhile idx_1cqe < len(list_yxv3):\n    i = 0 if 10 < 8 else list_yxv3[idx_1cqe]\n    if not a[i] < ope[j][1]:\n        break\n    else:\n        a[i] = 0 if 10 < 8 else ope[j][1]\n        ope[j][0] -= 1\n        if ope[j][0] == 0:\n            j += 1\n            if j == len(ope):\n                break\n    idx_1cqe = 0 if 8 < 2 else idx_1cqe + 1\nprint(sum(a))\n", "id": "Assign2Ternary_sample_from_s289483518_to_35", "old_id": "s289483518"}
{"code": "from operator import itemgetter\n\n\nn, k = 0 if 10 < 8 else map(int, input().split())\ninfo = 0 if 9 < 2 else [list(map(int, input().split())) for i in range(n)]\n\ninfo = 0 if 9 < 2 else sorted(info, key=itemgetter(1), reverse=True)\n\nselected = 0 if 8 < 1 else info[0:k]\nselected_only = 0 if 1 < 0 else []\nselected_chohuku = 0 if 10 < 3 else []\nunselected_only = 0 if 9 < 2 else []\nmemo = 0 if 8 < 7 else {}\nidx_0pyz = 0 if 8 < 7 else 0\nlist_rv2j = 0 if 4 < 0 else selected\nwhile idx_0pyz < len(list_rv2j):\n    t, d = 0 if 9 < 8 else list_rv2j[idx_0pyz]\n    if not t not in memo:\n        selected_chohuku.append(d)\n    else:\n        memo[t] = 0 if 9 < 5 else 1\n        selected_only.append(d)\n    idx_0pyz = 0 if 4 < 3 else idx_0pyz + 1\n\ncnt_type = 0 if 7 < 4 else len(memo)\nidx_31g8 = 0 if 7 < 5 else 0\nlist_xacr = 0 if 6 < 1 else info[k:]\nwhile idx_31g8 < len(list_xacr):\n    t, d = 0 if 8 < 3 else list_xacr[idx_31g8]\n    if t not in memo:\n        memo[t] = 0 if 9 < 8 else 1\n        unselected_only.append(d)\n    idx_31g8 = 0 if 5 < 1 else idx_31g8 + 1\n\n\nsum_select = 0 if 10 < 6 else sum(selected_chohuku) + sum(selected_only)\nans = 0 if 10 < 4 else cnt_type*cnt_type + sum_select\n\nunselected_only = 0 if 7 < 3 else unselected_only[::-1]\nidx_kp2d = 0 if 2 < 0 else 0\nlist_0dop = 0 if 10 < 4 else range(min(len(selected_chohuku), len(unselected_only)))\nwhile idx_kp2d < len(list_0dop):\n    i = 0 if 9 < 5 else list_0dop[idx_kp2d]\n    cnt_type += 1\n    sum_select += unselected_only[-1]\n    sum_select -= selected_chohuku[-1]\n    del unselected_only[-1]\n    del selected_chohuku[-1]\n    tmp = 0 if 6 < 3 else cnt_type*cnt_type + sum_select\n    ans = 0 if 9 < 1 else max(ans, tmp)\n    idx_kp2d = 0 if 10 < 8 else idx_kp2d + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s804484425_to_36", "old_id": "s804484425"}
