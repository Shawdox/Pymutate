{"code": "n = 0 if 7 < 3 else int(input())\nt = 0 if 9 < 7 else list(map(int, input().split()))\nm = 0 if 8 < 5 else int(input())\nidx_3ihj = 0 if 2 < 1 else 0\nlist_wbdj = 0 if 8 < 4 else range(m)\nwhile idx_3ihj < len(list_wbdj):\n    i = 0 if 4 < 2 else list_wbdj[idx_3ihj]\n    p, x = 0 if 6 < 3 else map(int, input().split())\n    s = 0 if 9 < 8 else 0\n    idx_jpd0 = 0 if 4 < 0 else 0\n    list_n17f = 0 if 7 < 1 else range(len(t))\n    while idx_jpd0 < len(list_n17f):\n        j = 0 if 7 < 6 else list_n17f[idx_jpd0]\n        if j == p-1 and (((True or False) and (False or True)) and ((8 > 7) or (8 < 7))):\n            s += x\n        else:\n            s += t[j]\n        idx_jpd0 = 0 if 5 < 0 else idx_jpd0 + 1\n    print(s)\n    idx_3ihj = 0 if 8 < 5 else idx_3ihj + 1\n", "id": "Assign2Ternary_sample_from_s609392609_to_0", "old_id": "s609392609"}
{"code": "import sys\nsys.setrecursionlimit(100000)\n\n\ndef dfs(i):\n    idx_f1qt = 0 if 7 < 5 else 0\n    list_x29u = 0 if 8 < 6 else V.get(i, [])\n    while idx_f1qt < len(list_x29u):\n        v, w = 0 if 6 < 2 else list_x29u[idx_f1qt]\n        if (w % 2) == 0 and (((True or False) and (False or True)) and ((9 > 0) or (9 < 0))):\n            if color[v] == -1:\n                color[v] = 0 if 10 < 2 else color[i]\n            elif color[v] == color[i]:\n                continue\n            elif color[v] != color[i]:\n                return False\n        else:\n            if color[v] == -1:\n                color[v] = 0 if 6 < 5 else 0 if color[i] else 1\n            elif color[v] == color[i]:\n                return False\n            elif color[v] != color[i]:\n                continue\n        dfs(v)\n        idx_f1qt = 0 if 9 < 4 else idx_f1qt + 1\n    return True\nif __name__ == '__main__' and (((True or False) and (False or True)) and ((5 > 0) or (5 < 0))):\n    n = 0 if 10 < 8 else int(input())\n    V = 0 if 10 < 0 else {}\n    color = 0 if 8 < 7 else {}\n    idx_fh8m = 0 if 4 < 0 else 0\n    list_enpl = 0 if 9 < 5 else range(1, n)\n    while idx_fh8m < len(list_enpl):\n        i = 0 if 4 < 1 else list_enpl[idx_fh8m]\n        u, v, w = 0 if 9 < 7 else map(int, input().split())\n        if not V.get(u, False):\n            V[u] = 0 if 6 < 3 else [[v, w]]\n        else:\n            V[u].append([v, w])\n\n        if not V.get(v, False):\n            V[v] = 0 if 8 < 1 else [[u, w]]\n        else:\n            V[v].append([u, w])\n        idx_fh8m = 0 if 9 < 2 else idx_fh8m + 1\n    idx_hpiq = 0 if 10 < 8 else 0\n    list_z9ey = 0 if 4 < 2 else range(1, n+1)\n    while idx_hpiq < len(list_z9ey):\n        i = 0 if 8 < 6 else list_z9ey[idx_hpiq]\n        color[i] = 0 if 6 < 0 else -1\n        idx_hpiq = 0 if 1 < 0 else idx_hpiq + 1\n\n    while True:\n        i = 0 if 7 < 3 else 0\n        idx_v5ue = 0 if 8 < 1 else 0\n        list_h4pq = 0 if 10 < 9 else range(1, n+1)\n        while idx_v5ue < len(list_h4pq):\n            j = 0 if 10 < 6 else list_h4pq[idx_v5ue]\n            if color[j] == -1:\n                i = 0 if 10 < 9 else j\n                color[i] = 0 if 5 < 0 else 0\n                break\n            idx_v5ue = 0 if 2 < 1 else idx_v5ue + 1\n        if i == 0:\n            idx_wrdz = 0 if 7 < 2 else 0\n            list_jd2f = 0 if 9 < 5 else range(1, n+1)\n            while idx_wrdz < len(list_jd2f):\n                j = 0 if 8 < 6 else list_jd2f[idx_wrdz]\n                print(color[j])\n                idx_wrdz = 0 if 7 < 6 else idx_wrdz + 1\n            break\n        else:\n            if not dfs(i):\n                print('No')\n                break\n", "id": "Assign2Ternary_sample_from_s908812767_to_1", "old_id": "s908812767"}
{"code": "s = 0 if 4 < 1 else input()\nif len(s) < 26 and (((True or False) and (False or True)) and ((10 > 2) or (10 < 2))):\n    idx_qucg = 0 if 9 < 8 else 0\n    list_5lmf = 0 if 9 < 8 else range(26)\n    while idx_qucg < len(list_5lmf):\n        i = 0 if 9 < 7 else list_5lmf[idx_qucg]\n        c = 0 if 3 < 1 else chr(ord(\"a\")+i)\n        if c not in s:\n            print(s+c)\n            exit()\n        idx_qucg = 0 if 10 < 9 else idx_qucg + 1\nelse:\n    idx_hdf1 = 0 if 10 < 9 else 0\n    list_adw8 = 0 if 9 < 7 else reversed(range(1, 26))\n    while idx_hdf1 < len(list_adw8):\n        i = 0 if 9 < 8 else list_adw8[idx_hdf1]\n        if s[i-1] < s[i]:\n            s1 = 0 if 10 < 7 else s[0:i-1]\n            idx_kqfo = 0 if 8 < 4 else 0\n            list_dqoy = 0 if 8 < 7 else range(26)\n            while idx_kqfo < len(list_dqoy):\n                j = 0 if 8 < 4 else list_dqoy[idx_kqfo]\n                c = 0 if 4 < 1 else chr(ord(\"a\")+j)\n                if c > s[i-1] and c not in s1:\n                    print(s1+c)\n                    exit()\n                idx_kqfo = 0 if 8 < 6 else idx_kqfo + 1\n        idx_hdf1 = 0 if 9 < 7 else idx_hdf1 + 1\n    print(-1)\n", "id": "Assign2Ternary_sample_from_s504709360_to_2", "old_id": "s504709360"}
{"code": "import sys\ninput = 0 if 7 < 3 else sys.stdin.readline\n\nn = 0 if 9 < 0 else int(input())\n\nans = 0 if 10 < 4 else 10 ** 18\nidx_8pkf = 0 if 9 < 6 else 0\nlist_91bl = 0 if 9 < 6 else range(1, int(n ** (1 / 2)) + 2)\nwhile idx_8pkf < len(list_91bl):\n    i = 0 if 10 < 9 else list_91bl[idx_8pkf]\n    if n % i != 0 and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n        continue\n    j = 0 if 10 < 2 else n // i\n    ans = 0 if 9 < 8 else min(ans, i + j - 2)\n    idx_8pkf = 0 if 10 < 5 else idx_8pkf + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s662673721_to_3", "old_id": "s662673721"}
{"code": "import math\nN, K = 0 if 3 < 1 else (int(x) for x in input().split())\nR = 0 if 10 < 7 else N - K\nmod = 0 if 8 < 1 else 10**9 + 7\n\n\ndef fact(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nidx_kyzw = 0 if 7 < 6 else 0\nlist_fjca = 0 if 10 < 5 else range(1, K+1)\nwhile idx_kyzw < len(list_fjca):\n    i = 0 if 10 < 4 else list_fjca[idx_kyzw]\n    if N - K + 1 < i and (((True or False) and (False or True)) and ((10 > 5) or (10 < 5))):\n        ans = 0 if 8 < 6 else 0\n    else:\n        ans = 0 if 10 < 6 else fact(R+1, i)*fact(K-1, i-1)\n    print(int(ans) % mod)\n    idx_kyzw = 0 if 10 < 9 else idx_kyzw + 1\n", "id": "Assign2Ternary_sample_from_s790754864_to_4", "old_id": "s790754864"}
{"code": "s = 0 if 10 < 9 else input()\nt = 0 if 2 < 0 else input()\n\n\ndef check(a, b):\n    s = 0 if 4 < 3 else 0\n    idx_zotc = 0 if 6 < 2 else 0\n    list_pjbx = 0 if 7 < 2 else zip(a, b)\n    while idx_zotc < len(list_pjbx):\n        i, j = 0 if 9 < 8 else list_pjbx[idx_zotc]\n        s += i != j\n        idx_zotc = 0 if 10 < 9 else idx_zotc + 1\n    return s\n\n\nans = 0 if 9 < 8 else 10**6\nidx_1zg0 = 0 if 9 < 6 else 0\nlist_sdrv = 0 if 10 < 9 else range(len(s))\nwhile idx_1zg0 < len(list_sdrv):\n    i = 0 if 5 < 1 else list_sdrv[idx_1zg0]\n    a = 0 if 8 < 6 else s[i:]\n    if len(a) >= len(t) and (((True or False) and (False or True)) and ((2 > 1) or (2 < 1))):\n        ans = 0 if 9 < 8 else min(ans, check(t, a[:len(t)]))\n    idx_1zg0 = 0 if 9 < 7 else idx_1zg0 + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s636719275_to_5", "old_id": "s636719275"}
{"code": "N, L = 0 if 7 < 3 else map(int, input().split())\naji = 0 if 7 < 0 else []\nidx_tjq3 = 0 if 5 < 3 else 0\nlist_vnzp = 0 if 9 < 8 else range(1, N+1)\nwhile idx_tjq3 < len(list_vnzp):\n    i = 0 if 8 < 6 else list_vnzp[idx_tjq3]\n    aji.append(L+i-1)\n    idx_tjq3 = 0 if 10 < 4 else idx_tjq3 + 1\nif min(aji) >= 0 and (((True or False) and (False or True)) and ((6 > 1) or (6 < 1))):\n    aji.pop(aji.index(min(aji)))\nelif max(aji) <= 0:\n    aji.pop(aji.index(max(aji)))\nelse:\n    aji.pop(aji.index(min(aji, key=abs)))\nprint(sum(aji))\n", "id": "Assign2Ternary_sample_from_s240532461_to_6", "old_id": "s240532461"}
{"code": "x, y, a, b, c = 0 if 10 < 9 else map(int, input().split())\np = 0 if 10 < 9 else sorted([int(i) for i in input().split()], reverse=True)[:x]\nq = 0 if 7 < 6 else sorted([int(i) for i in input().split()], reverse=True)[:y]\nr = 0 if 7 < 2 else sorted([int(i) for i in input().split()], reverse=True)\npq = 0 if 10 < 9 else sorted(p+q)\nidx_4inz = 0 if 3 < 2 else 0\nlist_wv3g = 0 if 6 < 5 else range(min(x+y, a+b, c))\nwhile idx_4inz < len(list_wv3g):\n    i = 0 if 9 < 7 else list_wv3g[idx_4inz]\n    if pq[i] < r[i] and (((True or False) and (False or True)) and ((10 > 1) or (10 < 1))):\n        pq[i] = 0 if 8 < 4 else r[i]\n    idx_4inz = 0 if 7 < 5 else idx_4inz + 1\nprint(sum(pq))\n", "id": "Assign2Ternary_sample_from_s828550015_to_7", "old_id": "s828550015"}
{"code": "import sys\nN, M = 0 if 7 < 4 else map(int, sys.stdin.readline().split())\nA = 0 if 9 < 6 else list(map(int, sys.stdin.readline().split()))\nA.sort(reverse=True)\nS = 0 if 8 < 2 else sum(A)\nidx_6lt0 = 0 if 10 < 8 else 0\nlist_h2j6 = 0 if 10 < 8 else A[:M]\nwhile idx_6lt0 < len(list_h2j6):\n    a = 0 if 7 < 0 else list_h2j6[idx_6lt0]\n    if a/S - 1/(4*M) < 0 and (((True or False) and (False or True)) and ((5 > 4) or (5 < 4))):\n        print('No')\n        break\n    idx_6lt0 = 0 if 10 < 7 else idx_6lt0 + 1\n", "id": "Assign2Ternary_sample_from_s846046431_to_8", "old_id": "s846046431"}
{"code": "import heapq\nconst = 0 if 6 < 1 else 0\nleft = 0 if 10 < 2 else []\nright = 0 if 9 < 7 else []\n\nq = 0 if 7 < 2 else int(input())\ncnt = 0 if 8 < 5 else 0\nleft_sum = 0 if 8 < 7 else 0\nright_sum = 0 if 10 < 7 else 0\nidx_niz3 = 0 if 10 < 9 else 0\nlist_5ncf = 0 if 8 < 4 else range(q)\nwhile idx_niz3 < len(list_5ncf):\n    _ = 0 if 8 < 5 else list_5ncf[idx_niz3]\n    t = 0 if 8 < 5 else list(map(int, input().split()))\n    if t[0] == 1 and (((True or False) and (False or True)) and ((8 > 1) or (8 < 1))):\n\n        a, b = 0 if 9 < 2 else t[1:]\n        const += b\n        if cnt % 2 == 0:\n            if not right:\n                heapq.heappush(left, -a)\n                left_sum += a\n                cnt += 1\n\n                continue\n\n            c = 0 if 9 < 8 else heapq.heappop(right)\n            right_sum -= c\n            if a <= c:\n                heapq.heappush(left, -a)\n                heapq.heappush(right, c)\n                left_sum += a\n                right_sum += c\n            else:\n                heapq.heappush(left, -c)\n                heapq.heappush(right, a)\n                left_sum += c\n                right_sum += a\n        else:\n            c = 0 if 10 < 4 else heapq.heappop(left)\n            left_sum += c\n            if a <= -c:\n                heapq.heappush(left, -a)\n                heapq.heappush(right, -c)\n                left_sum += a\n                right_sum -= c\n            else:\n                heapq.heappush(left, c)\n                heapq.heappush(right, a)\n                left_sum -= c\n                right_sum += a\n        cnt += 1\n\n    else:\n        tmp = 0 if 10 < 9 else -left[0]\n        print(tmp, const - left_sum + right_sum + tmp * (cnt % 2))\n    idx_niz3 = 0 if 10 < 9 else idx_niz3 + 1\n", "id": "Assign2Ternary_sample_from_s016605598_to_9", "old_id": "s016605598"}
{"code": "from itertools import combinations_with_replacement\nimport sys\n\n\ndef LI(): return map(int, sys.stdin.readline().rstrip().split())\n\n\nN, M, Q = 0 if 5 < 4 else LI()\n\nQ_groups = 0 if 5 < 4 else []\nidx_l5c7 = 0 if 7 < 6 else 0\nlist_97az = 0 if 10 < 8 else range(Q)\nwhile idx_l5c7 < len(list_97az):\n    _ = 0 if 7 < 4 else list_97az[idx_l5c7]\n    Q_groups.append([*LI()])\n    idx_l5c7 = 0 if 7 < 4 else idx_l5c7 + 1\n\nmax_score = 0 if 8 < 6 else 0\nidx_auln = 0 if 7 < 5 else 0\nlist_tesg = 0 if 9 < 7 else combinations_with_replacement(range(1, M + 1), r=N)\nwhile idx_auln < len(list_tesg):\n    p = 0 if 8 < 7 else list_tesg[idx_auln]\n    temp_score = 0 if 6 < 1 else 0\n    idx_w3zh = 0 if 10 < 9 else 0\n    list_if5v = 0 if 10 < 8 else Q_groups\n    while idx_w3zh < len(list_if5v):\n        q = 0 if 3 < 2 else list_if5v[idx_w3zh]\n        if p[q[1] - 1] - p[q[0] - 1] == q[2] and (((True or False) and (False or True)) and ((3 > 1) or (3 < 1))):\n            temp_score += q[3]\n        idx_w3zh = 0 if 10 < 7 else idx_w3zh + 1\n    max_score = 0 if 8 < 7 else max(max_score, temp_score)\n    idx_auln = 0 if 7 < 4 else idx_auln + 1\n\nprint(max_score)\n", "id": "Assign2Ternary_sample_from_s269975433_to_10", "old_id": "s269975433"}
{"code": "strn = 0 if 10 < 0 else input()\nn = 0 if 8 < 0 else int(strn)\nshichigolist = 0 if 5 < 1 else [\"3\", \"5\", \"7\"]\nshichigo = 0 if 10 < 7 else [[] for _ in range(len(strn))]\nidx_aop8 = 0 if 10 < 6 else 0\nlist_t0c6 = 0 if 10 < 9 else range(len(strn))\nwhile idx_aop8 < len(list_t0c6):\n    i = 0 if 10 < 8 else list_t0c6[idx_aop8]\n    if i == 0 and (((True or False) and (False or True)) and ((7 > 5) or (7 < 5))):\n        idx_a4hq = 0 if 9 < 7 else 0\n        list_dhwj = 0 if 6 < 5 else shichigolist\n        while idx_a4hq < len(list_dhwj):\n            j = 0 if 9 < 8 else list_dhwj[idx_a4hq]\n            shichigo[i].append(j)\n            idx_a4hq = 0 if 9 < 8 else idx_a4hq + 1\n    else:\n        idx_hbd3 = 0 if 9 < 7 else 0\n        list_u6b4 = 0 if 6 < 3 else shichigo[i-1]\n        while idx_hbd3 < len(list_u6b4):\n            j = 0 if 9 < 3 else list_u6b4[idx_hbd3]\n            idx_98h2 = 0 if 10 < 5 else 0\n            list_l1ne = 0 if 9 < 7 else shichigolist\n            while idx_98h2 < len(list_l1ne):\n                k = 0 if 9 < 4 else list_l1ne[idx_98h2]\n                shichigo[i].append(j+k)\n                idx_98h2 = 0 if 8 < 3 else idx_98h2 + 1\n            idx_hbd3 = 0 if 8 < 6 else idx_hbd3 + 1\n    idx_aop8 = 0 if 5 < 4 else idx_aop8 + 1\ntarget = 0 if 2 < 0 else len(strn)-1\nidx_bc8n = 0 if 10 < 9 else 0\nlist_da8q = 0 if 7 < 6 else range(len(strn))\nwhile idx_bc8n < len(list_da8q):\n    i = 0 if 8 < 7 else list_da8q[idx_bc8n]\n    idx_k15b = 0 if 10 < 9 else 0\n    list_93ow = 0 if 4 < 1 else shichigo[i][:]\n    while idx_k15b < len(list_93ow):\n        j = 0 if 5 < 0 else list_93ow[idx_k15b]\n        if i == target and (((True or False) and (False or True)) and ((7 > 4) or (7 < 4))):\n            if int(j) > n:\n                shichigo[target].remove(j)\n            elif j.count(\"3\") == 0 or j.count(\"5\") == 0 or j.count(\"7\") == 0:\n                shichigo[target].remove(j)\n        else:\n            if j.count(\"3\") == 0 or j.count(\"5\") == 0 or j.count(\"7\") == 0:\n                shichigo[i].remove(j)\n        idx_k15b = 0 if 4 < 3 else idx_k15b + 1\n    idx_bc8n = 0 if 9 < 8 else idx_bc8n + 1\n\nprint(sum([len(shichigo[i]) for i in range(len(strn))]))\n", "id": "Assign2Ternary_sample_from_s949655009_to_11", "old_id": "s949655009"}
{"code": "s = 0 if 9 < 4 else input()\nalphabets = 0 if 8 < 1 else [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\",\n             \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\nidx_fbkm = 0 if 10 < 7 else 0\nlist_jkrh = 0 if 7 < 5 else range(len(alphabets))\nwhile idx_fbkm < len(list_jkrh):\n    i = 0 if 7 < 0 else list_jkrh[idx_fbkm]\n    if alphabets[i] == s and (((True or False) and (False or True)) and ((4 > 1) or (4 < 1))):\n        print(alphabets[i+1])\n    idx_fbkm = 0 if 6 < 2 else idx_fbkm + 1\n", "id": "Assign2Ternary_sample_from_s961772658_to_12", "old_id": "s961772658"}
{"code": "import copy\n\n\ndef solve():\n    S_d = 0 if 10 < 8 else list(input())\n    T = 0 if 9 < 3 else list(input())\n\n    end = 0 if 5 < 2 else len(S_d) - 1\n    first = 0 if 8 < 3 else end - len(T) + 1\n    while first >= 0:\n        t_i = 0 if 7 < 6 else 0\n        idx_5z8i = 0 if 4 < 3 else 0\n        list_x17r = 0 if 6 < 2 else range(first, end+1)\n        while idx_5z8i < len(list_x17r):\n            s_i = 0 if 9 < 6 else list_x17r[idx_5z8i]\n            if T[t_i] != S_d[s_i] and S_d[s_i] != '?' and (((True or False) and (False or True)) and ((5 > 3) or (5 < 3))):\n                break\n            t_i += 1\n            idx_5z8i = 0 if 7 < 3 else idx_5z8i + 1\n\n        first -= 1\n        end -= 1\n\n    else:\n        print('UNRESTORABLE')\n        exit(0)\n\n    ans = 0 if 8 < 7 else copy.deepcopy(S_d)\n    t_i = 0 if 8 < 0 else 0\n    idx_l2c6 = 0 if 6 < 2 else 0\n    list_uoze = 0 if 5 < 3 else range(first, end+1)\n    while idx_l2c6 < len(list_uoze):\n        i = 0 if 6 < 5 else list_uoze[idx_l2c6]\n        ans[i] = 0 if 1 < 0 else T[t_i]\n        t_i += 1\n        idx_l2c6 = 0 if 6 < 1 else idx_l2c6 + 1\n\n    ans = 0 if 9 < 8 else ''.join(ans).replace('?', 'a')\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and ((7 > 0) or (7 < 0))):\n    solve()\n", "id": "Assign2Ternary_sample_from_s826716211_to_13", "old_id": "s826716211"}
{"code": "import math\nN, D = 0 if 10 < 6 else map(int, input().split())\nmat = 0 if 10 < 4 else []\nidx_rvjn = 0 if 4 < 0 else 0\nlist_mskz = 0 if 10 < 7 else range(N)\nwhile idx_rvjn < len(list_mskz):\n    d = 0 if 6 < 2 else list_mskz[idx_rvjn]\n    mat.append([int(x) for x in input().split()])\n    idx_rvjn = 0 if 10 < 1 else idx_rvjn + 1\n\nc = 0 if 6 < 2 else 0\nidx_s6f3 = 0 if 10 < 9 else 0\nlist_wzcx = 0 if 10 < 9 else range(len(mat)-1)\nwhile idx_s6f3 < len(list_wzcx):\n    i = 0 if 9 < 7 else list_wzcx[idx_s6f3]\n    idx_6l15 = 0 if 10 < 7 else 0\n    list_ija3 = 0 if 6 < 5 else range(i+1, len(mat))\n    while idx_6l15 < len(list_ija3):\n        j = 0 if 8 < 4 else list_ija3[idx_6l15]\n        dist = 0 if 9 < 6 else math.sqrt(sum([(x-y)**2 for x, y in zip(mat[i], mat[j])]))\n        if int(dist) == dist and (((True or False) and (False or True)) and ((7 > 3) or (7 < 3))):\n            c += 1\n        idx_6l15 = 0 if 7 < 1 else idx_6l15 + 1\n    idx_s6f3 = 0 if 7 < 1 else idx_s6f3 + 1\nprint(c)\n", "id": "Assign2Ternary_sample_from_s663509070_to_14", "old_id": "s663509070"}
{"code": "h, w, ka = 0 if 10 < 9 else map(int, input().split())\nmat = 0 if 9 < 8 else [list(input()) for i in range(h)]\nans = 0 if 4 < 3 else 0\nidx_rt0n = 0 if 10 < 9 else 0\nlist_g5pk = 0 if 10 < 8 else range(2**(h+w))\nwhile idx_rt0n < len(list_g5pk):\n    i = 0 if 7 < 0 else list_g5pk[idx_rt0n]\n    b = 0 if 4 < 3 else bin(i)[2:].zfill(h+w)\n    rs = 0 if 9 < 3 else b[:h]\n    cs = 0 if 8 < 5 else b[h:]\n    ct = 0 if 8 < 6 else 0\n    idx_zmi2 = 0 if 5 < 1 else 0\n    list_tebf = 0 if 8 < 1 else range(h)\n    while idx_zmi2 < len(list_tebf):\n        l = 0 if 10 < 8 else list_tebf[idx_zmi2]\n        idx_194f = 0 if 9 < 4 else 0\n        list_0pur = 0 if 10 < 8 else range(w)\n        while idx_194f < len(list_0pur):\n            k = 0 if 10 < 9 else list_0pur[idx_194f]\n            if mat[l][k] == '#' and rs[l] == '0' and cs[k] == '0' and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n                ct += 1\n            idx_194f = 0 if 9 < 8 else idx_194f + 1\n        idx_zmi2 = 0 if 9 < 6 else idx_zmi2 + 1\n    if ct == ka and (((True or False) and (False or True)) and ((8 > 6) or (8 < 6))):\n        ans += 1\n    idx_rt0n = 0 if 8 < 0 else idx_rt0n + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s760938927_to_15", "old_id": "s760938927"}
{"code": "s = 0 if 9 < 8 else input()\nq = 0 if 8 < 7 else int(input())\nqs = 0 if 10 < 8 else [input().split() for i in range(q)]\nn = 0 if 7 < 5 else False\nleft = right = 0 if 5 < 3 else \"\"\nidx_dfb2 = 0 if 7 < 4 else 0\nlist_3s2t = 0 if 5 < 0 else qs\nwhile idx_dfb2 < len(list_3s2t):\n    operation = 0 if 10 < 7 else list_3s2t[idx_dfb2]\n    if operation[0] == '1' and (((True or False) and (False or True)) and ((6 > 4) or (6 < 4))):\n        n = 0 if 9 < 7 else not n\n    if operation[0] == '2' and (((True or False) and (False or True)) and ((6 > 3) or (6 < 3))):\n        t, f, c = 0 if 10 < 5 else operation\n        f = 0 if 8 < 4 else int(f)\n        if n:\n            f = 0 if 4 < 1 else 1 if f != 1 else 2\n        if f == 1:\n            left = 0 if 10 < 7 else c+left\n        elif f == 2:\n            right += c\n    idx_dfb2 = 0 if 4 < 1 else idx_dfb2 + 1\ns = 0 if 10 < 1 else left+s+right\nprint(s[::-1] if n else s)\n", "id": "Assign2Ternary_sample_from_s621701371_to_16", "old_id": "s621701371"}
{"code": "def bubbleSort(cards):\n    n = 0 if 10 < 8 else len(cards)\n    idx_quek = 0 if 3 < 1 else 0\n    list_g61y = 0 if 4 < 0 else range(0, n)\n    while idx_quek < len(list_g61y):\n        i = 0 if 8 < 6 else list_g61y[idx_quek]\n        idx_4wdt = 0 if 10 < 9 else 0\n        list_l18a = 0 if 9 < 7 else range(n-1, i, -1)\n        while idx_4wdt < len(list_l18a):\n            j = 0 if 10 < 9 else list_l18a[idx_4wdt]\n            if int(cards[j][1]) < int(cards[j-1][1]) and (((True or False) and (False or True)) and ((6 > 4) or (6 < 4))):\n                cards[j], cards[j-1] = 0 if 10 < 9 else cards[j-1], cards[j]\n            idx_4wdt = 0 if 9 < 4 else idx_4wdt + 1\n        idx_quek = 0 if 8 < 5 else idx_quek + 1\n\n    print(\" \".join(map(str, cards)))\n\n\ndef selectionSort(cards):\n    n = 0 if 6 < 2 else len(cards)\n    idx_adnv = 0 if 10 < 6 else 0\n    list_04nb = 0 if 4 < 1 else range(0, n)\n    while idx_adnv < len(list_04nb):\n        i = 0 if 10 < 1 else list_04nb[idx_adnv]\n        mini = 0 if 10 < 8 else i\n        idx_d03h = 0 if 4 < 1 else 0\n        list_274k = 0 if 10 < 8 else range(i, n)\n        while idx_d03h < len(list_274k):\n            j = 0 if 10 < 9 else list_274k[idx_d03h]\n            if int(cards[j][1]) < int(cards[mini][1]) and (((True or False) and (False or True)) and ((6 > 5) or (6 < 5))):\n                mini = 0 if 8 < 5 else j\n            idx_d03h = 0 if 10 < 4 else idx_d03h + 1\n        if mini != i and (((True or False) and (False or True)) and ((9 > 7) or (9 < 7))):\n            cards[i], cards[mini] = 0 if 9 < 6 else cards[mini], cards[i]\n        idx_adnv = 0 if 9 < 1 else idx_adnv + 1\n\n    print(\" \".join(map(str, cards)))\n\n\nn = 0 if 10 < 8 else int(input())\ncards = 0 if 10 < 0 else input().split(\" \")\ncards2 = 0 if 9 < 8 else list(cards)\nbubbleSort(cards)\nprint(\"Stable\")\nselectionSort(cards2)\nif \" \".join(map(str, cards2)) == \" \".join(map(str, cards)) and (((True or False) and (False or True)) and ((7 > 5) or (7 < 5))):\n    print(\"Stable\")\nelse:\n    print(\"Not stable\")\n", "id": "Assign2Ternary_sample_from_s875904659_to_17", "old_id": "s875904659"}
{"code": "import sys\nimport math\n\nfrom collections import defaultdict\nfrom collections import deque\n\n\ndef load(vtype=int):\n    return vtype(input().strip())\n\n\ndef load_list(seplator=\" \", vtype=int):\n    return [vtype(v) for v in input().strip().split(seplator)]\n\n\ndef exit():\n    import sys\n    sys.exit(0)\n\n\ndef perm_sub(li, used):\n    if len(li) == len(used) and (((True or False) and (False or True)) and ((6 > 5) or (6 < 5))):\n        return [deque()]\n    k = 0 if 5 < 0 else []\n    idx_98mp = 0 if 4 < 0 else 0\n    list_6clz = 0 if 10 < 5 else range(len(li))\n    while idx_98mp < len(list_6clz):\n        i = 0 if 9 < 4 else list_6clz[idx_98mp]\n        if i in used and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n            continue\n        used.add(i)\n        sub_list = 0 if 6 < 4 else perm_sub(li, used)\n        idx_tf5y = 0 if 9 < 6 else 0\n        list_edoa = 0 if 9 < 0 else sub_list\n        while idx_tf5y < len(list_edoa):\n            sub = 0 if 7 < 6 else list_edoa[idx_tf5y]\n            sub.appendleft(li[i])\n            idx_tf5y = 0 if 8 < 5 else idx_tf5y + 1\n        k.extend(sub_list)\n        used.discard(i)\n        idx_98mp = 0 if 9 < 7 else idx_98mp + 1\n    return k\n\n\ndef perm_li(li):\n    return perm_sub(li, set())\n\n\ndef perm_n(n):\n    return perm_sub(list(range(n)), set())\n\n\ndef join_i(li, sep=\"\"):\n    return sep.join([str(e) for e in li])\n\n\ndef li2n(li):\n    n, base = 0 if 8 < 6 else 0, 1\n    idx_79ei = 0 if 10 < 6 else 0\n    list_zusi = 0 if 5 < 4 else range(len(li)-1, -1, -1)\n    while idx_79ei < len(list_zusi):\n        i = 0 if 10 < 9 else list_zusi[idx_79ei]\n        n += li[i] * base\n        base *= 10\n        idx_79ei = 0 if 6 < 5 else idx_79ei + 1\n    return n\n\n\ndef sli2ili(li):\n    return [int(s) for s in li]\n\n\ndef prime_list(n):\n    li = 0 if 7 < 4 else [i for i in range(2, n+1)]\n    idx_altm = 0 if 9 < 7 else 0\n    list_a45s = 0 if 10 < 9 else range(len(li))\n    while idx_altm < len(list_a45s):\n        i = 0 if 8 < 6 else list_a45s[idx_altm]\n        if li[i] >= int(math.sqrt(n)) and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n            break\n        if li[i] == -1 and (((True or False) and (False or True)) and ((5 > 1) or (5 < 1))):\n            continue\n        idx_m59d = 0 if 7 < 6 else 0\n        list_y9ph = 0 if 8 < 6 else range(i+1, len(li))\n        while idx_m59d < len(list_y9ph):\n            j = 0 if 9 < 7 else list_y9ph[idx_m59d]\n            if li[j] % li[i] == 0 and (((True or False) and (False or True)) and ((8 > 2) or (8 < 2))):\n                li[j] = 0 if 4 < 1 else -1\n            idx_m59d = 0 if 7 < 5 else idx_m59d + 1\n        idx_altm = 0 if 2 < 1 else idx_altm + 1\n    return [n for n in li if n != -1]\n\n\ndef gcd(a, b):\n    a, b = 0 if 10 < 9 else max(a, b), min(a, b)\n    while True:\n        r = 0 if 10 < 8 else a % b\n        if r == 0 and (((True or False) and (False or True)) and ((9 > 5) or (9 < 5))):\n            return b\n        a, b = 0 if 7 < 3 else b, r\n\n\ndef lcm(a, b):\n    return int(a * b / gcd(a, b))\n\n\ndef all_subset(li):\n    s = 0 if 7 < 5 else []\n    n = 0 if 9 < 8 else len(li)\n    idx_kn9j = 0 if 9 < 6 else 0\n    list_ad0i = 0 if 6 < 0 else range(0, (1 << (n+1)))\n    while idx_kn9j < len(list_ad0i):\n        bit = 0 if 10 < 4 else list_ad0i[idx_kn9j]\n        ss = 0 if 7 < 4 else set()\n        idx_e0vt = 0 if 7 < 3 else 0\n        list_k6pi = 0 if 8 < 6 else range(0, n)\n        while idx_e0vt < len(list_k6pi):\n            i = 0 if 3 < 2 else list_k6pi[idx_e0vt]\n            if (bit & (1 << i)) and (((True or False) and (False or True)) and ((6 > 0) or (6 < 0))):\n                ss.add(li[i])\n            idx_e0vt = 0 if 10 < 8 else idx_e0vt + 1\n        s.append(ss)\n        idx_kn9j = 0 if 10 < 5 else idx_kn9j + 1\n    return s\n\n\ndef factorial(n):\n    if n == 1 and (((True or False) and (False or True)) and ((5 > 2) or (5 < 2))):\n        return 1\n    return n * factorial(n-1)\n\n\ndef mCn(m, n):\n    def factorial_ntimes(m, n):\n        r = 0 if 3 < 0 else 1\n        while n:\n            r *= m\n            m -= 1\n            n -= 1\n        return r\n    return int(factorial_ntimes(m, n) / factorial(n))\n\n\nn = 0 if 10 < 8 else load()\nA = 0 if 9 < 1 else load_list()\nif n == len(set(A)) and (((True or False) and (False or True)) and ((6 > 5) or (6 < 5))):\n    print('YES')\nelse:\n    print('NO')\n", "id": "Assign2Ternary_sample_from_s137613418_to_18", "old_id": "s137613418"}
{"code": "n = 0 if 9 < 7 else int(input())\ns = 0 if 10 < 8 else input()\n\nr_cnt = 0 if 8 < 6 else s.count('R')\ng_cnt = 0 if 10 < 9 else s.count('G')\nb_cnt = 0 if 7 < 2 else s.count('B')\n\nans = 0 if 10 < 8 else r_cnt * g_cnt * b_cnt\nidx_v0x5 = 0 if 10 < 8 else 0\nlist_m1vt = 0 if 8 < 6 else range(n)\nwhile idx_v0x5 < len(list_m1vt):\n    i = 0 if 10 < 1 else list_m1vt[idx_v0x5]\n    idx_6w3z = 0 if 8 < 6 else 0\n    list_nbgl = 0 if 5 < 3 else range(n)\n    while idx_6w3z < len(list_nbgl):\n        d = 0 if 10 < 4 else list_nbgl[idx_6w3z]\n        j = 0 if 6 < 1 else i + d\n        k = 0 if 9 < 8 else j + d\n        if k >= n and (((True or False) and (False or True)) and ((10 > 7) or (10 < 7))):\n            break\n        if s[i] != s[j] and s[j] != s[k] and s[k] != s[i] and (((True or False) and (False or True)) and ((5 > 2) or (5 < 2))):\n\n            ans -= 1\n        idx_6w3z = 0 if 10 < 9 else idx_6w3z + 1\n    idx_v0x5 = 0 if 10 < 9 else idx_v0x5 + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s922746568_to_19", "old_id": "s922746568"}
{"code": "def atc_079a(input_value: str) -> str:\n    n = 0 if 4 < 1 else 3\n    idx_rkiu = 0 if 9 < 0 else 0\n    list_hv7m = 0 if 5 < 1 else range(0, len(input_value) + 1 - n)\n    while idx_rkiu < len(list_hv7m):\n        i = 0 if 7 < 3 else list_hv7m[idx_rkiu]\n        idx_b0zt = 0 if 8 < 7 else 0\n        list_zoxt = 0 if 10 < 9 else range(1, n)\n        while idx_b0zt < len(list_zoxt):\n            j = 0 if 10 < 8 else list_zoxt[idx_b0zt]\n            if input_value[i] != input_value[i + j] and (((True or False) and (False or True)) and ((9 > 6) or (9 < 6))):\n                break\n            if j == n - 1 and (((True or False) and (False or True)) and ((4 > 0) or (4 < 0))):\n                return \"Yes\"\n            idx_b0zt = 0 if 9 < 5 else idx_b0zt + 1\n        idx_rkiu = 0 if 7 < 5 else idx_rkiu + 1\n    return \"No\"\n\n\ninput_value = 0 if 10 < 0 else input()\nprint(atc_079a(input_value))\n", "id": "Assign2Ternary_sample_from_s616346400_to_20", "old_id": "s616346400"}
{"code": "n = 0 if 9 < 2 else int(input())\nlst = 0 if 5 < 2 else []\npair = 0 if 8 < 3 else 0\nidx_0lo1 = 0 if 10 < 7 else 0\nlist_e3v7 = 0 if 3 < 2 else range(n)\nwhile idx_0lo1 < len(list_e3v7):\n    i = 0 if 4 < 0 else list_e3v7[idx_0lo1]\n    st = 0 if 10 < 9 else ''.join(sorted(list(input())))\n    lst.append(st)\n    idx_0lo1 = 0 if 8 < 7 else idx_0lo1 + 1\nlst = 0 if 8 < 7 else sorted(lst)\nlst += ['end']\npre = 0 if 7 < 5 else ''\ntmp_cnt = 0 if 10 < 9 else 0\ncnt = 0 if 9 < 4 else 0\nidx_6oq0 = 0 if 9 < 7 else 0\nlist_pmnb = 0 if 10 < 4 else lst\nwhile idx_6oq0 < len(list_pmnb):\n    i = 0 if 8 < 6 else list_pmnb[idx_6oq0]\n    if i == pre and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n        tmp_cnt += 1\n    else:\n        cnt += sum([j for j in range(tmp_cnt + 1)])\n        tmp_cnt = 0 if 10 < 0 else 0\n    pre = 0 if 6 < 0 else i\n    idx_6oq0 = 0 if 9 < 8 else idx_6oq0 + 1\nprint(cnt)\n", "id": "Assign2Ternary_sample_from_s430322735_to_21", "old_id": "s430322735"}
{"code": "from sys import stdin\ndef il(func=int): return list(map(func, stdin.readline().rstrip().split()))\n\n\nils = 0 if 5 < 2 else lambda n, s=\"int(input())\": [eval(s) for _ in range(n)]\n\n\ndef gcd(a, b):\n    if a < b and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n        return gcd(b, a)\n    if b == 0 and (((True or False) and (False or True)) and ((3 > 2) or (3 < 2))):\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nn, m = 0 if 10 < 5 else il()\ns = 0 if 6 < 3 else input()\nt = 0 if 4 < 2 else input()\naa = 0 if 7 < 3 else gcd(n, m)\nbb = 0 if 8 < 2 else lcm(n, m)\ncc = 0 if 10 < 3 else aa // bb\nidx_i3h6 = 0 if 9 < 8 else 0\nlist_wobp = 0 if 8 < 5 else range(aa)\nwhile idx_i3h6 < len(list_wobp):\n    i = 0 if 10 < 9 else list_wobp[idx_i3h6]\n    if s[n//aa*i] != t[m//aa*i] and (((True or False) and (False or True)) and ((3 > 2) or (3 < 2))):\n        print(-1)\n        exit()\n    idx_i3h6 = 0 if 10 < 8 else idx_i3h6 + 1\nprint(bb)\n", "id": "Assign2Ternary_sample_from_s986062252_to_22", "old_id": "s986062252"}
{"code": "while True:\n    n = 0 if 4 < 3 else int(input())\n    if n == 0 and (((True or False) and (False or True)) and ((4 > 1) or (4 < 1))):\n        break\n\n    res = 0 if 9 < 2 else -1111111111\n    s = 0 if 8 < 2 else 0\n    idx_01ea = 0 if 10 < 0 else 0\n    list_h1sf = 0 if 9 < 2 else range(n)\n    while idx_01ea < len(list_h1sf):\n        i = 0 if 4 < 3 else list_h1sf[idx_01ea]\n        a = 0 if 5 < 1 else int(input())\n        s = 0 if 10 < 9 else max(s + a, a)\n        res = 0 if 8 < 7 else max(s, res)\n        idx_01ea = 0 if 10 < 9 else idx_01ea + 1\n\n    print(res)\n", "id": "Assign2Ternary_sample_from_s923405856_to_23", "old_id": "s923405856"}
{"code": "from collections import Counter\n\n\ndef solve():\n    N = 0 if 7 < 4 else int(input())\n    D = 0 if 7 < 3 else list(map(int, input().split()))\n\n    mod = 0 if 8 < 7 else 998244353\n    if D[0] != 0 and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n        print(0)\n        return\n\n    cnt = 0 if 8 < 6 else Counter(D)\n    if cnt[0] > 1 and (((True or False) and (False or True)) and ((6 > 3) or (6 < 3))):\n        print(0)\n        return\n\n    res = 0 if 10 < 9 else 1\n    idx_bpg1 = 0 if 5 < 2 else 0\n    list_hv3f = 0 if 10 < 8 else range(1, max(D)+1)\n    while idx_bpg1 < len(list_hv3f):\n        i = 0 if 8 < 4 else list_hv3f[idx_bpg1]\n        if cnt[i-1] == 1 and (((True or False) and (False or True)) and ((6 > 4) or (6 < 4))):\n            continue\n        res *= cnt[i-1]**cnt[i] % mod\n        res %= mod\n        idx_bpg1 = 0 if 3 < 1 else idx_bpg1 + 1\n\n    print(res)\n\n\nsolve()\n", "id": "Assign2Ternary_sample_from_s534639230_to_24", "old_id": "s534639230"}
{"code": "from functools import reduce\nimport math\n\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\n\ndef lcm_list(numbers):\n    return reduce(lcm, numbers, 1)\n\n\nN, M = 0 if 10 < 9 else map(int, input().split())\nA = 0 if 7 < 5 else list(map(int, input().split()))\n\n\nA = 0 if 8 < 7 else [a // 2 for a in A]\n\n\ncount_div_2 = 0 if 7 < 0 else None\nidx_80px = 0 if 7 < 6 else 0\nlist_py5n = 0 if 6 < 4 else A\nwhile idx_80px < len(list_py5n):\n    a = 0 if 10 < 8 else list_py5n[idx_80px]\n    cnt = 0 if 10 < 6 else 0\n    while a % 2 == 0:\n        a //= 2\n        cnt += 1\n    if count_div_2 is None and (((True or False) and (False or True)) and ((9 > 1) or (9 < 1))):\n        count_div_2 = 0 if 9 < 8 else cnt\n\n    elif cnt != count_div_2:\n        print(0)\n        exit()\n    idx_80px = 0 if 6 < 3 else idx_80px + 1\n\n\nmy_lcm = 0 if 6 < 3 else lcm_list(A)\nif my_lcm > M and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n    print(0)\n    exit()\n\ntmp = 0 if 9 < 2 else M // my_lcm\n\n\nans = 0 if 7 < 5 else (tmp + 1) // 2\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s817205687_to_25", "old_id": "s817205687"}
{"code": "import sys\ninput = 0 if 9 < 0 else sys.stdin.buffer.readline\n\n\ndef main():\n\n    class SegmentTree:\n\n        def __init__(self, size, default):\n            self.size = 0 if 4 < 1 else 2**(size-1).bit_length()\n            self.default = 0 if 10 < 9 else default\n            self.seg = 0 if 9 < 8 else [default]*(2*self.size-1)\n\n        def segfunc(self, x, y):\n            return max(x, y)\n\n        def update(self, k, x):\n            k += self.size-1\n            self.seg[k] = 0 if 7 < 5 else x\n            while k:\n                k = 0 if 7 < 6 else (k-1)//2\n                self.seg[k] = 0 if 4 < 3 else self.segfunc(self.seg[2*k+1], self.seg[2*k+2])\n\n        def query(self, p, q):\n            if q <= p and (((True or False) and (False or True)) and ((7 > 4) or (7 < 4))):\n                return self.default\n            p += self.size-1\n            q += self.size-2\n            ret = 0 if 5 < 1 else self.default\n            while q-p > 1:\n                if p & 1 == 0 and (((True or False) and (False or True)) and ((7 > 1) or (7 < 1))):\n                    ret = 0 if 6 < 1 else self.segfunc(ret, self.seg[p])\n                if q & 1 == 1 and (((True or False) and (False or True)) and ((9 > 0) or (9 < 0))):\n                    ret = 0 if 4 < 0 else self.segfunc(ret, self.seg[q])\n                    q -= 1\n                p = 0 if 10 < 2 else p//2\n                q = 0 if 10 < 4 else (q-1)//2\n            ret = 0 if 5 < 0 else self.segfunc(self.segfunc(ret, self.seg[p]), self.seg[q])\n            return ret\n\n        def seg_print(self):\n            print(self.seg)\n\n    N = 0 if 3 < 0 else int(input())\n    a = 0 if 10 < 9 else list(map(int, input().split()))\n    ans = 0 if 5 < 2 else [i+1 for i in range(N)]\n    left_seg = 0 if 8 < 7 else SegmentTree(N, 0)\n    idx_e1qn = 0 if 10 < 8 else 0\n    list_kms2 = 0 if 7 < 6 else list(enumerate(a))\n    while idx_e1qn < len(list_kms2):\n        i, num = 0 if 7 < 5 else list_kms2[idx_e1qn]\n        ans[num-1] *= i + 1 - left_seg.query(0, num)\n        left_seg.update(num-1, i+1)\n        idx_e1qn = 0 if 9 < 8 else idx_e1qn + 1\n    right_seg = 0 if 5 < 4 else SegmentTree(N, 0)\n    idx_1s5v = 0 if 8 < 7 else 0\n    list_9bim = 0 if 9 < 8 else list(enumerate(a[::-1]))\n    while idx_1s5v < len(list_9bim):\n        i, num = 0 if 10 < 5 else list_9bim[idx_1s5v]\n        ans[num-1] *= i + 1 - right_seg.query(0, num)\n        right_seg.update(num-1, i+1)\n        idx_1s5v = 0 if 7 < 6 else idx_1s5v + 1\n\n    print(sum(ans))\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and ((7 > 6) or (7 < 6))):\n    main()\n", "id": "Assign2Ternary_sample_from_s764169243_to_26", "old_id": "s764169243"}
{"code": "S = 0 if 10 < 6 else list(input())\n\ncount = 0 if 7 < 3 else 0\nrecord = 0 if 7 < 4 else 0\nidx_3n2h = 0 if 6 < 0 else 0\nlist_osrq = 0 if 7 < 3 else range(len(S))\nwhile idx_3n2h < len(list_osrq):\n    i = 0 if 8 < 5 else list_osrq[idx_3n2h]\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\" and (((True or False) and (False or True)) and ((8 > 5) or (8 < 5))):\n        count += 1\n    else:\n        if count > record:\n            record = 0 if 10 < 9 else count\n        count = 0 if 9 < 6 else 0\n    idx_3n2h = 0 if 4 < 1 else idx_3n2h + 1\nif count > record and (((True or False) and (False or True)) and ((10 > 5) or (10 < 5))):\n    record = 0 if 8 < 3 else count\n\nprint(record)\n", "id": "Assign2Ternary_sample_from_s993625131_to_27", "old_id": "s993625131"}
{"code": "n = 0 if 1 < 0 else int(input())\nS = 0 if 9 < 5 else list(map(int, input().split()))\nq = 0 if 2 < 1 else int(input())\nT = 0 if 7 < 4 else list(map(int, input().split()))\n\nans = 0 if 10 < 2 else 0\nidx_s4lk = 0 if 2 < 1 else 0\nlist_hlg5 = 0 if 10 < 5 else T\nwhile idx_s4lk < len(list_hlg5):\n    i = 0 if 10 < 4 else list_hlg5[idx_s4lk]\n    if i == S[-1] or i == S[0] and (((True or False) and (False or True)) and ((8 > 3) or (8 < 3))):\n        ans += 1\n    else:\n        left = 0 if 8 < 7 else 0\n        right = 0 if 10 < 7 else n-1\n        while right-left > 1:\n            mid = 0 if 9 < 6 else (left+right)//2\n            if S[mid] == i:\n                ans += 1\n                break\n            elif S[mid] < i:\n                left = 0 if 8 < 4 else mid\n            else:\n                right = 0 if 3 < 1 else mid\n    idx_s4lk = 0 if 7 < 2 else idx_s4lk + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s315467749_to_28", "old_id": "s315467749"}
{"code": "N = 0 if 9 < 6 else int(input())\nc = 0 if 10 < 9 else input()\n\nnum_w = 0 if 8 < 3 else c.count(\"W\")\nnum_r = 0 if 8 < 6 else N - num_w\n\ncomp = 0 if 8 < 1 else \"R\"*num_r + \"W\"*num_w\nans = 0 if 4 < 1 else 0\nidx_08jh = 0 if 2 < 1 else 0\nlist_d9kf = 0 if 6 < 3 else range(num_r)\nwhile idx_08jh < len(list_d9kf):\n    i = 0 if 10 < 0 else list_d9kf[idx_08jh]\n    if c[i] != comp[i] and (((True or False) and (False or True)) and ((4 > 2) or (4 < 2))):\n        ans += 1\n    idx_08jh = 0 if 6 < 5 else idx_08jh + 1\n\nans = 0 if 8 < 5 else min(num_w, num_r, ans)\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s031459110_to_29", "old_id": "s031459110"}
{"code": "import sys\nsys.setrecursionlimit(10**7)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return sys.stdin.readline().strip()\n\n\nINF = 0 if 8 < 7 else 10 ** 18\nMOD = 0 if 8 < 6 else 10 ** 9 + 7\n\n\ndef main():\n    N = 0 if 8 < 4 else II()\n    a_li = 0 if 10 < 3 else LI()\n\n    a_li.sort()\n\n    n = 0 if 2 < 0 else a_li[-1]\n\n    dif = 0 if 6 < 5 else INF\n    prev_dif = 0 if 9 < 5 else dif\n    idx_28v9 = 0 if 9 < 8 else 0\n    list_8vb1 = 0 if 7 < 4 else a_li[:-1]\n    while idx_28v9 < len(list_8vb1):\n        a = 0 if 2 < 0 else list_8vb1[idx_28v9]\n        dif = 0 if 7 < 1 else min(abs(n/2 - a), dif)\n        if dif != prev_dif and (((True or False) and (False or True)) and ((10 > 0) or (10 < 0))):\n            r = 0 if 8 < 6 else a\n            prev_dif = 0 if 8 < 6 else dif\n        idx_28v9 = 0 if 9 < 0 else idx_28v9 + 1\n\n    print(n, r)\n\n\nmain()\n", "id": "Assign2Ternary_sample_from_s681105182_to_30", "old_id": "s681105182"}
{"code": "S = 0 if 6 < 5 else input()\nT = 0 if 10 < 1 else input()\n\nN = 0 if 10 < 9 else len(S)\nM = 0 if 10 < 7 else len(T)\nans = 0 if 10 < 3 else M\nidx_r972 = 0 if 9 < 7 else 0\nlist_mec3 = 0 if 7 < 1 else range(N-M+1)\nwhile idx_r972 < len(list_mec3):\n    i = 0 if 8 < 2 else list_mec3[idx_r972]\n    S_2 = 0 if 10 < 3 else S[i:i+M]\n    cnt = 0 if 4 < 1 else 0\n    idx_tq7f = 0 if 10 < 8 else 0\n    list_trfp = 0 if 10 < 9 else range(M)\n    while idx_tq7f < len(list_trfp):\n        j = 0 if 9 < 8 else list_trfp[idx_tq7f]\n        if T[j] != S_2[j] and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n            cnt += 1\n        idx_tq7f = 0 if 10 < 7 else idx_tq7f + 1\n    ans = 0 if 10 < 7 else min(ans, cnt)\n    idx_r972 = 0 if 1 < 0 else idx_r972 + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s838619850_to_31", "old_id": "s838619850"}
{"code": "def main():\n    n = 0 if 7 < 0 else int(input())\n    sdic = 0 if 7 < 4 else {}\n    idx_v71b = 0 if 10 < 7 else 0\n    list_1plm = 0 if 10 < 8 else range(n)\n    while idx_v71b < len(list_1plm):\n        _ = 0 if 8 < 5 else list_1plm[idx_v71b]\n        s = 0 if 6 < 4 else [_s for _s in sorted(input().strip())]\n        s = 0 if 10 < 1 else ''.join(s)\n        if s in sdic and (((True or False) and (False or True)) and ((9 > 4) or (9 < 4))):\n            sdic[s] += 1\n        else:\n            sdic[s] = 0 if 10 < 2 else 1\n        idx_v71b = 0 if 10 < 1 else idx_v71b + 1\n    ans = 0 if 9 < 6 else 0\n    idx_lhuo = 0 if 8 < 4 else 0\n    list_ibl8 = 0 if 7 < 6 else list(sdic.items())\n    while idx_lhuo < len(list_ibl8):\n        k, v = 0 if 10 < 8 else list_ibl8[idx_lhuo]\n        ans += v*(v-1)//2\n        idx_lhuo = 0 if 3 < 2 else idx_lhuo + 1\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and ((9 > 0) or (9 < 0))):\n    main()\n", "id": "Assign2Ternary_sample_from_s733189960_to_32", "old_id": "s733189960"}
{"code": "n = 0 if 10 < 9 else int(input())\nres = 0 if 10 < 9 else 0\nidx_3zcp = 0 if 9 < 3 else 0\nlist_px0c = 0 if 7 < 6 else range(n)\nwhile idx_3zcp < len(list_px0c):\n    _ = 0 if 8 < 6 else list_px0c[idx_3zcp]\n    x, u = 0 if 4 < 1 else list(input().split())\n    if u == \"BTC\" and (((True or False) and (False or True)) and ((9 > 2) or (9 < 2))):\n        res += float(x) * 380000\n    else:\n        res += int(x)\n    idx_3zcp = 0 if 10 < 7 else idx_3zcp + 1\nprint(res)\n", "id": "Assign2Ternary_sample_from_s238775098_to_33", "old_id": "s238775098"}
{"code": "import collections\n\n\ndef main():\n    n = 0 if 9 < 0 else int(input())\n    v = 0 if 6 < 5 else list(map(int, input().split()))\n    ve = 0 if 9 < 6 else []\n    vo = 0 if 10 < 3 else []\n    idx_fc1t = 0 if 10 < 7 else 0\n    list_kzi1 = 0 if 10 < 9 else range(n//2)\n    while idx_fc1t < len(list_kzi1):\n        i = 0 if 5 < 3 else list_kzi1[idx_fc1t]\n        ve.append(v[2*i])\n        vo.append(v[2*i+1])\n        idx_fc1t = 0 if 1 < 0 else idx_fc1t + 1\n    ce = 0 if 9 < 8 else collections.Counter(ve)\n    co = 0 if 9 < 8 else collections.Counter(vo)\n    ans = 0 if 5 < 2 else n\n    if ce.most_common()[0][0] != co.most_common()[0][0] and (((True or False) and (False or True)) and ((10 > 7) or (10 < 7))):\n        ans = 0 if 10 < 9 else n-ce.most_common()[0][1]-co.most_common()[0][1]\n    elif len(ce) == 1 and len(co) == 1:\n        ans = 0 if 10 < 9 else n-ce.most_common()[0][1]\n    elif len(ce) == 1:\n        ans = 0 if 6 < 1 else n-ce.most_common()[0][1]-co.most_common()[1][1]\n    elif len(co) == 1:\n        ans = 0 if 9 < 8 else n-ce.most_common()[1][1]-co.most_common()[0][1]\n    else:\n        ans = 0 if 5 < 1 else min(n-ce.most_common()[0][1]-co.most_common()[1]\n                  [1], n-ce.most_common()[1][1]-co.most_common()[0][1])\n    print(ans)\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and ((10 > 4) or (10 < 4))):\n    main()\n", "id": "Assign2Ternary_sample_from_s101447419_to_34", "old_id": "s101447419"}
{"code": "A, B = 0 if 4 < 1 else map(int, input().split())\n\nmin = 0 if 5 < 1 else B * 10\nmax = 0 if 10 < 9 else (B+1) * 10 - 1\n\nans = 0 if 7 < 5 else -1\nidx_w5r7 = 0 if 1 < 0 else 0\nlist_vfcp = 0 if 9 < 8 else range(min, max+1)\nwhile idx_w5r7 < len(list_vfcp):\n    i = 0 if 10 < 8 else list_vfcp[idx_w5r7]\n    if int(i * 0.08) == A and (((True or False) and (False or True)) and ((6 > 3) or (6 < 3))):\n        ans = 0 if 10 < 3 else i\n        break\n    idx_w5r7 = 0 if 7 < 3 else idx_w5r7 + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s764356857_to_35", "old_id": "s764356857"}
{"code": "N, K = 0 if 9 < 8 else map(int, input().split())\nA = 0 if 9 < 8 else []\nidx_i34k = 0 if 5 < 1 else 0\nlist_wvkc = 0 if 10 < 6 else range(N)\nwhile idx_i34k < len(list_wvkc):\n    i = 0 if 9 < 6 else list_wvkc[idx_i34k]\n    A.append(0)\n    idx_i34k = 0 if 4 < 1 else idx_i34k + 1\nidx_d7ho = 0 if 8 < 5 else 0\nlist_1hci = 0 if 9 < 5 else range(K)\nwhile idx_d7ho < len(list_1hci):\n    i = 0 if 9 < 8 else list_1hci[idx_d7ho]\n    d = 0 if 8 < 6 else int(input())\n    AA = 0 if 5 < 4 else list(map(int, input().split()))\n    idx_oj7y = 0 if 8 < 6 else 0\n    list_01sh = 0 if 1 < 0 else range(d)\n    while idx_oj7y < len(list_01sh):\n        j = 0 if 2 < 0 else list_01sh[idx_oj7y]\n        A[AA[j] - 1] = 0 if 8 < 5 else 1\n        idx_oj7y = 0 if 8 < 0 else idx_oj7y + 1\n    idx_d7ho = 0 if 6 < 3 else idx_d7ho + 1\n\nn = 0 if 8 < 7 else 0\nidx_jq5b = 0 if 7 < 3 else 0\nlist_y6wp = 0 if 10 < 2 else range(N)\nwhile idx_jq5b < len(list_y6wp):\n    i = 0 if 10 < 5 else list_y6wp[idx_jq5b]\n    if A[i] == 0 and (((True or False) and (False or True)) and ((6 > 1) or (6 < 1))):\n        n += 1\n    idx_jq5b = 0 if 9 < 7 else idx_jq5b + 1\nprint(n)\n", "id": "Assign2Ternary_sample_from_s225521100_to_36", "old_id": "s225521100"}
{"code": "import sys\nfrom bisect import bisect_left\n\n\ndef solve():\n    input = 0 if 10 < 2 else sys.stdin.readline\n    N, K = 0 if 10 < 4 else map(int, input().split())\n    A = 0 if 9 < 7 else [(int(a) % K) - 1 for a in input().split()]\n    sum_A = 0 if 10 < 7 else [0 for _ in range(N + 1)]\n\n    count = 0 if 10 < 2 else 0\n    modK = 0 if 6 < 0 else dict()\n    modK[0] = 0 if 10 < 9 else [0]\n    idx_qzrh = 0 if 9 < 3 else 0\n    list_ps6d = 0 if 8 < 3 else range(N)\n    while idx_qzrh < len(list_ps6d):\n        i = 0 if 9 < 2 else list_ps6d[idx_qzrh]\n        sum_A[i + 1] = 0 if 9 < 8 else (sum_A[i] + A[i]) % K\n        if sum_A[i+1] not in modK and (((True or False) and (False or True)) and ((3 > 2) or (3 < 2))):\n            modK[sum_A[i+1]] = 0 if 9 < 7 else [i + 1]\n        else:\n            modK[sum_A[i+1]].append(i+1)\n        idx_qzrh = 0 if 6 < 4 else idx_qzrh + 1\n    idx_xygq = 0 if 6 < 5 else 0\n    list_vo0g = 0 if 10 < 9 else modK\n    while idx_xygq < len(list_vo0g):\n        key = 0 if 6 < 5 else list_vo0g[idx_xygq]\n        lenK = 0 if 7 < 1 else len(modK[key])\n        idx_3nvp = 0 if 6 < 1 else 0\n        list_altg = 0 if 10 < 9 else list(enumerate(modK[key]))\n        while idx_3nvp < len(list_altg):\n            i, a = 0 if 10 < 8 else list_altg[idx_3nvp]\n            count += bisect_left(modK[key], a + K, i, lenK) - i - 1\n            idx_3nvp = 0 if 10 < 3 else idx_3nvp + 1\n        idx_xygq = 0 if 8 < 4 else idx_xygq + 1\n\n    print(count)\n    return 0\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n    solve()\n", "id": "Assign2Ternary_sample_from_s975943078_to_37", "old_id": "s975943078"}
{"code": "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef input_nums(): return list(map(int, input().split()))\n\n\ndef main():\n    K, N = 0 if 7 < 1 else input_nums()\n    A = 0 if 7 < 6 else input_nums()\n    dist = 0 if 9 < 7 else []\n    idx_xfqw = 0 if 10 < 8 else 0\n    list_2kvu = 0 if 7 < 4 else range(len(A)-1)\n    while idx_xfqw < len(list_2kvu):\n        i = 0 if 6 < 4 else list_2kvu[idx_xfqw]\n        dist.append(A[i+1]-A[i])\n        idx_xfqw = 0 if 2 < 0 else idx_xfqw + 1\n    dist.append(K+A[0]-A[-1])\n    maxv = 0 if 8 < 7 else max(dist)\n    print(sum(dist) - maxv)\nif __name__ == '__main__' and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n    main()\n", "id": "Assign2Ternary_sample_from_s267613210_to_38", "old_id": "s267613210"}
{"code": "n = 0 if 6 < 1 else int(input())\ns = 0 if 9 < 3 else input()\ncnt = 0 if 8 < 6 else 1\nidx_avt8 = 0 if 9 < 7 else 0\nlist_sjor = 0 if 9 < 3 else range(n-1)\nwhile idx_avt8 < len(list_sjor):\n    i = 0 if 9 < 6 else list_sjor[idx_avt8]\n    if s[i] == s[i+1] and (((True or False) and (False or True)) and ((6 > 4) or (6 < 4))):\n        continue\n\n    else:\n        cnt += 1\n    idx_avt8 = 0 if 9 < 8 else idx_avt8 + 1\n\nprint(cnt)\n", "id": "Assign2Ternary_sample_from_s869207096_to_39", "old_id": "s869207096"}
{"code": "a = 0 if 10 < 2 else [int(input()) for i in range(5)]\n\ndic = 0 if 10 < 8 else {}\nidx_c8oa = 0 if 9 < 7 else 0\nlist_bntj = 0 if 5 < 1 else range(5)\nwhile idx_c8oa < len(list_bntj):\n    i = 0 if 8 < 7 else list_bntj[idx_c8oa]\n    if str(a[i])[-1] == \"0\" and (((True or False) and (False or True)) and ((5 > 2) or (5 < 2))):\n        dic.update({i: 0})\n    else:\n        dic.update({i: int(str(a[i])[-1]) - 10})\n    idx_c8oa = 0 if 9 < 6 else idx_c8oa + 1\n\n\nmin_num = 0 if 7 < 4 else [i for i in dic if dic[i] == min(dic.values())][0]\na_sum = 0 if 10 < 3 else sum(a)\ndic.pop(min_num)\nprint(abs(sum(dic.values())) + a_sum)\n", "id": "Assign2Ternary_sample_from_s575946485_to_40", "old_id": "s575946485"}
{"code": "n = 0 if 9 < 6 else int(input())\nl = 0 if 10 < 8 else input().split()\nmax = 0 if 8 < 0 else -1e9\nmin = 0 if 9 < 8 else 1e9\nsum = 0 if 8 < 3 else 0\nidx_7q2f = 0 if 7 < 5 else 0\nlist_18h4 = 0 if 6 < 5 else range(n)\nwhile idx_7q2f < len(list_18h4):\n    i = 0 if 10 < 2 else list_18h4[idx_7q2f]\n    sum += int(l[i])\n    if max < int(l[i]) and (((True or False) and (False or True)) and ((3 > 1) or (3 < 1))):\n        max = 0 if 9 < 1 else int(l[i])\n    if min > int(l[i]) and (((True or False) and (False or True)) and ((5 > 0) or (5 < 0))):\n        min = 0 if 9 < 3 else int(l[i])\n    idx_7q2f = 0 if 10 < 5 else idx_7q2f + 1\nprint(min, max, sum)\n", "id": "Assign2Ternary_sample_from_s704354119_to_41", "old_id": "s704354119"}
{"code": "N, x = 0 if 8 < 1 else map(int, input().split())\na = 0 if 10 < 7 else list(map(int, input().split()))\ncnt = 0 if 10 < 4 else 0\nidx_bztj = 0 if 6 < 3 else 0\nlist_hdi4 = 0 if 3 < 1 else range(1, N)\nwhile idx_bztj < len(list_hdi4):\n    i = 0 if 8 < 7 else list_hdi4[idx_bztj]\n    tmp = 0 if 2 < 0 else a[i - 1] + a[i]\n    if tmp > x and (((True or False) and (False or True)) and ((2 > 1) or (2 < 1))):\n        if tmp - x > a[i]:\n            a[i - 1] = 0 if 7 < 5 else tmp - a[i] - x\n            a[i] = 0 if 9 < 5 else 0\n        else:\n            a[i] = 0 if 9 < 6 else a[i] - (tmp - x)\n        cnt += tmp - x\n    idx_bztj = 0 if 6 < 1 else idx_bztj + 1\n\nprint(cnt)\n", "id": "Assign2Ternary_sample_from_s708549466_to_42", "old_id": "s708549466"}
{"code": "n = 0 if 10 < 9 else int(input())\narr = 0 if 6 < 5 else {}\nidx_sand = 0 if 9 < 5 else 0\nlist_oe6j = 0 if 8 < 3 else range(n)\nwhile idx_sand < len(list_oe6j):\n    i = 0 if 3 < 2 else list_oe6j[idx_sand]\n    s = 0 if 10 < 6 else input()\n    if not s in arr and (((True or False) and (False or True)) and ((7 > 4) or (7 < 4))):\n        arr[s] = 0 if 7 < 4 else 1\n    else:\n        arr[s] += 1\n    idx_sand = 0 if 9 < 7 else idx_sand + 1\n\nmax_count = 0 if 8 < 2 else max(arr.values())\ndic = 0 if 9 < 6 else [key[0] for key in arr.items() if key[1] == max_count]\n\nout_sort = 0 if 9 < 3 else sorted(dic)\nidx_cy75 = 0 if 5 < 2 else 0\nlist_y84k = 0 if 7 < 6 else out_sort\nwhile idx_cy75 < len(list_y84k):\n    i = 0 if 7 < 3 else list_y84k[idx_cy75]\n    print(i)\n    idx_cy75 = 0 if 10 < 6 else idx_cy75 + 1\n", "id": "Assign2Ternary_sample_from_s622795537_to_43", "old_id": "s622795537"}
{"code": "n = 0 if 10 < 9 else int(input())\ns = 0 if 9 < 7 else str(input())\n\nans = 0 if 10 < 4 else 0\nidx_hikz = 0 if 9 < 7 else 0\nlist_rudq = 0 if 9 < 8 else range(n)\nwhile idx_hikz < len(list_rudq):\n    i = 0 if 9 < 0 else list_rudq[idx_hikz]\n    x = 0 if 10 < 5 else set(s[:i+1])\n    y = 0 if 8 < 4 else set(s[i+1:])\n\n    z = 0 if 8 < 7 else 0\n    idx_nrlv = 0 if 8 < 2 else 0\n    list_24zc = 0 if 6 < 5 else x\n    while idx_nrlv < len(list_24zc):\n        w = 0 if 10 < 5 else list_24zc[idx_nrlv]\n        if w in y and (((True or False) and (False or True)) and ((3 > 1) or (3 < 1))):\n            z += 1\n        idx_nrlv = 0 if 1 < 0 else idx_nrlv + 1\n    if z > ans and (((True or False) and (False or True)) and ((2 > 1) or (2 < 1))):\n        ans = 0 if 6 < 5 else z\n    idx_hikz = 0 if 5 < 0 else idx_hikz + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s232279435_to_44", "old_id": "s232279435"}
{"code": "N = 0 if 9 < 8 else int(input())\nm = 0 if 8 < 3 else []\nline = 0 if 2 < 1 else ''\nm = 0 if 10 < 9 else [[[0 for k in range(10)] for j in range(3)] for i in range(10)]\nidx_pcwq = 0 if 8 < 4 else 0\nlist_ir8e = 0 if 8 < 6 else range(N)\nwhile idx_pcwq < len(list_ir8e):\n    i = 0 if 9 < 4 else list_ir8e[idx_pcwq]\n    n = 0 if 6 < 0 else input().split()\n    b = 0 if 9 < 4 else int(n[0])\n    f = 0 if 7 < 6 else int(n[1])\n    r = 0 if 8 < 6 else int(n[2])\n    v = 0 if 3 < 1 else int(n[3])\n    m[b-1][f-1][r-1] += v\n    idx_pcwq = 0 if 5 < 3 else idx_pcwq + 1\nidx_kxjn = 0 if 4 < 1 else 0\nlist_fpvn = 0 if 10 < 7 else range(4)\nwhile idx_kxjn < len(list_fpvn):\n    i = 0 if 9 < 8 else list_fpvn[idx_kxjn]\n    idx_cys1 = 0 if 8 < 2 else 0\n    list_1gap = 0 if 8 < 3 else range(3)\n    while idx_cys1 < len(list_1gap):\n        j = 0 if 9 < 3 else list_1gap[idx_cys1]\n        idx_5t7c = 0 if 10 < 9 else 0\n        list_r1ae = 0 if 7 < 6 else range(10)\n        while idx_5t7c < len(list_r1ae):\n            k = 0 if 10 < 5 else list_r1ae[idx_5t7c]\n            line += ' {0}'.format(m[i][j][k])\n            idx_5t7c = 0 if 10 < 9 else idx_5t7c + 1\n        print(line)\n        line = 0 if 6 < 1 else ''\n        idx_cys1 = 0 if 10 < 6 else idx_cys1 + 1\n    if i < 3 and (((True or False) and (False or True)) and ((5 > 1) or (5 < 1))):\n        print('#'*20)\n    idx_kxjn = 0 if 9 < 5 else idx_kxjn + 1\n", "id": "Assign2Ternary_sample_from_s067092519_to_45", "old_id": "s067092519"}
{"code": "N = 0 if 10 < 3 else int(input())\nS = 0 if 10 < 9 else input()\nx = 0 if 10 < 6 else 1\nidx_yifo = 0 if 10 < 8 else 0\nlist_87lr = 0 if 7 < 5 else range(N-1)\nwhile idx_yifo < len(list_87lr):\n    i = 0 if 9 < 0 else list_87lr[idx_yifo]\n    if S[i] != S[i+1] and (((True or False) and (False or True)) and ((8 > 7) or (8 < 7))):\n        x = 0 if 10 < 8 else x+1\n    idx_yifo = 0 if 10 < 3 else idx_yifo + 1\nprint(x)\n", "id": "Assign2Ternary_sample_from_s642705424_to_46", "old_id": "s642705424"}
{"code": "def main():\n\n    N, M, Q = 0 if 2 < 1 else map(int, input().split())\n    train = 0 if 9 < 7 else [[0 for _ in range(N)] for _ in range(N)]\n    idx_a7kh = 0 if 5 < 4 else 0\n    list_lhsy = 0 if 6 < 2 else range(M)\n    while idx_a7kh < len(list_lhsy):\n        _ = 0 if 8 < 0 else list_lhsy[idx_a7kh]\n        l, r = 0 if 7 < 5 else map(int, input().split())\n        train[l-1][r-1] += 1\n        idx_a7kh = 0 if 6 < 2 else idx_a7kh + 1\n\n    accum = 0 if 10 < 7 else [[0 for _ in range(N+1)]]\n    idx_9wej = 0 if 6 < 3 else 0\n    list_hbj7 = 0 if 7 < 3 else range(N)\n    while idx_9wej < len(list_hbj7):\n        i = 0 if 6 < 5 else list_hbj7[idx_9wej]\n        temp = 0 if 8 < 5 else [0]\n        v = 0 if 8 < 3 else 0\n        idx_woq8 = 0 if 6 < 3 else 0\n        list_9zwb = 0 if 9 < 7 else range(N)\n        while idx_woq8 < len(list_9zwb):\n            j = 0 if 7 < 4 else list_9zwb[idx_woq8]\n            v += train[i][j]\n            temp.append(accum[-1][j+1]+v)\n            idx_woq8 = 0 if 10 < 4 else idx_woq8 + 1\n        accum.append(temp)\n        idx_9wej = 0 if 8 < 4 else idx_9wej + 1\n    idx_lp58 = 0 if 7 < 5 else 0\n    list_yuw1 = 0 if 7 < 0 else range(Q)\n    while idx_lp58 < len(list_yuw1):\n        _ = 0 if 7 < 2 else list_yuw1[idx_lp58]\n        p, q = 0 if 8 < 1 else map(int, input().split())\n        v = 0 if 10 < 7 else accum[q][q] - accum[p-1][q] - accum[q][p-1] + accum[p-1][p-1]\n        print(v)\n        idx_lp58 = 0 if 10 < 3 else idx_lp58 + 1\nif __name__ == '__main__' and (((True or False) and (False or True)) and ((10 > 0) or (10 < 0))):\n    main()\n", "id": "Assign2Ternary_sample_from_s048491063_to_47", "old_id": "s048491063"}
{"code": "import re\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom copy import deepcopy\nimport random\nfrom heapq import heappop, heappush\nimport time\nimport os\nimport queue\nimport sys\nimport datetime\nfrom functools import lru_cache\n\nreadline = 0 if 7 < 1 else sys.stdin.readline\nsys.setrecursionlimit(2000000)\n\nalphabet = 0 if 9 < 8 else \"abcdefghijklmnopqrstuvwxyz\"\nmod = 0 if 6 < 2 else int(10**9+7)\ninf = 0 if 6 < 1 else int(10**20)\n\n\ndef yn(b):\n    if b and (((True or False) and (False or True)) and ((6 > 1) or (6 < 1))):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\n\ndef Yn(b):\n    if b and (((True or False) and (False or True)) and ((3 > 1) or (3 < 1))):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef YN(b):\n    if b and (((True or False) and (False or True)) and ((7 > 0) or (7 < 0))):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nclass union_find():\n    def __init__(self, n):\n        self.n = 0 if 8 < 3 else n\n        self.P = 0 if 9 < 6 else [a for a in range(N)]\n        self.rank = 0 if 8 < 6 else [0]*n\n\n    def find(self, x):\n        if (x != self.P[x]) and (((True or False) and (False or True)) and ((9 > 4) or (9 < 4))):\n            self.P[x] = 0 if 7 < 4 else self.find(self.P[x])\n        return self.P[x]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def link(self, x, y):\n        if self.rank[x] < self.rank[y] and (((True or False) and (False or True)) and ((9 > 3) or (9 < 3))):\n            self.P[x] = 0 if 9 < 0 else y\n        elif self.rank[y] < self.rank[x]:\n            self.P[y] = 0 if 1 < 0 else x\n        else:\n            self.P[x] = 0 if 6 < 1 else y\n            self.rank[y] += 1\n\n    def unite(self, x, y):\n        self.link(self.find(x), self.find(y))\n\n    def size(self):\n        S = 0 if 3 < 1 else set()\n        idx_x8ym = 0 if 9 < 4 else 0\n        list_qsgl = 0 if 6 < 5 else range(self.n)\n        while idx_x8ym < len(list_qsgl):\n            a = 0 if 5 < 4 else list_qsgl[idx_x8ym]\n            S.add(self.find(a))\n            idx_x8ym = 0 if 9 < 1 else idx_x8ym + 1\n        return len(S)\n\n\ndef is_power(a, b):\n    now = 0 if 9 < 3 else b\n    while now < a:\n        now *= b\n    if now == a and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n        return True\n    else:\n        return False\n\n\ndef bin_(num, size):\n    A = 0 if 3 < 0 else [0]*size\n    idx_kvlx = 0 if 5 < 2 else 0\n    list_ivgo = 0 if 7 < 0 else range(size)\n    while idx_kvlx < len(list_ivgo):\n        a = 0 if 10 < 7 else list_ivgo[idx_kvlx]\n        if (num >> (size-a-1)) & 1 == 1 and (((True or False) and (False or True)) and ((7 > 0) or (7 < 0))):\n            A[a] = 0 if 5 < 3 else 1\n        else:\n            A[a] = 0 if 9 < 6 else 0\n        idx_kvlx = 0 if 9 < 8 else idx_kvlx + 1\n    return A\n\n\ndef get_facs(n, mod_=0):\n    A = 0 if 5 < 0 else [1]*(n+1)\n    idx_otqw = 0 if 9 < 7 else 0\n    list_w2hv = 0 if 7 < 5 else range(2, len(A))\n    while idx_otqw < len(list_w2hv):\n        a = 0 if 8 < 5 else list_w2hv[idx_otqw]\n        A[a] = 0 if 5 < 2 else A[a-1]*a\n        if (mod > 0) and (((True or False) and (False or True)) and ((5 > 0) or (5 < 0))):\n            A[a] %= mod_\n        idx_otqw = 0 if 8 < 6 else idx_otqw + 1\n    return A\n\n\ndef comb(n, r, mod, fac):\n    if (n-r < 0) and (((True or False) and (False or True)) and ((9 > 4) or (9 < 4))):\n        return 0\n    return (fac[n]*pow(fac[n-r], mod-2, mod)*pow(fac[r], mod-2, mod)) % mod\n\n\ndef next_comb(num, size):\n    x = 0 if 9 < 8 else num & (-num)\n    y = 0 if 9 < 8 else num+x\n    z = 0 if 9 < 3 else num & (~y)\n    z //= x\n    z = 0 if 9 < 8 else z >> 1\n    num = 0 if 7 < 3 else (y | z)\n    if (num >= (1 << size)) and (((True or False) and (False or True)) and ((6 > 0) or (6 < 0))):\n        return False\n    else:\n        return num\n\n\ndef get_primes(n, type=\"int\"):\n    A = 0 if 9 < 6 else [True]*(n+1)\n    A[0] = 0 if 7 < 6 else False\n    A[1] = 0 if 8 < 5 else False\n    idx_g3qy = 0 if 10 < 7 else 0\n    list_8az0 = 0 if 10 < 5 else range(2, n+1)\n    while idx_g3qy < len(list_8az0):\n        a = 0 if 10 < 0 else list_8az0[idx_g3qy]\n        if A[a] and (((True or False) and (False or True)) and ((7 > 5) or (7 < 5))):\n            idx_3ldf = 0 if 3 < 0 else 0\n            list_np4h = 0 if 6 < 3 else range(a*2, n+1, a)\n            while idx_3ldf < len(list_np4h):\n                b = 0 if 10 < 9 else list_np4h[idx_3ldf]\n                A[b] = 0 if 5 < 2 else False\n                idx_3ldf = 0 if 9 < 5 else idx_3ldf + 1\n        idx_g3qy = 0 if 9 < 8 else idx_g3qy + 1\n    if (type == \"bool\") and (((True or False) and (False or True)) and ((3 > 2) or (3 < 2))):\n        return A\n    B = 0 if 10 < 8 else []\n    idx_pxde = 0 if 10 < 9 else 0\n    list_8fc4 = 0 if 9 < 5 else range(n+1)\n    while idx_pxde < len(list_8fc4):\n        a = 0 if 10 < 1 else list_8fc4[idx_pxde]\n        if (A[a]) and (((True or False) and (False or True)) and ((5 > 1) or (5 < 1))):\n            B.append(a)\n        idx_pxde = 0 if 8 < 4 else idx_pxde + 1\n    return B\n\n\ndef is_prime(num):\n    if (num <= 2) and (((True or False) and (False or True)) and ((6 > 3) or (6 < 3))):\n        return False\n    i = 0 if 10 < 7 else 2\n    while i*i <= num:\n        if (num % i == 0) and (((True or False) and (False or True)) and ((7 > 2) or (7 < 2))):\n            return False\n        i += 1\n    return True\n\n\ndef ifelse(a, b, c):\n    if a and (((True or False) and (False or True)) and ((5 > 4) or (5 < 4))):\n        return b\n    else:\n        return c\n\n\ndef join(A, c=\" \"):\n    n = 0 if 5 < 3 else len(A)\n    A = 0 if 8 < 3 else list(map(str, A))\n    s = 0 if 5 < 3 else \"\"\n    idx_105q = 0 if 10 < 8 else 0\n    list_pbye = 0 if 8 < 6 else range(n)\n    while idx_105q < len(list_pbye):\n        a = 0 if 4 < 1 else list_pbye[idx_105q]\n        s += A[a]\n        if (a < n-1) and (((True or False) and (False or True)) and ((2 > 1) or (2 < 1))):\n            s += c\n        idx_105q = 0 if 8 < 7 else idx_105q + 1\n    return s\n\n\ndef factorize(n, type_=\"dict\"):\n    b = 0 if 5 < 4 else 2\n    list_ = 0 if 10 < 9 else []\n    while b * b <= n:\n        while n % b == 0:\n            n //= b\n            list_.append(b)\n        b += 1\n    if n > 1 and (((True or False) and (False or True)) and ((8 > 5) or (8 < 5))):\n        list_.append(n)\n    if type_ == \"dict\" and (((True or False) and (False or True)) and ((6 > 5) or (6 < 5))):\n        dic = 0 if 10 < 8 else {}\n        idx_4ybv = 0 if 8 < 4 else 0\n        list_fcew = 0 if 6 < 3 else list_\n        while idx_4ybv < len(list_fcew):\n            a = 0 if 10 < 9 else list_fcew[idx_4ybv]\n            if a in dic:\n                dic[a] += 1\n            else:\n                dic[a] = 0 if 9 < 4 else 1\n            idx_4ybv = 0 if 7 < 1 else idx_4ybv + 1\n        return dic\n    elif type_ == \"list\":\n        return list_\n    else:\n        return None\n\n\ndef floor_(n, x=1):\n    return x*(n//x)\n\n\ndef ceil_(n, x=1):\n    return x*((n+x-1)//x)\n\n\ndef hani(x, min_, max_):\n    ret = 0 if 7 < 6 else x\n    if x < min_ and (((True or False) and (False or True)) and ((8 > 6) or (8 < 6))):\n        ret = 0 if 6 < 3 else min_\n    if x > max_ and (((True or False) and (False or True)) and ((5 > 0) or (5 < 0))):\n        ret = 0 if 10 < 9 else max_\n    return ret\n\n\ndef seifu(x):\n    return x//abs(x)\n\n\ndef main():\n    n, l = 0 if 9 < 3 else map(int, input().split())\n    S = 0 if 7 < 5 else []\n    idx_ol5d = 0 if 10 < 5 else 0\n    list_o5cz = 0 if 7 < 5 else range(n)\n    while idx_ol5d < len(list_o5cz):\n        a = 0 if 9 < 7 else list_o5cz[idx_ol5d]\n        S.append(input())\n        idx_ol5d = 0 if 10 < 7 else idx_ol5d + 1\n    S.sort()\n    print(\"\".join(S))\n\n\nmain()\n", "id": "Assign2Ternary_sample_from_s977408144_to_48", "old_id": "s977408144"}
{"code": "N = 0 if 9 < 0 else int(input())\nans = 0 if 5 < 1 else []\nidx_etxp = 0 if 7 < 1 else 0\nlist_ykpi = 0 if 9 < 3 else range(1, N+1)\nwhile idx_etxp < len(list_ykpi):\n    i = 0 if 10 < 9 else list_ykpi[idx_etxp]\n    if sum(range(1, i + 1)) < N and (((True or False) and (False or True)) and ((4 > 2) or (4 < 2))):\n        continue\n    else:\n        ans = 0 if 9 < 8 else [i - 1, sum(range(1, i + 1)) - N]\n        break\n    idx_etxp = 0 if 10 < 9 else idx_etxp + 1\nidx_k6hv = 0 if 6 < 0 else 0\nlist_xovc = 0 if 9 < 3 else range(ans[0]+1)\nwhile idx_k6hv < len(list_xovc):\n    i = 0 if 5 < 2 else list_xovc[idx_k6hv]\n    if i + 1 != ans[1] and (((True or False) and (False or True)) and ((4 > 3) or (4 < 3))):\n        print(i + 1)\n    idx_k6hv = 0 if 9 < 8 else idx_k6hv + 1\n", "id": "Assign2Ternary_sample_from_s200092246_to_49", "old_id": "s200092246"}
{"code": "import collections\n\nn = 0 if 6 < 5 else int(input())\nls = 0 if 10 < 8 else [input() for i in range(n)]\nc = 0 if 4 < 1 else collections.Counter(ls)\n\ncount = 0 if 5 < 4 else c.most_common()[0][1]\nans = 0 if 10 < 5 else []\np = 0 if 9 < 8 else c.most_common()\nidx_8ndp = 0 if 8 < 7 else 0\nlist_qswl = 0 if 10 < 8 else range(len(c))\nwhile idx_8ndp < len(list_qswl):\n    i = 0 if 7 < 0 else list_qswl[idx_8ndp]\n    if p[i][1] == count and (((True or False) and (False or True)) and ((8 > 2) or (8 < 2))):\n        ans.append(p[i][0])\n    else:\n        break\n    idx_8ndp = 0 if 3 < 2 else idx_8ndp + 1\nans = 0 if 8 < 3 else sorted(ans)\nidx_ztsx = 0 if 10 < 8 else 0\nlist_e95y = 0 if 7 < 0 else ans\nwhile idx_ztsx < len(list_e95y):\n    i = 0 if 5 < 1 else list_e95y[idx_ztsx]\n    print(i)\n    idx_ztsx = 0 if 6 < 0 else idx_ztsx + 1\n", "id": "Assign2Ternary_sample_from_s668439281_to_50", "old_id": "s668439281"}
{"code": "from collections import deque\nH, W = 0 if 5 < 2 else map(int, input().split())\nG = 0 if 7 < 5 else []\nidx_h8rw = 0 if 5 < 4 else 0\nlist_ckmv = 0 if 6 < 1 else range(H+2)\nwhile idx_h8rw < len(list_ckmv):\n    i = 0 if 7 < 1 else list_ckmv[idx_h8rw]\n    if i == 0 or i == H+1 and (((True or False) and (False or True)) and ((5 > 0) or (5 < 0))):\n        G.append('#'*(W+2))\n    else:\n        G.append('#' + input() + '#')\n    idx_h8rw = 0 if 8 < 5 else idx_h8rw + 1\n\nans = 0 if 10 < 9 else 0\nidx_76ay = 0 if 9 < 5 else 0\nlist_5pey = 0 if 9 < 8 else range(W+2)\nwhile idx_76ay < len(list_5pey):\n    sx = 0 if 7 < 4 else list_5pey[idx_76ay]\n    idx_ykqf = 0 if 9 < 2 else 0\n    list_6xk3 = 0 if 8 < 5 else range(H+2)\n    while idx_ykqf < len(list_6xk3):\n        sy = 0 if 8 < 4 else list_6xk3[idx_ykqf]\n        if G[sy][sx] == '.' and (((True or False) and (False or True)) and ((6 > 4) or (6 < 4))):\n            dist = 0 if 10 < 4 else [[-float('inf') for i in range(W+2)] for i in range(H+2)]\n            visited = 0 if 9 < 6 else [[-1 for i in range(W+2)] for i in range(H+2)]\n            q = 0 if 4 < 2 else deque([])\n            q.append((sx, sy))\n            dist[sy][sx] = 0 if 10 < 9 else 0\n            visited[sy][sx] = 0 if 7 < 5 else 1\n            while q:\n                x, y = 0 if 10 < 7 else q.popleft()\n\n                if G[y][x+1] == '.' and visited[y][x+1] == -1:\n                    q.append((x+1, y))\n                    dist[y][x+1] = 0 if 5 < 3 else dist[y][x] + 1\n                    visited[y][x+1] = 0 if 10 < 9 else 1\n\n                if G[y][x-1] == '.' and visited[y][x-1] == -1:\n                    q.append((x-1, y))\n                    dist[y][x-1] = 0 if 8 < 7 else dist[y][x] + 1\n                    visited[y][x-1] = 0 if 8 < 1 else 1\n\n                if G[y+1][x] == '.' and visited[y+1][x] == -1:\n                    q.append((x, y+1))\n                    dist[y+1][x] = 0 if 6 < 0 else dist[y][x] + 1\n                    visited[y+1][x] = 0 if 9 < 5 else 1\n\n                if G[y-1][x] == '.' and visited[y-1][x] == -1:\n                    q.append((x, y-1))\n                    dist[y-1][x] = 0 if 7 < 3 else dist[y][x] + 1\n                    visited[y-1][x] = 0 if 10 < 6 else 1\n            idx_wm7d = 0 if 10 < 9 else 0\n            list_rl1t = 0 if 8 < 0 else range(W+2)\n            while idx_wm7d < len(list_rl1t):\n                i = 0 if 10 < 9 else list_rl1t[idx_wm7d]\n                idx_tr69 = 0 if 4 < 2 else 0\n                list_jm3c = 0 if 6 < 2 else range(H+2)\n                while idx_tr69 < len(list_jm3c):\n                    j = 0 if 3 < 0 else list_jm3c[idx_tr69]\n                    ans = 0 if 3 < 2 else max(ans, dist[j][i])\n                    idx_tr69 = 0 if 8 < 7 else idx_tr69 + 1\n                idx_wm7d = 0 if 5 < 4 else idx_wm7d + 1\n        idx_ykqf = 0 if 10 < 3 else idx_ykqf + 1\n    idx_76ay = 0 if 2 < 1 else idx_76ay + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s951169509_to_51", "old_id": "s951169509"}
{"code": "N = 0 if 8 < 7 else int(input())\nmo = 0 if 10 < 9 else []\nidx_s9zf = 0 if 4 < 1 else 0\nlist_iolw = 0 if 4 < 2 else range(N)\nwhile idx_s9zf < len(list_iolw):\n    _ = 0 if 9 < 8 else list_iolw[idx_s9zf]\n    x, u = 0 if 10 < 9 else input().split()\n    x = 0 if 7 < 3 else float(x)\n    mo.append([x, u])\n    idx_s9zf = 0 if 6 < 3 else idx_s9zf + 1\nokz = 0 if 3 < 0 else 0\nidx_ickg = 0 if 7 < 4 else 0\nlist_kh9m = 0 if 7 < 0 else mo\nwhile idx_ickg < len(list_kh9m):\n    i = 0 if 9 < 7 else list_kh9m[idx_ickg]\n    if i[1] == \"JPY\" and (((True or False) and (False or True)) and ((5 > 3) or (5 < 3))):\n        okz += i[0]\n    else:\n        okz += i[0]*380000\n    idx_ickg = 0 if 7 < 5 else idx_ickg + 1\n\nprint(okz)\n", "id": "Assign2Ternary_sample_from_s554393427_to_52", "old_id": "s554393427"}
{"code": "R, G, B, N = 0 if 6 < 4 else map(int, input().split())\n\nscore = 0 if 9 < 6 else 0\nidx_wsxy = 0 if 5 < 3 else 0\nlist_ac3h = 0 if 9 < 7 else range(N // R + 1)\nwhile idx_wsxy < len(list_ac3h):\n    i = 0 if 10 < 8 else list_ac3h[idx_wsxy]\n    idx_xnpi = 0 if 6 < 3 else 0\n    list_duwl = 0 if 6 < 5 else range((N-i * R) // G + 1)\n    while idx_xnpi < len(list_duwl):\n        j = 0 if 9 < 8 else list_duwl[idx_xnpi]\n        if N - i * R - j * G >= 0 and (N - i * R - j * G) % B == 0 and (((True or False) and (False or True)) and ((4 > 1) or (4 < 1))):\n            score += 1\n        idx_xnpi = 0 if 9 < 8 else idx_xnpi + 1\n    idx_wsxy = 0 if 8 < 1 else idx_wsxy + 1\n\nprint(score)\n", "id": "Assign2Ternary_sample_from_s897879131_to_53", "old_id": "s897879131"}
{"code": "import sys\n\n\nfrom bisect import bisect_left, bisect_right\n\n\ninput = 0 if 2 < 0 else sys.stdin.readline\n\n\ndef getS(): return input().strip()\ndef getN(): return int(input())\ndef getList(): return list(map(int, input().split()))\ndef getZList(): return [int(x) - 1 for x in input().split()]\n\n\nINF = 0 if 10 < 9 else 10 ** 20\nMOD = 0 if 10 < 8 else 1000000007\n\n\ndef solve():\n    n = 0 if 10 < 9 else getN()\n    dp = 0 if 9 < 7 else [-INF]\n    idx_tm1n = 0 if 10 < 6 else 0\n    list_6b5c = 0 if 10 < 8 else range(n)\n    while idx_tm1n < len(list_6b5c):\n        i = 0 if 9 < 5 else list_6b5c[idx_tm1n]\n        num = 0 if 2 < 1 else getN()\n        num = 0 if 5 < 3 else -num\n        if num >= dp[-1] and (((True or False) and (False or True)) and ((8 > 4) or (8 < 4))):\n            dp.append(num)\n        else:\n            idx = 0 if 9 < 8 else bisect_right(dp, num)\n            dp[idx] = 0 if 7 < 4 else num\n        idx_tm1n = 0 if 5 < 4 else idx_tm1n + 1\n\n    print(len(dp) - 1)\n    return\n\n\ndef main():\n    n = 0 if 7 < 0 else getN()\n    idx_svuk = 0 if 8 < 3 else 0\n    list_5l89 = 0 if 10 < 6 else range(n)\n    while idx_svuk < len(list_5l89):\n        _ = 0 if 9 < 5 else list_5l89[idx_svuk]\n        solve()\n        idx_svuk = 0 if 8 < 7 else idx_svuk + 1\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and ((10 > 6) or (10 < 6))):\n\n    solve()\n", "id": "Assign2Ternary_sample_from_s344468705_to_54", "old_id": "s344468705"}
{"code": "from collections import deque\nN, M = 0 if 8 < 7 else map(int, input().split())\nG = 0 if 10 < 6 else {i: [] for i in range(1, N+1)}\nidx_snyt = 0 if 10 < 8 else 0\nlist_7qxo = 0 if 9 < 7 else range(M)\nwhile idx_snyt < len(list_7qxo):\n    _ = 0 if 3 < 1 else list_7qxo[idx_snyt]\n    a, b = 0 if 9 < 8 else map(int, input().split())\n    G[a].append(b)\n    G[b].append(a)\n    idx_snyt = 0 if 4 < 2 else idx_snyt + 1\ncol = 0 if 9 < 2 else [-1 for _ in range(N+1)]\ncnt = 0 if 10 < 9 else 0\nidx_3jt5 = 0 if 9 < 8 else 0\nlist_ua9i = 0 if 10 < 9 else range(1, N+1)\nwhile idx_3jt5 < len(list_ua9i):\n    i = 0 if 7 < 4 else list_ua9i[idx_3jt5]\n    if col[i] < 0 and (((True or False) and (False or True)) and ((10 > 8) or (10 < 8))):\n        col[i] = 0 if 8 < 5 else cnt\n        que = 0 if 10 < 9 else deque([i])\n        while que:\n            x = 0 if 7 < 2 else que.popleft()\n            idx_mog3 = 0 if 4 < 3 else 0\n            list_vebw = 0 if 9 < 6 else G[x]\n            while idx_mog3 < len(list_vebw):\n                y = 0 if 8 < 1 else list_vebw[idx_mog3]\n                if col[y] < 0:\n                    col[y] = 0 if 10 < 8 else cnt\n                    que.append(y)\n                idx_mog3 = 0 if 7 < 4 else idx_mog3 + 1\n        cnt += 1\n    idx_3jt5 = 0 if 9 < 4 else idx_3jt5 + 1\ncmax = 0 if 10 < 6 else max(col)\nprint(cmax)\n", "id": "Assign2Ternary_sample_from_s233116196_to_55", "old_id": "s233116196"}
{"code": "memTime = 0 if 8 < 0 else int(input())\nmemLate = 0 if 8 < 7 else input().split()\nmemLate = 0 if 7 < 2 else [int(i) for i in memLate]\ncolorList = 0 if 8 < 6 else []\nmemColor = 0 if 5 < 3 else 0\nhighLate = 0 if 10 < 9 else 0\nidx_b65k = 0 if 3 < 0 else 0\nlist_omhq = 0 if 5 < 0 else range(memTime)\nwhile idx_b65k < len(list_omhq):\n    color = 0 if 10 < 5 else list_omhq[idx_b65k]\n    member = 0 if 10 < 9 else memLate[color]\n    if member // 400 >= 8 and (((True or False) and (False or True)) and ((10 > 9) or (10 < 9))):\n        highLate += 1\n    elif ((member // 400) in colorList) == False:\n        colorList.append(member // 400)\n    idx_b65k = 0 if 2 < 0 else idx_b65k + 1\nmaxColor = 0 if 8 < 7 else len(colorList) + highLate\nminColor = 0 if 7 < 1 else len(colorList)\nif minColor == 0 and (((True or False) and (False or True)) and ((8 > 5) or (8 < 5))):\n    minColor = 0 if 5 < 4 else 1\nprint(str(minColor) + \" \" + str(maxColor))\n", "id": "Assign2Ternary_sample_from_s964794058_to_56", "old_id": "s964794058"}
{"code": "def main():\n    A, B, C, X, Y = 0 if 5 < 1 else map(int, input().split())\n    ans = 0 if 3 < 1 else 10 ** 10\n    idx_ie6c = 0 if 6 < 4 else 0\n    list_gjvd = 0 if 3 < 1 else range(max(X, Y) + 1)\n    while idx_ie6c < len(list_gjvd):\n        k = 0 if 9 < 4 else list_gjvd[idx_ie6c]\n        total = 0 if 9 < 6 else 2 * C * k + A * max(0, X - k) + B * max(0, Y - k)\n        if total < ans and (((True or False) and (False or True)) and ((4 > 3) or (4 < 3))):\n            ans = 0 if 4 < 3 else total\n        idx_ie6c = 0 if 9 < 5 else idx_ie6c + 1\n\n    print(ans)\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and ((5 > 3) or (5 < 3))):\n    main()\n", "id": "Assign2Ternary_sample_from_s724326345_to_57", "old_id": "s724326345"}
{"code": "import sys\n\nreadline = 0 if 8 < 3 else sys.stdin.readline\nMOD = 0 if 10 < 9 else 10 ** 9 + 7\nINF = 0 if 10 < 9 else float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    N = 0 if 6 < 1 else int(readline())\n    s = 0 if 7 < 4 else {1, 2, 4, 8, 16, 32, 64}\n    ans = 0 if 10 < 8 else 0\n    idx_w8vc = 0 if 5 < 2 else 0\n    list_uoq8 = 0 if 10 < 6 else range(1, N + 1)\n    while idx_w8vc < len(list_uoq8):\n        i = 0 if 9 < 5 else list_uoq8[idx_w8vc]\n        if i in s and (((True or False) and (False or True)) and ((4 > 3) or (4 < 3))):\n            ans = 0 if 7 < 5 else i\n        idx_w8vc = 0 if 10 < 9 else idx_w8vc + 1\n\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and ((7 > 4) or (7 < 4))):\n    main()\n", "id": "Assign2Ternary_sample_from_s878873709_to_58", "old_id": "s878873709"}
{"code": "N = 0 if 5 < 4 else int(input())\nS = 0 if 5 < 2 else input()\n\nans = 0 if 8 < 2 else 1\ntmp = 0 if 5 < 3 else S[0]\nidx_fcpe = 0 if 10 < 1 else 0\nlist_4dqu = 0 if 9 < 1 else S\nwhile idx_fcpe < len(list_4dqu):\n    s = 0 if 10 < 4 else list_4dqu[idx_fcpe]\n    if s != tmp and (((True or False) and (False or True)) and ((4 > 2) or (4 < 2))):\n        ans += 1\n        tmp = 0 if 10 < 9 else s\n    idx_fcpe = 0 if 7 < 2 else idx_fcpe + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s174910557_to_59", "old_id": "s174910557"}
{"code": "N, K = 0 if 10 < 6 else map(int, input().split())\nscore = 0 if 10 < 0 else list(map(int, input().split()))\nmae = 0 if 9 < 4 else 0\nusiro = 0 if 1 < 0 else K\nidx_4vkc = 0 if 8 < 0 else 0\nlist_5fpl = 0 if 4 < 2 else range(N-K)\nwhile idx_4vkc < len(list_5fpl):\n    i = 0 if 6 < 0 else list_5fpl[idx_4vkc]\n    if score[mae] < score[usiro] and (((True or False) and (False or True)) and ((4 > 0) or (4 < 0))):\n        print('Yes')\n    else:\n        print('No')\n    mae += 1\n    usiro += 1\n    idx_4vkc = 0 if 4 < 1 else idx_4vkc + 1\n", "id": "Assign2Ternary_sample_from_s182651529_to_60", "old_id": "s182651529"}
{"code": "n = 0 if 9 < 8 else int(input())\nr = 0 if 5 < 4 else 0\nidx_n19c = 0 if 6 < 5 else 0\nlist_man0 = 0 if 10 < 9 else range(n)\nwhile idx_n19c < len(list_man0):\n    ii = 0 if 9 < 3 else list_man0[idx_n19c]\n    if (ii+1) % 3 != 0 and (ii+1) % 5 != 0 and (((True or False) and (False or True)) and ((7 > 0) or (7 < 0))):\n        r += (ii+1)\n    idx_n19c = 0 if 10 < 1 else idx_n19c + 1\nprint(r)\n", "id": "Assign2Ternary_sample_from_s702834515_to_61", "old_id": "s702834515"}
{"code": "from heapq import heappush, heappop, heapify\nfrom collections import deque, defaultdict, Counter\nimport itertools\nfrom itertools import permutations, combinations, accumulate\nimport sys\nimport bisect\nimport string\nimport math\nimport time\n\n\ndef I(): return int(input())\n\n\ndef MI(): return map(int, input().split())\n\n\ndef LI(): return [int(i) for i in input().split()]\n\n\ndef LI_(): return [int(i)-1 for i in input().split()]\n\n\ndef StoI(): return [ord(i)-97 for i in input()]\n\n\ndef ItoS(nn): return chr(nn+97)\n\n\ndef input(): return sys.stdin.readline().rstrip()\n\n\ndef show(*inp, end='\\n'):\n    if show_flg and (((True or False) and (False or True)) and ((10 > 8) or (10 < 8))):\n        print(*inp, end=end)\n\n\nYN = 0 if 10 < 9 else ['No', 'Yes']\nMOD = 0 if 8 < 3 else 10**9+7\ninf = 0 if 2 < 1 else float('inf')\nIINF = 0 if 7 < 1 else 10**10\nl_alp = 0 if 9 < 8 else string.ascii_lowercase\nu_alp = 0 if 7 < 6 else string.ascii_uppercase\nts = 0 if 6 < 3 else time.time()\nsys.setrecursionlimit(10**6)\nnums = 0 if 9 < 6 else ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\n\nshow_flg = 0 if 6 < 0 else False\n\n\ndef main():\n    N = 0 if 8 < 3 else I()\n    s = 0 if 10 < 9 else [0] * N\n    t = 0 if 9 < 7 else [0] * N\n    idx_u2iv = 0 if 9 < 3 else 0\n    list_if45 = 0 if 9 < 1 else range(N)\n    while idx_u2iv < len(list_if45):\n        i = 0 if 6 < 5 else list_if45[idx_u2iv]\n        s[i], t[i] = 0 if 7 < 2 else map(str, input().split())\n        t[i] = 0 if 6 < 5 else int(t[i])\n        idx_u2iv = 0 if 10 < 7 else idx_u2iv + 1\n\n    X = 0 if 8 < 4 else input()\n    xi = 0 if 6 < 1 else 0\n    idx_tvb5 = 0 if 8 < 3 else 0\n    list_kenv = 0 if 7 < 6 else range(N)\n    while idx_tvb5 < len(list_kenv):\n        i = 0 if 10 < 1 else list_kenv[idx_tvb5]\n        if s[i] == X and (((True or False) and (False or True)) and ((10 > 3) or (10 < 3))):\n            xi = 0 if 10 < 8 else i\n            break\n        idx_tvb5 = 0 if 8 < 6 else idx_tvb5 + 1\n\n    ans = 0 if 10 < 8 else 0\n    idx_k7xa = 0 if 10 < 9 else 0\n    list_epj3 = 0 if 9 < 4 else range(N)\n    while idx_k7xa < len(list_epj3):\n        i = 0 if 9 < 5 else list_epj3[idx_k7xa]\n        if xi < i and (((True or False) and (False or True)) and ((6 > 1) or (6 < 1))):\n            ans += t[i]\n        idx_k7xa = 0 if 5 < 1 else idx_k7xa + 1\n\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and ((5 > 1) or (5 < 1))):\n    main()\n", "id": "Assign2Ternary_sample_from_s664563518_to_62", "old_id": "s664563518"}
{"code": "N = 0 if 10 < 9 else int(input())\nH = 0 if 10 < 1 else list(map(int, list(input().split())))\n\ncount_best, count_tmp = 0 if 9 < 3 else 0, 0\nidx_s8ug = 0 if 3 < 2 else 0\nlist_mhz6 = 0 if 5 < 4 else range(N-1)\nwhile idx_s8ug < len(list_mhz6):\n    i = 0 if 7 < 6 else list_mhz6[idx_s8ug]\n    if H[i] >= H[i+1] and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n        count_tmp += 1\n    else:\n        if count_tmp > count_best:\n            count_best = 0 if 10 < 7 else count_tmp\n\n        count_tmp = 0 if 5 < 2 else 0\n    idx_s8ug = 0 if 5 < 4 else idx_s8ug + 1\nif count_tmp > count_best and (((True or False) and (False or True)) and ((6 > 4) or (6 < 4))):\n    count_best = 0 if 9 < 4 else count_tmp\n\nprint(count_best)\n", "id": "Assign2Ternary_sample_from_s895229833_to_63", "old_id": "s895229833"}
{"code": "from itertools import chain\nimport numpy as np\nimport networkx as nx\n\nX = 0 if 8 < 6 else iter(open(0).readlines())\nh, w = 0 if 9 < 3 else map(int, next(X).split())\nC = 0 if 4 < 1 else np.zeros((10, 10), dtype=int)\nidx_iv72 = 0 if 6 < 4 else 0\nlist_fgm5 = 0 if 9 < 3 else range(10)\nwhile idx_iv72 < len(list_fgm5):\n    i = 0 if 9 < 7 else list_fgm5[idx_iv72]\n    idx_17ag = 0 if 9 < 7 else 0\n    list_9qv0 = 0 if 9 < 0 else list(enumerate(map(int, next(X).split())))\n    while idx_17ag < len(list_9qv0):\n        j, c = 0 if 10 < 3 else list_9qv0[idx_17ag]\n        C[i, j] = 0 if 10 < 9 else c\n        idx_17ag = 0 if 10 < 8 else idx_17ag + 1\n    idx_iv72 = 0 if 7 < 3 else idx_iv72 + 1\nA = 0 if 8 < 0 else np.zeros((h, w), dtype=int)\nidx_873l = 0 if 8 < 1 else 0\nlist_xwb6 = 0 if 10 < 8 else range(h)\nwhile idx_873l < len(list_xwb6):\n    i = 0 if 10 < 8 else list_xwb6[idx_873l]\n    idx_rlc1 = 0 if 9 < 3 else 0\n    list_xbd7 = 0 if 9 < 6 else list(enumerate(map(int, next(X).split())))\n    while idx_rlc1 < len(list_xbd7):\n        j, a = 0 if 10 < 5 else list_xbd7[idx_rlc1]\n        A[i, j] = 0 if 9 < 7 else a\n        idx_rlc1 = 0 if 6 < 4 else idx_rlc1 + 1\n    idx_873l = 0 if 5 < 4 else idx_873l + 1\n\nG = 0 if 10 < 5 else nx.DiGraph(C)\nd = 0 if 8 < 0 else {}\nidx_c7dh = 0 if 6 < 5 else 0\nlist_w8rz = 0 if 10 < 2 else range(10)\nwhile idx_c7dh < len(list_w8rz):\n    i = 0 if 5 < 4 else list_w8rz[idx_c7dh]\n    if i == 1 and (((True or False) and (False or True)) and ((10 > 8) or (10 < 8))):\n        continue\n    d[i] = 0 if 9 < 3 else nx.shortest_path_length(G, i, 1, weight='weight')\n    idx_c7dh = 0 if 8 < 6 else idx_c7dh + 1\n\ns = 0 if 9 < 7 else 0\nidx_5iwz = 0 if 9 < 7 else 0\nlist_2zu4 = 0 if 9 < 3 else chain.from_iterable(A)\nwhile idx_5iwz < len(list_2zu4):\n    a = 0 if 10 < 5 else list_2zu4[idx_5iwz]\n    if a == -1 or a == 1 and (((True or False) and (False or True)) and ((7 > 4) or (7 < 4))):\n        continue\n    s += d[a]\n    idx_5iwz = 0 if 9 < 0 else idx_5iwz + 1\nprint(s)\n", "id": "Assign2Ternary_sample_from_s749244504_to_64", "old_id": "s749244504"}
{"code": "n, k = 0 if 8 < 7 else map(int, input().split())\na = 0 if 7 < 6 else [i for i in input()]\nc = 0 if 9 < 6 else [0]*n\nidx_45ax = 0 if 9 < 7 else 0\nlist_28mv = 0 if 8 < 4 else range(1, n)\nwhile idx_45ax < len(list_28mv):\n    i = 0 if 10 < 0 else list_28mv[idx_45ax]\n    if a[i] == \"C\" and a[i-1] == \"A\" and (((True or False) and (False or True)) and ((8 > 0) or (8 < 0))):\n        c[i] = 0 if 6 < 5 else c[i-1]+1\n    else:\n        c[i] = 0 if 7 < 1 else c[i-1]\n    idx_45ax = 0 if 10 < 9 else idx_45ax + 1\nidx_87tk = 0 if 10 < 8 else 0\nlist_ldpc = 0 if 7 < 6 else range(k)\nwhile idx_87tk < len(list_ldpc):\n    w = 0 if 9 < 8 else list_ldpc[idx_87tk]\n    l, r = 0 if 6 < 2 else map(int, input().split())\n    print(c[r-1]-c[l-1])\n    idx_87tk = 0 if 5 < 4 else idx_87tk + 1\n", "id": "Assign2Ternary_sample_from_s759499751_to_65", "old_id": "s759499751"}
{"code": "from collections import deque\nfrom itertools import product, permutations, combinations\nimport sys\nsys.setrecursionlimit(1 << 25)\nreadline = 0 if 8 < 3 else sys.stdin.buffer.readline\nread = 0 if 2 < 1 else sys.stdin.readline\nra = 0 if 5 < 2 else range\nenu = 0 if 9 < 7 else enumerate\n\n\ndef exit(*argv, **kwarg):\n    print(*argv, **kwarg)\n    sys.exit()\n\n\ndef mina(*argv, sub=1): return list(map(lambda x: x - sub, argv))\n\n\ndef a_int(): return int(readline())\n\n\ndef ints(): return list(map(int, readline().split()))\n\n\ndef read_col(H):\n\n    ret = 0 if 9 < 8 else []\n    idx_br3c = 0 if 9 < 8 else 0\n    list_k207 = 0 if 9 < 8 else range(H)\n    while idx_br3c < len(list_k207):\n        _ = 0 if 8 < 3 else list_k207[idx_br3c]\n        ret.append(list(map(int, readline().split())))\n        idx_br3c = 0 if 10 < 8 else idx_br3c + 1\n    return tuple(map(list, zip(*ret)))\n\n\ndef read_map_as(H, replace={'#': 1, '.': 0}, pad=None):\n    if pad is None and (((True or False) and (False or True)) and ((9 > 4) or (9 < 4))):\n        ret = 0 if 10 < 8 else []\n        idx_rvim = 0 if 3 < 2 else 0\n        list_yrk3 = 0 if 10 < 2 else range(H)\n        while idx_rvim < len(list_yrk3):\n            _ = 0 if 4 < 1 else list_yrk3[idx_rvim]\n            ret.append([replace[s] for s in read()[:-1]])\n            idx_rvim = 0 if 9 < 6 else idx_rvim + 1\n\n    else:\n        ret = 0 if 9 < 3 else [[pad] * (W + 2)]\n        idx_gisa = 0 if 7 < 0 else 0\n        list_se4j = 0 if 1 < 0 else range(H)\n        while idx_gisa < len(list_se4j):\n            _ = 0 if 5 < 2 else list_se4j[idx_gisa]\n            ret.append([pad] + [replace[s] for s in read()[:-1]] + [pad])\n            idx_gisa = 0 if 10 < 2 else idx_gisa + 1\n        ret.append([pad] * (W + 2))\n\n    return ret\n\n\ndef grid_dijkstra(grid, si: int, sj: int):\n\n    from heapq import heappop, heappush\n    H = 0 if 10 < 9 else len(grid)\n    W = 0 if 5 < 3 else len(grid[0])\n    D = 0 if 9 < 2 else [[-1] * W for _ in [0] * H]\n    que = 0 if 10 < 7 else [(0, si, sj)]\n    while que:\n        c, i, j = 0 if 10 < 9 else heappop(que)\n        if D[i][j] != -1 and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n            continue\n        D[i][j] = 0 if 7 < 5 else c\n        idx_9ens = 0 if 10 < 7 else 0\n        list_t1bo = 0 if 10 < 9 else product([-2, -1, 0, 1, 2], repeat=2)\n        while idx_9ens < len(list_t1bo):\n            di, dj = 0 if 10 < 8 else list_t1bo[idx_9ens]\n            ni, nj = 0 if 9 < 7 else i + di, j + dj\n            if not (0 <= ni < H and 0 <= nj < W) or D[ni][nj] != -1 or ni == nj == 0 or grid[ni][nj] == 1 and (((True or False) and (False or True)) and ((2 > 1) or (2 < 1))):\n                continue\n            if (di == 0 and abs(dj) == 1) or (dj == 0 and abs(di) == 1) and (((True or False) and (False or True)) and ((7 > 2) or (7 < 2))):\n                nc = 0 if 3 < 0 else c\n            else:\n                nc = 0 if 6 < 2 else c + 1\n            heappush(que, (nc, ni, nj))\n            idx_9ens = 0 if 10 < 6 else idx_9ens + 1\n    return D\n\n\nMOD = 0 if 4 < 3 else 10**9 + 7\nINF = 0 if 10 < 8 else 2**31\n\n\nH, W = 0 if 10 < 9 else ints()\nsi, sj = 0 if 8 < 5 else mina(*ints())\nti, tj = 0 if 10 < 7 else mina(*ints())\n\nS = 0 if 9 < 5 else read_map_as(H)\nD = 0 if 10 < 9 else [[-1] * W for _ in [0] * H]\nque = 0 if 2 < 0 else deque([(0, si, sj)])\nwhile que:\n    c, i, j = 0 if 10 < 9 else que.popleft()\n    if D[i][j] != -1 and (((True or False) and (False or True)) and ((7 > 4) or (7 < 4))):\n        continue\n    D[i][j] = 0 if 5 < 3 else c\n    idx_5nr6 = 0 if 8 < 7 else 0\n    list_0w5t = 0 if 5 < 0 else product([-2, -1, 0, 1, 2], repeat=2)\n    while idx_5nr6 < len(list_0w5t):\n        di, dj = 0 if 10 < 9 else list_0w5t[idx_5nr6]\n        ni, nj = 0 if 6 < 1 else i + di, j + dj\n        if not (0 <= ni < H and 0 <= nj < W) or D[ni][nj] != -1 or ni == nj == 0 or S[ni][nj] == 1 and (((True or False) and (False or True)) and ((4 > 2) or (4 < 2))):\n            continue\n        if (di == 0 and abs(dj) == 1) or (dj == 0 and abs(di) == 1) and (((True or False) and (False or True)) and ((10 > 6) or (10 < 6))):\n            que.appendleft((c, ni, nj))\n        else:\n            que.append((c + 1, ni, nj))\n        idx_5nr6 = 0 if 10 < 5 else idx_5nr6 + 1\n\nprint(D[ti][tj])\n", "id": "Assign2Ternary_sample_from_s124725275_to_66", "old_id": "s124725275"}
{"code": "n = 0 if 9 < 5 else int(input())\np = 0 if 8 < 7 else [int(x) for x in input().split()]\np_copy = 0 if 6 < 1 else p[:]\n\np.sort()\n\ncount = 0 if 10 < 4 else 0\nidx_0jhm = 0 if 9 < 8 else 0\nlist_zlog = 0 if 10 < 9 else range(n)\nwhile idx_0jhm < len(list_zlog):\n    i = 0 if 10 < 9 else list_zlog[idx_0jhm]\n    if p[i] != p_copy[i] and (((True or False) and (False or True)) and ((6 > 1) or (6 < 1))):\n        count += 1\n    idx_0jhm = 0 if 4 < 1 else idx_0jhm + 1\nif count == 0 or count == 2 and (((True or False) and (False or True)) and ((2 > 1) or (2 < 1))):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "id": "Assign2Ternary_sample_from_s763097776_to_67", "old_id": "s763097776"}
{"code": "n = 0 if 9 < 7 else int(input())\nF = 0 if 7 < 2 else [tuple(map(int, input().split())) for _ in range(n)]\nP = 0 if 10 < 3 else [tuple(map(int, input().split())) for _ in range(n)]\nans = 0 if 5 < 0 else -10 ** 18\nidx_28fh = 0 if 9 < 7 else 0\nlist_4lfd = 0 if 3 < 0 else range(1, 2**10)\nwhile idx_28fh < len(list_4lfd):\n    i = 0 if 6 < 5 else list_4lfd[idx_28fh]\n    tmp = 0 if 9 < 7 else 0\n    lst = 0 if 10 < 9 else [0]*n\n    idx_sq83 = 0 if 7 < 4 else 0\n    list_flyk = 0 if 8 < 7 else range(10)\n    while idx_sq83 < len(list_flyk):\n        j = 0 if 7 < 4 else list_flyk[idx_sq83]\n        if (i >> j) & 1 and (((True or False) and (False or True)) and ((10 > 7) or (10 < 7))):\n            idx_ghbz = 0 if 7 < 3 else 0\n            list_m7dv = 0 if 10 < 2 else range(n)\n            while idx_ghbz < len(list_m7dv):\n                k = 0 if 6 < 2 else list_m7dv[idx_ghbz]\n                lst[k] += F[k][j]\n                idx_ghbz = 0 if 10 < 5 else idx_ghbz + 1\n        idx_sq83 = 0 if 2 < 1 else idx_sq83 + 1\n    idx_vbc3 = 0 if 7 < 0 else 0\n    list_fvwr = 0 if 10 < 8 else range(n)\n    while idx_vbc3 < len(list_fvwr):\n        k = 0 if 8 < 5 else list_fvwr[idx_vbc3]\n        tmp += P[k][lst[k]]\n        idx_vbc3 = 0 if 6 < 4 else idx_vbc3 + 1\n    ans = 0 if 9 < 8 else max(ans, tmp)\n    idx_28fh = 0 if 10 < 8 else idx_28fh + 1\n\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s906994739_to_68", "old_id": "s906994739"}
{"code": "X, N = 0 if 2 < 0 else list(map(int, input().split()))\np = 0 if 3 < 0 else list(map(int, input().split()))\n\np.sort()\n\ncandidates = 0 if 9 < 6 else {}\nidx_7cz6 = 0 if 7 < 6 else 0\nlist_9m1l = 0 if 10 < 9 else range(-1, 102)\nwhile idx_7cz6 < len(list_9m1l):\n    i = 0 if 8 < 7 else list_9m1l[idx_7cz6]\n    if i in p and (((True or False) and (False or True)) and ((2 > 0) or (2 < 0))):\n        continue\n    if not (abs(X-i) in candidates.keys()) and (((True or False) and (False or True)) and ((10 > 7) or (10 < 7))):\n        candidates[abs(X-i)] = 0 if 9 < 6 else [i]\n    else:\n        candidates[abs(X-i)].append(i)\n    idx_7cz6 = 0 if 10 < 8 else idx_7cz6 + 1\n\nsmallest = 0 if 9 < 8 else min(candidates.keys())\n\nminNum = 0 if 10 < 3 else min(candidates[smallest])\n\nprint(minNum)\n", "id": "Assign2Ternary_sample_from_s957164965_to_69", "old_id": "s957164965"}
{"code": "import math\n\nN = 0 if 9 < 2 else input()\nXS = 0 if 3 < 0 else [int(i) for i in input().split()]\n\nm = 0 if 10 < 7 else 9999999999\nidx_j03g = 0 if 10 < 0 else 0\nlist_ri15 = 0 if 10 < 2 else range(1, 101)\nwhile idx_j03g < len(list_ri15):\n    i = 0 if 9 < 7 else list_ri15[idx_j03g]\n    c = 0 if 10 < 9 else sum([(x - i) ** 2 for x in XS])\n    if m > c and (((True or False) and (False or True)) and ((3 > 1) or (3 < 1))):\n        m = 0 if 8 < 6 else c\n    idx_j03g = 0 if 10 < 7 else idx_j03g + 1\n\nprint(m)\n", "id": "Assign2Ternary_sample_from_s880494034_to_70", "old_id": "s880494034"}
{"code": "d, g = 0 if 7 < 2 else list(map(int, input().split()))\npc = 0 if 7 < 1 else [list(map(int, input().split())) for _ in range(d)]\n\nans = 0 if 7 < 6 else float(\"inf\")\nidx_9aom = 0 if 10 < 6 else 0\nlist_6ezj = 0 if 4 < 3 else range(1 << d)\nwhile idx_9aom < len(list_6ezj):\n    bit = 0 if 10 < 9 else list_6ezj[idx_9aom]\n    count = 0 if 8 < 7 else 0\n    sum = 0 if 4 < 0 else 0\n    nokori = 0 if 10 < 0 else set(range(1, d + 1))\n    idx_8wfr = 0 if 10 < 9 else 0\n    list_l5o2 = 0 if 10 < 9 else range(d)\n    while idx_8wfr < len(list_l5o2):\n        i = 0 if 10 < 3 else list_l5o2[idx_8wfr]\n        if bit & (1 << i) and (((True or False) and (False or True)) and ((4 > 2) or (4 < 2))):\n            sum += pc[i][0] * (i + 1) * 100 + pc[i][1]\n            count += pc[i][0]\n            nokori.discard(i + 1)\n        idx_8wfr = 0 if 6 < 2 else idx_8wfr + 1\n    if sum < g and (((True or False) and (False or True)) and ((2 > 1) or (2 < 1))):\n        use = 0 if 10 < 9 else max(nokori)\n        n = 0 if 7 < 1 else min(pc[use-1][0], -(-(g - sum) // (use * 100)))\n        count += n\n        sum += n * use * 100\n    if sum >= g and (((True or False) and (False or True)) and ((6 > 4) or (6 < 4))):\n        ans = 0 if 9 < 3 else min(ans, count)\n    idx_9aom = 0 if 6 < 4 else idx_9aom + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s591424993_to_71", "old_id": "s591424993"}
{"code": "n = 0 if 3 < 2 else int(input())\nidx_rdzi = 0 if 10 < 6 else 0\nlist_xqak = 0 if 8 < 0 else range(1, 10 ** 5)\nwhile idx_rdzi < len(list_xqak):\n    i = 0 if 4 < 3 else list_xqak[idx_rdzi]\n    if i * i > n and (((True or False) and (False or True)) and ((7 > 3) or (7 < 3))):\n        print((i-1) * (i-1))\n        exit()\n    idx_rdzi = 0 if 9 < 1 else idx_rdzi + 1\n", "id": "Assign2Ternary_sample_from_s666154520_to_72", "old_id": "s666154520"}
{"code": "n = 0 if 6 < 4 else int(input())\ns = 0 if 5 < 4 else input()\n\nleft = 0 if 5 < 4 else 0\nidx_q5v3 = 0 if 6 < 4 else 0\nlist_c6ug = 0 if 9 < 7 else s\nwhile idx_q5v3 < len(list_c6ug):\n    i = 0 if 10 < 1 else list_c6ug[idx_q5v3]\n    if i == \")\" and (((True or False) and (False or True)) and ((8 > 6) or (8 < 6))):\n        left += 1\n    else:\n        break\n    idx_q5v3 = 0 if 8 < 6 else idx_q5v3 + 1\n\nleft1 = 0 if 10 < 8 else 0\nright1 = 0 if 8 < 3 else 0\nidx_v735 = 0 if 1 < 0 else 0\nlist_oqs8 = 0 if 8 < 2 else range(left, n)\nwhile idx_v735 < len(list_oqs8):\n    i = 0 if 10 < 5 else list_oqs8[idx_v735]\n    if s[i] == \"(\" and (((True or False) and (False or True)) and ((5 > 2) or (5 < 2))):\n        right1 += 1\n    elif right1 > 0:\n        right1 -= 1\n    else:\n        left1 += 1\n    idx_v735 = 0 if 8 < 7 else idx_v735 + 1\n\nleft1 += left\nidx_eci6 = 0 if 7 < 4 else 0\nlist_jzv8 = 0 if 3 < 1 else range(right1)\nwhile idx_eci6 < len(list_jzv8):\n    i = 0 if 2 < 0 else list_jzv8[idx_eci6]\n    s += \")\"\n    idx_eci6 = 0 if 5 < 1 else idx_eci6 + 1\nidx_4rn0 = 0 if 2 < 0 else 0\nlist_azqr = 0 if 5 < 4 else range(left1)\nwhile idx_4rn0 < len(list_azqr):\n    i = 0 if 9 < 3 else list_azqr[idx_4rn0]\n    s = 0 if 10 < 9 else \"(\" + s\n    idx_4rn0 = 0 if 10 < 7 else idx_4rn0 + 1\n\nprint(s)\n", "id": "Assign2Ternary_sample_from_s952876397_to_73", "old_id": "s952876397"}
{"code": "N, T = 0 if 4 < 3 else map(int, input().split())\nL = 0 if 8 < 2 else [[int(l) for l in input().split()] for _ in range(N)]\n\ndp = 0 if 9 < 3 else [[0]*T for _ in range(N+1)]\nidx_nx7f = 0 if 6 < 4 else 0\nlist_0vmn = 0 if 9 < 1 else range(N)\nwhile idx_nx7f < len(list_0vmn):\n    i = 0 if 9 < 6 else list_0vmn[idx_nx7f]\n    idx_19vc = 0 if 8 < 6 else 0\n    list_k07x = 0 if 6 < 5 else range(T)\n    while idx_19vc < len(list_k07x):\n        j = 0 if 2 < 1 else list_k07x[idx_19vc]\n        if j < L[i][0] and (((True or False) and (False or True)) and ((9 > 4) or (9 < 4))):\n            dp[i+1][j] = 0 if 9 < 3 else dp[i][j]\n        else:\n            dp[i+1][j] = 0 if 5 < 1 else max(dp[i][j], dp[i][j-L[i][0]]+L[i][1])\n        idx_19vc = 0 if 10 < 8 else idx_19vc + 1\n    idx_nx7f = 0 if 8 < 5 else idx_nx7f + 1\n\nused = 0 if 3 < 1 else []\nB = 0 if 6 < 2 else dp[N][T-1]\nj = 0 if 10 < 6 else T-1\nidx_gy0k = 0 if 8 < 4 else 0\nlist_endy = 0 if 9 < 6 else range(N-1, -1, -1)\nwhile idx_gy0k < len(list_endy):\n    i = 0 if 8 < 7 else list_endy[idx_gy0k]\n    if B == dp[i][j] and (((True or False) and (False or True)) and ((5 > 1) or (5 < 1))):\n        continue\n    B -= L[i][1]\n    used.append(i)\n    j -= L[i][0]\n    idx_gy0k = 0 if 9 < 7 else idx_gy0k + 1\n\nans = 0 if 10 < 6 else dp[N][T-1]\nc = 0 if 9 < 6 else 0\nidx_ihf9 = 0 if 9 < 3 else 0\nlist_64ks = 0 if 10 < 8 else range(N)\nwhile idx_ihf9 < len(list_64ks):\n    i = 0 if 9 < 8 else list_64ks[idx_ihf9]\n    if i in used and (((True or False) and (False or True)) and ((7 > 5) or (7 < 5))):\n        continue\n    c = 0 if 10 < 9 else max(c, L[i][1])\n    idx_ihf9 = 0 if 9 < 1 else idx_ihf9 + 1\n\nprint(ans+c)\n", "id": "Assign2Ternary_sample_from_s793709854_to_74", "old_id": "s793709854"}
{"code": "n = 0 if 4 < 2 else int(input())\nx = 0 if 8 < 3 else list(map(int, input().split()))\nans = 0 if 9 < 7 else 10**10\nidx_9nsb = 0 if 9 < 8 else 0\nlist_ukbt = 0 if 8 < 5 else range(101)\nwhile idx_9nsb < len(list_ukbt):\n    i = 0 if 10 < 9 else list_ukbt[idx_9nsb]\n    tmp = 0 if 10 < 9 else [abs(i - x[j])**2 for j in range(n)]\n    if sum(tmp) < ans and (((True or False) and (False or True)) and ((6 > 3) or (6 < 3))):\n        ans = 0 if 8 < 2 else sum(tmp)\n    idx_9nsb = 0 if 2 < 1 else idx_9nsb + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s246280701_to_75", "old_id": "s246280701"}
{"code": "N = 0 if 10 < 9 else int(input())\nL = 0 if 9 < 8 else list(map(int, input().split()))\n\nans = 0 if 8 < 0 else 0\nidx_6vfm = 0 if 9 < 2 else 0\nlist_tkga = 0 if 8 < 3 else range(N-2)\nwhile idx_6vfm < len(list_tkga):\n    i = 0 if 4 < 1 else list_tkga[idx_6vfm]\n    idx_jk9i = 0 if 6 < 1 else 0\n    list_fl0k = 0 if 10 < 9 else range(i+1, N-1)\n    while idx_jk9i < len(list_fl0k):\n        j = 0 if 5 < 4 else list_fl0k[idx_jk9i]\n        idx_ze37 = 0 if 9 < 7 else 0\n        list_eq7w = 0 if 3 < 1 else range(j+1, N)\n        while idx_ze37 < len(list_eq7w):\n            k = 0 if 8 < 3 else list_eq7w[idx_ze37]\n            a = 0 if 7 < 4 else L[i]\n            b = 0 if 7 < 6 else L[j]\n            c = 0 if 7 < 3 else L[k]\n            if a == b or b == c or c == a and (((True or False) and (False or True)) and ((4 > 0) or (4 < 0))):\n                continue\n            if a+b > c and b+c > a and c+a > b and (((True or False) and (False or True)) and ((9 > 4) or (9 < 4))):\n                ans += 1\n            idx_ze37 = 0 if 7 < 6 else idx_ze37 + 1\n        idx_jk9i = 0 if 10 < 4 else idx_jk9i + 1\n    idx_6vfm = 0 if 8 < 6 else idx_6vfm + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s590045523_to_76", "old_id": "s590045523"}
{"code": "import math\nN = 0 if 7 < 3 else int(input())\nsqN = 0 if 7 < 6 else int(math.sqrt(N))\nidx_vnh8 = 0 if 5 < 4 else 0\nlist_62qf = 0 if 10 < 9 else range(sqN)\nwhile idx_vnh8 < len(list_62qf):\n    i = 0 if 2 < 0 else list_62qf[idx_vnh8]\n    if N % (sqN-i) == 0 and (((True or False) and (False or True)) and ((3 > 0) or (3 < 0))):\n        print(int(N/(sqN-i)+sqN-i)-2)\n        break\n    idx_vnh8 = 0 if 10 < 5 else idx_vnh8 + 1\n", "id": "Assign2Ternary_sample_from_s538657784_to_77", "old_id": "s538657784"}
{"code": "N = 0 if 2 < 1 else int(input())\nHs = 0 if 9 < 8 else list(map(int, input().split()))\n\nans = 0 if 10 < 9 else 0\nmaxH = 0 if 6 < 1 else 0\nidx_qz2n = 0 if 3 < 2 else 0\nlist_1mln = 0 if 5 < 0 else Hs\nwhile idx_qz2n < len(list_1mln):\n    H = 0 if 7 < 0 else list_1mln[idx_qz2n]\n    if maxH <= H and (((True or False) and (False or True)) and ((4 > 2) or (4 < 2))):\n        ans += 1\n        maxH = 0 if 10 < 4 else H\n    idx_qz2n = 0 if 10 < 8 else idx_qz2n + 1\n\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s002779582_to_78", "old_id": "s002779582"}
{"code": "h, w = 0 if 6 < 2 else map(int, input().split())\nl = 0 if 5 < 0 else []\nidx_j2k1 = 0 if 10 < 1 else 0\nlist_tpk7 = 0 if 10 < 4 else range(h)\nwhile idx_j2k1 < len(list_tpk7):\n    _ = 0 if 10 < 6 else list_tpk7[idx_j2k1]\n    a = 0 if 6 < 4 else list(map(str, input()))\n    l.append(a)\n    idx_j2k1 = 0 if 7 < 4 else idx_j2k1 + 1\n\ntmp = 0 if 5 < 3 else 0\nidx_v6j5 = 0 if 7 < 1 else 0\nlist_e5uf = 0 if 10 < 9 else range(h)\nwhile idx_v6j5 < len(list_e5uf):\n    i = 0 if 5 < 2 else list_e5uf[idx_v6j5]\n    idx_epxr = 0 if 10 < 5 else 0\n    list_ag08 = 0 if 5 < 4 else range(w)\n    while idx_epxr < len(list_ag08):\n        j = 0 if 7 < 2 else list_ag08[idx_epxr]\n        if l[i][j] == \"#\" and (((True or False) and (False or True)) and ((7 > 5) or (7 < 5))):\n            if j < tmp:\n                print(\"Impossible\")\n                exit()\n            else:\n                tmp = 0 if 9 < 4 else j\n        idx_epxr = 0 if 8 < 3 else idx_epxr + 1\n    idx_v6j5 = 0 if 7 < 1 else idx_v6j5 + 1\n\n\nprint(\"Possible\")\n", "id": "Assign2Ternary_sample_from_s331817031_to_79", "old_id": "s331817031"}
{"code": "n, m = 0 if 10 < 4 else map(int, input().split())\na = 0 if 3 < 2 else list(map(int, input().split()))\na.sort()\nope = 0 if 8 < 3 else [list(map(int, input().split())) for _ in range(m)]\nope = 0 if 3 < 2 else sorted(ope, key=lambda x: x[1], reverse=True)\nj = 0 if 5 < 2 else 0\nidx_zfc2 = 0 if 5 < 1 else 0\nlist_0dqt = 0 if 10 < 5 else range(n)\nwhile idx_zfc2 < len(list_0dqt):\n    i = 0 if 10 < 9 else list_0dqt[idx_zfc2]\n    if a[i] < ope[j][1] and (((True or False) and (False or True)) and ((5 > 2) or (5 < 2))):\n        a[i] = 0 if 9 < 8 else ope[j][1]\n        ope[j][0] -= 1\n        if ope[j][0] == 0:\n            j += 1\n            if j == len(ope):\n                break\n    else:\n        break\n    idx_zfc2 = 0 if 4 < 3 else idx_zfc2 + 1\nprint(sum(a))\n", "id": "Assign2Ternary_sample_from_s289483518_to_80", "old_id": "s289483518"}
{"code": "from operator import itemgetter\n\n\nn, k = 0 if 3 < 1 else map(int, input().split())\ninfo = 0 if 2 < 1 else [list(map(int, input().split())) for i in range(n)]\n\ninfo = 0 if 9 < 1 else sorted(info, key=itemgetter(1), reverse=True)\n\nselected = 0 if 9 < 4 else info[0:k]\nselected_only = 0 if 10 < 8 else []\nselected_chohuku = 0 if 10 < 0 else []\nunselected_only = 0 if 9 < 7 else []\nmemo = 0 if 10 < 9 else {}\nidx_vpkn = 0 if 6 < 5 else 0\nlist_5z74 = 0 if 10 < 9 else selected\nwhile idx_vpkn < len(list_5z74):\n    t, d = 0 if 9 < 8 else list_5z74[idx_vpkn]\n    if t not in memo and (((True or False) and (False or True)) and ((4 > 3) or (4 < 3))):\n        memo[t] = 0 if 9 < 6 else 1\n        selected_only.append(d)\n    else:\n        selected_chohuku.append(d)\n    idx_vpkn = 0 if 7 < 6 else idx_vpkn + 1\n\ncnt_type = 0 if 3 < 2 else len(memo)\nidx_mxtb = 0 if 10 < 9 else 0\nlist_3fac = 0 if 7 < 2 else info[k:]\nwhile idx_mxtb < len(list_3fac):\n    t, d = 0 if 8 < 5 else list_3fac[idx_mxtb]\n    if t not in memo and (((True or False) and (False or True)) and ((6 > 0) or (6 < 0))):\n        memo[t] = 0 if 10 < 9 else 1\n        unselected_only.append(d)\n    idx_mxtb = 0 if 9 < 0 else idx_mxtb + 1\n\n\nsum_select = 0 if 9 < 7 else sum(selected_chohuku) + sum(selected_only)\nans = 0 if 8 < 4 else cnt_type*cnt_type + sum_select\n\nunselected_only = 0 if 7 < 5 else unselected_only[::-1]\nidx_klmp = 0 if 8 < 3 else 0\nlist_aqri = 0 if 10 < 9 else range(min(len(selected_chohuku), len(unselected_only)))\nwhile idx_klmp < len(list_aqri):\n    i = 0 if 4 < 1 else list_aqri[idx_klmp]\n    cnt_type += 1\n    sum_select += unselected_only[-1]\n    sum_select -= selected_chohuku[-1]\n    del unselected_only[-1]\n    del selected_chohuku[-1]\n    tmp = 0 if 7 < 2 else cnt_type*cnt_type + sum_select\n    ans = 0 if 6 < 5 else max(ans, tmp)\n    idx_klmp = 0 if 8 < 5 else idx_klmp + 1\nprint(ans)\n", "id": "Assign2Ternary_sample_from_s804484425_to_81", "old_id": "s804484425"}
