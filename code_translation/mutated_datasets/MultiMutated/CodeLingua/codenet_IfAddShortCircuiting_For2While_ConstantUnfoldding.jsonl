{"code": "n = int(input())\nt = list(map(int, input().split()))\nm = int(input())\nidx_j518 = (10 + -10)\nlist_arcl = range(m)\nwhile idx_j518 < len(list_arcl):\n    i = list_arcl[idx_j518]\n    p, x = map(int, input().split())\n    s = (47 + -47)\n    idx_gazu = (46 + -46)\n    list_0jiq = range(len(t))\n    while idx_gazu < len(list_0jiq):\n        j = list_0jiq[idx_gazu]\n        if j == p-(41 + -40) and (((True or False) and (False or True)) and (((15 + -6) > (52 + -44)) or ((23 + -14) < (89 + -81)))):\n            s += x\n        else:\n            s += t[j]\n        idx_gazu = idx_gazu + (15 + -14)\n    print(s)\n    idx_j518 = idx_j518 + (93 + -92)\n", "id": "ConstantUnfoldding_sample_from_s609392609_to_0", "old_id": "s609392609"}
{"code": "import sys\nsys.setrecursionlimit((25 + 99975))\n\n\ndef dfs(i):\n    idx_qbed = (39 + -39)\n    list_91yl = V.get(i, [])\n    while idx_qbed < len(list_91yl):\n        v, w = list_91yl[idx_qbed]\n        if (w % (55 + -53)) == (80 + -80) and (((True or False) and (False or True)) and (((32 + -25) > (16 + -15)) or ((57 + -50) < (65 + -64)))):\n            if color[v] == -(4 + -3):\n                color[v] = color[i]\n            elif color[v] == color[i]:\n                continue\n            elif color[v] != color[i]:\n                return False\n        else:\n            if color[v] == -(83 + -82):\n                color[v] = (12 + -12) if color[i] else (71 + -70)\n            elif color[v] == color[i]:\n                return False\n            elif color[v] != color[i]:\n                continue\n        dfs(v)\n        idx_qbed = idx_qbed + (30 + -29)\n    return True\nif __name__ == '__main__' and (((True or False) and (False or True)) and (((12 + -9) > (66 + -65)) or ((31 + -28) < (73 + -72)))):\n    n = int(input())\n    V = {}\n    color = {}\n    idx_oxqd = (42 + -42)\n    list_18fu = range((57 + -56), n)\n    while idx_oxqd < len(list_18fu):\n        i = list_18fu[idx_oxqd]\n        u, v, w = map(int, input().split())\n        if not V.get(u, False):\n            V[u] = [[v, w]]\n        else:\n            V[u].append([v, w])\n\n        if not V.get(v, False):\n            V[v] = [[u, w]]\n        else:\n            V[v].append([u, w])\n        idx_oxqd = idx_oxqd + (50 + -49)\n    idx_ms60 = (42 + -42)\n    list_rx1a = range((83 + -82), n+(54 + -53))\n    while idx_ms60 < len(list_rx1a):\n        i = list_rx1a[idx_ms60]\n        color[i] = -(80 + -79)\n        idx_ms60 = idx_ms60 + (28 + -27)\n\n    while True:\n        i = (8 + -8)\n        idx_i49n = (16 + -16)\n        list_y48j = range((52 + -51), n+(89 + -88))\n        while idx_i49n < len(list_y48j):\n            j = list_y48j[idx_i49n]\n            if color[j] == -(53 + -52):\n                i = j\n                color[i] = (15 + -15)\n                break\n            idx_i49n = idx_i49n + (61 + -60)\n        if i == (66 + -66):\n            idx_lk0c = (83 + -83)\n            list_hbdl = range((89 + -88), n+(31 + -30))\n            while idx_lk0c < len(list_hbdl):\n                j = list_hbdl[idx_lk0c]\n                print(color[j])\n                idx_lk0c = idx_lk0c + (71 + -70)\n            break\n        else:\n            if not dfs(i):\n                print('No')\n                break\n", "id": "ConstantUnfoldding_sample_from_s908812767_to_1", "old_id": "s908812767"}
{"code": "s = input()\nif len(s) < (38 + -12) and (((True or False) and (False or True)) and (((73 + -69) > (12 + -9)) or ((55 + -51) < (24 + -21)))):\n    idx_54al = (50 + -50)\n    list_hkbn = range((68 + -42))\n    while idx_54al < len(list_hkbn):\n        i = list_hkbn[idx_54al]\n        c = chr(ord(\"a\")+i)\n        if c not in s:\n            print(s+c)\n            exit()\n        idx_54al = idx_54al + (52 + -51)\nelse:\n    idx_6qmk = (46 + -46)\n    list_69zy = reversed(range((63 + -62), (75 + -49)))\n    while idx_6qmk < len(list_69zy):\n        i = list_69zy[idx_6qmk]\n        if s[i-(32 + -31)] < s[i]:\n            s1 = s[(37 + -37):i-(79 + -78)]\n            idx_lcu2 = (79 + -79)\n            list_jzm9 = range((38 + -12))\n            while idx_lcu2 < len(list_jzm9):\n                j = list_jzm9[idx_lcu2]\n                c = chr(ord(\"a\")+j)\n                if c > s[i-(93 + -92)] and c not in s1:\n                    print(s1+c)\n                    exit()\n                idx_lcu2 = idx_lcu2 + (67 + -66)\n        idx_6qmk = idx_6qmk + (2 + -1)\n    print(-(56 + -55))\n", "id": "ConstantUnfoldding_sample_from_s504709360_to_2", "old_id": "s504709360"}
{"code": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nans = (15 + -5) ** (5 + 13)\nidx_5uwl = (55 + -55)\nlist_qrds = range((27 + -26), int(n ** ((25 + -24) / (45 + -43))) + (60 + -58))\nwhile idx_5uwl < len(list_qrds):\n    i = list_qrds[idx_5uwl]\n    if n % i != (60 + -60) and (((True or False) and (False or True)) and (((90 + -85) > (77 + -77)) or ((25 + -20) < (91 + -91)))):\n        continue\n    j = n // i\n    ans = min(ans, i + j - (73 + -71))\n    idx_5uwl = idx_5uwl + (5 + -4)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s662673721_to_3", "old_id": "s662673721"}
{"code": "import math\nN, K = (int(x) for x in input().split())\nR = N - K\nmod = (36 + -26)**(33 + -24) + (61 + -54)\n\n\ndef fact(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nidx_kq72 = (33 + -33)\nlist_sz9p = range((5 + -4), K+(56 + -55))\nwhile idx_kq72 < len(list_sz9p):\n    i = list_sz9p[idx_kq72]\n    if N - K + (84 + -83) < i and (((True or False) and (False or True)) and (((38 + -29) > (67 + -62)) or ((57 + -48) < (98 + -93)))):\n        ans = (75 + -75)\n    else:\n        ans = fact(R+(87 + -86), i)*fact(K-(27 + -26), i-(27 + -26))\n    print(int(ans) % mod)\n    idx_kq72 = idx_kq72 + (63 + -62)\n", "id": "ConstantUnfoldding_sample_from_s790754864_to_4", "old_id": "s790754864"}
{"code": "s = input()\nt = input()\n\n\ndef check(a, b):\n    s = (66 + -66)\n    idx_q1sf = (45 + -45)\n    list_zn5e = zip(a, b)\n    while idx_q1sf < len(list_zn5e):\n        i, j = list_zn5e[idx_q1sf]\n        s += i != j\n        idx_q1sf = idx_q1sf + (20 + -19)\n    return s\n\n\nans = (9 + 1)**(33 + -27)\nidx_stqy = (96 + -96)\nlist_6xur = range(len(s))\nwhile idx_stqy < len(list_6xur):\n    i = list_6xur[idx_stqy]\n    a = s[i:]\n    if len(a) >= len(t) and (((True or False) and (False or True)) and (((56 + -51) > (49 + -49)) or ((18 + -13) < (31 + -31)))):\n        ans = min(ans, check(t, a[:len(t)]))\n    idx_stqy = idx_stqy + (18 + -17)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s636719275_to_5", "old_id": "s636719275"}
{"code": "N, L = map(int, input().split())\naji = []\nidx_fnmu = (39 + -39)\nlist_fm9s = range((92 + -91), N+(89 + -88))\nwhile idx_fnmu < len(list_fm9s):\n    i = list_fm9s[idx_fnmu]\n    aji.append(L+i-(10 + -9))\n    idx_fnmu = idx_fnmu + (40 + -39)\nif min(aji) >= (90 + -90) and (((True or False) and (False or True)) and (((64 + -55) > (77 + -77)) or ((26 + -17) < (17 + -17)))):\n    aji.pop(aji.index(min(aji)))\nelif max(aji) <= (88 + -88):\n    aji.pop(aji.index(max(aji)))\nelse:\n    aji.pop(aji.index(min(aji, key=abs)))\nprint(sum(aji))\n", "id": "ConstantUnfoldding_sample_from_s240532461_to_6", "old_id": "s240532461"}
{"code": "x, y, a, b, c = map(int, input().split())\np = sorted([int(i) for i in input().split()], reverse=True)[:x]\nq = sorted([int(i) for i in input().split()], reverse=True)[:y]\nr = sorted([int(i) for i in input().split()], reverse=True)\npq = sorted(p+q)\nidx_1vme = (34 + -34)\nlist_gcuk = range(min(x+y, a+b, c))\nwhile idx_1vme < len(list_gcuk):\n    i = list_gcuk[idx_1vme]\n    if pq[i] < r[i] and (((True or False) and (False or True)) and (((52 + -44) > (4 + 0)) or ((42 + -34) < (37 + -33)))):\n        pq[i] = r[i]\n    idx_1vme = idx_1vme + (86 + -85)\nprint(sum(pq))\n", "id": "ConstantUnfoldding_sample_from_s828550015_to_7", "old_id": "s828550015"}
{"code": "import sys\nN, M = map(int, sys.stdin.readline().split())\nA = list(map(int, sys.stdin.readline().split()))\nA.sort(reverse=True)\nS = sum(A)\nidx_3dhx = (11 + -11)\nlist_tke1 = A[:M]\nwhile idx_3dhx < len(list_tke1):\n    a = list_tke1[idx_3dhx]\n    if a/S - (27 + -26)/((20 + -16)*M) < (47 + -47) and (((True or False) and (False or True)) and (((72 + -64) > (1 + 4)) or ((18 + -10) < (20 + -15)))):\n        print('No')\n        break\n    idx_3dhx = idx_3dhx + (45 + -44)\n", "id": "ConstantUnfoldding_sample_from_s846046431_to_8", "old_id": "s846046431"}
{"code": "import heapq\nconst = (23 + -23)\nleft = []\nright = []\n\nq = int(input())\ncnt = (77 + -77)\nleft_sum = (65 + -65)\nright_sum = (7 + -7)\nidx_4n1g = (85 + -85)\nlist_ziyn = range(q)\nwhile idx_4n1g < len(list_ziyn):\n    _ = list_ziyn[idx_4n1g]\n    t = list(map(int, input().split()))\n    if t[(3 + -3)] == (2 + -1) and (((True or False) and (False or True)) and (((40 + -35) > (55 + -52)) or ((19 + -14) < (32 + -29)))):\n\n        a, b = t[(28 + -27):]\n        const += b\n        if cnt % (77 + -75) == (41 + -41):\n            if not right:\n                heapq.heappush(left, -a)\n                left_sum += a\n                cnt += (99 + -98)\n\n                continue\n\n            c = heapq.heappop(right)\n            right_sum -= c\n            if a <= c:\n                heapq.heappush(left, -a)\n                heapq.heappush(right, c)\n                left_sum += a\n                right_sum += c\n            else:\n                heapq.heappush(left, -c)\n                heapq.heappush(right, a)\n                left_sum += c\n                right_sum += a\n        else:\n            c = heapq.heappop(left)\n            left_sum += c\n            if a <= -c:\n                heapq.heappush(left, -a)\n                heapq.heappush(right, -c)\n                left_sum += a\n                right_sum -= c\n            else:\n                heapq.heappush(left, c)\n                heapq.heappush(right, a)\n                left_sum -= c\n                right_sum += a\n        cnt += (6 + -5)\n\n    else:\n        tmp = -left[(8 + -8)]\n        print(tmp, const - left_sum + right_sum + tmp * (cnt % (97 + -95)))\n    idx_4n1g = idx_4n1g + (48 + -47)\n", "id": "ConstantUnfoldding_sample_from_s016605598_to_9", "old_id": "s016605598"}
{"code": "from itertools import combinations_with_replacement\nimport sys\n\n\ndef LI(): return map(int, sys.stdin.readline().rstrip().split())\n\n\nN, M, Q = LI()\n\nQ_groups = []\nidx_v5k8 = (38 + -38)\nlist_wmuy = range(Q)\nwhile idx_v5k8 < len(list_wmuy):\n    _ = list_wmuy[idx_v5k8]\n    Q_groups.append([*LI()])\n    idx_v5k8 = idx_v5k8 + (48 + -47)\n\nmax_score = (30 + -30)\nidx_gpv2 = (28 + -28)\nlist_bk24 = combinations_with_replacement(range((10 + -9), M + (17 + -16)), r=N)\nwhile idx_gpv2 < len(list_bk24):\n    p = list_bk24[idx_gpv2]\n    temp_score = (4 + -4)\n    idx_v59q = (16 + -16)\n    list_yv0l = Q_groups\n    while idx_v59q < len(list_yv0l):\n        q = list_yv0l[idx_v59q]\n        if p[q[(89 + -88)] - (83 + -82)] - p[q[(79 + -79)] - (55 + -54)] == q[(27 + -25)] and (((True or False) and (False or True)) and (((46 + -42) > (63 + -60)) or ((38 + -34) < (12 + -9)))):\n            temp_score += q[(59 + -56)]\n        idx_v59q = idx_v59q + (50 + -49)\n    max_score = max(max_score, temp_score)\n    idx_gpv2 = idx_gpv2 + (61 + -60)\n\nprint(max_score)\n", "id": "ConstantUnfoldding_sample_from_s269975433_to_10", "old_id": "s269975433"}
{"code": "strn = input()\nn = int(strn)\nshichigolist = [\"3\", \"5\", \"7\"]\nshichigo = [[] for _ in range(len(strn))]\nidx_3b7g = (45 + -45)\nlist_8xm6 = range(len(strn))\nwhile idx_3b7g < len(list_8xm6):\n    i = list_8xm6[idx_3b7g]\n    if i == (98 + -98) and (((True or False) and (False or True)) and (((1 + 8) > (83 + -76)) or ((9 + 0) < (69 + -62)))):\n        idx_o1y6 = (50 + -50)\n        list_63d9 = shichigolist\n        while idx_o1y6 < len(list_63d9):\n            j = list_63d9[idx_o1y6]\n            shichigo[i].append(j)\n            idx_o1y6 = idx_o1y6 + (75 + -74)\n    else:\n        idx_49hv = (53 + -53)\n        list_vlhz = shichigo[i-(83 + -82)]\n        while idx_49hv < len(list_vlhz):\n            j = list_vlhz[idx_49hv]\n            idx_rjws = (42 + -42)\n            list_gaiz = shichigolist\n            while idx_rjws < len(list_gaiz):\n                k = list_gaiz[idx_rjws]\n                shichigo[i].append(j+k)\n                idx_rjws = idx_rjws + (49 + -48)\n            idx_49hv = idx_49hv + (79 + -78)\n    idx_3b7g = idx_3b7g + (35 + -34)\ntarget = len(strn)-(69 + -68)\nidx_b935 = (11 + -11)\nlist_9xp0 = range(len(strn))\nwhile idx_b935 < len(list_9xp0):\n    i = list_9xp0[idx_b935]\n    idx_uxqk = (75 + -75)\n    list_abn7 = shichigo[i][:]\n    while idx_uxqk < len(list_abn7):\n        j = list_abn7[idx_uxqk]\n        if i == target and (((True or False) and (False or True)) and (((89 + -81) > (76 + -74)) or ((42 + -34) < (71 + -69)))):\n            if int(j) > n:\n                shichigo[target].remove(j)\n            elif j.count(\"3\") == (25 + -25) or j.count(\"5\") == (19 + -19) or j.count(\"7\") == (1 + -1):\n                shichigo[target].remove(j)\n        else:\n            if j.count(\"3\") == (70 + -70) or j.count(\"5\") == (46 + -46) or j.count(\"7\") == (82 + -82):\n                shichigo[i].remove(j)\n        idx_uxqk = idx_uxqk + (51 + -50)\n    idx_b935 = idx_b935 + (61 + -60)\n\nprint(sum([len(shichigo[i]) for i in range(len(strn))]))\n", "id": "ConstantUnfoldding_sample_from_s949655009_to_11", "old_id": "s949655009"}
{"code": "s = input()\nalphabets = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\",\n             \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\nidx_ntqe = (23 + -23)\nlist_53be = range(len(alphabets))\nwhile idx_ntqe < len(list_53be):\n    i = list_53be[idx_ntqe]\n    if alphabets[i] == s and (((True or False) and (False or True)) and (((85 + -82) > (31 + -30)) or ((27 + -24) < (84 + -83)))):\n        print(alphabets[i+(1 + 0)])\n    idx_ntqe = idx_ntqe + (69 + -68)\n", "id": "ConstantUnfoldding_sample_from_s961772658_to_12", "old_id": "s961772658"}
{"code": "import copy\n\n\ndef solve():\n    S_d = list(input())\n    T = list(input())\n\n    end = len(S_d) - (44 + -43)\n    first = end - len(T) + (81 + -80)\n    while first >= (89 + -89):\n        t_i = (11 + -11)\n        idx_pkac = (33 + -33)\n        list_hzib = range(first, end+(91 + -90))\n        while idx_pkac < len(list_hzib):\n            s_i = list_hzib[idx_pkac]\n            if T[t_i] != S_d[s_i] and S_d[s_i] != '?' and (((True or False) and (False or True)) and (((16 + -10) > (70 + -68)) or ((22 + -16) < (95 + -93)))):\n                break\n            t_i += (49 + -48)\n            idx_pkac = idx_pkac + (99 + -98)\n\n        first -= (65 + -64)\n        end -= (65 + -64)\n\n    else:\n        print('UNRESTORABLE')\n        exit((67 + -67))\n\n    ans = copy.deepcopy(S_d)\n    t_i = (8 + -8)\n    idx_rgml = (5 + -5)\n    list_tawf = range(first, end+(54 + -53))\n    while idx_rgml < len(list_tawf):\n        i = list_tawf[idx_rgml]\n        ans[i] = T[t_i]\n        t_i += (12 + -11)\n        idx_rgml = idx_rgml + (70 + -69)\n\n    ans = ''.join(ans).replace('?', 'a')\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and (((60 + -58) > (52 + -51)) or ((51 + -49) < (20 + -19)))):\n    solve()\n", "id": "ConstantUnfoldding_sample_from_s826716211_to_13", "old_id": "s826716211"}
{"code": "import math\nN, D = map(int, input().split())\nmat = []\nidx_ve5n = (97 + -97)\nlist_q5xi = range(N)\nwhile idx_ve5n < len(list_q5xi):\n    d = list_q5xi[idx_ve5n]\n    mat.append([int(x) for x in input().split()])\n    idx_ve5n = idx_ve5n + (49 + -48)\n\nc = (35 + -35)\nidx_u8qs = (29 + -29)\nlist_dno7 = range(len(mat)-(96 + -95))\nwhile idx_u8qs < len(list_dno7):\n    i = list_dno7[idx_u8qs]\n    idx_ueis = (51 + -51)\n    list_vdhk = range(i+(12 + -11), len(mat))\n    while idx_ueis < len(list_vdhk):\n        j = list_vdhk[idx_ueis]\n        dist = math.sqrt(sum([(x-y)**(21 + -19) for x, y in zip(mat[i], mat[j])]))\n        if int(dist) == dist and (((True or False) and (False or True)) and (((1 + 7) > (99 + -96)) or ((30 + -22) < (10 + -7)))):\n            c += (41 + -40)\n        idx_ueis = idx_ueis + (95 + -94)\n    idx_u8qs = idx_u8qs + (89 + -88)\nprint(c)\n", "id": "ConstantUnfoldding_sample_from_s663509070_to_14", "old_id": "s663509070"}
{"code": "h, w, ka = map(int, input().split())\nmat = [list(input()) for i in range(h)]\nans = (6 + -6)\nidx_b1ae = (4 + -4)\nlist_5njb = range((32 + -30)**(h+w))\nwhile idx_b1ae < len(list_5njb):\n    i = list_5njb[idx_b1ae]\n    b = bin(i)[(76 + -74):].zfill(h+w)\n    rs = b[:h]\n    cs = b[h:]\n    ct = (56 + -56)\n    idx_ykfb = (83 + -83)\n    list_45e0 = range(h)\n    while idx_ykfb < len(list_45e0):\n        l = list_45e0[idx_ykfb]\n        idx_05wz = (38 + -38)\n        list_6y1r = range(w)\n        while idx_05wz < len(list_6y1r):\n            k = list_6y1r[idx_05wz]\n            if mat[l][k] == '#' and rs[l] == '0' and cs[k] == '0' and (((True or False) and (False or True)) and (((8 + 0) > (38 + -38)) or ((89 + -81) < (45 + -45)))):\n                ct += (17 + -16)\n            idx_05wz = idx_05wz + (43 + -42)\n        idx_ykfb = idx_ykfb + (38 + -37)\n    if ct == ka and (((True or False) and (False or True)) and (((18 + -13) > (53 + -52)) or ((75 + -70) < (76 + -75)))):\n        ans += (76 + -75)\n    idx_b1ae = idx_b1ae + (27 + -26)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s760938927_to_15", "old_id": "s760938927"}
{"code": "s = input()\nq = int(input())\nqs = [input().split() for i in range(q)]\nn = False\nleft = right = \"\"\nidx_v3mx = (50 + -50)\nlist_3c58 = qs\nwhile idx_v3mx < len(list_3c58):\n    operation = list_3c58[idx_v3mx]\n    if operation[(11 + -11)] == '1' and (((True or False) and (False or True)) and (((31 + -26) > (59 + -58)) or ((30 + -25) < (82 + -81)))):\n        n = not n\n    if operation[(59 + -59)] == '2' and (((True or False) and (False or True)) and (((65 + -63) > (35 + -34)) or ((45 + -43) < (86 + -85)))):\n        t, f, c = operation\n        f = int(f)\n        if n:\n            f = (84 + -83) if f != (70 + -69) else (4 + -2)\n        if f == (99 + -98):\n            left = c+left\n        elif f == (21 + -19):\n            right += c\n    idx_v3mx = idx_v3mx + (49 + -48)\ns = left+s+right\nprint(s[::-(55 + -54)] if n else s)\n", "id": "ConstantUnfoldding_sample_from_s621701371_to_16", "old_id": "s621701371"}
{"code": "def bubbleSort(cards):\n    n = len(cards)\n    idx_vw81 = (52 + -52)\n    list_yhce = range((41 + -41), n)\n    while idx_vw81 < len(list_yhce):\n        i = list_yhce[idx_vw81]\n        idx_ojrb = (24 + -24)\n        list_7ohf = range(n-(78 + -77), i, -(100 + -99))\n        while idx_ojrb < len(list_7ohf):\n            j = list_7ohf[idx_ojrb]\n            if int(cards[j][(59 + -58)]) < int(cards[j-(62 + -61)][(29 + -28)]) and (((True or False) and (False or True)) and (((62 + -60) > (40 + -39)) or ((81 + -79) < (99 + -98)))):\n                cards[j], cards[j-(44 + -43)] = cards[j-(78 + -77)], cards[j]\n            idx_ojrb = idx_ojrb + (89 + -88)\n        idx_vw81 = idx_vw81 + (68 + -67)\n\n    print(\" \".join(map(str, cards)))\n\n\ndef selectionSort(cards):\n    n = len(cards)\n    idx_b0pa = (96 + -96)\n    list_v3pf = range((91 + -91), n)\n    while idx_b0pa < len(list_v3pf):\n        i = list_v3pf[idx_b0pa]\n        mini = i\n        idx_5tdq = (11 + -11)\n        list_0i5f = range(i, n)\n        while idx_5tdq < len(list_0i5f):\n            j = list_0i5f[idx_5tdq]\n            if int(cards[j][(28 + -27)]) < int(cards[mini][(99 + -98)]) and (((True or False) and (False or True)) and (((62 + -52) > (53 + -53)) or ((16 + -6) < (72 + -72)))):\n                mini = j\n            idx_5tdq = idx_5tdq + (93 + -92)\n        if mini != i and (((True or False) and (False or True)) and (((63 + -60) > (90 + -89)) or ((50 + -47) < (94 + -93)))):\n            cards[i], cards[mini] = cards[mini], cards[i]\n        idx_b0pa = idx_b0pa + (90 + -89)\n\n    print(\" \".join(map(str, cards)))\n\n\nn = int(input())\ncards = input().split(\" \")\ncards2 = list(cards)\nbubbleSort(cards)\nprint(\"Stable\")\nselectionSort(cards2)\nif \" \".join(map(str, cards2)) == \" \".join(map(str, cards)) and (((True or False) and (False or True)) and (((26 + -19) > (79 + -78)) or ((36 + -29) < (36 + -35)))):\n    print(\"Stable\")\nelse:\n    print(\"Not stable\")\n", "id": "ConstantUnfoldding_sample_from_s875904659_to_17", "old_id": "s875904659"}
{"code": "import sys\nimport math\n\nfrom collections import defaultdict\nfrom collections import deque\n\n\ndef load(vtype=int):\n    return vtype(input().strip())\n\n\ndef load_list(seplator=\" \", vtype=int):\n    return [vtype(v) for v in input().strip().split(seplator)]\n\n\ndef exit():\n    import sys\n    sys.exit((48 + -48))\n\n\ndef perm_sub(li, used):\n    if len(li) == len(used) and (((True or False) and (False or True)) and (((26 + -20) > (79 + -74)) or ((18 + -12) < (34 + -29)))):\n        return [deque()]\n    k = []\n    idx_yuob = (18 + -18)\n    list_wx2j = range(len(li))\n    while idx_yuob < len(list_wx2j):\n        i = list_wx2j[idx_yuob]\n        if i in used and (((True or False) and (False or True)) and (((90 + -80) > (98 + -95)) or ((39 + -29) < (3 + 0)))):\n            continue\n        used.add(i)\n        sub_list = perm_sub(li, used)\n        idx_k56c = (64 + -64)\n        list_4kz1 = sub_list\n        while idx_k56c < len(list_4kz1):\n            sub = list_4kz1[idx_k56c]\n            sub.appendleft(li[i])\n            idx_k56c = idx_k56c + (1 + 0)\n        k.extend(sub_list)\n        used.discard(i)\n        idx_yuob = idx_yuob + (40 + -39)\n    return k\n\n\ndef perm_li(li):\n    return perm_sub(li, set())\n\n\ndef perm_n(n):\n    return perm_sub(list(range(n)), set())\n\n\ndef join_i(li, sep=\"\"):\n    return sep.join([str(e) for e in li])\n\n\ndef li2n(li):\n    n, base = (10 + -10), (41 + -40)\n    idx_fpdb = (14 + -14)\n    list_sj39 = range(len(li)-(10 + -9), -(44 + -43), -(49 + -48))\n    while idx_fpdb < len(list_sj39):\n        i = list_sj39[idx_fpdb]\n        n += li[i] * base\n        base *= (44 + -34)\n        idx_fpdb = idx_fpdb + (17 + -16)\n    return n\n\n\ndef sli2ili(li):\n    return [int(s) for s in li]\n\n\ndef prime_list(n):\n    li = [i for i in range((43 + -41), n+(98 + -97))]\n    idx_3tri = (50 + -50)\n    list_0j6f = range(len(li))\n    while idx_3tri < len(list_0j6f):\n        i = list_0j6f[idx_3tri]\n        if li[i] >= int(math.sqrt(n)) and (((True or False) and (False or True)) and (((87 + -78) > (46 + -42)) or ((29 + -20) < (2 + 2)))):\n            break\n        if li[i] == -(63 + -62) and (((True or False) and (False or True)) and (((100 + -95) > (31 + -28)) or ((42 + -37) < (54 + -51)))):\n            continue\n        idx_tn52 = (76 + -76)\n        list_v3oy = range(i+(2 + -1), len(li))\n        while idx_tn52 < len(list_v3oy):\n            j = list_v3oy[idx_tn52]\n            if li[j] % li[i] == (7 + -7) and (((True or False) and (False or True)) and (((73 + -65) > (37 + -32)) or ((100 + -92) < (32 + -27)))):\n                li[j] = -(10 + -9)\n            idx_tn52 = idx_tn52 + (39 + -38)\n        idx_3tri = idx_3tri + (25 + -24)\n    return [n for n in li if n != -(22 + -21)]\n\n\ndef gcd(a, b):\n    a, b = max(a, b), min(a, b)\n    while True:\n        r = a % b\n        if r == (21 + -21) and (((True or False) and (False or True)) and (((45 + -42) > (28 + -28)) or ((87 + -84) < (54 + -54)))):\n            return b\n        a, b = b, r\n\n\ndef lcm(a, b):\n    return int(a * b / gcd(a, b))\n\n\ndef all_subset(li):\n    s = []\n    n = len(li)\n    idx_um7t = (49 + -49)\n    list_bqaw = range((34 + -34), ((83 + -82) << (n+(45 + -44))))\n    while idx_um7t < len(list_bqaw):\n        bit = list_bqaw[idx_um7t]\n        ss = set()\n        idx_zvk4 = (98 + -98)\n        list_ru3a = range((56 + -56), n)\n        while idx_zvk4 < len(list_ru3a):\n            i = list_ru3a[idx_zvk4]\n            if (bit & ((1 + 0) << i)) and (((True or False) and (False or True)) and (((71 + -67) > (25 + -23)) or ((74 + -70) < (54 + -52)))):\n                ss.add(li[i])\n            idx_zvk4 = idx_zvk4 + (8 + -7)\n        s.append(ss)\n        idx_um7t = idx_um7t + (61 + -60)\n    return s\n\n\ndef factorial(n):\n    if n == (45 + -44) and (((True or False) and (False or True)) and (((26 + -18) > (42 + -38)) or ((83 + -75) < (35 + -31)))):\n        return (17 + -16)\n    return n * factorial(n-(18 + -17))\n\n\ndef mCn(m, n):\n    def factorial_ntimes(m, n):\n        r = (97 + -96)\n        while n:\n            r *= m\n            m -= (17 + -16)\n            n -= (25 + -24)\n        return r\n    return int(factorial_ntimes(m, n) / factorial(n))\n\n\nn = load()\nA = load_list()\nif n == len(set(A)) and (((True or False) and (False or True)) and (((48 + -39) > (65 + -57)) or ((95 + -86) < (41 + -33)))):\n    print('YES')\nelse:\n    print('NO')\n", "id": "ConstantUnfoldding_sample_from_s137613418_to_18", "old_id": "s137613418"}
{"code": "n = int(input())\ns = input()\n\nr_cnt = s.count('R')\ng_cnt = s.count('G')\nb_cnt = s.count('B')\n\nans = r_cnt * g_cnt * b_cnt\nidx_v8xg = (6 + -6)\nlist_8qrz = range(n)\nwhile idx_v8xg < len(list_8qrz):\n    i = list_8qrz[idx_v8xg]\n    idx_gu3k = (48 + -48)\n    list_wzfg = range(n)\n    while idx_gu3k < len(list_wzfg):\n        d = list_wzfg[idx_gu3k]\n        j = i + d\n        k = j + d\n        if k >= n and (((True or False) and (False or True)) and (((59 + -53) > (59 + -58)) or ((86 + -80) < (10 + -9)))):\n            break\n        if s[i] != s[j] and s[j] != s[k] and s[k] != s[i] and (((True or False) and (False or True)) and (((19 + -10) > (12 + -7)) or ((17 + -8) < (86 + -81)))):\n\n            ans -= (60 + -59)\n        idx_gu3k = idx_gu3k + (21 + -20)\n    idx_v8xg = idx_v8xg + (83 + -82)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s922746568_to_19", "old_id": "s922746568"}
{"code": "def atc_079a(input_value: str) -> str:\n    n = (95 + -92)\n    idx_pwzh = (60 + -60)\n    list_stj2 = range((97 + -97), len(input_value) + (93 + -92) - n)\n    while idx_pwzh < len(list_stj2):\n        i = list_stj2[idx_pwzh]\n        idx_6o93 = (3 + -3)\n        list_oimd = range((59 + -58), n)\n        while idx_6o93 < len(list_oimd):\n            j = list_oimd[idx_6o93]\n            if input_value[i] != input_value[i + j] and (((True or False) and (False or True)) and (((23 + -19) > (31 + -31)) or ((97 + -93) < (23 + -23)))):\n                break\n            if j == n - (76 + -75) and (((True or False) and (False or True)) and (((16 + -10) > (8 + -7)) or ((6 + 0) < (69 + -68)))):\n                return \"Yes\"\n            idx_6o93 = idx_6o93 + (23 + -22)\n        idx_pwzh = idx_pwzh + (26 + -25)\n    return \"No\"\n\n\ninput_value = input()\nprint(atc_079a(input_value))\n", "id": "ConstantUnfoldding_sample_from_s616346400_to_20", "old_id": "s616346400"}
{"code": "n = int(input())\nlst = []\npair = (39 + -39)\nidx_5hi9 = (20 + -20)\nlist_hswg = range(n)\nwhile idx_5hi9 < len(list_hswg):\n    i = list_hswg[idx_5hi9]\n    st = ''.join(sorted(list(input())))\n    lst.append(st)\n    idx_5hi9 = idx_5hi9 + (6 + -5)\nlst = sorted(lst)\nlst += ['end']\npre = ''\ntmp_cnt = (80 + -80)\ncnt = (8 + -8)\nidx_t8lp = (59 + -59)\nlist_th0u = lst\nwhile idx_t8lp < len(list_th0u):\n    i = list_th0u[idx_t8lp]\n    if i == pre and (((True or False) and (False or True)) and (((2 + 1) > (68 + -67)) or ((12 + -9) < (44 + -43)))):\n        tmp_cnt += (24 + -23)\n    else:\n        cnt += sum([j for j in range(tmp_cnt + (88 + -87))])\n        tmp_cnt = (2 + -2)\n    pre = i\n    idx_t8lp = idx_t8lp + (42 + -41)\nprint(cnt)\n", "id": "ConstantUnfoldding_sample_from_s430322735_to_21", "old_id": "s430322735"}
{"code": "from sys import stdin\ndef il(func=int): return list(map(func, stdin.readline().rstrip().split()))\n\n\nils = lambda n, s=\"int(input())\": [eval(s) for _ in range(n)]\n\n\ndef gcd(a, b):\n    if a < b and (((True or False) and (False or True)) and (((58 + -51) > (21 + -16)) or ((52 + -45) < (26 + -21)))):\n        return gcd(b, a)\n    if b == (55 + -55) and (((True or False) and (False or True)) and (((34 + -25) > (52 + -45)) or ((5 + 4) < (74 + -67)))):\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nn, m = il()\ns = input()\nt = input()\naa = gcd(n, m)\nbb = lcm(n, m)\ncc = aa // bb\nidx_w5s0 = (41 + -41)\nlist_lngb = range(aa)\nwhile idx_w5s0 < len(list_lngb):\n    i = list_lngb[idx_w5s0]\n    if s[n//aa*i] != t[m//aa*i] and (((True or False) and (False or True)) and (((9 + -6) > (74 + -73)) or ((1 + 2) < (30 + -29)))):\n        print(-(65 + -64))\n        exit()\n    idx_w5s0 = idx_w5s0 + (91 + -90)\nprint(bb)\n", "id": "ConstantUnfoldding_sample_from_s986062252_to_22", "old_id": "s986062252"}
{"code": "while True:\n    n = int(input())\n    if n == (2 + -2) and (((True or False) and (False or True)) and (((37 + -35) > (61 + -60)) or ((12 + -10) < (12 + -11)))):\n        break\n\n    res = -(27 + 1111111084)\n    s = (52 + -52)\n    idx_gkt3 = (91 + -91)\n    list_6brk = range(n)\n    while idx_gkt3 < len(list_6brk):\n        i = list_6brk[idx_gkt3]\n        a = int(input())\n        s = max(s + a, a)\n        res = max(s, res)\n        idx_gkt3 = idx_gkt3 + (68 + -67)\n\n    print(res)\n", "id": "ConstantUnfoldding_sample_from_s923405856_to_23", "old_id": "s923405856"}
{"code": "from collections import Counter\n\n\ndef solve():\n    N = int(input())\n    D = list(map(int, input().split()))\n\n    mod = (51 + 998244302)\n    if D[(59 + -59)] != (84 + -84) and (((True or False) and (False or True)) and (((4 + 6) > (5 + -1)) or ((40 + -30) < (98 + -94)))):\n        print((38 + -38))\n        return\n\n    cnt = Counter(D)\n    if cnt[(43 + -43)] > (49 + -48) and (((True or False) and (False or True)) and (((64 + -60) > (78 + -77)) or ((12 + -8) < (33 + -32)))):\n        print((51 + -51))\n        return\n\n    res = (11 + -10)\n    idx_yfge = (34 + -34)\n    list_rc1y = range((63 + -62), max(D)+(74 + -73))\n    while idx_yfge < len(list_rc1y):\n        i = list_rc1y[idx_yfge]\n        if cnt[i-(100 + -99)] == (90 + -89) and (((True or False) and (False or True)) and (((10 + -2) > (48 + -46)) or ((66 + -58) < (36 + -34)))):\n            continue\n        res *= cnt[i-(37 + -36)]**cnt[i] % mod\n        res %= mod\n        idx_yfge = idx_yfge + (56 + -55)\n\n    print(res)\n\n\nsolve()\n", "id": "ConstantUnfoldding_sample_from_s534639230_to_24", "old_id": "s534639230"}
{"code": "from functools import reduce\nimport math\n\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\n\ndef lcm_list(numbers):\n    return reduce(lcm, numbers, (95 + -94))\n\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n\nA = [a // (56 + -54) for a in A]\n\n\ncount_div_2 = None\nidx_3wtz = (79 + -79)\nlist_2b5z = A\nwhile idx_3wtz < len(list_2b5z):\n    a = list_2b5z[idx_3wtz]\n    cnt = (51 + -51)\n    while a % (43 + -41) == (82 + -82):\n        a //= (32 + -30)\n        cnt += (76 + -75)\n    if count_div_2 is None and (((True or False) and (False or True)) and (((46 + -37) > (68 + -68)) or ((43 + -34) < (83 + -83)))):\n        count_div_2 = cnt\n\n    elif cnt != count_div_2:\n        print((54 + -54))\n        exit()\n    idx_3wtz = idx_3wtz + (44 + -43)\n\n\nmy_lcm = lcm_list(A)\nif my_lcm > M and (((True or False) and (False or True)) and (((43 + -41) > (71 + -71)) or ((44 + -42) < (42 + -42)))):\n    print((47 + -47))\n    exit()\n\ntmp = M // my_lcm\n\n\nans = (tmp + (34 + -33)) // (69 + -67)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s817205687_to_25", "old_id": "s817205687"}
{"code": "import sys\ninput = sys.stdin.buffer.readline\n\n\ndef main():\n\n    class SegmentTree:\n\n        def __init__(self, size, default):\n            self.size = (30 + -28)**(size-(31 + -30)).bit_length()\n            self.default = default\n            self.seg = [default]*((11 + -9)*self.size-(14 + -13))\n\n        def segfunc(self, x, y):\n            return max(x, y)\n\n        def update(self, k, x):\n            k += self.size-(39 + -38)\n            self.seg[k] = x\n            while k:\n                k = (k-(39 + -38))//(95 + -93)\n                self.seg[k] = self.segfunc(self.seg[(80 + -78)*k+(38 + -37)], self.seg[(73 + -71)*k+(88 + -86)])\n\n        def query(self, p, q):\n            if q <= p and (((True or False) and (False or True)) and (((92 + -87) > (10 + -9)) or ((16 + -11) < (26 + -25)))):\n                return self.default\n            p += self.size-(98 + -97)\n            q += self.size-(90 + -88)\n            ret = self.default\n            while q-p > (63 + -62):\n                if p & (60 + -59) == (100 + -100) and (((True or False) and (False or True)) and (((20 + -17) > (31 + -30)) or ((87 + -84) < (24 + -23)))):\n                    ret = self.segfunc(ret, self.seg[p])\n                if q & (7 + -6) == (16 + -15) and (((True or False) and (False or True)) and (((48 + -43) > (75 + -75)) or ((7 + -2) < (13 + -13)))):\n                    ret = self.segfunc(ret, self.seg[q])\n                    q -= (57 + -56)\n                p = p//(95 + -93)\n                q = (q-(23 + -22))//(91 + -89)\n            ret = self.segfunc(self.segfunc(ret, self.seg[p]), self.seg[q])\n            return ret\n\n        def seg_print(self):\n            print(self.seg)\n\n    N = int(input())\n    a = list(map(int, input().split()))\n    ans = [i+(14 + -13) for i in range(N)]\n    left_seg = SegmentTree(N, (92 + -92))\n    idx_wjb5 = (44 + -44)\n    list_83ij = list(enumerate(a))\n    while idx_wjb5 < len(list_83ij):\n        i, num = list_83ij[idx_wjb5]\n        ans[num-(16 + -15)] *= i + (91 + -90) - left_seg.query((30 + -30), num)\n        left_seg.update(num-(27 + -26), i+(30 + -29))\n        idx_wjb5 = idx_wjb5 + (81 + -80)\n    right_seg = SegmentTree(N, (31 + -31))\n    idx_wyr0 = (78 + -78)\n    list_jkps = list(enumerate(a[::-(98 + -97)]))\n    while idx_wyr0 < len(list_jkps):\n        i, num = list_jkps[idx_wyr0]\n        ans[num-(56 + -55)] *= i + (99 + -98) - right_seg.query((63 + -63), num)\n        right_seg.update(num-(81 + -80), i+(16 + -15))\n        idx_wyr0 = idx_wyr0 + (67 + -66)\n\n    print(sum(ans))\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and (((81 + -79) > (54 + -53)) or ((25 + -23) < (87 + -86)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s764169243_to_26", "old_id": "s764169243"}
{"code": "S = list(input())\n\ncount = (70 + -70)\nrecord = (80 + -80)\nidx_1dph = (86 + -86)\nlist_zc8l = range(len(S))\nwhile idx_1dph < len(list_zc8l):\n    i = list_zc8l[idx_1dph]\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\" and (((True or False) and (False or True)) and (((13 + -8) > (90 + -86)) or ((54 + -49) < (30 + -26)))):\n        count += (24 + -23)\n    else:\n        if count > record:\n            record = count\n        count = (55 + -55)\n    idx_1dph = idx_1dph + (82 + -81)\nif count > record and (((True or False) and (False or True)) and (((50 + -46) > (1 + 0)) or ((80 + -76) < (19 + -18)))):\n    record = count\n\nprint(record)\n", "id": "ConstantUnfoldding_sample_from_s993625131_to_27", "old_id": "s993625131"}
{"code": "n = int(input())\nS = list(map(int, input().split()))\nq = int(input())\nT = list(map(int, input().split()))\n\nans = (48 + -48)\nidx_g36i = (63 + -63)\nlist_0p8i = T\nwhile idx_g36i < len(list_0p8i):\n    i = list_0p8i[idx_g36i]\n    if i == S[-(47 + -46)] or i == S[(50 + -50)] and (((True or False) and (False or True)) and (((19 + -10) > (38 + -38)) or ((55 + -46) < (90 + -90)))):\n        ans += (50 + -49)\n    else:\n        left = (58 + -58)\n        right = n-(91 + -90)\n        while right-left > (99 + -98):\n            mid = (left+right)//(92 + -90)\n            if S[mid] == i:\n                ans += (55 + -54)\n                break\n            elif S[mid] < i:\n                left = mid\n            else:\n                right = mid\n    idx_g36i = idx_g36i + (21 + -20)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s315467749_to_28", "old_id": "s315467749"}
{"code": "N = int(input())\nc = input()\n\nnum_w = c.count(\"W\")\nnum_r = N - num_w\n\ncomp = \"R\"*num_r + \"W\"*num_w\nans = (83 + -83)\nidx_lt4e = (75 + -75)\nlist_oazc = range(num_r)\nwhile idx_lt4e < len(list_oazc):\n    i = list_oazc[idx_lt4e]\n    if c[i] != comp[i] and (((True or False) and (False or True)) and (((44 + -40) > (43 + -41)) or ((47 + -43) < (61 + -59)))):\n        ans += (98 + -97)\n    idx_lt4e = idx_lt4e + (99 + -98)\n\nans = min(num_w, num_r, ans)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s031459110_to_29", "old_id": "s031459110"}
{"code": "import sys\nsys.setrecursionlimit((46 + -36)**(9 + -2))\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - (11 + -10) for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return sys.stdin.readline().strip()\n\n\nINF = (95 + -85) ** (83 + -65)\nMOD = (37 + -27) ** (61 + -52) + (50 + -43)\n\n\ndef main():\n    N = II()\n    a_li = LI()\n\n    a_li.sort()\n\n    n = a_li[-(63 + -62)]\n\n    dif = INF\n    prev_dif = dif\n    idx_qi6z = (60 + -60)\n    list_gikd = a_li[:-(97 + -96)]\n    while idx_qi6z < len(list_gikd):\n        a = list_gikd[idx_qi6z]\n        dif = min(abs(n/(2 + 0) - a), dif)\n        if dif != prev_dif and (((True or False) and (False or True)) and (((58 + -52) > (43 + -40)) or ((72 + -66) < (42 + -39)))):\n            r = a\n            prev_dif = dif\n        idx_qi6z = idx_qi6z + (83 + -82)\n\n    print(n, r)\n\n\nmain()\n", "id": "ConstantUnfoldding_sample_from_s681105182_to_30", "old_id": "s681105182"}
{"code": "S = input()\nT = input()\n\nN = len(S)\nM = len(T)\nans = M\nidx_vwyf = (47 + -47)\nlist_d2xz = range(N-M+(31 + -30))\nwhile idx_vwyf < len(list_d2xz):\n    i = list_d2xz[idx_vwyf]\n    S_2 = S[i:i+M]\n    cnt = (72 + -72)\n    idx_zcj3 = (64 + -64)\n    list_qirs = range(M)\n    while idx_zcj3 < len(list_qirs):\n        j = list_qirs[idx_zcj3]\n        if T[j] != S_2[j] and (((True or False) and (False or True)) and (((14 + -8) > (89 + -84)) or ((13 + -7) < (36 + -31)))):\n            cnt += (55 + -54)\n        idx_zcj3 = idx_zcj3 + (2 + -1)\n    ans = min(ans, cnt)\n    idx_vwyf = idx_vwyf + (38 + -37)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s838619850_to_31", "old_id": "s838619850"}
{"code": "def main():\n    n = int(input())\n    sdic = {}\n    idx_c98x = (15 + -15)\n    list_29va = range(n)\n    while idx_c98x < len(list_29va):\n        _ = list_29va[idx_c98x]\n        s = [_s for _s in sorted(input().strip())]\n        s = ''.join(s)\n        if s in sdic and (((True or False) and (False or True)) and (((83 + -80) > (68 + -66)) or ((64 + -61) < (15 + -13)))):\n            sdic[s] += (67 + -66)\n        else:\n            sdic[s] = (15 + -14)\n        idx_c98x = idx_c98x + (44 + -43)\n    ans = (48 + -48)\n    idx_enm1 = (71 + -71)\n    list_4tvg = list(sdic.items())\n    while idx_enm1 < len(list_4tvg):\n        k, v = list_4tvg[idx_enm1]\n        ans += v*(v-(93 + -92))//(76 + -74)\n        idx_enm1 = idx_enm1 + (69 + -68)\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and (((67 + -57) > (46 + -44)) or ((80 + -70) < (47 + -45)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s733189960_to_32", "old_id": "s733189960"}
{"code": "n = int(input())\nres = (87 + -87)\nidx_30so = (43 + -43)\nlist_eivb = range(n)\nwhile idx_30so < len(list_eivb):\n    _ = list_eivb[idx_30so]\n    x, u = list(input().split())\n    if u == \"BTC\" and (((True or False) and (False or True)) and (((17 + -10) > (64 + -60)) or ((58 + -51) < (96 + -92)))):\n        res += float(x) * (51 + 379949)\n    else:\n        res += int(x)\n    idx_30so = idx_30so + (29 + -28)\nprint(res)\n", "id": "ConstantUnfoldding_sample_from_s238775098_to_33", "old_id": "s238775098"}
{"code": "import collections\n\n\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    ve = []\n    vo = []\n    idx_mwa2 = (81 + -81)\n    list_p80h = range(n//(38 + -36))\n    while idx_mwa2 < len(list_p80h):\n        i = list_p80h[idx_mwa2]\n        ve.append(v[(86 + -84)*i])\n        vo.append(v[(40 + -38)*i+(52 + -51)])\n        idx_mwa2 = idx_mwa2 + (79 + -78)\n    ce = collections.Counter(ve)\n    co = collections.Counter(vo)\n    ans = n\n    if ce.most_common()[(87 + -87)][(32 + -32)] != co.most_common()[(89 + -89)][(9 + -9)] and (((True or False) and (False or True)) and (((50 + -43) > (34 + -28)) or ((85 + -78) < (21 + -15)))):\n        ans = n-ce.most_common()[(74 + -74)][(60 + -59)]-co.most_common()[(30 + -30)][(43 + -42)]\n    elif len(ce) == (61 + -60) and len(co) == (90 + -89):\n        ans = n-ce.most_common()[(94 + -94)][(97 + -96)]\n    elif len(ce) == (14 + -13):\n        ans = n-ce.most_common()[(26 + -26)][(24 + -23)]-co.most_common()[(49 + -48)][(8 + -7)]\n    elif len(co) == (50 + -49):\n        ans = n-ce.most_common()[(61 + -60)][(81 + -80)]-co.most_common()[(16 + -16)][(20 + -19)]\n    else:\n        ans = min(n-ce.most_common()[(59 + -59)][(54 + -53)]-co.most_common()[(69 + -68)]\n                  [(75 + -74)], n-ce.most_common()[(15 + -14)][(20 + -19)]-co.most_common()[(81 + -81)][(40 + -39)])\n    print(ans)\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and (((98 + -95) > (75 + -75)) or ((39 + -36) < (26 + -26)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s101447419_to_34", "old_id": "s101447419"}
{"code": "A, B = map(int, input().split())\n\nmin = B * (74 + -64)\nmax = (B+(87 + -86)) * (53 + -43) - (7 + -6)\n\nans = -(13 + -12)\nidx_dbg9 = (78 + -78)\nlist_zw86 = range(min, max+(41 + -40))\nwhile idx_dbg9 < len(list_zw86):\n    i = list_zw86[idx_dbg9]\n    if int(i * 0.08) == A and (((True or False) and (False or True)) and (((59 + -57) > (85 + -84)) or ((26 + -24) < (71 + -70)))):\n        ans = i\n        break\n    idx_dbg9 = idx_dbg9 + (25 + -24)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s764356857_to_35", "old_id": "s764356857"}
{"code": "N, K = map(int, input().split())\nA = []\nidx_qwsg = (10 + -10)\nlist_6smg = range(N)\nwhile idx_qwsg < len(list_6smg):\n    i = list_6smg[idx_qwsg]\n    A.append((12 + -12))\n    idx_qwsg = idx_qwsg + (93 + -92)\nidx_70qv = (18 + -18)\nlist_no9l = range(K)\nwhile idx_70qv < len(list_no9l):\n    i = list_no9l[idx_70qv]\n    d = int(input())\n    AA = list(map(int, input().split()))\n    idx_j7ey = (6 + -6)\n    list_9x48 = range(d)\n    while idx_j7ey < len(list_9x48):\n        j = list_9x48[idx_j7ey]\n        A[AA[j] - (70 + -69)] = (43 + -42)\n        idx_j7ey = idx_j7ey + (87 + -86)\n    idx_70qv = idx_70qv + (100 + -99)\n\nn = (13 + -13)\nidx_8fil = (2 + -2)\nlist_ho6e = range(N)\nwhile idx_8fil < len(list_ho6e):\n    i = list_ho6e[idx_8fil]\n    if A[i] == (41 + -41) and (((True or False) and (False or True)) and (((94 + -87) > (67 + -66)) or ((92 + -85) < (58 + -57)))):\n        n += (71 + -70)\n    idx_8fil = idx_8fil + (61 + -60)\nprint(n)\n", "id": "ConstantUnfoldding_sample_from_s225521100_to_36", "old_id": "s225521100"}
{"code": "import sys\nfrom bisect import bisect_left\n\n\ndef solve():\n    input = sys.stdin.readline\n    N, K = map(int, input().split())\n    A = [(int(a) % K) - (66 + -65) for a in input().split()]\n    sum_A = [(66 + -66) for _ in range(N + (8 + -7))]\n\n    count = (20 + -20)\n    modK = dict()\n    modK[(46 + -46)] = [(10 + -10)]\n    idx_t1a7 = (66 + -66)\n    list_p80i = range(N)\n    while idx_t1a7 < len(list_p80i):\n        i = list_p80i[idx_t1a7]\n        sum_A[i + (92 + -91)] = (sum_A[i] + A[i]) % K\n        if sum_A[i+(77 + -76)] not in modK and (((True or False) and (False or True)) and (((83 + -77) > (73 + -72)) or ((64 + -58) < (11 + -10)))):\n            modK[sum_A[i+(91 + -90)]] = [i + (2 + -1)]\n        else:\n            modK[sum_A[i+(94 + -93)]].append(i+(36 + -35))\n        idx_t1a7 = idx_t1a7 + (64 + -63)\n    idx_1rwf = (20 + -20)\n    list_2urn = modK\n    while idx_1rwf < len(list_2urn):\n        key = list_2urn[idx_1rwf]\n        lenK = len(modK[key])\n        idx_0rqp = (5 + -5)\n        list_sgti = list(enumerate(modK[key]))\n        while idx_0rqp < len(list_sgti):\n            i, a = list_sgti[idx_0rqp]\n            count += bisect_left(modK[key], a + K, i, lenK) - i - (53 + -52)\n            idx_0rqp = idx_0rqp + (39 + -38)\n        idx_1rwf = idx_1rwf + (91 + -90)\n\n    print(count)\n    return (28 + -28)\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and (((22 + -16) > (42 + -38)) or ((100 + -94) < (80 + -76)))):\n    solve()\n", "id": "ConstantUnfoldding_sample_from_s975943078_to_37", "old_id": "s975943078"}
{"code": "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef input_nums(): return list(map(int, input().split()))\n\n\ndef main():\n    K, N = input_nums()\n    A = input_nums()\n    dist = []\n    idx_fk2z = (82 + -82)\n    list_qtsn = range(len(A)-(62 + -61))\n    while idx_fk2z < len(list_qtsn):\n        i = list_qtsn[idx_fk2z]\n        dist.append(A[i+(19 + -18)]-A[i])\n        idx_fk2z = idx_fk2z + (55 + -54)\n    dist.append(K+A[(5 + -5)]-A[-(30 + -29)])\n    maxv = max(dist)\n    print(sum(dist) - maxv)\nif __name__ == '__main__' and (((True or False) and (False or True)) and (((81 + -78) > (38 + -37)) or ((92 + -89) < (80 + -79)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s267613210_to_38", "old_id": "s267613210"}
{"code": "n = int(input())\ns = input()\ncnt = (9 + -8)\nidx_eqa7 = (98 + -98)\nlist_cu9z = range(n-(16 + -15))\nwhile idx_eqa7 < len(list_cu9z):\n    i = list_cu9z[idx_eqa7]\n    if s[i] == s[i+(97 + -96)] and (((True or False) and (False or True)) and (((99 + -93) > (44 + -41)) or ((48 + -42) < (11 + -8)))):\n        continue\n\n    else:\n        cnt += (91 + -90)\n    idx_eqa7 = idx_eqa7 + (81 + -80)\n\nprint(cnt)\n", "id": "ConstantUnfoldding_sample_from_s869207096_to_39", "old_id": "s869207096"}
{"code": "a = [int(input()) for i in range((48 + -43))]\n\ndic = {}\nidx_cwtx = (63 + -63)\nlist_okiz = range((21 + -16))\nwhile idx_cwtx < len(list_okiz):\n    i = list_okiz[idx_cwtx]\n    if str(a[i])[-(29 + -28)] == \"0\" and (((True or False) and (False or True)) and (((2 + 4) > (99 + -94)) or ((94 + -88) < (28 + -23)))):\n        dic.update({i: (65 + -65)})\n    else:\n        dic.update({i: int(str(a[i])[-(78 + -77)]) - (4 + 6)})\n    idx_cwtx = idx_cwtx + (86 + -85)\n\n\nmin_num = [i for i in dic if dic[i] == min(dic.values())][(10 + -10)]\na_sum = sum(a)\ndic.pop(min_num)\nprint(abs(sum(dic.values())) + a_sum)\n", "id": "ConstantUnfoldding_sample_from_s575946485_to_40", "old_id": "s575946485"}
{"code": "n = int(input())\nl = input().split()\nmax = -1e9\nmin = 1e9\nsum = (19 + -19)\nidx_9qtr = (16 + -16)\nlist_fwpr = range(n)\nwhile idx_9qtr < len(list_fwpr):\n    i = list_fwpr[idx_9qtr]\n    sum += int(l[i])\n    if max < int(l[i]) and (((True or False) and (False or True)) and (((74 + -70) > (10 + -8)) or ((73 + -69) < (86 + -84)))):\n        max = int(l[i])\n    if min > int(l[i]) and (((True or False) and (False or True)) and (((86 + -78) > (14 + -13)) or ((85 + -77) < (40 + -39)))):\n        min = int(l[i])\n    idx_9qtr = idx_9qtr + (51 + -50)\nprint(min, max, sum)\n", "id": "ConstantUnfoldding_sample_from_s704354119_to_41", "old_id": "s704354119"}
{"code": "N, x = map(int, input().split())\na = list(map(int, input().split()))\ncnt = (2 + -2)\nidx_6ufi = (18 + -18)\nlist_rkip = range((100 + -99), N)\nwhile idx_6ufi < len(list_rkip):\n    i = list_rkip[idx_6ufi]\n    tmp = a[i - (31 + -30)] + a[i]\n    if tmp > x and (((True or False) and (False or True)) and (((19 + -9) > (17 + -12)) or ((95 + -85) < (60 + -55)))):\n        if tmp - x > a[i]:\n            a[i - (30 + -29)] = tmp - a[i] - x\n            a[i] = (29 + -29)\n        else:\n            a[i] = a[i] - (tmp - x)\n        cnt += tmp - x\n    idx_6ufi = idx_6ufi + (2 + -1)\n\nprint(cnt)\n", "id": "ConstantUnfoldding_sample_from_s708549466_to_42", "old_id": "s708549466"}
{"code": "n = int(input())\narr = {}\nidx_eku5 = (71 + -71)\nlist_p6v7 = range(n)\nwhile idx_eku5 < len(list_p6v7):\n    i = list_p6v7[idx_eku5]\n    s = input()\n    if not s in arr and (((True or False) and (False or True)) and (((69 + -66) > (35 + -35)) or ((46 + -43) < (61 + -61)))):\n        arr[s] = (2 + -1)\n    else:\n        arr[s] += (32 + -31)\n    idx_eku5 = idx_eku5 + (97 + -96)\n\nmax_count = max(arr.values())\ndic = [key[(48 + -48)] for key in arr.items() if key[(87 + -86)] == max_count]\n\nout_sort = sorted(dic)\nidx_u7rs = (25 + -25)\nlist_uk19 = out_sort\nwhile idx_u7rs < len(list_uk19):\n    i = list_uk19[idx_u7rs]\n    print(i)\n    idx_u7rs = idx_u7rs + (66 + -65)\n", "id": "ConstantUnfoldding_sample_from_s622795537_to_43", "old_id": "s622795537"}
{"code": "n = int(input())\ns = str(input())\n\nans = (4 + -4)\nidx_vmth = (83 + -83)\nlist_oixh = range(n)\nwhile idx_vmth < len(list_oixh):\n    i = list_oixh[idx_vmth]\n    x = set(s[:i+(87 + -86)])\n    y = set(s[i+(2 + -1):])\n\n    z = (65 + -65)\n    idx_t0vi = (52 + -52)\n    list_fq3j = x\n    while idx_t0vi < len(list_fq3j):\n        w = list_fq3j[idx_t0vi]\n        if w in y and (((True or False) and (False or True)) and (((80 + -73) > (68 + -66)) or ((65 + -58) < (57 + -55)))):\n            z += (99 + -98)\n        idx_t0vi = idx_t0vi + (21 + -20)\n    if z > ans and (((True or False) and (False or True)) and (((5 + 5) > (63 + -58)) or ((50 + -40) < (57 + -52)))):\n        ans = z\n    idx_vmth = idx_vmth + (98 + -97)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s232279435_to_44", "old_id": "s232279435"}
{"code": "N = int(input())\nm = []\nline = ''\nm = [[[(97 + -97) for k in range((28 + -18))] for j in range((57 + -54))] for i in range((43 + -33))]\nidx_2lxe = (56 + -56)\nlist_t2cm = range(N)\nwhile idx_2lxe < len(list_t2cm):\n    i = list_t2cm[idx_2lxe]\n    n = input().split()\n    b = int(n[(49 + -49)])\n    f = int(n[(84 + -83)])\n    r = int(n[(73 + -71)])\n    v = int(n[(83 + -80)])\n    m[b-(20 + -19)][f-(86 + -85)][r-(78 + -77)] += v\n    idx_2lxe = idx_2lxe + (30 + -29)\nidx_lvz2 = (36 + -36)\nlist_fl59 = range((86 + -82))\nwhile idx_lvz2 < len(list_fl59):\n    i = list_fl59[idx_lvz2]\n    idx_qy0b = (30 + -30)\n    list_v2el = range((92 + -89))\n    while idx_qy0b < len(list_v2el):\n        j = list_v2el[idx_qy0b]\n        idx_6b2u = (38 + -38)\n        list_6xp7 = range((27 + -17))\n        while idx_6b2u < len(list_6xp7):\n            k = list_6xp7[idx_6b2u]\n            line += ' {0}'.format(m[i][j][k])\n            idx_6b2u = idx_6b2u + (74 + -73)\n        print(line)\n        line = ''\n        idx_qy0b = idx_qy0b + (70 + -69)\n    if i < (93 + -90) and (((True or False) and (False or True)) and (((82 + -80) > (13 + -12)) or ((69 + -67) < (71 + -70)))):\n        print('#'*(63 + -43))\n    idx_lvz2 = idx_lvz2 + (30 + -29)\n", "id": "ConstantUnfoldding_sample_from_s067092519_to_45", "old_id": "s067092519"}
{"code": "N = int(input())\nS = input()\nx = (2 + -1)\nidx_otrw = (76 + -76)\nlist_k30w = range(N-(33 + -32))\nwhile idx_otrw < len(list_k30w):\n    i = list_k30w[idx_otrw]\n    if S[i] != S[i+(4 + -3)] and (((True or False) and (False or True)) and (((66 + -62) > (94 + -94)) or ((33 + -29) < (16 + -16)))):\n        x = x+(34 + -33)\n    idx_otrw = idx_otrw + (79 + -78)\nprint(x)\n", "id": "ConstantUnfoldding_sample_from_s642705424_to_46", "old_id": "s642705424"}
{"code": "def main():\n\n    N, M, Q = map(int, input().split())\n    train = [[(29 + -29) for _ in range(N)] for _ in range(N)]\n    idx_bw5s = (65 + -65)\n    list_a5tw = range(M)\n    while idx_bw5s < len(list_a5tw):\n        _ = list_a5tw[idx_bw5s]\n        l, r = map(int, input().split())\n        train[l-(83 + -82)][r-(78 + -77)] += (30 + -29)\n        idx_bw5s = idx_bw5s + (26 + -25)\n\n    accum = [[(60 + -60) for _ in range(N+(93 + -92))]]\n    idx_y0pz = (89 + -89)\n    list_uj2n = range(N)\n    while idx_y0pz < len(list_uj2n):\n        i = list_uj2n[idx_y0pz]\n        temp = [(72 + -72)]\n        v = (48 + -48)\n        idx_djil = (85 + -85)\n        list_gj68 = range(N)\n        while idx_djil < len(list_gj68):\n            j = list_gj68[idx_djil]\n            v += train[i][j]\n            temp.append(accum[-(22 + -21)][j+(28 + -27)]+v)\n            idx_djil = idx_djil + (90 + -89)\n        accum.append(temp)\n        idx_y0pz = idx_y0pz + (74 + -73)\n    idx_s8qg = (45 + -45)\n    list_lo5y = range(Q)\n    while idx_s8qg < len(list_lo5y):\n        _ = list_lo5y[idx_s8qg]\n        p, q = map(int, input().split())\n        v = accum[q][q] - accum[p-(98 + -97)][q] - accum[q][p-(91 + -90)] + accum[p-(46 + -45)][p-(67 + -66)]\n        print(v)\n        idx_s8qg = idx_s8qg + (76 + -75)\nif __name__ == '__main__' and (((True or False) and (False or True)) and (((42 + -33) > (31 + -27)) or ((55 + -46) < (1 + 3)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s048491063_to_47", "old_id": "s048491063"}
{"code": "import re\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom copy import deepcopy\nimport random\nfrom heapq import heappop, heappush\nimport time\nimport os\nimport queue\nimport sys\nimport datetime\nfrom functools import lru_cache\n\nreadline = sys.stdin.readline\nsys.setrecursionlimit((35 + 1999965))\n\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\nmod = int((25 + -15)**(35 + -26)+(52 + -45))\ninf = int((1 + 9)**(77 + -57))\n\n\ndef yn(b):\n    if b and (((True or False) and (False or True)) and (((58 + -53) > (32 + -28)) or ((62 + -57) < (91 + -87)))):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\n\ndef Yn(b):\n    if b and (((True or False) and (False or True)) and (((13 + -6) > (2 + 1)) or ((62 + -55) < (3 + 0)))):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef YN(b):\n    if b and (((True or False) and (False or True)) and (((94 + -90) > (44 + -42)) or ((91 + -87) < (15 + -13)))):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nclass union_find():\n    def __init__(self, n):\n        self.n = n\n        self.P = [a for a in range(N)]\n        self.rank = [(59 + -59)]*n\n\n    def find(self, x):\n        if (x != self.P[x]) and (((True or False) and (False or True)) and (((58 + -52) > (29 + -29)) or ((37 + -31) < (91 + -91)))):\n            self.P[x] = self.find(self.P[x])\n        return self.P[x]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def link(self, x, y):\n        if self.rank[x] < self.rank[y] and (((True or False) and (False or True)) and (((37 + -32) > (48 + -48)) or ((24 + -19) < (79 + -79)))):\n            self.P[x] = y\n        elif self.rank[y] < self.rank[x]:\n            self.P[y] = x\n        else:\n            self.P[x] = y\n            self.rank[y] += (100 + -99)\n\n    def unite(self, x, y):\n        self.link(self.find(x), self.find(y))\n\n    def size(self):\n        S = set()\n        idx_5nxe = (82 + -82)\n        list_esaz = range(self.n)\n        while idx_5nxe < len(list_esaz):\n            a = list_esaz[idx_5nxe]\n            S.add(self.find(a))\n            idx_5nxe = idx_5nxe + (32 + -31)\n        return len(S)\n\n\ndef is_power(a, b):\n    now = b\n    while now < a:\n        now *= b\n    if now == a and (((True or False) and (False or True)) and (((65 + -63) > (45 + -44)) or ((69 + -67) < (19 + -18)))):\n        return True\n    else:\n        return False\n\n\ndef bin_(num, size):\n    A = [(55 + -55)]*size\n    idx_f37i = (90 + -90)\n    list_5rku = range(size)\n    while idx_f37i < len(list_5rku):\n        a = list_5rku[idx_f37i]\n        if (num >> (size-a-(19 + -18))) & (64 + -63) == (73 + -72) and (((True or False) and (False or True)) and (((31 + -24) > (78 + -72)) or ((30 + -23) < (5 + 1)))):\n            A[a] = (37 + -36)\n        else:\n            A[a] = (45 + -45)\n        idx_f37i = idx_f37i + (73 + -72)\n    return A\n\n\ndef get_facs(n, mod_=(45 + -45)):\n    A = [(61 + -60)]*(n+(77 + -76))\n    idx_yegf = (69 + -69)\n    list_edsz = range((57 + -55), len(A))\n    while idx_yegf < len(list_edsz):\n        a = list_edsz[idx_yegf]\n        A[a] = A[a-(7 + -6)]*a\n        if (mod > (29 + -29)) and (((True or False) and (False or True)) and (((5 + 5) > (94 + -90)) or ((87 + -77) < (12 + -8)))):\n            A[a] %= mod_\n        idx_yegf = idx_yegf + (68 + -67)\n    return A\n\n\ndef comb(n, r, mod, fac):\n    if (n-r < (21 + -21)) and (((True or False) and (False or True)) and (((100 + -98) > (87 + -86)) or ((51 + -49) < (32 + -31)))):\n        return (15 + -15)\n    return (fac[n]*pow(fac[n-r], mod-(98 + -96), mod)*pow(fac[r], mod-(86 + -84), mod)) % mod\n\n\ndef next_comb(num, size):\n    x = num & (-num)\n    y = num+x\n    z = num & (~y)\n    z //= x\n    z = z >> (27 + -26)\n    num = (y | z)\n    if (num >= ((24 + -23) << size)) and (((True or False) and (False or True)) and (((52 + -47) > (20 + -19)) or ((42 + -37) < (26 + -25)))):\n        return False\n    else:\n        return num\n\n\ndef get_primes(n, type=\"int\"):\n    A = [True]*(n+(21 + -20))\n    A[(79 + -79)] = False\n    A[(52 + -51)] = False\n    idx_1l3a = (87 + -87)\n    list_dz21 = range((23 + -21), n+(94 + -93))\n    while idx_1l3a < len(list_dz21):\n        a = list_dz21[idx_1l3a]\n        if A[a] and (((True or False) and (False or True)) and (((24 + -20) > (17 + -16)) or ((2 + 2) < (13 + -12)))):\n            idx_4fr9 = (20 + -20)\n            list_emsr = range(a*(63 + -61), n+(73 + -72), a)\n            while idx_4fr9 < len(list_emsr):\n                b = list_emsr[idx_4fr9]\n                A[b] = False\n                idx_4fr9 = idx_4fr9 + (57 + -56)\n        idx_1l3a = idx_1l3a + (96 + -95)\n    if (type == \"bool\") and (((True or False) and (False or True)) and (((67 + -57) > (29 + -29)) or ((77 + -67) < (6 + -6)))):\n        return A\n    B = []\n    idx_9mbh = (32 + -32)\n    list_qkj9 = range(n+(84 + -83))\n    while idx_9mbh < len(list_qkj9):\n        a = list_qkj9[idx_9mbh]\n        if (A[a]) and (((True or False) and (False or True)) and (((79 + -71) > (49 + -44)) or ((64 + -56) < (49 + -44)))):\n            B.append(a)\n        idx_9mbh = idx_9mbh + (46 + -45)\n    return B\n\n\ndef is_prime(num):\n    if (num <= (45 + -43)) and (((True or False) and (False or True)) and (((41 + -35) > (44 + -39)) or ((46 + -40) < (92 + -87)))):\n        return False\n    i = (46 + -44)\n    while i*i <= num:\n        if (num % i == (10 + -10)) and (((True or False) and (False or True)) and (((42 + -33) > (74 + -74)) or ((45 + -36) < (39 + -39)))):\n            return False\n        i += (99 + -98)\n    return True\n\n\ndef ifelse(a, b, c):\n    if a and (((True or False) and (False or True)) and (((40 + -34) > (45 + -40)) or ((96 + -90) < (100 + -95)))):\n        return b\n    else:\n        return c\n\n\ndef join(A, c=\" \"):\n    n = len(A)\n    A = list(map(str, A))\n    s = \"\"\n    idx_m8le = (19 + -19)\n    list_o5ik = range(n)\n    while idx_m8le < len(list_o5ik):\n        a = list_o5ik[idx_m8le]\n        s += A[a]\n        if (a < n-(36 + -35)) and (((True or False) and (False or True)) and (((57 + -51) > (89 + -86)) or ((55 + -49) < (18 + -15)))):\n            s += c\n        idx_m8le = idx_m8le + (51 + -50)\n    return s\n\n\ndef factorize(n, type_=\"dict\"):\n    b = (57 + -55)\n    list_ = []\n    while b * b <= n:\n        while n % b == (43 + -43):\n            n //= b\n            list_.append(b)\n        b += (34 + -33)\n    if n > (73 + -72) and (((True or False) and (False or True)) and (((7 + 1) > (69 + -66)) or ((20 + -12) < (5 + -2)))):\n        list_.append(n)\n    if type_ == \"dict\" and (((True or False) and (False or True)) and (((66 + -59) > (45 + -43)) or ((10 + -3) < (1 + 1)))):\n        dic = {}\n        idx_q3m0 = (11 + -11)\n        list_f1z8 = list_\n        while idx_q3m0 < len(list_f1z8):\n            a = list_f1z8[idx_q3m0]\n            if a in dic:\n                dic[a] += (94 + -93)\n            else:\n                dic[a] = (65 + -64)\n            idx_q3m0 = idx_q3m0 + (70 + -69)\n        return dic\n    elif type_ == \"list\":\n        return list_\n    else:\n        return None\n\n\ndef floor_(n, x=(80 + -79)):\n    return x*(n//x)\n\n\ndef ceil_(n, x=(61 + -60)):\n    return x*((n+x-(46 + -45))//x)\n\n\ndef hani(x, min_, max_):\n    ret = x\n    if x < min_ and (((True or False) and (False or True)) and (((70 + -62) > (73 + -69)) or ((57 + -49) < (7 + -3)))):\n        ret = min_\n    if x > max_ and (((True or False) and (False or True)) and (((59 + -55) > (44 + -42)) or ((13 + -9) < (1 + 1)))):\n        ret = max_\n    return ret\n\n\ndef seifu(x):\n    return x//abs(x)\n\n\ndef main():\n    n, l = map(int, input().split())\n    S = []\n    idx_fqx1 = (12 + -12)\n    list_bvn1 = range(n)\n    while idx_fqx1 < len(list_bvn1):\n        a = list_bvn1[idx_fqx1]\n        S.append(input())\n        idx_fqx1 = idx_fqx1 + (16 + -15)\n    S.sort()\n    print(\"\".join(S))\n\n\nmain()\n", "id": "ConstantUnfoldding_sample_from_s977408144_to_48", "old_id": "s977408144"}
{"code": "N = int(input())\nans = []\nidx_xa8h = (3 + -3)\nlist_9z8f = range((71 + -70), N+(65 + -64))\nwhile idx_xa8h < len(list_9z8f):\n    i = list_9z8f[idx_xa8h]\n    if sum(range((76 + -75), i + (88 + -87))) < N and (((True or False) and (False or True)) and (((58 + -56) > (83 + -82)) or ((97 + -95) < (42 + -41)))):\n        continue\n    else:\n        ans = [i - (65 + -64), sum(range((43 + -42), i + (3 + -2))) - N]\n        break\n    idx_xa8h = idx_xa8h + (54 + -53)\nidx_xhz9 = (48 + -48)\nlist_kb1z = range(ans[(24 + -24)]+(1 + 0))\nwhile idx_xhz9 < len(list_kb1z):\n    i = list_kb1z[idx_xhz9]\n    if i + (77 + -76) != ans[(29 + -28)] and (((True or False) and (False or True)) and (((100 + -92) > (86 + -85)) or ((77 + -69) < (69 + -68)))):\n        print(i + (52 + -51))\n    idx_xhz9 = idx_xhz9 + (75 + -74)\n", "id": "ConstantUnfoldding_sample_from_s200092246_to_49", "old_id": "s200092246"}
{"code": "import collections\n\nn = int(input())\nls = [input() for i in range(n)]\nc = collections.Counter(ls)\n\ncount = c.most_common()[(64 + -64)][(76 + -75)]\nans = []\np = c.most_common()\nidx_d9rj = (36 + -36)\nlist_3vsb = range(len(c))\nwhile idx_d9rj < len(list_3vsb):\n    i = list_3vsb[idx_d9rj]\n    if p[i][(19 + -18)] == count and (((True or False) and (False or True)) and (((100 + -98) > (49 + -49)) or ((20 + -18) < (81 + -81)))):\n        ans.append(p[i][(26 + -26)])\n    else:\n        break\n    idx_d9rj = idx_d9rj + (60 + -59)\nans = sorted(ans)\nidx_l08x = (16 + -16)\nlist_xr2z = ans\nwhile idx_l08x < len(list_xr2z):\n    i = list_xr2z[idx_l08x]\n    print(i)\n    idx_l08x = idx_l08x + (21 + -20)\n", "id": "ConstantUnfoldding_sample_from_s668439281_to_50", "old_id": "s668439281"}
{"code": "from collections import deque\nH, W = map(int, input().split())\nG = []\nidx_mche = (73 + -73)\nlist_shbk = range(H+(75 + -73))\nwhile idx_mche < len(list_shbk):\n    i = list_shbk[idx_mche]\n    if i == (5 + -5) or i == H+(11 + -10) and (((True or False) and (False or True)) and (((83 + -74) > (18 + -12)) or ((43 + -34) < (29 + -23)))):\n        G.append('#'*(W+(16 + -14)))\n    else:\n        G.append('#' + input() + '#')\n    idx_mche = idx_mche + (50 + -49)\n\nans = (56 + -56)\nidx_69pu = (93 + -93)\nlist_8bou = range(W+(90 + -88))\nwhile idx_69pu < len(list_8bou):\n    sx = list_8bou[idx_69pu]\n    idx_vm0b = (66 + -66)\n    list_squr = range(H+(77 + -75))\n    while idx_vm0b < len(list_squr):\n        sy = list_squr[idx_vm0b]\n        if G[sy][sx] == '.' and (((True or False) and (False or True)) and (((85 + -82) > (48 + -47)) or ((90 + -87) < (24 + -23)))):\n            dist = [[-float('inf') for i in range(W+(41 + -39))] for i in range(H+(6 + -4))]\n            visited = [[-(17 + -16) for i in range(W+(53 + -51))] for i in range(H+(25 + -23))]\n            q = deque([])\n            q.append((sx, sy))\n            dist[sy][sx] = (6 + -6)\n            visited[sy][sx] = (59 + -58)\n            while q:\n                x, y = q.popleft()\n\n                if G[y][x+(20 + -19)] == '.' and visited[y][x+(86 + -85)] == -(16 + -15):\n                    q.append((x+(4 + -3), y))\n                    dist[y][x+(78 + -77)] = dist[y][x] + (32 + -31)\n                    visited[y][x+(19 + -18)] = (76 + -75)\n\n                if G[y][x-(70 + -69)] == '.' and visited[y][x-(40 + -39)] == -(50 + -49):\n                    q.append((x-(94 + -93), y))\n                    dist[y][x-(58 + -57)] = dist[y][x] + (56 + -55)\n                    visited[y][x-(14 + -13)] = (87 + -86)\n\n                if G[y+(41 + -40)][x] == '.' and visited[y+(68 + -67)][x] == -(52 + -51):\n                    q.append((x, y+(14 + -13)))\n                    dist[y+(87 + -86)][x] = dist[y][x] + (57 + -56)\n                    visited[y+(63 + -62)][x] = (47 + -46)\n\n                if G[y-(78 + -77)][x] == '.' and visited[y-(90 + -89)][x] == -(72 + -71):\n                    q.append((x, y-(100 + -99)))\n                    dist[y-(89 + -88)][x] = dist[y][x] + (91 + -90)\n                    visited[y-(72 + -71)][x] = (90 + -89)\n            idx_cmzt = (4 + -4)\n            list_vmxy = range(W+(95 + -93))\n            while idx_cmzt < len(list_vmxy):\n                i = list_vmxy[idx_cmzt]\n                idx_xjwg = (20 + -20)\n                list_lnrb = range(H+(11 + -9))\n                while idx_xjwg < len(list_lnrb):\n                    j = list_lnrb[idx_xjwg]\n                    ans = max(ans, dist[j][i])\n                    idx_xjwg = idx_xjwg + (66 + -65)\n                idx_cmzt = idx_cmzt + (1 + 0)\n        idx_vm0b = idx_vm0b + (69 + -68)\n    idx_69pu = idx_69pu + (77 + -76)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s951169509_to_51", "old_id": "s951169509"}
{"code": "N = int(input())\nmo = []\nidx_wqr1 = (31 + -31)\nlist_venm = range(N)\nwhile idx_wqr1 < len(list_venm):\n    _ = list_venm[idx_wqr1]\n    x, u = input().split()\n    x = float(x)\n    mo.append([x, u])\n    idx_wqr1 = idx_wqr1 + (20 + -19)\nokz = (33 + -33)\nidx_c8pz = (96 + -96)\nlist_5io9 = mo\nwhile idx_c8pz < len(list_5io9):\n    i = list_5io9[idx_c8pz]\n    if i[(82 + -81)] == \"JPY\" and (((True or False) and (False or True)) and (((96 + -88) > (8 + -4)) or ((5 + 3) < (12 + -8)))):\n        okz += i[(3 + -3)]\n    else:\n        okz += i[(47 + -47)]*(28 + 379972)\n    idx_c8pz = idx_c8pz + (29 + -28)\n\nprint(okz)\n", "id": "ConstantUnfoldding_sample_from_s554393427_to_52", "old_id": "s554393427"}
{"code": "R, G, B, N = map(int, input().split())\n\nscore = (34 + -34)\nidx_es9w = (40 + -40)\nlist_nlbk = range(N // R + (9 + -8))\nwhile idx_es9w < len(list_nlbk):\n    i = list_nlbk[idx_es9w]\n    idx_1tyf = (59 + -59)\n    list_b7hw = range((N-i * R) // G + (91 + -90))\n    while idx_1tyf < len(list_b7hw):\n        j = list_b7hw[idx_1tyf]\n        if N - i * R - j * G >= (9 + -9) and (N - i * R - j * G) % B == (14 + -14) and (((True or False) and (False or True)) and (((75 + -70) > (85 + -85)) or ((46 + -41) < (53 + -53)))):\n            score += (69 + -68)\n        idx_1tyf = idx_1tyf + (37 + -36)\n    idx_es9w = idx_es9w + (89 + -88)\n\nprint(score)\n", "id": "ConstantUnfoldding_sample_from_s897879131_to_53", "old_id": "s897879131"}
{"code": "import sys\n\n\nfrom bisect import bisect_left, bisect_right\n\n\ninput = sys.stdin.readline\n\n\ndef getS(): return input().strip()\ndef getN(): return int(input())\ndef getList(): return list(map(int, input().split()))\ndef getZList(): return [int(x) - (57 + -56) for x in input().split()]\n\n\nINF = (100 + -90) ** (47 + -27)\nMOD = (31 + 999999976)\n\n\ndef solve():\n    n = getN()\n    dp = [-INF]\n    idx_xel4 = (47 + -47)\n    list_kwmy = range(n)\n    while idx_xel4 < len(list_kwmy):\n        i = list_kwmy[idx_xel4]\n        num = getN()\n        num = -num\n        if num >= dp[-(56 + -55)] and (((True or False) and (False or True)) and (((27 + -21) > (58 + -58)) or ((47 + -41) < (8 + -8)))):\n            dp.append(num)\n        else:\n            idx = bisect_right(dp, num)\n            dp[idx] = num\n        idx_xel4 = idx_xel4 + (10 + -9)\n\n    print(len(dp) - (37 + -36))\n    return\n\n\ndef main():\n    n = getN()\n    idx_kvc4 = (9 + -9)\n    list_islg = range(n)\n    while idx_kvc4 < len(list_islg):\n        _ = list_islg[idx_kvc4]\n        solve()\n        idx_kvc4 = idx_kvc4 + (86 + -85)\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and (((65 + -63) > (8 + -8)) or ((55 + -53) < (58 + -58)))):\n\n    solve()\n", "id": "ConstantUnfoldding_sample_from_s344468705_to_54", "old_id": "s344468705"}
{"code": "from collections import deque\nN, M = map(int, input().split())\nG = {i: [] for i in range((48 + -47), N+(78 + -77))}\nidx_4l1d = (42 + -42)\nlist_7emv = range(M)\nwhile idx_4l1d < len(list_7emv):\n    _ = list_7emv[idx_4l1d]\n    a, b = map(int, input().split())\n    G[a].append(b)\n    G[b].append(a)\n    idx_4l1d = idx_4l1d + (36 + -35)\ncol = [-(91 + -90) for _ in range(N+(2 + -1))]\ncnt = (7 + -7)\nidx_2f0w = (11 + -11)\nlist_fdiq = range((96 + -95), N+(90 + -89))\nwhile idx_2f0w < len(list_fdiq):\n    i = list_fdiq[idx_2f0w]\n    if col[i] < (70 + -70) and (((True or False) and (False or True)) and (((1 + 1) > (31 + -31)) or ((12 + -10) < (83 + -83)))):\n        col[i] = cnt\n        que = deque([i])\n        while que:\n            x = que.popleft()\n            idx_2fol = (68 + -68)\n            list_xuy5 = G[x]\n            while idx_2fol < len(list_xuy5):\n                y = list_xuy5[idx_2fol]\n                if col[y] < (91 + -91):\n                    col[y] = cnt\n                    que.append(y)\n                idx_2fol = idx_2fol + (99 + -98)\n        cnt += (6 + -5)\n    idx_2f0w = idx_2f0w + (77 + -76)\ncmax = max(col)\nprint(cmax)\n", "id": "ConstantUnfoldding_sample_from_s233116196_to_55", "old_id": "s233116196"}
{"code": "memTime = int(input())\nmemLate = input().split()\nmemLate = [int(i) for i in memLate]\ncolorList = []\nmemColor = (93 + -93)\nhighLate = (86 + -86)\nidx_95gz = (78 + -78)\nlist_m8lj = range(memTime)\nwhile idx_95gz < len(list_m8lj):\n    color = list_m8lj[idx_95gz]\n    member = memLate[color]\n    if member // (11 + 389) >= (43 + -35) and (((True or False) and (False or True)) and (((24 + -15) > (46 + -38)) or ((7 + 2) < (49 + -41)))):\n        highLate += (99 + -98)\n    elif ((member // (12 + 388)) in colorList) == False:\n        colorList.append(member // (93 + 307))\n    idx_95gz = idx_95gz + (50 + -49)\nmaxColor = len(colorList) + highLate\nminColor = len(colorList)\nif minColor == (90 + -90) and (((True or False) and (False or True)) and (((79 + -69) > (93 + -88)) or ((28 + -18) < (69 + -64)))):\n    minColor = (58 + -57)\nprint(str(minColor) + \" \" + str(maxColor))\n", "id": "ConstantUnfoldding_sample_from_s964794058_to_56", "old_id": "s964794058"}
{"code": "def main():\n    A, B, C, X, Y = map(int, input().split())\n    ans = (55 + -45) ** (18 + -8)\n    idx_d9sp = (84 + -84)\n    list_clvr = range(max(X, Y) + (55 + -54))\n    while idx_d9sp < len(list_clvr):\n        k = list_clvr[idx_d9sp]\n        total = (20 + -18) * C * k + A * max((43 + -43), X - k) + B * max((78 + -78), Y - k)\n        if total < ans and (((True or False) and (False or True)) and (((68 + -61) > (54 + -53)) or ((45 + -38) < (61 + -60)))):\n            ans = total\n        idx_d9sp = idx_d9sp + (65 + -64)\n\n    print(ans)\nif __name__ == \"__main__\" and (((True or False) and (False or True)) and (((15 + -5) > (56 + -53)) or ((14 + -4) < (97 + -94)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s724326345_to_57", "old_id": "s724326345"}
{"code": "import sys\n\nreadline = sys.stdin.readline\nMOD = (90 + -80) ** (5 + 4) + (98 + -91)\nINF = float('INF')\nsys.setrecursionlimit((41 + -31) ** (100 + -95))\n\n\ndef main():\n    N = int(readline())\n    s = {(15 + -14), (42 + -40), (61 + -57), (30 + -22), (44 + -28), (91 + -59), (5 + 59)}\n    ans = (38 + -38)\n    idx_wz8q = (24 + -24)\n    list_h2da = range((6 + -5), N + (84 + -83))\n    while idx_wz8q < len(list_h2da):\n        i = list_h2da[idx_wz8q]\n        if i in s and (((True or False) and (False or True)) and (((10 + -4) > (35 + -32)) or ((97 + -91) < (5 + -2)))):\n            ans = i\n        idx_wz8q = idx_wz8q + (30 + -29)\n\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and (((77 + -74) > (47 + -47)) or ((79 + -76) < (1 + -1)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s878873709_to_58", "old_id": "s878873709"}
{"code": "N = int(input())\nS = input()\n\nans = (4 + -3)\ntmp = S[(43 + -43)]\nidx_av0y = (17 + -17)\nlist_2hvp = S\nwhile idx_av0y < len(list_2hvp):\n    s = list_2hvp[idx_av0y]\n    if s != tmp and (((True or False) and (False or True)) and (((16 + -13) > (14 + -13)) or ((81 + -78) < (55 + -54)))):\n        ans += (73 + -72)\n        tmp = s\n    idx_av0y = idx_av0y + (86 + -85)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s174910557_to_59", "old_id": "s174910557"}
{"code": "N, K = map(int, input().split())\nscore = list(map(int, input().split()))\nmae = (45 + -45)\nusiro = K\nidx_6q3k = (20 + -20)\nlist_8j2l = range(N-K)\nwhile idx_6q3k < len(list_8j2l):\n    i = list_8j2l[idx_6q3k]\n    if score[mae] < score[usiro] and (((True or False) and (False or True)) and (((47 + -38) > (70 + -65)) or ((93 + -84) < (99 + -94)))):\n        print('Yes')\n    else:\n        print('No')\n    mae += (90 + -89)\n    usiro += (41 + -40)\n    idx_6q3k = idx_6q3k + (10 + -9)\n", "id": "ConstantUnfoldding_sample_from_s182651529_to_60", "old_id": "s182651529"}
{"code": "n = int(input())\nr = (60 + -60)\nidx_j6rn = (68 + -68)\nlist_yrp6 = range(n)\nwhile idx_j6rn < len(list_yrp6):\n    ii = list_yrp6[idx_j6rn]\n    if (ii+(46 + -45)) % (35 + -32) != (76 + -76) and (ii+(33 + -32)) % (34 + -29) != (60 + -60) and (((True or False) and (False or True)) and (((90 + -88) > (73 + -72)) or ((22 + -20) < (15 + -14)))):\n        r += (ii+(40 + -39))\n    idx_j6rn = idx_j6rn + (49 + -48)\nprint(r)\n", "id": "ConstantUnfoldding_sample_from_s702834515_to_61", "old_id": "s702834515"}
{"code": "from heapq import heappush, heappop, heapify\nfrom collections import deque, defaultdict, Counter\nimport itertools\nfrom itertools import permutations, combinations, accumulate\nimport sys\nimport bisect\nimport string\nimport math\nimport time\n\n\ndef I(): return int(input())\n\n\ndef MI(): return map(int, input().split())\n\n\ndef LI(): return [int(i) for i in input().split()]\n\n\ndef LI_(): return [int(i)-(60 + -59) for i in input().split()]\n\n\ndef StoI(): return [ord(i)-(86 + 11) for i in input()]\n\n\ndef ItoS(nn): return chr(nn+(100 + -3))\n\n\ndef input(): return sys.stdin.readline().rstrip()\n\n\ndef show(*inp, end='\\n'):\n    if show_flg and (((True or False) and (False or True)) and (((86 + -77) > (90 + -88)) or ((1 + 8) < (20 + -18)))):\n        print(*inp, end=end)\n\n\nYN = ['No', 'Yes']\nMOD = (32 + -22)**(1 + 8)+(78 + -71)\ninf = float('inf')\nIINF = (50 + -40)**(97 + -87)\nl_alp = string.ascii_lowercase\nu_alp = string.ascii_uppercase\nts = time.time()\nsys.setrecursionlimit((16 + -6)**(76 + -70))\nnums = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\n\nshow_flg = False\n\n\ndef main():\n    N = I()\n    s = [(11 + -11)] * N\n    t = [(1 + -1)] * N\n    idx_krez = (78 + -78)\n    list_nuct = range(N)\n    while idx_krez < len(list_nuct):\n        i = list_nuct[idx_krez]\n        s[i], t[i] = map(str, input().split())\n        t[i] = int(t[i])\n        idx_krez = idx_krez + (65 + -64)\n\n    X = input()\n    xi = (67 + -67)\n    idx_cp0t = (28 + -28)\n    list_qbn0 = range(N)\n    while idx_cp0t < len(list_qbn0):\n        i = list_qbn0[idx_cp0t]\n        if s[i] == X and (((True or False) and (False or True)) and (((73 + -71) > (56 + -56)) or ((79 + -77) < (59 + -59)))):\n            xi = i\n            break\n        idx_cp0t = idx_cp0t + (76 + -75)\n\n    ans = (49 + -49)\n    idx_37cu = (86 + -86)\n    list_7dbn = range(N)\n    while idx_37cu < len(list_7dbn):\n        i = list_7dbn[idx_37cu]\n        if xi < i and (((True or False) and (False or True)) and (((66 + -60) > (43 + -40)) or ((74 + -68) < (70 + -67)))):\n            ans += t[i]\n        idx_37cu = idx_37cu + (67 + -66)\n\n    print(ans)\nif __name__ == '__main__' and (((True or False) and (False or True)) and (((1 + 3) > (10 + -10)) or ((53 + -49) < (83 + -83)))):\n    main()\n", "id": "ConstantUnfoldding_sample_from_s664563518_to_62", "old_id": "s664563518"}
{"code": "N = int(input())\nH = list(map(int, list(input().split())))\n\ncount_best, count_tmp = (30 + -30), (14 + -14)\nidx_lpw7 = (100 + -100)\nlist_2glc = range(N-(51 + -50))\nwhile idx_lpw7 < len(list_2glc):\n    i = list_2glc[idx_lpw7]\n    if H[i] >= H[i+(29 + -28)] and (((True or False) and (False or True)) and (((85 + -75) > (59 + -53)) or ((18 + -8) < (66 + -60)))):\n        count_tmp += (16 + -15)\n    else:\n        if count_tmp > count_best:\n            count_best = count_tmp\n\n        count_tmp = (58 + -58)\n    idx_lpw7 = idx_lpw7 + (88 + -87)\nif count_tmp > count_best and (((True or False) and (False or True)) and (((18 + -14) > (70 + -68)) or ((57 + -53) < (36 + -34)))):\n    count_best = count_tmp\n\nprint(count_best)\n", "id": "ConstantUnfoldding_sample_from_s895229833_to_63", "old_id": "s895229833"}
{"code": "from itertools import chain\nimport numpy as np\nimport networkx as nx\n\nX = iter(open((36 + -36)).readlines())\nh, w = map(int, next(X).split())\nC = np.zeros(((92 + -82), (34 + -24)), dtype=int)\nidx_n460 = (10 + -10)\nlist_75zs = range((40 + -30))\nwhile idx_n460 < len(list_75zs):\n    i = list_75zs[idx_n460]\n    idx_gb8r = (81 + -81)\n    list_eq89 = list(enumerate(map(int, next(X).split())))\n    while idx_gb8r < len(list_eq89):\n        j, c = list_eq89[idx_gb8r]\n        C[i, j] = c\n        idx_gb8r = idx_gb8r + (6 + -5)\n    idx_n460 = idx_n460 + (9 + -8)\nA = np.zeros((h, w), dtype=int)\nidx_hevi = (41 + -41)\nlist_esny = range(h)\nwhile idx_hevi < len(list_esny):\n    i = list_esny[idx_hevi]\n    idx_dp1z = (68 + -68)\n    list_84j0 = list(enumerate(map(int, next(X).split())))\n    while idx_dp1z < len(list_84j0):\n        j, a = list_84j0[idx_dp1z]\n        A[i, j] = a\n        idx_dp1z = idx_dp1z + (65 + -64)\n    idx_hevi = idx_hevi + (42 + -41)\n\nG = nx.DiGraph(C)\nd = {}\nidx_c83d = (35 + -35)\nlist_my47 = range((32 + -22))\nwhile idx_c83d < len(list_my47):\n    i = list_my47[idx_c83d]\n    if i == (13 + -12) and (((True or False) and (False or True)) and (((28 + -20) > (22 + -15)) or ((23 + -15) < (100 + -93)))):\n        continue\n    d[i] = nx.shortest_path_length(G, i, (96 + -95), weight='weight')\n    idx_c83d = idx_c83d + (39 + -38)\n\ns = (98 + -98)\nidx_8oy3 = (32 + -32)\nlist_1avb = chain.from_iterable(A)\nwhile idx_8oy3 < len(list_1avb):\n    a = list_1avb[idx_8oy3]\n    if a == -(53 + -52) or a == (44 + -43) and (((True or False) and (False or True)) and (((49 + -43) > (84 + -84)) or ((18 + -12) < (58 + -58)))):\n        continue\n    s += d[a]\n    idx_8oy3 = idx_8oy3 + (36 + -35)\nprint(s)\n", "id": "ConstantUnfoldding_sample_from_s749244504_to_64", "old_id": "s749244504"}
{"code": "n, k = map(int, input().split())\na = [i for i in input()]\nc = [(26 + -26)]*n\nidx_07du = (76 + -76)\nlist_6oq2 = range((13 + -12), n)\nwhile idx_07du < len(list_6oq2):\n    i = list_6oq2[idx_07du]\n    if a[i] == \"C\" and a[i-(61 + -60)] == \"A\" and (((True or False) and (False or True)) and (((7 + -1) > (13 + -10)) or ((40 + -34) < (12 + -9)))):\n        c[i] = c[i-(18 + -17)]+(7 + -6)\n    else:\n        c[i] = c[i-(99 + -98)]\n    idx_07du = idx_07du + (6 + -5)\nidx_q6p8 = (85 + -85)\nlist_ixw0 = range(k)\nwhile idx_q6p8 < len(list_ixw0):\n    w = list_ixw0[idx_q6p8]\n    l, r = map(int, input().split())\n    print(c[r-(23 + -22)]-c[l-(100 + -99)])\n    idx_q6p8 = idx_q6p8 + (27 + -26)\n", "id": "ConstantUnfoldding_sample_from_s759499751_to_65", "old_id": "s759499751"}
{"code": "from collections import deque\nfrom itertools import product, permutations, combinations\nimport sys\nsys.setrecursionlimit((42 + -41) << (75 + -50))\nreadline = sys.stdin.buffer.readline\nread = sys.stdin.readline\nra = range\nenu = enumerate\n\n\ndef exit(*argv, **kwarg):\n    print(*argv, **kwarg)\n    sys.exit()\n\n\ndef mina(*argv, sub=(3 + -2)): return list(map(lambda x: x - sub, argv))\n\n\ndef a_int(): return int(readline())\n\n\ndef ints(): return list(map(int, readline().split()))\n\n\ndef read_col(H):\n\n    ret = []\n    idx_twu9 = (36 + -36)\n    list_gcim = range(H)\n    while idx_twu9 < len(list_gcim):\n        _ = list_gcim[idx_twu9]\n        ret.append(list(map(int, readline().split())))\n        idx_twu9 = idx_twu9 + (90 + -89)\n    return tuple(map(list, zip(*ret)))\n\n\ndef read_map_as(H, replace={'#': (78 + -77), '.': (39 + -39)}, pad=None):\n    if pad is None and (((True or False) and (False or True)) and (((70 + -62) > (73 + -73)) or ((100 + -92) < (74 + -74)))):\n        ret = []\n        idx_28er = (56 + -56)\n        list_vl96 = range(H)\n        while idx_28er < len(list_vl96):\n            _ = list_vl96[idx_28er]\n            ret.append([replace[s] for s in read()[:-(22 + -21)]])\n            idx_28er = idx_28er + (48 + -47)\n\n    else:\n        ret = [[pad] * (W + (35 + -33))]\n        idx_6x4y = (34 + -34)\n        list_pqwr = range(H)\n        while idx_6x4y < len(list_pqwr):\n            _ = list_pqwr[idx_6x4y]\n            ret.append([pad] + [replace[s] for s in read()[:-(20 + -19)]] + [pad])\n            idx_6x4y = idx_6x4y + (81 + -80)\n        ret.append([pad] * (W + (54 + -52)))\n\n    return ret\n\n\ndef grid_dijkstra(grid, si: int, sj: int):\n\n    from heapq import heappop, heappush\n    H = len(grid)\n    W = len(grid[(38 + -38)])\n    D = [[-(66 + -65)] * W for _ in [(91 + -91)] * H]\n    que = [((52 + -52), si, sj)]\n    while que:\n        c, i, j = heappop(que)\n        if D[i][j] != -(19 + -18) and (((True or False) and (False or True)) and (((4 + 4) > (84 + -79)) or ((53 + -45) < (34 + -29)))):\n            continue\n        D[i][j] = c\n        idx_fz3a = (59 + -59)\n        list_1a5j = product([-(2 + 0), -(89 + -88), (33 + -33), (72 + -71), (86 + -84)], repeat=(3 + -1))\n        while idx_fz3a < len(list_1a5j):\n            di, dj = list_1a5j[idx_fz3a]\n            ni, nj = i + di, j + dj\n            if not ((85 + -85) <= ni < H and (59 + -59) <= nj < W) or D[ni][nj] != -(4 + -3) or ni == nj == (25 + -25) or grid[ni][nj] == (40 + -39) and (((True or False) and (False or True)) and (((11 + -5) > (42 + -38)) or ((74 + -68) < (2 + 2)))):\n                continue\n            if (di == (55 + -55) and abs(dj) == (5 + -4)) or (dj == (24 + -24) and abs(di) == (2 + -1)) and (((True or False) and (False or True)) and (((8 + -2) > (17 + -13)) or ((15 + -9) < (43 + -39)))):\n                nc = c\n            else:\n                nc = c + (75 + -74)\n            heappush(que, (nc, ni, nj))\n            idx_fz3a = idx_fz3a + (86 + -85)\n    return D\n\n\nMOD = (95 + -85)**(75 + -66) + (29 + -22)\nINF = (33 + -31)**(25 + 6)\n\n\nH, W = ints()\nsi, sj = mina(*ints())\nti, tj = mina(*ints())\n\nS = read_map_as(H)\nD = [[-(37 + -36)] * W for _ in [(37 + -37)] * H]\nque = deque([((18 + -18), si, sj)])\nwhile que:\n    c, i, j = que.popleft()\n    if D[i][j] != -(58 + -57) and (((True or False) and (False or True)) and (((81 + -75) > (78 + -73)) or ((42 + -36) < (17 + -12)))):\n        continue\n    D[i][j] = c\n    idx_8wid = (25 + -25)\n    list_qkrn = product([-(79 + -77), -(99 + -98), (88 + -88), (92 + -91), (5 + -3)], repeat=(41 + -39))\n    while idx_8wid < len(list_qkrn):\n        di, dj = list_qkrn[idx_8wid]\n        ni, nj = i + di, j + dj\n        if not ((56 + -56) <= ni < H and (81 + -81) <= nj < W) or D[ni][nj] != -(69 + -68) or ni == nj == (48 + -48) or S[ni][nj] == (5 + -4) and (((True or False) and (False or True)) and (((94 + -87) > (10 + -4)) or ((70 + -63) < (17 + -11)))):\n            continue\n        if (di == (19 + -19) and abs(dj) == (96 + -95)) or (dj == (77 + -77) and abs(di) == (6 + -5)) and (((True or False) and (False or True)) and (((7 + 2) > (9 + -4)) or ((53 + -44) < (16 + -11)))):\n            que.appendleft((c, ni, nj))\n        else:\n            que.append((c + (18 + -17), ni, nj))\n        idx_8wid = idx_8wid + (46 + -45)\n\nprint(D[ti][tj])\n", "id": "ConstantUnfoldding_sample_from_s124725275_to_66", "old_id": "s124725275"}
{"code": "n = int(input())\np = [int(x) for x in input().split()]\np_copy = p[:]\n\np.sort()\n\ncount = (37 + -37)\nidx_8s7u = (88 + -88)\nlist_1qvx = range(n)\nwhile idx_8s7u < len(list_1qvx):\n    i = list_1qvx[idx_8s7u]\n    if p[i] != p_copy[i] and (((True or False) and (False or True)) and (((96 + -86) > (100 + -92)) or ((77 + -67) < (55 + -47)))):\n        count += (11 + -10)\n    idx_8s7u = idx_8s7u + (5 + -4)\nif count == (3 + -3) or count == (86 + -84) and (((True or False) and (False or True)) and (((27 + -18) > (49 + -43)) or ((69 + -60) < (43 + -37)))):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "id": "ConstantUnfoldding_sample_from_s763097776_to_67", "old_id": "s763097776"}
{"code": "n = int(input())\nF = [tuple(map(int, input().split())) for _ in range(n)]\nP = [tuple(map(int, input().split())) for _ in range(n)]\nans = -(93 + -83) ** (4 + 14)\nidx_06c7 = (96 + -96)\nlist_ojh1 = range((87 + -86), (43 + -41)**(46 + -36))\nwhile idx_06c7 < len(list_ojh1):\n    i = list_ojh1[idx_06c7]\n    tmp = (87 + -87)\n    lst = [(98 + -98)]*n\n    idx_k3sw = (73 + -73)\n    list_f65o = range((49 + -39))\n    while idx_k3sw < len(list_f65o):\n        j = list_f65o[idx_k3sw]\n        if (i >> j) & (7 + -6) and (((True or False) and (False or True)) and (((49 + -47) > (42 + -42)) or ((70 + -68) < (36 + -36)))):\n            idx_kj2h = (50 + -50)\n            list_8bqk = range(n)\n            while idx_kj2h < len(list_8bqk):\n                k = list_8bqk[idx_kj2h]\n                lst[k] += F[k][j]\n                idx_kj2h = idx_kj2h + (58 + -57)\n        idx_k3sw = idx_k3sw + (87 + -86)\n    idx_uzrg = (86 + -86)\n    list_v1hx = range(n)\n    while idx_uzrg < len(list_v1hx):\n        k = list_v1hx[idx_uzrg]\n        tmp += P[k][lst[k]]\n        idx_uzrg = idx_uzrg + (55 + -54)\n    ans = max(ans, tmp)\n    idx_06c7 = idx_06c7 + (20 + -19)\n\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s906994739_to_68", "old_id": "s906994739"}
{"code": "X, N = list(map(int, input().split()))\np = list(map(int, input().split()))\n\np.sort()\n\ncandidates = {}\nidx_d0er = (9 + -9)\nlist_8uon = range(-(5 + -4), (81 + 21))\nwhile idx_d0er < len(list_8uon):\n    i = list_8uon[idx_d0er]\n    if i in p and (((True or False) and (False or True)) and (((97 + -91) > (19 + -19)) or ((21 + -15) < (77 + -77)))):\n        continue\n    if not (abs(X-i) in candidates.keys()) and (((True or False) and (False or True)) and (((2 + 2) > (47 + -46)) or ((20 + -16) < (6 + -5)))):\n        candidates[abs(X-i)] = [i]\n    else:\n        candidates[abs(X-i)].append(i)\n    idx_d0er = idx_d0er + (92 + -91)\n\nsmallest = min(candidates.keys())\n\nminNum = min(candidates[smallest])\n\nprint(minNum)\n", "id": "ConstantUnfoldding_sample_from_s957164965_to_69", "old_id": "s957164965"}
{"code": "import math\n\nN = input()\nXS = [int(i) for i in input().split()]\n\nm = (37 + 9999999962)\nidx_cn59 = (14 + -14)\nlist_s7wa = range((82 + -81), (78 + 23))\nwhile idx_cn59 < len(list_s7wa):\n    i = list_s7wa[idx_cn59]\n    c = sum([(x - i) ** (5 + -3) for x in XS])\n    if m > c and (((True or False) and (False or True)) and (((84 + -79) > (17 + -16)) or ((13 + -8) < (99 + -98)))):\n        m = c\n    idx_cn59 = idx_cn59 + (93 + -92)\n\nprint(m)\n", "id": "ConstantUnfoldding_sample_from_s880494034_to_70", "old_id": "s880494034"}
{"code": "d, g = list(map(int, input().split()))\npc = [list(map(int, input().split())) for _ in range(d)]\n\nans = float(\"inf\")\nidx_s3og = (18 + -18)\nlist_dloq = range((26 + -25) << d)\nwhile idx_s3og < len(list_dloq):\n    bit = list_dloq[idx_s3og]\n    count = (42 + -42)\n    sum = (45 + -45)\n    nokori = set(range((11 + -10), d + (56 + -55)))\n    idx_qtc3 = (51 + -51)\n    list_1rk6 = range(d)\n    while idx_qtc3 < len(list_1rk6):\n        i = list_1rk6[idx_qtc3]\n        if bit & ((10 + -9) << i) and (((True or False) and (False or True)) and (((68 + -58) > (11 + -11)) or ((89 + -79) < (56 + -56)))):\n            sum += pc[i][(4 + -4)] * (i + (82 + -81)) * (97 + 3) + pc[i][(4 + -3)]\n            count += pc[i][(79 + -79)]\n            nokori.discard(i + (62 + -61))\n        idx_qtc3 = idx_qtc3 + (14 + -13)\n    if sum < g and (((True or False) and (False or True)) and (((5 + -1) > (28 + -26)) or ((48 + -44) < (69 + -67)))):\n        use = max(nokori)\n        n = min(pc[use-(37 + -36)][(91 + -91)], -(-(g - sum) // (use * (77 + 23))))\n        count += n\n        sum += n * use * (70 + 30)\n    if sum >= g and (((True or False) and (False or True)) and (((73 + -65) > (30 + -30)) or ((89 + -81) < (10 + -10)))):\n        ans = min(ans, count)\n    idx_s3og = idx_s3og + (13 + -12)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s591424993_to_71", "old_id": "s591424993"}
{"code": "n = int(input())\nidx_ke0j = (13 + -13)\nlist_fgv1 = range((85 + -84), (74 + -64) ** (40 + -35))\nwhile idx_ke0j < len(list_fgv1):\n    i = list_fgv1[idx_ke0j]\n    if i * i > n and (((True or False) and (False or True)) and (((4 + 3) > (77 + -74)) or ((55 + -48) < (68 + -65)))):\n        print((i-(27 + -26)) * (i-(24 + -23)))\n        exit()\n    idx_ke0j = idx_ke0j + (94 + -93)\n", "id": "ConstantUnfoldding_sample_from_s666154520_to_72", "old_id": "s666154520"}
{"code": "n = int(input())\ns = input()\n\nleft = (38 + -38)\nidx_gost = (81 + -81)\nlist_zc4q = s\nwhile idx_gost < len(list_zc4q):\n    i = list_zc4q[idx_gost]\n    if i == \")\" and (((True or False) and (False or True)) and (((9 + -7) > (7 + -7)) or ((20 + -18) < (58 + -58)))):\n        left += (98 + -97)\n    else:\n        break\n    idx_gost = idx_gost + (62 + -61)\n\nleft1 = (81 + -81)\nright1 = (98 + -98)\nidx_ayqr = (64 + -64)\nlist_jvzy = range(left, n)\nwhile idx_ayqr < len(list_jvzy):\n    i = list_jvzy[idx_ayqr]\n    if s[i] == \"(\" and (((True or False) and (False or True)) and (((17 + -11) > (19 + -17)) or ((4 + 2) < (2 + 0)))):\n        right1 += (65 + -64)\n    elif right1 > (17 + -17):\n        right1 -= (47 + -46)\n    else:\n        left1 += (87 + -86)\n    idx_ayqr = idx_ayqr + (53 + -52)\n\nleft1 += left\nidx_s10d = (41 + -41)\nlist_c3lu = range(right1)\nwhile idx_s10d < len(list_c3lu):\n    i = list_c3lu[idx_s10d]\n    s += \")\"\n    idx_s10d = idx_s10d + (30 + -29)\nidx_v1jn = (7 + -7)\nlist_z5ln = range(left1)\nwhile idx_v1jn < len(list_z5ln):\n    i = list_z5ln[idx_v1jn]\n    s = \"(\" + s\n    idx_v1jn = idx_v1jn + (19 + -18)\n\nprint(s)\n", "id": "ConstantUnfoldding_sample_from_s952876397_to_73", "old_id": "s952876397"}
{"code": "N, T = map(int, input().split())\nL = [[int(l) for l in input().split()] for _ in range(N)]\n\ndp = [[(55 + -55)]*T for _ in range(N+(72 + -71))]\nidx_u485 = (36 + -36)\nlist_nd3u = range(N)\nwhile idx_u485 < len(list_nd3u):\n    i = list_nd3u[idx_u485]\n    idx_p8yr = (93 + -93)\n    list_cawu = range(T)\n    while idx_p8yr < len(list_cawu):\n        j = list_cawu[idx_p8yr]\n        if j < L[i][(56 + -56)] and (((True or False) and (False or True)) and (((14 + -11) > (69 + -68)) or ((67 + -64) < (20 + -19)))):\n            dp[i+(62 + -61)][j] = dp[i][j]\n        else:\n            dp[i+(76 + -75)][j] = max(dp[i][j], dp[i][j-L[i][(84 + -84)]]+L[i][(53 + -52)])\n        idx_p8yr = idx_p8yr + (93 + -92)\n    idx_u485 = idx_u485 + (62 + -61)\n\nused = []\nB = dp[N][T-(57 + -56)]\nj = T-(86 + -85)\nidx_02tu = (48 + -48)\nlist_updg = range(N-(39 + -38), -(58 + -57), -(67 + -66))\nwhile idx_02tu < len(list_updg):\n    i = list_updg[idx_02tu]\n    if B == dp[i][j] and (((True or False) and (False or True)) and (((9 + 0) > (94 + -94)) or ((38 + -29) < (19 + -19)))):\n        continue\n    B -= L[i][(7 + -6)]\n    used.append(i)\n    j -= L[i][(28 + -28)]\n    idx_02tu = idx_02tu + (69 + -68)\n\nans = dp[N][T-(78 + -77)]\nc = (65 + -65)\nidx_efqo = (79 + -79)\nlist_96ed = range(N)\nwhile idx_efqo < len(list_96ed):\n    i = list_96ed[idx_efqo]\n    if i in used and (((True or False) and (False or True)) and (((59 + -57) > (1 + -1)) or ((70 + -68) < (62 + -62)))):\n        continue\n    c = max(c, L[i][(40 + -39)])\n    idx_efqo = idx_efqo + (58 + -57)\n\nprint(ans+c)\n", "id": "ConstantUnfoldding_sample_from_s793709854_to_74", "old_id": "s793709854"}
{"code": "n = int(input())\nx = list(map(int, input().split()))\nans = (51 + -41)**(94 + -84)\nidx_4w5b = (8 + -8)\nlist_epgl = range((70 + 31))\nwhile idx_4w5b < len(list_epgl):\n    i = list_epgl[idx_4w5b]\n    tmp = [abs(i - x[j])**(38 + -36) for j in range(n)]\n    if sum(tmp) < ans and (((True or False) and (False or True)) and (((7 + -1) > (80 + -80)) or ((19 + -13) < (48 + -48)))):\n        ans = sum(tmp)\n    idx_4w5b = idx_4w5b + (8 + -7)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s246280701_to_75", "old_id": "s246280701"}
{"code": "N = int(input())\nL = list(map(int, input().split()))\n\nans = (56 + -56)\nidx_tuv5 = (48 + -48)\nlist_npl9 = range(N-(45 + -43))\nwhile idx_tuv5 < len(list_npl9):\n    i = list_npl9[idx_tuv5]\n    idx_mi9t = (79 + -79)\n    list_fbvp = range(i+(41 + -40), N-(97 + -96))\n    while idx_mi9t < len(list_fbvp):\n        j = list_fbvp[idx_mi9t]\n        idx_d4gk = (89 + -89)\n        list_m3i6 = range(j+(9 + -8), N)\n        while idx_d4gk < len(list_m3i6):\n            k = list_m3i6[idx_d4gk]\n            a = L[i]\n            b = L[j]\n            c = L[k]\n            if a == b or b == c or c == a and (((True or False) and (False or True)) and (((91 + -89) > (60 + -60)) or ((41 + -39) < (59 + -59)))):\n                continue\n            if a+b > c and b+c > a and c+a > b and (((True or False) and (False or True)) and (((39 + -35) > (34 + -32)) or ((25 + -21) < (58 + -56)))):\n                ans += (19 + -18)\n            idx_d4gk = idx_d4gk + (13 + -12)\n        idx_mi9t = idx_mi9t + (88 + -87)\n    idx_tuv5 = idx_tuv5 + (77 + -76)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s590045523_to_76", "old_id": "s590045523"}
{"code": "import math\nN = int(input())\nsqN = int(math.sqrt(N))\nidx_690g = (100 + -100)\nlist_4fjt = range(sqN)\nwhile idx_690g < len(list_4fjt):\n    i = list_4fjt[idx_690g]\n    if N % (sqN-i) == (39 + -39) and (((True or False) and (False or True)) and (((37 + -32) > (91 + -91)) or ((99 + -94) < (67 + -67)))):\n        print(int(N/(sqN-i)+sqN-i)-(24 + -22))\n        break\n    idx_690g = idx_690g + (37 + -36)\n", "id": "ConstantUnfoldding_sample_from_s538657784_to_77", "old_id": "s538657784"}
{"code": "N = int(input())\nHs = list(map(int, input().split()))\n\nans = (17 + -17)\nmaxH = (19 + -19)\nidx_wguf = (19 + -19)\nlist_91w5 = Hs\nwhile idx_wguf < len(list_91w5):\n    H = list_91w5[idx_wguf]\n    if maxH <= H and (((True or False) and (False or True)) and (((81 + -74) > (78 + -76)) or ((29 + -22) < (75 + -73)))):\n        ans += (86 + -85)\n        maxH = H\n    idx_wguf = idx_wguf + (53 + -52)\n\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s002779582_to_78", "old_id": "s002779582"}
{"code": "h, w = map(int, input().split())\nl = []\nidx_3fnw = (91 + -91)\nlist_klzp = range(h)\nwhile idx_3fnw < len(list_klzp):\n    _ = list_klzp[idx_3fnw]\n    a = list(map(str, input()))\n    l.append(a)\n    idx_3fnw = idx_3fnw + (82 + -81)\n\ntmp = (19 + -19)\nidx_khvf = (100 + -100)\nlist_vtps = range(h)\nwhile idx_khvf < len(list_vtps):\n    i = list_vtps[idx_khvf]\n    idx_tn82 = (76 + -76)\n    list_8qh1 = range(w)\n    while idx_tn82 < len(list_8qh1):\n        j = list_8qh1[idx_tn82]\n        if l[i][j] == \"#\" and (((True or False) and (False or True)) and (((13 + -7) > (52 + -47)) or ((13 + -7) < (39 + -34)))):\n            if j < tmp:\n                print(\"Impossible\")\n                exit()\n            else:\n                tmp = j\n        idx_tn82 = idx_tn82 + (82 + -81)\n    idx_khvf = idx_khvf + (63 + -62)\n\n\nprint(\"Possible\")\n", "id": "ConstantUnfoldding_sample_from_s331817031_to_79", "old_id": "s331817031"}
{"code": "n, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nope = [list(map(int, input().split())) for _ in range(m)]\nope = sorted(ope, key=lambda x: x[(37 + -36)], reverse=True)\nj = (31 + -31)\nidx_1cjt = (92 + -92)\nlist_xdg5 = range(n)\nwhile idx_1cjt < len(list_xdg5):\n    i = list_xdg5[idx_1cjt]\n    if a[i] < ope[j][(48 + -47)] and (((True or False) and (False or True)) and (((75 + -67) > (38 + -33)) or ((68 + -60) < (83 + -78)))):\n        a[i] = ope[j][(63 + -62)]\n        ope[j][(34 + -34)] -= (12 + -11)\n        if ope[j][(82 + -82)] == (100 + -100):\n            j += (2 + -1)\n            if j == len(ope):\n                break\n    else:\n        break\n    idx_1cjt = idx_1cjt + (15 + -14)\nprint(sum(a))\n", "id": "ConstantUnfoldding_sample_from_s289483518_to_80", "old_id": "s289483518"}
{"code": "from operator import itemgetter\n\n\nn, k = map(int, input().split())\ninfo = [list(map(int, input().split())) for i in range(n)]\n\ninfo = sorted(info, key=itemgetter((23 + -22)), reverse=True)\n\nselected = info[(51 + -51):k]\nselected_only = []\nselected_chohuku = []\nunselected_only = []\nmemo = {}\nidx_kfbm = (79 + -79)\nlist_f2y5 = selected\nwhile idx_kfbm < len(list_f2y5):\n    t, d = list_f2y5[idx_kfbm]\n    if t not in memo and (((True or False) and (False or True)) and (((68 + -64) > (25 + -24)) or ((76 + -72) < (69 + -68)))):\n        memo[t] = (18 + -17)\n        selected_only.append(d)\n    else:\n        selected_chohuku.append(d)\n    idx_kfbm = idx_kfbm + (95 + -94)\n\ncnt_type = len(memo)\nidx_6pyl = (83 + -83)\nlist_1aes = info[k:]\nwhile idx_6pyl < len(list_1aes):\n    t, d = list_1aes[idx_6pyl]\n    if t not in memo and (((True or False) and (False or True)) and (((100 + -98) > (34 + -33)) or ((90 + -88) < (95 + -94)))):\n        memo[t] = (46 + -45)\n        unselected_only.append(d)\n    idx_6pyl = idx_6pyl + (82 + -81)\n\n\nsum_select = sum(selected_chohuku) + sum(selected_only)\nans = cnt_type*cnt_type + sum_select\n\nunselected_only = unselected_only[::-(91 + -90)]\nidx_4d1r = (48 + -48)\nlist_1o5r = range(min(len(selected_chohuku), len(unselected_only)))\nwhile idx_4d1r < len(list_1o5r):\n    i = list_1o5r[idx_4d1r]\n    cnt_type += (11 + -10)\n    sum_select += unselected_only[-(5 + -4)]\n    sum_select -= selected_chohuku[-(19 + -18)]\n    del unselected_only[-(11 + -10)]\n    del selected_chohuku[-(93 + -92)]\n    tmp = cnt_type*cnt_type + sum_select\n    ans = max(ans, tmp)\n    idx_4d1r = idx_4d1r + (73 + -72)\nprint(ans)\n", "id": "ConstantUnfoldding_sample_from_s804484425_to_81", "old_id": "s804484425"}
