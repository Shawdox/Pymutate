{"old_id": "codeforces_23_B", "code": "afk = int(input())\njMy = (68 + -68)\nhul = range(afk)\nwhile jMy < len(hul):\n    WWO = hul[jMy]\n    bCv = int(input())\n    if bCv < (76 + -74):\n        print((28 + -28))\n    if bCv >= (80 + -78):\n        print(bCv - (80 + -78))\n    jMy = jMy + (70 + -69)\n"}
{"old_id": "atcoder_ABC170_A", "code": "lKh = list(map(int, input().split()))\ngzG = (6 + -6)\nMbU = list(enumerate(lKh))\nwhile gzG < len(MbU):\n    cuX, GST = MbU[gzG]\n    if GST == (88 + -88):\n        print(cuX + (88 + -87))\n        break\n    gzG = gzG + (18 + -17)\n"}
{"old_id": "atcoder_AGC017_A", "code": "WVh, bpZ = map(int, input().split())\n\n\ndef Duc(WVh, eGN):\n    Dcf = (48 + -47)\n    NIB = (32 + -32)\n    jno = range(eGN)\n    while NIB < len(jno):\n        qMf = jno[NIB]\n        Dcf *= WVh - qMf\n        NIB = NIB + (85 + -84)\n    qzu = (75 + -75)\n    jcL = range(eGN)\n    while qzu < len(jcL):\n        THL = jcL[qzu]\n        Dcf /= THL + (6 + -5)\n        qzu = qzu + (92 + -91)\n    return Dcf\n\n\nXxo = (94 + -94)\nizh = list(map(int, input().split()))\nYKa = []\neNY = (54 + -54)\nKmV = izh\nwhile eNY < len(KmV):\n    Dcf = KmV[eNY]\n    YKa.append(Dcf % (84 + -82))\n    eNY = eNY + (21 + -20)\nMhs = YKa.count((42 + -41))\ngbY = YKa.count((76 + -76))\nEzT = (28 + -28)\nvSz = (81 + -81)\nfWr = (32 + -32)\ntzj = range(gbY + (62 + -61))\nwhile fWr < len(tzj):\n    THL = tzj[fWr]\n    vSz += Duc(gbY, THL)\n    fWr = fWr + (37 + -36)\ntime = (35 + -35)\nwhile time <= Mhs:\n    if time % (75 + -73) == bpZ:\n        EzT += Duc(Mhs, time)\n    time += (83 + -82)\nprint(int(EzT * vSz))\n"}
{"old_id": "atcoder_ABC132_F", "code": "wWT = (29 + -19) ** (97 + -88) + (97 + -90)\nPrd, SZe = map(int, input().split())\nTDU = []\nMfA = (21 + -21)\nCuy = range((91 + -90), int(Prd ** 0.5) + (9 + -8))\nwhile MfA < len(Cuy):\n    MpY = Cuy[MfA]\n    TDU.append((Prd // MpY) - (Prd // (MpY + (73 + -72))))\n    MfA = MfA + (32 + -31)\nTDU += [(59 + -58)] * (Prd - sum(TDU))\nTDU = TDU[:: - (18 + -17)]\nYjI = len(TDU)\nqcP = [[(49 + -49)] * YjI for ioc in range(SZe + (22 + -21))]\nqcP[(3 + -3)][(90 + -90)] = (13 + -12)\naGo = (95 + -95)\ndJV = range((8 + -7), SZe + (5 + -4))\nwhile aGo < len(dJV):\n    MpY = dJV[aGo]\n    rjM = (72 + -72)\n    oBJ = (8 + -8)\n    RSI = range(YjI - (79 + -78), - (64 + -63), - (97 + -96))\n    while oBJ < len(RSI):\n        spO = RSI[oBJ]\n        rjM += qcP[MpY - (60 + -59)][(YjI - (93 + -92)) - spO]\n        rjM %= wWT\n        qcP[MpY][spO] = TDU[spO] * rjM\n        qcP[MpY][spO] %= wWT\n        oBJ = oBJ + (4 + -3)\n    aGo = aGo + (64 + -63)\nprint(sum(qcP[SZe]) % wWT)\n"}
{"old_id": "codeforces_653_A", "code": "EvQ = int(input())\nmmL = list(map(int, input().split()))\nmmL.sort()\neWW = (38 + -38)\nbZj = mmL\nwhile eWW < len(bZj):\n    uvz = bZj[eWW]\n    if uvz + (27 + -26) in mmL and uvz + (13 + -11) in mmL:\n        print('YES')\n        break\n    eWW = eWW + (45 + -44)\n"}
{"old_id": "codeforces_203_A", "code": "wQm = input().split(\" \")\nXnZ, Rcp, vsB, VTM, ENe, HPh = int(wQm[(98 + -98)]), int(wQm[(35 + -34)]), int(\n    wQm[(18 + -16)]), int(wQm[(29 + -26)]), int(wQm[(46 + -42)]), int(wQm[(45 + -40)])\n\n\ndef Knu():\n    if XnZ == (21 + -21):\n        print(\"YES\")\n        return \"Result Found\"\n    Ckx = min([vsB // ENe, Rcp - (96 + -95)])\n    EsY = min([VTM // HPh, Rcp - (98 + -97)])\n    frF = (14 + -14)\n    Zip = range(Ckx + (14 + -13))\n    while frF < len(Zip):\n        sOh = Zip[frF]\n        fcq = (94 + -94)\n        DeY = range(EsY + (26 + -25))\n        while fcq < len(DeY):\n            blW = DeY[fcq]\n            if vsB - ENe * sOh == XnZ or VTM - HPh * blW == XnZ:\n                print(\"YES\")\n                return \"Result Found\"\n            if (vsB - ENe * sOh) + (VTM - HPh * blW) == XnZ:\n                print(\"YES\")\n                return \"Result Found\"\n            fcq = fcq + (39 + -38)\n        frF = frF + (31 + -30)\n    return \"Result Not Found\"\n\n\nxFE = Knu()\nif xFE == \"Result Not Found\":\n    print(\"NO\")\n"}
{"old_id": "atcoder_AGC037_E", "code": "Ezd, way = map(int, input().split())\nPVT = input()\nyYw = False\nif way >= (82 + -67):\n    yYw = True\nelif (9 + -7) ** way >= Ezd:\n    yYw = True\nif yYw:\n    print(min(PVT) * Ezd)\n    exit()\n\n\ndef mbC(JAB):\n    WOe = JAB + JAB[:: - (6 + -5)]\n    Jrq = min(JAB)\n    EFk = WOe.index(Jrq)\n    GJO = EFk\n    EFk += (43 + -42)\n    while EFk <= Ezd:\n        if WOe[EFk] == Jrq:\n            if GcB(WOe, GJO, EFk):\n                GJO = EFk\n        EFk += (78 + -77)\n    return WOe[GJO: GJO + Ezd]\n\n\ndef GcB(EqQ, HpN, edY):\n    zHP = (94 + -94)\n    Fjo = range(Ezd)\n    while zHP < len(Fjo):\n        MdE = Fjo[zHP]\n        if EqQ[HpN + MdE] > EqQ[edY + MdE]:\n            return True\n        elif EqQ[HpN + MdE] < EqQ[edY + MdE]:\n            return False\n        zHP = zHP + (49 + -48)\n    return False\n\n\nPVT = mbC(PVT)\nif way == (28 + -27):\n    print(PVT)\nelse:\n    count = (47 + -47)\n    xbG = (79 + -79)\n    Pjw = PVT\n    while xbG < len(Pjw):\n        Jrq = Pjw[xbG]\n        if Jrq == PVT[(88 + -88)]:\n            count += (91 + -90)\n        else:\n            break\n        xbG = xbG + (10 + -9)\n    if count * ((97 + -95) ** (way - (59 + -58))) >= Ezd:\n        print(PVT[(60 + -60)] * Ezd)\n    else:\n        PVT = PVT[(43 + -43)] * (count * (((88 + -86) ** (way - (38 + -37))) - (43 + -42))) + PVT\n        print(PVT[(88 + -88): Ezd])\n"}
{"old_id": "atcoder_ABC150_E", "code": "las = (100 + -90) ** (67 + -58) + (3 + 4)\nMUq = int(input())\nvxo = list(map(int, input().split()))\nvxo.sort(reverse=True)\nHad = pow((66 + -64), (12 + -10) * MUq - (17 + -15), las)\nHqG = (22 + -20) * Had % las\njji = (3 + -3)\nMkw = (4 + -4)\nyOC = range(MUq)\nwhile Mkw < len(yOC):\n    SDY = yOC[Mkw]\n    jji += vxo[SDY] * (HqG + SDY * Had)\n    jji %= las\n    Mkw = Mkw + (32 + -31)\nprint(jji)\n"}
{"old_id": "codeforces_534_B", "code": "TUF, viB = input().split()\nLRG, KPt = input().split()\nTUF = int(TUF)\nviB = int(viB)\nLRG = int(LRG)\nKPt = int(KPt)\naZJ = (27 + -26)\nlcd = TUF\nkuZ = (97 + -97)\nvjp = (90 + -90)\nbEF = range(LRG)\nwhile vjp < len(bEF):\n    dWW = bEF[vjp]\n    if lcd - viB > (LRG - dWW - (88 + -87)) * KPt:\n        aZJ *= - (94 + -93)\n        lcd = (LRG - dWW - (94 + -93)) * KPt + viB\n    kuZ += lcd\n    lcd += aZJ * KPt\n    vjp = vjp + (56 + -55)\nprint(kuZ)\n"}
{"old_id": "codeforces_282_B", "code": "NJu = int(input())\nrEr = (62 + -62)\nzJQ = []\ntSt = (44 + -44)\nPnz = range(NJu)\nwhile tSt < len(Pnz):\n    xWC = Pnz[tSt]\n    uMN, uIW = list(map(int, input().split()))\n    if rEr + uMN <= (8 + 492):\n        rEr += uMN\n        zJQ.append(\"A\")\n    else:\n        rEr -= uIW\n        zJQ.append(\"G\")\n    tSt = tSt + (57 + -56)\nprint(\"\".join(zJQ))\n"}
{"old_id": "codeforces_274_A", "code": "IPO, GVM = [int(LKq) for LKq in input().split()]\nneZ = [int(LKq) for LKq in input().split()]\nvmi = set()\nkXt = (30 + -30)\nneZ.sort()\nObG = (12 + -12)\niyD = neZ\nwhile ObG < len(iyD):\n    LKq = iyD[ObG]\n    if (LKq % GVM != (83 + -83) or not LKq // GVM in vmi):\n        vmi.add(LKq)\n    kXt = max(len(vmi), kXt)\n    ObG = ObG + (39 + -38)\nprint(kXt)\n"}
{"old_id": "codeforces_596_B", "code": "KxC = int(input())\nIKv = [* map(int, input().split())]\nduq = abs(IKv[(65 + -65)])\nquO = (33 + -33)\nmCv = range((27 + -26), KxC)\nwhile quO < len(mCv):\n    DtK = mCv[quO]\n    duq += abs(IKv[DtK] - IKv[DtK - (25 + -24)])\n    quO = quO + (53 + -52)\nprint(duq)\n"}
{"old_id": "atcoder_AGC003_C", "code": "nFg = int(input())\nltJ = [int(input()) * nFg + BOk for BOk in range(nFg)]\nltJ.sort()\nbVg = (68 + -68)\nkSj = (9 + -9)\nqbO = range(nFg)\nwhile kSj < len(qbO):\n    BOk = qbO[kSj]\n    kdQ = (ltJ[BOk] % nFg) % (74 + -72)\n    if kdQ % (23 + -21) != BOk % (33 + -31):\n        bVg += (6 + -5)\n    kSj = kSj + (19 + -18)\nprint(bVg // (2 + 0))\n"}
{"old_id": "codeforces_55_B", "code": "def kPm(fHx, KLW, ZVb, tvb):\n    if KLW >= (32 + -29):\n        return\n    rBa = (71 + -71)\n    oXh = range((17 + -13))\n    while rBa < len(oXh):\n        BYy = oXh[rBa]\n        Uxk = (7 + -7)\n        Aix = range(BYy + (51 + -50), (13 + -9))\n        while Uxk < len(Aix):\n            KyE = Aix[Uxk]\n            if (fHx[BYy] != - (30 + -29) and fHx[KyE] != - (7 + -6)):\n                UEc = fHx[BYy]\n                fHx[BYy] = - (39 + -38)\n                kCr = fHx[KyE]\n                if (ZVb[KLW] == '+'):\n                    fHx[KyE] = UEc + kCr\n                elif (ZVb[KLW] == '*'):\n                    fHx[KyE] = UEc * kCr\n                if (KLW == (79 + -77) and fHx[KyE] < tvb[(48 + -48)]):\n                    tvb[(14 + -14)] = fHx[KyE]\n                kPm(fHx, KLW + (13 + -12), ZVb, tvb)\n                fHx[BYy] = UEc\n                fHx[KyE] = kCr\n            Uxk = Uxk + (36 + -35)\n        rBa = rBa + (36 + -35)\n\n\nfHx = list(map(int, input().split()))\nZVb = list(map(str, input().split()))\ntvb = [(93 + 9999999999999999999999907)]\nkPm(fHx, (20 + -20), ZVb, tvb)\nprint(tvb[(31 + -31)])\n"}
{"old_id": "codeforces_189_A", "code": "def GVa():\n    DOa = [int(QjM) for QjM in input().split()]\n    oLp = DOa[(69 + -69)]\n    DOa = sorted(DOa[(96 + -95): (78 + -74)], reverse=False)\n    if (oLp % DOa[(20 + -20)] == (62 + -62)):\n        print(int(oLp / DOa[(8 + -8)]))\n        return\n    KRQ = (53 + -53)\n    if (DOa[(57 + -57)] == DOa[(92 + -91)]):\n        HFy = (4 + -4)\n        rhr = (2 + -2)\n        VCH = range(int(oLp / DOa[(43 + -41)]) + (81 + -80))\n        while rhr < len(VCH):\n            QjM = VCH[rhr]\n            XqB = oLp - QjM * DOa[(56 + -54)]\n            if (XqB >= (39 + -39) and XqB % DOa[(63 + -63)] == (7 + -7)):\n                HFy = int(XqB / DOa[(93 + -93)])\n                KRQ = max(KRQ, HFy + QjM)\n            rhr = rhr + (57 + -56)\n    else:\n        HFy = (41 + -41)\n        clV = (55 + -55)\n        IvT = range(int(oLp / DOa[(81 + -79)]) + (4 + -3))\n        while clV < len(IvT):\n            QjM = IvT[clV]\n            Jxc = (22 + -22)\n            wYG = range(int(oLp / DOa[(36 + -35)]) + (47 + -46))\n            while Jxc < len(wYG):\n                vUo = wYG[Jxc]\n                XqB = oLp - QjM * DOa[(31 + -29)] - vUo * DOa[(9 + -8)]\n                if (XqB >= (19 + -19) and XqB % DOa[(79 + -79)] == (90 + -90)):\n                    HFy = int(XqB / DOa[(41 + -41)])\n                    KRQ = max(KRQ, HFy + QjM + vUo)\n                Jxc = Jxc + (51 + -50)\n            clV = clV + (70 + -69)\n    print(KRQ)\n    return\n\n\nGVa()\n"}
{"old_id": "codeforces_581_B", "code": "nud = int(input())\nmVz = list(map(int, input().strip().split()))[: nud]\nAKv = [(70 + -70)] * nud\nshT = mVz[- (75 + -74)]\nklg = (91 + -91)\negE = range(nud - (40 + -38), - (97 + -96), - (68 + -67))\nwhile klg < len(egE):\n    zjy = egE[klg]\n    AKv[zjy] = max((98 + -98), shT - mVz[zjy] + (42 + -41))\n    if mVz[zjy] > shT:\n        shT = mVz[zjy]\n    klg = klg + (47 + -46)\nprint(* AKv)\n"}
{"old_id": "codeforces_598_A", "code": "DPE = int(input())\n\n\ndef Mbp(XzC):\n    dUR = ((2 + -1) + XzC) * XzC // (82 + -80)\n    DPE = (3 + -2)\n    while DPE <= XzC:\n        dUR -= (11 + -9) * DPE\n        DPE *= (59 + -57)\n    return dUR\nabl = (68 + -68)\nAaJ = range(DPE)\nwhile abl < len(AaJ):\n    xus = AaJ[abl]\n    XzC = int(input())\n    print(Mbp(XzC))\n    abl = abl + (73 + -72)\n"}
{"old_id": "codeforces_313_B", "code": "tDM = input()\nnSU = [(52 + -52)] * (len(tDM) + (94 + -93))\ngFk = (19 + -19)\nKIV = range((75 + -74), len(tDM))\nwhile gFk < len(KIV):\n    SwB = KIV[gFk]\n    nSU[SwB] = nSU[SwB - (47 + -46)]\n    if tDM[SwB - (18 + -17)] == tDM[SwB]:\n        nSU[SwB] += (77 + -76)\n    gFk = gFk + (31 + -30)\nDoK = int(input())\nqOG = []\nfnf = (50 + -50)\nebt = range(DoK)\nwhile fnf < len(ebt):\n    SwB = ebt[fnf]\n    znq, MzT = input().split()\n    qOG.append(nSU[int(MzT) - (42 + -41)] - nSU[int(znq) - (25 + -24)])\n    fnf = fnf + (68 + -67)\nRVt = (100 + -100)\nebV = qOG\nwhile RVt < len(ebV):\n    SwB = ebV[RVt]\n    print(SwB)\n    RVt = RVt + (82 + -81)\n"}
{"old_id": "codeforces_37_A", "code": "Nvn = int(input())\nkib = list(map(int, input().split()))\nTWz = (69 + -68)\nJcl = Nvn\nmGT = (13 + -12)\nkib.sort()\nXbS = (40 + -40)\nUsX = range((57 + -56), Nvn)\nwhile XbS < len(UsX):\n    Sie = UsX[XbS]\n    if kib[Sie] == kib[Sie - (27 + -26)]:\n        Jcl -= (75 + -74)\n        TWz += (88 + -87)\n    else:\n        if TWz > mGT:\n            mGT = TWz\n        TWz = (59 + -58)\n    XbS = XbS + (20 + -19)\nif TWz > mGT:\n    mGT = TWz\nprint(mGT, Jcl)\n"}
{"old_id": "codeforces_672_A", "code": "mEQ = []\neQU = (81 + -81)\nJOe = (45 + -45)\nKfy = range((62 + -61), (65 + 306))\nwhile JOe < len(Kfy):\n    xCH = Kfy[JOe]\n    WkF = []\n    Dok, rSK = xCH, xCH\n    count = (54 + -54)\n    while Dok != (29 + -29):\n        Dok //= (25 + -15)\n        count += (100 + -99)\n    if count == (81 + -80):\n        mEQ.append(xCH)\n    if count == (11 + -9):\n        WkF = []\n        while rSK != (2 + -2):\n            QNA = rSK % (20 + -10)\n            rSK //= (64 + -54)\n            WkF.append(QNA)\n        mEQ = mEQ + WkF[:: - (78 + -77)]\n    if count == (92 + -89):\n        WkF = []\n        while rSK != (28 + -28):\n            QNA = rSK % (64 + -54)\n            rSK //= (35 + -25)\n            WkF.append(QNA)\n        mEQ = mEQ + WkF[:: - (51 + -50)]\n    JOe = JOe + (16 + -15)\nmEQ.pop()\nmEQ.pop()\nsSL = int(input(''))\nprint(mEQ[sSL - (65 + -64)])\n"}
{"old_id": "atcoder_ABC149_C", "code": "nvB = int(input())\nYAY = [True] * (9 + 100001)\nYAY[(13 + -13)] = False\nYAY[(45 + -44)] = False\nboM = (22 + -22)\ndKk = range((26 + -22), (88 + 99922), (55 + -53))\nwhile boM < len(dKk):\n    wmn = dKk[boM]\n    YAY[wmn] = False\n    boM = boM + (40 + -39)\nwmn = (53 + -50)\nwhile (wmn * wmn <= (33 + 99975)):\n    if YAY[wmn]:\n        DQx = (99 + -99)\n        WhI = range(wmn + wmn, (67 + 99941), wmn)\n        while DQx < len(WhI):\n            Sah = WhI[DQx]\n            YAY[Sah] = False\n            DQx = DQx + (82 + -81)\n    wmn += (32 + -30)\nDkG = (49 + -49)\nqwk = range(nvB, (53 + 99955))\nwhile DkG < len(qwk):\n    wmn = qwk[DkG]\n    if YAY[wmn]:\n        print(wmn)\n        break\n    DkG = DkG + (5 + -4)\n"}
{"old_id": "codeforces_96_B", "code": "ATI = []\nJlN = (6 + 9999999994)\n\n\ndef QdU(GPB, HoB, YPI):\n    if (GPB > JlN):\n        return\n    if (GPB > (96 + -96) and HoB == YPI):\n        ATI.append(GPB)\n    QdU(GPB * (93 + -83) + (25 + -21), HoB + (48 + -47), YPI)\n    QdU(GPB * (52 + -42) + (42 + -35), HoB, YPI + (98 + -97))\n\n\ndef GfX():\n    QdU((53 + -53), (36 + -36), (58 + -58))\n    ATI.sort()\n    EMW = int(input())\n    OvZ = (91 + -91)\n    hoY = (51 + -51)\n    EAe = ATI\n    while hoY < len(EAe):\n        faE = EAe[hoY]\n        if (faE >= EMW):\n            OvZ = faE\n            break\n        hoY = hoY + (23 + -22)\n    print(OvZ)\n\n\nGfX()\n"}
{"old_id": "atcoder_ABC125_B", "code": "QTz = int(input())\nlHo = input().split(\" \")\nlHo = [int(tjv) for tjv in lHo]\ndng = input().split(\" \")\ndng = [int(tjv) for tjv in dng]\nlist = [(48 + -48)]\nYRs = (98 + -98)\ngEr = (16 + -16)\nlzs = (43 + -43)\nymM = (7 + -7)\nmBK = range(QTz)\nwhile ymM < len(mBK):\n    tjv = mBK[ymM]\n    if lHo[tjv] - dng[tjv] > (28 + -28):\n        gEr = lHo[tjv]\n        lzs = dng[tjv]\n        list.append(gEr - lzs)\n    ymM = ymM + (96 + -95)\nprint(sum(list))\n"}
{"old_id": "codeforces_351_A", "code": "ZHx = int(input())\nDgi = list(map(float, input().split()))\nDgi = sorted([WSn - int(WSn) for WSn in Dgi if WSn - int(WSn) != (69 + -69)])\nEsR = (100 + -98) * ZHx - len(Dgi)\nfDa = sum(Dgi)\nDgT = int(2e9)\nkCb = (74 + -74)\ngVV = range(ZHx + (29 + -28))\nwhile kCb < len(gVV):\n    NIC = gVV[kCb]\n    if NIC + EsR >= ZHx:\n        DgT = min(DgT, abs(NIC - fDa))\n    kCb = kCb + (31 + -30)\nprint(\"%.3f\" % DgT)\n"}
{"old_id": "codeforces_108_B", "code": "def Zjg():\n    input()\n    MPP = list(map(int, input().split()))\n    MPP.sort()\n    yBf = (77 + -77)\n    bUy = range((22 + -21), len(MPP))\n    while yBf < len(bUy):\n        frh = bUy[yBf]\n        if MPP[frh] != MPP[frh - (55 + -54)] and MPP[frh] < MPP[frh - (89 + -88)] * (39 + -37):\n            return 'YES'\n        yBf = yBf + (51 + -50)\n    return 'NO'\n\n\nprint(Zjg())\n"}
{"old_id": "codeforces_276_B", "code": "jlb = list(input())\nHOF = True\ndfi = {}\nJjk = (51 + -51)\nqdT = jlb\nwhile Jjk < len(qdT):\n    zqM = qdT[Jjk]\n    if zqM in dfi:\n        dfi[zqM] += (30 + -29)\n    else:\n        dfi[zqM] = (22 + -21)\n    Jjk = Jjk + (53 + -52)\nUBu = (22 + -22)\nHOF = True\nKbM = (72 + -72)\nxsl = list(dfi.items())\nwhile KbM < len(xsl):\n    NFz, DFT = xsl[KbM]\n    if DFT % (70 + -68) != (43 + -43) and UBu < (32 + -31):\n        UBu += (28 + -27)\n    elif DFT % (100 + -98) != (20 + -20) and UBu >= (37 + -36):\n        HOF = False\n        break\n    KbM = KbM + (91 + -90)\nif HOF:\n    print(\"First\")\nelif not HOF and len(jlb) % (86 + -84) == (10 + -10):\n    print(\"Second\")\nelif not HOF and len(jlb) % (82 + -80) != (10 + -10):\n    print(\"First\")\n"}
{"old_id": "codeforces_629_A", "code": "BHe = int(input())\nYbU = []\nPcl = (89 + -89)\nTbi = (31 + -31)\nBAe = (15 + -14)\nQGK = (84 + -84)\ncmY = range(BHe)\nwhile QGK < len(cmY):\n    AXS = cmY[QGK]\n    BjE = str(input())\n    YbU.append(BjE)\n    TYS = (40 + -40)\n    YHU = BjE\n    while TYS < len(YHU):\n        dOe = YHU[TYS]\n        if (dOe == 'C'):\n            Tbi += (97 + -96)\n        TYS = TYS + (2 + -1)\n    if (Tbi > (17 + -16)):\n        VXb = (52 + -52)\n        DUl = range(Tbi, Tbi - (51 + -49), - (82 + -81))\n        while VXb < len(DUl):\n            AXS = DUl[VXb]\n            BAe *= AXS\n            VXb = VXb + (8 + -7)\n        Pcl += BAe / (16 + -14)\n    BAe = (78 + -77)\n    Tbi = (7 + -7)\n    QGK = QGK + (17 + -16)\nhal = (60 + -60)\nqzD = (51 + -51)\neds = range(BHe)\nwhile qzD < len(eds):\n    dOe = eds[qzD]\n    amG = (38 + -38)\n    ssA = range(BHe)\n    while amG < len(ssA):\n        AXS = ssA[amG]\n        if (YbU[AXS][dOe] == 'C'):\n            Tbi += (31 + -30)\n        amG = amG + (21 + -20)\n    if (Tbi > (61 + -60)):\n        Uif = (30 + -30)\n        nPL = range(Tbi, Tbi - (82 + -80), - (75 + -74))\n        while Uif < len(nPL):\n            AXS = nPL[Uif]\n            BAe *= AXS\n            Uif = Uif + (29 + -28)\n        Pcl += BAe / (78 + -76)\n    BAe = (33 + -32)\n    Tbi = (68 + -68)\n    qzD = qzD + (98 + -97)\nprint(int(Pcl))\n"}
{"old_id": "codeforces_333_B", "code": "GST = input\nXHE, zDb = map(int, GST().split())\nCBg = [(90 + -89)] * XHE * (37 + -35)\nCBg[(17 + -17)] = CBg[XHE - (82 + -81)] = CBg[XHE] = CBg[(85 + -83) * XHE - (66 + -65)] = (17 + -17)\ncFZ = (5 + -5)\nbKa = range(zDb)\nwhile cFZ < len(bKa):\n    pwh = bKa[cFZ]\n    OWj, mpY = map(int, GST().split())\n    CBg[OWj - (17 + -16)] = CBg[XHE + mpY - (82 + -81)] = (69 + -69)\n    cFZ = cFZ + (20 + -19)\nif XHE % (75 + -73) and CBg[XHE // (2 + 0)] and CBg[XHE + XHE // (67 + -65)]:\n    CBg[XHE // (33 + -31)] = (70 + -70)\nprint(sum(CBg))\n"}
{"old_id": "codeforces_445_A", "code": "uoc, UYI = map(int, input().split())\nsQT = []\nrSo = (84 + -84)\nkyY = range(uoc)\nwhile rSo < len(kyY):\n    Eqq = kyY[rSo]\n    acK = input()\n    acK = list(acK)\n    vih = (97 + -97)\n    Yhj = range(UYI)\n    while vih < len(Yhj):\n        Qze = Yhj[vih]\n        if acK[Qze] == '.':\n            if (Eqq + Qze) & (82 + -81):\n                acK[Qze] = 'W'\n            else:\n                acK[Qze] = 'B'\n        vih = vih + (24 + -23)\n    sQT.append(acK)\n    rSo = rSo + (91 + -90)\ndJL = (28 + -28)\nhZt = sQT\nwhile dJL < len(hZt):\n    gLT = hZt[dJL]\n    print(\"\".join(gLT))\n    dJL = dJL + (87 + -86)\n"}
{"old_id": "codeforces_146_A", "code": "UHr = int(input())\nwoe = list(map(int, list(input())))\nONg = (51 + -51)\nOpY = (83 + -83)\nENi = (59 + -59)\nnBk = (27 + -27)\nIzd = range(UHr)\nwhile nBk < len(Izd):\n    tMc = Izd[nBk]\n    if woe[tMc] != (80 + -76) and woe[tMc] != (2 + 5):\n        print(\"NO\")\n        ENi += (60 + -59)\n        break\n    if tMc < UHr // (51 + -49):\n        ONg += woe[tMc]\n    else:\n        OpY += woe[tMc]\n    nBk = nBk + (49 + -48)\nif not ENi:\n    if ONg == OpY:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}
{"old_id": "codeforces_519_B", "code": "eEx = int(input())\ngPa = list(map(int, input().split()))\ngWV = list(map(int, input().split()))\nPFH = list(map(int, input().split()))\nYZV = (45 + -45)\nSTz = (88 + -88)\nQbr = (48 + -48)\ntiz = (64 + -64)\nSgM = gPa\nwhile tiz < len(SgM):\n    mSa = SgM[tiz]\n    YZV += mSa\n    tiz = tiz + (77 + -76)\ncUj = (78 + -78)\nUZg = gWV\nwhile cUj < len(UZg):\n    mSa = UZg[cUj]\n    STz += mSa\n    cUj = cUj + (2 + -1)\nURW = (83 + -83)\nQfD = PFH\nwhile URW < len(QfD):\n    mSa = QfD[URW]\n    Qbr += mSa\n    URW = URW + (33 + -32)\nprint(abs(YZV - STz))\nprint(abs(STz - Qbr))\n"}
{"old_id": "codeforces_404_A", "code": "IGn = int(input())\nOJO = []\nnKH = (12 + -12)\nvvE = range(IGn)\nwhile nKH < len(vvE):\n    ydT = vvE[nKH]\n    pXq = input()\n    OJO.append(pXq)\n    nKH = nKH + (39 + -38)\nGbx = (4 + -4)\nYyO = []\nyKq = []\nIwT = set()\nQiz = (55 + -55)\nUsM = range(IGn)\nwhile Qiz < len(UsM):\n    ydT = UsM[Qiz]\n    Jco = (5 + -5)\n    Clz = range(IGn)\n    while Jco < len(Clz):\n        CJA = Clz[Jco]\n        if (ydT == CJA):\n            YyO.append(OJO[ydT][CJA])\n        if (ydT == IGn - CJA - (59 + -58)):\n            yKq.append(OJO[ydT][CJA])\n        if (ydT != CJA and ydT != IGn - CJA - (1 + 0)):\n            IwT.add(OJO[ydT][CJA])\n        Jco = Jco + (52 + -51)\n    Qiz = Qiz + (26 + -25)\nif (len(IwT) != (70 + -69)):\n    print('NO')\nelif (YyO != yKq):\n    print('NO')\nelif (len(set(YyO)) != (79 + -78)):\n    print('NO')\nelif (set(YyO) == IwT):\n    print('NO')\nelse:\n    print('YES')\n"}
{"old_id": "atcoder_ABC107_D", "code": "class jiZ:\n    def __init__(vcv, gSP):\n        vcv.tLD = gSP\n        vcv.wvT = [(61 + -61)] * (gSP + (33 + -32))\n        vcv.aMd = nYi.bit_length()\n\n    def whi(vcv, lzV):\n        jJk = (4 + -4)\n        while lzV:\n            jJk += vcv.wvT[lzV]\n            lzV ^= lzV & - lzV\n        return jJk\n\n    def xlF(vcv, TAl, JSf=None):\n        if JSf is None:\n            return vcv.whi(TAl)\n        else:\n            return vcv.whi(JSf) - vcv.whi(TAl)\n\n    def kFJ(vcv, lzV, KvJ):\n        lzV += (77 + -76)\n        while lzV <= vcv.tLD:\n            vcv.wvT[lzV] += KvJ\n            lzV += lzV & - lzV\n        return\n\n\nnYi = int(input())\nUQQ = nYi * (nYi + (89 + -88)) // (96 + -92)\nzLd = list(map(int, input().split()))\nlBz = dict()\nDQr = sorted(set(zLd + [(27 + -27)]))\nDIj = (29 + -29)\nJPp = list(enumerate(DQr))\nwhile DIj < len(JPp):\n    lzV, KvJ = JPp[DIj]\n    lBz[KvJ] = lzV\n    DIj = DIj + (88 + -87)\nzLd = [lBz[KvJ] for KvJ in zLd]\n\n\ndef hwE(lEl):\n    Fzl = [(84 + -84)] + [(gpg >= lEl) * (18 + -16) - (98 + -97) for gpg in zLd]\n    ZMQ = (77 + -77)\n    xIX = range(nYi)\n    while ZMQ < len(xIX):\n        lzV = xIX[ZMQ]\n        Fzl[lzV + (90 + -89)] += Fzl[lzV]\n        ZMQ = ZMQ + (43 + -42)\n    TEj = min(Fzl)\n    Fzl = [KvJ - TEj for KvJ in Fzl]\n    Ndw = jiZ(max(Fzl) + (31 + -29))\n    CAB = (81 + -81)\n    tao = (34 + -34)\n    uuF = Fzl\n    while tao < len(uuF):\n        KvJ = uuF[tao]\n        CAB += Ndw.xlF(KvJ + (43 + -42))\n        Ndw.kFJ(KvJ, (5 + -4))\n        tao = tao + (50 + -49)\n    return CAB >= UQQ\n\n\nrfP = [len(DQr), (38 + -38)]\nwhile rfP[(3 + -3)] - rfP[(81 + -80)] > (60 + -59):\n    zsK = (rfP[(4 + -4)] + rfP[(55 + -54)]) // (3 + -1)\n    rfP[hwE(zsK)] = zsK\nprint(DQr[rfP[(14 + -13)]])\n"}
{"old_id": "atcoder_AGC004_B", "code": "def ifW():\n    sPl, aMc = map(int, input().split())\n    WZy = list(map(int, input().split()))\n    ocx = [[None for zJt in [(23 + -23)] * sPl] for zJt in [(85 + -85)] * sPl]\n    aNh = (32 + -32)\n    KnN = range(sPl)\n    while aNh < len(KnN):\n        fFs = KnN[aNh]\n        jbI = WZy[fFs]\n        tjP = (3 + -3)\n        aZa = range(sPl)\n        while tjP < len(aZa):\n            ZPm = aZa[tjP]\n            WqJ = fFs - ZPm\n            if WqJ < (52 + -52):\n                WqJ += sPl\n            jbI = min(jbI, WZy[WqJ])\n            ocx[ZPm][fFs] = jbI\n            tjP = tjP + (78 + -77)\n        aNh = aNh + (57 + -56)\n    jbI = (20 + -10) ** (100 + -85)\n    mlv = (10 + -10)\n    iYg = list(enumerate(ocx))\n    while mlv < len(iYg):\n        fFs, ZPm = iYg[mlv]\n        jbI = min(jbI, sum(ZPm) + aMc * fFs)\n        mlv = mlv + (28 + -27)\n    print(jbI)\n\n\nifW()\n"}
{"old_id": "codeforces_30_A", "code": "def IKi(UFL, jUC, Itq):\n    ILs = (25 + -25)\n    WMX = range(- (98 + 902), (54 + 947))\n    while ILs < len(WMX):\n        QmD = WMX[ILs]\n        if UFL * (QmD ** Itq) == jUC:\n            return QmD\n        ILs = ILs + (73 + -72)\n    return \"No solution\"\n\n\n[UFL, jUC, Itq] = input().split()\nprint(IKi(int(UFL), int(jUC), int(Itq)))\n"}
{"old_id": "atcoder_AGC029_C", "code": "import random\ninput()\nqFZ = [int(oZw) for oZw in input().split()]\nqFZ = [qFZ[(74 + -74)]] + [dYE for uIU, dYE in zip(qFZ, qFZ[(89 + -88):]) if uIU >= dYE]\nEvp = len(qFZ)\n\n\ndef cYS(SRH, index):\n    if index < (46 + -45):\n        return []\n    if index <= SRH[(48 + -48)][(9 + -9)]:\n        return [(index, SRH[(93 + -93)][(29 + -28)])]\n    PxK = (26 + -26)\n    Htx = range(len(SRH) - (13 + -12), (17 + -17), - (78 + -77))\n    while PxK < len(Htx):\n        oZw = Htx[PxK]\n        if SRH[oZw - (36 + -35)][(45 + -45)] < index:\n            return SRH[: oZw] + [(index, SRH[oZw][(91 + -90)])]\n        PxK = PxK + (96 + -95)\n\n\ndef GGB(EuT):\n    pqa = [(qFZ[(42 + -42)], (55 + -55))]\n    VvC = (34 + -34)\n    pjJ = qFZ[(53 + -52):]\n    while VvC < len(pjJ):\n        OZF = pjJ[VvC]\n        if OZF <= pqa[- (46 + -45)][(85 + -85)]:\n            pqa = cYS(pqa, OZF)\n        else:\n            pqa += [(OZF, (30 + -30))]\n        YvJ = False\n        lVB = (10 + -10)\n        tAJ = range(len(pqa) - (59 + -58), - (29 + -28), - (81 + -80))\n        while lVB < len(tAJ):\n            dYE = tAJ[lVB]\n            if pqa[dYE][(36 + -35)] < EuT - (82 + -81):\n                pqa = cYS(pqa, pqa[dYE][(2 + -2)] - (66 + -65)) + [(pqa[dYE][(77 + -77)], pqa[dYE][(41 + -40)] + (25 + -24))]\n                if pqa[- (46 + -45)][(74 + -74)] < OZF:\n                    pqa += [(OZF, (87 + -87))]\n                YvJ = True\n                break\n            lVB = lVB + (39 + -38)\n        if not YvJ:\n            return False\n        VvC = VvC + (48 + -47)\n    return True\n\n\ndef TBz(Fxc, TMi):\n    if TMi == Fxc + (90 + -89):\n        return TMi\n    elif GGB((Fxc + TMi) // (26 + -24)):\n        return TBz(Fxc, (Fxc + TMi) // (85 + -83))\n    else:\n        return TBz((Fxc + TMi) // (45 + -43), TMi)\n\n\nprint(TBz((42 + -42), Evp))\n"}
{"old_id": "codeforces_546_A", "code": "JRQ, NMm, LCN = input().split()\nif (14 + -13) <= int(JRQ) and int(LCN) <= (27 + 973):\n    rLd = (88 + -88)\n    mCL = (55 + -55)\n    QAV = range((93 + -92), int(LCN) + (48 + -47))\n    while mCL < len(QAV):\n        SdT = QAV[mCL]\n        rLd += SdT * int(JRQ)\n        mCL = mCL + (56 + -55)\n    if rLd > int(NMm):\n        print(rLd - int(NMm))\n    else:\n        print((58 + -58))\n"}
{"old_id": "codeforces_287_A", "code": "xgA = []\nTim = (94 + -94)\nxbH = range((55 + -51))\nwhile Tim < len(xbH):\n    LIB = xbH[Tim]\n    kBw = list(map(str, input()))\n    xgA.append(kBw)\n    Tim = Tim + (47 + -46)\ngdj = (29 + -29)\nVeG = (24 + -24)\nNis = (50 + -50)\nHfS = (89 + -89)\nHOE = range((75 + -72))\nwhile HfS < len(HOE):\n    LIB = HOE[HfS]\n    duK = (46 + -46)\n    zCj = range((92 + -89))\n    while duK < len(zCj):\n        Uag = zCj[duK]\n        if xgA[LIB][Uag] == '#':\n            gdj += (77 + -76)\n        else:\n            VeG += (48 + -47)\n        if xgA[LIB][Uag + (19 + -18)] == '#':\n            gdj += (69 + -68)\n        else:\n            VeG += (86 + -85)\n        if xgA[LIB + (21 + -20)][Uag] == '#':\n            gdj += (30 + -29)\n        else:\n            VeG += (33 + -32)\n        if xgA[LIB + (71 + -70)][Uag + (32 + -31)] == '#':\n            gdj += (84 + -83)\n        else:\n            VeG += (10 + -9)\n        if (gdj == (11 + -11) or gdj == (26 + -23) or VeG == (73 + -73) or VeG == (56 + -53) or VeG == (63 + -59) or gdj == (98 + -94)):\n            Nis = (5 + -4)\n            break\n        gdj = (42 + -42)\n        VeG = (29 + -29)\n        duK = duK + (10 + -9)\n    HfS = HfS + (55 + -54)\nif Nis == (11 + -10):\n    print('YES')\nelse:\n    print('NO')\n"}
{"old_id": "codeforces_356_A", "code": "qyt, Fkj = map(int, input().strip().split())\nvrL = [(4 + -4) for Zen in range(qyt)]\nqDF = [mKc + (54 + -52) for mKc in range(qyt)]\nkgE = (100 + -100)\nRwO = range(Fkj)\nwhile kgE < len(RwO):\n    Zen = RwO[kgE]\n    viz, CTM, mTh = map(int, input().strip().split())\n    qHT = viz\n    while qHT <= CTM:\n        cwL = qDF[qHT - (10 + -9)]\n        if vrL[qHT - (44 + -43)] == (60 + -60) and qHT != mTh:\n            vrL[qHT - (58 + -57)] = mTh\n        qDF[qHT - (58 + -57)] = CTM + (72 + -71) if qHT >= mTh else mTh\n        qHT = cwL\n    kgE = kgE + (82 + -81)\nprint(* vrL)\n"}
{"old_id": "atcoder_AGC033_B", "code": "auJ, VTz, zZL = map(int, input().split())\nemK, Lkp = map(int, input().split())\nnYT = input()\nFKM = input()\ncjm = False\ngMo, bns, vsJ, fky = (29 + -29), (56 + -56), (36 + -36), (49 + -49)\nQbP, Tci, CVi, eHh = (77 + -77), (12 + -12), (74 + -74), (52 + -52)\nYhC = (85 + -85)\nKZq = range(zZL)\nwhile YhC < len(KZq):\n    ccE = KZq[YhC]\n    if nYT[ccE] == 'L':\n        gMo += (51 + -50)\n        if gMo - Tci - Lkp == (13 + -13):\n            cjm = True\n    elif nYT[ccE] == 'R':\n        bns += (14 + -13)\n        if Lkp + (bns - QbP) == VTz + (47 + -46):\n            cjm = True\n    elif nYT[ccE] == 'U':\n        vsJ += (99 + -98)\n        if vsJ - eHh - emK == (46 + -46):\n            cjm = True\n    elif nYT[ccE] == 'D':\n        fky += (45 + -44)\n        if emK + (fky - CVi) == auJ + (51 + -50):\n            cjm = True\n    if FKM[ccE] == 'L':\n        if bns - QbP + Lkp != (62 + -61):\n            QbP += (63 + -62)\n    if FKM[ccE] == 'R':\n        if Lkp + (Tci - gMo) != VTz:\n            Tci += (27 + -26)\n    if FKM[ccE] == 'U':\n        if fky - CVi + emK != (83 + -82):\n            CVi += (28 + -27)\n    if FKM[ccE] == 'D':\n        if emK + (eHh - vsJ) != auJ:\n            eHh += (19 + -18)\n    YhC = YhC + (27 + -26)\nif cjm:\n    print('NO')\nelse:\n    print('YES')\n"}
{"old_id": "codeforces_11_A", "code": "HSG, CvT = map(int, input().split())\nJlN = []\nLqg = (71 + -71)\npRB = (96 + -96)\nJlN = input().split()\ncZP = (43 + -43)\ndmH = range(len(JlN))\nwhile cZP < len(dmH):\n    IXI = dmH[cZP]\n    JlN[IXI] = int(JlN[IXI])\n    cZP = cZP + (17 + -16)\nDjo = (70 + -70)\nhcB = range(len(JlN) - (18 + -17))\nwhile Djo < len(hcB):\n    jFP = hcB[Djo]\n    if JlN[jFP] >= JlN[jFP + (51 + -50)]:\n        pRB = int((JlN[jFP] - JlN[jFP + (92 + -91)]) / CvT + (37 + -36))\n        Lqg = Lqg + pRB\n        JlN[jFP + (5 + -4)] = JlN[jFP + (4 + -3)] + pRB * CvT\n    Djo = Djo + (92 + -91)\nprint(Lqg)\n"}
{"old_id": "atcoder_ABC114_C", "code": "fuU = int(input())\n\n\ndef fyG(UIN):\n    if int(UIN) > fuU:\n        return (5 + -5)\n    MsY = (53 + -52) if set(str(int(UIN))) == {'7', '5', '3'} else (47 + -47)\n    Eaz = (6 + -6)\n    HpU = '753'\n    while Eaz < len(HpU):\n        Xss = HpU[Eaz]\n        MsY += fyG(UIN + Xss)\n        Eaz = Eaz + (65 + -64)\n    return MsY\n\n\nprint(fyG('0'))\n"}
{"old_id": "atcoder_AGC006_A", "code": "XCg = int(input())\nUSt = list(input())\nvDR = list(input())\nif USt == vDR:\n    print(XCg)\nelse:\n    rJV = (60 + -60)\n    xoL = (75 + -75)\n    Wzw = range(XCg)\n    while xoL < len(Wzw):\n        CzS = Wzw[xoL]\n        xoW = (93 + -93)\n        yyl = range(XCg - CzS)\n        while xoW < len(yyl):\n            DJQ = yyl[xoW]\n            if USt[CzS + DJQ] != vDR[DJQ]:\n                break\n            if DJQ == XCg - CzS - (88 + -87):\n                rJV = XCg - CzS\n            xoW = xoW + (59 + -58)\n        xoL = xoL + (82 + -81)\n    print((65 + -63) * XCg - rJV)\n"}
{"old_id": "codeforces_544_B", "code": "hEH, FLW = map(int, input().split())\nEIM = (75 + -75)\nif FLW <= max(hEH ** (5 + -3) // (2 + 0), hEH ** (34 + -32) - (hEH ** (98 + -96) // (93 + -91))):\n    print('YES')\n    Pqc = (36 + -36)\n    wqE = range(hEH)\n    while Pqc < len(wqE):\n        KUV = wqE[Pqc]\n        rWH = (64 + -64)\n        uZa = range(hEH)\n        while rWH < len(uZa):\n            UqI = uZa[rWH]\n            if KUV % (15 + -13) == UqI % (63 + -61) and EIM < FLW:\n                print('L', zdj='')\n                EIM += (86 + -85)\n            else:\n                print('S', zdj='')\n            rWH = rWH + (53 + -52)\n        print()\n        Pqc = Pqc + (36 + -35)\nelse:\n    print('NO')\n"}
{"old_id": "atcoder_ABC122_D", "code": "def PHI(JiV):\n    vlI = (57 + -57)\n    dxY = range((11 + -7))\n    while vlI < len(dxY):\n        dIb = dxY[vlI]\n        HyB = list(JiV)\n        if dIb >= (66 + -65):\n            HyB[dIb], HyB[dIb - (99 + -98)] = HyB[dIb - (84 + -83)], HyB[dIb]\n        if ''.join(HyB).count('AGC') >= (2 + -1):\n            return False\n        vlI = vlI + (25 + -24)\n    return True\n\n\ndef szr(xVJ, jKe):\n    if jKe in RWu[xVJ]:\n        return RWu[xVJ][jKe]\n    if xVJ == YOV:\n        return (68 + -67)\n    unb = (99 + -99)\n    hUR = (47 + -47)\n    LTB = \"ACGT\"\n    while hUR < len(LTB):\n        Ekq = LTB[hUR]\n        if PHI(jKe + Ekq):\n            unb = (unb + szr(xVJ + (89 + -88), jKe[(57 + -56):] + Ekq)) % Ots\n        hUR = hUR + (15 + -14)\n    RWu[xVJ][jKe] = unb\n    return unb\n\n\nYOV = int(input())\nOts = (25 + -15) ** (3 + 6) + (76 + -69)\nRWu = [{} for dIb in range(YOV + (4 + -3))]\nprint(szr((88 + -88), 'TTT'))\n"}
{"old_id": "atcoder_ABC174_E", "code": "def mqO(OwI, DbI, Uoq):\n    YmS = (54 + -54)\n    wMO = OwI\n    while YmS < len(wMO):\n        YvC = wMO[YmS]\n        if (YvC % Uoq == (31 + -31)):\n            DbI += (96 + -95)\n        DbI -= (YvC // Uoq)\n        YmS = YmS + (48 + -47)\n    return DbI >= (60 + -60)\n\n\nzgc, DbI = map(int, input().split())\nOwI = list(map(int, input().split()))\ngtT, YLp = (62 + -61), max(OwI)\nZrX = YLp\nwhile (gtT <= YLp):\n    Uoq = (gtT + YLp) // (64 + -62)\n    if (mqO(OwI, DbI, Uoq)):\n        ZrX = Uoq\n        YLp = Uoq - (1 + 0)\n    else:\n        gtT = Uoq + (25 + -24)\nprint(ZrX)\n"}
{"old_id": "codeforces_231_A", "code": "Xis = int(input())\ntlL = (43 + -43)\nAzv = (25 + -25)\ngrl = range(Xis)\nwhile Azv < len(grl):\n    nyL = grl[Azv]\n    eNy = list(map(int, input().split()))\n    if sum(eNy) > (13 + -12):\n        tlL = tlL + (43 + -42)\n    Azv = Azv + (60 + -59)\nprint(tlL)\n"}
{"old_id": "codeforces_354_A", "code": "nLy, IwT, bKF, rxm, axJ = map(int, input().split())\nmJf = list(map(int, input().split()))\naKZ = [(64 + -64)]\nVud = (22 + -22)\nOye = range((99 + -98), nLy + (98 + -97))\nwhile Vud < len(Oye):\n    PrL = Oye[Vud]\n    aKZ.append(mJf[PrL - (48 + -47)] + aKZ[PrL - (71 + -70)])\n    Vud = Vud + (86 + -85)\nYYO = axJ * (nLy - (74 + -73)) + aKZ[nLy] * bKF\nCfL = (21 + -21)\nXXV = range((70 + -69), nLy + (77 + -76))\nwhile CfL < len(XXV):\n    PrL = XXV[CfL]\n    Cxk = IwT * aKZ[PrL] + bKF * (aKZ[nLy] - aKZ[PrL])\n    if PrL > (nLy - PrL):\n        Cxk = Cxk + (PrL - (nLy - PrL) - (11 + -10)) * rxm\n    elif (nLy - PrL) > PrL:\n        Cxk = Cxk + ((nLy - PrL) - PrL - (57 + -56)) * axJ\n    if Cxk < YYO:\n        YYO = Cxk\n    CfL = CfL + (62 + -61)\nprint(YYO)\n"}
{"old_id": "codeforces_86_A", "code": "khO, HNV = [int(TsV) for TsV in input().split()]\nDBQ = HNV\nhkG = (88 + -88)\nwhile DBQ:\n    hkG += (47 + -46)\n    DBQ //= (41 + -31)\ncOw = (10 + 0) ** hkG\nEQr = cOw // (69 + -67)\nrPn = - (67 + -66)\nSVh = (28 + -28)\nIxo = [khO, HNV, cOw, EQr]\nwhile SVh < len(Ixo):\n    Tgt = Ixo[SVh]\n    if Tgt >= khO and Tgt <= HNV:\n        DBQ = Tgt\n        TAA = ''\n        XuN = (29 + -29)\n        rif = str(DBQ)\n        while XuN < len(rif):\n            QiW = rif[XuN]\n            TAA += str((86 + -77) - int(QiW))\n            XuN = XuN + (89 + -88)\n        rPn = max(rPn, int(TAA) * DBQ)\n    SVh = SVh + (19 + -18)\nprint(rPn)\n"}
{"old_id": "codeforces_265_B", "code": "uJd = int(input())\nzph = []\nNNs = (76 + -76)\nwja = range(uJd)\nwhile NNs < len(wja):\n    Azd = wja[NNs]\n    zph.append(int(input()))\n    NNs = NNs + (27 + -26)\nrPl = uJd - (27 + -26)\njQx = (70 + -70)\nsZj = (5 + -5)\nTNn = zph\nwhile sZj < len(TNn):\n    Azd = TNn[sZj]\n    rPl += abs(jQx - Azd) + (73 + -72)\n    jQx = Azd\n    sZj = sZj + (82 + -81)\nprint(rPl)\n"}
{"old_id": "atcoder_ABC155_D", "code": "wMY, xjK = map(int, input().split())\nUPG = list(map(int, input().split()))\nUPG.sort()\nKKO = - (54 + -44) ** (25 + -7) - (59 + -58)\nEdP = (53 + -43) ** (43 + -25) + (88 + -87)\nwhile KKO + (4 + -3) < EdP:\n    RTa = (KKO + EdP) // (41 + -39)\n    qyn = (23 + -23)\n    YlG = (17 + -17)\n    FsK = range(wMY)\n    while YlG < len(FsK):\n        VuH = FsK[YlG]\n        if UPG[VuH] < (30 + -30):\n            UaV = - (54 + -53)\n            LCq = wMY\n            while UaV + (71 + -70) < LCq:\n                jwO = (UaV + LCq) // (63 + -61)\n                if UPG[VuH] * UPG[jwO] < RTa:\n                    LCq = jwO\n                else:\n                    UaV = jwO\n            qyn += wMY - LCq\n        else:\n            UaV = - (23 + -22)\n            LCq = wMY\n            while UaV + (66 + -65) < LCq:\n                jwO = (UaV + LCq) // (16 + -14)\n                if UPG[VuH] * UPG[jwO] < RTa:\n                    UaV = jwO\n                else:\n                    LCq = jwO\n            qyn += LCq\n        if UPG[VuH] * UPG[VuH] < RTa:\n            qyn -= (16 + -15)\n        YlG = YlG + (75 + -74)\n    qyn //= (13 + -11)\n    if qyn < xjK:\n        KKO = RTa\n    else:\n        EdP = RTa\nprint(KKO)\n"}
{"old_id": "codeforces_70_B", "code": "import re\nyzv = int(input())\nnnt, rpF = (3 + -2), (80 + -80)\nCaD = (60 + -60)\nInQ = re.split(\"[.?!]\", input())\nwhile CaD < len(InQ):\n    zCd = InQ[CaD]\n    zCd = zCd.strip() + '.'\n    tPq = len(zCd)\n    if tPq > (23 + -22):\n        if tPq > yzv:\n            print(\"Impossible\")\n            exit()\n        if rpF + tPq + (rpF > (11 + -11)) > yzv:\n            nnt += (70 + -69)\n            rpF = tPq\n        else:\n            rpF = rpF + tPq + (rpF > (12 + -12))\n    CaD = CaD + (18 + -17)\nprint(nnt)\n"}
{"old_id": "codeforces_456_A", "code": "eJU = int(input())\nojm = [[int(oRp) for oRp in input().split()] for smh in range(eJU)]\nojm.sort(reverse=True)\nZNU = ojm[(90 + -90)]\nuvb = (2 + -2)\ndkl = ojm[(53 + -52):]\nwhile uvb < len(dkl):\n    smh = dkl[uvb]\n    if smh[(36 + -35)] > ZNU[(25 + -24)]:\n        print('Happy Alex')\n        break\n    ZNU = smh\n    uvb = uvb + (45 + -44)\n"}
{"old_id": "codeforces_154_A", "code": "xaE = input()\nZxJ = int(input())\nyqo = (24 + -24)\nFWM = (24 + -24)\nETB = range(ZxJ)\nwhile FWM < len(ETB):\n    WDt = ETB[FWM]\n    WZz = input()\n    lto, RRa = (80 + -80), (49 + -49)\n    ySS = (16 + -16)\n    YCW = xaE\n    while ySS < len(YCW):\n        nCI = YCW[ySS]\n        if nCI == WZz[(32 + -32)]:\n            lto += (52 + -51)\n        elif nCI == WZz[(22 + -21)]:\n            RRa += (92 + -91)\n        else:\n            yqo = yqo + min(lto, RRa)\n            lto, RRa = (38 + -38), (45 + -45)\n        ySS = ySS + (80 + -79)\n    yqo = yqo + min(lto, RRa)\n    FWM = FWM + (68 + -67)\nprint(yqo)\n"}
{"old_id": "atcoder_AGC028_A", "code": "vvX, jKC = map(int, input().split())\ntif = input()\nEKs = input()\nfEj = list(tif)\nKOg = list(EKs)\nQpx = [Ufq for Ufq in range(vvX)]\nnyq = []\nNbq = (30 + -30)\ntqS = Qpx\nwhile Nbq < len(tqS):\n    Ufq = tqS[Nbq]\n    nyq.append(Ufq * jKC / vvX)\n    Nbq = Nbq + (41 + -40)\nAYT = [yVt for yVt in range(jKC)]\naSJ = list(set(nyq) & set(AYT))\nXCD = []\nBJz = (41 + -41)\ntSg = aSJ\nwhile BJz < len(tSg):\n    yVt = tSg[BJz]\n    XCD.append(int(yVt * vvX / jKC))\n    BJz = BJz + (14 + -13)\nnhm = (54 + -54)\nwXI = (61 + -61)\nXYX = len(XCD)\nwhile nhm <= XYX - (18 + -17):\n    if fEj[int(XCD[nhm])] == KOg[int(aSJ[nhm])]:\n        pass\n    else:\n        wXI = (82 + -81)\n        break\n    nhm += (6 + -5)\n\n\ndef Hju(jVk, ZcB):\n    while ZcB > (35 + -35):\n        jVk, ZcB = ZcB, jVk % ZcB\n    return jVk\n\n\nif wXI == (74 + -73):\n    print(- (46 + -45))\nelse:\n    print(int(vvX * jKC / Hju(vvX, jKC)))\n"}
{"old_id": "codeforces_474_B", "code": "YUw = []\ninput()\nfBt = (9 + -8)\nDMw = (25 + -25)\nlxG = input().split()\nwhile DMw < len(lxG):\n    QJI = lxG[DMw]\n    YUw += [fBt] * int(QJI)\n    fBt += (16 + -15)\n    DMw = DMw + (24 + -23)\ninput()\ntmy = (73 + -73)\naWV = input().split()\nwhile tmy < len(aWV):\n    yiH = aWV[tmy]\n    print(YUw[int(yiH) - (1 + 0)])\n    tmy = tmy + (42 + -41)\n"}
{"old_id": "codeforces_302_A", "code": "uFW, Mlo = map(int, input().split())\nbsf = input().count(\"-\")\nbsf = min([uFW - bsf, bsf])\neHs = []\naMN = (17 + -17)\nsSK = range(Mlo)\nwhile aMN < len(sSK):\n    ZAG = sSK[aMN]\n    ljv, Wyl = map(int, input().split())\n    Wyl -= ljv\n    eHs.append((Wyl % (65 + -63) and Wyl <= bsf << (96 + -95)) and \"1\\n\" or \"0\\n\")\n    aMN = aMN + (19 + -18)\nprint(\"\".join(eHs))\n"}
{"old_id": "atcoder_AGC046_B", "code": "Ewa, xEs, WSX, QCm = map(int, input().split())\nwpp = (96 + 998244257)\nrcN = [[(7 + -7)] * (QCm + (26 + -25)) for GZy in range(WSX + (22 + -21))]\nrcN[Ewa][xEs] = (29 + -28)\nsYh = (20 + -20)\nojU = range(Ewa, WSX + (85 + -84))\nwhile sYh < len(ojU):\n    AtG = ojU[sYh]\n    bkD = (29 + -29)\n    lLx = range(xEs, QCm + (69 + -68))\n    while bkD < len(lLx):\n        HxS = lLx[bkD]\n        rcN[AtG][HxS] += (rcN[AtG][HxS - (83 + -82)] * AtG + rcN[AtG - (32 + -31)][HxS] * HxS -\n                    rcN[AtG - (32 + -31)][HxS - (92 + -91)] * (AtG - (95 + -94)) * (HxS - (74 + -73))) % wpp\n        bkD = bkD + (37 + -36)\n    sYh = sYh + (67 + -66)\nprint(rcN[WSX][QCm])\n"}
{"old_id": "codeforces_267_A", "code": "def WTE(KEl, ZMm):\n    if KEl > ZMm:\n        WDx = (49 + -49)\n        while KEl > (76 + -76) and ZMm > (86 + -86):\n            WDx += int(KEl / ZMm)\n            KEl = KEl % ZMm\n            if KEl > (87 + -87):\n                WDx += int(ZMm / KEl)\n                ZMm = ZMm % KEl\n        return WDx\n    if KEl < ZMm:\n        WDx = (93 + -93)\n        while KEl > (75 + -75) and ZMm > (98 + -98):\n            WDx += int(ZMm / KEl)\n            ZMm = ZMm % KEl\n            if ZMm > (17 + -17):\n                WDx += int(KEl / ZMm)\n                KEl = KEl % ZMm\n        return WDx\n    if KEl == ZMm:\n        return (85 + -84)\n\n\nNxk = int(input())\nZff = []\nDtN = (23 + -23)\njce = range((50 + -50), Nxk)\nwhile DtN < len(jce):\n    DMd = jce[DtN]\n    KEl, ZMm = map(int, input().split())\n    Zff.append(WTE(KEl, ZMm))\n    DtN = DtN + (50 + -49)\nMku = (65 + -65)\nOht = Zff\nwhile Mku < len(Oht):\n    DMd = Oht[Mku]\n    print(DMd)\n    Mku = Mku + (20 + -19)\n"}
{"old_id": "atcoder_ABC134_E", "code": "def cbZ(ESa):\n    pDe, cJi = - (85 + -84), len(sdP)\n    while cJi - pDe > (15 + -14):\n        QzB = (pDe + cJi) // (73 + -71)\n        if sdP[QzB][- (68 + -67)] < ESa:\n            cJi = QzB\n        else:\n            pDe = QzB\n    return cJi\n\n\nVsg = int(input())\nsdP = []\nrxP = (17 + -17)\nPrx = range(Vsg)\nwhile rxP < len(Prx):\n    qnV = Prx[rxP]\n    MDa = int(input())\n    dSu = cbZ(MDa)\n    if dSu == len(sdP):\n        sdP.append([MDa])\n    else:\n        sdP[dSu].append(MDa)\n    rxP = rxP + (70 + -69)\nprint(len(sdP))\n"}
{"old_id": "codeforces_621_A", "code": "iEl = int(input())\nXBa = list(map(int, input().split()))\nXBa.sort()\nXBa.reverse()\nVAg = (25 + -25)\njPo = (85 + -85)\nYAT = XBa\nwhile jPo < len(YAT):\n    rsX = YAT[jPo]\n    if (rsX & (22 + -21)):\n        VAg += (62 + -61)\n    jPo = jPo + (30 + -29)\nsum = (61 + -61)\nNhb = (9 + -9)\nCCl = (42 + -42)\nSqO = range(iEl)\nwhile CCl < len(SqO):\n    rsX = SqO[CCl]\n    if (XBa[rsX] % (8 + -6) == (64 + -64)):\n        sum += XBa[rsX]\n    else:\n        if (Nhb or VAg > (17 + -16)):\n            sum += XBa[rsX]\n            VAg -= (58 + -57)\n            Nhb = not Nhb\n    CCl = CCl + (19 + -18)\nprint(sum)\n"}
{"old_id": "atcoder_ABC123_D", "code": "mVy, fCe, YeX, tnB = [int(AkO) for AkO in input().split()]\nyKC = [int(AkO) for AkO in input().split()]\nBaX = [int(AkO) for AkO in input().split()]\ncdz = [int(AkO) for AkO in input().split()]\nPEk = []\nloY = (56 + -56)\nvwx = range(mVy)\nwhile loY < len(vwx):\n    xhG = vwx[loY]\n    EFK = (38 + -38)\n    sWo = range(fCe)\n    while EFK < len(sWo):\n        iww = sWo[EFK]\n        PEk.append(yKC[xhG] + BaX[iww])\n        EFK = EFK + (1 + 0)\n    loY = loY + (39 + -38)\nPEk.sort(reverse=True)\nHYe = []\nCHy = (16 + -16)\njpu = range(min(tnB, mVy * fCe))\nwhile CHy < len(jpu):\n    xhG = jpu[CHy]\n    ZmT = (26 + -26)\n    OVw = range(YeX)\n    while ZmT < len(OVw):\n        iww = OVw[ZmT]\n        HYe.append(PEk[xhG] + cdz[iww])\n        ZmT = ZmT + (61 + -60)\n    CHy = CHy + (16 + -15)\nHYe.sort(reverse=True)\neRG = (46 + -46)\nAqg = range(tnB)\nwhile eRG < len(Aqg):\n    xhG = Aqg[eRG]\n    print(HYe[xhG])\n    eRG = eRG + (84 + -83)\n"}
{"old_id": "atcoder_ABC043_B", "code": "QRd = str(input())\nlDY = ''\nwRj = (50 + -50)\nSWX = QRd\nwhile wRj < len(SWX):\n    SzG = SWX[wRj]\n    if SzG == '0' or SzG == '1':\n        lDY += SzG\n    elif SzG == 'B' and len(lDY) != (49 + -49):\n        lDY = lDY[: len(lDY) - (74 + -73)]\n    wRj = wRj + (6 + -5)\nprint(lDY)\n"}
{"old_id": "codeforces_609_B", "code": "def Zzs(): return map(int, input().split())\n\n\nLhJ, VNg = Zzs()\nHzK = list(Zzs())\nbOj = {}\nArK = (62 + -62)\ndob = range(LhJ)\nwhile ArK < len(dob):\n    OAZ = dob[ArK]\n    if HzK[OAZ] not in bOj:\n        bOj[HzK[OAZ]] = (78 + -77)\n    else:\n        bOj[HzK[OAZ]] += (93 + -92)\n    ArK = ArK + (51 + -50)\nwBw = (18 + -18)\nLxv = (13 + -13)\ndPV = range(LhJ)\nwhile Lxv < len(dPV):\n    OAZ = dPV[Lxv]\n    if bOj[HzK[OAZ]] > (47 + -46):\n        wBw += LhJ - OAZ - bOj[HzK[OAZ]]\n        bOj[HzK[OAZ]] -= (96 + -95)\n    else:\n        wBw += LhJ - OAZ - (58 + -57)\n    Lxv = Lxv + (79 + -78)\nprint(wBw)\n"}
{"old_id": "atcoder_ABC111_C", "code": "Xrw = int(input())\nnJO = list(int(TVz) for TVz in input().split())\nCaz = []\nRja = []\nVJo = (42 + -42)\nLUA = range((56 + -56), Xrw)\nwhile VJo < len(LUA):\n    TVz = LUA[VJo]\n    if TVz % (85 + -83) == (97 + -97):\n        Caz.append(nJO[TVz])\n    else:\n        Rja.append(nJO[TVz])\n    VJo = VJo + (75 + -74)\nObi = [(50 + -50)] * ((37 + 99965) + (89 + -88))\nwlh = [(25 + -25)] * ((54 + 99948) + (6 + -5))\nkAW = (5 + -5)\nXLO = (97 + -97)\nSge = (42 + -42)\nhkH = (33 + -33)\nIMa = (49 + -49)\nyZA = Caz\nwhile IMa < len(yZA):\n    TVz = yZA[IMa]\n    Obi[TVz] += (64 + -63)\n    IMa = IMa + (38 + -37)\nCbV = (12 + -12)\nbFW = Caz\nwhile CbV < len(bFW):\n    TVz = bFW[CbV]\n    if Sge < Obi[TVz]:\n        kAW = TVz\n        Sge = Obi[TVz]\n    CbV = CbV + (42 + -41)\nmmO = (100 + -100)\nHVb = Caz\nwhile mmO < len(HVb):\n    TVz = HVb[mmO]\n    if hkH < Obi[TVz] and kAW != TVz:\n        hkH = Obi[TVz]\n        XLO = TVz\n    mmO = mmO + (73 + -72)\noZO = (19 + -19)\nmZk = (7 + -7)\nuFb = (11 + -11)\nuLF = (8 + -8)\nMNy = (24 + -24)\nFcL = Rja\nwhile MNy < len(FcL):\n    TVz = FcL[MNy]\n    wlh[TVz] += (63 + -62)\n    MNy = MNy + (44 + -43)\nsAp = (55 + -55)\nqkw = Rja\nwhile sAp < len(qkw):\n    TVz = qkw[sAp]\n    if uFb < wlh[TVz]:\n        oZO = TVz\n        uFb = wlh[TVz]\n    sAp = sAp + (95 + -94)\nCzf = (6 + -6)\nGme = Rja\nwhile Czf < len(Gme):\n    TVz = Gme[Czf]\n    if uLF < wlh[TVz] and oZO != TVz:\n        uLF = wlh[TVz]\n        mZk = TVz\n    Czf = Czf + (57 + -56)\nif oZO != kAW:\n    Xck = (16 + -16)\n    gWy = (94 + -94)\n    GPg = Caz\n    while gWy < len(GPg):\n        TVz = GPg[gWy]\n        if TVz != kAW:\n            Xck += (63 + -62)\n        gWy = gWy + (33 + -32)\n    RkO = (26 + -26)\n    onJ = Rja\n    while RkO < len(onJ):\n        TVz = onJ[RkO]\n        if TVz != oZO:\n            Xck += (49 + -48)\n        RkO = RkO + (22 + -21)\n    print(Xck)\nelse:\n    WGq = (56 + -56)\n    QFu = (29 + -29)\n    QZN = (95 + -95)\n    Gwu = (47 + -47)\n    AmY = (50 + -50)\n    IRE = Caz\n    while AmY < len(IRE):\n        TVz = IRE[AmY]\n        if TVz != kAW:\n            WGq += (98 + -97)\n        if TVz != XLO:\n            QZN += (90 + -89)\n        AmY = AmY + (13 + -12)\n    TVx = (90 + -90)\n    wut = Rja\n    while TVx < len(wut):\n        TVz = wut[TVx]\n        if TVz != oZO:\n            QFu += (61 + -60)\n        if TVz != mZk:\n            Gwu += (79 + -78)\n        TVx = TVx + (52 + -51)\n    print(min(WGq + Gwu, QZN + QFu))\n"}
{"old_id": "atcoder_ABC107_C", "code": "import sys\nWkP, hpz = map(int, input().split())\nJHW = list(map(int, input().split()))\nKPW = []\nrtu = []\nDns = (42 + -42)\nYBA = range(WkP)\nwhile Dns < len(YBA):\n    qcg = YBA[Dns]\n    if JHW[qcg] == (84 + -84):\n        hpz -= (93 + -92)\n    if JHW[qcg] > (96 + -96):\n        KPW += [JHW[qcg]]\n    elif JHW[qcg] < (82 + -82):\n        rtu += [JHW[qcg]]\n    Dns = Dns + (88 + -87)\nWBf = (30 + -30)\nUYR = (8 + -8)\nRwD, xwM = (10 + -10), len(rtu) - (34 + -33)\ntqO = len(KPW)\nPTc = len(rtu)\n\n\ndef dcy(xfk):\n    RQx = (95 + -85) ** (8 + 1)\n    jNw = (74 + -74)\n    ZvH = range((28 + -28), xfk + (56 + -55))\n    while jNw < len(ZvH):\n        acl = ZvH[jNw]\n        if acl > tqO or xfk - acl > PTc:\n            pass\n        else:\n            if acl == (28 + -28):\n                WBf = (71 + -71)\n            else:\n                WBf = KPW[acl - (80 + -79)]\n            if xfk - acl == (94 + -94):\n                UYR = (26 + -26)\n            else:\n                UYR = rtu[PTc - (xfk - acl)]\n            RQx = min(RQx, (5 + -3) * WBf + abs(UYR), WBf + (9 + -7) * abs(UYR))\n        jNw = jNw + (40 + -39)\n    return RQx\n\n\nprint(dcy(hpz))\n"}
{"old_id": "atcoder_ABC129_E", "code": "hob = (83 + -73) ** (97 + -88) + (9 + -2)\nosE = input()\nhWo = len(osE)\ncrV = [[(80 + -80)] * (1 + 1) for rfV in range(hWo + (68 + -67))]\ncrV[(86 + -86)][(4 + -4)] = (97 + -96)\nDhU = (87 + -87)\nxdH = list(enumerate(osE))\nwhile DhU < len(xdH):\n    HfP, egi = xdH[DhU]\n    if egi == '0':\n        crV[HfP + (19 + -18)][(58 + -58)] += crV[HfP][(21 + -21)]\n        crV[HfP + (7 + -6)][(82 + -81)] += crV[HfP][(6 + -5)] * (84 + -81)\n    else:\n        crV[HfP + (99 + -98)][(31 + -31)] += crV[HfP][(29 + -29)] * (26 + -24)\n        crV[HfP + (71 + -70)][(4 + -3)] += crV[HfP][(58 + -58)]\n        crV[HfP + (32 + -31)][(55 + -54)] += crV[HfP][(30 + -29)] * (83 + -80)\n    crV[HfP + (19 + -18)][(47 + -47)] %= hob\n    crV[HfP + (8 + -7)][(68 + -67)] %= hob\n    DhU = DhU + (71 + -70)\nprint((crV[hWo][(46 + -46)] + crV[hWo][(56 + -55)]) % hob)\n"}
{"old_id": "codeforces_450_A", "code": "FBy, UuX = map(int, input().split())\nsdT = list(map(int, input().split()))\nPyz = []\ndpH = (5 + -5)\nsIP = sdT\nwhile dpH < len(sIP):\n    rKu = sIP[dpH]\n    if rKu % UuX == (46 + -46):\n        Pyz.append(rKu // UuX)\n    else:\n        Pyz.append(rKu // UuX + (96 + -95))\n    dpH = dpH + (2 + -1)\nxve = max(Pyz)\nbRt = (29 + -29)\nTWp = range(FBy)\nwhile bRt < len(TWp):\n    rKu = TWp[bRt]\n    if Pyz[rKu] == xve:\n        zCk = rKu\n    bRt = bRt + (62 + -61)\nprint(zCk + (74 + -73))\n"}
{"old_id": "codeforces_56_B", "code": "oJl = int(input())\nWjw = list(map(int, input().split()))\nBuF, omU = oJl + (84 + -83), - (38 + -37)\nWkQ = (14 + -14)\nVWy = range(oJl)\nwhile WkQ < len(VWy):\n    HlO = VWy[WkQ]\n    if (HlO + (1 + 0) != Wjw[HlO]):\n        BuF = min(BuF, HlO)\n        omU = max(omU, HlO)\n    WkQ = WkQ + (75 + -74)\nif (omU == - (68 + -67)):\n    print('0 0')\nelse:\n    Wjw = Wjw[: BuF] + Wjw[BuF: (omU + (70 + -69))][:: - (52 + -51)] + Wjw[(omU + (72 + -71)):]\n    if (sorted(Wjw) == Wjw):\n        print(BuF + (51 + -50), omU + (77 + -76))\n    else:\n        print('0 0')\n"}
{"old_id": "codeforces_59_A", "code": "WfR = input()\nPvs = (73 + -73)\ncTr = (76 + -76)\nPwH = (81 + -81)\nNpY = WfR\nwhile PwH < len(NpY):\n    pYH = NpY[PwH]\n    if pYH.islower():\n        cTr = cTr + (15 + -14)\n    else:\n        Pvs = Pvs + (17 + -16)\n    PwH = PwH + (93 + -92)\nif Pvs > cTr:\n    MlS = WfR.upper()\nelse:\n    MlS = WfR.lower()\nprint(MlS)\n"}
{"old_id": "atcoder_ABC166_C", "code": "(mOq, xkg) = [int(rQh) for rQh in input().split()]\nQgN = [rQh for rQh in range((16 + -15), mOq + (7 + -6))]\nPsr = [int(rQh) for rQh in input().split()]\nSfh = dict(zip(QgN, Psr))\nxmW = {NQz: [] for NQz in range((80 + -79), mOq + (98 + -97))}\nxVe = (90 + -90)\nZhl = range(xkg)\nwhile xVe < len(Zhl):\n    NQz = Zhl[xVe]\n    (CQe, Slz) = [int(rQh) for rQh in input().split()]\n    xmW[CQe].append(Slz)\n    xmW[Slz].append(CQe)\n    xVe = xVe + (31 + -30)\nNgk = (7 + -7)\nqtJ = (39 + -39)\nCDL = list(xmW.items())\nwhile qtJ < len(CDL):\n    NQz, HIF = CDL[qtJ]\n    ofh = (19 + -19)\n    wxo = (70 + -70)\n    htZ = HIF\n    while wxo < len(htZ):\n        Duy = htZ[wxo]\n        if Sfh[NQz] <= Sfh[Duy]:\n            ofh = (1 + 0)\n            break\n        wxo = wxo + (89 + -88)\n    if ofh == (85 + -85):\n        Ngk += (23 + -22)\n    qtJ = qtJ + (59 + -58)\nprint(Ngk)\n"}
{"old_id": "codeforces_110_B", "code": "zGa = \"abcd\"\nTCk = int(input())\nMIu = \"\"\nwMm = (86 + -86)\nDpP = range(TCk)\nwhile wMm < len(DpP):\n    IQZ = DpP[wMm]\n    MIu += zGa[IQZ % (51 + -47)]\n    wMm = wMm + (19 + -18)\nprint(MIu)\n"}
{"old_id": "atcoder_ABC127_B", "code": "Gju, weu, zLc = map(int, input().split())\nMTM = (23 + -23)\nDMK = range((23 + -21), (9 + 3))\nwhile MTM < len(DMK):\n    WBR = DMK[MTM]\n    print(int((Gju ** (WBR - (41 + -40))) * (zLc + weu / ((28 + -27) - Gju)) - weu / ((64 + -63) - Gju)))\n    MTM = MTM + (89 + -88)\n"}
{"old_id": "codeforces_106_B", "code": "KtU = int(input())\nGRA = []\nsNj = (1 + -1)\nJsc = range(KtU)\nwhile sNj < len(Jsc):\n    HnW = Jsc[sNj]\n    pzg, ulI, hEH, Cvx = map(int, input().split())\n    GRA.append((pzg, ulI, hEH, Cvx))\n    sNj = sNj + (13 + -12)\nisD = []\nRzK = (44 + -44)\nvOG = range(KtU)\nwhile RzK < len(vOG):\n    HnW = vOG[RzK]\n    qwC = (95 + -95)\n    dMl = range(KtU)\n    while qwC < len(dMl):\n        fGP = dMl[qwC]\n        if (GRA[HnW][(4 + -4)] < GRA[fGP][(66 + -66)] and GRA[HnW][(41 + -40)] < GRA[fGP][(80 + -79)] and GRA[HnW][(86 + -84)] < GRA[fGP][(32 + -30)]):\n            isD.append(GRA[HnW])\n        qwC = qwC + (17 + -16)\n    RzK = RzK + (26 + -25)\nisD = set(isD)\nIhv = (79 + 99921)\nqmb = (68 + -68)\nRJF = (45 + -45)\nyFt = range(KtU)\nwhile RJF < len(yFt):\n    HnW = yFt[RJF]\n    obA = GRA[HnW]\n    zbR = obA[(27 + -24)]\n    if (obA not in isD and zbR < Ihv):\n        Ihv = obA[(94 + -91)]\n        qmb = HnW + (43 + -42)\n    RJF = RJF + (21 + -20)\nprint(qmb)\n"}
{"old_id": "atcoder_ABC164_D", "code": "sdU, xah = (input(), (98 + 1921))\nFVv, qMX, RbZ = ([(54 + -53)] + [(57 + -57)] * xah, (89 + -89), (22 + -22))\nLVd = (51 + -51)\nmTo = list(enumerate(sdU[:: - (47 + -46)]))\nwhile LVd < len(mTo):\n    Kfk, JUD = mTo[LVd]\n    qMX += int(JUD) * pow((48 + -38), Kfk, xah)\n    RbZ += FVv[qMX % xah]\n    FVv[qMX % xah] += (100 + -99)\n    LVd = LVd + (39 + -38)\nprint(RbZ)\n"}
{"old_id": "codeforces_203_B", "code": "def wrO():\n    zmb, nhA = map(int, input().split())\n    count = [None] * zmb\n    Iha = (1 + -1)\n    gUG = range(zmb)\n    while Iha < len(gUG):\n        BcJ = gUG[Iha]\n        count[BcJ] = [(84 + -84)] * zmb\n        Iha = Iha + (2 + -1)\n    Iys = - (68 + -67)\n    Qjh = (77 + -77)\n    dEi = range(nhA)\n    while Qjh < len(dEi):\n        SUB = dEi[Qjh]\n        glf, fLx = map(int, input().split())\n        glf -= (49 + -48)\n        fLx -= (97 + -96)\n        CET = False\n        rBv = (53 + -53)\n        UEt = range(glf - (37 + -35), glf + (90 + -89))\n        while rBv < len(UEt):\n            BcJ = UEt[rBv]\n            mWi = (46 + -46)\n            QKr = range(fLx - (19 + -17), fLx + (17 + -16))\n            while mWi < len(QKr):\n                jJE = QKr[mWi]\n                if BcJ >= (88 + -88) and BcJ < zmb and jJE >= (74 + -74) and jJE < zmb:\n                    count[BcJ][jJE] += (15 + -14)\n                    if count[BcJ][jJE] == (11 + -2):\n                        CET = True\n                mWi = mWi + (74 + -73)\n            rBv = rBv + (74 + -73)\n        if CET:\n            Iys = SUB + (80 + -79)\n            break\n        Qjh = Qjh + (12 + -11)\n    print(Iys)\n\n\nwrO()\n"}
{"old_id": "codeforces_350_B", "code": "Qie = int(input())\niOe = [(45 + -45)] + list(map(int, input().split()))\nFdU = [(97 + -97)] + list(map(int, input().split()))\nrMG, Kjg = [], [(98 + -98) for WHu in range(Qie + (59 + -58))]\nZqD = (91 + -91)\nBaj = FdU\nwhile ZqD < len(Baj):\n    WHu = Baj[ZqD]\n    Kjg[WHu] += (74 + -73)\n    ZqD = ZqD + (50 + -49)\nztB = (10 + -10)\nihn = range((46 + -45), Qie + (75 + -74))\nwhile ztB < len(ihn):\n    WHu = ihn[ztB]\n    if iOe[WHu] == (82 + -81):\n        GJr = [WHu]\n        ARk = FdU[WHu]\n        while Kjg[ARk] == (14 + -13):\n            GJr.append(ARk)\n            ARk = FdU[ARk]\n        if len(GJr) > len(rMG):\n            rMG = GJr[:]\n    ztB = ztB + (45 + -44)\nrMG.reverse()\nprint(len(rMG))\nprint(' '.join(map(str, rMG)))\n"}
{"old_id": "codeforces_583_B", "code": "def qQk():\n    HUb = int(input())\n    ObC = [int(iMt) for iMt in input().split(\" \")]\n    EVd = (58 + -58)\n    eAQ = (37 + -37)\n    eTt = - (15 + -14)\n    while eAQ < len(ObC):\n        eTt += (55 + -54)\n        kCI = (100 + -100)\n        qpk = range(len(ObC))\n        while kCI < len(qpk):\n            iMt = qpk[kCI]\n            if ObC[iMt] != - (37 + -36) and ObC[iMt] <= eAQ:\n                eAQ += (87 + -86)\n                ObC[iMt] = - (62 + -61)\n            kCI = kCI + (56 + -55)\n        ObC.reverse()\n    print(eTt)\n\n\nqQk()\n"}
{"old_id": "codeforces_612_B", "code": "jqh = int(input())\nfCT = list(map(int, input().split()))\nHdO = [(59 + -59)] * jqh\nrAT = (19 + -19)\nMkU = range(jqh)\nwhile rAT < len(MkU):\n    oHl = MkU[rAT]\n    HdO[fCT[oHl] - (25 + -24)] = oHl\n    rAT = rAT + (48 + -47)\nUMh = (77 + -77)\neDv = (96 + -96)\npBP = range((25 + -24), jqh)\nwhile eDv < len(pBP):\n    oHl = pBP[eDv]\n    UMh += abs(HdO[oHl] - HdO[oHl - (52 + -51)])\n    eDv = eDv + (18 + -17)\nprint(UMh)\n"}
{"old_id": "atcoder_ABC124_A", "code": "OIy, anr = map(int, input().split())\nxrR = (43 + -43)\nQGJ = (93 + -93)\nfkB = range((32 + -30))\nwhile QGJ < len(fkB):\n    Lym = fkB[QGJ]\n    xrR += max(OIy, anr)\n    if OIy >= anr:\n        OIy -= (5 + -4)\n    else:\n        anr -= (100 + -99)\n    QGJ = QGJ + (38 + -37)\nprint(xrR)\n"}
{"old_id": "codeforces_514_A", "code": "viX = input()\nwHY = \"\"\nif len(viX) != (11 + -10):\n    if viX[(4 + -4)] == \"9\":\n        wHY = \"9\"\n        viX = viX[(5 + -4):]\n    tLl = (1 + -1)\n    Wcq = viX\n    while tLl < len(Wcq):\n        Ebu = Wcq[tLl]\n        if int(Ebu) > (87 + -83):\n            ALx = (96 + -87) - int(Ebu)\n            wHY += str(ALx)\n        else:\n            wHY += Ebu\n        tLl = tLl + (58 + -57)\nelse:\n    wHY = viX\nprint(int(wHY))\n"}
{"old_id": "codeforces_607_A", "code": "oDE = int(input())\naDK = [(39 + -39) for TeZ in range((42 + 999968))]\nKTw = [(10 + -10) for TeZ in range((62 + 999948))]\nwKT = (57 + -57)\nWZT = range(oDE)\nwhile wKT < len(WZT):\n    uQh = WZT[wKT]\n    Ovy, nqE = map(int, input().split())\n    aDK[Ovy] = nqE\n    wKT = wKT + (62 + -61)\nif aDK[(7 + -7)] > (47 + -47):\n    KTw[(60 + -60)] = (63 + -62)\nlDx = (47 + -47)\nbsC = (3 + -3)\nXBM = range((45 + -44), (26 + 999984))\nwhile bsC < len(XBM):\n    uQh = XBM[bsC]\n    if (aDK[uQh] == (89 + -89)):\n        KTw[uQh] = KTw[uQh - (20 + -19)]\n    else:\n        if (aDK[uQh] >= uQh):\n            KTw[uQh] = (10 + -9)\n        else:\n            KTw[uQh] = KTw[uQh - aDK[uQh] - (10 + -9)] + (40 + -39)\n    if (KTw[uQh] > lDx):\n        lDx = KTw[uQh]\n    bsC = bsC + (53 + -52)\nprint(oDE - lDx)\n"}
