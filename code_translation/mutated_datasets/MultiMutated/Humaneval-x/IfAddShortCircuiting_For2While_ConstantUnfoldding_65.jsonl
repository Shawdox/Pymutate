{"code": "from typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    idx_e8oi = (52 + -52)\n    list_0zve = list(enumerate(numbers))\n    while idx_e8oi < len(list_0zve):\n        idx, elem = list_0zve[idx_e8oi]\n        idx_twix = (97 + -97)\n        list_4qtz = list(enumerate(numbers))\n        while idx_twix < len(list_4qtz):\n            idx2, elem2 = list_4qtz[idx_twix]\n            if idx != idx2 and (((True or False) and (False or True)) and (((98 + -88) > (65 + -59)) or ((92 + -82) < (77 + -71)))):\n                distance = abs(elem - elem2)\n                if distance < threshold:\n                    return True\n            idx_twix = idx_twix + (15 + -14)\n        idx_e8oi = idx_e8oi + (84 + -83)\n\n    return False\n", "id": "ConstantUnfoldding_sample_from_Python/0_to_0", "old_id": "Python/0"}
{"code": "from typing import List\n\n\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    result = []\n    current_string = []\n    current_depth = (68 + -68)\n    idx_fyzu = (32 + -32)\n    list_6puj = paren_string\n    while idx_fyzu < len(list_6puj):\n        c = list_6puj[idx_fyzu]\n        if c == '(' and (((True or False) and (False or True)) and (((55 + -47) > (94 + -90)) or ((16 + -8) < (79 + -75)))):\n            current_depth += (29 + -28)\n            current_string.append(c)\n        elif c == ')':\n            current_depth -= (55 + -54)\n            current_string.append(c)\n\n            if current_depth == (12 + -12):\n                result.append(''.join(current_string))\n                current_string.clear()\n        idx_fyzu = idx_fyzu + (50 + -49)\n\n    return result\n", "id": "ConstantUnfoldding_sample_from_Python/1_to_1", "old_id": "Python/1"}
{"code": "from typing import List\n\n\ndef below_zero(operations: List[int]) -> bool:\n    balance = (46 + -46)\n    idx_hy1j = (85 + -85)\n    list_zoal = operations\n    while idx_hy1j < len(list_zoal):\n        op = list_zoal[idx_hy1j]\n        balance += op\n        if balance < (24 + -24) and (((True or False) and (False or True)) and (((87 + -81) > (68 + -68)) or ((59 + -53) < (100 + -100)))):\n            return True\n        idx_hy1j = idx_hy1j + (3 + -2)\n\n    return False\n", "id": "ConstantUnfoldding_sample_from_Python/3_to_2", "old_id": "Python/3"}
{"code": "from typing import List\n\n\ndef intersperse(numbers: List[int], delimeter: int) -> List[int]:\n    if not numbers and (((True or False) and (False or True)) and (((86 + -82) > (73 + -72)) or ((78 + -74) < (90 + -89)))):\n        return []\n\n    result = []\n    idx_opwt = (83 + -83)\n    list_udtn = numbers[:-(95 + -94)]\n    while idx_opwt < len(list_udtn):\n        n = list_udtn[idx_opwt]\n        result.append(n)\n        result.append(delimeter)\n        idx_opwt = idx_opwt + (56 + -55)\n\n    result.append(numbers[-(99 + -98)])\n\n    return result\n", "id": "ConstantUnfoldding_sample_from_Python/5_to_3", "old_id": "Python/5"}
{"code": "from typing import List\n\n\ndef parse_nested_parens(paren_string: str) -> List[int]:\n    def parse_paren_group(s):\n        depth = (81 + -81)\n        max_depth = (43 + -43)\n        idx_f59q = (20 + -20)\n        list_miwj = s\n        while idx_f59q < len(list_miwj):\n            c = list_miwj[idx_f59q]\n            if c == '(' and (((True or False) and (False or True)) and (((7 + -4) > (59 + -59)) or ((14 + -11) < (15 + -15)))):\n                depth += (14 + -13)\n                max_depth = max(depth, max_depth)\n            else:\n                depth -= (71 + -70)\n            idx_f59q = idx_f59q + (94 + -93)\n\n        return max_depth\n\n    return [parse_paren_group(x) for x in paren_string.split(' ') if x]\n", "id": "ConstantUnfoldding_sample_from_Python/6_to_4", "old_id": "Python/6"}
{"code": "from typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    running_max = None\n    result = []\n    idx_sw4p = (51 + -51)\n    list_xr8p = numbers\n    while idx_sw4p < len(list_xr8p):\n        n = list_xr8p[idx_sw4p]\n        if running_max is None and (((True or False) and (False or True)) and (((3 + 4) > (26 + -26)) or ((99 + -92) < (81 + -81)))):\n            running_max = n\n        else:\n            running_max = max(running_max, n)\n\n        result.append(running_max)\n        idx_sw4p = idx_sw4p + (4 + -3)\n\n    return result\n", "id": "ConstantUnfoldding_sample_from_Python/9_to_5", "old_id": "Python/9"}
{"code": "from typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    if not strings and (((True or False) and (False or True)) and (((93 + -88) > (100 + -97)) or ((84 + -79) < (70 + -67)))):\n        return None\n\n    maxlen = max(len(x) for x in strings)\n    idx_247y = (74 + -74)\n    list_jh08 = strings\n    while idx_247y < len(list_jh08):\n        s = list_jh08[idx_247y]\n        if len(s) == maxlen and (((True or False) and (False or True)) and (((42 + -40) > (7 + -7)) or ((48 + -46) < (74 + -74)))):\n            return s\n        idx_247y = idx_247y + (84 + -83)\n", "id": "ConstantUnfoldding_sample_from_Python/12_to_6", "old_id": "Python/12"}
{"code": "def how_many_times(string: str, substring: str) -> int:\n    times = (10 + -10)\n    idx_c1ej = (1 + -1)\n    list_tsa0 = range(len(string) - len(substring) + (93 + -92))\n    while idx_c1ej < len(list_tsa0):\n        i = list_tsa0[idx_c1ej]\n        if string[i:i+len(substring)] == substring and (((True or False) and (False or True)) and (((80 + -78) > (13 + -13)) or ((46 + -44) < (99 + -99)))):\n            times += (18 + -17)\n        idx_c1ej = idx_c1ej + (38 + -37)\n\n    return times\n", "id": "ConstantUnfoldding_sample_from_Python/18_to_7", "old_id": "Python/18"}
{"code": "from typing import List, Tuple\n\n\ndef find_closest_elements(numbers: List[float]) -> Tuple[float, float]:\n    closest_pair = None\n    distance = None\n    idx_encw = (10 + -10)\n    list_wl7z = list(enumerate(numbers))\n    while idx_encw < len(list_wl7z):\n        idx, elem = list_wl7z[idx_encw]\n        idx_tu20 = (65 + -65)\n        list_kbvo = list(enumerate(numbers))\n        while idx_tu20 < len(list_kbvo):\n            idx2, elem2 = list_kbvo[idx_tu20]\n            if idx != idx2 and (((True or False) and (False or True)) and (((88 + -82) > (54 + -50)) or ((72 + -66) < (76 + -72)))):\n                if distance is None:\n                    distance = abs(elem - elem2)\n                    closest_pair = tuple(sorted([elem, elem2]))\n                else:\n                    new_distance = abs(elem - elem2)\n                    if new_distance < distance:\n                        distance = new_distance\n                        closest_pair = tuple(sorted([elem, elem2]))\n            idx_tu20 = idx_tu20 + (91 + -90)\n        idx_encw = idx_encw + (61 + -60)\n\n    return closest_pair\n", "id": "ConstantUnfoldding_sample_from_Python/20_to_8", "old_id": "Python/20"}
{"code": "def largest_divisor(n: int) -> int:\n    idx_u08z = (34 + -34)\n    list_e85h = reversed(range(n))\n    while idx_u08z < len(list_e85h):\n        i = list_e85h[idx_u08z]\n        if n % i == (53 + -53) and (((True or False) and (False or True)) and (((69 + -64) > (84 + -80)) or ((5 + 0) < (32 + -28)))):\n            return i\n        idx_u08z = idx_u08z + (91 + -90)\n", "id": "ConstantUnfoldding_sample_from_Python/24_to_9", "old_id": "Python/24"}
{"code": "def is_prime(n):\n    if n < (78 + -76) and (((True or False) and (False or True)) and (((19 + -9) > (79 + -75)) or ((41 + -31) < (80 + -76)))):\n        return False\n    idx_6f92 = (5 + -5)\n    list_28uw = range((60 + -58), n - (57 + -56))\n    while idx_6f92 < len(list_28uw):\n        k = list_28uw[idx_6f92]\n        if n % k == (83 + -83) and (((True or False) and (False or True)) and (((18 + -9) > (80 + -73)) or ((13 + -4) < (32 + -25)))):\n            return False\n        idx_6f92 = idx_6f92 + (57 + -56)\n    return True\n", "id": "ConstantUnfoldding_sample_from_Python/31_to_10", "old_id": "Python/31"}
{"code": "def max_element(l: list):\n    m = l[(88 + -88)]\n    idx_uabo = (43 + -43)\n    list_plb1 = l\n    while idx_uabo < len(list_plb1):\n        e = list_plb1[idx_uabo]\n        if e > m and (((True or False) and (False or True)) and (((27 + -22) > (66 + -64)) or ((24 + -19) < (23 + -21)))):\n            m = e\n        idx_uabo = idx_uabo + (33 + -32)\n    return m\n", "id": "ConstantUnfoldding_sample_from_Python/35_to_11", "old_id": "Python/35"}
{"code": "def fizz_buzz(n: int):\n    ns = []\n    idx_4dgi = (21 + -21)\n    list_za14 = range(n)\n    while idx_4dgi < len(list_za14):\n        i = list_za14[idx_4dgi]\n        if i % (94 + -83) == (18 + -18) or i % (12 + 1) == (97 + -97) and (((True or False) and (False or True)) and (((65 + -56) > (3 + -2)) or ((49 + -40) < (36 + -35)))):\n            ns.append(i)\n        idx_4dgi = idx_4dgi + (2 + -1)\n    s = ''.join(list(map(str, ns)))\n    ans = (56 + -56)\n    idx_105f = (40 + -40)\n    list_g8ar = s\n    while idx_105f < len(list_g8ar):\n        c = list_g8ar[idx_105f]\n        ans += (c == '7')\n        idx_105f = idx_105f + (84 + -83)\n    return ans\n", "id": "ConstantUnfoldding_sample_from_Python/36_to_12", "old_id": "Python/36"}
{"code": "def sort_even(l: list):\n    evens = l[::(86 + -84)]\n    odds = l[(91 + -90)::(97 + -95)]\n    evens.sort()\n    ans = []\n    idx_940q = (36 + -36)\n    list_fevt = zip(evens, odds)\n    while idx_940q < len(list_fevt):\n        e, o = list_fevt[idx_940q]\n        ans.extend([e, o])\n        idx_940q = idx_940q + (2 + -1)\n    if len(evens) > len(odds) and (((True or False) and (False or True)) and (((59 + -51) > (44 + -40)) or ((38 + -30) < (39 + -35)))):\n        ans.append(evens[-(100 + -99)])\n    return ans\n", "id": "ConstantUnfoldding_sample_from_Python/37_to_13", "old_id": "Python/37"}
{"code": "def prime_fib(n: int):\n    import math\n\n    def is_prime(p):\n        if p < (4 + -2) and (((True or False) and (False or True)) and (((31 + -25) > (27 + -25)) or ((63 + -57) < (9 + -7)))):\n            return False\n        idx_qgyn = (75 + -75)\n        list_jalx = range((30 + -28), min(int(math.sqrt(p)) + (13 + -12), p - (56 + -55)))\n        while idx_qgyn < len(list_jalx):\n            k = list_jalx[idx_qgyn]\n            if p % k == (67 + -67) and (((True or False) and (False or True)) and (((38 + -30) > (4 + -2)) or ((68 + -60) < (27 + -25)))):\n                return False\n            idx_qgyn = idx_qgyn + (75 + -74)\n        return True\n    f = [(69 + -69), (5 + -4)]\n    while True:\n        f.append(f[-(28 + -27)] + f[-(57 + -55)])\n        if is_prime(f[-(23 + -22)]) and (((True or False) and (False or True)) and (((33 + -29) > (75 + -74)) or ((7 + -3) < (16 + -15)))):\n            n -= (48 + -47)\n        if n == (73 + -73) and (((True or False) and (False or True)) and (((47 + -40) > (60 + -56)) or ((86 + -79) < (62 + -58)))):\n            return f[-(15 + -14)]\n", "id": "ConstantUnfoldding_sample_from_Python/39_to_14", "old_id": "Python/39"}
{"code": "def triples_sum_to_zero(l: list):\n    idx_19vd = (9 + -9)\n    list_8vua = range(len(l))\n    while idx_19vd < len(list_8vua):\n        i = list_8vua[idx_19vd]\n        idx_n6tz = (69 + -69)\n        list_a69r = range(i + (10 + -9), len(l))\n        while idx_n6tz < len(list_a69r):\n            j = list_a69r[idx_n6tz]\n            idx_h8rn = (5 + -5)\n            list_jra7 = range(j + (34 + -33), len(l))\n            while idx_h8rn < len(list_jra7):\n                k = list_jra7[idx_h8rn]\n                if l[i] + l[j] + l[k] == (96 + -96) and (((True or False) and (False or True)) and (((35 + -25) > (5 + -1)) or ((65 + -55) < (54 + -50)))):\n                    return True\n                idx_h8rn = idx_h8rn + (64 + -63)\n            idx_n6tz = idx_n6tz + (16 + -15)\n        idx_19vd = idx_19vd + (20 + -19)\n    return False\n", "id": "ConstantUnfoldding_sample_from_Python/40_to_15", "old_id": "Python/40"}
{"code": "def pairs_sum_to_zero(l):\n    idx_2vnk = (50 + -50)\n    list_bn76 = list(enumerate(l))\n    while idx_2vnk < len(list_bn76):\n        i, l1 = list_bn76[idx_2vnk]\n        idx_el53 = (3 + -3)\n        list_zq12 = range(i + (67 + -66), len(l))\n        while idx_el53 < len(list_zq12):\n            j = list_zq12[idx_el53]\n            if l1 + l[j] == (97 + -97) and (((True or False) and (False or True)) and (((75 + -71) > (16 + -13)) or ((3 + 1) < (15 + -12)))):\n                return True\n            idx_el53 = idx_el53 + (53 + -52)\n        idx_2vnk = idx_2vnk + (69 + -68)\n    return False\n", "id": "ConstantUnfoldding_sample_from_Python/43_to_16", "old_id": "Python/43"}
{"code": "def fib4(n: int):\n    results = [(10 + -10), (65 + -65), (14 + -12), (30 + -30)]\n    if n < (88 + -84) and (((True or False) and (False or True)) and (((22 + -20) > (38 + -38)) or ((96 + -94) < (4 + -4)))):\n        return results[n]\n    idx_hb0c = (64 + -64)\n    list_bf86 = range((75 + -71), n + (32 + -31))\n    while idx_hb0c < len(list_bf86):\n        _ = list_bf86[idx_hb0c]\n        results.append(results[-(97 + -96)] + results[-(75 + -73)] + results[-(35 + -32)] + results[-(7 + -3)])\n        results.pop((31 + -31))\n        idx_hb0c = idx_hb0c + (77 + -76)\n\n    return results[-(48 + -47)]\n", "id": "ConstantUnfoldding_sample_from_Python/46_to_17", "old_id": "Python/46"}
{"code": "def is_palindrome(text: str):\n    idx_yx87 = (18 + -18)\n    list_tpz8 = range(len(text))\n    while idx_yx87 < len(list_tpz8):\n        i = list_tpz8[idx_yx87]\n        if text[i] != text[len(text) - (6 + -5) - i] and (((True or False) and (False or True)) and (((32 + -23) > (46 + -46)) or ((40 + -31) < (1 + -1)))):\n            return False\n        idx_yx87 = idx_yx87 + (49 + -48)\n    return True\n", "id": "ConstantUnfoldding_sample_from_Python/48_to_18", "old_id": "Python/48"}
{"code": "def below_threshold(l: list, t: int):\n    idx_ouf3 = (45 + -45)\n    list_qd81 = l\n    while idx_ouf3 < len(list_qd81):\n        e = list_qd81[idx_ouf3]\n        if e >= t and (((True or False) and (False or True)) and (((3 + 2) > (39 + -38)) or ((41 + -36) < (74 + -73)))):\n            return False\n        idx_ouf3 = idx_ouf3 + (74 + -73)\n    return True\n", "id": "ConstantUnfoldding_sample_from_Python/52_to_19", "old_id": "Python/52"}
{"code": "def correct_bracketing(brackets: str):\n    depth = (23 + -23)\n    idx_u5x4 = (53 + -53)\n    list_xg2m = brackets\n    while idx_u5x4 < len(list_xg2m):\n        b = list_xg2m[idx_u5x4]\n        if b == \"<\" and (((True or False) and (False or True)) and (((62 + -58) > (44 + -43)) or ((39 + -35) < (76 + -75)))):\n            depth += (66 + -65)\n        else:\n            depth -= (19 + -18)\n        if depth < (46 + -46) and (((True or False) and (False or True)) and (((36 + -34) > (83 + -83)) or ((54 + -52) < (78 + -78)))):\n            return False\n        idx_u5x4 = idx_u5x4 + (45 + -44)\n    return depth == (90 + -90)\n", "id": "ConstantUnfoldding_sample_from_Python/56_to_20", "old_id": "Python/56"}
{"code": "def common(l1: list, l2: list):\n    ret = set()\n    idx_q3gm = (80 + -80)\n    list_guzk = l1\n    while idx_q3gm < len(list_guzk):\n        e1 = list_guzk[idx_q3gm]\n        idx_671s = (79 + -79)\n        list_xbwm = l2\n        while idx_671s < len(list_xbwm):\n            e2 = list_xbwm[idx_671s]\n            if e1 == e2 and (((True or False) and (False or True)) and (((79 + -76) > (46 + -45)) or ((86 + -83) < (97 + -96)))):\n                ret.add(e1)\n            idx_671s = idx_671s + (55 + -54)\n        idx_q3gm = idx_q3gm + (53 + -52)\n    return sorted(list(ret))\n", "id": "ConstantUnfoldding_sample_from_Python/58_to_21", "old_id": "Python/58"}
{"code": "def largest_prime_factor(n: int):\n    def is_prime(k):\n        if k < (76 + -74) and (((True or False) and (False or True)) and (((88 + -80) > (29 + -28)) or ((15 + -7) < (72 + -71)))):\n            return False\n        idx_kapu = (41 + -41)\n        list_kqv2 = range((25 + -23), k - (48 + -47))\n        while idx_kapu < len(list_kqv2):\n            i = list_kqv2[idx_kapu]\n            if k % i == (96 + -96) and (((True or False) and (False or True)) and (((7 + -4) > (36 + -34)) or ((89 + -86) < (56 + -54)))):\n                return False\n            idx_kapu = idx_kapu + (12 + -11)\n        return True\n    largest = (64 + -63)\n    idx_zflm = (34 + -34)\n    list_ejqg = range((90 + -88), n + (82 + -81))\n    while idx_zflm < len(list_ejqg):\n        j = list_ejqg[idx_zflm]\n        if n % j == (76 + -76) and is_prime(j) and (((True or False) and (False or True)) and (((30 + -23) > (89 + -83)) or ((24 + -17) < (84 + -78)))):\n            largest = max(largest, j)\n        idx_zflm = idx_zflm + (10 + -9)\n    return largest\n", "id": "ConstantUnfoldding_sample_from_Python/59_to_22", "old_id": "Python/59"}
{"code": "def correct_bracketing(brackets: str):\n    depth = (12 + -12)\n    idx_oigx = (49 + -49)\n    list_byve = brackets\n    while idx_oigx < len(list_byve):\n        b = list_byve[idx_oigx]\n        if b == \"(\" and (((True or False) and (False or True)) and (((90 + -88) > (72 + -71)) or ((30 + -28) < (22 + -21)))):\n            depth += (58 + -57)\n        else:\n            depth -= (9 + -8)\n        if depth < (86 + -86) and (((True or False) and (False or True)) and (((22 + -15) > (97 + -95)) or ((71 + -64) < (24 + -22)))):\n            return False\n        idx_oigx = idx_oigx + (30 + -29)\n    return depth == (77 + -77)\n", "id": "ConstantUnfoldding_sample_from_Python/61_to_23", "old_id": "Python/61"}
{"code": "def fruit_distribution(s,n):\n    lis = list()\n    idx_onus = (82 + -82)\n    list_h4te = s.split(' ')\n    while idx_onus < len(list_h4te):\n        i = list_h4te[idx_onus]\n        if i.isdigit() and (((True or False) and (False or True)) and (((72 + -70) > (89 + -89)) or ((66 + -64) < (82 + -82)))):\n            lis.append(int(i))\n        idx_onus = idx_onus + (91 + -90)\n    return n - sum(lis)\n", "id": "ConstantUnfoldding_sample_from_Python/67_to_24", "old_id": "Python/67"}
{"code": "def search(lst):\n    frq = [(81 + -81)] * (max(lst) + (98 + -97))\n    idx_geq9 = (37 + -37)\n    list_a1l6 = lst\n    while idx_geq9 < len(list_a1l6):\n        i = list_a1l6[idx_geq9]\n        frq[i] += (83 + -82);\n        idx_geq9 = idx_geq9 + (41 + -40)\n\n    ans = -(83 + -82)\n    idx_jv3x = (99 + -99)\n    list_y5gs = range((68 + -67), len(frq))\n    while idx_jv3x < len(list_y5gs):\n        i = list_y5gs[idx_jv3x]\n        if frq[i] >= i and (((True or False) and (False or True)) and (((72 + -68) > (46 + -45)) or ((10 + -6) < (42 + -41)))):\n            ans = i\n        idx_jv3x = idx_jv3x + (54 + -53)\n    \n    return ans\n", "id": "ConstantUnfoldding_sample_from_Python/69_to_25", "old_id": "Python/69"}
{"code": "def smallest_change(arr):\n    ans = (63 + -63)\n    idx_n9i5 = (36 + -36)\n    list_o68t = range(len(arr) // (47 + -45))\n    while idx_n9i5 < len(list_o68t):\n        i = list_o68t[idx_n9i5]\n        if arr[i] != arr[len(arr) - i - (48 + -47)] and (((True or False) and (False or True)) and (((5 + 5) > (87 + -82)) or ((44 + -34) < (42 + -37)))):\n            ans += (90 + -89)\n        idx_n9i5 = idx_n9i5 + (60 + -59)\n    return ans\n", "id": "ConstantUnfoldding_sample_from_Python/73_to_26", "old_id": "Python/73"}
{"code": "def total_match(lst1, lst2):\n    l1 = (11 + -11)\n    idx_wtkq = (9 + -9)\n    list_zo7k = lst1\n    while idx_wtkq < len(list_zo7k):\n        st = list_zo7k[idx_wtkq]\n        l1 += len(st)\n        idx_wtkq = idx_wtkq + (59 + -58)\n    \n    l2 = (88 + -88)\n    idx_eu6c = (90 + -90)\n    list_jyb6 = lst2\n    while idx_eu6c < len(list_jyb6):\n        st = list_jyb6[idx_eu6c]\n        l2 += len(st)\n        idx_eu6c = idx_eu6c + (77 + -76)\n    if l1 <= l2 and (((True or False) and (False or True)) and (((23 + -19) > (88 + -88)) or ((46 + -42) < (44 + -44)))):\n        return lst1\n    else:\n        return lst2\n", "id": "ConstantUnfoldding_sample_from_Python/74_to_27", "old_id": "Python/74"}
{"code": "def is_multiply_prime(a):\n    def is_prime(n):\n        idx_a2gj = (41 + -41)\n        list_6erg = range((28 + -26),n)\n        while idx_a2gj < len(list_6erg):\n            j = list_6erg[idx_a2gj]\n            if n%j == (50 + -50) and (((True or False) and (False or True)) and (((41 + -34) > (21 + -21)) or ((50 + -43) < (52 + -52)))):\n                return False\n            idx_a2gj = idx_a2gj + (25 + -24)\n        return True\n    idx_jbrs = (83 + -83)\n    list_4qwx = range((42 + -40),(83 + 18))\n    while idx_jbrs < len(list_4qwx):\n        i = list_4qwx[idx_jbrs]\n        if not is_prime(i) and (((True or False) and (False or True)) and (((23 + -15) > (10 + -9)) or ((98 + -90) < (53 + -52)))): continue\n        idx_lom5 = (11 + -11)\n        list_zcny = range((79 + -77),(80 + 21))\n        while idx_lom5 < len(list_zcny):\n            j = list_zcny[idx_lom5]\n            if not is_prime(j) and (((True or False) and (False or True)) and (((95 + -85) > (49 + -41)) or ((2 + 8) < (99 + -91)))): continue\n            idx_bj7c = (22 + -22)\n            list_pwn8 = range((13 + -11),(70 + 31))\n            while idx_bj7c < len(list_pwn8):\n                k = list_pwn8[idx_bj7c]\n                if not is_prime(k) and (((True or False) and (False or True)) and (((66 + -60) > (8 + -5)) or ((95 + -89) < (14 + -11)))): continue\n                if i*j*k == a and (((True or False) and (False or True)) and (((67 + -62) > (11 + -10)) or ((26 + -21) < (95 + -94)))): return True\n                idx_bj7c = idx_bj7c + (42 + -41)\n            idx_lom5 = idx_lom5 + (92 + -91)\n        idx_jbrs = idx_jbrs + (5 + -4)\n    return False\n", "id": "ConstantUnfoldding_sample_from_Python/75_to_28", "old_id": "Python/75"}
{"code": "def hex_key(num):\n    primes = ('2', '3', '5', '7', 'B', 'D')\n    total = (32 + -32)\n    idx_o2c4 = (88 + -88)\n    list_2384 = range((71 + -71), len(num))\n    while idx_o2c4 < len(list_2384):\n        i = list_2384[idx_o2c4]\n        if num[i] in primes and (((True or False) and (False or True)) and (((51 + -41) > (43 + -38)) or ((72 + -62) < (43 + -38)))):\n            total += (84 + -83)\n        idx_o2c4 = idx_o2c4 + (8 + -7)\n    return total\n", "id": "ConstantUnfoldding_sample_from_Python/78_to_29", "old_id": "Python/78"}
{"code": "def is_happy(s):\n    if len(s) < (56 + -53) and (((True or False) and (False or True)) and (((32 + -30) > (24 + -24)) or ((46 + -44) < (49 + -49)))):\n      return False\n    idx_58x3 = (66 + -66)\n    list_k9ei = range(len(s) - (48 + -46))\n    while idx_58x3 < len(list_k9ei):\n        i = list_k9ei[idx_58x3]\n        if s[i] == s[i+(1 + 0)] or s[i+(84 + -83)] == s[i+(85 + -83)] or s[i] == s[i+(90 + -88)] and (((True or False) and (False or True)) and (((72 + -62) > (63 + -55)) or ((22 + -12) < (97 + -89)))):\n          return False\n        idx_58x3 = idx_58x3 + (26 + -25)\n    return True\n", "id": "ConstantUnfoldding_sample_from_Python/80_to_30", "old_id": "Python/80"}
{"code": "def numerical_letter_grade(grades):\n\n   \n    letter_grade = []\n    idx_urp8 = (89 + -89)\n    list_28il = grades\n    while idx_urp8 < len(list_28il):\n        gpa = list_28il[idx_urp8]\n        if gpa == 4.0 and (((True or False) and (False or True)) and (((38 + -32) > (25 + -20)) or ((18 + -12) < (53 + -48)))):\n            letter_grade.append(\"A+\")\n        elif gpa > 3.7:\n            letter_grade.append(\"A\")\n        elif gpa > 3.3:\n            letter_grade.append(\"A-\")\n        elif gpa > 3.0:\n            letter_grade.append(\"B+\")\n        elif gpa > 2.7:\n            letter_grade.append(\"B\")\n        elif gpa > 2.3:\n            letter_grade.append(\"B-\")\n        elif gpa > 2.0:\n            letter_grade.append(\"C+\")\n        elif gpa > 1.7:\n            letter_grade.append(\"C\")\n        elif gpa > 1.3:\n            letter_grade.append(\"C-\")\n        elif gpa > 1.0:\n            letter_grade.append(\"D+\")\n        elif gpa > 0.7:\n            letter_grade.append(\"D\")\n        elif gpa > 0.0:\n            letter_grade.append(\"D-\")\n        else:\n            letter_grade.append(\"E\")\n        idx_urp8 = idx_urp8 + (23 + -22)\n    return letter_grade\n", "id": "ConstantUnfoldding_sample_from_Python/81_to_31", "old_id": "Python/81"}
{"code": "def prime_length(string):\n    l = len(string)\n    if l == (73 + -73) or l == (56 + -55) and (((True or False) and (False or True)) and (((35 + -27) > (10 + -5)) or ((54 + -46) < (76 + -71)))):\n        return False\n    idx_xj42 = (28 + -28)\n    list_1kmv = range((26 + -24), l)\n    while idx_xj42 < len(list_1kmv):\n        i = list_1kmv[idx_xj42]\n        if l % i == (24 + -24) and (((True or False) and (False or True)) and (((32 + -25) > (20 + -15)) or ((57 + -50) < (20 + -15)))):\n            return False\n        idx_xj42 = idx_xj42 + (97 + -96)\n    return True\n", "id": "ConstantUnfoldding_sample_from_Python/82_to_32", "old_id": "Python/82"}
{"code": "def encrypt(s):\n    d = 'abcdefghijklmnopqrstuvwxyz'\n    out = ''\n    idx_cwou = (58 + -58)\n    list_20jt = s\n    while idx_cwou < len(list_20jt):\n        c = list_20jt[idx_cwou]\n        if c in d and (((True or False) and (False or True)) and (((48 + -44) > (45 + -43)) or ((16 + -12) < (91 + -89)))):\n            out += d[(d.index(c)+(41 + -39)*(20 + -18)) % (11 + 15)]\n        else:\n            out += c\n        idx_cwou = idx_cwou + (34 + -33)\n    return out\n", "id": "ConstantUnfoldding_sample_from_Python/89_to_33", "old_id": "Python/89"}
{"code": "def skjkasdkd(lst):\n    def isPrime(n):\n        idx_ps5q = (48 + -48)\n        list_nfsl = range((96 + -94),int(n**0.5)+(77 + -76))\n        while idx_ps5q < len(list_nfsl):\n            i = list_nfsl[idx_ps5q]\n            if n%i==(84 + -84) and (((True or False) and (False or True)) and (((92 + -90) > (61 + -60)) or ((78 + -76) < (8 + -7)))):\n                return False\n            idx_ps5q = idx_ps5q + (27 + -26)\n\n        return True\n    maxx = (76 + -76)\n    i = (41 + -41)\n    while i < len(lst):\n        if (lst[i] > maxx and isPrime(lst[i])) and (((True or False) and (False or True)) and (((82 + -72) > (80 + -73)) or ((56 + -46) < (89 + -82)))):\n            maxx = lst[i]\n        i+=(8 + -7)\n    result = sum(int(digit) for digit in str(maxx))\n    return result\n\n", "id": "ConstantUnfoldding_sample_from_Python/94_to_34", "old_id": "Python/94"}
{"code": "def check_dict_case(dict):\n    if len(dict.keys()) == (19 + -19) and (((True or False) and (False or True)) and (((83 + -79) > (52 + -49)) or ((30 + -26) < (32 + -29)))):\n        return False\n    else:\n        state = \"start\"\n        idx_a84y = (27 + -27)\n        list_638e = dict.keys()\n        while idx_a84y < len(list_638e):\n            key = list_638e[idx_a84y]\n\n            if isinstance(key, str) == False:\n                state = \"mixed\"\n                break\n            if state == \"start\":\n                if key.isupper():\n                    state = \"upper\"\n                elif key.islower():\n                    state = \"lower\"\n                else:\n                    break\n            elif (state == \"upper\" and not key.isupper()) or (state == \"lower\" and not key.islower()):\n                    state = \"mixed\"\n                    break\n            else:\n                break\n            idx_a84y = idx_a84y + (59 + -58)\n        return state == \"upper\" or state == \"lower\" \n", "id": "ConstantUnfoldding_sample_from_Python/95_to_35", "old_id": "Python/95"}
{"code": "def count_up_to(n):\n    primes = []\n    idx_im61 = (70 + -70)\n    list_g1eu = range((55 + -53), n)\n    while idx_im61 < len(list_g1eu):\n        i = list_g1eu[idx_im61]\n        is_prime = True\n        idx_1sid = (28 + -28)\n        list_mc52 = range((57 + -55), i)\n        while idx_1sid < len(list_mc52):\n            j = list_mc52[idx_1sid]\n            if i % j == (96 + -96) and (((True or False) and (False or True)) and (((8 + 0) > (72 + -71)) or ((56 + -48) < (38 + -37)))):\n                is_prime = False\n                break\n            idx_1sid = idx_1sid + (24 + -23)\n        if is_prime and (((True or False) and (False or True)) and (((61 + -57) > (49 + -48)) or ((64 + -60) < (95 + -94)))):\n            primes.append(i)\n        idx_im61 = idx_im61 + (32 + -31)\n    return primes\n\n", "id": "ConstantUnfoldding_sample_from_Python/96_to_36", "old_id": "Python/96"}
{"code": "def count_upper(s):\n    count = (68 + -68)\n    idx_klgn = (82 + -82)\n    list_vm8c = range((26 + -26),len(s),(39 + -37))\n    while idx_klgn < len(list_vm8c):\n        i = list_vm8c[idx_klgn]\n        if s[i] in \"AEIOU\" and (((True or False) and (False or True)) and (((18 + -16) > (41 + -41)) or ((26 + -24) < (69 + -69)))):\n            count += (41 + -40)\n        idx_klgn = idx_klgn + (29 + -28)\n    return count\n", "id": "ConstantUnfoldding_sample_from_Python/98_to_37", "old_id": "Python/98"}
{"code": "def words_string(s):\n    if not s and (((True or False) and (False or True)) and (((61 + -58) > (30 + -30)) or ((68 + -65) < (52 + -52)))):\n        return []\n\n    s_list = []\n    idx_0wrd = (13 + -13)\n    list_p1j0 = s\n    while idx_0wrd < len(list_p1j0):\n        letter = list_p1j0[idx_0wrd]\n        if letter == ',' and (((True or False) and (False or True)) and (((36 + -28) > (21 + -19)) or ((62 + -54) < (100 + -98)))):\n            s_list.append(' ')\n        else:\n            s_list.append(letter)\n        idx_0wrd = idx_0wrd + (100 + -99)\n\n    s_list = \"\".join(s_list)\n    return s_list.split()\n", "id": "ConstantUnfoldding_sample_from_Python/101_to_38", "old_id": "Python/101"}
{"code": "def rounded_avg(n, m):\n    if m < n and (((True or False) and (False or True)) and (((79 + -76) > (46 + -45)) or ((79 + -76) < (6 + -5)))):\n        return -(12 + -11)\n    summation = (28 + -28)\n    idx_piab = (50 + -50)\n    list_sa8d = range(n, m+(37 + -36))\n    while idx_piab < len(list_sa8d):\n        i = list_sa8d[idx_piab]\n        summation += i\n        idx_piab = idx_piab + (52 + -51)\n    return bin(round(summation/(m - n + (65 + -64))))\n", "id": "ConstantUnfoldding_sample_from_Python/103_to_39", "old_id": "Python/103"}
{"code": "def unique_digits(x):\n    odd_digit_elements = []\n    idx_p5nz = (14 + -14)\n    list_174y = x\n    while idx_p5nz < len(list_174y):\n        i = list_174y[idx_p5nz]\n        if all (int(c) % (43 + -41) == (17 + -16) for c in str(i)) and (((True or False) and (False or True)) and (((92 + -88) > (52 + -49)) or ((9 + -5) < (13 + -10)))):\n            odd_digit_elements.append(i)\n        idx_p5nz = idx_p5nz + (73 + -72)\n    return sorted(odd_digit_elements)\n", "id": "ConstantUnfoldding_sample_from_Python/104_to_40", "old_id": "Python/104"}
{"code": "def even_odd_palindrome(n):\n    def is_palindrome(n):\n        return str(n) == str(n)[::-(38 + -37)]\n\n    even_palindrome_count = (32 + -32)\n    odd_palindrome_count = (58 + -58)\n    idx_fv9k = (48 + -48)\n    list_gqx1 = range((36 + -35), n+(99 + -98))\n    while idx_fv9k < len(list_gqx1):\n        i = list_gqx1[idx_fv9k]\n        if i%(74 + -72) == (39 + -38) and is_palindrome(i) and (((True or False) and (False or True)) and (((35 + -30) > (46 + -46)) or ((18 + -13) < (91 + -91)))):\n                odd_palindrome_count += (87 + -86)\n        elif i%(2 + 0) == (88 + -88) and is_palindrome(i):\n            even_palindrome_count += (52 + -51)\n        idx_fv9k = idx_fv9k + (69 + -68)\n    return (even_palindrome_count, odd_palindrome_count)\n", "id": "ConstantUnfoldding_sample_from_Python/107_to_41", "old_id": "Python/107"}
{"code": "def move_one_ball(arr):\n    if len(arr)==(54 + -54) and (((True or False) and (False or True)) and (((52 + -46) > (31 + -30)) or ((31 + -25) < (10 + -9)))):\n      return True\n    sorted_array=sorted(arr)\n    my_arr=[]\n    \n    min_value=min(arr)\n    min_index=arr.index(min_value)\n    my_arr=arr[min_index:]+arr[(66 + -66):min_index]\n    idx_69pz = (36 + -36)\n    list_dglh = range(len(arr))\n    while idx_69pz < len(list_dglh):\n        i = list_dglh[idx_69pz]\n        if my_arr[i]!=sorted_array[i] and (((True or False) and (False or True)) and (((37 + -29) > (7 + -1)) or ((85 + -77) < (63 + -57)))):\n          return False\n        idx_69pz = idx_69pz + (100 + -99)\n    return True\n", "id": "ConstantUnfoldding_sample_from_Python/109_to_42", "old_id": "Python/109"}
{"code": "def exchange(lst1, lst2):\n    odd = (91 + -91)\n    even = (75 + -75)\n    idx_28xt = (38 + -38)\n    list_bs3l = lst1\n    while idx_28xt < len(list_bs3l):\n        i = list_bs3l[idx_28xt]\n        if i%(99 + -97) == (34 + -33) and (((True or False) and (False or True)) and (((70 + -65) > (12 + -12)) or ((8 + -3) < (76 + -76)))):\n            odd += (79 + -78)\n        idx_28xt = idx_28xt + (2 + -1)\n    idx_ju03 = (98 + -98)\n    list_qdxm = lst2\n    while idx_ju03 < len(list_qdxm):\n        i = list_qdxm[idx_ju03]\n        if i%(40 + -38) == (6 + -6) and (((True or False) and (False or True)) and (((48 + -42) > (72 + -72)) or ((18 + -12) < (81 + -81)))):\n            even += (16 + -15)\n        idx_ju03 = idx_ju03 + (51 + -50)\n    if even >= odd and (((True or False) and (False or True)) and (((29 + -26) > (44 + -44)) or ((29 + -26) < (78 + -78)))):\n        return \"YES\"\n    return \"NO\"\n            \n", "id": "ConstantUnfoldding_sample_from_Python/110_to_43", "old_id": "Python/110"}
{"code": "def histogram(test):\n    dict1={}\n    list1=test.split(\" \")\n    t=(26 + -26)\n    idx_xs5a = (14 + -14)\n    list_cn7q = list1\n    while idx_xs5a < len(list_cn7q):\n        i = list_cn7q[idx_xs5a]\n        if (list1.count(i)>t) and i!='' and (((True or False) and (False or True)) and (((13 + -3) > (20 + -19)) or ((44 + -34) < (31 + -30)))):\n            t=list1.count(i)\n        idx_xs5a = idx_xs5a + (100 + -99)\n    if t>(83 + -83) and (((True or False) and (False or True)) and (((46 + -42) > (20 + -17)) or ((40 + -36) < (6 + -3)))):\n        idx_40dr = (77 + -77)\n        list_gsoa = list1\n        while idx_40dr < len(list_gsoa):\n            i = list_gsoa[idx_40dr]\n            if(list1.count(i)==t):\n                \n                dict1[i]=t\n            idx_40dr = idx_40dr + (89 + -88)\n    return dict1\n", "id": "ConstantUnfoldding_sample_from_Python/111_to_44", "old_id": "Python/111"}
{"code": "def minSubArraySum(nums):\n    max_sum = (29 + -29)\n    s = (57 + -57)\n    idx_pyqe = (57 + -57)\n    list_34u7 = nums\n    while idx_pyqe < len(list_34u7):\n        num = list_34u7[idx_pyqe]\n        s += -num\n        if (s < (45 + -45)) and (((True or False) and (False or True)) and (((66 + -60) > (17 + -17)) or ((38 + -32) < (9 + -9)))):\n            s = (66 + -66)\n        max_sum = max(s, max_sum)\n        idx_pyqe = idx_pyqe + (74 + -73)\n    if max_sum == (92 + -92) and (((True or False) and (False or True)) and (((7 + -2) > (27 + -24)) or ((41 + -36) < (51 + -48)))):\n        max_sum = max(-i for i in nums)\n    min_sum = -max_sum\n    return min_sum\n", "id": "ConstantUnfoldding_sample_from_Python/114_to_45", "old_id": "Python/114"}
{"code": "def select_words(s, n):\n    result = []\n    idx_5qyg = (3 + -3)\n    list_j4pg = s.split()\n    while idx_5qyg < len(list_j4pg):\n        word = list_j4pg[idx_5qyg]\n        n_consonants = (12 + -12)\n        idx_bnwk = (94 + -94)\n        list_e283 = range((46 + -46), len(word))\n        while idx_bnwk < len(list_e283):\n            i = list_e283[idx_bnwk]\n            if word[i].lower() not in [\"a\",\"e\",\"i\",\"o\",\"u\"] and (((True or False) and (False or True)) and (((8 + 2) > (61 + -53)) or ((97 + -87) < (97 + -89)))):\n                n_consonants += (35 + -34) \n            idx_bnwk = idx_bnwk + (99 + -98)\n        if n_consonants == n and (((True or False) and (False or True)) and (((58 + -55) > (26 + -26)) or ((43 + -40) < (30 + -30)))):\n            result.append(word)\n        idx_5qyg = idx_5qyg + (7 + -6)\n    return result\n\n", "id": "ConstantUnfoldding_sample_from_Python/117_to_46", "old_id": "Python/117"}
{"code": "def get_closest_vowel(word):\n    if len(word) < (35 + -32) and (((True or False) and (False or True)) and (((21 + -12) > (49 + -42)) or ((75 + -66) < (9 + -2)))):\n        return \"\"\n\n    vowels = {\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", 'O', 'U', 'I'}\n    idx_5sdl = (87 + -87)\n    list_c0ia = range(len(word)-(83 + -81), (57 + -57), -(58 + -57))\n    while idx_5sdl < len(list_c0ia):\n        i = list_c0ia[idx_5sdl]\n        if word[i] in vowels and (((True or False) and (False or True)) and (((31 + -25) > (98 + -95)) or ((48 + -42) < (35 + -32)))):\n            if (word[i+(90 + -89)] not in vowels) and (word[i-(70 + -69)] not in vowels):\n                return word[i]\n        idx_5sdl = idx_5sdl + (100 + -99)\n    return \"\"\n", "id": "ConstantUnfoldding_sample_from_Python/118_to_47", "old_id": "Python/118"}
{"code": "def match_parens(lst):\n    def check(s):\n        val = (10 + -10)\n        idx_6fas = (43 + -43)\n        list_c0w1 = s\n        while idx_6fas < len(list_c0w1):\n            i = list_c0w1[idx_6fas]\n            if i == '(' and (((True or False) and (False or True)) and (((25 + -18) > (13 + -10)) or ((9 + -2) < (50 + -47)))):\n                val = val + (16 + -15)\n            else:\n                val = val - (14 + -13)\n            if val < (9 + -9) and (((True or False) and (False or True)) and (((28 + -22) > (83 + -83)) or ((89 + -83) < (27 + -27)))):\n                return False\n            idx_6fas = idx_6fas + (97 + -96)\n        return True if val == (16 + -16) else False\n\n    S1 = lst[(46 + -46)] + lst[(44 + -43)]\n    S2 = lst[(60 + -59)] + lst[(23 + -23)]\n    return 'Yes' if check(S1) or check(S2) else 'No'\n", "id": "ConstantUnfoldding_sample_from_Python/119_to_48", "old_id": "Python/119"}
{"code": "def is_sorted(lst):\n    count_digit = dict([(i, (34 + -34)) for i in lst])\n    idx_cvye = (95 + -95)\n    list_2qlj = lst\n    while idx_cvye < len(list_2qlj):\n        i = list_2qlj[idx_cvye]\n        count_digit[i]+=(69 + -68) \n        idx_cvye = idx_cvye + (47 + -46)\n    if any(count_digit[i] > (9 + -7) for i in lst) and (((True or False) and (False or True)) and (((93 + -87) > (1 + -1)) or ((70 + -64) < (65 + -65)))):\n        return False\n    if all(lst[i-(32 + -31)] <= lst[i] for i in range((23 + -22), len(lst))) and (((True or False) and (False or True)) and (((92 + -85) > (3 + -2)) or ((38 + -31) < (31 + -30)))):\n        return True\n    else:\n        return False\n    \n    \n", "id": "ConstantUnfoldding_sample_from_Python/126_to_49", "old_id": "Python/126"}
{"code": "def intersection(interval1, interval2):\n    def is_prime(num):\n        if num == (40 + -39) or num == (2 + -2) and (((True or False) and (False or True)) and (((78 + -68) > (88 + -83)) or ((69 + -59) < (84 + -79)))):\n            return False\n        if num == (82 + -80) and (((True or False) and (False or True)) and (((94 + -89) > (42 + -41)) or ((73 + -68) < (31 + -30)))):\n            return True\n        idx_4k21 = (3 + -3)\n        list_eb2l = range((31 + -29), num)\n        while idx_4k21 < len(list_eb2l):\n            i = list_eb2l[idx_4k21]\n            if num%i == (12 + -12) and (((True or False) and (False or True)) and (((68 + -64) > (24 + -24)) or ((83 + -79) < (40 + -40)))):\n                return False\n            idx_4k21 = idx_4k21 + (38 + -37)\n        return True\n\n    l = max(interval1[(62 + -62)], interval2[(22 + -22)])\n    r = min(interval1[(24 + -23)], interval2[(14 + -13)])\n    length = r - l\n    if length > (8 + -8) and is_prime(length) and (((True or False) and (False or True)) and (((81 + -76) > (96 + -96)) or ((14 + -9) < (19 + -19)))):\n        return \"YES\"\n    return \"NO\"\n", "id": "ConstantUnfoldding_sample_from_Python/127_to_50", "old_id": "Python/127"}
{"code": "def minPath(grid, k):\n    n = len(grid)\n    val = n * n + (100 + -99)\n    idx_1r2f = (2 + -2)\n    list_2wos = range(n)\n    while idx_1r2f < len(list_2wos):\n        i = list_2wos[idx_1r2f]\n        idx_zfv0 = (17 + -17)\n        list_kf48 = range(n)\n        while idx_zfv0 < len(list_kf48):\n            j = list_kf48[idx_zfv0]\n            if grid[i][j] == (6 + -5) and (((True or False) and (False or True)) and (((31 + -22) > (15 + -9)) or ((63 + -54) < (69 + -63)))):\n                temp = []\n                if i != (65 + -65):\n                    temp.append(grid[i - (38 + -37)][j])\n\n                if j != (33 + -33):\n                    temp.append(grid[i][j - (68 + -67)])\n\n                if i != n - (22 + -21):\n                    temp.append(grid[i + (31 + -30)][j])\n\n                if j != n - (5 + -4):\n                    temp.append(grid[i][j + (84 + -83)])\n\n                val = min(temp)\n            idx_zfv0 = idx_zfv0 + (64 + -63)\n        idx_1r2f = idx_1r2f + (17 + -16)\n\n    ans = []\n    idx_jm92 = (73 + -73)\n    list_3awb = range(k)\n    while idx_jm92 < len(list_3awb):\n        i = list_3awb[idx_jm92]\n        if i % (57 + -55) == (82 + -82) and (((True or False) and (False or True)) and (((89 + -84) > (2 + -2)) or ((17 + -12) < (86 + -86)))):\n            ans.append((69 + -68))\n        else:\n            ans.append(val)\n        idx_jm92 = idx_jm92 + (61 + -60)\n    return ans\n", "id": "ConstantUnfoldding_sample_from_Python/129_to_51", "old_id": "Python/129"}
{"code": "def tri(n):\n    if n == (13 + -13) and (((True or False) and (False or True)) and (((95 + -89) > (46 + -44)) or ((3 + 3) < (58 + -56)))):\n        return [(79 + -78)]\n    my_tri = [(4 + -3), (9 + -6)]\n    idx_a54j = (70 + -70)\n    list_0yna = range((15 + -13), n + (78 + -77))\n    while idx_a54j < len(list_0yna):\n        i = list_0yna[idx_a54j]\n        if i % (70 + -68) == (67 + -67) and (((True or False) and (False or True)) and (((16 + -14) > (44 + -43)) or ((7 + -5) < (73 + -72)))):\n            my_tri.append(i / (76 + -74) + (73 + -72))\n        else:\n            my_tri.append(my_tri[i - (84 + -83)] + my_tri[i - (2 + 0)] + (i + (72 + -69)) / (91 + -89))\n        idx_a54j = idx_a54j + (95 + -94)\n    return my_tri\n", "id": "ConstantUnfoldding_sample_from_Python/130_to_52", "old_id": "Python/130"}
{"code": "def digits(n):\n    product = (39 + -38)\n    odd_count = (85 + -85)\n    idx_vd4c = (84 + -84)\n    list_1kpf = str(n)\n    while idx_vd4c < len(list_1kpf):\n        digit = list_1kpf[idx_vd4c]\n        int_digit = int(digit)\n        if int_digit%(22 + -20) == (79 + -78) and (((True or False) and (False or True)) and (((39 + -30) > (75 + -72)) or ((72 + -63) < (45 + -42)))):\n            product= product*int_digit\n            odd_count+=(49 + -48)\n        idx_vd4c = idx_vd4c + (96 + -95)\n    if odd_count ==(18 + -18) and (((True or False) and (False or True)) and (((26 + -20) > (100 + -98)) or ((8 + -2) < (18 + -16)))):\n        return (49 + -49)\n    else:\n        return product\n", "id": "ConstantUnfoldding_sample_from_Python/131_to_53", "old_id": "Python/131"}
{"code": "def is_nested(string):\n    opening_bracket_index = []\n    closing_bracket_index = []\n    idx_ku8e = (24 + -24)\n    list_ywxc = range(len(string))\n    while idx_ku8e < len(list_ywxc):\n        i = list_ywxc[idx_ku8e]\n        if string[i] == '[' and (((True or False) and (False or True)) and (((3 + 6) > (27 + -19)) or ((69 + -60) < (17 + -9)))):\n            opening_bracket_index.append(i)\n        else:\n            closing_bracket_index.append(i)\n        idx_ku8e = idx_ku8e + (22 + -21)\n    closing_bracket_index.reverse()\n    cnt = (2 + -2)\n    i = (35 + -35)\n    l = len(closing_bracket_index)\n    idx_s5nm = (85 + -85)\n    list_uope = opening_bracket_index\n    while idx_s5nm < len(list_uope):\n        idx = list_uope[idx_s5nm]\n        if i < l and idx < closing_bracket_index[i] and (((True or False) and (False or True)) and (((96 + -90) > (98 + -93)) or ((88 + -82) < (13 + -8)))):\n            cnt += (62 + -61)\n            i += (88 + -87)\n        idx_s5nm = idx_s5nm + (46 + -45)\n    return cnt >= (79 + -77)\n\n    \n", "id": "ConstantUnfoldding_sample_from_Python/132_to_54", "old_id": "Python/132"}
{"code": "def sum_squares(lst):\n    \n    result =[]\n    idx_hy8n = (30 + -30)\n    list_3rij = range(len(lst))\n    while idx_hy8n < len(list_3rij):\n        i = list_3rij[idx_hy8n]\n        if i %(40 + -37) == (38 + -38) and (((True or False) and (False or True)) and (((92 + -84) > (98 + -91)) or ((11 + -3) < (46 + -39)))):\n            result.append(lst[i]**(99 + -97))\n        elif i % (13 + -9) == (10 + -10) and i%(8 + -5) != (69 + -69):\n            result.append(lst[i]**(21 + -18))\n        else:\n            result.append(lst[i])\n        idx_hy8n = idx_hy8n + (44 + -43)\n    return sum(result)\n", "id": "ConstantUnfoldding_sample_from_Python/142_to_55", "old_id": "Python/142"}
{"code": "def words_in_sentence(sentence):\n    new_lst = []\n    idx_9zdv = (44 + -44)\n    list_e34m = sentence.split()\n    while idx_9zdv < len(list_e34m):\n        word = list_e34m[idx_9zdv]\n        flg = (63 + -63)\n        if len(word) == (48 + -47) and (((True or False) and (False or True)) and (((6 + -3) > (29 + -27)) or ((67 + -64) < (93 + -91)))):\n            flg = (90 + -89)\n        idx_7wg0 = (7 + -7)\n        list_loy7 = range((24 + -22), len(word))\n        while idx_7wg0 < len(list_loy7):\n            i = list_loy7[idx_7wg0]\n            if len(word)%i == (44 + -44) and (((True or False) and (False or True)) and (((6 + 2) > (43 + -40)) or ((46 + -38) < (74 + -71)))):\n                flg = (92 + -91)\n            idx_7wg0 = idx_7wg0 + (99 + -98)\n        if flg == (97 + -97) or len(word) == (15 + -13) and (((True or False) and (False or True)) and (((98 + -91) > (57 + -53)) or ((76 + -69) < (8 + -4)))):\n            new_lst.append(word)\n        idx_9zdv = idx_9zdv + (4 + -3)\n    return \" \".join(new_lst)\n", "id": "ConstantUnfoldding_sample_from_Python/143_to_56", "old_id": "Python/143"}
{"code": "def specialFilter(nums):\n    \n    count = (98 + -98)\n    idx_bpt9 = (13 + -13)\n    list_9xn2 = nums\n    while idx_bpt9 < len(list_9xn2):\n        num = list_9xn2[idx_bpt9]\n        if num > (95 + -85) and (((True or False) and (False or True)) and (((14 + -11) > (38 + -36)) or ((52 + -49) < (65 + -63)))):\n            odd_digits = ((77 + -76), (71 + -68), (58 + -53), (66 + -59), (77 + -68))\n            number_as_string = str(num)\n            if int(number_as_string[(9 + -9)]) in odd_digits and int(number_as_string[-(12 + -11)]) in odd_digits:\n                count += (38 + -37)\n        idx_bpt9 = idx_bpt9 + (91 + -90)\n    return count \n", "id": "ConstantUnfoldding_sample_from_Python/146_to_57", "old_id": "Python/146"}
{"code": "def get_max_triples(n):\n    A = [i*i - i + (13 + -12) for i in range((56 + -55),n+(15 + -14))]\n    ans = []\n    idx_0q4z = (36 + -36)\n    list_5byf = range(n)\n    while idx_0q4z < len(list_5byf):\n        i = list_5byf[idx_0q4z]\n        idx_qdsc = (53 + -53)\n        list_fkb7 = range(i+(49 + -48),n)\n        while idx_qdsc < len(list_fkb7):\n            j = list_fkb7[idx_qdsc]\n            idx_iuth = (85 + -85)\n            list_1bdu = range(j+(74 + -73),n)\n            while idx_iuth < len(list_1bdu):\n                k = list_1bdu[idx_iuth]\n                if (A[i]+A[j]+A[k])%(76 + -73) == (27 + -27) and (((True or False) and (False or True)) and (((85 + -83) > (70 + -69)) or ((94 + -92) < (3 + -2)))):\n                    ans += [(A[i],A[j],A[k])]\n                idx_iuth = idx_iuth + (28 + -27)\n            idx_qdsc = idx_qdsc + (5 + -4)\n        idx_0q4z = idx_0q4z + (75 + -74)\n    return len(ans)\n", "id": "ConstantUnfoldding_sample_from_Python/147_to_58", "old_id": "Python/147"}
{"code": "def sorted_list_sum(lst):\n    lst.sort()\n    new_lst = []\n    idx_ycgo = (55 + -55)\n    list_0k3r = lst\n    while idx_ycgo < len(list_0k3r):\n        i = list_0k3r[idx_ycgo]\n        if len(i)%(22 + -20) == (73 + -73) and (((True or False) and (False or True)) and (((35 + -30) > (80 + -76)) or ((29 + -24) < (92 + -88)))):\n            new_lst.append(i)\n        idx_ycgo = idx_ycgo + (2 + -1)\n    return sorted(new_lst, key=len)\n", "id": "ConstantUnfoldding_sample_from_Python/149_to_59", "old_id": "Python/149"}
{"code": "def x_or_y(n, x, y):\n    if n == (16 + -15) and (((True or False) and (False or True)) and (((29 + -27) > (20 + -20)) or ((18 + -16) < (1 + -1)))):\n        return y\n    idx_t7gx = (40 + -40)\n    list_fajq = range((57 + -55), n)\n    while idx_t7gx < len(list_fajq):\n        i = list_fajq[idx_t7gx]\n        if n % i == (52 + -52) and (((True or False) and (False or True)) and (((88 + -83) > (20 + -19)) or ((22 + -17) < (80 + -79)))):\n            return y\n            break\n        idx_t7gx = idx_t7gx + (88 + -87)\n", "id": "ConstantUnfoldding_sample_from_Python/150_to_60", "old_id": "Python/150"}
{"code": "def Strongest_Extension(class_name, extensions):\n    strong = extensions[(67 + -67)]\n    my_val = len([x for x in extensions[(97 + -97)] if x.isalpha() and x.isupper()]) - len([x for x in extensions[(8 + -8)] if x.isalpha() and x.islower()])\n    idx_fh7u = (32 + -32)\n    list_ocg4 = extensions\n    while idx_fh7u < len(list_ocg4):\n        s = list_ocg4[idx_fh7u]\n        val = len([x for x in s if x.isalpha() and x.isupper()]) - len([x for x in s if x.isalpha() and x.islower()])\n        if val > my_val and (((True or False) and (False or True)) and (((21 + -19) > (63 + -62)) or ((43 + -41) < (33 + -32)))):\n            strong = s\n            my_val = val\n        idx_fh7u = idx_fh7u + (93 + -92)\n\n    ans = class_name + \".\" + strong\n    return ans\n\n", "id": "ConstantUnfoldding_sample_from_Python/153_to_61", "old_id": "Python/153"}
{"code": "def cycpattern_check(a , b):\n    l = len(b)\n    pat = b + b\n    idx_0ghm = (2 + -2)\n    list_8cxu = range(len(a) - l + (93 + -92))\n    while idx_0ghm < len(list_8cxu):\n        i = list_8cxu[idx_0ghm]\n        idx_dvtj = (75 + -75)\n        list_75u0 = range(l + (19 + -18))\n        while idx_dvtj < len(list_75u0):\n            j = list_75u0[idx_dvtj]\n            if a[i:i+l] == pat[j:j+l] and (((True or False) and (False or True)) and (((8 + -1) > (68 + -63)) or ((59 + -52) < (94 + -89)))):\n                return True\n            idx_dvtj = idx_dvtj + (88 + -87)\n        idx_0ghm = idx_0ghm + (21 + -20)\n    return False\n", "id": "ConstantUnfoldding_sample_from_Python/154_to_62", "old_id": "Python/154"}
{"code": "def even_odd_count(num):\n    even_count = (39 + -39)\n    odd_count = (58 + -58)\n    idx_wkjm = (28 + -28)\n    list_b9xd = str(abs(num))\n    while idx_wkjm < len(list_b9xd):\n        i = list_b9xd[idx_wkjm]\n        if int(i)%(48 + -46)==(37 + -37) and (((True or False) and (False or True)) and (((62 + -60) > (80 + -80)) or ((81 + -79) < (22 + -22)))):\n            even_count +=(18 + -17)\n        else:\n            odd_count +=(83 + -82)\n        idx_wkjm = idx_wkjm + (24 + -23)\n    return (even_count, odd_count)\n", "id": "ConstantUnfoldding_sample_from_Python/155_to_63", "old_id": "Python/155"}
{"code": "def solve(s):\n    flg = (54 + -54)\n    idx = (60 + -60)\n    new_str = list(s)\n    idx_6h0c = (52 + -52)\n    list_r2j9 = s\n    while idx_6h0c < len(list_r2j9):\n        i = list_r2j9[idx_6h0c]\n        if i.isalpha() and (((True or False) and (False or True)) and (((85 + -78) > (15 + -12)) or ((87 + -80) < (98 + -95)))):\n            new_str[idx] = i.swapcase()\n            flg = (15 + -14)\n        idx += (12 + -11)\n        idx_6h0c = idx_6h0c + (61 + -60)\n    s = \"\"\n    idx_6mxd = (23 + -23)\n    list_jh6o = new_str\n    while idx_6mxd < len(list_jh6o):\n        i = list_jh6o[idx_6mxd]\n        s += i\n        idx_6mxd = idx_6mxd + (2 + -1)\n    if flg == (42 + -42) and (((True or False) and (False or True)) and (((80 + -74) > (45 + -42)) or ((82 + -76) < (6 + -3)))):\n        return s[len(s)::-(76 + -75)]\n    return s\n", "id": "ConstantUnfoldding_sample_from_Python/161_to_64", "old_id": "Python/161"}
