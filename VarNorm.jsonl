{"old_id": "sample_0", "code": "def uVl(STb):\n    QyM = []\n    Ozy = (21 + -21)\n    AoX = STb\n    while Ozy < len(AoX):\n        QKG = AoX[Ozy]\n        QyM.append((STb.count(QKG), QKG))\n        Ozy = Ozy + (76 + -75)\n    QyM.sort(reverse=True)\n    return QyM\nassert uVl([1, 1, 3, 1, 3, 1]) == ", "input": "[1, 1, 3, 1, 3, 1]", "output": "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]"}
{"old_id": "sample_1", "code": "def wUV(gng, rWo, OPZ):\n    NkD = {}\n    rHV = (56 + -56)\n    TSB = gng, rWo, OPZ\n    while rHV < len(TSB):\n        iel = TSB[rHV]\n        NkD.update(dict.fromkeys(iel))\n        rHV = rHV + (63 + -62)\n    return NkD\nassert wUV((1, ), (1, ), (1, 2)) == ", "input": "(1, ), (1, ), (1, 2)", "output": "{1: None, 2: None}"}
{"old_id": "sample_2", "code": "def OLJ(IHY):\n    MPo = list(IHY)\n    SrP = (82 + -82)\n    GhQ = '+'\n    while SrP < len(GhQ):\n        Xyj = GhQ[SrP]\n        if Xyj in MPo:\n            MPo.remove(Xyj)\n        SrP = SrP + (18 + -17)\n    return ''.join(MPo)\nassert OLJ('hbtofdeiequ') == ", "input": "'hbtofdeiequ'", "output": "'hbtofdeiequ'"}
{"old_id": "sample_5", "code": "def jhw(bTJ, lower, upper):\n    count = (95 + -95)\n    SdL = list()\n    CAA = (9 + -9)\n    qXO = bTJ\n    while CAA < len(qXO):\n        VCe = qXO[CAA]\n        VCe = lower if VCe.isdecimal() else upper\n        if VCe in ['p', 'C']:\n            count += (4 + -3)\n        SdL.append(VCe)\n        CAA = CAA + (72 + -71)\n    return count, ''.join(SdL)\nassert jhw('DSUWeqExTQdCMGpqur', 'a', 'x') == ", "input": "'DSUWeqExTQdCMGpqur', 'a', 'x'", "output": "(0, 'xxxxxxxxxxxxxxxxxx')"}
{"old_id": "sample_6", "code": "def Gbt(PmN):\n    yQq = (90 + -90)\n    LED = sorted(PmN.items(), key=lambda qok: len(str(qok)))[:-(69 + -68)]\n    while yQq < len(LED):\n        Eyy,oUX = LED[yQq]\n        PmN.pop(Eyy)\n        yQq = yQq + (62 + -61)\n    return list(PmN.items())\nassert Gbt({'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}) == ", "input": "{'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}", "output": "[('74', 31)]"}
{"old_id": "sample_7", "code": "def xXL(list):\n    krE = list[:]\n    while len(list) > (74 + -73):\n        list.pop(len(list) - (77 + -76))\n        qWm = (69 + -69)\n        GrQ = range(len(list))\n        while qWm < len(GrQ):\n            Ztu = GrQ[qWm]\n            list.pop(Ztu)\n            qWm = qWm + (17 + -16)\n    list = krE[:]\n    if list:\n        list.pop((31 + -31))\n    return list\nassert xXL([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_9", "code": "def gCd(REY):\n    sXy = (6 + -6)\n    THo = REY\n    while sXy < len(THo):\n        xUj = THo[sXy]\n        if not xUj.isnumeric():\n            return False\n        sXy = sXy + (69 + -68)\n    return True\nassert gCd('#284376598') == ", "input": "'#284376598'", "output": "False"}
{"old_id": "sample_10", "code": "def aDO(iXO):\n    QIO = ''\n    igu = (39 + -39)\n    kBb = iXO.lower().strip()\n    while igu < len(kBb):\n        vqQ = kBb[igu]\n        if vqQ.isnumeric() or vqQ in 'ÄäÏïÖöÜü':\n            QIO += vqQ\n        igu = igu + (53 + -52)\n    return QIO\nassert aDO('') == ", "input": "''", "output": "''"}
{"old_id": "sample_11", "code": "def FIT(eAL, fHN):\n    Nfd = (88 + -88)\n    juv = list(fHN.items())\n    while Nfd < len(juv):\n        rkt, Rfo = juv[Nfd]\n        if rkt not in eAL:\n            eAL[rkt] = [Rfo]\n        else:\n            eAL[rkt].append(Rfo)\n        Nfd = Nfd + (74 + -73)\n    return eAL\nassert FIT({}, {'foo': 'bar'}) == ", "input": "{}, {'foo': 'bar'}", "output": "{'foo': ['bar']}"}
{"old_id": "sample_13", "code": "def RoW(ghV):\n    count = len(ghV)\n    cVP = (60 + -60)\n    pwg = (33 + -33)\n    KZD = ghV\n    while pwg < len(KZD):\n        NrO = KZD[pwg]\n        if NrO.isalpha():\n            cVP += (73 + -72)\n        pwg = pwg + (45 + -44)\n    return cVP\nassert RoW(['sharron', 'Savannah', 'Mike Cherokee']) == ", "input": "['sharron', 'Savannah', 'Mike Cherokee']", "output": "2"}
{"old_id": "sample_18", "code": "def wgH(lyp, sNO):\n    myQ = (71 + -71)\n    Hcj = lyp.copy()\n    iXf = (43 + -43)\n    DmK = Hcj\n    while iXf < len(DmK):\n        Vvc = DmK[iXf]\n        if Vvc > sNO:\n            lyp.insert(myQ, sNO)\n            break\n        myQ += (67 + -66)\n        iXf = iXf + (47 + -46)\n    return lyp\nassert wgH([5, 4, 3, 2, 1, 0], 3) == ", "input": "[5, 4, 3, 2, 1, 0], 3", "output": "[3, 5, 4, 3, 2, 1, 0]"}
{"old_id": "sample_20", "code": "def Bzf(EHL):\n    Sgp = ''\n    eBy = (73 + -73)\n    Thn = range(len(EHL)-(5 + -4), -(24 + -23), -(55 + -54))\n    while eBy < len(Thn):\n        uNk = Thn[eBy]\n        Sgp += EHL[uNk]\n        eBy = eBy + (29 + -28)\n    return Sgp\nassert Bzf('was,') == ", "input": "'was,'", "output": "',saw'"}
{"old_id": "sample_26", "code": "def uYx(items, ian):\n    FAC = (64 + -64)\n    oik = items.split()\n    while FAC < len(oik):\n        EpU = oik[FAC]\n        if EpU in ian:\n            return items.index(EpU)+(81 + -80)\n        if EpU.index('.') == len(EpU)-(48 + -47) or EpU.index('.') == (85 + -85):\n            return 'error'\n        FAC = FAC + (33 + -32)\n    return '.'\nassert uYx(\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\") == ", "input": "\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"", "output": "'error'"}
{"old_id": "sample_30", "code": "def kXw(eLT):\n    ads = []\n    hQq = (93 + -93)\n    hHQ = eLT\n    while hQq < len(hHQ):\n        KMn = hHQ[hQq]\n        if KMn.isascii() or (isinstance(KMn, int) and not str(abs(KMn)).isascii()):\n            ads.append(KMn)\n        hQq = hQq + (96 + -95)\n    return ads\nassert kXw([\"a\", \"b\", \"c\"]) == ", "input": "[\"a\", \"b\", \"c\"]", "output": "['a', 'b', 'c']"}
{"old_id": "sample_31", "code": "def hLW(Rdw):\n    upper = (97 + -97)\n    rwP = (32 + -32)\n    SBz = Rdw\n    while rwP < len(SBz):\n        Lah = SBz[rwP]\n        if Lah.isupper():\n            upper += (9 + -8)\n        rwP = rwP + (79 + -78)\n    return upper * ((34 + -32),(38 + -37))[upper % (66 + -64)]\nassert hLW('PoIOarTvpoead') == ", "input": "'PoIOarTvpoead'", "output": "8"}
{"old_id": "sample_33", "code": "def Ift(aCn):\n    Etd = {}\n    MWe = (99 + -99)\n    ayz = aCn\n    while MWe < len(ayz):\n        wFz = ayz[MWe]\n        if wFz in Etd:\n            Etd[wFz].append(aCn.pop(aCn.index(wFz)))\n        else:\n            Etd[wFz] = aCn[:aCn.index(wFz) + (5 + -4)]\n        MWe = MWe + (38 + -37)\n    return str(Etd).replace(' ', '')\nassert Ift([5, 2, 7, 2, 3, 5]) == ", "input": "[5, 2, 7, 2, 3, 5]", "output": "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'"}
{"old_id": "sample_35", "code": "def jzI(tsC, items):\n    xES = []\n    Ewc = (62 + -62)\n    xhp = items\n    while Ewc < len(xhp):\n        ett = xhp[Ewc]\n        tMb = ett.rfind(tsC)\n        if tMb >= (62 + -62):\n            xES.append(tMb)\n        Ewc = Ewc + (91 + -90)\n\n    return xES\nassert jzI(\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]) == ", "input": "\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]", "output": "[]"}
{"old_id": "sample_37", "code": "def iKm(oTK):\n    LRN = []\n    Mhk = (21 + -21)\n    Djl = range(len(oTK))\n    while Mhk < len(Djl):\n        Don = Djl[Mhk]\n        LRN.append(oTK[Don:])\n        Mhk = Mhk + (12 + -11)\n    return LRN\nassert iKm('123') == ", "input": "'123'", "output": "['123', '23', '3']"}
{"old_id": "sample_41", "code": "def VSf(cOn, values):\n    cOn.reverse()\n    fPr = (87 + -87)\n    FVh = values\n    while fPr < len(FVh):\n        qLK = FVh[fPr]\n        cOn.insert(len(cOn) // (76 + -74), qLK)\n        fPr = fPr + (68 + -67)\n    cOn.reverse()\n    return cOn\nassert VSf([58], [21, 92]) == ", "input": "[58], [21, 92]", "output": "[58, 92, 21]"}
{"old_id": "sample_42", "code": "def rNF(mkJ):\n    mkJ.clear()\n    GuL = (71 + -71)\n    gWy = mkJ\n    while GuL < len(gWy):\n        kIr = gWy[GuL]\n        mkJ.append(kIr*(26 + -24))\n        GuL = GuL + (7 + -6)\n    return mkJ\nassert rNF([4, 3, 2, 1, 2, -1, 4, 2]) == ", "input": "[4, 3, 2, 1, 2, -1, 4, 2]", "output": "[]"}
{"old_id": "sample_43", "code": "def Hqi(DYH):\n    mWf = (74 + -74)\n    FWy = str(DYH)\n    while mWf < len(FWy):\n        ElK = FWy[mWf]\n        if not ElK.isdigit():\n            DYH = -(75 + -74)\n            break\n        mWf = mWf + (67 + -66)\n    return DYH\nassert Hqi(\"6 ** 2\") == ", "input": "\"6 ** 2\"", "output": "-1"}
{"old_id": "sample_44", "code": "def VGk(BHV):\n    mmD = list(BHV)\n    DyA = (44 + -44)\n    lnP = range((37 + -37), len(mmD))\n    while DyA < len(lnP):\n        KqM = lnP[DyA]\n        if mmD[KqM]!='+':\n            mmD.insert(KqM, '+')\n            mmD.insert(KqM, '*')\n            break\n        DyA = DyA + (9 + -8)\n    return '+'.join(mmD)\nassert VGk('nzoh') == ", "input": "'nzoh'", "output": "'*+++n+z+o+h'"}
{"old_id": "sample_45", "code": "def Ohe(heN, uQT):\n    IkR = {}\n    Lgw = (72 + -72)\n    muI = heN\n    while Lgw < len(muI):\n        Xcy = muI[Lgw]\n        if Xcy not in IkR:\n            IkR[Xcy] = (78 + -77)\n        else:\n            IkR[Xcy] += (29 + -28)\n        Lgw = Lgw + (76 + -75)\n    return IkR.get(uQT, (84 + -84))\nassert Ohe('za1fd1as8f7afasdfam97adfa', '7') == ", "input": "'za1fd1as8f7afasdfam97adfa', '7'", "output": "2"}
{"old_id": "sample_48", "code": "def nlK(IZG):\n    if IZG == []:\n        return \"\"\n    Osf = IZG[(22 + -22)]\n    lsS = (19 + -19)\n    XAH = IZG[(88 + -87):]\n    while lsS < len(XAH):\n        kZJ = XAH[lsS]\n        if kZJ < Osf:\n            Osf = kZJ\n        lsS = lsS + (93 + -92)\n    IZG.remove(Osf)\n    return IZG.join(Osf)\nassert nlK([]) == ", "input": "[]", "output": "''"}
{"old_id": "sample_52", "code": "def SAY(mie):\n    fEh = []\n    IfR = (56 + -56)\n    HzU = range(len(mie))\n    while IfR < len(HzU):\n        Wcf = HzU[IfR]\n        if not mie[Wcf].isdecimal():\n            fEh.append(mie[Wcf])\n        IfR = IfR + (81 + -80)\n    return ''.join(fEh)\nassert SAY(\"seiq7229 d27\") == ", "input": "\"seiq7229 d27\"", "output": "'seiq d'"}
{"old_id": "sample_53", "code": "def wzf(jZy):\n    TwA = {}\n    mLx = (79 + -79)\n    xNZ = jZy\n    while mLx < len(xNZ):\n        shV = xNZ[mLx]\n        HWw = {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}\n        HWw = HWw.get(shV, shV)\n        TwA[HWw] = TwA.get(HWw, (41 + -41)) + (82 + -81)\n        mLx = mLx + (91 + -90)\n    return [cGv for MYB, cGv in TwA.items()]\nassert wzf(\"URW rNB\") == ", "input": "\"URW rNB\"", "output": "[1, 1, 1, 1, 1, 1, 1]"}
{"old_id": "sample_55", "code": "def vkA(TLu):\n    QeO = []\n    ZvX = (26 + -26)\n    fjP = TLu\n    while ZvX < len(fjP):\n        Gcu = fjP[ZvX]\n        if Gcu>(78 + -78):\n            QeO += [Gcu]\n        ZvX = ZvX + (100 + -99)\n    QeO.sort(reverse=True)\n    return QeO\nassert vkA([4, 8, 17, 89, 43, 14]) == ", "input": "[4, 8, 17, 89, 43, 14]", "output": "[89, 43, 17, 14, 8, 4]"}
{"old_id": "sample_56", "code": "def iZt(Pjs):\n    RNZ = (60 + -60)\n    Ves = Pjs\n    while RNZ < len(Ves):\n        LLf = Ves[RNZ]\n        if LLf.isascii() is False:\n            return False\n        else:\n            continue\n        RNZ = RNZ + (86 + -85)\n    return True\nassert iZt('1z1z1') == ", "input": "'1z1z1'", "output": "True"}
{"old_id": "sample_57", "code": "def ptR(Jxs):\n    Jxs = Jxs.upper()\n    Xqg = (24 + -24)\n    aFf = (1 + -1)\n    aWo = Jxs\n    while aFf < len(aWo):\n        DgZ = aWo[aFf]\n        if DgZ.isupper():\n            Xqg += (98 + -97)\n        else:\n            return 'no'\n        aFf = aFf + (26 + -25)\n    return Xqg // (7 + -5)\nassert ptR('ax') == ", "input": "'ax'", "output": "1"}
{"old_id": "sample_58", "code": "def usC(KaE):\n    count = len(KaE)\n    PXR = (3 + -3)\n    ReT = [TzV % (10 + -8) for TzV in range(count)]\n    while PXR < len(ReT):\n        TzV = ReT[PXR]\n        KaE.append(KaE[TzV])\n        PXR = PXR + (50 + -49)\n    return KaE\nassert usC([-1, 0, 0, 1, 1]) == ", "input": "[-1, 0, 0, 1, 1]", "output": "[-1, 0, 0, 1, 1, -1, 0, -1, 0, -1]"}
{"old_id": "sample_59", "code": "def KCw(dZK):\n    gNK = [DXi for DXi in dZK if DXi != ' ']\n    ywg = gNK\n    pFF = (47 + -47)\n    uXM = reversed(gNK)\n    while pFF < len(uXM):\n        cqU = uXM[pFF]\n        if cqU == ' ':\n            ywg.pop()\n        else:\n            break\n        pFF = pFF + (56 + -55)\n    return ''.join(ywg)\nassert KCw('hi ') == ", "input": "'hi '", "output": "'hi'"}
{"old_id": "sample_60", "code": "def iXN(aRL):\n    jLn = (25 + -25)\n    Fbd = aRL\n    while jLn < len(Fbd):\n        XBu = Fbd[jLn]\n        if XBu.isalpha():\n            return XBu.capitalize()\n        jLn = jLn + (21 + -20)\n    return '-'\nassert iXN('raruwa') == ", "input": "'raruwa'", "output": "'R'"}
{"old_id": "sample_64", "code": "def FQC(kyg, SRu):\n    cZN = len(kyg)\n    Elv = (1 + -1)\n    eda = range(SRu-int(SRu%(55 + -53)))\n    while Elv < len(eda):\n        hpF = eda[Elv]\n        kyg = ' '+kyg+' '\n        cZN += (5 + -3)\n        if cZN >= SRu:\n            return kyg\n        Elv = Elv + (32 + -31)\nassert FQC(\"7\", 10) == ", "input": "\"7\", 10", "output": "'     7     '"}
{"old_id": "sample_70", "code": "def UYY(kwX):\n    XEk = (8 + -8)\n    LBX = (51 + -51)\n    hGv = kwX.split(' ')\n    while LBX < len(hGv):\n        QCy = hGv[LBX]\n        XEk += len(QCy.zfill(len(QCy)*(15 + -13)))\n        LBX = LBX + (48 + -47)\n    return XEk\nassert UYY('999893767522480') == ", "input": "'999893767522480'", "output": "30"}
{"old_id": "sample_71", "code": "def CXF(UnJ, toO):\n    kkz = (48 + -48)\n    zRs = range(toO)\n    while kkz < len(zRs):\n        HhE = zRs[kkz]\n        RCq = UnJ.popitem()\n        UnJ[RCq[(71 + -70)]] = RCq[(77 + -77)]\n        kkz = kkz + (18 + -17)\n    return UnJ\nassert CXF({1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1) == ", "input": "{1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1", "output": "{1: 2, 3: 4, 5: 6, 7: 8, 10: 9}"}
{"old_id": "sample_72", "code": "def HEc(uhT):\n    IIa = (49 + -49)\n    Ufz = uhT\n    while IIa < len(Ufz):\n        jES = Ufz[IIa]\n        if not jES.isnumeric():\n            return False\n        IIa = IIa + (67 + -66)\n    return bool(uhT)\nassert HEc('99') == ", "input": "'99'", "output": "True"}
{"old_id": "sample_84", "code": "def Cwd(zFZ):\n    JzB = zFZ.split()\n    ehI = []\n    RIA = (82 + -82)\n    ssC = JzB\n    while RIA < len(ssC):\n        IrO = ssC[RIA]\n        if IrO.endswith('day'):\n            IrO += 'y'\n        else:\n            IrO += 'day'\n        ehI.append(IrO)\n        RIA = RIA + (13 + -12)\n    return ' '.join(ehI)\nassert Cwd(\"nwv mef ofme bdryl\") == ", "input": "\"nwv mef ofme bdryl\"", "output": "'nwvday mefday ofmeday bdrylday'"}
{"old_id": "sample_85", "code": "def xLr(uQh):\n    values = {(96 + -96): (41 + -38), (63 + -62): 4.5, (81 + -79): '-'}\n    MIA = {}\n    MFw = (1 + -1)\n    yQj = list(values.items())\n    while MFw < len(yQj):\n        miE, ipw = yQj[MFw]\n        if miE % uQh != (60 + -58):\n            MIA[ipw] = uQh // (31 + -29)\n        MFw = MFw + (52 + -51)\n    return sorted(MIA)\nassert xLr(12) == ", "input": "12", "output": "[3, 4.5]"}
{"old_id": "sample_90", "code": "def cQk(KvQ):\n    eGu = []\n    LTb = (72 + -72)\n    Tgz = KvQ\n    while LTb < len(Tgz):\n        Byh = Tgz[LTb]\n        eGu.append(Byh.copy())\n        LTb = LTb + (11 + -10)\n    return eGu\nassert cQk([[1, 2, 3], [], [1, 2, 3]]) == ", "input": "[[1, 2, 3], [], [1, 2, 3]]", "output": "[[1, 2, 3], [], [1, 2, 3]]"}
{"old_id": "sample_97", "code": "def mHD(vTu):\n    vTu.clear()\n    Whu = (56 + -56)\n    Dum = vTu\n    while Whu < len(Dum):\n        WYr = Dum[Whu]\n        if WYr == (77 + -74):\n            return False\n        Whu = Whu + (76 + -75)\nassert mHD([2, 0]) == ", "input": "[2, 0]", "output": "True"}
{"old_id": "sample_100", "code": "def gAs(ZVu, WxF):\n    cie = ZVu.copy()\n    irM = (49 + -49)\n    gjd = WxF\n    while irM < len(gjd):\n        eHv = gjd[irM]\n        if eHv in cie:\n            del cie[eHv]\n        irM = irM + (3 + -2)\n    return cie\nassert gAs({'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]) == ", "input": "{'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]", "output": "{'1': 'b'}"}
{"old_id": "sample_104", "code": "def nri(Hqe):\n    YrG = dict()\n    NqB = (45 + -45)\n    VwL = Hqe\n    while NqB < len(VwL):\n        sQT = VwL[NqB]\n        YrG[sQT] = YrG.get(sQT, (66 + -66)) + (38 + -37)\n        NqB = NqB + (30 + -29)\n    fEC = (51 + -51)\n    dgd = YrG\n    while fEC < len(dgd):\n        Dgo = dgd[fEC]\n        if YrG[Dgo] > (64 + -63):\n            YrG[Dgo] = (52 + -51)\n        fEC = fEC + (48 + -47)\n    return YrG\nassert nri(\"a\") == ", "input": "\"a\"", "output": "{'a': 1}"}
{"old_id": "sample_106", "code": "def ExF(igm):\n    count = len(igm)\n    mgG = (7 + -7)\n    LHZ = range((8 + -8), count)\n    while mgG < len(LHZ):\n        Mlj = LHZ[mgG]\n        igm.insert(Mlj, igm[Mlj]*(53 + -51))\n        mgG = mgG + (78 + -77)\n    return igm\nassert ExF([2, 8, -2, 9, 3, 3]) == ", "input": "[2, 8, -2, 9, 3, 3]", "output": "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]"}
{"old_id": "sample_107", "code": "def HVp(gEI):\n    Xio = []\n    MTn = (55 + -55)\n    SKP = range(len(gEI))\n    while MTn < len(SKP):\n        tZX = SKP[MTn]\n        if not gEI[tZX].isascii():\n            return False\n        elif gEI[tZX].isalnum():\n            Xio.append(gEI[tZX].upper())\n        else:\n            Xio.append(gEI[tZX])\n        MTn = MTn + (76 + -75)\n    return ''.join(Xio)\nassert HVp(\"ua6hajq\") == ", "input": "\"ua6hajq\"", "output": "'UA6HAJQ'"}
{"old_id": "sample_110", "code": "def Ucz(bCk):\n    qHo = ['']\n    OSZ = ''\n    Owo = (21 + -21)\n    zCv = bCk\n    while Owo < len(zCv):\n        vLb = zCv[Owo]\n        if not vLb.isspace():\n            qHo.append(OSZ)\n            OSZ = ''\n        else:\n            OSZ += vLb\n        Owo = Owo + (89 + -88)\n    return len(qHo)\nassert Ucz(\"       \") == ", "input": "\"       \"", "output": "1"}
{"old_id": "sample_111", "code": "def iRI(uhv):\n    CFW = (19 + -19)\n    OMT = (43 + 57)\n    lLa = (25 + -25)\n    Yhh = uhv.values()\n    while lLa < len(Yhh):\n        bVw = Yhh[lLa]\n        if bVw > CFW:\n            CFW = bVw\n        if bVw < OMT:\n            OMT = bVw\n        lLa = lLa + (19 + -18)\n    return CFW, OMT\nassert iRI({'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}) == ", "input": "{'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}", "output": "(89, 4)"}
{"old_id": "sample_112", "code": "def wBX(nyh):\n    hux = list(nyh)\n    uZa = (63 + -63)\n    wLl = hux\n    while uZa < len(wLl):\n        pvr = wLl[uZa]\n        if not pvr.istitle():\n            hux.remove(pvr)\n        uZa = uZa + (53 + -52)\n    return ''.join(hux)\nassert wBX('XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault') == ", "input": "'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'", "output": "'XYZLtRRdnHodLTTBIGGeXET fult'"}
{"old_id": "sample_113", "code": "def bhk(Fsb):\n    count = (41 + -41)\n    bGp = []\n    UOg = (97 + -97)\n    uuz = range(len(Fsb))\n    while UOg < len(uuz):\n        dfE = uuz[UOg]\n        count += (99 + -98)\n        if count%(1 + 1)==(47 + -47):\n            bGp.append(Fsb[dfE].swapcase())\n        else:\n            bGp.append(Fsb[dfE])\n        UOg = UOg + (48 + -47)\n    return ''.join(bGp)\nassert bhk(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\") == ", "input": "\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"", "output": "'987YhnShAShD 93275yRgsgBgssHfBsFB'"}
{"old_id": "sample_115", "code": "def zso(NWx):\n    mEJ = []\n    BsQ = (47 + -47)\n    oqR = NWx.encode('utf-8')\n    while BsQ < len(oqR):\n        epp = oqR[BsQ]\n        if epp == (94 + -33):\n            break\n        if epp == (11 + -11):\n            pass\n        mEJ.append(zso'{ch}; '.encode('utf-8'))\n        BsQ = BsQ + (97 + -96)\n    return Zgz''.join(mEJ)\nassert zso('os||agx5') == ", "input": "'os||agx5'", "output": "b'111; 115; 124; 124; 97; 103; 120; 53; '"}
{"old_id": "sample_116", "code": "def oqA(gOH, count):\n    aga = (50 + -50)\n    qeW = range(count)\n    while aga < len(qeW):\n        LCh = qeW[aga]\n        if gOH == {}:\n            break\n        gOH.popitem()\n        aga = aga + (17 + -16)\n    return gOH\nassert oqA({}, 200) == ", "input": "{}, 200", "output": "{}"}
{"old_id": "sample_117", "code": "def RfJ(jRz):\n    evi = (92 + -92)\n    tSw = range(len(jRz))\n    while evi < len(tSw):\n        gXK = tSw[evi]\n        if jRz.count('3') > (83 + -82):\n            return gXK\n        evi = evi + (5 + -4)\n    return -(19 + -18)\nassert RfJ(\"23157\") == ", "input": "\"23157\"", "output": "-1"}
{"old_id": "sample_118", "code": "def Rfx(FNF, Qgb):\n    MIX = (7 + -5)\n    Qee = ''\n    tHq = (94 + -94)\n    Mgc = range(MIX)\n    while tHq < len(Mgc):\n        QrH = Mgc[tHq]\n        Qee += Qgb\n        FNF = FNF.replace(Qee, '')\n        tHq = tHq + (40 + -39)\n    return FNF\nassert Rfx('zbzquiuqnmfkx', 'mk') == ", "input": "'zbzquiuqnmfkx', 'mk'", "output": "'zbzquiuqnmfkx'"}
{"old_id": "sample_119", "code": "def rRO(LWM):\n    tZS = \"\"\n    ahN = (34 + -34)\n    XGH = range(len(LWM))\n    while ahN < len(XGH):\n        bTe = XGH[ahN]\n        if bTe % (43 + -41) == (6 + -6):\n            tZS += LWM[bTe].swapcase()\n        else:\n            tZS += LWM[bTe]\n        ahN = ahN + (11 + -10)\n    return tZS\nassert rRO(\"vsnlygltaw\") == ", "input": "\"vsnlygltaw\"", "output": "'VsNlYgLtAw'"}
{"old_id": "sample_120", "code": "def Obd(VTD):\n    Daq = dict()\n    sGA = (17 + -17)\n    ifV = list(VTD.items())\n    while sGA < len(ifV):\n        oVz, CkW = ifV[sGA]\n        if CkW not in Daq:\n            Daq[CkW] = []\n        Daq[CkW].append(oVz)\n        sGA = sGA + (18 + -17)\n    return Daq\nassert Obd({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_123", "code": "def rct(SHN, New):\n    yEE = (31 + -31)\n    sLH = list(enumerate(SHN))\n    while yEE < len(sLH):\n        GZi, xbl = sLH[yEE]\n        if xbl > New and SHN[GZi - (41 + -40)] < New:\n            SHN.insert(GZi, New)\n        yEE = yEE + (27 + -26)\n    return SHN\nassert rct([1, 2, 3, 5, 8], 6) == ", "input": "[1, 2, 3, 5, 8], 6", "output": "[1, 2, 3, 5, 6, 8]"}
{"old_id": "sample_125", "code": "def kYz(yCT, mFj):\n    ztd = (97 + -97)\n    UOf = '*\\n\"'\n    while ztd < len(UOf):\n        MKM = UOf[ztd]\n        yCT = yCT.replace(MKM, '!' + str(mFj))\n        ztd = ztd + (21 + -20)\n    if yCT.startswith('!'):\n        yCT = yCT[len(str(mFj)):]\n    return yCT\nassert kYz('\"Leap and the net will appear', 123) == ", "input": "'\"Leap and the net will appear', 123", "output": "'3Leap and the net will appear'"}
{"old_id": "sample_128", "code": "def Iwn(yGU):\n    lJe = ''\n    Tjs = ''\n    GLj = (57 + -57)\n    WEn = list(enumerate(yGU))\n    while GLj < len(WEn):\n        NnA, gpz = WEn[GLj]\n        if NnA % (26 + -24) == (53 + -53):\n            Tjs += gpz\n        else:\n            lJe += gpz\n        GLj = GLj + (48 + -47)\n    return Tjs + lJe.lower()\nassert Iwn('Mammoth') == ", "input": "'Mammoth'", "output": "'Mmohamt'"}
{"old_id": "sample_130", "code": "def cul(tyN):\n    items = list(tyN.items())\n    wgd = (17 + -17)\n    DKE = range(len(items)-(40 + -38), -(76 + -75), -(24 + -23))\n    while wgd < len(DKE):\n        Yng = DKE[wgd]\n        gAH = items[Yng]\n        items[Yng] = items[Yng+(59 + -58)] \n        items[Yng+(4 + -3)] = gAH\n        wgd = wgd + (74 + -73)\n    return ['{}={}', '{1}={0}'][len(items) % (23 + -21)].format(\n        *tyN.keys(), **tyN\n    )\nassert cul({'l':4, 'h':6, 'o':9}) == ", "input": "{'l':4, 'h':6, 'o':9}", "output": "'h=l'"}
{"old_id": "sample_133", "code": "def Kms(CXo, wyF):\n    FqQ = []\n    npw = (94 + -94)\n    hPB = range(len(wyF))\n    while npw < len(hPB):\n        dgj = hPB[npw]\n        FqQ.append(CXo.pop())\n        npw = npw + (81 + -80)\n    return CXo\nassert Kms([7, 1, 2, 6, 0, 2], [9, 0, 3]) == ", "input": "[7, 1, 2, 6, 0, 2], [9, 0, 3]", "output": "[7, 1, 2]"}
{"old_id": "sample_134", "code": "def kRZ(Hve):\n    DsB = (16 + -16)\n    vdm = ''\n    OaN = list(map(int, str(Hve)))\n    fHe = (5 + -5)\n    CPc = OaN\n    while fHe < len(CPc):\n        xHo = CPc[fHe]\n        if xHo == (96 + -96): DsB += (19 + -18)\n        else: break\n        fHe = fHe + (54 + -53)\n    VDE = (85 + -85)\n    pUq = range(DsB)\n    while VDE < len(pUq):\n        SVU = pUq[VDE]\n        vdm += str((38 + -37)) + '0' + str((66 + -62))\n        VDE = VDE + (97 + -96)\n    vdm += str(Hve)\n    return vdm\nassert kRZ(372359) == ", "input": "372359", "output": "'372359'"}
{"old_id": "sample_137", "code": "def gOf(LSe):\n    count = (28 + -28)\n    TDe = (8 + -8)\n    pMQ = range(len(LSe))\n    while TDe < len(pMQ):\n        sBr = pMQ[TDe]\n        if len(LSe) == (10 + -10):\n            break\n        if count % (78 + -76) == (68 + -68):\n            LSe.pop()\n        else:\n            LSe.pop((100 + -100))\n        count += (66 + -65)\n        TDe = TDe + (70 + -69)\n    return LSe\nassert gOf([3, 2, 0, 0, 2, 3]) == ", "input": "[3, 2, 0, 0, 2, 3]", "output": "[]"}
{"old_id": "sample_138", "code": "def MfW(Yej, Png):\n    TeE = list(Png)\n    HrO = TeE.pop()\n    rzI = (91 + -91)\n    HIl = TeE\n    while rzI < len(HIl):\n        qYK = HIl[rzI]\n        Yej = Yej[(55 + -55):Yej.find(qYK)]+qYK+Yej[Yej.find(qYK)+(94 + -93):]\n        rzI = rzI + (35 + -34)\n    return Yej\nassert MfW('tflb omn rtt', 'm') == ", "input": "'tflb omn rtt', 'm'", "output": "'tflb omn rtt'"}
{"old_id": "sample_139", "code": "def NfY(kes, Usw):\n    if len(kes) < (89 + -79) or len(Usw) < (61 + -51):\n        return 'no'\n    MEb = (72 + -72)\n    fPS = range((57 + -52))\n    while MEb < len(fPS):\n        Tcn = fPS[MEb]\n        if kes[Tcn] != Usw[Tcn]:\n            return 'no'\n        MEb = MEb + (60 + -59)\n    kes.extend(Usw)\n    return kes\nassert NfY([1, 2, 1], [1, 1, 2]) == ", "input": "[1, 2, 1], [1, 1, 2]", "output": "'no'"}
{"old_id": "sample_144", "code": "def tAr(yAp):\n    Psh = []\n    lBm = (83 + -83)\n    Erd = yAp\n    while lBm < len(Erd):\n        DzA = Erd[lBm]\n        DzA.sort()\n        Psh.append(DzA)\n        lBm = lBm + (75 + -74)\n    return Psh\nassert tAr([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_146", "code": "def XNx(Vri):\n    krd = []\n    iSN = (80 + -80)\n    idh = range((11 + -10), (73 + -62))\n    while iSN < len(idh):\n        OwL = idh[iSN]\n        if OwL != Vri:\n            krd.append(OwL)\n        iSN = iSN + (44 + -43)\n    return krd\nassert XNx(5) == ", "input": "5", "output": "[1, 2, 3, 4, 6, 7, 8, 9, 10]"}
{"old_id": "sample_149", "code": "def iOH(LHb, Kfw):\n    Aya = ''\n    gQu = (14 + -14)\n    dMV = LHb\n    while gQu < len(dMV):\n        GRW = dMV[gQu]\n        Aya += dict.fromkeys(str(GRW), Kfw * len(str(GRW))).popitem()[(39 + -39)] + Kfw\n        gQu = gQu + (30 + -29)\n    return Aya\nassert iOH((32332, 23543, 132323, 33300), ',') == ", "input": "(32332, 23543, 132323, 33300), ','", "output": "'2,4,2,0,'"}
{"old_id": "sample_150", "code": "def MFd(sXK, index):\n    pNd = (100 + -100)\n    TmZ = sXK[index:]\n    while pNd < len(TmZ):\n        Tqu = TmZ[pNd]\n        sXK.insert(index, Tqu)\n        index += (6 + -5)\n        pNd = pNd + (31 + -30)\n    return sXK[:index]\nassert MFd([-2, 4, -4], 0) == ", "input": "[-2, 4, -4], 0", "output": "[-2, 4, -4]"}
{"old_id": "sample_151", "code": "def LBG(MCb):\n    zxi = (15 + -15)\n    MBJ = MCb\n    while zxi < len(MBJ):\n        hxM = MBJ[zxi]\n        if hxM.isdigit():\n            if hxM == '0':\n                hxM = '.'\n            else:\n                hxM = '0' if hxM != '1' else '.'\n        zxi = zxi + (27 + -26)\n    return ''.join(list(MCb)).replace('.', '0')\nassert LBG('697 this is the ultimate 7 address to attack') == ", "input": "'697 this is the ultimate 7 address to attack'", "output": "'697 this is the ultimate 7 address to attack'"}
{"old_id": "sample_152", "code": "def zLA(jkw):\n    QEH = (23 + -23)\n    sWg = (84 + -84)\n    lLd = jkw\n    while sWg < len(lLd):\n        MKv = lLd[sWg]\n        if MKv.isupper():\n            QEH += (97 + -96)\n        sWg = sWg + (51 + -50)\n    return QEH\nassert zLA(''.join(['A'] * 20)) == ", "input": "''.join(['A'] * 20)", "output": "20"}
{"old_id": "sample_155", "code": "def xnO(MHx, RQN):\n    cre = (97 + -97)\n    Rkg = ''\n    JHb = (52 + -52)\n    Kub = MHx\n    while JHb < len(Kub):\n        SIP = Kub[JHb]\n        if cre == RQN:\n            Rkg += '\\n'\n            cre = (82 + -82)\n        cre += (17 + -16)\n        Rkg += SIP\n        JHb = JHb + (73 + -72)\n    return Rkg\nassert xnO(\"dskjs hjcdjnxhjicnn\", 4) == ", "input": "\"dskjs hjcdjnxhjicnn\", 4", "output": "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'"}
{"old_id": "sample_157", "code": "def JNX(ASQ):\n    IFg = (30 + -30)\n    VjR = (72 + -72)\n    pTX = ASQ.split()\n    while VjR < len(pTX):\n        SbK = pTX[VjR]\n        rJe = (83 + -83)\n        jJo = SbK\n        while rJe < len(jJo):\n            kkh = jJo[rJe]\n            if kkh == \"0\":\n                IFg += (27 + -26)\n            rJe = rJe + (63 + -62)\n        VjR = VjR + (89 + -88)\n    return IFg\nassert JNX(\"aboba 212 has 0 digits\") == ", "input": "\"aboba 212 has 0 digits\"", "output": "1"}
{"old_id": "sample_158", "code": "def HWb(poY):\n    sMG = [IOI for IOI in poY if IOI%(76 + -74) == (83 + -83)]\n    ASs = sMG+poY\n    kBW = (20 + -20)\n    ihK = ASs\n    while kBW < len(ihK):\n        ZVm = ihK[kBW]\n        if ASs.index(ZVm) >= len(sMG):\n            ASs.remove(ZVm)\n        kBW = kBW + (88 + -87)\n    return ASs\nassert HWb([3, 6, 4, -2, 5]) == ", "input": "[3, 6, 4, -2, 5]", "output": "[6, 4, -2, 6, 4, -2]"}
{"old_id": "sample_159", "code": "def JcJ(JFY):\n    ERm = ''\n    yLv = (95 + -95)\n    IGp = reversed(JFY)\n    while yLv < len(IGp):\n        mpS = IGp[yLv]\n        ERm += mpS.swapcase()\n        yLv = yLv + (81 + -80)\n    return ERm\nassert JcJ('RTiGM') == ", "input": "'RTiGM'", "output": "'mgItr'"}
{"old_id": "sample_162", "code": "def Pau(GYB):\n    kvL = ''\n    LGP = (97 + -97)\n    Sik = GYB\n    while LGP < len(Sik):\n        blS = Sik[LGP]\n        if blS.isalnum():\n            kvL += blS.upper()\n        LGP = LGP + (15 + -14)\n    return kvL\nassert Pau('с bishop.Swift') == ", "input": "'с bishop.Swift'", "output": "'СBISHOPSWIFT'"}
{"old_id": "sample_166", "code": "def Sxg(VWT):\n    uug = {}\n    pDh = (50 + -50)\n    eYZ = list(VWT.items())\n    while pDh < len(eYZ):\n        CRA, WOr = eYZ[pDh]\n        uug[CRA] = {}\n        Jul = (57 + -57)\n        wYo = WOr\n        while Jul < len(wYo):\n            CxH = wYo[Jul]\n            uug[CRA][CxH] = ''\n            Jul = Jul + (46 + -45)\n        pDh = pDh + (86 + -85)\n    return uug\nassert Sxg({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_169", "code": "def AEq(DJo):\n    zmm = list(DJo)\n    DDY = (len(DJo) - (3 + -2)) * (78 + -76)\n    VZe = (62 + -62)\n    Boh = range((82 + -81), DDY+(63 + -62))\n    while VZe < len(Boh):\n        qjF = Boh[VZe]\n        if qjF % (99 + -97):\n            zmm.append('+')\n        else:\n            zmm.insert((8 + -8), '+')\n        VZe = VZe + (32 + -31)\n    return ''.join(zmm).rjust(DDY)\nassert AEq('taole') == ", "input": "'taole'", "output": "'++++taole++++'"}
{"old_id": "sample_171", "code": "def RKG(hNz):\n    count = len(hNz) // (79 + -77)\n    iNI = (37 + -37)\n    ApL = range(count)\n    while iNI < len(ApL):\n        UrX = ApL[iNI]\n        hNz.pop((23 + -23))\n        iNI = iNI + (65 + -64)\n    return hNz\nassert RKG([3, 4, 1, 2, 3]) == ", "input": "[3, 4, 1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_172", "code": "def oUJ(fHp):\n    cEG = (78 + -78)\n    UyO = range(len(fHp))\n    while cEG < len(UyO):\n        Cmx = UyO[cEG]\n        if fHp[Cmx] < (61 + -61):\n            fHp.pop(Cmx)\n        cEG = cEG + (9 + -8)\n    return fHp\nassert oUJ([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_173", "code": "def IIl(kOj):\n    YPW = len(kOj)\n    ZXX = []\n    wQV = (96 + -96)\n    qAp = range(YPW)\n    while wQV < len(qAp):\n        uhT = qAp[wQV]\n        ZXX.append(kOj.pop())\n        wQV = wQV + (41 + -40)\n    return ZXX\nassert IIl([5, 8, 6, 8, 4]) == ", "input": "[5, 8, 6, 8, 4]", "output": "[4, 8, 6, 8, 5]"}
{"old_id": "sample_175", "code": "def gIw(xLG, vGI):\n    pUr = xLG.splitlines()\n    uXz = max(map(lambda kuI: kuI.rfind(' '), pUr))\n    IjG = [[kuI, (uXz + (12 + -11)) * vGI - kuI.rfind(' ')] for kuI in pUr]\n    Ntu = (34 + -34)\n    Mst = list(enumerate(IjG))\n    while Ntu < len(Mst):\n        Weu, xUU = Mst[Ntu]\n        IjG[Weu][(90 + -90)] = xUU[(67 + -67)] + ' ' * xUU[(39 + -38)]\n        Ntu = Ntu + (87 + -86)\n    return '\\n'.join(map(lambda kuI: kuI[(17 + -17)], IjG))\nassert gIw('\\n', 2) == ", "input": "'\\n', 2", "output": "' '"}
{"old_id": "sample_177", "code": "def yDG(gTl):\n    gTl = list(gTl)\n    GLb = (70 + -70)\n    kZw = range(len(gTl))\n    while GLb < len(kZw):\n        xrG = kZw[GLb]\n        if xrG % (82 + -80) == (8 + -7):\n            gTl[xrG] = gTl[xrG].swapcase()\n        GLb = GLb + (41 + -40)\n    return ''.join(gTl)\nassert yDG('Hey DUdE THis $nd^ &*&this@#') == ", "input": "'Hey DUdE THis $nd^ &*&this@#'", "output": "'HEy Dude tHIs $Nd^ &*&tHiS@#'"}
{"old_id": "sample_179", "code": "def mbP(AES):\n    # ajn in iUn copy Oyv RHq yLK AES\n    AES = AES[:]\n    count = len(AES)\n    gWl = (11 + -11)\n    zwT = range(-count+(19 + -18), (65 + -65))\n    while gWl < len(zwT):\n        zYG = zwT[gWl]\n        AES.insert((90 + -90), AES[zYG])\n        gWl = gWl + (17 + -16)\n    return AES\nassert mbP([7, 1, 2, 6, 0, 2]) == ", "input": "[7, 1, 2, 6, 0, 2]", "output": "[2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2]"}
{"old_id": "sample_181", "code": "def PNR(Byb):\n    count = (23 + -23)\n    poC = \"\"\n    zla = (86 + -86)\n    OUF = Byb\n    while zla < len(OUF):\n        daR = OUF[zla]\n        if daR.isdigit():\n            count += (100 + -99)\n            poC += daR\n        zla = zla + (4 + -3)\n    return [poC, count]\nassert PNR(\"qwfasgahh329kn12a23\") == ", "input": "\"qwfasgahh329kn12a23\"", "output": "['3291223', 7]"}
{"old_id": "sample_183", "code": "def ntT(SEL):\n    Vbu = SEL.split()\n    mVU = \" \".join(Vbu[::(79 + -76)]).splitlines()\n    MUR = []\n    rJr = (69 + -69)\n    Moo = range((1 + 1))\n    while rJr < len(Moo):\n        kru = Moo[rJr]\n        GlE = Vbu[(8 + -7)::(9 + -6)]\n        if (97 + -94) * kru + (70 + -69) < len(GlE):\n            MUR.append(\" \".join(GlE[(47 + -44) * kru:(62 + -59) * (kru + (7 + -6))]))\n        rJr = rJr + (88 + -87)\n    return mVU + MUR\nassert ntT(\"echo hello!!! nice!\") == ", "input": "\"echo hello!!! nice!\"", "output": "['echo']"}
{"old_id": "sample_184", "code": "def kTc(WYQ):\n    WYQ.reverse()\n    if len(WYQ) < (68 + -66):\n        return WYQ\n    CSj = (83 + -83)\n    NvU = range((87 + -87), len(WYQ), (69 + -67))\n    while CSj < len(NvU):\n        rUW = NvU[CSj]\n        WYQ[rUW], WYQ[rUW+(10 + -9)] = WYQ[rUW+(59 + -58)], WYQ[rUW]\n        CSj = CSj + (59 + -58)\n    return WYQ\nassert kTc([1,2]) == ", "input": "[1,2]", "output": "[1, 2]"}
{"old_id": "sample_185", "code": "def wjC(Ncw):\n    pfW = len(Ncw)\n    Efb = (73 + -73)\n    gnc = range((87 + -86), pfW//(3 + -1) + (36 + -35))\n    while Efb < len(gnc):\n        aDH = gnc[Efb]\n        UbM = aDH - (46 + -45)\n        iRQ = pfW - aDH\n        while UbM < iRQ:\n            # dMr Yyx:\n            Ncw[UbM], Ncw[iRQ] = Ncw[iRQ], Ncw[UbM]\n            # update UbM, iRQ:\n            UbM += (58 + -57)\n            iRQ -= (11 + -10)\n        Efb = Efb + (45 + -44)\n    return Ncw\nassert wjC([16, 14, 12, 7, 9, 11]) == ", "input": "[16, 14, 12, 7, 9, 11]", "output": "[11, 14, 7, 12, 9, 16]"}
{"old_id": "sample_187", "code": "def FHW(Pnb, index):\n    nSL = len(Pnb.items())\n    orb = index % nSL\n    aaj = Pnb.popitem()[(9 + -8)]\n    mdu = (23 + -23)\n    iVh = range(orb)\n    while mdu < len(iVh):\n        zIp = iVh[mdu]\n        Pnb.popitem()\n        mdu = mdu + (23 + -22)\n    return aaj\nassert FHW({27:39}, 1) == ", "input": "{27:39}, 1", "output": "39"}
{"old_id": "sample_188", "code": "def BYv(Wxc):\n    MxH = []\n    Ndm = (97 + -97)\n    zha = Wxc\n    while Ndm < len(zha):\n        pJv = zha[Ndm]\n        HzP = pJv[:(74 + -72)]\n        if HzP.startswith('a') or HzP.startswith('p'):\n            MxH.append(HzP)\n        Ndm = Ndm + (1 + 0)\n\n    return MxH\nassert BYv([\"a\", \"b\", \"car\", \"d\"]) == ", "input": "[\"a\", \"b\", \"car\", \"d\"]", "output": "['a']"}
{"old_id": "sample_189", "code": "def jgg(FMi, Ilb):\n    HWx = (74 + -74)\n    NRT = Ilb\n    while HWx < len(NRT):\n        kZi = NRT[HWx]\n        FMi.format_map(Ilb)\n        if len(uGQ.zuI(FDm'{\\w}', FMi)) == (51 + -51):\n            break\n        Ilb[kZi][(25 + -24)] = Ilb[kZi][(73 + -72)][::-(86 + -85)]\n        HWx = HWx + (29 + -28)\n    return FMi\nassert jgg(\"{{{{}}}}\", {}) == ", "input": "\"{{{{}}}}\", {}", "output": "'{{{{}}}}'"}
{"old_id": "sample_190", "code": "def xnP(yPK):\n    tNP = ''\n    nKA = (20 + -20)\n    yMF = yPK\n    while nKA < len(yMF):\n        pHC = yMF[nKA]\n        if(pHC.islower()):\n            tNP += pHC\n        nKA = nKA + (63 + -62)\n    return tNP\nassert xnP('980jio80jic kld094398IIl ') == ", "input": "'980jio80jic kld094398IIl '", "output": "'jiojickldl'"}
{"old_id": "sample_195", "code": "def vmO(dps):\n    Mqz = (16 + -16)\n    qdV = ['acs', 'asp', 'scn']\n    while Mqz < len(qdV):\n        eby = qdV[Mqz]\n        dps = dps.removeprefix(eby) + ' '\n        Mqz = Mqz + (45 + -44)\n    return dps.removeprefix(' ')[:-(68 + -67)]\nassert vmO('ilfdoirwirmtoibsac') == ", "input": "'ilfdoirwirmtoibsac'", "output": "'ilfdoirwirmtoibsac  '"}
{"old_id": "sample_201", "code": "def MOe(syw):\n    msm = []\n    xEr = (87 + -87)\n    IVQ = syw\n    while xEr < len(IVQ):\n        gpP = IVQ[xEr]\n        if gpP.isdigit():\n            msm.append(gpP)\n        xEr = xEr + (63 + -62)\n    return ''.join(msm[::-(77 + -76)])\nassert MOe('--4yrw 251-//4 6p') == ", "input": "'--4yrw 251-//4 6p'", "output": "'641524'"}
{"old_id": "sample_205", "code": "def yir(Mof):\n    aHO = (14 + -14)\n    aeO = range((93 + -83))\n    while aHO < len(aeO):\n        EME = aeO[aHO]\n        rxX = (80 + -80)\n        fEf = range(len(Mof))\n        while rxX < len(fEf):\n            LsW = fEf[rxX]\n            if Mof[LsW] != '#':\n                Mof = Mof[LsW:]\n                break\n            rxX = rxX + (70 + -69)\n        aHO = aHO + (88 + -87)\n    while Mof[-(23 + -22)] == '#':\n        Mof = Mof[:-(65 + -64)]\n    return Mof\nassert yir(\"##fiu##nk#he###wumun##\") == ", "input": "\"##fiu##nk#he###wumun##\"", "output": "'fiu##nk#he###wumun'"}
{"old_id": "sample_207", "code": "def yYi(Ilv):\n    GQg = {}\n    OPf = (40 + -40)\n    cVc = Ilv\n    while OPf < len(cVc):\n        xrI = cVc[OPf]\n        GQg.update(xrI)\n        OPf = OPf + (13 + -12)\n    return GQg\nassert yYi([{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]) == ", "input": "[{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]", "output": "{'brown': 2, 'blue': 5, 'bright': 4}"}
{"old_id": "sample_208", "code": "def rSA(items):\n    GHt = []\n    LSc = (39 + -39)\n    OHl = items\n    while LSc < len(OHl):\n        XQV = OHl[LSc]\n        PzS = (12 + -12)\n        mYJ = XQV\n        while PzS < len(mYJ):\n            feX = mYJ[PzS]\n            if not feX.isdigit():\n                GHt.append(feX)\n            PzS = PzS + (80 + -79)\n        LSc = LSc + (15 + -14)\n    return GHt\nassert rSA(['123', 'cat', 'd dee']) == ", "input": "['123', 'cat', 'd dee']", "output": "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']"}
{"old_id": "sample_211", "code": "def rZh(qPU):\n    count = (74 + -74)\n    jQc = (42 + -42)\n    Mwj = qPU\n    while jQc < len(Mwj):\n        kJc = Mwj[jQc]\n        if qPU.rindex(kJc) != qPU.index(kJc):\n            count+=(69 + -68)\n        jQc = jQc + (57 + -56)\n    return count\nassert rZh(\"abca dea ead\") == ", "input": "\"abca dea ead\"", "output": "10"}
{"old_id": "sample_212", "code": "def PMj(Oya):\n    JEf = (74 + -74)\n    SYr = range(len(Oya) - (95 + -94))\n    while JEf < len(SYr):\n        JWN = SYr[JEf]\n        Oya.reverse()\n        JEf = JEf + (75 + -74)\n    return Oya\nassert PMj([1, -9, 7, 2, 6, -3, 3]) == ", "input": "[1, -9, 7, 2, 6, -3, 3]", "output": "[1, -9, 7, 2, 6, -3, 3]"}
{"old_id": "sample_216", "code": "def ebd(GCa):\n    count = (37 + -37)\n    iJq = (57 + -57)\n    Upn = GCa\n    while iJq < len(Upn):\n        amb = Upn[iJq]\n        if amb.isdigit():\n            count += (37 + -36)\n        iJq = iJq + (97 + -96)\n    return count\nassert ebd(\"dp ef1 gh2\") == ", "input": "\"dp ef1 gh2\"", "output": "2"}
{"old_id": "sample_219", "code": "def ZUY(knA, kfh):\n    xKU = (65 + -65)\n    pii = range((57 + -57), len(kfh)+len(knA))\n    while xKU < len(pii):\n        fyl = pii[xKU]\n        knA += knA[(69 + -69)]\n        if knA.find(kfh) >= (60 + -60):\n            return True\n        xKU = xKU + (76 + -75)\n    return False\nassert ZUY(\"Hello\", \")\") == ", "input": "\"Hello\", \")\"", "output": "False"}
{"old_id": "sample_220", "code": "def WgC(qil, hdw, hAN):\n    qil = \"{}{}{}\".format(qil, qil[:hdw], qil[hAN:])\n    JLJ = \"\"\n    wVB = (20 + -20)\n    IbY = range(hAN, len(qil)-hdw)\n    while wVB < len(IbY):\n        lkg = IbY[wVB]\n        JLJ = qil[lkg] + JLJ\n        wVB = wVB + (39 + -38)\n    return JLJ\nassert WgC(\"abcdefgabc\", 1, 2) == ", "input": "\"abcdefgabc\", 1, 2", "output": "'bagfedcacbagfedc'"}
{"old_id": "sample_223", "code": "def bFh(gRw, lwg):\n    count, hHA = (75 + -75), (35 + -34)\n    EqL = (10 + -10)\n    BTF = range((86 + -85), len(gRw))\n    while EqL < len(BTF):\n        WiJ = BTF[EqL]\n        if ((gRw[WiJ] > gRw[WiJ-(37 + -36)]) and (gRw[WiJ] <= lwg)): count += hHA\n        elif gRw[WiJ] <= gRw[WiJ-(5 + -4)]: hHA = (73 + -72)\n        else: hHA += (51 + -50)\n        EqL = EqL + (92 + -91)\n    return count\nassert bFh([1, 2, -1, 4], 2) == ", "input": "[1, 2, -1, 4], 2", "output": "1"}
{"old_id": "sample_226", "code": "def jbh(wVm):\n    kAS = (17 + -17)\n    gUO = range(len(wVm))\n    while kAS < len(gUO):\n        Sxh = gUO[kAS]\n        if wVm[Sxh] % (63 + -60) == (75 + -75):\n            wVm.append(wVm[Sxh])\n        kAS = kAS + (84 + -83)\n    return wVm\nassert jbh([1, 3]) == ", "input": "[1, 3]", "output": "[1, 3, 3]"}
{"old_id": "sample_229", "code": "def AGA(UCe, hKq):\n    ZWQ = []\n    fAY = (99 + -99)\n    Gfr = UCe\n    while fAY < len(Gfr):\n        DaG = Gfr[fAY]\n        ZWQ.append(DaG[(94 + -94)])\n        if DaG[(92 + -91)] == hKq:\n            ZWQ.reverse()\n        else:\n            ZWQ.append(DaG[(42 + -41)])\n        fAY = fAY + (86 + -85)\n    return ZWQ\nassert AGA({'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1) == ", "input": "{'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1", "output": "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']"}
{"old_id": "sample_232", "code": "def lNY(RLn, BGf):\n    ZiS = ''\n    count = (34 + -34)\n    BGf = list(BGf)\n    VZJ = (16 + -16)\n    ogN = RLn\n    while VZJ < len(ogN):\n        RDh = ogN[VZJ]\n        ZiS += RDh if RDh in 'e' else BGf[count % len(BGf)]\n        count += ((74 + -73) if RDh not in 'e' else (38 + -38))\n        VZJ = VZJ + (56 + -55)\n    return ZiS\nassert lNY('fssnvd', 'yes') == ", "input": "'fssnvd', 'yes'", "output": "'yesyes'"}
{"old_id": "sample_233", "code": "def sxg(qfA):\n    RdC = (29 + -29)\n    Mjx = reversed(range(-len(qfA)-(32 + -31), -(50 + -49)))\n    while RdC < len(Mjx):\n        wpt = Mjx[RdC]\n        qfA.insert(wpt, qfA.pop((70 + -70)))\n        RdC = RdC + (75 + -74)\n    return qfA\nassert sxg([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_235", "code": "def HZA(UCL, uIM):\n    yTc = []\n    sNb = (10 + -10)\n    OLC = uIM\n    while sNb < len(OLC):\n        PXi = OLC[sNb]\n        yTc += list(filter(lambda mdC: mdC != '', PXi.split(uIM[UCL.index(PXi)])))\n        sNb = sNb + (52 + -51)\n    return yTc\nassert HZA([], []) == ", "input": "[], []", "output": "[]"}
{"old_id": "sample_236", "code": "def vHR(UzP):\n    if len(UzP) == (87 + -86):\n        return ''.join(UzP)\n    HVc = list(UzP)\n    fZO = (17 + -17)\n    while fZO < len(UzP)-(33 + -32):\n        rmK = (6 + -6)\n        ocW = range((88 + -86))\n        while rmK < len(ocW):\n            KlE = ocW[rmK]\n            HVc[fZO*(33 + -31)] = UzP[fZO]\n            fZO += (99 + -98)\n            rmK = rmK + (31 + -30)\n    return ''.join(HVc)\nassert vHR(['ac8', 'qk6', '9wg']) == ", "input": "['ac8', 'qk6', '9wg']", "output": "'ac8qk6qk6'"}
{"old_id": "sample_238", "code": "def mxa(SNG, swz):\n    NgI = (44 + -44)\n    OKP = (11 + -11)\n    eOU = SNG\n    while OKP < len(eOU):\n        Tfh = eOU[OKP]\n        if Tfh[(34 + -34)] == swz:\n            NgI = Tfh\n        OKP = OKP + (49 + -48)\n    return NgI\nassert mxa([[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1) == ", "input": "[[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1", "output": "[1, 9, 4]"}
{"old_id": "sample_244", "code": "def Jqm(olF, SjR):\n    count = (14 + -14)\n    if SjR:\n        xXf = (17 + -17)\n        JXt = SjR\n        while xXf < len(JXt):\n            Qfv = JXt[xXf]\n            count += (31 + -30)\n            xXf = xXf + (63 + -62)\n        olF = olF * count\n    return olF.rjust(len(olF) + count*(42 + -40))[:-(60 + -58)]\nassert Jqm('', 'BC1ty') == ", "input": "'', 'BC1ty'", "output": "'        '"}
{"old_id": "sample_246", "code": "def YQs(fbr, mHy):\n    wcc = (53 + -53)\n    lDo = range(fbr.find(mHy), -(100 + -99), -(11 + -10))\n    while wcc < len(lDo):\n        YAJ = lDo[wcc]\n        if fbr[YAJ:] == mHy:\n            return YAJ\n        wcc = wcc + (66 + -65)\n    return -(75 + -74)\nassert YQs(\"345gerghjehg\", \"345\") == ", "input": "\"345gerghjehg\", \"345\"", "output": "-1"}
{"old_id": "sample_249", "code": "def FMR(eJW):\n    count = {}\n    rAT = (60 + -60)\n    dDS = eJW\n    while rAT < len(dDS):\n        iyr = dDS[rAT]\n        if iyr.islower():\n            count[iyr.lower()] = eJW.count(iyr.lower()) + count.get(iyr.lower(), (5 + -5))\n        else:\n            count[iyr.lower()] = eJW.count(iyr.upper()) + count.get(iyr.lower(), (56 + -56))\n        rAT = rAT + (26 + -25)\n    return count\nassert FMR(\"FSA\") == ", "input": "\"FSA\"", "output": "{'f': 1, 's': 1, 'a': 1}"}
{"old_id": "sample_250", "code": "def cbU(KNW):\n    count = len(KNW)\n    Yga = (51 + -51)\n    OiZ = range(-count+(73 + -72), (74 + -74))\n    while Yga < len(OiZ):\n        bRN = OiZ[Yga]\n        KNW = KNW + KNW[bRN]\n        Yga = Yga + (88 + -87)\n    return KNW\nassert cbU('wlace A') == ", "input": "'wlace A'", "output": "'wlace Alc l  '"}
{"old_id": "sample_251", "code": "def gvx(iZg):\n    WyN = \"+353\"\n    uHt = []\n    ZeL = (99 + -99)\n    lxQ = iZg\n    while ZeL < len(lxQ):\n        PAI = lxQ[ZeL]\n        PAI.extend(WyN)\n        uHt.append(\";\".join(PAI))\n        ZeL = ZeL + (34 + -33)\n    return \". \".join(uHt)\nassert gvx([['Marie','Nelson','Oscar']]) == ", "input": "[['Marie','Nelson','Oscar']]", "output": "'Marie;Nelson;Oscar;+;3;5;3'"}
{"old_id": "sample_257", "code": "def ZAB(vYp):\n    Nuj = []\n    vQl = (79 + -79)\n    egB = vYp\n    while vQl < len(egB):\n        DIr = egB[vQl]\n        Nuj.append(DIr.splitlines())\n        vQl = vQl + (80 + -79)\n    return Nuj\nassert ZAB(['Hello World\\n\"I am String\"']) == ", "input": "['Hello World\\n\"I am String\"']", "output": "[['Hello World', '\"I am String\"']]"}
{"old_id": "sample_258", "code": "vhx = [(97 + -96), (17 + -15), (18 + -11), (49 + -41), (8 + 1)]\nzTm = [(3 + -2), (83 + -81), (7 + 0), (57 + -48)]\ndef Zum(XmQ, TEY, aWi, uvd):\n    XmQ.insert(aWi, TEY)\n    hnn = (1 + -1)\n    GQy = range(aWi-(45 + -44), (66 + -66), -uvd)\n    while hnn < len(GQy):\n        qbG = GQy[hnn]\n        aWi -= (58 + -57)\n        XmQ.insert(aWi, XmQ.pop(XmQ.index(TEY)-(42 + -41)))\n        hnn = hnn + (24 + -23)\n    return XmQ\nassert Zum(zTm[:], 3, 3, 2) == ", "input": "thigh_o_two[:], 3, 3, 2", "output": "[1, 2, 7, 3, 9]"}
{"old_id": "sample_259", "code": "def GLS(wUu):\n    KCR = []\n    CXO = (90 + -90)\n    Fom = wUu\n    while CXO < len(Fom):\n        cxq = Fom[CXO]\n        if cxq.isupper():\n            KCR.insert(len(KCR) // (86 + -84), cxq)\n        CXO = CXO + (27 + -26)\n    if len(KCR) == (93 + -93):\n        KCR = ['-']\n    return ''.join(KCR)\nassert GLS('String matching is a big part of RexEx library.') == ", "input": "'String matching is a big part of RexEx library.'", "output": "'RES'"}
{"old_id": "sample_261", "code": "def dWM(YJM, GTw):\n    rXQ, aLs = [], []\n    umK = (57 + -57)\n    oBN = YJM\n    while umK < len(oBN):\n        boz = oBN[umK]\n        if boz < GTw:\n            rXQ.append(boz)\n        else:\n            aLs.append(boz)\n        umK = umK + (80 + -79)\n    rXQ.clear()\n    return rXQ, aLs\nassert dWM([12, 516, 5, 2, 3, 214, 51], 5) == ", "input": "[12, 516, 5, 2, 3, 214, 51], 5", "output": "([], [12, 516, 5, 214, 51])"}
{"old_id": "sample_262", "code": "def xlC(Wfp):\n    count = len(Wfp)\n    JJI = {(28 + -28): \"F\", (85 + -84): \"E\", (26 + -24): \"D\", (50 + -47): \"C\", (43 + -39): \"B\", (100 + -95): \"A\", (91 + -85): \"\"}\n    daM = []\n    gEQ = (57 + -57)\n    HLY = range(count)\n    while gEQ < len(HLY):\n        BFI = HLY[gEQ]\n        daM.append(JJI.get(Wfp[BFI]))\n        gEQ = gEQ + (36 + -35)\n    return ''.join(daM)\nassert xlC([4, 5]) == ", "input": "[4, 5]", "output": "'BA'"}
{"old_id": "sample_263", "code": "def HTk(Jqs, YBX):\n    TDS = (36 + -36)\n    Mjf = range(len(YBX))\n    while TDS < len(Mjf):\n        wCE = Mjf[TDS]\n        bVf = (21 + -21)\n        DYo = range(len(Jqs))\n        while bVf < len(DYo):\n            iQS = DYo[bVf]\n            if Jqs[iQS] == YBX[wCE][(39 + -39)]:\n                assert YBX[wCE][(86 + -85)] != Jqs[iQS]\n                Jqs[iQS] = YBX[wCE][(12 + -11)]\n            bVf = bVf + (99 + -98)\n        TDS = TDS + (80 + -79)\n    return Jqs\nassert HTk([\"gloss\", \"banana\", \"barn\", \"lawn\"], []) == ", "input": "[\"gloss\", \"banana\", \"barn\", \"lawn\"], []", "output": "['gloss', 'banana', 'barn', 'lawn']"}
{"old_id": "sample_265", "code": "def WAo(wNf, Qzo):\n    Mxn = {}\n    IHD = (78 + -78)\n    ElC = list(wNf.items())\n    while IHD < len(ElC):\n        cBE, Ili = ElC[IHD]\n        if cBE < Qzo:\n            Mxn[cBE] = Ili\n        IHD = IHD + (71 + -70)\n    return Mxn\nassert WAo({1: 2, 2: 4, 3: 3}, 3) == ", "input": "{1: 2, 2: 4, 3: 3}, 3", "output": "{1: 2, 2: 4}"}
{"old_id": "sample_266", "code": "def EaY(LQy):\n    Svp = (10 + -10)\n    pIi = range(len(LQy)-(68 + -67), -(80 + -79), -(62 + -61))\n    while Svp < len(pIi):\n        Vrj = pIi[Svp]\n        if LQy[Vrj] % (74 + -72) == (76 + -75):\n            LQy.insert(Vrj+(70 + -69), LQy[Vrj])\n        Svp = Svp + (32 + -31)\n    return LQy\nassert EaY([2, 3, 4, 6, -2]) == ", "input": "[2, 3, 4, 6, -2]", "output": "[2, 3, 3, 4, 6, -2]"}
{"old_id": "sample_268", "code": "def lSE(VSr, Nem):\n    mEh = (13 + -13)\n    YfJ = range(len(VSr))\n    while mEh < len(YfJ):\n        axb = YfJ[mEh]\n        if VSr[axb] == Nem:\n            ZDl = list(VSr)\n            ZDl[axb] = '/'\n            return ' '.join(ZDl)\n        mEh = mEh + (64 + -63)\nassert lSE('h grateful k', ' ') == ", "input": "'h grateful k', ' '", "output": "'h / g r a t e f u l   k'"}
{"old_id": "sample_269", "code": "def CTS(qlT):\n    Zln = (len(qlT) - (16 + -15)) % (58 + -55)\n    AFa = (65 + -65)\n    MKk = range(Zln)\n    while AFa < len(MKk):\n        Ddn = MKk[AFa]\n        qlT[Ddn] = '0'\n        AFa = AFa + (70 + -69)\n    YYc = (22 + -22)\n    vVP = range(Zln + (15 + -14), len(qlT), (90 + -87))\n    while YYc < len(vVP):\n        Ddn = vVP[YYc]\n        qlT[Ddn - (83 + -82):Ddn + (42 + -40)] = ['0', '0', '0']\n        YYc = YYc + (67 + -66)\n    return qlT\nassert CTS([9, 2]) == ", "input": "[9, 2]", "output": "['0', 2]"}
{"old_id": "sample_270", "code": "def ypD(sqj):\n    Gcr = {}\n    hBj = (92 + -92)\n    azd = sqj\n    while hBj < len(azd):\n        gbY = azd[hBj]\n        Gcr[gbY] = sqj.popitem(jSx = False)[(49 + -48)]\n        hBj = hBj + (75 + -74)\n    return Gcr\nassert ypD({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_272", "code": "def JYr(omt, QIF):\n    omt.extend(QIF)\n    Tpm = omt.copy()\n    NKx = (29 + -29)\n    qwK = range(-len(QIF), (67 + -67))\n    while NKx < len(qwK):\n        vCX = qwK[NKx]\n        Tpm.append(Tpm[vCX])\n        NKx = NKx + (13 + -12)\n    return Tpm\nassert JYr([9, 7, 5, 3, 1], [2, 4, 6, 8, 0]) == ", "input": "[9, 7, 5, 3, 1], [2, 4, 6, 8, 0]", "output": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6]"}
{"old_id": "sample_273", "code": "def WHC(Oek):\n    nkq =''\n    Oek = Oek[::-(58 + -57)]\n    Zfz = (30 + -30)\n    mZw = range(len(Oek))\n    while Zfz < len(mZw):\n        hce = mZw[Zfz]\n        bbI = Oek[hce]\n        if bbI !='.' and  nkq.count('.')<(15 + -13):\n            nkq=bbI+nkq\n        else:\n            break\n        Zfz = Zfz + (98 + -97)\n    return nkq\nassert WHC('.NET') == ", "input": "'.NET'", "output": "'NET'"}
{"old_id": "sample_274", "code": "def orR(fxN, bos):\n    count = (12 + -12)\n    jdv = (61 + -61)\n    QRL = fxN\n    while jdv < len(QRL):\n        url = QRL[jdv]\n        xWP = (33 + -33)\n        fIl = fxN\n        while xWP < len(fIl):\n            shz = fIl[xWP]\n            count += (url+shz==bos)\n            xWP = xWP + (74 + -73)\n        jdv = jdv + (66 + -65)\n    return count\nassert orR([1, 2, 3], 4) == ", "input": "[1, 2, 3], 4", "output": "3"}
{"old_id": "sample_278", "code": "def ILZ(yss, Reo):\n    wPR = dict.fromkeys(yss)\n    are = (39 + -39)\n    TWT = wPR\n    while are < len(TWT):\n        ZFr = TWT[are]\n        wPR[ZFr] = [cqU for cqU in Reo if ZFr * (3 + -1) > cqU]\n        are = are + (43 + -42)\n    return wPR\nassert ILZ([0, 132], [5, 991, 32, 997]) == ", "input": "[0, 132], [5, 991, 32, 997]", "output": "{0: [], 132: [5, 32]}"}
{"old_id": "sample_284", "code": "def kMQ(pPF, Tkk):\n    EuY = (78 + -78)\n    ibp = (88 + -88)\n    kvf = Tkk\n    while ibp < len(kvf):\n        EBl = kvf[ibp]\n        if pPF[EuY] != EBl:\n            return None\n        EuY += (50 + -49)\n        ibp = ibp + (32 + -31)\n    return pPF[EuY:]\nassert kMQ('bestest', 'bestest') == ", "input": "'bestest', 'bestest'", "output": "''"}
{"old_id": "sample_293", "code": "def pzN(Msd):\n    Vbr = Msd.lower()\n    izb = (56 + -56)\n    thT = range(len(Vbr))\n    while izb < len(thT):\n        usN = thT[izb]\n        if Vbr[usN] == 'x':\n            return 'no'\n        izb = izb + (20 + -19)\n    return Msd.isupper()\nassert pzN('dEXE') == ", "input": "'dEXE'", "output": "'no'"}
{"old_id": "sample_298", "code": "def GQW(hfx):\n    csc = list(hfx)\n    uXz = (65 + -65)\n    IKT = range(len(csc))\n    while uXz < len(IKT):\n        zgp = IKT[uXz]\n        Pab = csc[zgp]\n        ywN = Pab.swapcase()\n        csc[zgp] = ywN\n        uXz = uXz + (73 + -72)\n    return ''.join(csc)\nassert GQW('dst vavf n dmv dfvm gamcu dgcvb.') == ", "input": "'dst vavf n dmv dfvm gamcu dgcvb.'", "output": "'DST VAVF N DMV DFVM GAMCU DGCVB.'"}
{"old_id": "sample_300", "code": "def SSs(NWP):\n    count = (58 + -57)\n    IuZ = (9 + -9)\n    EZj = range(count, len(NWP) - (61 + -60), (33 + -31))\n    while IuZ < len(EZj):\n        Wcx = EZj[IuZ]\n        NWP[Wcx] = max(NWP[Wcx], NWP[count-(53 + -52)])\n        count += (95 + -94)\n        IuZ = IuZ + (70 + -69)\n    return NWP\nassert SSs([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_301", "code": "def CMZ(YfA):\n    count = len(YfA)\n    lqA = (74 + -74)\n    Hqp = range(-count+(72 + -71), (9 + -9))\n    while lqA < len(Hqp):\n        gct = Hqp[lqA]\n        YfA.extend([YfA[gct], YfA[gct]])\n        lqA = lqA + (91 + -90)\n    return YfA\nassert CMZ([0, 6, 2, -1, -2]) == ", "input": "[0, 6, 2, -1, -2]", "output": "[0, 6, 2, -1, -2, 6, 6, -2, -2, -2, -2, -2, -2]"}
{"old_id": "sample_305", "code": "def XZC(QnG, eGt):\n    txM = len(QnG)\n    index = -(16 + -15)\n    DWL = (50 + -50)\n    hSV = range(txM)\n    while DWL < len(hSV):\n        hRi = hSV[DWL]\n        if QnG[hRi] == eGt:\n            index = hRi\n        DWL = DWL + (16 + -15)\n    if index == -(35 + -34):\n        index = txM // (49 + -47)\n    Lzi = list(QnG)\n    Lzi.pop(index)\n    return ''.join(Lzi)\nassert XZC('o horseto', 'r') == ", "input": "'o horseto', 'r'", "output": "'o hoseto'"}
{"old_id": "sample_306", "code": "def THY(jyG):\n    ctY = []\n    qtq = (5 + -5)\n    eSE = jyG\n    while qtq < len(eSE):\n        PoK = eSE[qtq]\n        if (isinstance(PoK, str) and PoK.isnumeric()) or isinstance(PoK, int):\n            ctY.append(PoK)\n        qtq = qtq + (12 + -11)\n    ctY = list(map(int, ctY))\n    return ctY\nassert THY([0, 6, '1', '2', 0]) == ", "input": "[0, 6, '1', '2', 0]", "output": "[0, 6, 1, 2, 0]"}
{"old_id": "sample_307", "code": "def ygb(wUl):\n    uGM = list(wUl)\n    uiZ = (70 + -70)\n    uFb = range((45 + -44), len(uGM) - (10 + -9))\n    while uiZ < len(uFb):\n        aQE = uFb[uiZ]\n        uGM.insert(aQE + (51 + -50), '|')\n        uiZ = uiZ + (87 + -86)\n    return ''.join(uGM)\nassert ygb('pxcznyf') == ", "input": "'pxcznyf'", "output": "'px|||||cznyf'"}
{"old_id": "sample_308", "code": "def Cio(cbH):\n    Eps = {}\n    lhO = (61 + -61)\n    Pnj = cbH\n    while lhO < len(Pnj):\n        CoV = Pnj[lhO]\n        if CoV not in Eps:\n            Eps[CoV] = cbH.count(CoV)\n        lhO = lhO + (62 + -61)\n    return Eps\nassert Cio([\"La\", \"Q\", \"9\", \"La\", \"La\"]) == ", "input": "[\"La\", \"Q\", \"9\", \"La\", \"La\"]", "output": "{'La': 3, 'Q': 1, '9': 1}"}
{"old_id": "sample_310", "code": "def xiZ(Rhk):\n    vev = Rhk\n    yln = (96 + -96)\n    oif = list(enumerate(vev))\n    while yln < len(oif):\n        quU, KBo = oif[yln]\n        YzN = (86 + -86)\n        sGP = range(len(KBo) // (83 + -81))\n        while YzN < len(sGP):\n            rtR = sGP[YzN]\n            vev[quU] = vev[quU][-(83 + -82):] + vev[quU][(21 + -20):-(52 + -51)] + vev[quU][(6 + -6)]\n            YzN = YzN + (34 + -33)\n        yln = yln + (51 + -50)\n    return ''.join(vev)\nassert xiZ(['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']) == ", "input": "['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']", "output": "'__1.00r__j_a6__6'"}
{"old_id": "sample_318", "code": "def wbG(HIP, MsU):\n    ZJf = (87 + -87)\n    Zay = (51 + -51)\n    ear = HIP\n    while Zay < len(ear):\n        dJX = ear[Zay]\n        if dJX == MsU or dJX == MsU.lower():\n            ZJf += (50 + -49)\n        Zay = Zay + (58 + -57)\n    return ZJf\nassert wbG('234rtccde', 'e') == ", "input": "'234rtccde', 'e'", "output": "1"}
{"old_id": "sample_321", "code": "def Hap(update, jov):\n    eVw = jov.copy()\n    NWH = (2 + -2)\n    ozw = update\n    while NWH < len(ozw):\n        NQZ = ozw[NWH]\n        if NQZ in eVw:\n            eVw[NQZ] += update[NQZ]\n        else:\n            eVw[NQZ] = update[NQZ]\n        NWH = NWH + (92 + -91)\n    return eVw\nassert Hap({}, {'desciduous': 2}) == ", "input": "{}, {'desciduous': 2}", "output": "{'desciduous': 2}"}
{"old_id": "sample_322", "code": "def KQp(oeA, vfi):\n    tyh = oeA[(87 + -86):]\n    oeA.reverse()\n    ApJ = (32 + -32)\n    nmS = range(vfi)\n    while ApJ < len(nmS):\n        XTD = nmS[ApJ]\n        tyh.append(oeA.pop((69 + -68)))\n        ApJ = ApJ + (17 + -16)\n    oeA.reverse()\n    return oeA\nassert KQp(['lsi', 's', 't', 't', 'd'], 0) == ", "input": "['lsi', 's', 't', 't', 'd'], 0", "output": "['lsi', 's', 't', 't', 'd']"}
{"old_id": "sample_325", "code": "def rwC(gXH):\n    pYR = list(gXH)\n    vVi = (10 + -10)\n    aWy = range(len(pYR))\n    while vVi < len(aWy):\n        RwF = aWy[vVi]\n        pYR[RwF] = pYR[RwF].lower()\n        if not pYR[RwF].isdigit():\n            return False\n        vVi = vVi + (64 + -63)\n    return True\nassert rwC(\"\") == ", "input": "\"\"", "output": "True"}
{"old_id": "sample_326", "code": "def nJO(GVB):\n    VWk = (52 + -52)\n    LII = (27 + -27)\n    UjC = GVB\n    while LII < len(UjC):\n        jbx = UjC[LII]\n        if jbx.isnumeric():\n            VWk += (14 + -13)\n        LII = LII + (99 + -98)\n    return VWk\nassert nJO('Thisisastring') == ", "input": "'Thisisastring'", "output": "0"}
{"old_id": "sample_327", "code": "def WcE(LJD):\n    INr = list()\n    GRf = len(LJD)-(89 + -88)\n    iza = (92 + -92)\n    XkH = range(len(LJD))\n    while iza < len(XkH):\n        VnE = XkH[iza]\n        if GRf%(60 + -58) == (26 + -26):\n            INr.append(-LJD[GRf])\n        else:\n            INr.append(LJD[GRf])\n        GRf -= (52 + -51)\n        iza = iza + (82 + -81)\n    return INr\nassert WcE([1, 7, -1, -3]) == ", "input": "[1, 7, -1, -3]", "output": "[-3, 1, 7, -1]"}
{"old_id": "sample_329", "code": "def wfn(SEE):\n    Vpx = (52 + -52)\n    JuZ = range(len(SEE))\n    while Vpx < len(JuZ):\n        BUz = JuZ[Vpx]\n        if SEE[BUz] == SEE[BUz].upper() and SEE[BUz-(56 + -55)].islower():\n            return True\n        Vpx = Vpx + (4 + -3)\n    return False\nassert wfn('jh54kkk6') == ", "input": "'jh54kkk6'", "output": "True"}
{"old_id": "sample_330", "code": "def JMv(TpG):\n    nbM = []\n    tpL = (36 + -36)\n    fHP = TpG\n    while tpL < len(fHP):\n        Nmn = fHP[tpL]\n        if Nmn.isdigit():\n            nbM.append(Nmn)\n        else:\n            nbM.append(' ')\n        tpL = tpL + (3 + -2)\n    return ''.join(nbM)\nassert JMv('m4n2o') == ", "input": "'m4n2o'", "output": "' 4 2 '"}
{"old_id": "sample_333", "code": "def qLC(QBk, fIX):\n    QBk.sort()\n    SYu = (100 + -100)\n    Iop = fIX\n    while SYu < len(Iop):\n        fIX = Iop[SYu]\n        QBk.remove(fIX)\n        SYu = SYu + (6 + -5)\n    if len(QBk) == (63 + -62):\n        return (95 + -94)\n    jih = (54 + -54)\n    ZTD = list(enumerate(QBk))\n    while jih < len(ZTD):\n        YiV, bML = ZTD[jih]\n        if QBk.count(bML+(17 + -16)) == (100 + -100):\n            return YiV+(77 + -76)\n        jih = jih + (23 + -22)\n    return YiV+(96 + -95)\nassert qLC([375, 564, 857, 90, 728, 92], [728]) == ", "input": "[375, 564, 857, 90, 728, 92], [728]", "output": "1"}
{"old_id": "sample_337", "code": "def uGG(yBA):\n    Bfa = []\n    Yhn = (25 + -25)\n    xyE = yBA\n    while Yhn < len(xyE):\n        IOc = xyE[Yhn]\n        if IOc.isdigit():\n            continue\n        if IOc.islower():\n            Bfa.append(IOc.upper())\n        elif IOc.isupper():\n            Bfa.append(IOc.lower())\n        Yhn = Yhn + (65 + -64)\n    return ''.join(Bfa)\nassert uGG(\"5ll6\") == ", "input": "\"5ll6\"", "output": "'LL'"}
{"old_id": "sample_339", "code": "def zyN(xCs, JtQ):\n    JtQ = str(JtQ)\n    QZT = (49 + -49)\n    rmK = (37 + -37)\n    Ilu = xCs\n    while rmK < len(Ilu):\n        wDr = Ilu[rmK]\n        if str(wDr) == JtQ:\n            QZT += (11 + -10)\n        rmK = rmK + (71 + -70)\n    return QZT\nassert zyN([-1, 2, 1, -8, -8, 2], 2) == ", "input": "[-1, 2, 1, -8, -8, 2], 2", "output": "2"}
{"old_id": "sample_347", "code": "def Mau(xnR):\n    HYA = list(xnR)\n    OVS = len(HYA)\n    FRo = (6 + -6)\n    AUr = range(OVS)\n    while FRo < len(AUr):\n        WMC = AUr[FRo]\n        HYA.insert(WMC, HYA[WMC])\n        FRo = FRo + (53 + -52)\n    return ''.join(HYA).ljust(OVS * (91 + -89))\nassert Mau('hzcw') == ", "input": "'hzcw'", "output": "'hhhhhzcw'"}
{"old_id": "sample_350", "code": "def Kpm(orC):\n    xwa = len(orC)\n    YRr = [(19 + -19)] * xwa\n    if xwa == (60 + -60):\n        return YRr\n    mTW = (21 + -21)\n    efD = list(enumerate(orC.values()))\n    while mTW < len(efD):\n        zCS, stL = efD[mTW]\n        YRr[zCS] = stL\n        mTW = mTW + (39 + -38)\n    return YRr\nassert Kpm({'a': 1, 'b': 2, 'c': 3}) == ", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[1, 2, 3]"}
{"old_id": "sample_353", "code": "def Fja(YoS):\n    if YoS == []:\n        return -(6 + -5)\n    else:\n        oTj = {}\n        lEi = (84 + -84)\n        eth = YoS\n        while lEi < len(eth):\n            hiO = eth[lEi]\n            if hiO in oTj:\n                oTj[hiO] += (39 + -38)\n            else:\n                oTj[hiO] = (75 + -74)\n            lEi = lEi + (38 + -37)\n        return max(oTj.values())\nassert Fja([1, 0, 2, 2, 0, 0, 0, 1]) == ", "input": "[1, 0, 2, 2, 0, 0, 0, 1]", "output": "4"}
{"old_id": "sample_357", "code": "def xqE(TZj):\n    HqK = []\n    iAi = (5 + -5)\n    wop = range(len(TZj) - (79 + -78), (68 + -68) - (42 + -41), -(38 + -37))\n    while iAi < len(wop):\n        Lso = wop[iAi]\n        HqK += TZj[Lso]\n        iAi = iAi + (5 + -4)\n    return ''.join(HqK)\nassert xqE('crew') == ", "input": "'crew'", "output": "'werc'"}
{"old_id": "sample_358", "code": "def rik(fTL, iuV):\n    vcE = []\n    pWG = (63 + -63)\n    oHw = range(len(fTL))\n    while pWG < len(oHw):\n        lCS = oHw[pWG]\n        if fTL[lCS] == iuV and (lCS == (12 + -12) or fTL[lCS-(21 + -20)] != iuV):\n            vcE.append(lCS) \n        pWG = pWG + (95 + -94)\n    if len(vcE) % (82 + -80) == (100 + -99):\n        return fTL\n    return fTL[vcE[(87 + -87)]+(97 + -96):vcE[-(77 + -76)]]\nassert rik('btrburger', 'b') == ", "input": "'btrburger', 'b'", "output": "'tr'"}
{"old_id": "sample_359", "code": "def jWc(pjR):\n    gdI = (50 + -50)\n    BQU = range(len(pjR))\n    while gdI < len(BQU):\n        evs = BQU[gdI]\n        pjR[evs] = pjR[evs].center(len(pjR[-(90 + -89)]))\n        gdI = gdI + (81 + -80)\n    return pjR\nassert jWc(['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']) == ", "input": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']", "output": "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']"}
{"old_id": "sample_362", "code": "def OMO(pCY):\n    Hod = (64 + -64)\n    FHm = range(len(pCY)-(34 + -33))\n    while Hod < len(FHm):\n        HFT = FHm[Hod]\n        if pCY[HFT:].islower():\n            return pCY[HFT + (58 + -57):]\n        Hod = Hod + (3 + -2)\n    return ''\nassert OMO('wrazugizoernmgzu') == ", "input": "'wrazugizoernmgzu'", "output": "'razugizoernmgzu'"}
{"old_id": "sample_363", "code": "def gGU(uir):\n    uir.sort()\n    Zyi = len(uir)\n    OPG = [uir[Zyi//(54 + -52)]]\n    \n    if Zyi % (5 + -3) == (38 + -38):\n        OPG = [uir[Zyi//(99 + -97) - (7 + -6)], uir[Zyi//(45 + -43)]]\n    ZQQ = (26 + -26)\n    mbs = range((44 + -44), Zyi//(24 + -22))\n    while ZQQ < len(mbs):\n        khN = mbs[ZQQ]\n        OPG.insert((32 + -32), uir[Zyi-khN-(18 + -17)])\n        OPG.append(uir[khN])\n        ZQQ = ZQQ + (12 + -11)\n    return OPG\nassert gGU([1]) == ", "input": "[1]", "output": "[1]"}
{"old_id": "sample_366", "code": "def PbV(axh):\n    bHD = axh.lower()\n    NRH = (6 + -6)\n    JUL = axh.lower()\n    while NRH < len(JUL):\n        WXY = JUL[NRH]\n        if WXY in bHD:\n            bHD = bHD.replace(WXY, '', (13 + -12))\n        NRH = NRH + (20 + -19)\n    return bHD\nassert PbV('[ Hello ]+ Hello, World!!_ Hi') == ", "input": "'[ Hello ]+ Hello, World!!_ Hi'", "output": "''"}
{"old_id": "sample_368", "code": "def ARO(HMT, Xmz):\n    plv = []\n    pEN = (40 + -40)\n    OUK = Xmz\n    while pEN < len(OUK):\n        AlS = OUK[pEN]\n        plv.append(HMT.zfill(AlS))\n        pEN = pEN + (41 + -40)\n    return ' '.join(plv)\nassert ARO('4327', [2, 8, 9, 2, 7, 1]) == ", "input": "'4327', [2, 8, 9, 2, 7, 1]", "output": "'4327 00004327 000004327 4327 0004327 4327'"}
{"old_id": "sample_370", "code": "def ygL(ZAR):\n    iVN = (64 + -64)\n    ubZ = ZAR\n    while iVN < len(ubZ):\n        XMu = ubZ[iVN]\n        if not XMu.isspace():\n            return False\n        iVN = iVN + (76 + -75)\n    return True\nassert ygL('     i') == ", "input": "'     i'", "output": "False"}
{"old_id": "sample_371", "code": "def Cdo(WRU):\n    rjm = (74 + -74)\n    lkK = WRU[:]\n    while rjm < len(lkK):\n        YNc = lkK[rjm]\n        if YNc % (77 + -75) != (61 + -61):\n            WRU.remove(YNc)\n        rjm = rjm + (3 + -2)\n    fjU = (50 + -50)\n    JNb = (74 + -74)\n    nOd = WRU\n    while JNb < len(nOd):\n        FHH = nOd[JNb]\n        fjU += FHH\n        JNb = JNb + (70 + -69)\n    return fjU\nassert Cdo([11, 21, 0, 11]) == ", "input": "[11, 21, 0, 11]", "output": "0"}
{"old_id": "sample_372", "code": "def GOe(hld, VWR):\n    ATp = []\n    cbh = (49 + -49)\n    LiZ = hld\n    while cbh < len(LiZ):\n        WLa = LiZ[cbh]\n        WLa = VWR // (31 + -29) * ('%s,' % WLa)\n        ATp.append(WLa)\n        cbh = cbh + (95 + -94)\n    return ATp\nassert GOe(['v'], 1) == ", "input": "['v'], 1", "output": "['']"}
{"old_id": "sample_374", "code": "def ZFj(hTk, eGE):\n    RpY = []\n    obn = (68 + -68)\n    Lbc = hTk\n    while obn < len(Lbc):\n        kaC = Lbc[obn]\n        if kaC.endswith(eGE):\n            RpY.append(kaC*(19 + -17))\n        obn = obn + (71 + -70)\n    return RpY\nassert ZFj([ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz') == ", "input": "[ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'", "output": "['zzzz']"}
{"old_id": "sample_376", "code": "def Xkg(Spq):\n    xWg = (99 + -99)\n    Uxl = range(len(Spq))\n    while xWg < len(Uxl):\n        INT = Uxl[xWg]\n        if Spq[(14 + -14):INT].startswith(\"two\"):\n            return Spq[INT:]\n        xWg = xWg + (54 + -53)\n    return 'no'\nassert Xkg(\"2two programmers\") == ", "input": "\"2two programmers\"", "output": "'no'"}
{"old_id": "sample_379", "code": "def Xho(WWg):\n    ZEz = (71 + -71)\n    lhq = range(len(WWg) - (50 + -49), -(29 + -28), -(72 + -69))\n    while ZEz < len(lhq):\n        Shs = lhq[ZEz]\n        if WWg[Shs] == (2 + -2):\n            WWg.clear()\n            return False\n        ZEz = ZEz + (77 + -76)\n    return WWg\nassert Xho([0, 0, 1, 2, 1]) == ", "input": "[0, 0, 1, 2, 1]", "output": "False"}
{"old_id": "sample_386", "code": "def ZHI(lKI, JZg):\n    count = len(JZg)\n    nGb = (74 + -74)\n    WHf = range(count)\n    while nGb < len(WHf):\n        rCF = WHf[nGb]\n        if JZg[str(rCF)] in lKI:\n            JZg.pop(str(rCF))\n        nGb = nGb + (72 + -71)\n    return \"Done!\"\nassert ZHI('mid', {'0':'q','1':'f','2':'w','3':'i'}) == ", "input": "'mid', {'0':'q','1':'f','2':'w','3':'i'}", "output": "'Done!'"}
{"old_id": "sample_389", "code": "def Gvw(aUo, pUz):\n    if type(pUz) is list:\n        TDe = (41 + -41)\n        Nze = pUz\n        while TDe < len(Nze):\n            Ydn = Nze[TDe]\n            aUo.extend(Ydn)\n            TDe = TDe + (53 + -52)\n    else:\n        aUo.extend(pUz)\n    return aUo\nassert Gvw([1, 2, 3], 'nammo') == ", "input": "[1, 2, 3], 'nammo'", "output": "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']"}
{"old_id": "sample_391", "code": "def pxI(Yzc):\n    hQM = Yzc\n    hQM.reverse()\n    NDB = (50 + -50)\n    sYR = (72 + -72)\n    PJF = range(len(hQM))\n    while sYR < len(PJF):\n        NDB = PJF[sYR]\n        NDB += (81 + -79)\n        hQM[NDB - (86 + -85):NDB] = ['+']\n        sYR = sYR + (28 + -27)\n    hQM.append('+')\n    return hQM\nassert pxI(['r', '9']) == ", "input": "['r', '9']", "output": "['9', '+', '+', '+']"}
{"old_id": "sample_393", "code": "def FIv(Mez):\n    KEU = Mez[::-(17 + -16)]\n    ZMe = ''\n    xAj = (56 + -56)\n    mrm = range(len(KEU) - (23 + -20), (15 + -15), -(73 + -70))\n    while xAj < len(mrm):\n        bDE = mrm[xAj]\n        ZMe += '---'.join(KEU[bDE:bDE + (15 + -12)]) + '---'\n        xAj = xAj + (93 + -92)\n    return ZMe[:-(39 + -36)]\nassert FIv('scala') == ", "input": "'scala'", "output": "'a---c---s'"}
{"old_id": "sample_394", "code": "def rRt(Ogg):\n    plR = Ogg.splitlines()\n    POZ = (23 + -23)\n    WJT = (46 + -46)\n    ykI = plR\n    while WJT < len(ykI):\n        ITy = ykI[WJT]\n        if len(ITy) == (61 + -61):\n            return POZ\n        POZ+=(64 + -63)\n        WJT = WJT + (99 + -98)\n    return -(68 + -67)\nassert rRt(\"2 m2 \\n\\nbike\") == ", "input": "\"2 m2 \\n\\nbike\"", "output": "1"}
{"old_id": "sample_395", "code": "def rOP(IUO):\n    FkV = (21 + -21)\n    FPy = range(len(IUO))\n    while FkV < len(FPy):\n        rhZ = FPy[FkV]\n        if IUO[rhZ].isdecimal():\n            return rhZ + (IUO[rhZ] == '0')\n        elif IUO[rhZ] == '0':\n            return -(76 + -75)\n        FkV = FkV + (35 + -34)\n    return -(82 + -81)\nassert rOP(\"11\") == ", "input": "\"11\"", "output": "0"}
{"old_id": "sample_398", "code": "def bLb(Vyo):\n    dict = {}\n    fYp = (90 + -90)\n    dGR = list(Vyo.items())\n    while fYp < len(dGR):\n        mDi, bhy = dGR[fYp]\n        count = Vyo[mDi]\n        if count not in dict:\n            dict[count] = []\n        dict[count].append(mDi)\n        fYp = fYp + (31 + -30)\n    Vyo.update(dict)\n    return Vyo\nassert bLb({'2': 2, '0': 1, '1': 2}) == ", "input": "{'2': 2, '0': 1, '1': 2}", "output": "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}"}
{"old_id": "sample_402", "code": "def cQX(Jez, PTK):\n    cRf = {}\n    tJE = (34 + -34)\n    klr = range(Jez)\n    while tJE < len(klr):\n        ZGd = klr[tJE]\n        cRf.clear()\n        cRf.update({hgC + (10 + 0): hgC * (92 + -82) for hgC in PTK})\n        tJE = tJE + (66 + -65)\n    return cRf\nassert cQX(0, ['aaa', 'bbb']) == ", "input": "0, ['aaa', 'bbb']", "output": "{}"}
{"old_id": "sample_410", "code": "def wFz(ncI):\n    tEC = (42 + -42)\n    Lzu = (32 + -32)\n    Sgz = range(len(ncI))\n    while Lzu < len(Sgz):\n        cyc = Sgz[Lzu]\n        ncI.insert(cyc, ncI[tEC])\n        tEC += (84 + -83)\n        Lzu = Lzu + (79 + -78)\n    return ncI\nassert wFz([1, 3, -1, 1, -2, 6]) == ", "input": "[1, 3, -1, 1, -2, 6]", "output": "[1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6]"}
{"old_id": "sample_414", "code": "def wFJ(rVn):\n    iAp = rVn.copy()\n    jAx = (72 + -72)\n    YLb = list(iAp.items())\n    while jAx < len(YLb):\n        olI, oJL = YLb[jAx]\n        Tbk = (29 + -29)\n        uiG = range(len(oJL))\n        while Tbk < len(uiG):\n            PDw = uiG[Tbk]\n            oJL[PDw] = oJL[PDw].upper()\n            Tbk = Tbk + (34 + -33)\n        jAx = jAx + (100 + -99)\n    return iAp\nassert wFJ({'X': ['x', 'y']}) == ", "input": "{'X': ['x', 'y']}", "output": "{'X': ['X', 'Y']}"}
{"old_id": "sample_415", "code": "def pWU(MnN):\n    svb = dict(MnN)\n    xBN = (21 + -21)\n    apJ = list(svb.items())\n    while xBN < len(apJ):\n        eDq, Pbq = apJ[xBN]\n        if Pbq < (82 + -82) or Pbq > (17 + -8):\n            return None\n        xBN = xBN + (8 + -7)\n    return svb\nassert pWU(((8, 5), (8, 2), (5, 3))) == ", "input": "((8, 5), (8, 2), (5, 3))", "output": "{8: 2, 5: 3}"}
{"old_id": "sample_423", "code": "def xxW(oXX):\n    XWR = len(oXX)\n    twu = (60 + -60)\n    ZUu = range(XWR-(46 + -45), -(17 + -16), -(80 + -79))\n    while twu < len(ZUu):\n        jhO = ZUu[twu]\n        if oXX[jhO] == oXX[(32 + -32)]:\n            oXX.remove(oXX[XWR-(39 + -38)])\n        twu = twu + (95 + -94)\n    return oXX\nassert xxW([4, 2, 5, 1, 3, 2, 6]) == ", "input": "[4, 2, 5, 1, 3, 2, 6]", "output": "[4, 2, 5, 1, 3, 2]"}
{"old_id": "sample_428", "code": "def rAz(NWp):\n    CuN = (6 + -6)\n    DHd = range(len(NWp))\n    while CuN < len(DHd):\n        Uvp = DHd[CuN]\n        if not Uvp % (55 + -53):\n            NWp.append(NWp[Uvp] * NWp[Uvp + (58 + -57)])\n        CuN = CuN + (64 + -63)\n    return NWp\nassert rAz([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_431", "code": "def LKr(Yss, xAB):\n    eGS = list(range((96 + -95), Yss+(7 + -6)))\n    HQC = (23 + -23)\n    SOc = range(xAB)\n    while HQC < len(SOc):\n        ODQ = SOc[HQC]\n        eGS.clear()\n        HQC = HQC + (72 + -71)\n    return eGS\nassert LKr(1, 3) == ", "input": "1, 3", "output": "[]"}
{"old_id": "sample_435", "code": "def xpS(vAZ, pIf, uOQ):\n    while len(vAZ) < pIf:\n        vAZ.insert(len(vAZ) // (49 + -47), uOQ)\n    LNE = (86 + -86)\n    TkI = range(len(vAZ) // (pIf - (88 + -87)) - (64 + -60))\n    while LNE < len(TkI):\n        tsP = TkI[LNE]\n        vAZ.insert(len(vAZ) // (84 + -82), uOQ)\n        LNE = LNE + (93 + -92)\n    return ' '.join(vAZ)\nassert xpS([], 0, 1) == ", "input": "[], 0, 1", "output": "''"}
{"old_id": "sample_437", "code": "def oPF(phb):\n    rXB = {}\n    LAF = (41 + -41)\n    sxw = phb\n    while LAF < len(sxw):\n        ypv = sxw[LAF]\n        rXB = rXB.fromkeys(ypv, None)\n        LAF = LAF + (40 + -39)\n    return rXB\nassert oPF(['john', 'doe', 'the', 'john', 'doe']) == ", "input": "['john', 'doe', 'the', 'john', 'doe']", "output": "{'d': None, 'o': None, 'e': None}"}
{"old_id": "sample_438", "code": "def KBo(ApI):\n    CJq = (36 + 64)\n    SnC = (21 + -21)\n    IHW = range((46 + -36), (86 + -56))\n    while SnC < len(IHW):\n        hdd = IHW[SnC]\n        if (68 + -68) < ApI.count('\\t') < (96 + -76):\n            CJq = hdd\n            break\n        SnC = SnC + (94 + -93)\n    return ApI.expandtabs(CJq)\nassert KBo('1  \\t\\t\\t3') == ", "input": "'1  \\t\\t\\t3'", "output": "'1                             3'"}
{"old_id": "sample_442", "code": "def Cce(zix):\n    LPb = []\n    KZA = (48 + -48)\n    dJz = range(len(zix))\n    while KZA < len(dJz):\n        WFd = dJz[KZA]\n        if zix[WFd] % (12 + -10) == (97 + -97):\n            LPb.append(zix[WFd])\n        KZA = KZA + (55 + -54)\n\n    return zix.copy()\nassert Cce([1, 2, 3, 4]) == ", "input": "[1, 2, 3, 4]", "output": "[1, 2, 3, 4]"}
{"old_id": "sample_443", "code": "def RUE(QiL):\n    Mqb = (32 + -32)\n    Ujl = QiL\n    while Mqb < len(Ujl):\n        DdJ = Ujl[Mqb]\n        if DdJ == ' ':\n            QiL = QiL.lstrip()\n        else:\n            QiL = QiL.replace('cd', DdJ)\n        Mqb = Mqb + (90 + -89)\n    return QiL\nassert RUE(\"lorem ipsum\") == ", "input": "\"lorem ipsum\"", "output": "'lorem ipsum'"}
{"old_id": "sample_444", "code": "def AYO(wdv):\n    count = len(wdv)\n    IFB = (47 + -47)\n    hdz = range(count-(13 + -12), (46 + -46), -(32 + -30))\n    while IFB < len(hdz):\n        Fme = hdz[IFB]\n        wdv.insert(Fme, wdv.pop((92 + -92)) + wdv.pop((9 + -9)))\n        IFB = IFB + (47 + -46)\n    return wdv\nassert AYO([-5, 3, -2, -3, -1, 3, 5]) == ", "input": "[-5, 3, -2, -3, -1, 3, 5]", "output": "[5, -2, 2, -5]"}
{"old_id": "sample_445", "code": "def UCQ(idb):\n    Gkg = idb.split(',')\n    VLr = (87 + -87)\n    eGc = list(enumerate(Gkg))\n    while VLr < len(eGc):\n        byq, TlR = eGc[VLr]\n        Gkg[byq] = TlR.replace(' and', '+').title().replace('+', ' and')\n        VLr = VLr + (69 + -68)\n    return ', '.join(Gkg)\nassert UCQ(\"carrot, banana, and strawberry\") == ", "input": "\"carrot, banana, and strawberry\"", "output": "'Carrot,  Banana,  and Strawberry'"}
{"old_id": "sample_447", "code": "def eyp(BNH, VLy):\n    RdJ = ''\n    BNH = BNH.replace('\\t', ' '*(VLy-(85 + -84)))\n    NFk = (85 + -85)\n    XGe = range(len(BNH))\n    while NFk < len(XGe):\n        eWr = XGe[NFk]\n        if BNH[eWr] == ' ':\n            RdJ += '|'\n        else:\n            RdJ += BNH[eWr]\n        NFk = NFk + (88 + -87)\n    return RdJ\nassert eyp(\"\\ta\", 3) == ", "input": "\"\\ta\", 3", "output": "'||a'"}
{"old_id": "sample_450", "code": "def qeb(ygF):\n    ygF = ygF.split()\n    QJI = (40 + -40)\n    LWd = range((6 + -5), len(ygF), (73 + -71))\n    while QJI < len(LWd):\n        cOQ = LWd[QJI]\n        ygF[cOQ] = ''.join(reversed(ygF[cOQ]))\n        QJI = QJI + (46 + -45)\n    return ' '.join(ygF)\nassert qeb('K zBK') == ", "input": "'K zBK'", "output": "'K KBz'"}
{"old_id": "sample_451", "code": "def Apw(yfT, mGw):\n    yfT = list(yfT)\n    Soz = (67 + -67)\n    qof = list(enumerate(yfT))\n    while Soz < len(qof):\n        count, sOA = qof[Soz]\n        if sOA == mGw:\n            yfT.remove(sOA)\n            return ''.join(yfT)\n        Soz = Soz + (2 + -1)\n    return yfT\nassert Apw('pn', 'p') == ", "input": "'pn', 'p'", "output": "'n'"}
{"old_id": "sample_452", "code": "def oEd(Ump):\n    Qfp = (50 + -50)\n    vGe = (85 + -85)\n    RUz = Ump\n    while vGe < len(RUz):\n        XmF = RUz[vGe]\n        if XmF.isalpha():\n            Qfp += (13 + -12)\n        vGe = vGe + (1 + 0)\n    return Qfp\nassert oEd('l000*',) == ", "input": "'l000*',", "output": "1"}
{"old_id": "sample_454", "code": "def vTo(qrV, count):\n    DaQ = {}\n    WBL = (1 + -1)\n    pGJ = range(count)\n    while WBL < len(pGJ):\n        FCI = pGJ[WBL]\n        qrV = qrV.copy()\n        DaQ = {**qrV, **DaQ}\n        WBL = WBL + (74 + -73)\n    return DaQ\nassert vTo({'a': 2, 'b': [], 'c': {}}, 0) == ", "input": "{'a': 2, 'b': [], 'c': {}}, 0", "output": "{}"}
{"old_id": "sample_455", "code": "def INX(hlo):\n    EYe = (23 + -23)\n    HXp = (60 + -60)\n    YYt = hlo\n    while HXp < len(YYt):\n        IHE = YYt[HXp]\n        if IHE.isupper():\n            EYe += (14 + -13)\n        HXp = HXp + (28 + -27)\n    return hlo.upper() if EYe >= (48 + -38) else hlo\nassert INX('?XyZ') == ", "input": "'?XyZ'", "output": "'?XyZ'"}
{"old_id": "sample_457", "code": "def ztA(ODB):\n    count = list(range(len(ODB)))\n    sWo = (9 + -9)\n    NVz = range(len(ODB))\n    while sWo < len(NVz):\n        YEa = NVz[sWo]\n        ODB.pop()\n        if len(count) > (66 + -66):\n            count.pop((18 + -18))\n        sWo = sWo + (52 + -51)\n    return ODB\nassert ztA([3, 1, 7, 5, 6]) == ", "input": "[3, 1, 7, 5, 6]", "output": "[]"}
{"old_id": "sample_459", "code": "def UwF(zEG, YIo):\n    lIc = (24 + -24)\n    vKs = range((57 + -56), len(zEG), (78 + -76))\n    while lIc < len(vKs):\n        hkm = vKs[lIc]\n        YIo.update({zEG[hkm]: zEG[hkm-(13 + -12)]})\n        lIc = lIc + (66 + -65)\n\n    return YIo\nassert UwF(['b', 'vzjmc', 'f', 'ae', '0'], dict()) == ", "input": "['b', 'vzjmc', 'f', 'ae', '0'], dict()", "output": "{'vzjmc': 'b', 'ae': 'f'}"}
{"old_id": "sample_463", "code": "def NEF(dict):\n    cGa = dict.copy()\n    waQ = []\n    vHo = (35 + -35)\n    ffL = list(dict.items())\n    while vHo < len(ffL):\n        nXP, MbW = ffL[vHo]\n        if MbW in dict:\n            del cGa[nXP]\n        vHo = vHo + (91 + -90)\n    return cGa\nassert NEF({-1: -1, 5: 5, 3: 6, -4: -4}) == ", "input": "{-1: -1, 5: 5, 3: 6, -4: -4}", "output": "{3: 6}"}
{"old_id": "sample_467", "code": "def FxK(EIH):\n    copy = EIH.copy()\n    Bsw = dict()\n    Oev = (62 + -62)\n    Ajq = copy\n    while Oev < len(Ajq):\n        zOP = Ajq[Oev]\n        Bsw[zOP] = len(copy[zOP])\n        Oev = Oev + (24 + -23)\n    return Bsw\nassert FxK({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_468", "code": "def cme(CCh, aOo, STg):\n    gpD = fjB = aOo\n    dQF = (48 + -48)\n    Uhi = range(STg)\n    while dQF < len(Uhi):\n        uqd = Uhi[dQF]\n        if fjB:\n            CCh, fjB = CCh.replace(fjB, '', (85 + -84)), None\n            gpD = fjB = aOo\n        dQF = dQF + (20 + -19)\n    return gpD.join(CCh.split(aOo))\nassert cme('unrndqafi', 'c', 2) == ", "input": "'unrndqafi', 'c', 2", "output": "'unrndqafi'"}
{"old_id": "sample_470", "code": "def erC(QEi):\n    bJj = {'A': (16 + -15), 'B': (83 + -81), 'C': (18 + -15), 'D': (10 + -6), 'E': (82 + -77)}\n    EvU = []\n    CQt = (51 + -51)\n    fAa = list(bJj.items())\n    while CQt < len(fAa):\n        QoG, EVL = fAa[CQt]\n        if EVL % QEi == (21 + -21):\n            EvU.append(QoG)\n        CQt = CQt + (24 + -23)\n    return EvU\nassert erC(2) == ", "input": "2", "output": "['B', 'D']"}
{"old_id": "sample_472", "code": "def sIq(JyE):\n    nOk = {}\n    xOP = (29 + -29)\n    WHl = JyE.replace('-', '').lower()\n    while xOP < len(WHl):\n        Del = WHl[xOP]\n        nOk[Del] = nOk[Del] + (37 + -36) if Del in nOk else (14 + -13)\n        xOP = xOP + (7 + -6)\n    nOk = sorted(nOk.items(), jBE=lambda OOq: OOq[(78 + -77)])\n    return [ccC for Nbc, ccC in nOk]\nassert sIq(\"x--y-z-5-C\") == ", "input": "\"x--y-z-5-C\"", "output": "[1, 1, 1, 1, 1]"}
{"old_id": "sample_473", "code": "def fxM(AyG, WOZ):\n    sby = list()\n    GqQ = (28 + -28)\n    FxR = range(len(AyG))\n    while GqQ < len(FxR):\n        fOg = FxR[GqQ]\n        if AyG[fOg] == WOZ:\n            sby.append(fOg)\n        GqQ = GqQ + (1 + 0)\n    ieC = list(AyG)\n    PZG = (77 + -77)\n    EOG = sby\n    while PZG < len(EOG):\n        fOg = EOG[PZG]\n        ieC.remove(WOZ)\n        PZG = PZG + (90 + -89)\n    return ''.join(ieC)\nassert fxM('scedvtvotkwqfoqn', 'o') == ", "input": "'scedvtvotkwqfoqn', 'o'", "output": "'scedvtvtkwqfqn'"}
{"old_id": "sample_474", "code": "def vZv(sEd, ayD):\n    tkH = []\n    Ehg = sEd.split('\\n')\n    Fcf = (28 + -28)\n    GKP = Ehg\n    while Fcf < len(GKP):\n        jRn = GKP[Fcf]\n        tkH.append(jRn.center(ayD))\n        Fcf = Fcf + (2 + -1)\n    return '\\n'.join(tkH)\nassert vZv('#[)[]>[^e>\\n 8', -5) == ", "input": "'#[)[]>[^e>\\n 8', -5", "output": "'#[)[]>[^e>\\n 8'"}
{"old_id": "sample_476", "code": "def OID(yNi, MCd):\n    xbO = yNi.split()\n    yNi = []\n    juR = (82 + -82)\n    rEK = xbO\n    while juR < len(rEK):\n        Zuy = rEK[juR]\n        dlq = (57 + -57)\n        VEL = Zuy\n        while dlq < len(VEL):\n            pxX = VEL[dlq]\n            yNi.append(pxX)\n            dlq = dlq + (89 + -88)\n        juR = juR + (25 + -24)\n    if MCd in yNi:\n        return True\n    else:\n        return False\nassert OID(\"booty boot-boot bootclass\", 'k') == ", "input": "\"booty boot-boot bootclass\", 'k'", "output": "False"}
{"old_id": "sample_478", "code": "def ZRp(JSn):\n    yVP = {}\n    zeE = (79 + -79)\n    hsp = JSn\n    while zeE < len(hsp):\n        yMr = hsp[zeE]\n        yVP[yMr] = yVP.get(yMr, (49 + -49)) + (39 + -38)\n        zeE = zeE + (20 + -19)\n    return yVP\nassert ZRp('meow meow') == ", "input": "'meow meow'", "output": "{'m': 2, 'e': 2, 'o': 2, 'w': 2, ' ': 1}"}
{"old_id": "sample_480", "code": "def uVw(nNb, SJg, fpv):\n    if nNb == '':\n        return nNb\n    ghM = nNb.split(SJg)\n    Tof = (44 + -44)\n    reA = list(enumerate(ghM))\n    while Tof < len(reA):\n        index, mAg = reA[Tof]\n        if SJg in mAg:\n            ghM[index] = mAg.replace(SJg, fpv, (48 + -47))\n        Tof = Tof + (80 + -79)\n    return SJg.join(ghM)\nassert uVw('', 'mi', 'siast') == ", "input": "'', 'mi', 'siast'", "output": "''"}
{"old_id": "sample_484", "code": "def xyy(pDO):\n    SYQ = []\n    DOm = (49 + -49)\n    GUc = pDO\n    while DOm < len(GUc):\n        NlJ = GUc[DOm]\n        try:\n            if NlJ.isnumeric():\n                SYQ.append(int(NlJ)*(14 + -12))\n        except ValueError:\n            SYQ.append(NlJ[::-(79 + -78)])\n        DOm = DOm + (79 + -78)\n    return SYQ\nassert xyy(['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']) == ", "input": "['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']", "output": "[182, 32]"}
{"old_id": "sample_486", "code": "def Uig(eFW):\n    WNt = eFW.copy()\n    iNr = (25 + -25)\n    aAE = list(eFW.items())\n    while iNr < len(aAE):\n        srN, RPd = aAE[iNr]\n        WNt[srN] = RPd * RPd\n        iNr = iNr + (44 + -43)\n    return WNt\nassert Uig({1:1, 2:2, 3:3}) == ", "input": "{1:1, 2:2, 3:3}", "output": "{1: 1, 2: 4, 3: 9}"}
{"old_id": "sample_487", "code": "def nCY(dict):\n    tjd = []\n    gsk = (2 + -2)\n    ENh = dict.keys()\n    while gsk < len(ENh):\n        osA = ENh[gsk]\n        if osA % (55 + -53) == (58 + -58):\n            tjd.append(osA)\n        gsk = gsk + (93 + -92)\n    return tjd\nassert nCY({ 4: 'a' }) == ", "input": "{ 4: 'a' }", "output": "[4]"}
{"old_id": "sample_491", "code": "def Okp(koJ):\n    aoX = (25 + -25)\n    npP = range(-(22 + -21), -len(koJ)-(3 + -2), -(65 + -64))\n    while aoX < len(npP):\n        OCh = npP[aoX]\n        koJ.extend([koJ[OCh], koJ[OCh]])\n        aoX = aoX + (34 + -33)\n    return koJ\nassert Okp([4, 8, 8, 5]) == ", "input": "[4, 8, 8, 5]", "output": "[4, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5]"}
{"old_id": "sample_493", "code": "def Izu(ccO):\n    keys = []\n    JGI = (60 + -60)\n    GaK = ccO\n    while JGI < len(GaK):\n        AYk = GaK[JGI]\n        keys.append('%s => %s' % (AYk, ccO[AYk]))\n        JGI = JGI + (30 + -29)\n    return keys\nassert Izu({'-4':'4','1':'2','-':'-3'}) == ", "input": "{'-4':'4','1':'2','-':'-3'}", "output": "['-4 => 4', '1 => 2', '- => -3']"}
{"old_id": "sample_497", "code": "def YxZ(mvg):\n    hVk = list(str(mvg))\n    Tql = (11 + -11)\n    uFa = range((9 + -7),len(hVk))\n    while Tql < len(uFa):\n        aNN = uFa[Tql]\n        hVk[aNN] += '+'\n        Tql = Tql + (28 + -27)\n    return hVk\nassert YxZ(44) == ", "input": "44", "output": "['4', '4']"}
{"old_id": "sample_506", "code": "def hEQ(Bcl):\n    RVq = ''\n    if Bcl%(77 + -75) == (93 + -92):\n        RVq+='sn'\n    else:\n        return Bcl*Bcl\n    RkL = (18 + -18)\n    Qgx = range((32 + -31), Bcl+(31 + -30))\n    while RkL < len(Qgx):\n        COY = Qgx[RkL]\n        if COY%(92 + -90) == (70 + -70):\n            RVq+='to'\n        else:\n            RVq+='ts'\n        RkL = RkL + (47 + -46)\n    return RVq\nassert hEQ(1) == ", "input": "1", "output": "'snts'"}
{"old_id": "sample_514", "code": "def cSV(Lul):\n    Ulb = (67 + -67)\n    MoH = Lul.split()\n    while Ulb < len(MoH):\n        xQK = MoH[Ulb]\n        Lul = Lul.replace('-{}'.format(xQK), ' ').replace('{}-'.format(xQK), ' ')\n        Ulb = Ulb + (67 + -66)\n    return Lul.strip('-')\nassert cSV('-stew---corn-and-beans-in soup-.-') == ", "input": "'-stew---corn-and-beans-in soup-.-'", "output": "'stew---corn-and-beans-in soup-.'"}
{"old_id": "sample_517", "code": "def boJ(HQf):\n    dEA = (3 + -3)\n    sTM = range(len(HQf)-(74 + -73), (66 + -66), -(26 + -25))\n    while dEA < len(sTM):\n        rcK = sTM[dEA]\n        if not HQf[rcK].isupper():\n            return HQf[(58 + -58):rcK]\n        dEA = dEA + (5 + -4)\n    return ''\nassert boJ('SzHjifnzog') == ", "input": "'SzHjifnzog'", "output": "'SzHjifnzo'"}
{"old_id": "sample_521", "code": "def Pha(WsV):\n    mDG = max(WsV)\n    TMr = (13 + -13)\n    IdT = range(mDG)\n    while TMr < len(IdT):\n        TOa = IdT[TMr]\n        WsV.reverse()\n        TMr = TMr + (23 + -22)\n    return WsV\nassert Pha([43, 0, 4, 77, 5, 2, 0, 9, 77]) == ", "input": "[43, 0, 4, 77, 5, 2, 0, 9, 77]", "output": "[77, 9, 0, 2, 5, 77, 4, 0, 43]"}
{"old_id": "sample_523", "code": "def Rte(VAc):\n    VAc = list(VAc)\n    Czw = (53 + -53)\n    JfA = range(len(VAc)-(17 + -16), -(87 + -86), -(63 + -62))\n    while Czw < len(JfA):\n        iTV = JfA[Czw]\n        if VAc[iTV].isspace():\n            VAc[iTV] = '&nbsp;'\n        Czw = Czw + (65 + -64)\n    return ''.join(VAc)\nassert Rte('   ') == ", "input": "'   '", "output": "'&nbsp;&nbsp;&nbsp;'"}
{"old_id": "sample_524", "code": "def Ied(sUd):\n    OLO = sUd.copy()\n    ayY = (30 + -30)\n    Qce = range(len(OLO)-(31 + -30))\n    while ayY < len(Qce):\n        iHv = Qce[ayY]\n        sUd[sorted(OLO)[iHv]] = iHv\n        ayY = ayY + (8 + -7)\n    return sUd\nassert Ied({2: 5, 4: 1, 3: 5, 1: 3, 5: 1}) == ", "input": "{2: 5, 4: 1, 3: 5, 1: 3, 5: 1}", "output": "{2: 1, 4: 3, 3: 2, 1: 0, 5: 1}"}
{"old_id": "sample_525", "code": "def lsB(ZYW, DxU, hOa):\n    UQs = {}\n    Wnu, jgF = (48 + -48), (22 + -22)\n    vFC = (71 + -71)\n    vZP = list(ZYW.items())\n    while vFC < len(vZP):\n        KpC, CIm = vZP[vFC]\n        UQs[CIm] = KpC\n        if CIm == DxU:\n            Wnu = KpC\n        if CIm == hOa:\n            jgF = KpC\n        vFC = vFC + (86 + -85)\n    wnR = UQs[DxU]\n    return (wnR, jgF) if Wnu > jgF else (jgF, wnR)\nassert lsB({'TEXT': 7, 'CODE': 3}, 7, 3) == ", "input": "{'TEXT': 7, 'CODE': 3}, 7, 3", "output": "('TEXT', 'CODE')"}
{"old_id": "sample_528", "code": "def TJr(EWr):\n    XdS = ''\n    jBj = ''\n    Qrw = (21 + -21)\n    oQh = EWr\n    while Qrw < len(oQh):\n        EDg = oQh[Qrw]\n        jBj = jBj + EDg\n        if EWr.rfind(jBj) > -(56 + -55):\n            return EWr.rfind(jBj)\n        Qrw = Qrw + (69 + -68)\n    return (32 + -32)\nassert TJr('papeluchis') == ", "input": "'papeluchis'", "output": "2"}
{"old_id": "sample_529", "code": "def pAr(tgT):\n    SQO = tgT[(35 + -35)]\n    kZA = tgT[:]\n    QyX = (45 + -45)\n    ruC = range((97 + -96), len(tgT))\n    while QyX < len(ruC):\n        CoQ = ruC[QyX]\n        if SQO != tgT[CoQ]:\n            kZA[CoQ] = tgT[CoQ]\n        else:\n            del kZA[CoQ]\n        SQO = tgT[CoQ]\n        QyX = QyX + (98 + -97)\n    return kZA\nassert pAr([1, 2, 3]) == ", "input": "[1, 2, 3]", "output": "[1, 2, 3]"}
{"old_id": "sample_532", "code": "def vil(BNM, Acd):\n    gix = [Acd.copy()] \n    uqv = (82 + -82)\n    Rgz = range(BNM)\n    while uqv < len(Rgz):\n        JXL = Rgz[uqv]\n        UZT = Acd.copy()\n        UZT.extend(gix[-(77 + -76)])\n        gix.append(UZT)\n        uqv = uqv + (69 + -68)\n    return gix\nassert vil(1, [1, 2, 3]) == ", "input": "1, [1, 2, 3]", "output": "[[1, 2, 3], [1, 2, 3, 1, 2, 3]]"}
{"old_id": "sample_533", "code": "def WuC(KMf, jFE):\n    Xas = (26 + -26)\n    TGD = (38 + -38)\n    TQK = list(jFE.items())\n    while TGD < len(TQK):\n        (NEX, jlB) = TQK[TGD]\n        if NEX[(76 + -76)] == KMf and len(NEX) == (31 + -28):\n            Xas -= jlB\n        elif NEX[-(14 + -13)] == KMf and len(NEX) == (70 + -67):\n            Xas += jlB\n        TGD = TGD + (6 + -5)\n    return Xas\nassert WuC('a', {}) == ", "input": "'a', {}", "output": "0"}
{"old_id": "sample_534", "code": "def gqk(yPm, AeM):\n    OOr = max(yPm.index(AeM) - len(yPm) // (43 + -40), (40 + -40))\n    lUo = ''\n    YSv = (72 + -72)\n    XYu = list(enumerate(yPm[OOr:]))\n    while YSv < len(XYu):\n        Dlk, dmW = XYu[YSv]\n        if dmW == '+':\n            lUo += AeM\n        else:\n            lUo += yPm[OOr + Dlk]\n        YSv = YSv + (23 + -22)\n    return lUo\nassert gqk('hosu', 'o') == ", "input": "'hosu', 'o'", "output": "'hosu'"}
{"old_id": "sample_535", "code": "def gvm(ZXU):\n    ame = (95 + -95)\n    Udn = str(ZXU)\n    while ame < len(Udn):\n        ZXU = Udn[ame]\n        if ZXU not in \"012\" and ZXU not in list(range((17 + -12), (53 + -43))):\n            return False\n        ame = ame + (41 + -40)\n    return True\nassert gvm(1341240312) == ", "input": "1341240312", "output": "False"}
{"old_id": "sample_536", "code": "def TnM(PDz):\n    ALm = (70 + -70)\n    ZnV = (37 + -37)\n    VDS = PDz\n    while ZnV < len(VDS):\n        Xtq = VDS[ZnV]\n        if Xtq.isdigit():\n            ALm += (77 + -76)\n        ZnV = ZnV + (3 + -2)\n    return ALm\nassert TnM('C24Bxxx982ab') == ", "input": "'C24Bxxx982ab'", "output": "5"}
{"old_id": "sample_540", "code": "def AFz(Slv):\n    nEy = Slv.copy()\n    rEN = (100 + -100)\n    Luo = range((83 + -83), len(Slv) - (69 + -68), (32 + -30))\n    while rEN < len(Luo):\n        yXV = Luo[rEN]\n        nEy.insert(yXV + (4 + -3), nEy[yXV])\n        rEN = rEN + (41 + -40)\n    nEy.append(nEy[(62 + -62)])\n    return nEy\nassert AFz([5, 5, 5, 6, 4, 9]) == ", "input": "[5, 5, 5, 6, 4, 9]", "output": "[5, 5, 5, 5, 5, 5, 6, 4, 9, 5]"}
{"old_id": "sample_544", "code": "def lfw(OMU):\n    rqP = OMU.split('\\n')\n    mYW = []\n    FzN = (7 + -7)\n    hCu = range(len(rqP))\n    while FzN < len(hCu):\n        zDq = hCu[FzN]\n        zmJ = rqP[zDq].replace('\\t', '    ')\n        mYW.append(zmJ)\n        FzN = FzN + (27 + -26)\n    return '\\n'.join(mYW)\nassert lfw(\"\\t\\t\\ttab tab tabulates\") == ", "input": "\"\\t\\t\\ttab tab tabulates\"", "output": "'            tab tab tabulates'"}
{"old_id": "sample_549", "code": "def hWK(wtq):\n    wtq.reverse()\n    Avq = []\n    ksr = (52 + -52)\n    mze = wtq\n    while ksr < len(mze):\n        ToJ = mze[ksr]\n        max(ToJ)\n        ToJ.sort(reverse = True)\n        Avq.append(ToJ)\n        ksr = ksr + (13 + -12)\n    return Avq\nassert hWK([[1, 1, 1, 1]]) == ", "input": "[[1, 1, 1, 1]]", "output": "[[1, 1, 1, 1]]"}
{"old_id": "sample_550", "code": "def xmq(bKV):\n    rkj = (57 + -57)\n    zrp = range(len(bKV))\n    while rkj < len(zrp):\n        IAw = zrp[rkj]\n        bKV.insert(IAw, bKV[IAw]**(91 + -89))\n        rkj = rkj + (81 + -80)\n    return bKV\nassert xmq([1, 2, 4]) == ", "input": "[1, 2, 4]", "output": "[1, 1, 1, 1, 2, 4]"}
{"old_id": "sample_551", "code": "def sHj(jlz):\n    aec = []\n    LMo = (52 + -52)\n    JnA = jlz\n    while LMo < len(JnA):\n        ukh = JnA[LMo]\n        zcm = (64 + -64)\n        oPw = jlz[ukh]\n        while zcm < len(oPw):\n            AeK = oPw[zcm]\n            if AeK not in aec:\n                aec.append(AeK)\n            zcm = zcm + (69 + -68)\n        LMo = LMo + (71 + -70)\n    return sorted(aec)\nassert sHj({'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}) == ", "input": "{'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}", "output": "['a', 'b', 'c', 'inf']"}
{"old_id": "sample_552", "code": "def FwM(emd):\n    veF = {}\n    WQf = (26 + -26)\n    Zjs = list(emd.items())\n    while WQf < len(Zjs):\n        ZPf, EdK = Zjs[WQf]\n        if isinstance(ZPf, float):\n            Hpv = (97 + -97)\n            JHo = EdK\n            while Hpv < len(JHo):\n                zbp = JHo[Hpv]\n                veF[zbp] = ZPf\n                Hpv = Hpv + (100 + -99)\n        else:\n            veF[ZPf] = EdK\n        WQf = WQf + (58 + -57)\n    return veF\nassert FwM({2: 0.76, 5: [3, 6, 9, 12]}) == ", "input": "{2: 0.76, 5: [3, 6, 9, 12]}", "output": "{2: 0.76, 5: [3, 6, 9, 12]}"}
{"old_id": "sample_553", "code": "def srX(Opz, count):\n    lcz = (14 + -14)\n    BUR = range(count)\n    while lcz < len(BUR):\n        ReX = BUR[lcz]\n        Opz = Opz[::-(87 + -86)]\n        lcz = lcz + (82 + -81)\n    return Opz\nassert srX('439m2670hlsw', 3) == ", "input": "'439m2670hlsw', 3", "output": "'wslh0762m934'"}
{"old_id": "sample_556", "code": "def hFG(XMI):\n    iPc = (25 + -25)\n    zHY = range(len(XMI))\n    while iPc < len(zHY):\n        kTj = zHY[iPc]\n        if XMI[kTj] == ' ':\n            XMI = XMI.replace(' ', '\\t', (98 + -97))\n        iPc = iPc + (97 + -96)\n    return XMI.expandtabs((84 + -80))\nassert hFG('\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te') == ", "input": "'\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'", "output": "'\\n\\n        z   d\\ng\\n            e'"}
{"old_id": "sample_558", "code": "def XgC(MOS, sEm):\n    cvg = (23 + -23)\n    vHx = sEm\n    while cvg < len(vHx):\n        Xaw = vHx[cvg]\n        MOS.pop(MOS.index(Xaw))\n        cvg = cvg + (82 + -81)\n    MOS.sort()\n    bOC = (33 + -33)\n    tXt = sEm\n    while bOC < len(tXt):\n        Xaw = tXt[bOC]\n        MOS += [Xaw]\n        bOC = bOC + (78 + -77)\n    aBJ = (91 + -91)\n    kNb = range(len(MOS)-(34 + -33))\n    while aBJ < len(kNb):\n        PXO = kNb[aBJ]\n        if MOS[PXO] > MOS[PXO+(1 + 0)]:\n            return False\n        aBJ = aBJ + (9 + -8)\n    return True\nassert XgC([3, 1, 2, 1, 4, 1], [1]) == ", "input": "[3, 1, 2, 1, 4, 1], [1]", "output": "False"}
{"old_id": "sample_560", "code": "def xLH(vwT):\n    aJE = (86 + -86)\n    if vwT.islower():\n        VWg = (86 + -86)\n        dgC = vwT\n        while VWg < len(dgC):\n            Fup = dgC[VWg]\n            if int(Fup) in list(range((50 + 40))):\n                aJE+=(3 + -2)\n            VWg = VWg + (25 + -24)\n    return aJE\nassert xLH(\"591237865\") == ", "input": "\"591237865\"", "output": "0"}
{"old_id": "sample_563", "code": "def geQ(doE, oBj):\n    CVj = []\n    vmv = (65 + -65)\n    cnF = range(len(oBj))\n    while vmv < len(cnF):\n        KVs = cnF[vmv]\n        CVj.append(doE.count(oBj[KVs]))\n        vmv = vmv + (43 + -42)\n    return sum(CVj)\nassert geQ('jivespdcxc', 'sx') == ", "input": "'jivespdcxc', 'sx'", "output": "2"}
{"old_id": "sample_568", "code": "def YYr(WbR):\n    zfh = (36 + -35)\n    AMl = (82 + -82)\n    DXw = '1234567890'\n    while AMl < len(DXw):\n        Uyl = DXw[AMl]\n        WbR = WbR.replace(Uyl,'')\n        if len(WbR) == (73 + -73): break\n        WbR = WbR[zfh:] + WbR[:zfh]\n        zfh += (27 + -26)\n        AMl = AMl + (99 + -98)\n    return WbR\nassert YYr('bwmm7h') == ", "input": "'bwmm7h'", "output": "'mhbwm'"}
{"old_id": "sample_569", "code": "def iaj(Ezv):\n    RaQ = {}\n    PVD = (62 + -62)\n    Qiu = Ezv\n    while PVD < len(Qiu):\n        HSs = Qiu[PVD]\n        if HSs in RaQ:\n            RaQ[HSs] += (72 + -71)\n        else:\n            RaQ[HSs] = (19 + -18)\n        PVD = PVD + (58 + -57)\n    return sum(RaQ.values())\nassert iaj(\"11 1 1\") == ", "input": "\"11 1 1\"", "output": "6"}
{"old_id": "sample_572", "code": "def rbF(PBr, ibx):\n    aDa = {}\n    Fge = list(PBr.items())\n    Lta = (6 + -6)\n    fiQ = range(len(Fge) - (49 + -48), ibx - (66 + -65), -(51 + -50))\n    while Lta < len(fiQ):\n        NMH = fiQ[Lta]\n        aDa[Fge[NMH]] = None\n        Lta = Lta + (52 + -51)\n    return Fge[ibx:] + list(aDa.items())\nassert rbF({1: 9, 2: 10, 3: 1}, 1) == ", "input": "{1: 9, 2: 10, 3: 1}, 1", "output": "[(2, 10), (3, 1), ((3, 1), None), ((2, 10), None)]"}
{"old_id": "sample_576", "code": "def bVc(KnW, JPs):\n    beK = ['x']\n    DgF = (8 + -8)\n    kmW = range((82 + -81), len(KnW) + (8 + -7))\n    while DgF < len(kmW):\n        CKM = kmW[DgF]\n        if CKM % (38 + -36) != (46 + -46):\n            beK.append(KnW[CKM - (30 + -29)] * -(94 + -92))\n        else:\n            beK.append(JPs)\n        DgF = DgF + (26 + -25)\n    return beK\nassert bVc([1, 2, 3], -1) == ", "input": "[1, 2, 3], -1", "output": "['x', -2, -1, -6]"}
{"old_id": "sample_577", "code": "def fqZ(items):\n    jxp = []\n    VCK = (59 + -59)\n    Jms = items\n    while VCK < len(Jms):\n        hsh = Jms[VCK]\n        NTn = dict(items).copy()\n        NTn.popitem()\n        jxp.append(NTn)\n        items = NTn\n        VCK = VCK + (72 + -71)\n    return jxp\nassert fqZ([(1, 'pos')]) == ", "input": "[(1, 'pos')]", "output": "[{}]"}
{"old_id": "sample_578", "code": "def iDq(crU):\n    zvH = (61 + -61)\n    oLC = list(crU.items())\n    while zvH < len(oLC):\n        uhv, cTI = oLC[zvH]\n        if cTI >= (61 + -61):\n            crU[uhv] = -cTI\n        zvH = zvH + (5 + -4)\n    return crU\nassert iDq({'R': 0, 'T': 3, 'F': -6, 'K': 0}) == ", "input": "{'R': 0, 'T': 3, 'F': -6, 'K': 0}", "output": "{'R': 0, 'T': -3, 'F': -6, 'K': 0}"}
{"old_id": "sample_581", "code": "def hlu(mYl, oUv):\n    PYx = len(mYl)\n    uWT = list(mYl)\n    oUv = list(oUv)\n    vzs = (99 + -99)\n    cPG = range(len(oUv))\n    while vzs < len(cPG):\n        neT = cPG[vzs]\n        uWT.insert((neT * PYx - (71 + -70)) // (25 + -23) + (neT + (16 + -15)) // (42 + -40), oUv[neT])\n        vzs = vzs + (92 + -91)\n    return ''.join(uWT)\nassert hlu('akoon', 'sXo') == ", "input": "'akoon', 'sXo'", "output": "'akoXoosn'"}
{"old_id": "sample_582", "code": "def hlm(FSb, Ueg):\n    RhG = []\n    HSJ = (39 + -39)\n    QRe = range(FSb)\n    while HSJ < len(QRe):\n        ftV = QRe[HSJ]\n        RhG.append(Ueg)\n        HSJ = HSJ + (55 + -54)\n    return RhG\nassert hlm(7, 5) == ", "input": "7, 5", "output": "[5, 5, 5, 5, 5, 5, 5]"}
{"old_id": "sample_583", "code": "def zuQ(JBW, nPZ):\n    uUn = []\n    qjP = (94 + -94)\n    AUY = JBW.splitlines()\n    while qjP < len(AUY):\n        iyP = AUY[qjP]\n        if len(iyP) > (32 + -32) and iyP[(90 + -90)] == nPZ:\n            uUn.append(iyP.lower())\n        else:\n            uUn.append(iyP.upper())\n        qjP = qjP + (95 + -94)\n    return \"\\n\".join(uUn)\nassert zuQ(\"t\\nza\\na\", \"t\") == ", "input": "\"t\\nza\\na\", \"t\"", "output": "'t\\nZA\\nA'"}
{"old_id": "sample_585", "code": "def lEO(brG):\n    count = brG.count(brG[(21 + -21)])\n    UbN = list(brG)\n    vrs = (36 + -36)\n    seJ = range(count)\n    while vrs < len(seJ):\n        wat = seJ[vrs]\n        UbN.remove(UbN[(76 + -76)])\n        vrs = vrs + (35 + -34)\n    return ''.join(UbN)\nassert lEO(';,,,?') == ", "input": "';,,,?'", "output": "',,,?'"}
{"old_id": "sample_590", "code": "def RLR(wKH):\n    tVA = (88 + -88)\n    tgT = range((71 + -61), (75 + -75), -(48 + -47))\n    while tVA < len(tgT):\n        CJk = tgT[tVA]\n        wKH = wKH.lstrip(str(CJk))\n        tVA = tVA + (14 + -13)\n    return wKH\nassert RLR(\"25000   $\") == ", "input": "\"25000   $\"", "output": "'5000   $'"}
{"old_id": "sample_591", "code": "def rAq(RzK): \n    HMB = [(85 + -85)] * (89 + -80) \n    kDe = [] \n    wac = (47 + -47)\n    USe = RzK\n    while wac < len(USe):\n        cyj = USe[wac]\n        HMB[cyj - (55 + -54)] += (65 + -64) \n        wac = wac + (55 + -54)\n    SAn = (58 + -58)\n    PZE = range(len(HMB))\n    while SAn < len(PZE):\n        DyY = PZE[SAn]\n        while HMB[DyY] > (62 + -62): \n            HMB[DyY] -= (29 + -28) \n            kDe.append(DyY + (13 + -12))\n        SAn = SAn + (23 + -22)\n    return HMB, kDe\nassert rAq([6, 3, 0, 7, 4, 8]) == ", "input": "[6, 3, 0, 7, 4, 8]", "output": "([0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 6, 7, 8, 9])"}
{"old_id": "sample_592", "code": "def iOf(Meo):\n    CJt = []\n    syy = (67 + -67)\n    RfL = list(enumerate(Meo))\n    while syy < len(RfL):\n        CIS, HBF = RfL[syy]\n        CJt.append(Meo[len(Meo)-(77 + -76)-CIS])\n        syy = syy + (58 + -57)\n    return CJt\nassert iOf([11, 3]) == ", "input": "[11, 3]", "output": "[3, 11]"}
{"old_id": "sample_593", "code": "def Sow(RzH, jgb):\n    iHL = len(RzH) - (80 + -79)\n    iAp = (60 + -60)\n    iGw = range(-len(RzH), (8 + -8))\n    while iAp < len(iGw):\n        yXO = iGw[iAp]\n        RzH.insert(iHL, RzH[yXO])\n        iAp = iAp + (14 + -13)\n    return RzH\nassert Sow([], 14) == ", "input": "[], 14", "output": "[]"}
{"old_id": "sample_599", "code": "def CMP(aPm, XcT):\n    aPm = XcT.join(aPm)\n    fLx = []\n    xRT = (11 + -11)\n    ico = range((52 + -51), len(aPm)+(52 + -51), (97 + -95))\n    while xRT < len(ico):\n        Qlc = ico[xRT]\n        fLx.append(aPm[Qlc-(35 + -34):][:Qlc])\n        fLx.append(aPm[Qlc-(25 + -24):][Qlc:])\n        xRT = xRT + (84 + -83)\n    return fLx\nassert CMP([\"a\", \"b\", \"c\"], \" \") == ", "input": "[\"a\", \"b\", \"c\"], \" \"", "output": "['a', ' b c', 'b c', '', 'c', '']"}
{"old_id": "sample_600", "code": "def srb(XYJ):\n    gOc = list(map(lambda Ohu: 'n'*Ohu, XYJ))\n    lLr = []\n    gIL = (88 + -88)\n    rby = gOc\n    while gIL < len(rby):\n        zsL = rby[gIL]\n        lLr.append(zsL)\n        gIL = gIL + (63 + -62)\n    return lLr\nassert srb([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_601", "code": "def auw(sam):\n    WbR = (74 + -69)\n    mRb = []\n    Eli = (86 + -86)\n    dPU = sam\n    while Eli < len(dPU):\n        tvu = dPU[Eli]\n        if tvu.lower() in 'aeiouy':\n            mRb.append(tvu.upper() * WbR)\n        else:\n            mRb.append(tvu * WbR)\n        Eli = Eli + (87 + -86)\n    return ' '.join(mRb)\nassert auw('csharp') == ", "input": "'csharp'", "output": "'ccccc sssss hhhhh AAAAA rrrrr ppppp'"}
{"old_id": "sample_607", "code": "def cVZ(KWv):\n    PRK = (46 + -46)\n    sCs = ['.', '!', '?']\n    while PRK < len(sCs):\n        lvn = sCs[PRK]\n        if KWv.endswith(lvn):\n            return True\n        PRK = PRK + (77 + -76)\n    return False\nassert cVZ('. C.') == ", "input": "'. C.'", "output": "True"}
{"old_id": "sample_610", "code": "def pHd(keys, NjM):\n    RlJ = dict.fromkeys(keys, NjM)\n    XIn = (49 + -49)\n    AKY = list(enumerate(RlJ.copy(), (70 + -69)))\n    while XIn < len(AKY):\n        tXx, eLV = AKY[XIn]\n        if RlJ[eLV] == RlJ[tXx]:\n            del RlJ[tXx]\n        XIn = XIn + (65 + -64)\n    return RlJ\nassert pHd([1, 2, 1, 1], 3) == ", "input": "[1, 2, 1, 1], 3", "output": "{}"}
{"old_id": "sample_613", "code": "def nPE(obY):\n    yhD = ''\n    Npu = (len(obY) - (15 + -14)) // (76 + -74)\n    wZA = (2 + -2)\n    GDu = range(Npu)\n    while wZA < len(GDu):\n        gBB = GDu[wZA]\n        yhD += obY[gBB]\n        wZA = wZA + (31 + -30)\n    IvF = (63 + -63)\n    XcD = range(Npu, len(obY)-(50 + -49))\n    while IvF < len(XcD):\n        gBB = XcD[IvF]\n        yhD += obY[Npu + len(obY) - (34 + -33) - gBB]\n        IvF = IvF + (79 + -78)\n    return yhD.ljust(len(obY), obY[-(35 + -34)])\nassert nPE('eat!') == ", "input": "'eat!'", "output": "'e!t!'"}
{"old_id": "sample_616", "code": "def fOx(MWb):\n    PnB = list(MWb)\n    Hgf = (11 + -11)\n    Svo = (21 + -21)\n    EMO = range((51 + -51), len(PnB) - (13 + -12))\n    while Svo < len(EMO):\n        muP = EMO[Svo]\n        if PnB[muP - (7 + -5) if muP - (28 + -26) >= (45 + -45) else (24 + -24)] == '\\t':\n            Hgf += ((23 + -22) + PnB[muP - (38 + -37)].count('\\t')) * (73 + -70)\n        PnB[muP] = '[' + PnB[muP] + ']'\n        Svo = Svo + (15 + -14)\n    return ''.join(PnB).expandtabs((30 + -26) + Hgf)\nassert fOx('\\n\\ny\\n') == ", "input": "'\\n\\ny\\n'", "output": "'[\\n][\\n][y]\\n'"}
{"old_id": "sample_623", "code": "def enb(mAt, JOK):\n    Tnn = (83 + -83)\n    CAt = JOK\n    while Tnn < len(CAt):\n        nzr = CAt[Tnn]\n        if nzr == '@':\n            mAt = mAt[::-(99 + -98)]\n        elif nzr == '~':\n            mAt = mAt.upper()\n        elif mAt and mAt[len(mAt)-(2 + -1)] == nzr:\n            mAt = mAt[(54 + -54):len(mAt)-(37 + -36)]\n        Tnn = Tnn + (21 + -20)\n    return mAt\nassert enb('hi~!', ['~', '`', '!', '&']) == ", "input": "'hi~!', ['~', '`', '!', '&']", "output": "'HI~'"}
{"old_id": "sample_625", "code": "def sDL(vhP):\n    count = (19 + -19)\n    ccQ = (75 + -75)\n    uTH = vhP\n    while ccQ < len(uTH):\n        oUt = uTH[ccQ]\n        if oUt in '.?!.,':\n            count += (18 + -17)\n        ccQ = ccQ + (78 + -77)\n    return count\nassert sDL(\"bwiajegrwjd??djoda,?\") == ", "input": "\"bwiajegrwjd??djoda,?\"", "output": "4"}
{"old_id": "sample_630", "code": "def hGV(aWj, lcW):\n    CUb = dict(aWj)\n    aJs = (42 + -42)\n    MIe = list(lcW.items())\n    while aJs < len(MIe):\n        ohp, TWI = MIe[aJs]\n        CUb[TWI] = ohp\n        aJs = aJs + (71 + -70)\n    return CUb\nassert hGV({1: -9, 0: -7}, {1: 2, 0: 3}) == ", "input": "{1: -9, 0: -7}, {1: 2, 0: 3}", "output": "{1: -9, 0: -7, 2: 1, 3: 0}"}
{"old_id": "sample_632", "code": "def NhB(list):\n    mYM = (25 + -25)\n    xhg = range(len(list) - (16 + -15), (43 + -43), -(85 + -84))\n    while mYM < len(xhg):\n        IGi = xhg[mYM]\n        iWJ = (64 + -64)\n        pMW = range(IGi)\n        while iWJ < len(pMW):\n            Pjc = pMW[iWJ]\n            if list[Pjc] > list[Pjc + (26 + -25)]:\n                list[Pjc], list[Pjc + (40 + -39)] = list[Pjc + (80 + -79)], list[Pjc]\n                list.sort()\n            iWJ = iWJ + (90 + -89)\n        mYM = mYM + (6 + -5)\n    return list\nassert NhB([63, 0, 1, 5, 9, 87, 0, 7, 25, 4]) == ", "input": "[63, 0, 1, 5, 9, 87, 0, 7, 25, 4]", "output": "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]"}
{"old_id": "sample_635", "code": "def Orf(LCh):\n    EXY = ['-', '_', '+', '.', '/', ' ']\n    LCh = LCh.upper()\n    WYD = (92 + -92)\n    Nxn = LCh\n    while WYD < len(Nxn):\n        mTR = Nxn[WYD]\n        if mTR.isalnum() == False and mTR not in EXY:\n            return False\n        WYD = WYD + (78 + -77)\n    return True\nassert Orf(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\") == ", "input": "\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"", "output": "False"}
{"old_id": "sample_637", "code": "def Dtw(uAi):\n    uAi = uAi.split(' ')\n    CAY = (25 + -25)\n    vym = uAi\n    while CAY < len(vym):\n        hbO = vym[CAY]\n        if not hbO.isnumeric():\n            return 'no'\n        CAY = CAY + (23 + -22)\n    return 'yes'\nassert Dtw('03625163633 d') == ", "input": "'03625163633 d'", "output": "'no'"}
{"old_id": "sample_640", "code": "def tba(kob):\n    noC = (43 + -43)\n    if kob[(85 + -85)] in kob[(65 + -64):]:\n        noC += (25 + -24)\n    Hbv = (25 + -25)\n    hel = range((84 + -84), len(kob)-(55 + -54))\n    while Hbv < len(hel):\n        hlW = hel[Hbv]\n        if kob[hlW] in kob[hlW+(15 + -14):]:\n            noC += (42 + -41)\n        Hbv = Hbv + (75 + -74)\n    return noC\nassert tba(\"3eeeeeeoopppppppw14film3oee3\") == ", "input": "\"3eeeeeeoopppppppw14film3oee3\"", "output": "18"}
{"old_id": "sample_646", "code": "def siR(kHY, count):\n    uLH = (73 + -73)\n    GRb = range(count)\n    while uLH < len(GRb):\n        fQw = GRb[uLH]\n        kHY = ''.join(reversed(kHY))\n        uLH = uLH + (91 + -90)\n    return kHY\nassert siR('aBc, ,SzY', 2) == ", "input": "'aBc, ,SzY', 2", "output": "'aBc, ,SzY'"}
{"old_id": "sample_652", "code": "def nHO(xwR):\n    if not xwR or not xwR[(35 + -35)].isnumeric:\n        return 'INVALID'\n    NBL = (23 + -23)\n    UWi = (1 + -1)\n    Exn = range(len(xwR))\n    while UWi < len(Exn):\n        aiK = Exn[UWi]\n        NBL = NBL * (97 + -87) + int(xwR[aiK])\n        UWi = UWi + (82 + -81)\n    return str(NBL)\nassert nHO('3') == ", "input": "'3'", "output": "'3'"}
{"old_id": "sample_653", "code": "def BLV(UDm, fzd):\n    WSv = UDm\n    LTT = (89 + -89)\n    UkH = UDm\n    while LTT < len(UkH):\n        JUr = UkH[LTT]\n        WSv = WSv.replace(JUr, \"\")\n        LTT = LTT + (92 + -91)\n    return len(WSv.split(fzd))\nassert BLV(\"c, c, c ,c, c\", \"c\") == ", "input": "\"c, c, c ,c, c\", \"c\"", "output": "1"}
{"old_id": "sample_656", "code": "def OmC(PWN):\n    jHZ = [] \n    odL = (65 + -65)\n    XeN = range(len(PWN))\n    while odL < len(XeN):\n        WYe = XeN[odL]\n        if PWN[WYe] in jHZ:\n            return 'no'\n        jHZ.append(PWN[WYe]) \n        odL = odL + (39 + -38)\n    return 'yes'\nassert OmC(['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']) == ", "input": "['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']", "output": "'yes'"}
{"old_id": "sample_657", "code": "def fxj(Bsa):\n    SER = (49 + -49)\n    xcx = '!.?,:;'\n    while SER < len(xcx):\n        jME = xcx[SER]\n        if Bsa.count(jME) > (70 + -69):\n            return 'no'\n        if Bsa.endswith(jME):\n            return 'no'\n        SER = SER + (50 + -49)\n    return Bsa.title()\nassert fxj(\"djhasghasgdha\") == ", "input": "\"djhasghasgdha\"", "output": "'Djhasghasgdha'"}
{"old_id": "sample_658", "code": "def XWg(oBN, lvi):\n    uKE = []\n    ClG = (52 + -52)\n    AlJ = lvi\n    while ClG < len(AlJ):\n        Adq = AlJ[ClG]\n        uKE.append(oBN.get(Adq))\n        ClG = ClG + (9 + -8)\n    return uKE\nassert XWg({3: \"swims like a bull\"}, [3, 2, 'c', True, 5]) == ", "input": "{3: \"swims like a bull\"}, [3, 2, 'c', True, 5]", "output": "['swims like a bull', None, None, None, None]"}
{"old_id": "sample_659", "code": "def yVY(Lly):\n    lKd = []\n    QSC = (41 + -41)\n    Dds = Lly\n    while QSC < len(Dds):\n        FUE = Dds[QSC]\n        if not FUE.isupper():\n            lKd.append(FUE[:(44 + -42)] + FUE[-(18 + -15):])\n        QSC = QSC + (34 + -33)\n    return len(lKd)\nassert yVY(['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']) == ", "input": "['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']", "output": "4"}
{"old_id": "sample_660", "code": "def aYL(beD):\n    IUy = [(35 + -34)]\n    eWL = IUy\n    uJy = (78 + -78)\n    sgI = range(beD)\n    while uJy < len(sgI):\n        IRz = sgI[uJy]\n        eWL = [(57 + -56)] + [tPh+mpE for tPh, mpE in zip(eWL, eWL[(21 + -20):])]\n        IUy.append(eWL[-(60 + -59)])\n        uJy = uJy + (25 + -24)\n    return sum(IUy)\nassert aYL(3) == ", "input": "3", "output": "4"}
{"old_id": "sample_664", "code": "def UVG(Wug):\n    MgX = \"\"\n    EoK = (50 + -50)\n    gBV = Wug\n    while EoK < len(gBV):\n        ndw = gBV[EoK]\n        MgX += ndw + \" \"\n        EoK = EoK + (61 + -60)\n    return MgX\nassert UVG({\"3\":\"3\",\"4\":\"5\"}) == ", "input": "{\"3\":\"3\",\"4\":\"5\"}", "output": "'3 4 '"}
{"old_id": "sample_665", "code": "def XmT(nuK):\n    IBi = \"\"\n    dNp = (12 + -12)\n    YFr = nuK\n    while dNp < len(YFr):\n        EAc = YFr[dNp]\n        if nuK.count(EAc) % (99 + -97) == (57 + -57):\n            IBi += EAc.upper()\n        else:\n            IBi += EAc\n        dNp = dNp + (91 + -90)\n    return IBi\nassert XmT(\"acbced\") == ", "input": "\"acbced\"", "output": "'aCbCed'"}
{"old_id": "sample_666", "code": "def znv(gSJ, UnU):\n    GiT = (16 + -16)\n    Kzz = (72 + -72)\n    IdF = gSJ\n    while Kzz < len(IdF):\n        NBz = IdF[Kzz]\n        if gLA := len(gSJ[NBz])+len(UnU.get(NBz, [])):\n            if gLA > GiT:\n                GiT = gLA\n        Kzz = Kzz + (24 + -23)\n    return GiT\nassert znv({ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }) == ", "input": "{ 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }", "output": "4"}
{"old_id": "sample_667", "code": "def hlv(VSK):\n    jXn = []\n    rLN = (33 + -33)\n    uBe = range(len(VSK) // (40 + -37))\n    while rLN < len(uBe):\n        yjd = uBe[rLN]\n        jXn.append(hlv\"< {text[i * (53 + -50): i * (38 + -35) + (96 + -93)]} level={i} >\")\n        rLN = rLN + (39 + -38)\n    AKx = VSK[len(VSK) // (26 + -23) * (46 + -43):]\n    jXn.append(hlv\"< {last_item} level={len(text) // (84 + -81)} >\")\n    return jXn\nassert hlv('C7') == ", "input": "'C7'", "output": "['< C7 level=0 >']"}
{"old_id": "sample_671", "code": "def eDT(VxL, AlL, cQw):\n    ypH = []\n    NuA = []\n    lCG = (90 + -90)\n    JpT = range(len(AlL))\n    while lCG < len(JpT):\n        riD = JpT[lCG]\n        ypH.append(AlL[riD])\n        NuA.append(cQw[riD])\n        lCG = lCG + (17 + -16)\n    zmW = VxL.maketrans(dict(zip(ypH, NuA)))\n    return VxL.translate(zmW)\nassert eDT(\"ewriyat emf rwto segya\", \"tey\", \"dgo\") == ", "input": "\"ewriyat emf rwto segya\", \"tey\", \"dgo\"", "output": "'gwrioad gmf rwdo sggoa'"}
{"old_id": "sample_674", "code": "def yAQ(OQR):\n    lRG = list(OQR)\n    Vvn = (86 + -86)\n    Ghz = range(len(lRG)-(77 + -76), -(97 + -96), -(28 + -27))\n    while Vvn < len(Ghz):\n        EtW = Ghz[Vvn]\n        if len(lRG) <= (70 + -69): break\n        if lRG[EtW] not in 'zyxwvutsrqponmlkjihgfedcba': lRG.pop(lRG[EtW])\n        Vvn = Vvn + (83 + -82)\n    return ''.join(lRG)\nassert yAQ('qq') == ", "input": "'qq'", "output": "'qq'"}
{"old_id": "sample_677", "code": "def rVq(hnE, vnL):\n    vnL = -vnL if vnL < (14 + -14) else vnL\n    vAi = ''\n    NuA = (56 + -56)\n    kkx = range(vnL)\n    while NuA < len(kkx):\n        JAj = kkx[NuA]\n        if hnE[JAj % len(hnE)] != ' ':\n            vAi += hnE[JAj % len(hnE)]\n        else:\n            break\n        NuA = NuA + (28 + -27)\n    return vAi\nassert rVq('I got 1 and 0.', 5) == ", "input": "'I got 1 and 0.', 5", "output": "'I'"}
{"old_id": "sample_678", "code": "def aXM(qIQ):\n    zNW = dict()\n    qLK = (34 + -34)\n    SPs = qIQ.lower()\n    while qLK < len(SPs):\n        OmW = SPs[qLK]\n        if OmW in zNW:\n            zNW[OmW] += (97 + -96)\n        else:\n            zNW[OmW] = (69 + -68)\n        qLK = qLK + (69 + -68)\n    return zNW\nassert aXM(\"HI\") == ", "input": "\"HI\"", "output": "{'h': 1, 'i': 1}"}
{"old_id": "sample_679", "code": "def hna(nsO):\n    if nsO == '':\n        return False\n    Twr = nsO[(86 + -86)]\n    if nsO[(81 + -81)].isdigit():\n        return False\n    PwN = (31 + -31)\n    ZOJ = nsO\n    while PwN < len(ZOJ):\n        fwz = ZOJ[PwN]\n        if (fwz != '_') and not fwz.isidentifier():\n            return False\n        PwN = PwN + (17 + -16)\n    return True\nassert hna('meet') == ", "input": "'meet'", "output": "True"}
{"old_id": "sample_680", "code": "def MbJ(cMI):\n    aFa = ''\n    ngB = (86 + -86)\n    IKD = range(len(cMI))\n    while ngB < len(IKD):\n        ckl = IKD[ngB]\n        if cMI[ckl].isalnum():\n            aFa += cMI[ckl]\n        ngB = ngB + (73 + -72)\n    return aFa\nassert MbJ(\"we@32r71g72ug94=(823658*!@324\") == ", "input": "\"we@32r71g72ug94=(823658*!@324\"", "output": "'we32r71g72ug94823658324'"}
{"old_id": "sample_686", "code": "def NXc(ftD, aaW):\n\tfKu = {}\n\trAM = (85 + -85)\n\tzMA = aaW\n\twhile rAM < len(zMA):\n\t\tmPY = zMA[rAM]\n\t\tif ftD.get(mPY) is not None:\n\t\t\tfKu[mPY] = ftD[mPY]\n\t\trAM = rAM + (9 + -8)\n\n\treturn fKu.copy()\nassert NXc({\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]) == ", "input": "{\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]", "output": "{'lorem ipsum': 12, 'dolor': 23}"}
{"old_id": "sample_688", "code": "def tQk(MPv):\n    gVu = []\n    zKQ = (44 + -44)\n    QTB = MPv\n    while zKQ < len(QTB):\n        vmd = QTB[zKQ]\n        if vmd not in gVu:\n            gVu.append(vmd)\n        zKQ = zKQ + (7 + -6)\n    return gVu\nassert tQk([3, 1, 9, 0, 2, 0, 8]) == ", "input": "[3, 1, 9, 0, 2, 0, 8]", "output": "[3, 1, 9, 0, 2, 8]"}
{"old_id": "sample_689", "code": "def gfQ(iaa):\n    count = len(iaa)\n    vKx = iaa.copy()\n    bdo = (95 + -95)\n    pcQ = range((98 + -98), count, (58 + -56))\n    while bdo < len(pcQ):\n        RWX = pcQ[bdo]\n        vKx[RWX] *= (33 + -28)\n        bdo = bdo + (82 + -81)\n    return vKx\nassert gfQ([-3, -6, 2, 7]) == ", "input": "[-3, -6, 2, 7]", "output": "[-15, -6, 10, 7]"}
{"old_id": "sample_692", "code": "def aFn(PPY):\n    tfA = []\n    PPY.reverse()\n    XAI = (91 + -91)\n    OFO = range(len(PPY))\n    while XAI < len(OFO):\n        ElB = OFO[XAI]\n        if PPY[ElB] != (8 + -8):\n            tfA.append(PPY[ElB])\n        XAI = XAI + (85 + -84)\n    tfA.reverse()\n    return tfA\nassert aFn([]) == ", "input": "[]", "output": "[]"}
{"old_id": "sample_695", "code": "def Qwf(fRU):\n    DCh = {}\n    jOF = (8 + -8)\n    YFN = list(fRU.items())\n    while jOF < len(YFN):\n        rZe, CKX = YFN[jOF]\n        DCh.update({rZe: []})\n        JqS = (78 + -78)\n        ZnM = list(enumerate(CKX))\n        while JqS < len(ZnM):\n            XAo, Pum = ZnM[JqS]\n            DCh[rZe].append({})\n            VSf = (32 + -32)\n            Hqg = list(Pum.items())\n            while VSf < len(Hqg):\n                eQH, slb = Hqg[VSf]\n                DCh[rZe][XAo][eQH] = slb.copy()\n                VSf = VSf + (5 + -4)\n            JqS = JqS + (96 + -95)\n        jOF = jOF + (46 + -45)\n    return DCh\nassert Qwf({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_696", "code": "def lFD(nFm):\n    Edw = (12 + -12)\n    TTf = (22 + -22)\n    BAA = range((86 + -85), len(nFm))\n    while TTf < len(BAA):\n        SXM = BAA[TTf]\n        Edw += len(nFm.rpartition(nFm[SXM])[(24 + -24)])\n        TTf = TTf + (25 + -24)\n    return Edw\nassert lFD('wdj') == ", "input": "'wdj'", "output": "3"}
{"old_id": "sample_701", "code": "def tFN(deg, JOg):\n    MuM = (25 + -25)\n    YKY = JOg\n    while MuM < len(YKY):\n        Sdb = YKY[MuM]\n        deg = deg.rstrip(Sdb)\n        MuM = MuM + (83 + -82)\n    return deg\nassert tFN('31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')) == ", "input": "'31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')", "output": "'31849 let it!31849 pass!'"}
{"old_id": "sample_702", "code": "def VJr(KIO):\n    count = len(KIO)\n    NlI = (79 + -79)\n    pQN = range(len(KIO) - (6 + -5), -(65 + -64), -(79 + -78))\n    while NlI < len(pQN):\n        DoA = pQN[NlI]\n        KIO.insert(DoA, KIO.pop((79 + -79)))\n        NlI = NlI + (92 + -91)\n    return KIO\nassert VJr([0, -5, -4]) == ", "input": "[0, -5, -4]", "output": "[-4, -5, 0]"}
{"old_id": "sample_704", "code": "def EuD(LcM, EbW, JTW):\n    OeV = len(JTW)*EbW\n    aop = (81 + -81)\n    bYv = range(OeV - len(LcM))\n    while aop < len(bYv):\n        Ysp = bYv[aop]\n        LcM = JTW + LcM\n        aop = aop + (67 + -66)\n    return LcM\nassert EuD('.', 0, '99') == ", "input": "'.', 0, '99'", "output": "'.'"}
{"old_id": "sample_708", "code": "def YaB(ZFT):\n    ccv = list(ZFT)\n    eZH = (2 + -2)\n    pKO = reversed(range(len(ccv)))\n    while eZH < len(pKO):\n        wMo = pKO[eZH]\n        if ccv[wMo] != ' ':\n            break\n        ccv.pop(wMo)\n        eZH = eZH + (87 + -86)\n    return ''.join(ccv)\nassert YaB('    jcmfxv     ') == ", "input": "'    jcmfxv     '", "output": "'    jcmfxv'"}
{"old_id": "sample_712", "code": "def eOP(Nkj):\n    yHc = []\n    WPt = (53 + -53)\n    xZQ = Nkj.splitlines()\n    while WPt < len(xZQ):\n        rpP = xZQ[WPt]\n        if rpP == '':\n            break\n        yHc.append(list(list(rpP.rstrip())[::-(64 + -63)][rDJ]))\n        WPt = WPt + (100 + -99)\n    return yHc[::-(81 + -80)]\n\nrDJ = (8 + -8)\nassert eOP('A(hiccup)A') == ", "input": "'A(hiccup)A'", "output": "[['A']]"}
{"old_id": "sample_718", "code": "def SON(hEW):\n    vLY = hEW\n    Nnk = (70 + -70)\n    fRG = hEW\n    while Nnk < len(fRG):\n        UZI = fRG[Nnk]\n        hEW = hEW.replace(UZI, '')\n        Nnk = Nnk + (31 + -30)\n    return str(len(hEW)) + vLY\nassert SON('ThisIsSoAtrocious') == ", "input": "'ThisIsSoAtrocious'", "output": "'0ThisIsSoAtrocious'"}
{"old_id": "sample_719", "code": "def fnV(tAs):\n    Qrh = tAs.split(']')\n    zbL = []\n    CuI = (67 + -67)\n    WrL = (31 + -31)\n    NaI = Qrh\n    while WrL < len(NaI):\n        sog = NaI[WrL]\n        zbL.append(sog[(85 + -85)] + ' ' + '  ' * CuI + sog[(14 + -13):])\n        CuI += sog.count('{') - sog.count('}')\n        WrL = WrL + (42 + -41)\n    return '\\n'.join(zbL)\nassert fnV(\"if (x) {y = 1;} else {z = 1;}\") == ", "input": "\"if (x) {y = 1;} else {z = 1;}\"", "output": "'i f (x) {y = 1;} else {z = 1;}'"}
{"old_id": "sample_721", "code": "def TRl(gLr):\n    count = len(gLr)\n    jjE = (55 + -55)\n    pJP = range((23 + -21), count)\n    while jjE < len(pJP):\n        RNc = pJP[jjE]\n        gLr.sort()\n        jjE = jjE + (5 + -4)\n    return gLr\nassert TRl([-6, -5, -7, -8, 2]) == ", "input": "[-6, -5, -7, -8, 2]", "output": "[-8, -7, -6, -5, 2]"}
{"old_id": "sample_722", "code": "def FNa(ADX):\n    IWa = \"\"\n    bct = (66 + -66)\n    FUm = range(len(ADX))\n    while bct < len(FUm):\n        GGy = FUm[bct]\n        if ADX[GGy].isupper():\n            IWa += ADX[GGy].lower()\n        else:\n            IWa += ADX[GGy].upper()\n        bct = bct + (80 + -79)\n    return IWa\nassert FNa(',wPzPppdl/') == ", "input": "',wPzPppdl/'", "output": "',WpZpPPDL/'"}
{"old_id": "sample_724", "code": "def OsV(jHH, SjJ):\n    TKk = [len(jHH[jHH.index(SjJ) + len(SjJ):])]\n    wLh = (50 + -50)\n    led = jHH\n    while wLh < len(led):\n        uoA = led[wLh]\n        if uoA == SjJ:\n            TKk.append(len(jHH[jHH.index(SjJ) + len(SjJ):]))\n        wLh = wLh + (40 + -39)\n    return TKk\nassert OsV(\"010100\", \"010\") == ", "input": "\"010100\", \"010\"", "output": "[3]"}
{"old_id": "sample_726", "code": "def Dfj(RMb):\n    ddc = (46 + -46)\n    adk = (4 + -4)\n    TMY = RMb\n    while adk < len(TMY):\n        mgL = TMY[adk]\n        if mgL.isspace():\n            ddc += (59 + -58)\n        adk = adk + (44 + -43)\n    return ddc, len(RMb)\nassert Dfj(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\") == ", "input": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"", "output": "(2, 34)"}
{"old_id": "sample_728", "code": "def Azg(BGW):\n    cot = []\n    gzN = (50 + -50)\n    fMi = list(enumerate(BGW))\n    while gzN < len(fMi):\n        vUh, ieO = fMi[gzN]\n        if ieO == ieO.lower():\n            continue\n        if len(BGW) - (57 + -56) - vUh < BGW.rindex(ieO.lower()):\n            cot.append(ieO)\n        gzN = gzN + (64 + -63)\n    return ''.join(cot)\nassert Azg('ru') == ", "input": "'ru'", "output": "''"}
{"old_id": "sample_730", "code": "def NOH(Apr):\n    mkE = (61 + -61)\n    cxy = (46 + -46)\n    Xrj = (93 + -93)\n    yhr = Apr.split()\n    while Xrj < len(yhr):\n        hQJ = yhr[Xrj]\n        if len(hQJ) > mkE:\n            cxy += (84 + -83)\n            mkE = len(hQJ)\n        Xrj = Xrj + (21 + -20)\n    return cxy\nassert NOH(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\") == ", "input": "\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"", "output": "2"}
{"old_id": "sample_732", "code": "def XHr(ZXm):\n    ZXo = {}\n    lJD = (56 + -56)\n    Ord = list(ZXm.copy().items())\n    while lJD < len(Ord):\n        LJv, YQg = Ord[lJD]\n        ZXo[LJv] = YQg // (8 + -6)\n        lJD = lJD + (87 + -86)\n    return ZXo\nassert XHr({'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}) == ", "input": "{'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}", "output": "{'u': 10, 'v': 2, 'b': 3, 'w': 1, 'x': 1}"}
{"old_id": "sample_734", "code": "def kTy(cqX):\n    HIT = (90 + -90)\n    uxh = range(len(cqX) - (68 + -66), -(43 + -42), -(34 + -33))\n    while HIT < len(uxh):\n        tHs = uxh[HIT]\n        if cqX[tHs] % (73 + -71) == (7 + -7):\n            cqX.remove(cqX[tHs])\n        HIT = HIT + (4 + -3)\n    return cqX\nassert kTy([5, 3, 3, 7]) == ", "input": "[5, 3, 3, 7]", "output": "[5, 3, 3, 7]"}
{"old_id": "sample_736", "code": "def gNu(iLC, insert):\n    Dnf = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\n    eTb = ''\n    ncW = (50 + -50)\n    WIl = iLC\n    while ncW < len(WIl):\n        fnx = WIl[ncW]\n        if fnx in Dnf:\n            eTb += insert\n        else:\n            eTb += fnx\n        ncW = ncW + (20 + -19)\n    return eTb\nassert gNu('pi wa', 'chi') == ", "input": "'pi wa', 'chi'", "output": "'pichiwa'"}
{"old_id": "sample_737", "code": "def KgR(mhr):\n    Jar = (61 + -61)\n    bJm = (26 + -26)\n    xRY = mhr\n    while bJm < len(xRY):\n        rkR = xRY[bJm]\n        if str(rkR).isdecimal():\n            if Jar == (50 + -50):\n                Jar += (70 + -69)\n        bJm = bJm + (79 + -78)\n    return Jar\nassert KgR([0, 6, 2, -1, -2]) == ", "input": "[0, 6, 2, -1, -2]", "output": "1"}
{"old_id": "sample_738", "code": "def eRS(sSl, VuD):\n    byF = (94 + -94)\n    hmK = range(len(VuD))\n    while byF < len(hmK):\n        RSw = hmK[byF]\n        sSl = sSl.rstrip(VuD[RSw::len(VuD)])\n        byF = byF + (60 + -59)\n    return sSl\nassert eRS(\"r;r;r;r;r;r;r;r;r\", \"x.r\") == ", "input": "\"r;r;r;r;r;r;r;r;r\", \"x.r\"", "output": "'r;r;r;r;r;r;r;r;'"}
{"old_id": "sample_739", "code": "def RiS(QWV, fHY):\n    PIC = (23 + -23)\n    ayF = fHY\n    while PIC < len(ayF):\n        pjX = ayF[PIC]\n        if not QWV.startswith(pjX): return False\n        QWV = QWV[len(pjX):]\n        PIC = PIC + (29 + -28)\n    return True\nassert RiS('qwbnjrxs', ['jr', 'b', 'r', 'qw']) == ", "input": "'qwbnjrxs', ['jr', 'b', 'r', 'qw']", "output": "False"}
{"old_id": "sample_742", "code": "def BHg(oGB):\n    UjH = True\n    kAV = (66 + -66)\n    GUY = oGB\n    while kAV < len(GUY):\n        nkx = GUY[kAV]\n        if nkx.isdigit():\n            UjH = True\n        else:\n            UjH = False\n            break\n        kAV = kAV + (8 + -7)\n    return UjH\nassert BHg(\"-1-3\") == ", "input": "\"-1-3\"", "output": "False"}
{"old_id": "sample_746", "code": "def pmE(kGs):\n    values = kGs.values()\n    JUe = {}\n    tCU = (79 + -79)\n    dnF = values\n    while tCU < len(dnF):\n        kaz = dnF[tCU]\n        GGb = kaz.split('.')[(22 + -22)]+'@pinc.uk'\n        JUe[kaz] = GGb\n        tCU = tCU + (53 + -52)\n    return JUe\nassert pmE({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_747", "code": "def uhN(MIm):\n    if MIm == '42.42':\n        return True\n    ldL = (59 + -59)\n    DkA = range((96 + -93), len(MIm) - (75 + -72))\n    while ldL < len(DkA):\n        Gvi = DkA[ldL]\n        if MIm[Gvi] == '.' and MIm[Gvi - (83 + -80):].isdigit() and MIm[:Gvi].isdigit():\n            return True\n        ldL = ldL + (93 + -92)\n    return False\nassert uhN(\"123E-10\") == ", "input": "\"123E-10\"", "output": "False"}
{"old_id": "sample_749", "code": "def ojr(bZl, oPX):\n    aPL = \"\"\n    Lcr = bZl.split('\\n')\n    jaL = (1 + -1)\n    LNH = Lcr\n    while jaL < len(LNH):\n        fog = LNH[jaL]\n        aPL += fog.center(oPX)\n        aPL += '\\n'\n        jaL = jaL + (26 + -25)\n\n    # bCz iUG qWm maf mpc qtC\n    aPL = aPL[:-(6 + -5)]\n    return aPL\nassert ojr('l\\nl', 2) == ", "input": "'l\\nl', 2", "output": "'l \\nl '"}
{"old_id": "sample_750", "code": "def Yph(ciO, SMf):\n    Kyv = ''\n    UGZ = (73 + -73)\n    esx = SMf\n    while UGZ < len(esx):\n        cjd = esx[UGZ]\n        Hib = ciO.get(cjd)\n        if Hib is None:\n            Kyv += cjd\n        else:\n            Kyv += Hib\n        UGZ = UGZ + (80 + -79)\n    return Kyv\nassert Yph({}, 'hbd') == ", "input": "{}, 'hbd'", "output": "'hbd'"}
{"old_id": "sample_753", "code": "def DDg(MxQ):\n    values = list(MxQ.values())\n    XEv = {}\n    ybX = (51 + -51)\n    Cme = range((10 + 90))\n    while ybX < len(Cme):\n        KSJ = Cme[ybX]\n        if KSJ in values:\n            XEv[KSJ] = values.count(KSJ)\n        ybX = ybX + (91 + -90)\n    return XEv\nassert DDg({0: 0, 1: 0, 2: 0, 3: 0, 4: 0}) == ", "input": "{0: 0, 1: 0, 2: 0, 3: 0, 4: 0}", "output": "{0: 5}"}
{"old_id": "sample_767", "code": "def NbN(urw):\n    wiL = urw.strip().split(' ')\n    MbC = (68 + -68)\n    DpJ = range(len(wiL))\n    while MbC < len(DpJ):\n        slR = DpJ[MbC]\n        if wiL[slR].isdigit() is False:\n            return '-'\n        MbC = MbC + (52 + -51)\n    return \" \".join(wiL)\nassert NbN(\"d khqw whi fwi bbn 41\") == ", "input": "\"d khqw whi fwi bbn 41\"", "output": "'-'"}
{"old_id": "sample_769", "code": "def lAW(zWW):\n    JGj = [UKo for UKo in zWW]\n    ZCK = (1 + -1)\n    uXX = list(enumerate(JGj))\n    while ZCK < len(uXX):\n        CJY, UKo = uXX[ZCK]\n        JGj[CJY] = UKo.swapcase()\n        ZCK = ZCK + (19 + -18)\n    return ''.join(JGj)\nassert lAW('akA?riu') == ", "input": "'akA?riu'", "output": "'AKa?RIU'"}
{"old_id": "sample_770", "code": "def RZR(Wxt, Vef):\n    count = Wxt.count(Vef)\n    hFn = (29 + -29)\n    Wpr = range(count+(89 + -88), (52 + -52), -(44 + -43))\n    while hFn < len(Wpr):\n        ogo = Wpr[hFn]\n        Wxt = Wxt.center(len(Wxt)+ogo // len(Vef), Vef)\n        hFn = hFn + (27 + -26)\n    return Wxt\nassert RZR('$78'.upper(), '$') == ", "input": "'$78'.upper(), '$'", "output": "'$$78$$'"}
{"old_id": "sample_772", "code": "def enp(dHO):\n    jIG = ''\n    XmC = (14 + -14)\n    Gtx = dHO\n    while XmC < len(Gtx):\n        Hwb = Gtx[XmC]\n        if not Hwb.islower():\n            jIG += Hwb\n        XmC = XmC + (84 + -83)\n    return jIG\nassert enp('serjgpoDFdbcA.') == ", "input": "'serjgpoDFdbcA.'", "output": "'DFA.'"}
{"old_id": "sample_775", "code": "def qUO(zOf):\n    count = len(zOf)\n    mIz = (50 + -50)\n    baE = range((41 + -41), count // (5 + -3))\n    while mIz < len(baE):\n        InO = baE[mIz]\n        zOf[InO], zOf[count-InO-(77 + -76)] = zOf[count-InO-(10 + -9)], zOf[InO]\n        mIz = mIz + (26 + -25)\n    return zOf\nassert qUO([2, 6, 1, 3, 1]) == ", "input": "[2, 6, 1, 3, 1]", "output": "[1, 3, 1, 6, 2]"}
{"old_id": "sample_776", "code": "def pAs(hgr):\n    jiE = hgr.copy()\n    QGq = (45 + -45)\n    apB = jiE\n    while QGq < len(apB):\n        Xvd = apB[QGq]\n        if Xvd%(46 + -44) != (90 + -90):\n            del jiE[Xvd]\n            jiE['$'+str(Xvd)] = jiE[Xvd]\n        QGq = QGq + (6 + -5)\n    return jiE\nassert pAs({}) == ", "input": "{}", "output": "{}"}
{"old_id": "sample_777", "code": "def fjA(PYm, SKw):\n    SKw = SKw\n    iOu = (83 + -83)\n    Hmx = range(len(PYm))\n    while iOu < len(Hmx):\n        BMA = Hmx[iOu]\n        if SKw in PYm[BMA]:\n            PYm[BMA] = PYm[BMA].replace(SKw, \"\")\n        iOu = iOu + (55 + -54)\n    return PYm\nassert fjA([\"avc  a .d e\"], \"\") == ", "input": "[\"avc  a .d e\"], \"\"", "output": "['avc  a .d e']"}
{"old_id": "sample_780", "code": "def kYN(MLy):\n    Rvl = [(76 + -76)] * (40 + 261)\n    QOp = (56 + -56)\n    iSQ = MLy\n    while QOp < len(iSQ):\n        hzn = iSQ[QOp]\n        Rvl[hzn] += (38 + -37)\n        QOp = QOp + (84 + -83)\n\n    CSP = []\n    aDs = (65 + -65)\n    tDl = range(len(Rvl))\n    while aDs < len(tDl):\n        hzn = tDl[aDs]\n        if Rvl[hzn] >= (21 + -18):\n            CSP.append(str(hzn))\n        aDs = aDs + (96 + -95)\n    Rvl.clear()\n    return ' '.join(CSP)\nassert kYN([2, 3, 5, 2, 4, 5, 2, 89]) == ", "input": "[2, 3, 5, 2, 4, 5, 2, 89]", "output": "'2'"}
{"old_id": "sample_781", "code": "def rBk(ZdG, YGA):\n    if YGA not in ZdG:\n        return ''\n    ZdG = ZdG.partition(YGA)[(22 + -20)][::-(66 + -65)]\n    sDy = (73 + -73)\n    wHR = range(len(ZdG))\n    while sDy < len(wHR):\n        TtN = wHR[sDy]\n        ZdG = ZdG.partition(YGA)[(18 + -16)][::-(85 + -84)]\n        sDy = sDy + (89 + -88)\n    return ZdG\nassert rBk('shivajimonto6', '6') == ", "input": "'shivajimonto6', '6'", "output": "''"}
{"old_id": "sample_782", "code": "def kzD(input):\n    Lgj = (2 + -2)\n    JKU = input\n    while Lgj < len(JKU):\n        zhb = JKU[Lgj]\n        if zhb.isupper():\n            return False\n        Lgj = Lgj + (73 + -72)\n    return True\nassert kzD(\"a j c n x X k\") == ", "input": "\"a j c n x X k\"", "output": "False"}
{"old_id": "sample_783", "code": "def brh(Eqf, hUR):\n    RMF = len(hUR)\n    if RMF <= len(Eqf):\n        FIv = (1 + -1)\n        Kue = range(RMF)\n        while FIv < len(Kue):\n            wZV = Kue[FIv]\n            if hUR[RMF - wZV - (56 + -55)] != Eqf[len(Eqf) - wZV - (28 + -27)]:\n                return wZV\n            FIv = FIv + (29 + -28)\n    return RMF\nassert brh(\"managed\", \"\") == ", "input": "\"managed\", \"\"", "output": "0"}
{"old_id": "sample_785", "code": "def bjH(NEP):\n    ryS = ''\n    tku = (57 + -57)\n    vcJ = str(NEP)\n    while tku < len(vcJ):\n        qdF = vcJ[tku]\n        ryS += qdF.ljust(int(qdF) * (13 + -11))\n        tku = tku + (1 + 0)\n    return ryS\nassert bjH(1) == ", "input": "1", "output": "'1 '"}
{"old_id": "sample_793", "code": "def Nxc(list, Ikk, UIV):\n    count = (56 + -56)\n    CrH = (21 + -21)\n    bQX = range(Ikk, UIV)\n    while CrH < len(bQX):\n        xrT = bQX[CrH]\n        KmN = (71 + -71)\n        Mej = range(xrT, UIV)\n        while KmN < len(Mej):\n            pVc = Mej[KmN]\n            if list[xrT] != list[pVc]:\n                count += (37 + -36)\n            KmN = KmN + (67 + -66)\n        CrH = CrH + (95 + -94)\n    return count\nassert Nxc([1, 2, 4, 3, 2, 1], 0, 3) == ", "input": "[1, 2, 4, 3, 2, 1], 0, 3", "output": "3"}
{"old_id": "sample_794", "code": "def qVY(oFy):\n    Jam = []\n    Eyu = (60 + -60)\n    WUW = oFy\n    while Eyu < len(WUW):\n        kHj = WUW[Eyu]\n        if kHj.isalnum():\n            Jam.append(kHj)\n        Eyu = Eyu + (95 + -94)\n    return ''.join(Jam)\nassert qVY(\"\\\"\\\\%$ LeV nFl $%~ drP'\") == ", "input": "\"\\\"\\\\%$ normal chars $%~ qwet42'\"", "output": "'normalcharsqwet42'"}
{"old_id": "sample_797", "code": "def ONU(fsk):\n    Goa = []\n    Cih = (86 + -86)\n    jAs = sorted(fsk)\n    while Cih < len(jAs):\n        qYh = jAs[Cih]\n        Goa.append((qYh, fsk[qYh]))\n        Cih = Cih + (24 + -23)\n    return Goa\nassert ONU({'a': 1, 'b': 2, 'c': 3}) == ", "input": "{'a': 1, 'b': 2, 'c': 3}", "output": "[('a', 1), ('b', 2), ('c', 3)]"}
